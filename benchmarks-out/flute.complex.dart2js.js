// Generated by dart2js (, trust primitives, omit checks, lax runtime type, csp, intern-composite-values), the Dart to JavaScript compiler version: 3.10.0-37.0.dev.
// The code supports the following hooks:
// dartPrint(message):
//    if this function is defined it is called instead of the Dart [print]
//    method.
//
// dartMainRunner(main, args):
//    if this function is defined, the Dart [main] method will not be invoked
//    directly. Instead, a closure that will invoke [main], and its arguments
//    [args] is passed to [dartMainRunner].
//
// dartDeferredLibraryLoader(uri, successCallback, errorCallback, loadId, loadPriority):
//    if this function is defined, it will be called when a deferred library
//    is loaded. It should load and eval the javascript of `uri`, and call
//    successCallback. If it fails to do so, it should call errorCallback with
//    an error. The loadId argument is the deferred import that resulted in
//    this uri being loaded. The loadPriority argument is an arbitrary argument
//    string forwarded from the 'dart2js:load-priority' pragma option.
// dartDeferredLibraryMultiLoader(uris, successCallback, errorCallback, loadId, loadPriority):
//    if this function is defined, it will be called when a deferred library
//    is loaded. It should load and eval the javascript of every URI in `uris`,
//    and call successCallback. If it fails to do so, it should call
//    errorCallback with an error. The loadId argument is the deferred import
//    that resulted in this uri being loaded. The loadPriority argument is an
//    arbitrary argument string forwarded from the 'dart2js:load-priority'
//    pragma option.
//
// dartCallInstrumentation(id, qualifiedName):
//    if this function is defined, it will be called at each entry of a
//    method or constructor. Used only when compiling programs with
//    --experiment-call-instrumentation.
(function dartProgram() {
  function copyProperties(from, to) {
    var keys = Object.keys(from);
    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      to[key] = from[key];
    }
  }
  function mixinPropertiesHard(from, to) {
    var keys = Object.keys(from);
    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      if (!to.hasOwnProperty(key)) {
        to[key] = from[key];
      }
    }
  }
  function mixinPropertiesEasy(from, to) {
    Object.assign(to, from);
  }
  var supportsDirectProtoAccess = function() {
    var cls = function() {
    };
    cls.prototype = {p: {}};
    var object = new cls();
    if (!(Object.getPrototypeOf(object) && Object.getPrototypeOf(object).p === cls.prototype.p))
      return false;
    try {
      if (typeof navigator != "undefined" && typeof navigator.userAgent == "string" && navigator.userAgent.indexOf("Chrome/") >= 0)
        return true;
      if (typeof version == "function" && version.length == 0) {
        var v = version();
        if (/^\d+\.\d+\.\d+\.\d+$/.test(v))
          return true;
      }
    } catch (_) {
    }
    return false;
  }();
  function inherit(cls, sup) {
    cls.prototype.constructor = cls;
    cls.prototype["$is" + cls.name] = cls;
    if (sup != null) {
      if (supportsDirectProtoAccess) {
        Object.setPrototypeOf(cls.prototype, sup.prototype);
        return;
      }
      var clsPrototype = Object.create(sup.prototype);
      copyProperties(cls.prototype, clsPrototype);
      cls.prototype = clsPrototype;
    }
  }
  function inheritMany(sup, classes) {
    for (var i = 0; i < classes.length; i++) {
      inherit(classes[i], sup);
    }
  }
  function mixinEasy(cls, mixin) {
    mixinPropertiesEasy(mixin.prototype, cls.prototype);
    cls.prototype.constructor = cls;
  }
  function mixinHard(cls, mixin) {
    mixinPropertiesHard(mixin.prototype, cls.prototype);
    cls.prototype.constructor = cls;
  }
  function lazy(holder, name, getterName, initializer) {
    var uninitializedSentinel = holder;
    holder[name] = uninitializedSentinel;
    holder[getterName] = function() {
      if (holder[name] === uninitializedSentinel) {
        holder[name] = initializer();
      }
      holder[getterName] = function() {
        return this[name];
      };
      return holder[name];
    };
  }
  function lazyFinal(holder, name, getterName, initializer) {
    var uninitializedSentinel = holder;
    holder[name] = uninitializedSentinel;
    holder[getterName] = function() {
      if (holder[name] === uninitializedSentinel) {
        var value = initializer();
        if (holder[name] !== uninitializedSentinel) {
          A.throwLateFieldADI(name);
        }
        holder[name] = value;
      }
      var finalValue = holder[name];
      holder[getterName] = function() {
        return finalValue;
      };
      return finalValue;
    };
  }
  function makeConstList(list, rti) {
    if (rti != null)
      A._setArrayType(list, rti);
    list.$flags = 7;
    return list;
  }
  function convertToFastObject(properties) {
    function t() {
    }
    t.prototype = properties;
    new t();
    return properties;
  }
  function convertAllToFastObject(arrayOfObjects) {
    for (var i = 0; i < arrayOfObjects.length; ++i) {
      convertToFastObject(arrayOfObjects[i]);
    }
  }
  var functionCounter = 0;
  function instanceTearOffGetter(isIntercepted, parameters) {
    var cache = null;
    return isIntercepted ? function(receiver) {
      if (cache === null)
        cache = A.closureFromTearOff(parameters);
      return new cache(receiver, this);
    } : function() {
      if (cache === null)
        cache = A.closureFromTearOff(parameters);
      return new cache(this, null);
    };
  }
  function staticTearOffGetter(parameters) {
    var cache = null;
    return function() {
      if (cache === null)
        cache = A.closureFromTearOff(parameters).prototype;
      return cache;
    };
  }
  var typesOffset = 0;
  function tearOffParameters(container, isStatic, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex, needsDirectAccess) {
    if (typeof funType == "number") {
      funType += typesOffset;
    }
    return {co: container, iS: isStatic, iI: isIntercepted, rC: requiredParameterCount, dV: optionalParameterDefaultValues, cs: callNames, fs: funsOrNames, fT: funType, aI: applyIndex || 0, nDA: needsDirectAccess};
  }
  function installStaticTearOff(holder, getterName, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex) {
    var parameters = tearOffParameters(holder, true, false, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex, false);
    var getterFunction = staticTearOffGetter(parameters);
    holder[getterName] = getterFunction;
  }
  function installInstanceTearOff(prototype, getterName, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex, needsDirectAccess) {
    isIntercepted = !!isIntercepted;
    var parameters = tearOffParameters(prototype, false, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex, !!needsDirectAccess);
    var getterFunction = instanceTearOffGetter(isIntercepted, parameters);
    prototype[getterName] = getterFunction;
  }
  function setOrUpdateInterceptorsByTag(newTags) {
    var tags = init.interceptorsByTag;
    if (!tags) {
      init.interceptorsByTag = newTags;
      return;
    }
    copyProperties(newTags, tags);
  }
  function setOrUpdateLeafTags(newTags) {
    var tags = init.leafTags;
    if (!tags) {
      init.leafTags = newTags;
      return;
    }
    copyProperties(newTags, tags);
  }
  function updateTypes(newTypes) {
    var types = init.types;
    var length = types.length;
    types.push.apply(types, newTypes);
    return length;
  }
  function updateHolder(holder, newHolder) {
    copyProperties(newHolder, holder);
    return holder;
  }
  var hunkHelpers = function() {
    var mkInstance = function(isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, applyIndex) {
        return function(container, getterName, name, funType) {
          return installInstanceTearOff(container, getterName, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, [name], funType, applyIndex, false);
        };
      },
      mkStatic = function(requiredParameterCount, optionalParameterDefaultValues, callNames, applyIndex) {
        return function(container, getterName, name, funType) {
          return installStaticTearOff(container, getterName, requiredParameterCount, optionalParameterDefaultValues, callNames, [name], funType, applyIndex);
        };
      };
    return {inherit: inherit, inheritMany: inheritMany, mixin: mixinEasy, mixinHard: mixinHard, installStaticTearOff: installStaticTearOff, installInstanceTearOff: installInstanceTearOff, _instance_0u: mkInstance(0, 0, null, ["call$0"], 0), _instance_1u: mkInstance(0, 1, null, ["call$1"], 0), _instance_2u: mkInstance(0, 2, null, ["call$2"], 0), _instance_0i: mkInstance(1, 0, null, ["call$0"], 0), _instance_1i: mkInstance(1, 1, null, ["call$1"], 0), _instance_2i: mkInstance(1, 2, null, ["call$2"], 0), _static_0: mkStatic(0, null, ["call$0"], 0), _static_1: mkStatic(1, null, ["call$1"], 0), _static_2: mkStatic(2, null, ["call$2"], 0), makeConstList: makeConstList, lazy: lazy, lazyFinal: lazyFinal, updateHolder: updateHolder, convertToFastObject: convertToFastObject, updateTypes: updateTypes, setOrUpdateInterceptorsByTag: setOrUpdateInterceptorsByTag, setOrUpdateLeafTags: setOrUpdateLeafTags};
  }();
  function initializeDeferredHunk(hunk) {
    typesOffset = init.types.length;
    hunk(hunkHelpers, init, holders, $);
  }
  var J = {
    makeDispatchRecord(interceptor, proto, extension, indexability) {
      return {i: interceptor, p: proto, e: extension, x: indexability};
    },
    getNativeInterceptor(object) {
      var proto, objectProto, $constructor, interceptor, t1,
        record = object[init.dispatchPropertyName];
      if (record == null)
        if ($.initNativeDispatchFlag == null) {
          A.initNativeDispatch();
          record = object[init.dispatchPropertyName];
        }
      if (record != null) {
        proto = record.p;
        if (false === proto)
          return record.i;
        if (true === proto)
          return object;
        objectProto = Object.getPrototypeOf(object);
        if (proto === objectProto)
          return record.i;
        if (record.e === objectProto)
          throw A.wrapException(A.UnimplementedError$("Return interceptor for " + A.S(proto(object, record))));
      }
      $constructor = object.constructor;
      if ($constructor == null)
        interceptor = null;
      else {
        t1 = $._JS_INTEROP_INTERCEPTOR_TAG;
        if (t1 == null)
          t1 = $._JS_INTEROP_INTERCEPTOR_TAG = init.getIsolateTag("_$dart_js");
        interceptor = $constructor[t1];
      }
      if (interceptor != null)
        return interceptor;
      interceptor = A.lookupAndCacheInterceptor(object);
      if (interceptor != null)
        return interceptor;
      if (typeof object == "function")
        return B.JavaScriptFunction_methods;
      proto = Object.getPrototypeOf(object);
      if (proto == null)
        return B.PlainJavaScriptObject_methods;
      if (proto === Object.prototype)
        return B.PlainJavaScriptObject_methods;
      if (typeof $constructor == "function") {
        t1 = $._JS_INTEROP_INTERCEPTOR_TAG;
        if (t1 == null)
          t1 = $._JS_INTEROP_INTERCEPTOR_TAG = init.getIsolateTag("_$dart_js");
        Object.defineProperty($constructor, t1, {value: B.UnknownJavaScriptObject_methods, enumerable: false, writable: true, configurable: true});
        return B.UnknownJavaScriptObject_methods;
      }
      return B.UnknownJavaScriptObject_methods;
    },
    JSArray_JSArray$fixed($length, $E) {
      if ($length < 0 || $length > 4294967295)
        throw A.wrapException(A.RangeError$range($length, 0, 4294967295, "length", null));
      return J.JSArray_JSArray$markFixed(new Array($length), $E);
    },
    JSArray_JSArray$growable($length, $E) {
      if ($length < 0)
        throw A.wrapException(A.ArgumentError$("Length must be a non-negative integer: " + $length, null));
      return A._setArrayType(new Array($length), $E._eval$1("JSArray<0>"));
    },
    JSArray_JSArray$markFixed(allocation, $E) {
      var t1 = A._setArrayType(allocation, $E._eval$1("JSArray<0>"));
      t1.$flags = 1;
      return t1;
    },
    JSArray__compareAny(a, b) {
      return J.compareTo$1$ns(a, b);
    },
    JSString__isWhitespace(codeUnit) {
      if (codeUnit < 256)
        switch (codeUnit) {
          case 9:
          case 10:
          case 11:
          case 12:
          case 13:
          case 32:
          case 133:
          case 160:
            return true;
          default:
            return false;
        }
      switch (codeUnit) {
        case 5760:
        case 8192:
        case 8193:
        case 8194:
        case 8195:
        case 8196:
        case 8197:
        case 8198:
        case 8199:
        case 8200:
        case 8201:
        case 8202:
        case 8232:
        case 8233:
        case 8239:
        case 8287:
        case 12288:
        case 65279:
          return true;
        default:
          return false;
      }
    },
    JSString__skipLeadingWhitespace(string, index) {
      var t1, codeUnit;
      for (t1 = string.length; index < t1;) {
        codeUnit = string.charCodeAt(index);
        if (codeUnit !== 32 && codeUnit !== 13 && !J.JSString__isWhitespace(codeUnit))
          break;
        ++index;
      }
      return index;
    },
    JSString__skipTrailingWhitespace(string, index) {
      var index0, codeUnit;
      for (; index > 0; index = index0) {
        index0 = index - 1;
        codeUnit = string.charCodeAt(index0);
        if (codeUnit !== 32 && codeUnit !== 13 && !J.JSString__isWhitespace(codeUnit))
          break;
      }
      return index;
    },
    getInterceptor$(receiver) {
      if (typeof receiver == "number") {
        if (Math.floor(receiver) == receiver)
          return J.JSInt.prototype;
        return J.JSNumNotInt.prototype;
      }
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return J.JSNull.prototype;
      if (typeof receiver == "boolean")
        return J.JSBool.prototype;
      if (Array.isArray(receiver))
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        if (typeof receiver == "symbol")
          return J.JavaScriptSymbol.prototype;
        if (typeof receiver == "bigint")
          return J.JavaScriptBigInt.prototype;
        return receiver;
      }
      if (receiver instanceof A.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$ansx(receiver) {
      if (typeof receiver == "number")
        return J.JSNumber.prototype;
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return receiver;
      if (Array.isArray(receiver))
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        if (typeof receiver == "symbol")
          return J.JavaScriptSymbol.prototype;
        if (typeof receiver == "bigint")
          return J.JavaScriptBigInt.prototype;
        return receiver;
      }
      if (receiver instanceof A.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$asx(receiver) {
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return receiver;
      if (Array.isArray(receiver))
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        if (typeof receiver == "symbol")
          return J.JavaScriptSymbol.prototype;
        if (typeof receiver == "bigint")
          return J.JavaScriptBigInt.prototype;
        return receiver;
      }
      if (receiver instanceof A.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$ax(receiver) {
      if (receiver == null)
        return receiver;
      if (Array.isArray(receiver))
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        if (typeof receiver == "symbol")
          return J.JavaScriptSymbol.prototype;
        if (typeof receiver == "bigint")
          return J.JavaScriptBigInt.prototype;
        return receiver;
      }
      if (receiver instanceof A.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$in(receiver) {
      if (typeof receiver == "number") {
        if (Math.floor(receiver) == receiver)
          return J.JSInt.prototype;
        return J.JSNumNotInt.prototype;
      }
      if (receiver == null)
        return receiver;
      if (!(receiver instanceof A.Object))
        return J.UnknownJavaScriptObject.prototype;
      return receiver;
    },
    getInterceptor$n(receiver) {
      if (typeof receiver == "number")
        return J.JSNumber.prototype;
      if (receiver == null)
        return receiver;
      if (!(receiver instanceof A.Object))
        return J.UnknownJavaScriptObject.prototype;
      return receiver;
    },
    getInterceptor$ns(receiver) {
      if (typeof receiver == "number")
        return J.JSNumber.prototype;
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return receiver;
      if (!(receiver instanceof A.Object))
        return J.UnknownJavaScriptObject.prototype;
      return receiver;
    },
    getInterceptor$s(receiver) {
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return receiver;
      if (!(receiver instanceof A.Object))
        return J.UnknownJavaScriptObject.prototype;
      return receiver;
    },
    getInterceptor$x(receiver) {
      if (receiver == null)
        return receiver;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        if (typeof receiver == "symbol")
          return J.JavaScriptSymbol.prototype;
        if (typeof receiver == "bigint")
          return J.JavaScriptBigInt.prototype;
        return receiver;
      }
      if (receiver instanceof A.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    set$length$asx(receiver, value) {
      return J.getInterceptor$asx(receiver).set$length(receiver, value);
    },
    get$add$ax(receiver) {
      return J.getInterceptor$ax(receiver).get$add(receiver);
    },
    get$first$ax(receiver) {
      return J.getInterceptor$ax(receiver).get$first(receiver);
    },
    get$hashCode$(receiver) {
      return J.getInterceptor$(receiver).get$hashCode(receiver);
    },
    get$isEmpty$asx(receiver) {
      return J.getInterceptor$asx(receiver).get$isEmpty(receiver);
    },
    get$isNotEmpty$asx(receiver) {
      return J.getInterceptor$asx(receiver).get$isNotEmpty(receiver);
    },
    get$iterator$ax(receiver) {
      return J.getInterceptor$ax(receiver).get$iterator(receiver);
    },
    get$last$ax(receiver) {
      return J.getInterceptor$ax(receiver).get$last(receiver);
    },
    get$length$asx(receiver) {
      return J.getInterceptor$asx(receiver).get$length(receiver);
    },
    get$runtimeType$(receiver) {
      return J.getInterceptor$(receiver).get$runtimeType(receiver);
    },
    get$sign$in(receiver) {
      if (typeof receiver === "number")
        return receiver > 0 ? 1 : receiver < 0 ? -1 : receiver;
      return J.getInterceptor$in(receiver).get$sign(receiver);
    },
    $add$ansx(receiver, a0) {
      if (typeof receiver == "number" && typeof a0 == "number")
        return receiver + a0;
      return J.getInterceptor$ansx(receiver).$add(receiver, a0);
    },
    $eq$(receiver, a0) {
      if (receiver == null)
        return a0 == null;
      if (typeof receiver != "object")
        return a0 != null && receiver === a0;
      return J.getInterceptor$(receiver).$eq(receiver, a0);
    },
    $index$asx(receiver, a0) {
      if (typeof a0 === "number")
        if (Array.isArray(receiver) || typeof receiver == "string" || A.isJsIndexable(receiver, receiver[init.dispatchPropertyName]))
          if (a0 >>> 0 === a0 && a0 < receiver.length)
            return receiver[a0];
      return J.getInterceptor$asx(receiver).$index(receiver, a0);
    },
    $indexSet$ax(receiver, a0, a1) {
      if (typeof a0 === "number")
        if ((Array.isArray(receiver) || A.isJsIndexable(receiver, receiver[init.dispatchPropertyName])) && !(receiver.$flags & 2) && a0 >>> 0 === a0 && a0 < receiver.length)
          return receiver[a0] = a1;
      return J.getInterceptor$ax(receiver).$indexSet(receiver, a0, a1);
    },
    $mul$ns(receiver, a0) {
      if (typeof receiver == "number" && typeof a0 == "number")
        return receiver * a0;
      return J.getInterceptor$ns(receiver).$mul(receiver, a0);
    },
    $sub$n(receiver, a0) {
      if (typeof receiver == "number" && typeof a0 == "number")
        return receiver - a0;
      return J.getInterceptor$n(receiver).$sub(receiver, a0);
    },
    add$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).add$1(receiver, a0);
    },
    allMatches$1$s(receiver, a0) {
      return J.getInterceptor$s(receiver).allMatches$1(receiver, a0);
    },
    asByteData$0$x(receiver) {
      return J.getInterceptor$x(receiver).asByteData$0(receiver);
    },
    asByteData$2$x(receiver, a0, a1) {
      return J.getInterceptor$x(receiver).asByteData$2(receiver, a0, a1);
    },
    asFloat32List$2$x(receiver, a0, a1) {
      return J.getInterceptor$x(receiver).asFloat32List$2(receiver, a0, a1);
    },
    asFloat64List$2$x(receiver, a0, a1) {
      return J.getInterceptor$x(receiver).asFloat64List$2(receiver, a0, a1);
    },
    asInt32List$2$x(receiver, a0, a1) {
      return J.getInterceptor$x(receiver).asInt32List$2(receiver, a0, a1);
    },
    asInt64List$2$x(receiver, a0, a1) {
      return J.getInterceptor$x(receiver).asInt64List$2(receiver, a0, a1);
    },
    asUint8List$0$x(receiver) {
      return J.getInterceptor$x(receiver).asUint8List$0(receiver);
    },
    asUint8List$2$x(receiver, a0, a1) {
      return J.getInterceptor$x(receiver).asUint8List$2(receiver, a0, a1);
    },
    cast$1$0$ax(receiver, $T1) {
      return J.getInterceptor$ax(receiver).cast$1$0(receiver, $T1);
    },
    compareTo$1$ns(receiver, a0) {
      return J.getInterceptor$ns(receiver).compareTo$1(receiver, a0);
    },
    contains$1$asx(receiver, a0) {
      return J.getInterceptor$asx(receiver).contains$1(receiver, a0);
    },
    elementAt$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).elementAt$1(receiver, a0);
    },
    followedBy$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).followedBy$1(receiver, a0);
    },
    forEach$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).forEach$1(receiver, a0);
    },
    getRange$2$ax(receiver, a0, a1) {
      return J.getInterceptor$ax(receiver).getRange$2(receiver, a0, a1);
    },
    join$0$ax(receiver) {
      return J.getInterceptor$ax(receiver).join$0(receiver);
    },
    join$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).join$1(receiver, a0);
    },
    map$1$1$ax(receiver, a0, $T1) {
      return J.getInterceptor$ax(receiver).map$1$1(receiver, a0, $T1);
    },
    remove$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).remove$1(receiver, a0);
    },
    removeLast$0$ax(receiver) {
      return J.getInterceptor$ax(receiver).removeLast$0(receiver);
    },
    setRange$4$ax(receiver, a0, a1, a2, a3) {
      return J.getInterceptor$ax(receiver).setRange$4(receiver, a0, a1, a2, a3);
    },
    skip$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).skip$1(receiver, a0);
    },
    sort$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).sort$1(receiver, a0);
    },
    take$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).take$1(receiver, a0);
    },
    toList$0$ax(receiver) {
      return J.getInterceptor$ax(receiver).toList$0(receiver);
    },
    toString$0$(receiver) {
      return J.getInterceptor$(receiver).toString$0(receiver);
    },
    where$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).where$1(receiver, a0);
    },
    Interceptor: function Interceptor() {
    },
    JSBool: function JSBool() {
    },
    JSNull: function JSNull() {
    },
    JavaScriptObject: function JavaScriptObject() {
    },
    LegacyJavaScriptObject: function LegacyJavaScriptObject() {
    },
    PlainJavaScriptObject: function PlainJavaScriptObject() {
    },
    UnknownJavaScriptObject: function UnknownJavaScriptObject() {
    },
    JavaScriptFunction: function JavaScriptFunction() {
    },
    JavaScriptBigInt: function JavaScriptBigInt() {
    },
    JavaScriptSymbol: function JavaScriptSymbol() {
    },
    JSArray: function JSArray(t0) {
      this.$ti = t0;
    },
    JSArraySafeToStringHook: function JSArraySafeToStringHook() {
    },
    JSUnmodifiableArray: function JSUnmodifiableArray(t0) {
      this.$ti = t0;
    },
    ArrayIterator: function ArrayIterator(t0, t1, t2) {
      var _ = this;
      _._iterable = t0;
      _._length = t1;
      _._index = 0;
      _.__interceptors$_current = null;
      _.$ti = t2;
    },
    JSNumber: function JSNumber() {
    },
    JSInt: function JSInt() {
    },
    JSNumNotInt: function JSNumNotInt() {
    },
    JSString: function JSString() {
    }
  },
  A = {JS_CONST: function JS_CONST() {
    },
    CastIterable_CastIterable(source, $S, $T) {
      if (type$.EfficientLengthIterable_dynamic._is(source))
        return new A._EfficientLengthCastIterable(source, $S._eval$1("@<0>")._bind$1($T)._eval$1("_EfficientLengthCastIterable<1,2>"));
      return new A.CastIterable(source, $S._eval$1("@<0>")._bind$1($T)._eval$1("CastIterable<1,2>"));
    },
    LateError$fieldADI(fieldName) {
      return new A.LateError("Field '" + fieldName + "' has been assigned during initialization.");
    },
    LateError$fieldNI(fieldName) {
      return new A.LateError("Field '" + fieldName + "' has not been initialized.");
    },
    LateError$localNI(localName) {
      return new A.LateError("Local '" + localName + "' has not been initialized.");
    },
    LateError$fieldAI(fieldName) {
      return new A.LateError("Field '" + fieldName + "' has already been initialized.");
    },
    LateError$localAI(localName) {
      return new A.LateError("Local '" + localName + "' has already been initialized.");
    },
    hexDigitValue(char) {
      var letter,
        digit = char ^ 48;
      if (digit <= 9)
        return digit;
      letter = char | 32;
      if (97 <= letter && letter <= 102)
        return letter - 87;
      return -1;
    },
    SystemHash_combine(hash, value) {
      hash = hash + value & 536870911;
      hash = hash + ((hash & 524287) << 10) & 536870911;
      return hash ^ hash >>> 6;
    },
    SystemHash_finish(hash) {
      hash = hash + ((hash & 67108863) << 3) & 536870911;
      hash ^= hash >>> 11;
      return hash + ((hash & 16383) << 15) & 536870911;
    },
    checkNotNullable(value, $name, $T) {
      return value;
    },
    isToStringVisiting(object) {
      var t1, i;
      for (t1 = $.toStringVisiting.length, i = 0; i < t1; ++i)
        if (object === $.toStringVisiting[i])
          return true;
      return false;
    },
    SubListIterable$(_iterable, _start, _endOrLength, $E) {
      A.RangeError_checkNotNegative(_start, "start");
      if (_endOrLength != null) {
        A.RangeError_checkNotNegative(_endOrLength, "end");
        if (_start > _endOrLength)
          A.throwExpression(A.RangeError$range(_start, 0, _endOrLength, "start", null));
      }
      return new A.SubListIterable(_iterable, _start, _endOrLength, $E._eval$1("SubListIterable<0>"));
    },
    MappedIterable_MappedIterable(iterable, $function, $S, $T) {
      if (type$.EfficientLengthIterable_dynamic._is(iterable))
        return new A.EfficientLengthMappedIterable(iterable, $function, $S._eval$1("@<0>")._bind$1($T)._eval$1("EfficientLengthMappedIterable<1,2>"));
      return new A.MappedIterable(iterable, $function, $S._eval$1("@<0>")._bind$1($T)._eval$1("MappedIterable<1,2>"));
    },
    TakeIterable_TakeIterable(iterable, takeCount, $E) {
      var _s9_ = "takeCount";
      A.ArgumentError_checkNotNull(takeCount, _s9_);
      A.RangeError_checkNotNegative(takeCount, _s9_);
      if (type$.EfficientLengthIterable_dynamic._is(iterable))
        return new A.EfficientLengthTakeIterable(iterable, takeCount, $E._eval$1("EfficientLengthTakeIterable<0>"));
      return new A.TakeIterable(iterable, takeCount, $E._eval$1("TakeIterable<0>"));
    },
    SkipIterable_SkipIterable(iterable, count, $E) {
      var _s5_ = "count";
      if (type$.EfficientLengthIterable_dynamic._is(iterable)) {
        A.ArgumentError_checkNotNull(count, _s5_);
        A.RangeError_checkNotNegative(count, _s5_);
        return new A.EfficientLengthSkipIterable(iterable, count, $E._eval$1("EfficientLengthSkipIterable<0>"));
      }
      A.ArgumentError_checkNotNull(count, _s5_);
      A.RangeError_checkNotNegative(count, _s5_);
      return new A.SkipIterable(iterable, count, $E._eval$1("SkipIterable<0>"));
    },
    FollowedByIterable_FollowedByIterable$firstEfficient(first, second, $E) {
      if (type$.EfficientLengthIterable_dynamic._is(second))
        return new A.EfficientLengthFollowedByIterable(first, second, $E._eval$1("EfficientLengthFollowedByIterable<0>"));
      return new A.FollowedByIterable(first, second, $E._eval$1("FollowedByIterable<0>"));
    },
    IterableElementError_noElement() {
      return new A.StateError("No element");
    },
    IterableElementError_tooMany() {
      return new A.StateError("Too many elements");
    },
    IterableElementError_tooFew() {
      return new A.StateError("Too few elements");
    },
    _CastIterableBase: function _CastIterableBase() {
    },
    CastIterator: function CastIterator(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    CastIterable: function CastIterable(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    _EfficientLengthCastIterable: function _EfficientLengthCastIterable(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    _CastListBase: function _CastListBase() {
    },
    CastList: function CastList(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    CastSet: function CastSet(t0, t1, t2) {
      this._source = t0;
      this._emptySet = t1;
      this.$ti = t2;
    },
    CastMap: function CastMap(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    CastMap_putIfAbsent_closure: function CastMap_putIfAbsent_closure(t0, t1) {
      this.$this = t0;
      this.ifAbsent = t1;
    },
    CastMap_forEach_closure: function CastMap_forEach_closure(t0, t1) {
      this.$this = t0;
      this.f = t1;
    },
    CastMap_entries_closure: function CastMap_entries_closure(t0) {
      this.$this = t0;
    },
    LateError: function LateError(t0) {
      this._message = t0;
    },
    CodeUnits: function CodeUnits(t0) {
      this._string = t0;
    },
    nullFuture_closure: function nullFuture_closure() {
    },
    SentinelValue: function SentinelValue() {
    },
    EfficientLengthIterable: function EfficientLengthIterable() {
    },
    ListIterable: function ListIterable() {
    },
    SubListIterable: function SubListIterable(t0, t1, t2, t3) {
      var _ = this;
      _.__internal$_iterable = t0;
      _._start = t1;
      _._endOrLength = t2;
      _.$ti = t3;
    },
    ListIterator: function ListIterator(t0, t1, t2) {
      var _ = this;
      _.__internal$_iterable = t0;
      _.__internal$_length = t1;
      _.__internal$_index = 0;
      _.__internal$_current = null;
      _.$ti = t2;
    },
    MappedIterable: function MappedIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._f = t1;
      this.$ti = t2;
    },
    EfficientLengthMappedIterable: function EfficientLengthMappedIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._f = t1;
      this.$ti = t2;
    },
    MappedIterator: function MappedIterator(t0, t1, t2) {
      var _ = this;
      _.__internal$_current = null;
      _._iterator = t0;
      _._f = t1;
      _.$ti = t2;
    },
    MappedListIterable: function MappedListIterable(t0, t1, t2) {
      this._source = t0;
      this._f = t1;
      this.$ti = t2;
    },
    WhereIterable: function WhereIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._f = t1;
      this.$ti = t2;
    },
    WhereIterator: function WhereIterator(t0, t1) {
      this._iterator = t0;
      this._f = t1;
    },
    ExpandIterable: function ExpandIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._f = t1;
      this.$ti = t2;
    },
    ExpandIterator: function ExpandIterator(t0, t1, t2, t3) {
      var _ = this;
      _._iterator = t0;
      _._f = t1;
      _._currentExpansion = t2;
      _.__internal$_current = null;
      _.$ti = t3;
    },
    TakeIterable: function TakeIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._takeCount = t1;
      this.$ti = t2;
    },
    EfficientLengthTakeIterable: function EfficientLengthTakeIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._takeCount = t1;
      this.$ti = t2;
    },
    TakeIterator: function TakeIterator(t0, t1, t2) {
      this._iterator = t0;
      this._remaining = t1;
      this.$ti = t2;
    },
    SkipIterable: function SkipIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._skipCount = t1;
      this.$ti = t2;
    },
    EfficientLengthSkipIterable: function EfficientLengthSkipIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._skipCount = t1;
      this.$ti = t2;
    },
    SkipIterator: function SkipIterator(t0, t1) {
      this._iterator = t0;
      this._skipCount = t1;
    },
    SkipWhileIterable: function SkipWhileIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._f = t1;
      this.$ti = t2;
    },
    SkipWhileIterator: function SkipWhileIterator(t0, t1) {
      this._iterator = t0;
      this._f = t1;
      this._hasSkipped = false;
    },
    EmptyIterable: function EmptyIterable(t0) {
      this.$ti = t0;
    },
    EmptyIterator: function EmptyIterator() {
    },
    FollowedByIterable: function FollowedByIterable(t0, t1, t2) {
      this.__internal$_first = t0;
      this._second = t1;
      this.$ti = t2;
    },
    EfficientLengthFollowedByIterable: function EfficientLengthFollowedByIterable(t0, t1, t2) {
      this.__internal$_first = t0;
      this._second = t1;
      this.$ti = t2;
    },
    FollowedByIterator: function FollowedByIterator(t0, t1) {
      this._currentIterator = t0;
      this._nextIterable = t1;
    },
    WhereTypeIterable: function WhereTypeIterable(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    WhereTypeIterator: function WhereTypeIterator(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    FixedLengthListMixin: function FixedLengthListMixin() {
    },
    UnmodifiableListMixin: function UnmodifiableListMixin() {
    },
    UnmodifiableListBase: function UnmodifiableListBase() {
    },
    ReversedListIterable: function ReversedListIterable(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    Symbol: function Symbol(t0) {
      this.__internal$_name = t0;
    },
    __CastListBase__CastIterableBase_ListMixin: function __CastListBase__CastIterableBase_ListMixin() {
    },
    ConstantMap_ConstantMap$from(other, $K, $V) {
      var allStrings, k, object, index, index0, map,
        t1 = A._instanceType(other),
        keys = A.List_List$from(new A.LinkedHashMapKeysIterable(other, t1._eval$1("LinkedHashMapKeysIterable<1>")), true, $K),
        t2 = keys.length,
        _i = 0;
      while (true) {
        if (!(_i < t2)) {
          allStrings = true;
          break;
        }
        k = keys[_i];
        if (typeof k != "string" || "__proto__" === k) {
          allStrings = false;
          break;
        }
        ++_i;
      }
      if (allStrings) {
        object = {};
        for (index = 0, _i = 0; _i < keys.length; keys.length === t2 || (0, A.throwConcurrentModificationError)(keys), ++_i, index = index0) {
          k = keys[_i];
          other.$index(0, k);
          index0 = index + 1;
          object[k] = index;
        }
        map = new A.ConstantStringMap(object, A.List_List$from(new A.LinkedHashMapValuesIterable(other, t1._eval$1("LinkedHashMapValuesIterable<2>")), true, $V), $K._eval$1("@<0>")._bind$1($V)._eval$1("ConstantStringMap<1,2>"));
        map.$keys = keys;
        return map;
      }
      return new A.ConstantMapView(A.LinkedHashMap_LinkedHashMap$from(other, $K, $V), $K._eval$1("@<0>")._bind$1($V)._eval$1("ConstantMapView<1,2>"));
    },
    ConstantMap__throwUnmodifiable() {
      throw A.wrapException(A.UnsupportedError$("Cannot modify unmodifiable Map"));
    },
    ConstantSet__throwUnmodifiable() {
      throw A.wrapException(A.UnsupportedError$("Cannot modify constant Set"));
    },
    unminifyOrTag(rawClassName) {
      var preserved = init.mangledGlobalNames[rawClassName];
      if (preserved != null)
        return preserved;
      return rawClassName;
    },
    isJsIndexable(object, record) {
      var result;
      if (record != null) {
        result = record.x;
        if (result != null)
          return result;
      }
      return type$.JavaScriptIndexingBehavior_dynamic._is(object);
    },
    S(value) {
      var result;
      if (typeof value == "string")
        return value;
      if (typeof value == "number") {
        if (value !== 0)
          return "" + value;
      } else if (true === value)
        return "true";
      else if (false === value)
        return "false";
      else if (value == null)
        return "null";
      result = J.toString$0$(value);
      return result;
    },
    JSInvocationMirror$(_memberName, _internalName, _kind, _arguments, _namedArgumentNames, _typeArgumentCount) {
      return new A.JSInvocationMirror(_memberName, _kind, _arguments, _namedArgumentNames, _typeArgumentCount);
    },
    Primitives_objectHashCode(object) {
      var hash,
        property = $.Primitives__identityHashCodeProperty;
      if (property == null)
        property = $.Primitives__identityHashCodeProperty = Symbol("identityHashCode");
      hash = object[property];
      if (hash == null) {
        hash = Math.random() * 0x3fffffff | 0;
        object[property] = hash;
      }
      return hash;
    },
    Primitives_parseInt(source, radix) {
      var decimalMatch, maxCharCode, digitsPart, t1, i, _null = null,
        match = /^\s*[+-]?((0x[a-f0-9]+)|(\d+)|([a-z0-9]+))\s*$/i.exec(source);
      if (match == null)
        return _null;
      decimalMatch = match[3];
      if (radix == null) {
        if (decimalMatch != null)
          return parseInt(source, 10);
        if (match[2] != null)
          return parseInt(source, 16);
        return _null;
      }
      if (radix < 2 || radix > 36)
        throw A.wrapException(A.RangeError$range(radix, 2, 36, "radix", _null));
      if (radix === 10 && decimalMatch != null)
        return parseInt(source, 10);
      if (radix < 10 || decimalMatch == null) {
        maxCharCode = radix <= 10 ? 47 + radix : 86 + radix;
        digitsPart = match[1];
        for (t1 = digitsPart.length, i = 0; i < t1; ++i)
          if ((digitsPart.charCodeAt(i) | 32) > maxCharCode)
            return _null;
      }
      return parseInt(source, radix);
    },
    Primitives_parseDouble(source) {
      var result, trimmed;
      if (!/^\s*[+-]?(?:Infinity|NaN|(?:\.\d+|\d+(?:\.\d*)?)(?:[eE][+-]?\d+)?)\s*$/.test(source))
        return null;
      result = parseFloat(source);
      if (isNaN(result)) {
        trimmed = B.JSString_methods.trim$0(source);
        if (trimmed === "NaN" || trimmed === "+NaN" || trimmed === "-NaN")
          return result;
        return null;
      }
      return result;
    },
    Primitives_objectTypeName(object) {
      var interceptor, dispatchName, $constructor, constructorName;
      if (object instanceof A.Object)
        return A._rtiToString(A.instanceType(object), null);
      interceptor = J.getInterceptor$(object);
      if (interceptor === B.Interceptor_methods || interceptor === B.JavaScriptObject_methods || type$.UnknownJavaScriptObject._is(object)) {
        dispatchName = B.C_JS_CONST(object);
        if (dispatchName !== "Object" && dispatchName !== "")
          return dispatchName;
        $constructor = object.constructor;
        if (typeof $constructor == "function") {
          constructorName = $constructor.name;
          if (typeof constructorName == "string" && constructorName !== "Object" && constructorName !== "")
            return constructorName;
        }
      }
      return A._rtiToString(A.instanceType(object), null);
    },
    Primitives_safeToString(object) {
      var hooks, i, hookResult;
      if (typeof object == "number" || A._isBool(object))
        return J.toString$0$(object);
      if (typeof object == "string")
        return JSON.stringify(object);
      if (object instanceof A.Closure)
        return object.toString$0(0);
      hooks = $.$get$_safeToStringHooks();
      for (i = 0; i < 1; ++i) {
        hookResult = hooks[i].tryFormat$1(object);
        if (hookResult != null)
          return hookResult;
      }
      return "Instance of '" + A.Primitives_objectTypeName(object) + "'";
    },
    Primitives_dateNow() {
      return Date.now();
    },
    Primitives_initTicker() {
      var $window, performance;
      if ($.Primitives_timerFrequency !== 0)
        return;
      $.Primitives_timerFrequency = 1000;
      if (typeof window == "undefined")
        return;
      $window = window;
      if ($window == null)
        return;
      if (!!$window.dartUseDateNowForTicks)
        return;
      performance = $window.performance;
      if (performance == null)
        return;
      if (typeof performance.now != "function")
        return;
      $.Primitives_timerFrequency = 1000000;
      $.Primitives_timerTicks = new A.Primitives_initTicker_closure(performance);
    },
    Primitives_stringFromNativeUint8List(charCodes, start, end) {
      var i, result, i0, chunkEnd;
      if (end <= 500 && start === 0 && end === charCodes.length)
        return String.fromCharCode.apply(null, charCodes);
      for (i = start, result = ""; i < end; i = i0) {
        i0 = i + 500;
        chunkEnd = i0 < end ? i0 : end;
        result += String.fromCharCode.apply(null, charCodes.subarray(i, chunkEnd));
      }
      return result;
    },
    Primitives_stringFromCharCode(charCode) {
      var bits;
      if (0 <= charCode) {
        if (charCode <= 65535)
          return String.fromCharCode(charCode);
        if (charCode <= 1114111) {
          bits = charCode - 65536;
          return String.fromCharCode((B.JSInt_methods._shrOtherPositive$1(bits, 10) | 55296) >>> 0, bits & 1023 | 56320);
        }
      }
      throw A.wrapException(A.RangeError$range(charCode, 0, 1114111, null, null));
    },
    Primitives_extractStackTrace(error) {
      var jsError = error.$thrownJsError;
      if (jsError == null)
        return null;
      return A.getTraceFromException(jsError);
    },
    Primitives_trySetStackTrace(error, stackTrace) {
      var jsError;
      if (error.$thrownJsError == null) {
        jsError = new Error();
        A.initializeExceptionWrapper(error, jsError);
        error.$thrownJsError = jsError;
        jsError.stack = stackTrace.toString$0(0);
      }
    },
    diagnoseIndexError(indexable, index) {
      var $length, _s5_ = "index";
      if (!A._isInt(index))
        return new A.ArgumentError(true, index, _s5_, null);
      $length = J.get$length$asx(indexable);
      if (index < 0 || index >= $length)
        return A.IndexError$withLength(index, $length, indexable, null, _s5_);
      return A.RangeError$value(index, _s5_);
    },
    diagnoseRangeError(start, end, $length) {
      if (start > $length)
        return A.RangeError$range(start, 0, $length, "start", null);
      if (end != null)
        if (end < start || end > $length)
          return A.RangeError$range(end, start, $length, "end", null);
      return new A.ArgumentError(true, end, "end", null);
    },
    argumentErrorValue(object) {
      return new A.ArgumentError(true, object, null, null);
    },
    checkNum(value) {
      return value;
    },
    wrapException(ex) {
      return A.initializeExceptionWrapper(ex, new Error());
    },
    initializeExceptionWrapper(ex, wrapper) {
      var t1;
      if (ex == null)
        ex = new A.TypeError();
      wrapper.dartException = ex;
      t1 = A.toStringWrapper;
      if ("defineProperty" in Object) {
        Object.defineProperty(wrapper, "message", {get: t1});
        wrapper.name = "";
      } else
        wrapper.toString = t1;
      return wrapper;
    },
    toStringWrapper() {
      return J.toString$0$(this.dartException);
    },
    throwExpression(ex, wrapper) {
      throw A.initializeExceptionWrapper(ex, wrapper == null ? new Error() : wrapper);
    },
    throwUnsupportedOperation(o, operation, verb) {
      var wrapper;
      if (operation == null)
        operation = 0;
      if (verb == null)
        verb = 0;
      wrapper = Error();
      A.throwExpression(A._diagnoseUnsupportedOperation(o, operation, verb), wrapper);
    },
    _diagnoseUnsupportedOperation(o, encodedOperation, encodedVerb) {
      var operation, table, tableLength, index, verb, object, flags, article, adjective;
      if (typeof encodedOperation == "string")
        operation = encodedOperation;
      else {
        table = "[]=;add;removeWhere;retainWhere;removeRange;setRange;setInt8;setInt16;setInt32;setUint8;setUint16;setUint32;setFloat32;setFloat64".split(";");
        tableLength = table.length;
        index = encodedOperation;
        if (index > tableLength) {
          encodedVerb = index / tableLength | 0;
          index %= tableLength;
        }
        operation = table[index];
      }
      verb = typeof encodedVerb == "string" ? encodedVerb : "modify;remove from;add to".split(";")[encodedVerb];
      object = type$.List_dynamic._is(o) ? "list" : "ByteData";
      flags = o.$flags | 0;
      article = "a ";
      if ((flags & 4) !== 0)
        adjective = "constant ";
      else if ((flags & 2) !== 0) {
        adjective = "unmodifiable ";
        article = "an ";
      } else
        adjective = (flags & 1) !== 0 ? "fixed-length " : "";
      return new A.UnsupportedError("'" + operation + "': Cannot " + verb + " " + article + adjective + object);
    },
    throwConcurrentModificationError(collection) {
      throw A.wrapException(A.ConcurrentModificationError$(collection));
    },
    TypeErrorDecoder_extractPattern(message) {
      var match, $arguments, argumentsExpr, expr, method, receiver;
      message = A.quoteStringForRegExp(message.replace(String({}), "$receiver$"));
      match = message.match(/\\\$[a-zA-Z]+\\\$/g);
      if (match == null)
        match = A._setArrayType([], type$.JSArray_String);
      $arguments = match.indexOf("\\$arguments\\$");
      argumentsExpr = match.indexOf("\\$argumentsExpr\\$");
      expr = match.indexOf("\\$expr\\$");
      method = match.indexOf("\\$method\\$");
      receiver = match.indexOf("\\$receiver\\$");
      return new A.TypeErrorDecoder(message.replace(new RegExp("\\\\\\$arguments\\\\\\$", "g"), "((?:x|[^x])*)").replace(new RegExp("\\\\\\$argumentsExpr\\\\\\$", "g"), "((?:x|[^x])*)").replace(new RegExp("\\\\\\$expr\\\\\\$", "g"), "((?:x|[^x])*)").replace(new RegExp("\\\\\\$method\\\\\\$", "g"), "((?:x|[^x])*)").replace(new RegExp("\\\\\\$receiver\\\\\\$", "g"), "((?:x|[^x])*)"), $arguments, argumentsExpr, expr, method, receiver);
    },
    TypeErrorDecoder_provokeCallErrorOn(expression) {
      return function($expr$) {
        var $argumentsExpr$ = "$arguments$";
        try {
          $expr$.$method$($argumentsExpr$);
        } catch (e) {
          return e.message;
        }
      }(expression);
    },
    TypeErrorDecoder_provokePropertyErrorOn(expression) {
      return function($expr$) {
        try {
          $expr$.$method$;
        } catch (e) {
          return e.message;
        }
      }(expression);
    },
    JsNoSuchMethodError$(_message, match) {
      var t1 = match == null,
        t2 = t1 ? null : match.method;
      return new A.JsNoSuchMethodError(_message, t2, t1 ? null : match.receiver);
    },
    unwrapException(ex) {
      if (ex == null)
        return new A.NullThrownFromJavaScriptException(ex);
      if (ex instanceof A.ExceptionAndStackTrace)
        return A.saveStackTrace(ex, ex.dartException);
      if (typeof ex !== "object")
        return ex;
      if ("dartException" in ex)
        return A.saveStackTrace(ex, ex.dartException);
      return A._unwrapNonDartException(ex);
    },
    saveStackTrace(ex, error) {
      if (type$.Error._is(error))
        if (error.$thrownJsError == null)
          error.$thrownJsError = ex;
      return error;
    },
    _unwrapNonDartException(ex) {
      var message, number, ieErrorCode, nsme, notClosure, nullCall, nullLiteralCall, undefCall, undefLiteralCall, nullProperty, undefProperty, undefLiteralProperty, match;
      if (!("message" in ex))
        return ex;
      message = ex.message;
      if ("number" in ex && typeof ex.number == "number") {
        number = ex.number;
        ieErrorCode = number & 65535;
        if ((B.JSInt_methods._shrOtherPositive$1(number, 16) & 8191) === 10)
          switch (ieErrorCode) {
            case 438:
              return A.saveStackTrace(ex, A.JsNoSuchMethodError$(A.S(message) + " (Error " + ieErrorCode + ")", null));
            case 445:
            case 5007:
              A.S(message);
              return A.saveStackTrace(ex, new A.NullError());
          }
      }
      if (ex instanceof TypeError) {
        nsme = $.$get$TypeErrorDecoder_noSuchMethodPattern();
        notClosure = $.$get$TypeErrorDecoder_notClosurePattern();
        nullCall = $.$get$TypeErrorDecoder_nullCallPattern();
        nullLiteralCall = $.$get$TypeErrorDecoder_nullLiteralCallPattern();
        undefCall = $.$get$TypeErrorDecoder_undefinedCallPattern();
        undefLiteralCall = $.$get$TypeErrorDecoder_undefinedLiteralCallPattern();
        nullProperty = $.$get$TypeErrorDecoder_nullPropertyPattern();
        $.$get$TypeErrorDecoder_nullLiteralPropertyPattern();
        undefProperty = $.$get$TypeErrorDecoder_undefinedPropertyPattern();
        undefLiteralProperty = $.$get$TypeErrorDecoder_undefinedLiteralPropertyPattern();
        match = nsme.matchTypeError$1(message);
        if (match != null)
          return A.saveStackTrace(ex, A.JsNoSuchMethodError$(message, match));
        else {
          match = notClosure.matchTypeError$1(message);
          if (match != null) {
            match.method = "call";
            return A.saveStackTrace(ex, A.JsNoSuchMethodError$(message, match));
          } else if (nullCall.matchTypeError$1(message) != null || nullLiteralCall.matchTypeError$1(message) != null || undefCall.matchTypeError$1(message) != null || undefLiteralCall.matchTypeError$1(message) != null || nullProperty.matchTypeError$1(message) != null || nullLiteralCall.matchTypeError$1(message) != null || undefProperty.matchTypeError$1(message) != null || undefLiteralProperty.matchTypeError$1(message) != null)
            return A.saveStackTrace(ex, new A.NullError());
        }
        return A.saveStackTrace(ex, new A.UnknownJsTypeError(typeof message == "string" ? message : ""));
      }
      if (ex instanceof RangeError) {
        if (typeof message == "string" && message.indexOf("call stack") !== -1)
          return new A.StackOverflowError();
        message = function(ex) {
          try {
            return String(ex);
          } catch (e) {
          }
          return null;
        }(ex);
        return A.saveStackTrace(ex, new A.ArgumentError(false, null, null, typeof message == "string" ? message.replace(/^RangeError:\s*/, "") : message));
      }
      if (typeof InternalError == "function" && ex instanceof InternalError)
        if (typeof message == "string" && message === "too much recursion")
          return new A.StackOverflowError();
      return ex;
    },
    getTraceFromException(exception) {
      var trace;
      if (exception instanceof A.ExceptionAndStackTrace)
        return exception.stackTrace;
      if (exception == null)
        return new A._StackTrace(exception);
      trace = exception.$cachedTrace;
      if (trace != null)
        return trace;
      trace = new A._StackTrace(exception);
      if (typeof exception === "object")
        exception.$cachedTrace = trace;
      return trace;
    },
    objectHashCode(object) {
      if (object == null)
        return J.get$hashCode$(object);
      if (typeof object == "object")
        return A.Primitives_objectHashCode(object);
      return J.get$hashCode$(object);
    },
    constantHashCode(key) {
      if (typeof key == "number")
        return B.JSNumber_methods.get$hashCode(key);
      if (key instanceof A._Type)
        return A.Primitives_objectHashCode(key);
      if (key instanceof A.Symbol)
        return key.get$hashCode(0);
      return A.objectHashCode(key);
    },
    fillLiteralMap(keyValuePairs, result) {
      var index, index0, index1,
        $length = keyValuePairs.length;
      for (index = 0; index < $length; index = index1) {
        index0 = index + 1;
        index1 = index0 + 1;
        result.$indexSet(0, keyValuePairs[index], keyValuePairs[index0]);
      }
      return result;
    },
    fillLiteralSet(values, result) {
      var index,
        $length = values.length;
      for (index = 0; index < $length; ++index)
        result.add$1(0, values[index]);
      return result;
    },
    _invokeClosure(closure, numberOfArguments, arg1, arg2, arg3, arg4) {
      switch (numberOfArguments) {
        case 0:
          return closure.call$0();
        case 1:
          return closure.call$1(arg1);
        case 2:
          return closure.call$2(arg1, arg2);
        case 3:
          return closure.call$3(arg1, arg2, arg3);
        case 4:
          return closure.call$4(arg1, arg2, arg3, arg4);
      }
      throw A.wrapException(A.Exception_Exception("Unsupported number of arguments for wrapped closure"));
    },
    convertDartClosureToJS(closure, arity) {
      var $function = closure.$identity;
      if (!!$function)
        return $function;
      $function = A.convertDartClosureToJSUncached(closure, arity);
      closure.$identity = $function;
      return $function;
    },
    convertDartClosureToJSUncached(closure, arity) {
      var entry;
      switch (arity) {
        case 0:
          entry = closure.call$0;
          break;
        case 1:
          entry = closure.call$1;
          break;
        case 2:
          entry = closure.call$2;
          break;
        case 3:
          entry = closure.call$3;
          break;
        case 4:
          entry = closure.call$4;
          break;
        default:
          entry = null;
      }
      if (entry != null)
        return entry.bind(closure);
      return function(closure, arity, invoke) {
        return function(a1, a2, a3, a4) {
          return invoke(closure, arity, a1, a2, a3, a4);
        };
      }(closure, arity, A._invokeClosure);
    },
    Closure_fromTearOff(parameters) {
      var $prototype, $constructor, t2, trampoline, applyTrampoline, i, stub, stub0, stubName, stubCallName,
        container = parameters.co,
        isStatic = parameters.iS,
        isIntercepted = parameters.iI,
        needsDirectAccess = parameters.nDA,
        applyTrampolineIndex = parameters.aI,
        funsOrNames = parameters.fs,
        callNames = parameters.cs,
        $name = funsOrNames[0],
        callName = callNames[0],
        $function = container[$name],
        t1 = parameters.fT;
      t1.toString;
      $prototype = isStatic ? Object.create(new A.StaticClosure().constructor.prototype) : Object.create(new A.BoundClosure(null, null).constructor.prototype);
      $prototype.$initialize = $prototype.constructor;
      $constructor = isStatic ? function static_tear_off() {
        this.$initialize();
      } : function tear_off(a, b) {
        this.$initialize(a, b);
      };
      $prototype.constructor = $constructor;
      $constructor.prototype = $prototype;
      $prototype.$_name = $name;
      $prototype.$_target = $function;
      t2 = !isStatic;
      if (t2)
        trampoline = A.Closure_forwardCallTo($name, $function, isIntercepted, needsDirectAccess);
      else {
        $prototype.$static_name = $name;
        trampoline = $function;
      }
      $prototype.$signature = A.Closure__computeSignatureFunction(t1, isStatic, isIntercepted);
      $prototype[callName] = trampoline;
      for (applyTrampoline = trampoline, i = 1; i < funsOrNames.length; ++i) {
        stub = funsOrNames[i];
        if (typeof stub == "string") {
          stub0 = container[stub];
          stubName = stub;
          stub = stub0;
        } else
          stubName = "";
        stubCallName = callNames[i];
        if (stubCallName != null) {
          if (t2)
            stub = A.Closure_forwardCallTo(stubName, stub, isIntercepted, needsDirectAccess);
          $prototype[stubCallName] = stub;
        }
        if (i === applyTrampolineIndex)
          applyTrampoline = stub;
      }
      $prototype["call*"] = applyTrampoline;
      $prototype.$requiredArgCount = parameters.rC;
      $prototype.$defaultValues = parameters.dV;
      return $constructor;
    },
    Closure__computeSignatureFunction(functionType, isStatic, isIntercepted) {
      if (typeof functionType == "number")
        return functionType;
      if (typeof functionType == "string") {
        if (isStatic)
          throw A.wrapException("Cannot compute signature for static tearoff.");
        return function(recipe, evalOnReceiver) {
          return function() {
            return evalOnReceiver(this, recipe);
          };
        }(functionType, A.BoundClosure_evalRecipe);
      }
      throw A.wrapException("Error in functionType of tearoff");
    },
    Closure_cspForwardCall(arity, needsDirectAccess, stubName, $function) {
      var getReceiver = A.BoundClosure_receiverOf;
      switch (needsDirectAccess ? -1 : arity) {
        case 0:
          return function(entry, receiverOf) {
            return function() {
              return receiverOf(this)[entry]();
            };
          }(stubName, getReceiver);
        case 1:
          return function(entry, receiverOf) {
            return function(a) {
              return receiverOf(this)[entry](a);
            };
          }(stubName, getReceiver);
        case 2:
          return function(entry, receiverOf) {
            return function(a, b) {
              return receiverOf(this)[entry](a, b);
            };
          }(stubName, getReceiver);
        case 3:
          return function(entry, receiverOf) {
            return function(a, b, c) {
              return receiverOf(this)[entry](a, b, c);
            };
          }(stubName, getReceiver);
        case 4:
          return function(entry, receiverOf) {
            return function(a, b, c, d) {
              return receiverOf(this)[entry](a, b, c, d);
            };
          }(stubName, getReceiver);
        case 5:
          return function(entry, receiverOf) {
            return function(a, b, c, d, e) {
              return receiverOf(this)[entry](a, b, c, d, e);
            };
          }(stubName, getReceiver);
        default:
          return function(f, receiverOf) {
            return function() {
              return f.apply(receiverOf(this), arguments);
            };
          }($function, getReceiver);
      }
    },
    Closure_forwardCallTo(stubName, $function, isIntercepted, needsDirectAccess) {
      if (isIntercepted)
        return A.Closure_forwardInterceptedCallTo(stubName, $function, needsDirectAccess);
      return A.Closure_cspForwardCall($function.length, needsDirectAccess, stubName, $function);
    },
    Closure_cspForwardInterceptedCall(arity, needsDirectAccess, stubName, $function) {
      var getReceiver = A.BoundClosure_receiverOf,
        getInterceptor = A.BoundClosure_interceptorOf;
      switch (needsDirectAccess ? -1 : arity) {
        case 0:
          throw A.wrapException(new A.RuntimeError("Intercepted function with no arguments."));
        case 1:
          return function(entry, interceptorOf, receiverOf) {
            return function() {
              return interceptorOf(this)[entry](receiverOf(this));
            };
          }(stubName, getInterceptor, getReceiver);
        case 2:
          return function(entry, interceptorOf, receiverOf) {
            return function(a) {
              return interceptorOf(this)[entry](receiverOf(this), a);
            };
          }(stubName, getInterceptor, getReceiver);
        case 3:
          return function(entry, interceptorOf, receiverOf) {
            return function(a, b) {
              return interceptorOf(this)[entry](receiverOf(this), a, b);
            };
          }(stubName, getInterceptor, getReceiver);
        case 4:
          return function(entry, interceptorOf, receiverOf) {
            return function(a, b, c) {
              return interceptorOf(this)[entry](receiverOf(this), a, b, c);
            };
          }(stubName, getInterceptor, getReceiver);
        case 5:
          return function(entry, interceptorOf, receiverOf) {
            return function(a, b, c, d) {
              return interceptorOf(this)[entry](receiverOf(this), a, b, c, d);
            };
          }(stubName, getInterceptor, getReceiver);
        case 6:
          return function(entry, interceptorOf, receiverOf) {
            return function(a, b, c, d, e) {
              return interceptorOf(this)[entry](receiverOf(this), a, b, c, d, e);
            };
          }(stubName, getInterceptor, getReceiver);
        default:
          return function(f, interceptorOf, receiverOf) {
            return function() {
              var a = [receiverOf(this)];
              Array.prototype.push.apply(a, arguments);
              return f.apply(interceptorOf(this), a);
            };
          }($function, getInterceptor, getReceiver);
      }
    },
    Closure_forwardInterceptedCallTo(stubName, $function, needsDirectAccess) {
      var arity, t1;
      if ($.BoundClosure__interceptorFieldNameCache == null)
        $.BoundClosure__interceptorFieldNameCache = A.BoundClosure__computeFieldNamed("interceptor");
      if ($.BoundClosure__receiverFieldNameCache == null)
        $.BoundClosure__receiverFieldNameCache = A.BoundClosure__computeFieldNamed("receiver");
      arity = $function.length;
      t1 = A.Closure_cspForwardInterceptedCall(arity, needsDirectAccess, stubName, $function);
      return t1;
    },
    closureFromTearOff(parameters) {
      return A.Closure_fromTearOff(parameters);
    },
    BoundClosure_evalRecipe(closure, recipe) {
      return A._Universe_evalInEnvironment(init.typeUniverse, A.instanceType(closure._receiver), recipe);
    },
    BoundClosure_receiverOf(closure) {
      return closure._receiver;
    },
    BoundClosure_interceptorOf(closure) {
      return closure._interceptor;
    },
    BoundClosure__computeFieldNamed(fieldName) {
      var names, i, $name,
        template = new A.BoundClosure("receiver", "interceptor"),
        t1 = Object.getOwnPropertyNames(template);
      t1.$flags = 1;
      names = t1;
      for (t1 = names.length, i = 0; i < t1; ++i) {
        $name = names[i];
        if (template[$name] === fieldName)
          return $name;
      }
      throw A.wrapException(A.ArgumentError$("Field name " + fieldName + " not found.", null));
    },
    getIsolateAffinityTag($name) {
      return init.getIsolateTag($name);
    },
    convertMainArgumentList(args) {
      var i,
        result = A._setArrayType([], type$.JSArray_String);
      if (args == null)
        return result;
      if (Array.isArray(args)) {
        for (i = 0; i < args.length; ++i)
          result.push(String(args[i]));
        return result;
      }
      result.push(String(args));
      return result;
    },
    lookupAndCacheInterceptor(obj) {
      var interceptor, interceptorClass, altTag, mark, t1,
        tag = $.getTagFunction.call$1(obj),
        record = $.dispatchRecordsForInstanceTags[tag];
      if (record != null) {
        Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
        return record.i;
      }
      interceptor = $.interceptorsForUncacheableTags[tag];
      if (interceptor != null)
        return interceptor;
      interceptorClass = init.interceptorsByTag[tag];
      if (interceptorClass == null) {
        altTag = $.alternateTagFunction.call$2(obj, tag);
        if (altTag != null) {
          record = $.dispatchRecordsForInstanceTags[altTag];
          if (record != null) {
            Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
            return record.i;
          }
          interceptor = $.interceptorsForUncacheableTags[altTag];
          if (interceptor != null)
            return interceptor;
          interceptorClass = init.interceptorsByTag[altTag];
          tag = altTag;
        }
      }
      if (interceptorClass == null)
        return null;
      interceptor = interceptorClass.prototype;
      mark = tag[0];
      if (mark === "!") {
        record = A.makeLeafDispatchRecord(interceptor);
        $.dispatchRecordsForInstanceTags[tag] = record;
        Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
        return record.i;
      }
      if (mark === "~") {
        $.interceptorsForUncacheableTags[tag] = interceptor;
        return interceptor;
      }
      if (mark === "-") {
        t1 = A.makeLeafDispatchRecord(interceptor);
        Object.defineProperty(Object.getPrototypeOf(obj), init.dispatchPropertyName, {value: t1, enumerable: false, writable: true, configurable: true});
        return t1.i;
      }
      if (mark === "+")
        return A.patchInteriorProto(obj, interceptor);
      if (mark === "*")
        throw A.wrapException(A.UnimplementedError$(tag));
      if (init.leafTags[tag] === true) {
        t1 = A.makeLeafDispatchRecord(interceptor);
        Object.defineProperty(Object.getPrototypeOf(obj), init.dispatchPropertyName, {value: t1, enumerable: false, writable: true, configurable: true});
        return t1.i;
      } else
        return A.patchInteriorProto(obj, interceptor);
    },
    patchInteriorProto(obj, interceptor) {
      var proto = Object.getPrototypeOf(obj);
      Object.defineProperty(proto, init.dispatchPropertyName, {value: J.makeDispatchRecord(interceptor, proto, null, null), enumerable: false, writable: true, configurable: true});
      return interceptor;
    },
    makeLeafDispatchRecord(interceptor) {
      return J.makeDispatchRecord(interceptor, false, null, !!interceptor.$isJavaScriptIndexingBehavior);
    },
    makeDefaultDispatchRecord(tag, interceptorClass, proto) {
      var interceptor = interceptorClass.prototype;
      if (init.leafTags[tag] === true)
        return A.makeLeafDispatchRecord(interceptor);
      else
        return J.makeDispatchRecord(interceptor, proto, null, null);
    },
    initNativeDispatch() {
      if (true === $.initNativeDispatchFlag)
        return;
      $.initNativeDispatchFlag = true;
      A.initNativeDispatchContinue();
    },
    initNativeDispatchContinue() {
      var map, tags, fun, i, tag, proto, record, interceptorClass;
      $.dispatchRecordsForInstanceTags = Object.create(null);
      $.interceptorsForUncacheableTags = Object.create(null);
      A.initHooks();
      map = init.interceptorsByTag;
      tags = Object.getOwnPropertyNames(map);
      if (typeof window != "undefined") {
        window;
        fun = function() {
        };
        for (i = 0; i < tags.length; ++i) {
          tag = tags[i];
          proto = $.prototypeForTagFunction.call$1(tag);
          if (proto != null) {
            record = A.makeDefaultDispatchRecord(tag, map[tag], proto);
            if (record != null) {
              Object.defineProperty(proto, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
              fun.prototype = proto;
            }
          }
        }
      }
      for (i = 0; i < tags.length; ++i) {
        tag = tags[i];
        if (/^[A-Za-z_]/.test(tag)) {
          interceptorClass = map[tag];
          map["!" + tag] = interceptorClass;
          map["~" + tag] = interceptorClass;
          map["-" + tag] = interceptorClass;
          map["+" + tag] = interceptorClass;
          map["*" + tag] = interceptorClass;
        }
      }
    },
    initHooks() {
      var transformers, i, transformer, getTag, getUnknownTag, prototypeForTag,
        hooks = B.C_JS_CONST0();
      hooks = A.applyHooksTransformer(B.C_JS_CONST1, A.applyHooksTransformer(B.C_JS_CONST2, A.applyHooksTransformer(B.C_JS_CONST3, A.applyHooksTransformer(B.C_JS_CONST3, A.applyHooksTransformer(B.C_JS_CONST4, A.applyHooksTransformer(B.C_JS_CONST5, A.applyHooksTransformer(B.C_JS_CONST6(B.C_JS_CONST), hooks)))))));
      if (typeof dartNativeDispatchHooksTransformer != "undefined") {
        transformers = dartNativeDispatchHooksTransformer;
        if (typeof transformers == "function")
          transformers = [transformers];
        if (Array.isArray(transformers))
          for (i = 0; i < transformers.length; ++i) {
            transformer = transformers[i];
            if (typeof transformer == "function")
              hooks = transformer(hooks) || hooks;
          }
      }
      getTag = hooks.getTag;
      getUnknownTag = hooks.getUnknownTag;
      prototypeForTag = hooks.prototypeForTag;
      $.getTagFunction = new A.initHooks_closure(getTag);
      $.alternateTagFunction = new A.initHooks_closure0(getUnknownTag);
      $.prototypeForTagFunction = new A.initHooks_closure1(prototypeForTag);
    },
    applyHooksTransformer(transformer, hooks) {
      return transformer(hooks) || hooks;
    },
    createRecordTypePredicate(shape, fieldRtis) {
      var $length = fieldRtis.length,
        $function = init.rttc["" + $length + ";" + shape];
      if ($function == null)
        return null;
      if ($length === 0)
        return $function;
      if ($length === $function.length)
        return $function.apply(null, fieldRtis);
      return $function(fieldRtis);
    },
    JSSyntaxRegExp_makeNative(source, multiLine, caseSensitive, unicode, dotAll, extraFlags) {
      var m = multiLine ? "m" : "",
        i = caseSensitive ? "" : "i",
        u = unicode ? "u" : "",
        s = dotAll ? "s" : "",
        regexp = function(source, modifiers) {
          try {
            return new RegExp(source, modifiers);
          } catch (e) {
            return e;
          }
        }(source, m + i + u + s + extraFlags);
      if (regexp instanceof RegExp)
        return regexp;
      throw A.wrapException(A.FormatException$("Illegal RegExp pattern (" + String(regexp) + ")", source, null));
    },
    stringContainsUnchecked(receiver, other, startIndex) {
      var t1 = receiver.indexOf(other, startIndex);
      return t1 >= 0;
    },
    escapeReplacement(replacement) {
      if (replacement.indexOf("$", 0) >= 0)
        return replacement.replace(/\$/g, "$$$$");
      return replacement;
    },
    quoteStringForRegExp(string) {
      if (/[[\]{}()*+?.\\^$|]/.test(string))
        return string.replace(/[[\]{}()*+?.\\^$|]/g, "\\$&");
      return string;
    },
    stringReplaceAllUnchecked(receiver, pattern, replacement) {
      var t1 = A.stringReplaceAllUncheckedString(receiver, pattern, replacement);
      return t1;
    },
    stringReplaceAllUncheckedString(receiver, pattern, replacement) {
      var $length, t1, i;
      if (pattern === "") {
        if (receiver === "")
          return replacement;
        $length = receiver.length;
        for (t1 = replacement, i = 0; i < $length; ++i)
          t1 = t1 + receiver[i] + replacement;
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      }
      if (receiver.indexOf(pattern, 0) < 0)
        return receiver;
      if (receiver.length < 500 || replacement.indexOf("$", 0) >= 0)
        return receiver.split(pattern).join(replacement);
      return receiver.replace(new RegExp(A.quoteStringForRegExp(pattern), "g"), A.escapeReplacement(replacement));
    },
    stringReplaceFirstUnchecked(receiver, pattern, replacement, startIndex) {
      var index = receiver.indexOf(pattern, startIndex);
      if (index < 0)
        return receiver;
      return A.stringReplaceRangeUnchecked(receiver, index, index + pattern.length, replacement);
    },
    stringReplaceRangeUnchecked(receiver, start, end, replacement) {
      return receiver.substring(0, start) + replacement + receiver.substring(end);
    },
    ConstantMapView: function ConstantMapView(t0, t1) {
      this._collection$_map = t0;
      this.$ti = t1;
    },
    ConstantMap: function ConstantMap() {
    },
    ConstantMap_map_closure: function ConstantMap_map_closure(t0, t1, t2) {
      this.$this = t0;
      this.transform = t1;
      this.result = t2;
    },
    ConstantStringMap: function ConstantStringMap(t0, t1, t2) {
      this._jsIndex = t0;
      this._values = t1;
      this.$ti = t2;
    },
    _KeysOrValues: function _KeysOrValues(t0, t1) {
      this.__js_helper$_elements = t0;
      this.$ti = t1;
    },
    _KeysOrValuesOrElementsIterator: function _KeysOrValuesOrElementsIterator(t0, t1, t2) {
      var _ = this;
      _.__js_helper$_elements = t0;
      _.__js_helper$_length = t1;
      _.__js_helper$_index = 0;
      _.__js_helper$_current = null;
      _.$ti = t2;
    },
    GeneralConstantMap: function GeneralConstantMap(t0, t1) {
      this._jsData = t0;
      this.$ti = t1;
    },
    ConstantSet: function ConstantSet() {
    },
    GeneralConstantSet: function GeneralConstantSet(t0, t1) {
      this.__js_helper$_elements = t0;
      this.$ti = t1;
    },
    Instantiation: function Instantiation() {
    },
    Instantiation1: function Instantiation1(t0, t1) {
      this._genericClosure = t0;
      this.$ti = t1;
    },
    JSInvocationMirror: function JSInvocationMirror(t0, t1, t2, t3, t4) {
      var _ = this;
      _.__js_helper$_memberName = t0;
      _.__js_helper$_kind = t1;
      _._arguments = t2;
      _._namedArgumentNames = t3;
      _._typeArgumentCount = t4;
    },
    Primitives_initTicker_closure: function Primitives_initTicker_closure(t0) {
      this.performance = t0;
    },
    SafeToStringHook: function SafeToStringHook() {
    },
    TypeErrorDecoder: function TypeErrorDecoder(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._pattern = t0;
      _._arguments = t1;
      _._argumentsExpr = t2;
      _._expr = t3;
      _._method = t4;
      _._receiver = t5;
    },
    NullError: function NullError() {
    },
    JsNoSuchMethodError: function JsNoSuchMethodError(t0, t1, t2) {
      this.__js_helper$_message = t0;
      this._method = t1;
      this._receiver = t2;
    },
    UnknownJsTypeError: function UnknownJsTypeError(t0) {
      this.__js_helper$_message = t0;
    },
    NullThrownFromJavaScriptException: function NullThrownFromJavaScriptException(t0) {
      this._irritant = t0;
    },
    ExceptionAndStackTrace: function ExceptionAndStackTrace(t0, t1) {
      this.dartException = t0;
      this.stackTrace = t1;
    },
    _StackTrace: function _StackTrace(t0) {
      this._exception = t0;
      this._trace = null;
    },
    Closure: function Closure() {
    },
    Closure0Args: function Closure0Args() {
    },
    Closure2Args: function Closure2Args() {
    },
    TearOffClosure: function TearOffClosure() {
    },
    StaticClosure: function StaticClosure() {
    },
    BoundClosure: function BoundClosure(t0, t1) {
      this._receiver = t0;
      this._interceptor = t1;
    },
    RuntimeError: function RuntimeError(t0) {
      this.message = t0;
    },
    JsLinkedHashMap: function JsLinkedHashMap(t0) {
      var _ = this;
      _.__js_helper$_length = 0;
      _._last = _._first = _.__js_helper$_rest = _._nums = _._strings = null;
      _._modifications = 0;
      _.$ti = t0;
    },
    JsLinkedHashMap_addAll_closure: function JsLinkedHashMap_addAll_closure(t0) {
      this.$this = t0;
    },
    LinkedHashMapCell: function LinkedHashMapCell(t0, t1) {
      var _ = this;
      _.hashMapCellKey = t0;
      _.hashMapCellValue = t1;
      _._previous = _._next = null;
    },
    LinkedHashMapKeysIterable: function LinkedHashMapKeysIterable(t0, t1) {
      this._map = t0;
      this.$ti = t1;
    },
    LinkedHashMapKeyIterator: function LinkedHashMapKeyIterator(t0, t1, t2) {
      var _ = this;
      _._map = t0;
      _._modifications = t1;
      _._cell = t2;
      _.__js_helper$_current = null;
    },
    LinkedHashMapValuesIterable: function LinkedHashMapValuesIterable(t0, t1) {
      this._map = t0;
      this.$ti = t1;
    },
    LinkedHashMapValueIterator: function LinkedHashMapValueIterator(t0, t1, t2) {
      var _ = this;
      _._map = t0;
      _._modifications = t1;
      _._cell = t2;
      _.__js_helper$_current = null;
    },
    LinkedHashMapEntriesIterable: function LinkedHashMapEntriesIterable(t0, t1) {
      this._map = t0;
      this.$ti = t1;
    },
    LinkedHashMapEntryIterator: function LinkedHashMapEntryIterator(t0, t1, t2, t3) {
      var _ = this;
      _._map = t0;
      _._modifications = t1;
      _._cell = t2;
      _.__js_helper$_current = null;
      _.$ti = t3;
    },
    JsConstantLinkedHashMap: function JsConstantLinkedHashMap(t0) {
      var _ = this;
      _.__js_helper$_length = 0;
      _._last = _._first = _.__js_helper$_rest = _._nums = _._strings = null;
      _._modifications = 0;
      _.$ti = t0;
    },
    initHooks_closure: function initHooks_closure(t0) {
      this.getTag = t0;
    },
    initHooks_closure0: function initHooks_closure0(t0) {
      this.getUnknownTag = t0;
    },
    initHooks_closure1: function initHooks_closure1(t0) {
      this.prototypeForTag = t0;
    },
    JSSyntaxRegExp: function JSSyntaxRegExp(t0, t1) {
      var _ = this;
      _.pattern = t0;
      _._nativeRegExp = t1;
      _._hasCapturesCache = _._nativeAnchoredRegExp = _._nativeGlobalRegExp = null;
    },
    _MatchImplementation: function _MatchImplementation(t0) {
      this._match = t0;
    },
    _AllMatchesIterable: function _AllMatchesIterable(t0, t1, t2) {
      this._re = t0;
      this.__js_helper$_string = t1;
      this.__js_helper$_start = t2;
    },
    _AllMatchesIterator: function _AllMatchesIterator(t0, t1, t2) {
      var _ = this;
      _._regExp = t0;
      _.__js_helper$_string = t1;
      _._nextIndex = t2;
      _.__js_helper$_current = null;
    },
    StringMatch: function StringMatch(t0, t1) {
      this.start = t0;
      this.pattern = t1;
    },
    _StringAllMatchesIterable: function _StringAllMatchesIterable(t0, t1, t2) {
      this._input = t0;
      this._pattern = t1;
      this.__js_helper$_index = t2;
    },
    _StringAllMatchesIterator: function _StringAllMatchesIterator(t0, t1, t2) {
      var _ = this;
      _._input = t0;
      _._pattern = t1;
      _.__js_helper$_index = t2;
      _.__js_helper$_current = null;
    },
    throwLateFieldADI(fieldName) {
      throw A.initializeExceptionWrapper(A.LateError$fieldADI(fieldName), new Error());
    },
    throwUnnamedLateFieldNI() {
      throw A.initializeExceptionWrapper(A.LateError$fieldNI(""), new Error());
    },
    throwUnnamedLateFieldAI() {
      throw A.initializeExceptionWrapper(A.LateError$fieldAI(""), new Error());
    },
    throwUnnamedLateFieldADI() {
      throw A.initializeExceptionWrapper(A.LateError$fieldADI(""), new Error());
    },
    _Cell$() {
      var t1 = new A._Cell();
      return t1.__late_helper$_value = t1;
    },
    _Cell: function _Cell() {
      this.__late_helper$_value = null;
    },
    _checkViewArguments(buffer, offsetInBytes, $length) {
    },
    _ensureNativeList(list) {
      return list;
    },
    NativeByteData_NativeByteData$view(buffer, offsetInBytes, $length) {
      A._checkViewArguments(buffer, offsetInBytes, $length);
      return $length == null ? new DataView(buffer, offsetInBytes) : new DataView(buffer, offsetInBytes, $length);
    },
    NativeFloat32List_NativeFloat32List$view(buffer, offsetInBytes, $length) {
      A._checkViewArguments(buffer, offsetInBytes, $length);
      return new Float32Array(buffer, offsetInBytes, $length);
    },
    NativeFloat64List_NativeFloat64List($length) {
      return new Float64Array($length);
    },
    NativeFloat64List_NativeFloat64List$view(buffer, offsetInBytes, $length) {
      A._checkViewArguments(buffer, offsetInBytes, $length);
      return new Float64Array(buffer, offsetInBytes, $length);
    },
    NativeInt32List_NativeInt32List$view(buffer, offsetInBytes, $length) {
      A._checkViewArguments(buffer, offsetInBytes, $length);
      return new Int32Array(buffer, offsetInBytes, $length);
    },
    NativeInt8List__create1(arg) {
      return new Int8Array(arg);
    },
    NativeUint16List__create1(arg) {
      return new Uint16Array(arg);
    },
    NativeUint8List_NativeUint8List($length) {
      return new Uint8Array($length);
    },
    NativeUint8List_NativeUint8List$view(buffer, offsetInBytes, $length) {
      A._checkViewArguments(buffer, offsetInBytes, $length);
      return $length == null ? new Uint8Array(buffer, offsetInBytes) : new Uint8Array(buffer, offsetInBytes, $length);
    },
    _checkValidIndex(index, list, $length) {
      if (index >>> 0 !== index || index >= $length)
        throw A.wrapException(A.diagnoseIndexError(list, index));
    },
    _checkValidRange(start, end, $length) {
      var t1;
      if (!(start >>> 0 !== start))
        if (end == null)
          t1 = start > $length;
        else
          t1 = end >>> 0 !== end || start > end || end > $length;
      else
        t1 = true;
      if (t1)
        throw A.wrapException(A.diagnoseRangeError(start, end, $length));
      if (end == null)
        return $length;
      return end;
    },
    NativeByteBuffer: function NativeByteBuffer() {
    },
    NativeTypedData: function NativeTypedData() {
    },
    _UnmodifiableNativeByteBufferView: function _UnmodifiableNativeByteBufferView(t0) {
      this._data = t0;
    },
    NativeByteData: function NativeByteData() {
    },
    NativeTypedArray: function NativeTypedArray() {
    },
    NativeTypedArrayOfDouble: function NativeTypedArrayOfDouble() {
    },
    NativeTypedArrayOfInt: function NativeTypedArrayOfInt() {
    },
    NativeFloat32List: function NativeFloat32List() {
    },
    NativeFloat64List: function NativeFloat64List() {
    },
    NativeInt16List: function NativeInt16List() {
    },
    NativeInt32List: function NativeInt32List() {
    },
    NativeInt8List: function NativeInt8List() {
    },
    NativeUint16List: function NativeUint16List() {
    },
    NativeUint32List: function NativeUint32List() {
    },
    NativeUint8ClampedList: function NativeUint8ClampedList() {
    },
    NativeUint8List: function NativeUint8List() {
    },
    _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin: function _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin() {
    },
    _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin: function _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin() {
    },
    _NativeTypedArrayOfInt_NativeTypedArray_ListMixin: function _NativeTypedArrayOfInt_NativeTypedArray_ListMixin() {
    },
    _NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin: function _NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin() {
    },
    Rti__getFutureFromFutureOr(universe, rti) {
      var future = rti._precomputed1;
      return future == null ? rti._precomputed1 = A._Universe__lookupInterfaceRti(universe, "Future", [rti._primary]) : future;
    },
    Rti__isUnionOfFunctionType(rti) {
      var kind = rti._kind;
      if (kind === 6 || kind === 7)
        return A.Rti__isUnionOfFunctionType(rti._primary);
      return kind === 11 || kind === 12;
    },
    Rti__getCanonicalRecipe(rti) {
      return rti._canonicalRecipe;
    },
    findType(recipe) {
      return A._Universe_eval(init.typeUniverse, recipe, false);
    },
    instantiatedGenericFunctionType(genericFunctionRti, instantiationRti) {
      var t1, cache, key, probe, rti;
      if (genericFunctionRti == null)
        return null;
      t1 = instantiationRti._rest;
      cache = genericFunctionRti._bindCache;
      if (cache == null)
        cache = genericFunctionRti._bindCache = new Map();
      key = instantiationRti._canonicalRecipe;
      probe = cache.get(key);
      if (probe != null)
        return probe;
      rti = A._substitute(init.typeUniverse, genericFunctionRti._primary, t1, 0);
      cache.set(key, rti);
      return rti;
    },
    _substitute(universe, rti, typeArguments, depth) {
      var baseType, substitutedBaseType, interfaceTypeArguments, substitutedInterfaceTypeArguments, base, substitutedBase, $arguments, substitutedArguments, t1, fields, substitutedFields, returnType, substitutedReturnType, functionParameters, substitutedFunctionParameters, bounds, substitutedBounds, index, argument,
        kind = rti._kind;
      switch (kind) {
        case 5:
        case 1:
        case 2:
        case 3:
        case 4:
          return rti;
        case 6:
          baseType = rti._primary;
          substitutedBaseType = A._substitute(universe, baseType, typeArguments, depth);
          if (substitutedBaseType === baseType)
            return rti;
          return A._Universe__lookupQuestionRti(universe, substitutedBaseType, true);
        case 7:
          baseType = rti._primary;
          substitutedBaseType = A._substitute(universe, baseType, typeArguments, depth);
          if (substitutedBaseType === baseType)
            return rti;
          return A._Universe__lookupFutureOrRti(universe, substitutedBaseType, true);
        case 8:
          interfaceTypeArguments = rti._rest;
          substitutedInterfaceTypeArguments = A._substituteArray(universe, interfaceTypeArguments, typeArguments, depth);
          if (substitutedInterfaceTypeArguments === interfaceTypeArguments)
            return rti;
          return A._Universe__lookupInterfaceRti(universe, rti._primary, substitutedInterfaceTypeArguments);
        case 9:
          base = rti._primary;
          substitutedBase = A._substitute(universe, base, typeArguments, depth);
          $arguments = rti._rest;
          substitutedArguments = A._substituteArray(universe, $arguments, typeArguments, depth);
          if (substitutedBase === base && substitutedArguments === $arguments)
            return rti;
          return A._Universe__lookupBindingRti(universe, substitutedBase, substitutedArguments);
        case 10:
          t1 = rti._primary;
          fields = rti._rest;
          substitutedFields = A._substituteArray(universe, fields, typeArguments, depth);
          if (substitutedFields === fields)
            return rti;
          return A._Universe__lookupRecordRti(universe, t1, substitutedFields);
        case 11:
          returnType = rti._primary;
          substitutedReturnType = A._substitute(universe, returnType, typeArguments, depth);
          functionParameters = rti._rest;
          substitutedFunctionParameters = A._substituteFunctionParameters(universe, functionParameters, typeArguments, depth);
          if (substitutedReturnType === returnType && substitutedFunctionParameters === functionParameters)
            return rti;
          return A._Universe__lookupFunctionRti(universe, substitutedReturnType, substitutedFunctionParameters);
        case 12:
          bounds = rti._rest;
          depth += bounds.length;
          substitutedBounds = A._substituteArray(universe, bounds, typeArguments, depth);
          base = rti._primary;
          substitutedBase = A._substitute(universe, base, typeArguments, depth);
          if (substitutedBounds === bounds && substitutedBase === base)
            return rti;
          return A._Universe__lookupGenericFunctionRti(universe, substitutedBase, substitutedBounds, true);
        case 13:
          index = rti._primary;
          if (index < depth)
            return rti;
          argument = typeArguments[index - depth];
          if (argument == null)
            return rti;
          return argument;
        default:
          throw A.wrapException(A.AssertionError$("Attempted to substitute unexpected RTI kind " + kind));
      }
    },
    _substituteArray(universe, rtiArray, typeArguments, depth) {
      var changed, i, rti, substitutedRti,
        $length = rtiArray.length,
        result = A._Utils_newArrayOrEmpty($length);
      for (changed = false, i = 0; i < $length; ++i) {
        rti = rtiArray[i];
        substitutedRti = A._substitute(universe, rti, typeArguments, depth);
        if (substitutedRti !== rti)
          changed = true;
        result[i] = substitutedRti;
      }
      return changed ? result : rtiArray;
    },
    _substituteNamed(universe, namedArray, typeArguments, depth) {
      var changed, i, t1, t2, rti, substitutedRti,
        $length = namedArray.length,
        result = A._Utils_newArrayOrEmpty($length);
      for (changed = false, i = 0; i < $length; i += 3) {
        t1 = namedArray[i];
        t2 = namedArray[i + 1];
        rti = namedArray[i + 2];
        substitutedRti = A._substitute(universe, rti, typeArguments, depth);
        if (substitutedRti !== rti)
          changed = true;
        result.splice(i, 3, t1, t2, substitutedRti);
      }
      return changed ? result : namedArray;
    },
    _substituteFunctionParameters(universe, functionParameters, typeArguments, depth) {
      var result,
        requiredPositional = functionParameters._requiredPositional,
        substitutedRequiredPositional = A._substituteArray(universe, requiredPositional, typeArguments, depth),
        optionalPositional = functionParameters._optionalPositional,
        substitutedOptionalPositional = A._substituteArray(universe, optionalPositional, typeArguments, depth),
        named = functionParameters._named,
        substitutedNamed = A._substituteNamed(universe, named, typeArguments, depth);
      if (substitutedRequiredPositional === requiredPositional && substitutedOptionalPositional === optionalPositional && substitutedNamed === named)
        return functionParameters;
      result = new A._FunctionParameters();
      result._requiredPositional = substitutedRequiredPositional;
      result._optionalPositional = substitutedOptionalPositional;
      result._named = substitutedNamed;
      return result;
    },
    _setArrayType(target, rti) {
      target[init.arrayRti] = rti;
      return target;
    },
    closureFunctionType(closure) {
      var signature = closure.$signature;
      if (signature != null) {
        if (typeof signature == "number")
          return A.getTypeFromTypesTable(signature);
        return closure.$signature();
      }
      return null;
    },
    instanceOrFunctionType(object, testRti) {
      var rti;
      if (A.Rti__isUnionOfFunctionType(testRti))
        if (object instanceof A.Closure) {
          rti = A.closureFunctionType(object);
          if (rti != null)
            return rti;
        }
      return A.instanceType(object);
    },
    instanceType(object) {
      if (object instanceof A.Object)
        return A._instanceType(object);
      if (Array.isArray(object))
        return A._arrayInstanceType(object);
      return A._instanceTypeFromConstructor(J.getInterceptor$(object));
    },
    _arrayInstanceType(object) {
      var rti = object[init.arrayRti],
        defaultRti = type$.JSArray_dynamic;
      if (rti == null)
        return defaultRti;
      if (rti.constructor !== defaultRti.constructor)
        return defaultRti;
      return rti;
    },
    _instanceType(object) {
      var rti = object.$ti;
      return rti != null ? rti : A._instanceTypeFromConstructor(object);
    },
    _instanceTypeFromConstructor(instance) {
      var $constructor = instance.constructor,
        probe = $constructor.$ccache;
      if (probe != null)
        return probe;
      return A._instanceTypeFromConstructorMiss(instance, $constructor);
    },
    _instanceTypeFromConstructorMiss(instance, $constructor) {
      var effectiveConstructor = instance instanceof A.Closure ? Object.getPrototypeOf(Object.getPrototypeOf(instance)).constructor : $constructor,
        rti = A._Universe_findErasedType(init.typeUniverse, effectiveConstructor.name);
      $constructor.$ccache = rti;
      return rti;
    },
    getTypeFromTypesTable(index) {
      var rti,
        table = init.types,
        type = table[index];
      if (typeof type == "string") {
        rti = A._Universe_eval(init.typeUniverse, type, false);
        table[index] = rti;
        return rti;
      }
      return type;
    },
    getRuntimeTypeOfDartObject(object) {
      return A.createRuntimeType(A._instanceType(object));
    },
    getRuntimeTypeOfClosure(closure) {
      var rti = A.closureFunctionType(closure);
      return A.createRuntimeType(rti == null ? A.instanceType(closure) : rti);
    },
    _structuralTypeOf(object) {
      var functionRti = object instanceof A.Closure ? A.closureFunctionType(object) : null;
      if (functionRti != null)
        return functionRti;
      if (type$.TrustedGetRuntimeType._is(object))
        return J.get$runtimeType$(object)._rti;
      if (Array.isArray(object))
        return A._arrayInstanceType(object);
      return A.instanceType(object);
    },
    createRuntimeType(rti) {
      var t1 = rti._cachedRuntimeType;
      return t1 == null ? rti._cachedRuntimeType = new A._Type(rti) : t1;
    },
    typeLiteral(recipe) {
      return A.createRuntimeType(A._Universe_eval(init.typeUniverse, recipe, false));
    },
    _installSpecializedIsTest(object) {
      var testRti = this;
      testRti._is = A._specializedIsTest(testRti);
      return testRti._is(object);
    },
    _specializedIsTest(testRti) {
      var kind, simpleIsFn, $name, predicate;
      if (testRti === type$.Object)
        return A._isObject;
      if (A.isTopType(testRti))
        return A._isTop;
      kind = testRti._kind;
      if (kind === 6)
        return A._generalNullableIsTestImplementation;
      if (kind === 1)
        return A._isNever;
      if (kind === 7)
        return A._isFutureOr;
      simpleIsFn = A._simpleSpecializedIsTest(testRti);
      if (simpleIsFn != null)
        return simpleIsFn;
      if (kind === 8) {
        $name = testRti._primary;
        if (testRti._rest.every(A.isTopType)) {
          testRti._specializedTestResource = "$is" + $name;
          if ($name === "List")
            return A._isListTestViaProperty;
          if (testRti === type$.JSObject)
            return A._isJSObject;
          return A._isTestViaProperty;
        }
      } else if (kind === 10) {
        predicate = A.createRecordTypePredicate(testRti._primary, testRti._rest);
        return predicate == null ? A._isNever : predicate;
      }
      return A._generalIsTestImplementation;
    },
    _simpleSpecializedIsTest(testRti) {
      if (testRti._kind === 8) {
        if (testRti === type$.int)
          return A._isInt;
        if (testRti === type$.double || testRti === type$.num)
          return A._isNum;
        if (testRti === type$.String)
          return A._isString;
        if (testRti === type$.bool)
          return A._isBool;
      }
      return null;
    },
    _installSpecializedAsCheck(object) {
      var testRti = this,
        asFn = A._generalAsCheckImplementation;
      if (A.isTopType(testRti))
        asFn = A._asTop;
      else if (testRti === type$.Object)
        asFn = A._asObject;
      else if (A.isNullable(testRti)) {
        asFn = A._generalNullableAsCheckImplementation;
        if (testRti === type$.nullable_int)
          asFn = A._asIntQ;
        else if (testRti === type$.nullable_String)
          asFn = A._asStringQ;
        else if (testRti === type$.nullable_bool)
          asFn = A._asBoolQ;
        else if (testRti === type$.nullable_num)
          asFn = A._asNumQ;
        else if (testRti === type$.nullable_double)
          asFn = A._asDoubleQ;
        else if (testRti === type$.nullable_JSObject)
          asFn = A._asJSObjectQ;
      } else if (testRti === type$.int)
        asFn = A._asInt;
      else if (testRti === type$.String)
        asFn = A._asString;
      else if (testRti === type$.bool)
        asFn = A._asBool;
      else if (testRti === type$.num)
        asFn = A._asNum;
      else if (testRti === type$.double)
        asFn = A._asDouble;
      else if (testRti === type$.JSObject)
        asFn = A._asJSObject;
      testRti._as = asFn;
      return testRti._as(object);
    },
    _generalIsTestImplementation(object) {
      var testRti = this;
      if (object == null)
        return A.isNullable(testRti);
      return A.isSubtype(init.typeUniverse, A.instanceOrFunctionType(object, testRti), testRti);
    },
    _generalNullableIsTestImplementation(object) {
      if (object == null)
        return true;
      return this._primary._is(object);
    },
    _isTestViaProperty(object) {
      var tag, testRti = this;
      if (object == null)
        return A.isNullable(testRti);
      tag = testRti._specializedTestResource;
      if (object instanceof A.Object)
        return !!object[tag];
      return !!J.getInterceptor$(object)[tag];
    },
    _isListTestViaProperty(object) {
      var tag, testRti = this;
      if (object == null)
        return A.isNullable(testRti);
      if (typeof object != "object")
        return false;
      if (Array.isArray(object))
        return true;
      tag = testRti._specializedTestResource;
      if (object instanceof A.Object)
        return !!object[tag];
      return !!J.getInterceptor$(object)[tag];
    },
    _isJSObject(object) {
      var t1 = this;
      if (object == null)
        return false;
      if (typeof object == "object") {
        if (object instanceof A.Object)
          return !!object[t1._specializedTestResource];
        return true;
      }
      if (typeof object == "function")
        return true;
      return false;
    },
    _isJSObjectStandalone(object) {
      if (typeof object == "object") {
        if (object instanceof A.Object)
          return type$.JSObject._is(object);
        return true;
      }
      if (typeof object == "function")
        return true;
      return false;
    },
    _generalAsCheckImplementation(object) {
      var testRti = this;
      if (object == null) {
        if (A.isNullable(testRti))
          return object;
      } else if (testRti._is(object))
        return object;
      throw A.initializeExceptionWrapper(A._errorForAsCheck(object, testRti), new Error());
    },
    _generalNullableAsCheckImplementation(object) {
      var testRti = this;
      if (object == null || testRti._is(object))
        return object;
      throw A.initializeExceptionWrapper(A._errorForAsCheck(object, testRti), new Error());
    },
    _errorForAsCheck(object, testRti) {
      return new A._TypeError("TypeError: " + A._Error_compose(object, A._rtiToString(testRti, null)));
    },
    _Error_compose(object, checkedTypeDescription) {
      return A.Error_safeToString(object) + ": type '" + A._rtiToString(A._structuralTypeOf(object), null) + "' is not a subtype of type '" + checkedTypeDescription + "'";
    },
    _TypeError__TypeError$forType(object, type) {
      return new A._TypeError("TypeError: " + A._Error_compose(object, type));
    },
    _isFutureOr(object) {
      var testRti = this;
      return testRti._primary._is(object) || A.Rti__getFutureFromFutureOr(init.typeUniverse, testRti)._is(object);
    },
    _isObject(object) {
      return object != null;
    },
    _asObject(object) {
      if (object != null)
        return object;
      throw A.initializeExceptionWrapper(A._TypeError__TypeError$forType(object, "Object"), new Error());
    },
    _isTop(object) {
      return true;
    },
    _asTop(object) {
      return object;
    },
    _isNever(object) {
      return false;
    },
    _isBool(object) {
      return true === object || false === object;
    },
    _asBool(object) {
      if (true === object)
        return true;
      if (false === object)
        return false;
      throw A.initializeExceptionWrapper(A._TypeError__TypeError$forType(object, "bool"), new Error());
    },
    _asBoolQ(object) {
      if (true === object)
        return true;
      if (false === object)
        return false;
      if (object == null)
        return object;
      throw A.initializeExceptionWrapper(A._TypeError__TypeError$forType(object, "bool?"), new Error());
    },
    _asDouble(object) {
      if (typeof object == "number")
        return object;
      throw A.initializeExceptionWrapper(A._TypeError__TypeError$forType(object, "double"), new Error());
    },
    _asDoubleQ(object) {
      if (typeof object == "number")
        return object;
      if (object == null)
        return object;
      throw A.initializeExceptionWrapper(A._TypeError__TypeError$forType(object, "double?"), new Error());
    },
    _isInt(object) {
      return typeof object == "number" && Math.floor(object) === object;
    },
    _asInt(object) {
      if (typeof object == "number" && Math.floor(object) === object)
        return object;
      throw A.initializeExceptionWrapper(A._TypeError__TypeError$forType(object, "int"), new Error());
    },
    _asIntQ(object) {
      if (typeof object == "number" && Math.floor(object) === object)
        return object;
      if (object == null)
        return object;
      throw A.initializeExceptionWrapper(A._TypeError__TypeError$forType(object, "int?"), new Error());
    },
    _isNum(object) {
      return typeof object == "number";
    },
    _asNum(object) {
      if (typeof object == "number")
        return object;
      throw A.initializeExceptionWrapper(A._TypeError__TypeError$forType(object, "num"), new Error());
    },
    _asNumQ(object) {
      if (typeof object == "number")
        return object;
      if (object == null)
        return object;
      throw A.initializeExceptionWrapper(A._TypeError__TypeError$forType(object, "num?"), new Error());
    },
    _isString(object) {
      return typeof object == "string";
    },
    _asString(object) {
      if (typeof object == "string")
        return object;
      throw A.initializeExceptionWrapper(A._TypeError__TypeError$forType(object, "String"), new Error());
    },
    _asStringQ(object) {
      if (typeof object == "string")
        return object;
      if (object == null)
        return object;
      throw A.initializeExceptionWrapper(A._TypeError__TypeError$forType(object, "String?"), new Error());
    },
    _asJSObject(object) {
      if (A._isJSObjectStandalone(object))
        return object;
      throw A.initializeExceptionWrapper(A._TypeError__TypeError$forType(object, "JSObject"), new Error());
    },
    _asJSObjectQ(object) {
      if (object == null)
        return object;
      if (A._isJSObjectStandalone(object))
        return object;
      throw A.initializeExceptionWrapper(A._TypeError__TypeError$forType(object, "JSObject?"), new Error());
    },
    _rtiArrayToString(array, genericContext) {
      var s, sep, i;
      for (s = "", sep = "", i = 0; i < array.length; ++i, sep = ", ")
        s += sep + A._rtiToString(array[i], genericContext);
      return s;
    },
    _recordRtiToString(recordType, genericContext) {
      var fieldCount, names, namesIndex, s, comma, i,
        partialShape = recordType._primary,
        fields = recordType._rest;
      if ("" === partialShape)
        return "(" + A._rtiArrayToString(fields, genericContext) + ")";
      fieldCount = fields.length;
      names = partialShape.split(",");
      namesIndex = names.length - fieldCount;
      for (s = "(", comma = "", i = 0; i < fieldCount; ++i, comma = ", ") {
        s += comma;
        if (namesIndex === 0)
          s += "{";
        s += A._rtiToString(fields[i], genericContext);
        if (namesIndex >= 0)
          s += " " + names[namesIndex];
        ++namesIndex;
      }
      return s + "})";
    },
    _functionRtiToString(functionType, genericContext, bounds) {
      var boundsLength, offset, i, t1, typeParametersText, typeSep, boundRti, kind, parameters, requiredPositional, requiredPositionalLength, optionalPositional, optionalPositionalLength, named, namedLength, returnTypeText, argumentsText, sep, _s2_ = ", ", outerContextLength = null;
      if (bounds != null) {
        boundsLength = bounds.length;
        if (genericContext == null)
          genericContext = A._setArrayType([], type$.JSArray_String);
        else
          outerContextLength = genericContext.length;
        offset = genericContext.length;
        for (i = boundsLength; i > 0; --i)
          genericContext.push("T" + (offset + i));
        for (t1 = type$.nullable_Object, typeParametersText = "<", typeSep = "", i = 0; i < boundsLength; ++i, typeSep = _s2_) {
          typeParametersText = typeParametersText + typeSep + genericContext[genericContext.length - 1 - i];
          boundRti = bounds[i];
          kind = boundRti._kind;
          if (!(kind === 2 || kind === 3 || kind === 4 || kind === 5 || boundRti === t1))
            typeParametersText += " extends " + A._rtiToString(boundRti, genericContext);
        }
        typeParametersText += ">";
      } else
        typeParametersText = "";
      t1 = functionType._primary;
      parameters = functionType._rest;
      requiredPositional = parameters._requiredPositional;
      requiredPositionalLength = requiredPositional.length;
      optionalPositional = parameters._optionalPositional;
      optionalPositionalLength = optionalPositional.length;
      named = parameters._named;
      namedLength = named.length;
      returnTypeText = A._rtiToString(t1, genericContext);
      for (argumentsText = "", sep = "", i = 0; i < requiredPositionalLength; ++i, sep = _s2_)
        argumentsText += sep + A._rtiToString(requiredPositional[i], genericContext);
      if (optionalPositionalLength > 0) {
        argumentsText += sep + "[";
        for (sep = "", i = 0; i < optionalPositionalLength; ++i, sep = _s2_)
          argumentsText += sep + A._rtiToString(optionalPositional[i], genericContext);
        argumentsText += "]";
      }
      if (namedLength > 0) {
        argumentsText += sep + "{";
        for (sep = "", i = 0; i < namedLength; i += 3, sep = _s2_) {
          argumentsText += sep;
          if (named[i + 1])
            argumentsText += "required ";
          argumentsText += A._rtiToString(named[i + 2], genericContext) + " " + named[i];
        }
        argumentsText += "}";
      }
      if (outerContextLength != null) {
        genericContext.toString;
        genericContext.length = outerContextLength;
      }
      return typeParametersText + "(" + argumentsText + ") => " + returnTypeText;
    },
    _rtiToString(rti, genericContext) {
      var questionArgument, s, argumentKind, $name, $arguments, t1,
        kind = rti._kind;
      if (kind === 5)
        return "erased";
      if (kind === 2)
        return "dynamic";
      if (kind === 3)
        return "void";
      if (kind === 1)
        return "Never";
      if (kind === 4)
        return "any";
      if (kind === 6) {
        questionArgument = rti._primary;
        s = A._rtiToString(questionArgument, genericContext);
        argumentKind = questionArgument._kind;
        return (argumentKind === 11 || argumentKind === 12 ? "(" + s + ")" : s) + "?";
      }
      if (kind === 7)
        return "FutureOr<" + A._rtiToString(rti._primary, genericContext) + ">";
      if (kind === 8) {
        $name = A._unminifyOrTag(rti._primary);
        $arguments = rti._rest;
        return $arguments.length > 0 ? $name + ("<" + A._rtiArrayToString($arguments, genericContext) + ">") : $name;
      }
      if (kind === 10)
        return A._recordRtiToString(rti, genericContext);
      if (kind === 11)
        return A._functionRtiToString(rti, genericContext, null);
      if (kind === 12)
        return A._functionRtiToString(rti._primary, genericContext, rti._rest);
      if (kind === 13) {
        t1 = rti._primary;
        return genericContext[genericContext.length - 1 - t1];
      }
      return "?";
    },
    _unminifyOrTag(rawClassName) {
      var preserved = init.mangledGlobalNames[rawClassName];
      if (preserved != null)
        return preserved;
      return rawClassName;
    },
    _Universe_findRule(universe, targetType) {
      var rule = universe.tR[targetType];
      for (; typeof rule == "string";)
        rule = universe.tR[rule];
      return rule;
    },
    _Universe_findErasedType(universe, cls) {
      var $length, erased, $arguments, i, $interface,
        metadata = universe.eT,
        probe = metadata[cls];
      if (probe == null)
        return A._Universe_eval(universe, cls, false);
      else if (typeof probe == "number") {
        $length = probe;
        erased = A._Universe__lookupTerminalRti(universe, 5, "#");
        $arguments = A._Utils_newArrayOrEmpty($length);
        for (i = 0; i < $length; ++i)
          $arguments[i] = erased;
        $interface = A._Universe__lookupInterfaceRti(universe, cls, $arguments);
        metadata[cls] = $interface;
        return $interface;
      } else
        return probe;
    },
    _Universe_addRules(universe, rules) {
      return A._Utils_objectAssign(universe.tR, rules);
    },
    _Universe_addErasedTypes(universe, types) {
      return A._Utils_objectAssign(universe.eT, types);
    },
    _Universe_eval(universe, recipe, normalize) {
      var rti,
        cache = universe.eC,
        probe = cache.get(recipe);
      if (probe != null)
        return probe;
      rti = A._Parser_parse(A._Parser_create(universe, null, recipe, false));
      cache.set(recipe, rti);
      return rti;
    },
    _Universe_evalInEnvironment(universe, environment, recipe) {
      var probe, rti,
        cache = environment._evalCache;
      if (cache == null)
        cache = environment._evalCache = new Map();
      probe = cache.get(recipe);
      if (probe != null)
        return probe;
      rti = A._Parser_parse(A._Parser_create(universe, environment, recipe, true));
      cache.set(recipe, rti);
      return rti;
    },
    _Universe_bind(universe, environment, argumentsRti) {
      var argumentsRecipe, probe, rti,
        cache = environment._bindCache;
      if (cache == null)
        cache = environment._bindCache = new Map();
      argumentsRecipe = argumentsRti._canonicalRecipe;
      probe = cache.get(argumentsRecipe);
      if (probe != null)
        return probe;
      rti = A._Universe__lookupBindingRti(universe, environment, argumentsRti._kind === 9 ? argumentsRti._rest : [argumentsRti]);
      cache.set(argumentsRecipe, rti);
      return rti;
    },
    _Universe__installTypeTests(universe, rti) {
      rti._as = A._installSpecializedAsCheck;
      rti._is = A._installSpecializedIsTest;
      return rti;
    },
    _Universe__lookupTerminalRti(universe, kind, key) {
      var rti, t1,
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = kind;
      rti._canonicalRecipe = key;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__lookupQuestionRti(universe, baseType, normalize) {
      var t1,
        key = baseType._canonicalRecipe + "?",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      t1 = A._Universe__createQuestionRti(universe, baseType, key, normalize);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__createQuestionRti(universe, baseType, key, normalize) {
      var baseKind, t1, rti;
      if (normalize) {
        baseKind = baseType._kind;
        t1 = true;
        if (!A.isTopType(baseType))
          if (!(baseType === type$.Null || baseType === type$.JSNull))
            if (baseKind !== 6)
              t1 = baseKind === 7 && A.isNullable(baseType._primary);
        if (t1)
          return baseType;
        else if (baseKind === 1)
          return type$.Null;
      }
      rti = new A.Rti(null, null);
      rti._kind = 6;
      rti._primary = baseType;
      rti._canonicalRecipe = key;
      return A._Universe__installTypeTests(universe, rti);
    },
    _Universe__lookupFutureOrRti(universe, baseType, normalize) {
      var t1,
        key = baseType._canonicalRecipe + "/",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      t1 = A._Universe__createFutureOrRti(universe, baseType, key, normalize);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__createFutureOrRti(universe, baseType, key, normalize) {
      var t1, rti;
      if (normalize) {
        t1 = baseType._kind;
        if (A.isTopType(baseType) || baseType === type$.Object)
          return baseType;
        else if (t1 === 1)
          return A._Universe__lookupInterfaceRti(universe, "Future", [baseType]);
        else if (baseType === type$.Null || baseType === type$.JSNull)
          return type$.nullable_Future_Null;
      }
      rti = new A.Rti(null, null);
      rti._kind = 7;
      rti._primary = baseType;
      rti._canonicalRecipe = key;
      return A._Universe__installTypeTests(universe, rti);
    },
    _Universe__lookupGenericFunctionParameterRti(universe, index) {
      var rti, t1,
        key = "" + index + "^",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = 13;
      rti._primary = index;
      rti._canonicalRecipe = key;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__canonicalRecipeJoin($arguments) {
      var s, sep, i,
        $length = $arguments.length;
      for (s = "", sep = "", i = 0; i < $length; ++i, sep = ",")
        s += sep + $arguments[i]._canonicalRecipe;
      return s;
    },
    _Universe__canonicalRecipeJoinNamed($arguments) {
      var s, sep, i, t1, nameSep,
        $length = $arguments.length;
      for (s = "", sep = "", i = 0; i < $length; i += 3, sep = ",") {
        t1 = $arguments[i];
        nameSep = $arguments[i + 1] ? "!" : ":";
        s += sep + t1 + nameSep + $arguments[i + 2]._canonicalRecipe;
      }
      return s;
    },
    _Universe__lookupInterfaceRti(universe, $name, $arguments) {
      var probe, rti, t1,
        s = $name;
      if ($arguments.length > 0)
        s += "<" + A._Universe__canonicalRecipeJoin($arguments) + ">";
      probe = universe.eC.get(s);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = 8;
      rti._primary = $name;
      rti._rest = $arguments;
      if ($arguments.length > 0)
        rti._precomputed1 = $arguments[0];
      rti._canonicalRecipe = s;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(s, t1);
      return t1;
    },
    _Universe__lookupBindingRti(universe, base, $arguments) {
      var newBase, newArguments, key, probe, rti, t1;
      if (base._kind === 9) {
        newBase = base._primary;
        newArguments = base._rest.concat($arguments);
      } else {
        newArguments = $arguments;
        newBase = base;
      }
      key = newBase._canonicalRecipe + (";<" + A._Universe__canonicalRecipeJoin(newArguments) + ">");
      probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = 9;
      rti._primary = newBase;
      rti._rest = newArguments;
      rti._canonicalRecipe = key;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__lookupRecordRti(universe, partialShapeTag, fields) {
      var rti, t1,
        key = "+" + (partialShapeTag + "(" + A._Universe__canonicalRecipeJoin(fields) + ")"),
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = 10;
      rti._primary = partialShapeTag;
      rti._rest = fields;
      rti._canonicalRecipe = key;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__lookupFunctionRti(universe, returnType, parameters) {
      var sep, key, probe, rti, t1,
        s = returnType._canonicalRecipe,
        requiredPositional = parameters._requiredPositional,
        requiredPositionalLength = requiredPositional.length,
        optionalPositional = parameters._optionalPositional,
        optionalPositionalLength = optionalPositional.length,
        named = parameters._named,
        namedLength = named.length,
        recipe = "(" + A._Universe__canonicalRecipeJoin(requiredPositional);
      if (optionalPositionalLength > 0) {
        sep = requiredPositionalLength > 0 ? "," : "";
        recipe += sep + "[" + A._Universe__canonicalRecipeJoin(optionalPositional) + "]";
      }
      if (namedLength > 0) {
        sep = requiredPositionalLength > 0 ? "," : "";
        recipe += sep + "{" + A._Universe__canonicalRecipeJoinNamed(named) + "}";
      }
      key = s + (recipe + ")");
      probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = 11;
      rti._primary = returnType;
      rti._rest = parameters;
      rti._canonicalRecipe = key;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__lookupGenericFunctionRti(universe, baseFunctionType, bounds, normalize) {
      var t1,
        key = baseFunctionType._canonicalRecipe + ("<" + A._Universe__canonicalRecipeJoin(bounds) + ">"),
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      t1 = A._Universe__createGenericFunctionRti(universe, baseFunctionType, bounds, key, normalize);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__createGenericFunctionRti(universe, baseFunctionType, bounds, key, normalize) {
      var $length, typeArguments, count, i, bound, substitutedBase, substitutedBounds, rti;
      if (normalize) {
        $length = bounds.length;
        typeArguments = A._Utils_newArrayOrEmpty($length);
        for (count = 0, i = 0; i < $length; ++i) {
          bound = bounds[i];
          if (bound._kind === 1) {
            typeArguments[i] = bound;
            ++count;
          }
        }
        if (count > 0) {
          substitutedBase = A._substitute(universe, baseFunctionType, typeArguments, 0);
          substitutedBounds = A._substituteArray(universe, bounds, typeArguments, 0);
          return A._Universe__lookupGenericFunctionRti(universe, substitutedBase, substitutedBounds, bounds !== substitutedBounds);
        }
      }
      rti = new A.Rti(null, null);
      rti._kind = 12;
      rti._primary = baseFunctionType;
      rti._rest = bounds;
      rti._canonicalRecipe = key;
      return A._Universe__installTypeTests(universe, rti);
    },
    _Parser_create(universe, environment, recipe, normalize) {
      return {u: universe, e: environment, r: recipe, s: [], p: 0, n: normalize};
    },
    _Parser_parse(parser) {
      var t1, i, ch, u, array, end, item,
        source = parser.r,
        stack = parser.s;
      for (t1 = source.length, i = 0; i < t1;) {
        ch = source.charCodeAt(i);
        if (ch >= 48 && ch <= 57)
          i = A._Parser_handleDigit(i + 1, ch, source, stack);
        else if ((((ch | 32) >>> 0) - 97 & 65535) < 26 || ch === 95 || ch === 36 || ch === 124)
          i = A._Parser_handleIdentifier(parser, i, source, stack, false);
        else if (ch === 46)
          i = A._Parser_handleIdentifier(parser, i, source, stack, true);
        else {
          ++i;
          switch (ch) {
            case 44:
              break;
            case 58:
              stack.push(false);
              break;
            case 33:
              stack.push(true);
              break;
            case 59:
              stack.push(A._Parser_toType(parser.u, parser.e, stack.pop()));
              break;
            case 94:
              stack.push(A._Universe__lookupGenericFunctionParameterRti(parser.u, stack.pop()));
              break;
            case 35:
              stack.push(A._Universe__lookupTerminalRti(parser.u, 5, "#"));
              break;
            case 64:
              stack.push(A._Universe__lookupTerminalRti(parser.u, 2, "@"));
              break;
            case 126:
              stack.push(A._Universe__lookupTerminalRti(parser.u, 3, "~"));
              break;
            case 60:
              stack.push(parser.p);
              parser.p = stack.length;
              break;
            case 62:
              A._Parser_handleTypeArguments(parser, stack);
              break;
            case 38:
              A._Parser_handleExtendedOperations(parser, stack);
              break;
            case 63:
              u = parser.u;
              stack.push(A._Universe__lookupQuestionRti(u, A._Parser_toType(u, parser.e, stack.pop()), parser.n));
              break;
            case 47:
              u = parser.u;
              stack.push(A._Universe__lookupFutureOrRti(u, A._Parser_toType(u, parser.e, stack.pop()), parser.n));
              break;
            case 40:
              stack.push(-3);
              stack.push(parser.p);
              parser.p = stack.length;
              break;
            case 41:
              A._Parser_handleArguments(parser, stack);
              break;
            case 91:
              stack.push(parser.p);
              parser.p = stack.length;
              break;
            case 93:
              array = stack.splice(parser.p);
              A._Parser_toTypes(parser.u, parser.e, array);
              parser.p = stack.pop();
              stack.push(array);
              stack.push(-1);
              break;
            case 123:
              stack.push(parser.p);
              parser.p = stack.length;
              break;
            case 125:
              array = stack.splice(parser.p);
              A._Parser_toTypesNamed(parser.u, parser.e, array);
              parser.p = stack.pop();
              stack.push(array);
              stack.push(-2);
              break;
            case 43:
              end = source.indexOf("(", i);
              stack.push(source.substring(i, end));
              stack.push(-4);
              stack.push(parser.p);
              parser.p = stack.length;
              i = end + 1;
              break;
            default:
              throw "Bad character " + ch;
          }
        }
      }
      item = stack.pop();
      return A._Parser_toType(parser.u, parser.e, item);
    },
    _Parser_handleDigit(i, digit, source, stack) {
      var t1, ch,
        value = digit - 48;
      for (t1 = source.length; i < t1; ++i) {
        ch = source.charCodeAt(i);
        if (!(ch >= 48 && ch <= 57))
          break;
        value = value * 10 + (ch - 48);
      }
      stack.push(value);
      return i;
    },
    _Parser_handleIdentifier(parser, start, source, stack, hasPeriod) {
      var t1, ch, t2, string, environment, recipe,
        i = start + 1;
      for (t1 = source.length; i < t1; ++i) {
        ch = source.charCodeAt(i);
        if (ch === 46) {
          if (hasPeriod)
            break;
          hasPeriod = true;
        } else {
          if (!((((ch | 32) >>> 0) - 97 & 65535) < 26 || ch === 95 || ch === 36 || ch === 124))
            t2 = ch >= 48 && ch <= 57;
          else
            t2 = true;
          if (!t2)
            break;
        }
      }
      string = source.substring(start, i);
      if (hasPeriod) {
        t1 = parser.u;
        environment = parser.e;
        if (environment._kind === 9)
          environment = environment._primary;
        recipe = A._Universe_findRule(t1, environment._primary)[string];
        if (recipe == null)
          A.throwExpression('No "' + string + '" in "' + A.Rti__getCanonicalRecipe(environment) + '"');
        stack.push(A._Universe_evalInEnvironment(t1, environment, recipe));
      } else
        stack.push(string);
      return i;
    },
    _Parser_handleTypeArguments(parser, stack) {
      var base,
        universe = parser.u,
        $arguments = A._Parser_collectArray(parser, stack),
        head = stack.pop();
      if (typeof head == "string")
        stack.push(A._Universe__lookupInterfaceRti(universe, head, $arguments));
      else {
        base = A._Parser_toType(universe, parser.e, head);
        switch (base._kind) {
          case 11:
            stack.push(A._Universe__lookupGenericFunctionRti(universe, base, $arguments, parser.n));
            break;
          default:
            stack.push(A._Universe__lookupBindingRti(universe, base, $arguments));
            break;
        }
      }
    },
    _Parser_handleArguments(parser, stack) {
      var requiredPositional, returnType, parameters,
        universe = parser.u,
        head = stack.pop(),
        optionalPositional = null, named = null;
      if (typeof head == "number")
        switch (head) {
          case -1:
            optionalPositional = stack.pop();
            break;
          case -2:
            named = stack.pop();
            break;
          default:
            stack.push(head);
            break;
        }
      else
        stack.push(head);
      requiredPositional = A._Parser_collectArray(parser, stack);
      head = stack.pop();
      switch (head) {
        case -3:
          head = stack.pop();
          if (optionalPositional == null)
            optionalPositional = universe.sEA;
          if (named == null)
            named = universe.sEA;
          returnType = A._Parser_toType(universe, parser.e, head);
          parameters = new A._FunctionParameters();
          parameters._requiredPositional = requiredPositional;
          parameters._optionalPositional = optionalPositional;
          parameters._named = named;
          stack.push(A._Universe__lookupFunctionRti(universe, returnType, parameters));
          return;
        case -4:
          stack.push(A._Universe__lookupRecordRti(universe, stack.pop(), requiredPositional));
          return;
        default:
          throw A.wrapException(A.AssertionError$("Unexpected state under `()`: " + A.S(head)));
      }
    },
    _Parser_handleExtendedOperations(parser, stack) {
      var $top = stack.pop();
      if (0 === $top) {
        stack.push(A._Universe__lookupTerminalRti(parser.u, 1, "0&"));
        return;
      }
      if (1 === $top) {
        stack.push(A._Universe__lookupTerminalRti(parser.u, 4, "1&"));
        return;
      }
      throw A.wrapException(A.AssertionError$("Unexpected extended operation " + A.S($top)));
    },
    _Parser_collectArray(parser, stack) {
      var array = stack.splice(parser.p);
      A._Parser_toTypes(parser.u, parser.e, array);
      parser.p = stack.pop();
      return array;
    },
    _Parser_toType(universe, environment, item) {
      if (typeof item == "string")
        return A._Universe__lookupInterfaceRti(universe, item, universe.sEA);
      else if (typeof item == "number") {
        environment.toString;
        return A._Parser_indexToType(universe, environment, item);
      } else
        return item;
    },
    _Parser_toTypes(universe, environment, items) {
      var i,
        $length = items.length;
      for (i = 0; i < $length; ++i)
        items[i] = A._Parser_toType(universe, environment, items[i]);
    },
    _Parser_toTypesNamed(universe, environment, items) {
      var i,
        $length = items.length;
      for (i = 2; i < $length; i += 3)
        items[i] = A._Parser_toType(universe, environment, items[i]);
    },
    _Parser_indexToType(universe, environment, index) {
      var typeArguments, len,
        kind = environment._kind;
      if (kind === 9) {
        if (index === 0)
          return environment._primary;
        typeArguments = environment._rest;
        len = typeArguments.length;
        if (index <= len)
          return typeArguments[index - 1];
        index -= len;
        environment = environment._primary;
        kind = environment._kind;
      } else if (index === 0)
        return environment;
      if (kind !== 8)
        throw A.wrapException(A.AssertionError$("Indexed base must be an interface type"));
      typeArguments = environment._rest;
      if (index <= typeArguments.length)
        return typeArguments[index - 1];
      throw A.wrapException(A.AssertionError$("Bad index " + index + " for " + environment.toString$0(0)));
    },
    isSubtype(universe, s, t) {
      var result,
        sCache = s._isSubtypeCache;
      if (sCache == null)
        sCache = s._isSubtypeCache = new Map();
      result = sCache.get(t);
      if (result == null) {
        result = A._isSubtype(universe, s, null, t, null);
        sCache.set(t, result);
      }
      return result;
    },
    _isSubtype(universe, s, sEnv, t, tEnv) {
      var sKind, leftTypeVariable, tKind, t1, t2, sBounds, tBounds, sLength, i, sBound, tBound;
      if (s === t)
        return true;
      if (A.isTopType(t))
        return true;
      sKind = s._kind;
      if (sKind === 4)
        return true;
      if (A.isTopType(s))
        return false;
      if (s._kind === 1)
        return true;
      leftTypeVariable = sKind === 13;
      if (leftTypeVariable)
        if (A._isSubtype(universe, sEnv[s._primary], sEnv, t, tEnv))
          return true;
      tKind = t._kind;
      t1 = type$.Null;
      if (s === t1 || s === type$.JSNull) {
        if (tKind === 7)
          return A._isSubtype(universe, s, sEnv, t._primary, tEnv);
        return t === t1 || t === type$.JSNull || tKind === 6;
      }
      if (t === type$.Object) {
        if (sKind === 7)
          return A._isSubtype(universe, s._primary, sEnv, t, tEnv);
        return sKind !== 6;
      }
      if (sKind === 7) {
        if (!A._isSubtype(universe, s._primary, sEnv, t, tEnv))
          return false;
        return A._isSubtype(universe, A.Rti__getFutureFromFutureOr(universe, s), sEnv, t, tEnv);
      }
      if (sKind === 6)
        return A._isSubtype(universe, t1, sEnv, t, tEnv) && A._isSubtype(universe, s._primary, sEnv, t, tEnv);
      if (tKind === 7) {
        if (A._isSubtype(universe, s, sEnv, t._primary, tEnv))
          return true;
        return A._isSubtype(universe, s, sEnv, A.Rti__getFutureFromFutureOr(universe, t), tEnv);
      }
      if (tKind === 6)
        return A._isSubtype(universe, s, sEnv, t1, tEnv) || A._isSubtype(universe, s, sEnv, t._primary, tEnv);
      if (leftTypeVariable)
        return false;
      t1 = sKind !== 11;
      if ((!t1 || sKind === 12) && t === type$.Function)
        return true;
      t2 = sKind === 10;
      if (t2 && t === type$.Record)
        return true;
      if (tKind === 12) {
        if (s === type$.JavaScriptFunction)
          return true;
        if (sKind !== 12)
          return false;
        sBounds = s._rest;
        tBounds = t._rest;
        sLength = sBounds.length;
        if (sLength !== tBounds.length)
          return false;
        sEnv = sEnv == null ? sBounds : sBounds.concat(sEnv);
        tEnv = tEnv == null ? tBounds : tBounds.concat(tEnv);
        for (i = 0; i < sLength; ++i) {
          sBound = sBounds[i];
          tBound = tBounds[i];
          if (!A._isSubtype(universe, sBound, sEnv, tBound, tEnv) || !A._isSubtype(universe, tBound, tEnv, sBound, sEnv))
            return false;
        }
        return A._isFunctionSubtype(universe, s._primary, sEnv, t._primary, tEnv);
      }
      if (tKind === 11) {
        if (s === type$.JavaScriptFunction)
          return true;
        if (t1)
          return false;
        return A._isFunctionSubtype(universe, s, sEnv, t, tEnv);
      }
      if (sKind === 8) {
        if (tKind !== 8)
          return false;
        return A._isInterfaceSubtype(universe, s, sEnv, t, tEnv);
      }
      if (t2 && tKind === 10)
        return A._isRecordSubtype(universe, s, sEnv, t, tEnv);
      return false;
    },
    _isFunctionSubtype(universe, s, sEnv, t, tEnv) {
      var sParameters, tParameters, sRequiredPositional, tRequiredPositional, sRequiredPositionalLength, tRequiredPositionalLength, requiredPositionalDelta, sOptionalPositional, tOptionalPositional, sOptionalPositionalLength, tOptionalPositionalLength, i, t1, sNamed, tNamed, sNamedLength, tNamedLength, sIndex, tIndex, tName, sName, sIsRequired;
      if (!A._isSubtype(universe, s._primary, sEnv, t._primary, tEnv))
        return false;
      sParameters = s._rest;
      tParameters = t._rest;
      sRequiredPositional = sParameters._requiredPositional;
      tRequiredPositional = tParameters._requiredPositional;
      sRequiredPositionalLength = sRequiredPositional.length;
      tRequiredPositionalLength = tRequiredPositional.length;
      if (sRequiredPositionalLength > tRequiredPositionalLength)
        return false;
      requiredPositionalDelta = tRequiredPositionalLength - sRequiredPositionalLength;
      sOptionalPositional = sParameters._optionalPositional;
      tOptionalPositional = tParameters._optionalPositional;
      sOptionalPositionalLength = sOptionalPositional.length;
      tOptionalPositionalLength = tOptionalPositional.length;
      if (sRequiredPositionalLength + sOptionalPositionalLength < tRequiredPositionalLength + tOptionalPositionalLength)
        return false;
      for (i = 0; i < sRequiredPositionalLength; ++i) {
        t1 = sRequiredPositional[i];
        if (!A._isSubtype(universe, tRequiredPositional[i], tEnv, t1, sEnv))
          return false;
      }
      for (i = 0; i < requiredPositionalDelta; ++i) {
        t1 = sOptionalPositional[i];
        if (!A._isSubtype(universe, tRequiredPositional[sRequiredPositionalLength + i], tEnv, t1, sEnv))
          return false;
      }
      for (i = 0; i < tOptionalPositionalLength; ++i) {
        t1 = sOptionalPositional[requiredPositionalDelta + i];
        if (!A._isSubtype(universe, tOptionalPositional[i], tEnv, t1, sEnv))
          return false;
      }
      sNamed = sParameters._named;
      tNamed = tParameters._named;
      sNamedLength = sNamed.length;
      tNamedLength = tNamed.length;
      for (sIndex = 0, tIndex = 0; tIndex < tNamedLength; tIndex += 3) {
        tName = tNamed[tIndex];
        for (; true;) {
          if (sIndex >= sNamedLength)
            return false;
          sName = sNamed[sIndex];
          sIndex += 3;
          if (tName < sName)
            return false;
          sIsRequired = sNamed[sIndex - 2];
          if (sName < tName) {
            if (sIsRequired)
              return false;
            continue;
          }
          t1 = tNamed[tIndex + 1];
          if (sIsRequired && !t1)
            return false;
          t1 = sNamed[sIndex - 1];
          if (!A._isSubtype(universe, tNamed[tIndex + 2], tEnv, t1, sEnv))
            return false;
          break;
        }
      }
      for (; sIndex < sNamedLength;) {
        if (sNamed[sIndex + 1])
          return false;
        sIndex += 3;
      }
      return true;
    },
    _isInterfaceSubtype(universe, s, sEnv, t, tEnv) {
      var rule, recipes, $length, supertypeArgs, i,
        sName = s._primary,
        tName = t._primary;
      for (; sName !== tName;) {
        rule = universe.tR[sName];
        if (rule == null)
          return false;
        if (typeof rule == "string") {
          sName = rule;
          continue;
        }
        recipes = rule[tName];
        if (recipes == null)
          return false;
        $length = recipes.length;
        supertypeArgs = $length > 0 ? new Array($length) : init.typeUniverse.sEA;
        for (i = 0; i < $length; ++i)
          supertypeArgs[i] = A._Universe_evalInEnvironment(universe, s, recipes[i]);
        return A._areArgumentsSubtypes(universe, supertypeArgs, null, sEnv, t._rest, tEnv);
      }
      return A._areArgumentsSubtypes(universe, s._rest, null, sEnv, t._rest, tEnv);
    },
    _areArgumentsSubtypes(universe, sArgs, sVariances, sEnv, tArgs, tEnv) {
      var i,
        $length = sArgs.length;
      for (i = 0; i < $length; ++i)
        if (!A._isSubtype(universe, sArgs[i], sEnv, tArgs[i], tEnv))
          return false;
      return true;
    },
    _isRecordSubtype(universe, s, sEnv, t, tEnv) {
      var i,
        sFields = s._rest,
        tFields = t._rest,
        sCount = sFields.length;
      if (sCount !== tFields.length)
        return false;
      if (s._primary !== t._primary)
        return false;
      for (i = 0; i < sCount; ++i)
        if (!A._isSubtype(universe, sFields[i], sEnv, tFields[i], tEnv))
          return false;
      return true;
    },
    isNullable(t) {
      var kind = t._kind,
        t1 = true;
      if (!(t === type$.Null || t === type$.JSNull))
        if (!A.isTopType(t))
          if (kind !== 6)
            t1 = kind === 7 && A.isNullable(t._primary);
      return t1;
    },
    isTopType(t) {
      var kind = t._kind;
      return kind === 2 || kind === 3 || kind === 4 || kind === 5 || t === type$.nullable_Object;
    },
    _Utils_objectAssign(o, other) {
      var i, key,
        keys = Object.keys(other),
        $length = keys.length;
      for (i = 0; i < $length; ++i) {
        key = keys[i];
        o[key] = other[key];
      }
    },
    _Utils_newArrayOrEmpty($length) {
      return $length > 0 ? new Array($length) : init.typeUniverse.sEA;
    },
    Rti: function Rti(t0, t1) {
      var _ = this;
      _._as = t0;
      _._is = t1;
      _._cachedRuntimeType = _._specializedTestResource = _._isSubtypeCache = _._precomputed1 = null;
      _._kind = 0;
      _._canonicalRecipe = _._bindCache = _._evalCache = _._rest = _._primary = null;
    },
    _FunctionParameters: function _FunctionParameters() {
      this._named = this._optionalPositional = this._requiredPositional = null;
    },
    _Type: function _Type(t0) {
      this._rti = t0;
    },
    _Error: function _Error() {
    },
    _TypeError: function _TypeError(t0) {
      this.__rti$_message = t0;
    },
    _AsyncRun__initializeScheduleImmediate() {
      var t1, div, span;
      if (self.scheduleImmediate != null)
        return A.async__AsyncRun__scheduleImmediateJsOverride$closure();
      if (self.MutationObserver != null && self.document != null) {
        t1 = {};
        div = self.document.createElement("div");
        span = self.document.createElement("span");
        t1.storedCallback = null;
        new self.MutationObserver(A.convertDartClosureToJS(new A._AsyncRun__initializeScheduleImmediate_internalCallback(t1), 1)).observe(div, {childList: true});
        return new A._AsyncRun__initializeScheduleImmediate_closure(t1, div, span);
      } else if (self.setImmediate != null)
        return A.async__AsyncRun__scheduleImmediateWithSetImmediate$closure();
      return A.async__AsyncRun__scheduleImmediateWithTimer$closure();
    },
    _AsyncRun__scheduleImmediateJsOverride(callback) {
      self.scheduleImmediate(A.convertDartClosureToJS(new A._AsyncRun__scheduleImmediateJsOverride_internalCallback(callback), 0));
    },
    _AsyncRun__scheduleImmediateWithSetImmediate(callback) {
      self.setImmediate(A.convertDartClosureToJS(new A._AsyncRun__scheduleImmediateWithSetImmediate_internalCallback(callback), 0));
    },
    _AsyncRun__scheduleImmediateWithTimer(callback) {
      A.Timer__createTimer(B.Duration_0, callback);
    },
    Timer__createTimer(duration, callback) {
      var milliseconds = B.JSInt_methods._tdivFast$1(duration._duration, 1000);
      return A._TimerImpl$(milliseconds < 0 ? 0 : milliseconds, callback);
    },
    _TimerImpl$(milliseconds, callback) {
      var t1 = new A._TimerImpl(true);
      t1._TimerImpl$2(milliseconds, callback);
      return t1;
    },
    _makeAsyncAwaitCompleter($T) {
      return new A._AsyncAwaitCompleter(new A._Future($.Zone__current, $T._eval$1("_Future<0>")), $T._eval$1("_AsyncAwaitCompleter<0>"));
    },
    _asyncStartSync(bodyFunction, completer) {
      bodyFunction.call$2(0, null);
      completer.isSync = true;
      return completer._future;
    },
    _asyncAwait(object, bodyFunction) {
      A._awaitOnObject(object, bodyFunction);
    },
    _asyncReturn(object, completer) {
      completer.complete$1(object);
    },
    _asyncRethrow(object, completer) {
      completer.completeError$2(A.unwrapException(object), A.getTraceFromException(object));
    },
    _awaitOnObject(object, bodyFunction) {
      var t1, future,
        thenCallback = new A._awaitOnObject_closure(bodyFunction),
        errorCallback = new A._awaitOnObject_closure0(bodyFunction);
      if (object instanceof A._Future)
        object._thenAwait$1$2(thenCallback, errorCallback, type$.dynamic);
      else {
        t1 = type$.dynamic;
        if (type$.Future_dynamic._is(object))
          object.then$1$2$onError(thenCallback, errorCallback, t1);
        else {
          future = new A._Future($.Zone__current, type$._Future_dynamic);
          future._state = 8;
          future._resultOrListeners = object;
          future._thenAwait$1$2(thenCallback, errorCallback, t1);
        }
      }
    },
    _wrapJsFunctionForAsync($function) {
      var $protected = function(fn, ERROR) {
        return function(errorCode, result) {
          while (true) {
            try {
              fn(errorCode, result);
              break;
            } catch (error) {
              result = error;
              errorCode = ERROR;
            }
          }
        };
      }($function, 1);
      return $.Zone__current.registerBinaryCallback$1(new A._wrapJsFunctionForAsync_closure($protected));
    },
    _SyncStarIterator__terminatedBody(_1, _2, _3) {
      return 0;
    },
    AsyncError_defaultStackTrace(error) {
      var stackTrace;
      if (type$.Error._is(error)) {
        stackTrace = error.get$stackTrace();
        if (stackTrace != null)
          return stackTrace;
      }
      return B._StringStackTrace_OdL;
    },
    Future_Future$value(value, $T) {
      var t1 = value == null ? $T._as(value) : value,
        t2 = new A._Future($.Zone__current, $T._eval$1("_Future<0>"));
      t2._asyncComplete$1(t1);
      return t2;
    },
    Future_wait(futures, $T) {
      var handleError, future, pos, e, s, t1, t2, exception, t3, t4, _box_0 = {}, cleanUp = null,
        eagerError = false,
        _future = new A._Future($.Zone__current, $T._eval$1("_Future<List<0>>"));
      _box_0.values = null;
      _box_0.remaining = 0;
      _box_0.stackTrace = _box_0.error = null;
      handleError = new A.Future_wait_handleError(_box_0, cleanUp, eagerError, _future);
      try {
        for (t1 = J.get$iterator$ax(futures), t2 = type$.Null; t1.moveNext$0();) {
          future = t1.get$current();
          pos = _box_0.remaining;
          future.then$1$2$onError(new A.Future_wait_closure(_box_0, pos, _future, $T, cleanUp, eagerError), handleError, t2);
          ++_box_0.remaining;
        }
        t1 = _box_0.remaining;
        if (t1 === 0) {
          t1 = _future;
          t1._completeWithValue$1(A._setArrayType([], $T._eval$1("JSArray<0>")));
          return t1;
        }
        _box_0.values = A.List_List$filled(t1, null, false, $T._eval$1("0?"));
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        if (_box_0.remaining === 0 || eagerError) {
          t1 = _future;
          t2 = e;
          t3 = s;
          t4 = A._interceptError(t2, t3);
          t2 = new A.AsyncError(t2, t3 == null ? A.AsyncError_defaultStackTrace(t2) : t3);
          t1._asyncCompleteErrorObject$1(t2);
          return t1;
        } else {
          _box_0.error = e;
          _box_0.stackTrace = s;
        }
      }
      return _future;
    },
    Completer_Completer($T) {
      return new A._AsyncCompleter(new A._Future($.Zone__current, $T._eval$1("_Future<0>")), $T._eval$1("_AsyncCompleter<0>"));
    },
    _interceptError(error, stackTrace) {
      if ($.Zone__current === B.C__RootZone)
        return null;
      return null;
    },
    _interceptUserError(error, stackTrace) {
      if ($.Zone__current !== B.C__RootZone)
        A._interceptError(error, stackTrace);
      if (stackTrace == null)
        if (type$.Error._is(error)) {
          stackTrace = error.get$stackTrace();
          if (stackTrace == null) {
            A.Primitives_trySetStackTrace(error, B._StringStackTrace_OdL);
            stackTrace = B._StringStackTrace_OdL;
          }
        } else
          stackTrace = B._StringStackTrace_OdL;
      else if (type$.Error._is(error))
        A.Primitives_trySetStackTrace(error, stackTrace);
      return new A.AsyncError(error, stackTrace);
    },
    _Future$value(value, $T) {
      var t1 = new A._Future($.Zone__current, $T._eval$1("_Future<0>"));
      t1._state = 8;
      t1._resultOrListeners = value;
      return t1;
    },
    _Future__chainCoreFuture(source, target, sync) {
      var t2, ignoreError, listeners, _box_0 = {},
        t1 = _box_0.source = source;
      for (; t2 = t1._state, (t2 & 4) !== 0;) {
        t1 = t1._resultOrListeners;
        _box_0.source = t1;
      }
      if (t1 === target) {
        t2 = A.StackTrace_current();
        target._asyncCompleteErrorObject$1(new A.AsyncError(new A.ArgumentError(true, t1, null, "Cannot complete a future with itself"), t2));
        return;
      }
      ignoreError = target._state & 1;
      t2 = t1._state = t2 | ignoreError;
      if ((t2 & 24) === 0) {
        listeners = target._resultOrListeners;
        target._state = target._state & 1 | 4;
        target._resultOrListeners = t1;
        t1._prependListeners$1(listeners);
        return;
      }
      if (!sync)
        if (target._resultOrListeners == null)
          t1 = (t2 & 16) === 0 || ignoreError !== 0;
        else
          t1 = false;
      else
        t1 = true;
      if (t1) {
        listeners = target._removeListeners$0();
        target._cloneResult$1(_box_0.source);
        A._Future__propagateToListeners(target, listeners);
        return;
      }
      target._state ^= 2;
      A._rootScheduleMicrotask(null, null, target._zone, new A._Future__chainCoreFuture_closure(_box_0, target));
    },
    _Future__propagateToListeners(source, listeners) {
      var t2, _box_0, t3, t4, hasError, nextListener, nextListener0, sourceResult, t5, zone, oldZone, result, current, _box_1 = {},
        t1 = _box_1.source = source;
      for (t2 = type$.Future_dynamic; true;) {
        _box_0 = {};
        t3 = t1._state;
        t4 = (t3 & 16) === 0;
        hasError = !t4;
        if (listeners == null) {
          if (hasError && (t3 & 1) === 0) {
            t1 = t1._resultOrListeners;
            A._rootHandleError(t1.error, t1.stackTrace);
          }
          return;
        }
        _box_0.listener = listeners;
        nextListener = listeners._nextListener;
        for (t1 = listeners; nextListener != null; t1 = nextListener, nextListener = nextListener0) {
          t1._nextListener = null;
          A._Future__propagateToListeners(_box_1.source, t1);
          _box_0.listener = nextListener;
          nextListener0 = nextListener._nextListener;
        }
        t3 = _box_1.source;
        sourceResult = t3._resultOrListeners;
        _box_0.listenerHasError = hasError;
        _box_0.listenerValueOrError = sourceResult;
        if (t4) {
          t5 = t1.state;
          t5 = (t5 & 1) !== 0 || (t5 & 15) === 8;
        } else
          t5 = true;
        if (t5) {
          zone = t1.result._zone;
          if (hasError) {
            t3 = t3._zone === zone;
            t3 = !(t3 || t3);
          } else
            t3 = false;
          if (t3) {
            A._rootHandleError(sourceResult.error, sourceResult.stackTrace);
            return;
          }
          oldZone = $.Zone__current;
          if (oldZone !== zone)
            $.Zone__current = zone;
          else
            oldZone = null;
          t1 = t1.state;
          if ((t1 & 15) === 8)
            new A._Future__propagateToListeners_handleWhenCompleteCallback(_box_0, _box_1, hasError).call$0();
          else if (t4) {
            if ((t1 & 1) !== 0)
              new A._Future__propagateToListeners_handleValueCallback(_box_0, sourceResult).call$0();
          } else if ((t1 & 2) !== 0)
            new A._Future__propagateToListeners_handleError(_box_1, _box_0).call$0();
          if (oldZone != null)
            $.Zone__current = oldZone;
          t1 = _box_0.listenerValueOrError;
          if (t2._is(t1)) {
            t3 = _box_0.listener.$ti;
            t3 = t3._eval$1("Future<2>")._is(t1) || !t3._rest[1]._is(t1);
          } else
            t3 = false;
          if (t3) {
            result = _box_0.listener.result;
            if (t1 instanceof A._Future)
              if ((t1._state & 24) !== 0) {
                current = result._resultOrListeners;
                result._resultOrListeners = null;
                listeners = result._reverseListeners$1(current);
                result._state = t1._state & 30 | result._state & 1;
                result._resultOrListeners = t1._resultOrListeners;
                _box_1.source = t1;
                continue;
              } else
                A._Future__chainCoreFuture(t1, result, true);
            else
              result._chainForeignFuture$1(t1);
            return;
          }
        }
        result = _box_0.listener.result;
        current = result._resultOrListeners;
        result._resultOrListeners = null;
        listeners = result._reverseListeners$1(current);
        t1 = _box_0.listenerHasError;
        t3 = _box_0.listenerValueOrError;
        if (!t1) {
          result._state = 8;
          result._resultOrListeners = t3;
        } else {
          result._state = result._state & 1 | 16;
          result._resultOrListeners = t3;
        }
        _box_1.source = result;
        t1 = result;
      }
    },
    _registerErrorHandler(errorHandler, zone) {
      if (type$.dynamic_Function_Object_StackTrace._is(errorHandler))
        return zone.registerBinaryCallback$1(errorHandler);
      if (type$.dynamic_Function_Object._is(errorHandler))
        return errorHandler;
      throw A.wrapException(A.ArgumentError$value(errorHandler, "onError", string$.Error_));
    },
    _microtaskLoop() {
      var entry, next;
      for (entry = $._nextCallback; entry != null; entry = $._nextCallback) {
        $._lastPriorityCallback = null;
        next = entry.next;
        $._nextCallback = next;
        if (next == null)
          $._lastCallback = null;
        entry.callback.call$0();
      }
    },
    _startMicrotaskLoop() {
      $._isInCallbackLoop = true;
      try {
        A._microtaskLoop();
      } finally {
        $._lastPriorityCallback = null;
        $._isInCallbackLoop = false;
        if ($._nextCallback != null)
          $.$get$_AsyncRun__scheduleImmediateClosure().call$1(A.async___startMicrotaskLoop$closure());
      }
    },
    _scheduleAsyncCallback(callback) {
      var newEntry = new A._AsyncCallbackEntry(callback),
        lastCallback = $._lastCallback;
      if (lastCallback == null) {
        $._nextCallback = $._lastCallback = newEntry;
        if (!$._isInCallbackLoop)
          $.$get$_AsyncRun__scheduleImmediateClosure().call$1(A.async___startMicrotaskLoop$closure());
      } else
        $._lastCallback = lastCallback.next = newEntry;
    },
    _schedulePriorityAsyncCallback(callback) {
      var entry, lastPriorityCallback, next,
        t1 = $._nextCallback;
      if (t1 == null) {
        A._scheduleAsyncCallback(callback);
        $._lastPriorityCallback = $._lastCallback;
        return;
      }
      entry = new A._AsyncCallbackEntry(callback);
      lastPriorityCallback = $._lastPriorityCallback;
      if (lastPriorityCallback == null) {
        entry.next = t1;
        $._nextCallback = $._lastPriorityCallback = entry;
      } else {
        next = lastPriorityCallback.next;
        entry.next = next;
        $._lastPriorityCallback = lastPriorityCallback.next = entry;
        if (next == null)
          $._lastCallback = entry;
      }
    },
    scheduleMicrotask(callback) {
      var _null = null,
        currentZone = $.Zone__current;
      if (B.C__RootZone === currentZone) {
        A._rootScheduleMicrotask(_null, _null, B.C__RootZone, callback);
        return;
      }
      A._rootScheduleMicrotask(_null, _null, currentZone, currentZone.bindCallbackGuarded$1(callback));
    },
    StreamIterator_StreamIterator(stream) {
      A.checkNotNullable(stream, "stream", type$.Object);
      return new A._StreamIterator();
    },
    _runGuarded(notificationHandler) {
      var e, s, exception;
      if (notificationHandler == null)
        return;
      try {
        notificationHandler.call$0();
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        A._rootHandleError(e, s);
      }
    },
    _BufferingStreamSubscription__registerErrorHandler(zone, handleError) {
      if (handleError == null)
        handleError = A.async___nullErrorHandler$closure();
      if (type$.void_Function_Object_StackTrace._is(handleError))
        return zone.registerBinaryCallback$1(handleError);
      if (type$.void_Function_Object._is(handleError))
        return handleError;
      throw A.wrapException(A.ArgumentError$("handleError callback must take either an Object (the error), or both an Object (the error) and a StackTrace.", null));
    },
    _nullErrorHandler(error, stackTrace) {
      A._rootHandleError(error, stackTrace);
    },
    Timer_Timer(duration, callback) {
      var t1 = $.Zone__current;
      if (t1 === B.C__RootZone)
        return A.Timer__createTimer(duration, callback);
      return A.Timer__createTimer(duration, t1.bindCallbackGuarded$1(callback));
    },
    _rootHandleError(error, stackTrace) {
      A._schedulePriorityAsyncCallback(new A._rootHandleError_closure(error, stackTrace));
    },
    _rootRun($self, $parent, zone, f) {
      var old,
        t1 = $.Zone__current;
      if (t1 === zone)
        return f.call$0();
      $.Zone__current = zone;
      old = t1;
      try {
        t1 = f.call$0();
        return t1;
      } finally {
        $.Zone__current = old;
      }
    },
    _rootRunUnary($self, $parent, zone, f, arg) {
      var old,
        t1 = $.Zone__current;
      if (t1 === zone)
        return f.call$1(arg);
      $.Zone__current = zone;
      old = t1;
      try {
        t1 = f.call$1(arg);
        return t1;
      } finally {
        $.Zone__current = old;
      }
    },
    _rootRunBinary($self, $parent, zone, f, arg1, arg2) {
      var old,
        t1 = $.Zone__current;
      if (t1 === zone)
        return f.call$2(arg1, arg2);
      $.Zone__current = zone;
      old = t1;
      try {
        t1 = f.call$2(arg1, arg2);
        return t1;
      } finally {
        $.Zone__current = old;
      }
    },
    _rootScheduleMicrotask($self, $parent, zone, f) {
      if (B.C__RootZone !== zone) {
        f = zone.bindCallbackGuarded$1(f);
        f = f;
      }
      A._scheduleAsyncCallback(f);
    },
    _AsyncRun__initializeScheduleImmediate_internalCallback: function _AsyncRun__initializeScheduleImmediate_internalCallback(t0) {
      this._box_0 = t0;
    },
    _AsyncRun__initializeScheduleImmediate_closure: function _AsyncRun__initializeScheduleImmediate_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.div = t1;
      this.span = t2;
    },
    _AsyncRun__scheduleImmediateJsOverride_internalCallback: function _AsyncRun__scheduleImmediateJsOverride_internalCallback(t0) {
      this.callback = t0;
    },
    _AsyncRun__scheduleImmediateWithSetImmediate_internalCallback: function _AsyncRun__scheduleImmediateWithSetImmediate_internalCallback(t0) {
      this.callback = t0;
    },
    _TimerImpl: function _TimerImpl(t0) {
      this._once = t0;
      this._handle = null;
      this._tick = 0;
    },
    _TimerImpl_internalCallback: function _TimerImpl_internalCallback(t0, t1) {
      this.$this = t0;
      this.callback = t1;
    },
    _AsyncAwaitCompleter: function _AsyncAwaitCompleter(t0, t1) {
      this._future = t0;
      this.isSync = false;
      this.$ti = t1;
    },
    _awaitOnObject_closure: function _awaitOnObject_closure(t0) {
      this.bodyFunction = t0;
    },
    _awaitOnObject_closure0: function _awaitOnObject_closure0(t0) {
      this.bodyFunction = t0;
    },
    _wrapJsFunctionForAsync_closure: function _wrapJsFunctionForAsync_closure(t0) {
      this.$protected = t0;
    },
    _SyncStarIterator: function _SyncStarIterator(t0) {
      var _ = this;
      _._body = t0;
      _._suspendedBodies = _._nestedIterator = _._datum = _._async$_current = null;
    },
    _SyncStarIterable: function _SyncStarIterable(t0, t1) {
      this._outerHelper = t0;
      this.$ti = t1;
    },
    AsyncError: function AsyncError(t0, t1) {
      this.error = t0;
      this.stackTrace = t1;
    },
    Future_wait_handleError: function Future_wait_handleError(t0, t1, t2, t3) {
      var _ = this;
      _._box_0 = t0;
      _.cleanUp = t1;
      _.eagerError = t2;
      _._future = t3;
    },
    Future_wait_closure: function Future_wait_closure(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._box_0 = t0;
      _.pos = t1;
      _._future = t2;
      _.T = t3;
      _.cleanUp = t4;
      _.eagerError = t5;
    },
    _Completer: function _Completer() {
    },
    _AsyncCompleter: function _AsyncCompleter(t0, t1) {
      this.future = t0;
      this.$ti = t1;
    },
    _FutureListener: function _FutureListener(t0, t1, t2, t3, t4) {
      var _ = this;
      _._nextListener = null;
      _.result = t0;
      _.state = t1;
      _.callback = t2;
      _.errorCallback = t3;
      _.$ti = t4;
    },
    _Future: function _Future(t0, t1) {
      var _ = this;
      _._state = 0;
      _._zone = t0;
      _._resultOrListeners = null;
      _.$ti = t1;
    },
    _Future__addListener_closure: function _Future__addListener_closure(t0, t1) {
      this.$this = t0;
      this.listener = t1;
    },
    _Future__prependListeners_closure: function _Future__prependListeners_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    _Future__chainForeignFuture_closure: function _Future__chainForeignFuture_closure(t0) {
      this.$this = t0;
    },
    _Future__chainForeignFuture_closure0: function _Future__chainForeignFuture_closure0(t0) {
      this.$this = t0;
    },
    _Future__chainForeignFuture_closure1: function _Future__chainForeignFuture_closure1(t0, t1, t2) {
      this.$this = t0;
      this.e = t1;
      this.s = t2;
    },
    _Future__chainCoreFuture_closure: function _Future__chainCoreFuture_closure(t0, t1) {
      this._box_0 = t0;
      this.target = t1;
    },
    _Future__asyncCompleteWithValue_closure: function _Future__asyncCompleteWithValue_closure(t0, t1) {
      this.$this = t0;
      this.value = t1;
    },
    _Future__asyncCompleteErrorObject_closure: function _Future__asyncCompleteErrorObject_closure(t0, t1) {
      this.$this = t0;
      this.error = t1;
    },
    _Future__propagateToListeners_handleWhenCompleteCallback: function _Future__propagateToListeners_handleWhenCompleteCallback(t0, t1, t2) {
      this._box_0 = t0;
      this._box_1 = t1;
      this.hasError = t2;
    },
    _Future__propagateToListeners_handleWhenCompleteCallback_closure: function _Future__propagateToListeners_handleWhenCompleteCallback_closure(t0, t1) {
      this.joinedResult = t0;
      this.originalSource = t1;
    },
    _Future__propagateToListeners_handleWhenCompleteCallback_closure0: function _Future__propagateToListeners_handleWhenCompleteCallback_closure0(t0) {
      this.joinedResult = t0;
    },
    _Future__propagateToListeners_handleValueCallback: function _Future__propagateToListeners_handleValueCallback(t0, t1) {
      this._box_0 = t0;
      this.sourceResult = t1;
    },
    _Future__propagateToListeners_handleError: function _Future__propagateToListeners_handleError(t0, t1) {
      this._box_1 = t0;
      this._box_0 = t1;
    },
    _AsyncCallbackEntry: function _AsyncCallbackEntry(t0) {
      this.callback = t0;
      this.next = null;
    },
    Stream: function Stream() {
    },
    Stream_length_closure: function Stream_length_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    Stream_length_closure0: function Stream_length_closure0(t0, t1) {
      this._box_0 = t0;
      this.future = t1;
    },
    _StreamController: function _StreamController() {
    },
    _StreamController__subscribe_closure: function _StreamController__subscribe_closure(t0) {
      this.$this = t0;
    },
    _StreamController__recordCancel_complete: function _StreamController__recordCancel_complete(t0) {
      this.$this = t0;
    },
    _AsyncStreamControllerDispatch: function _AsyncStreamControllerDispatch() {
    },
    _AsyncStreamController: function _AsyncStreamController(t0, t1, t2, t3, t4) {
      var _ = this;
      _._varData = null;
      _._state = 0;
      _._doneFuture = null;
      _.onListen = t0;
      _.onPause = t1;
      _.onResume = t2;
      _.onCancel = t3;
      _.$ti = t4;
    },
    _ControllerStream: function _ControllerStream(t0, t1) {
      this._async$_controller = t0;
      this.$ti = t1;
    },
    _ControllerSubscription: function _ControllerSubscription(t0, t1, t2, t3, t4) {
      var _ = this;
      _._async$_controller = t0;
      _._onData = t1;
      _._onDone = t2;
      _._zone = t3;
      _._state = t4;
      _._pending = _._cancelFuture = null;
    },
    _BufferingStreamSubscription: function _BufferingStreamSubscription() {
    },
    _BufferingStreamSubscription__sendDone_sendDone: function _BufferingStreamSubscription__sendDone_sendDone(t0) {
      this.$this = t0;
    },
    _StreamImpl: function _StreamImpl() {
    },
    _DelayedEvent: function _DelayedEvent() {
    },
    _DelayedData: function _DelayedData(t0) {
      this.value = t0;
      this.next = null;
    },
    _DelayedDone: function _DelayedDone() {
    },
    _PendingEvents: function _PendingEvents() {
      this._state = 0;
      this.lastPendingEvent = this.firstPendingEvent = null;
    },
    _PendingEvents_schedule_closure: function _PendingEvents_schedule_closure(t0, t1) {
      this.$this = t0;
      this.dispatch = t1;
    },
    _StreamIterator: function _StreamIterator() {
    },
    _Zone: function _Zone() {
    },
    _rootHandleError_closure: function _rootHandleError_closure(t0, t1) {
      this.error = t0;
      this.stackTrace = t1;
    },
    _RootZone: function _RootZone() {
    },
    _RootZone_bindCallbackGuarded_closure: function _RootZone_bindCallbackGuarded_closure(t0, t1) {
      this.$this = t0;
      this.f = t1;
    },
    HashMap_HashMap($K, $V) {
      return new A._HashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("_HashMap<1,2>"));
    },
    _HashMap__getTableEntry(table, key) {
      var entry = table[key];
      return entry === table ? null : entry;
    },
    _HashMap__setTableEntry(table, key, value) {
      if (value == null)
        table[key] = table;
      else
        table[key] = value;
    },
    _HashMap__newHashTable() {
      var table = Object.create(null);
      A._HashMap__setTableEntry(table, "<non-identifier-key>", table);
      delete table["<non-identifier-key>"];
      return table;
    },
    LinkedHashMap_LinkedHashMap($K, $V) {
      return new A.JsLinkedHashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("JsLinkedHashMap<1,2>"));
    },
    LinkedHashMap_LinkedHashMap$_literal(keyValuePairs, $K, $V) {
      return A.fillLiteralMap(keyValuePairs, new A.JsLinkedHashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("JsLinkedHashMap<1,2>")));
    },
    LinkedHashMap_LinkedHashMap$_empty($K, $V) {
      return new A.JsLinkedHashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("JsLinkedHashMap<1,2>"));
    },
    HashSet_HashSet($E) {
      return new A._HashSet($E._eval$1("_HashSet<0>"));
    },
    _HashSet__newHashTable() {
      var table = Object.create(null);
      table["<non-identifier-key>"] = table;
      delete table["<non-identifier-key>"];
      return table;
    },
    LinkedHashSet_LinkedHashSet($E) {
      return new A._LinkedHashSet($E._eval$1("_LinkedHashSet<0>"));
    },
    LinkedHashSet_LinkedHashSet$_empty($E) {
      return new A._LinkedHashSet($E._eval$1("_LinkedHashSet<0>"));
    },
    LinkedHashSet_LinkedHashSet$_literal(values, $E) {
      return A.fillLiteralSet(values, new A._LinkedHashSet($E._eval$1("_LinkedHashSet<0>")));
    },
    _LinkedHashSet__newHashTable() {
      var table = Object.create(null);
      table["<non-identifier-key>"] = table;
      delete table["<non-identifier-key>"];
      return table;
    },
    _LinkedHashSetIterator$(_set, _modifications, $E) {
      var t1 = new A._LinkedHashSetIterator(_set, _modifications, $E._eval$1("_LinkedHashSetIterator<0>"));
      t1._collection$_cell = _set._collection$_first;
      return t1;
    },
    LinkedHashMap_LinkedHashMap$from(other, $K, $V) {
      var result = A.LinkedHashMap_LinkedHashMap($K, $V);
      other.forEach$1(0, new A.LinkedHashMap_LinkedHashMap$from_closure(result, $K, $V));
      return result;
    },
    LinkedHashMap_LinkedHashMap$of(other, $K, $V) {
      var t1 = A.LinkedHashMap_LinkedHashMap($K, $V);
      t1.addAll$1(0, other);
      return t1;
    },
    LinkedHashSet_LinkedHashSet$from(elements, $E) {
      var t1, _i,
        result = A.LinkedHashSet_LinkedHashSet($E);
      for (t1 = elements.length, _i = 0; _i < elements.length; elements.length === t1 || (0, A.throwConcurrentModificationError)(elements), ++_i)
        result.add$1(0, $E._as(elements[_i]));
      return result;
    },
    LinkedHashSet_LinkedHashSet$of(elements, $E) {
      var t1 = A.LinkedHashSet_LinkedHashSet($E);
      t1.addAll$1(0, elements);
      return t1;
    },
    _LinkedListIterator$(list, $E) {
      return new A._LinkedListIterator(list, list._modificationCount, list._collection$_first, $E._eval$1("_LinkedListIterator<0>"));
    },
    MapBase_mapToString(m) {
      var result, t1;
      if (A.isToStringVisiting(m))
        return "{...}";
      result = new A.StringBuffer("");
      try {
        t1 = {};
        $.toStringVisiting.push(m);
        result._contents += "{";
        t1.first = true;
        m.forEach$1(0, new A.MapBase_mapToString_closure(t1, result));
        result._contents += "}";
      } finally {
        $.toStringVisiting.pop();
      }
      t1 = result._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    ListQueue$(initialCapacity, $E) {
      return new A.ListQueue(A.List_List$filled(A.ListQueue__calculateCapacity(initialCapacity), null, false, $E._eval$1("0?")), $E._eval$1("ListQueue<0>"));
    },
    ListQueue__calculateCapacity(initialCapacity) {
      if (initialCapacity == null || initialCapacity < 8)
        return 8;
      else if ((initialCapacity & initialCapacity - 1) !== 0)
        return A.ListQueue__nextPowerOf2(initialCapacity);
      return initialCapacity;
    },
    ListQueue__nextPowerOf2(number) {
      var nextNumber;
      number = (number << 1 >>> 0) - 1;
      for (; true; number = nextNumber) {
        nextNumber = (number & number - 1) >>> 0;
        if (nextNumber === 0)
          return number;
      }
    },
    _dynamicCompare(a, b) {
      return J.compareTo$1$ns(a, b);
    },
    _defaultCompare($K) {
      if ($K._eval$1("int(0,0)")._is(A.core_Comparable_compare$closure()))
        return A.core_Comparable_compare$closure();
      return A.collection___dynamicCompare$closure();
    },
    SplayTreeSet$(compare, isValidKey, $E) {
      return new A.SplayTreeSet(compare, isValidKey, $E._eval$1("SplayTreeSet<0>"));
    },
    _HashMap: function _HashMap(t0) {
      var _ = this;
      _._collection$_length = 0;
      _._keys = _._collection$_rest = _._collection$_nums = _._collection$_strings = null;
      _.$ti = t0;
    },
    _HashMap_values_closure: function _HashMap_values_closure(t0) {
      this.$this = t0;
    },
    _HashMapKeyIterable: function _HashMapKeyIterable(t0, t1) {
      this._collection$_map = t0;
      this.$ti = t1;
    },
    _HashMapKeyIterator: function _HashMapKeyIterator(t0, t1, t2) {
      var _ = this;
      _._collection$_map = t0;
      _._keys = t1;
      _._offset = 0;
      _._current = null;
      _.$ti = t2;
    },
    _HashSet: function _HashSet(t0) {
      var _ = this;
      _._collection$_length = 0;
      _._elements = _._collection$_rest = _._collection$_nums = _._collection$_strings = null;
      _.$ti = t0;
    },
    _HashSetIterator: function _HashSetIterator(t0, t1, t2) {
      var _ = this;
      _._set = t0;
      _._elements = t1;
      _._offset = 0;
      _._current = null;
      _.$ti = t2;
    },
    _LinkedHashSet: function _LinkedHashSet(t0) {
      var _ = this;
      _._collection$_length = 0;
      _._collection$_last = _._collection$_first = _._collection$_rest = _._collection$_nums = _._collection$_strings = null;
      _._collection$_modifications = 0;
      _.$ti = t0;
    },
    _LinkedHashSetCell: function _LinkedHashSetCell(t0) {
      this._collection$_element = t0;
      this._collection$_previous = this._collection$_next = null;
    },
    _LinkedHashSetIterator: function _LinkedHashSetIterator(t0, t1, t2) {
      var _ = this;
      _._set = t0;
      _._collection$_modifications = t1;
      _._current = _._collection$_cell = null;
      _.$ti = t2;
    },
    LinkedHashMap_LinkedHashMap$from_closure: function LinkedHashMap_LinkedHashMap$from_closure(t0, t1, t2) {
      this.result = t0;
      this.K = t1;
      this.V = t2;
    },
    LinkedList: function LinkedList(t0) {
      var _ = this;
      _._collection$_length = _._modificationCount = 0;
      _._collection$_first = null;
      _.$ti = t0;
    },
    _LinkedListIterator: function _LinkedListIterator(t0, t1, t2, t3) {
      var _ = this;
      _._list = t0;
      _._modificationCount = t1;
      _._current = null;
      _._collection$_next = t2;
      _._visitedFirst = false;
      _.$ti = t3;
    },
    LinkedListEntry: function LinkedListEntry() {
    },
    ListBase: function ListBase() {
    },
    MapBase: function MapBase() {
    },
    MapBase_entries_closure: function MapBase_entries_closure(t0) {
      this.$this = t0;
    },
    MapBase_mapToString_closure: function MapBase_mapToString_closure(t0, t1) {
      this._box_0 = t0;
      this.result = t1;
    },
    _MapBaseValueIterable: function _MapBaseValueIterable(t0, t1) {
      this._collection$_map = t0;
      this.$ti = t1;
    },
    _MapBaseValueIterator: function _MapBaseValueIterator(t0, t1, t2) {
      var _ = this;
      _._keys = t0;
      _._collection$_map = t1;
      _._current = null;
      _.$ti = t2;
    },
    _UnmodifiableMapMixin: function _UnmodifiableMapMixin() {
    },
    MapView: function MapView() {
    },
    UnmodifiableMapView: function UnmodifiableMapView(t0, t1) {
      this._collection$_map = t0;
      this.$ti = t1;
    },
    ListQueue: function ListQueue(t0, t1) {
      var _ = this;
      _._table = t0;
      _._modificationCount = _._tail = _._head = 0;
      _.$ti = t1;
    },
    _ListQueueIterator: function _ListQueueIterator(t0, t1, t2, t3, t4) {
      var _ = this;
      _._queue = t0;
      _._end = t1;
      _._modificationCount = t2;
      _._position = t3;
      _._current = null;
      _.$ti = t4;
    },
    SetBase: function SetBase() {
    },
    _SetBase: function _SetBase() {
    },
    _SplayTreeNode: function _SplayTreeNode() {
    },
    _SplayTreeSetNode: function _SplayTreeSetNode(t0, t1) {
      var _ = this;
      _.key = t0;
      _._collection$_right = _._collection$_left = null;
      _.$ti = t1;
    },
    _SplayTreeMapNode: function _SplayTreeMapNode(t0, t1, t2) {
      var _ = this;
      _.value = t0;
      _.key = t1;
      _._collection$_right = _._collection$_left = null;
      _.$ti = t2;
    },
    _SplayTree: function _SplayTree() {
    },
    SplayTreeMap: function SplayTreeMap(t0, t1) {
      var _ = this;
      _._collection$_root = null;
      _._compare = t0;
      _._splayCount = _._modificationCount = _._collection$_count = 0;
      _.$ti = t1;
    },
    _SplayTreeIterator: function _SplayTreeIterator() {
    },
    _SplayTreeKeyIterable: function _SplayTreeKeyIterable(t0, t1) {
      this._tree = t0;
      this.$ti = t1;
    },
    _SplayTreeValueIterable: function _SplayTreeValueIterable(t0, t1) {
      this._collection$_map = t0;
      this.$ti = t1;
    },
    _SplayTreeMapEntryIterable: function _SplayTreeMapEntryIterable(t0, t1) {
      this._collection$_map = t0;
      this.$ti = t1;
    },
    _SplayTreeKeyIterator: function _SplayTreeKeyIterator(t0, t1, t2, t3) {
      var _ = this;
      _._tree = t0;
      _._collection$_path = t1;
      _._modificationCount = null;
      _._splayCount = t2;
      _.$ti = t3;
    },
    _SplayTreeValueIterator: function _SplayTreeValueIterator(t0, t1, t2, t3) {
      var _ = this;
      _._current = null;
      _._tree = t0;
      _._collection$_path = t1;
      _._modificationCount = null;
      _._splayCount = t2;
      _.$ti = t3;
    },
    _SplayTreeMapEntryIterator: function _SplayTreeMapEntryIterator(t0, t1, t2, t3) {
      var _ = this;
      _._current = null;
      _._tree = t0;
      _._collection$_path = t1;
      _._modificationCount = null;
      _._splayCount = t2;
      _.$ti = t3;
    },
    SplayTreeSet: function SplayTreeSet(t0, t1, t2) {
      var _ = this;
      _._collection$_root = null;
      _._compare = t0;
      _._validKey = t1;
      _._splayCount = _._modificationCount = _._collection$_count = 0;
      _.$ti = t2;
    },
    _SplayTreeMap__SplayTree_MapMixin: function _SplayTreeMap__SplayTree_MapMixin() {
    },
    _SplayTreeSet__SplayTree_Iterable: function _SplayTreeSet__SplayTree_Iterable() {
    },
    _SplayTreeSet__SplayTree_Iterable_SetMixin: function _SplayTreeSet__SplayTree_Iterable_SetMixin() {
    },
    _UnmodifiableMapView_MapView__UnmodifiableMapMixin: function _UnmodifiableMapView_MapView__UnmodifiableMapMixin() {
    },
    _parseJson(source, reviver) {
      var e, exception, t1, parsed = null;
      try {
        parsed = JSON.parse(source);
      } catch (exception) {
        e = A.unwrapException(exception);
        t1 = A.FormatException$(String(e), null, null);
        throw A.wrapException(t1);
      }
      t1 = A._convertJsonToDartLazy(parsed);
      return t1;
    },
    _convertJsonToDartLazy(object) {
      var i;
      if (object == null)
        return null;
      if (typeof object != "object")
        return object;
      if (!Array.isArray(object))
        return new A._JsonMap(object, Object.create(null));
      for (i = 0; i < object.length; ++i)
        object[i] = A._convertJsonToDartLazy(object[i]);
      return object;
    },
    _Utf8Decoder__makeNativeUint8List(codeUnits, start, end) {
      var bytes, t1, i, b,
        $length = end - start;
      if ($length <= 4096)
        bytes = $.$get$_Utf8Decoder__reusableBuffer();
      else
        bytes = new Uint8Array($length);
      for (t1 = J.getInterceptor$asx(codeUnits), i = 0; i < $length; ++i) {
        b = t1.$index(codeUnits, start + i);
        if ((b & 255) !== b)
          b = 255;
        bytes[i] = b;
      }
      return bytes;
    },
    _Utf8Decoder__convertInterceptedUint8List(allowMalformed, codeUnits, start, end) {
      var decoder = allowMalformed ? $.$get$_Utf8Decoder__decoderNonfatal() : $.$get$_Utf8Decoder__decoder();
      if (decoder == null)
        return null;
      if (0 === start && end === codeUnits.length)
        return A._Utf8Decoder__useTextDecoder(decoder, codeUnits);
      return A._Utf8Decoder__useTextDecoder(decoder, codeUnits.subarray(start, end));
    },
    _Utf8Decoder__useTextDecoder(decoder, codeUnits) {
      var t1, exception;
      try {
        t1 = decoder.decode(codeUnits);
        return t1;
      } catch (exception) {
      }
      return null;
    },
    Base64Codec__checkPadding(source, sourceIndex, sourceEnd, firstPadding, paddingCount, $length) {
      if (B.JSInt_methods.$mod($length, 4) !== 0)
        throw A.wrapException(A.FormatException$("Invalid base64 padding, padded length must be multiple of four, is " + $length, source, sourceEnd));
      if (firstPadding + paddingCount !== $length)
        throw A.wrapException(A.FormatException$("Invalid base64 padding, '=' not at the end", source, sourceIndex));
      if (paddingCount > 2)
        throw A.wrapException(A.FormatException$("Invalid base64 padding, more than two '=' characters", source, sourceIndex));
    },
    JsonUnsupportedObjectError$(unsupportedObject, cause, partialResult) {
      return new A.JsonUnsupportedObjectError(unsupportedObject, cause);
    },
    _defaultToEncodable(object) {
      return object.toJson$0();
    },
    _JsonStringStringifier$(_sink, _toEncodable) {
      return new A._JsonStringStringifier(_sink, [], A.convert___defaultToEncodable$closure());
    },
    _JsonStringStringifier_stringify(object, toEncodable, indent) {
      var t1,
        output = new A.StringBuffer(""),
        stringifier = A._JsonStringStringifier$(output, toEncodable);
      stringifier.writeObject$1(object);
      t1 = output._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _Utf8Decoder_errorDescription(state) {
      switch (state) {
        case 65:
          return "Missing extension byte";
        case 67:
          return "Unexpected extension byte";
        case 69:
          return "Invalid UTF-8 byte";
        case 71:
          return "Overlong encoding";
        case 73:
          return "Out of unicode range";
        case 75:
          return "Encoded surrogate";
        case 77:
          return "Unfinished UTF-8 octet sequence";
        default:
          return "";
      }
    },
    _JsonMap: function _JsonMap(t0, t1) {
      this._original = t0;
      this._processed = t1;
      this._convert$_data = null;
    },
    _JsonMap_values_closure: function _JsonMap_values_closure(t0) {
      this.$this = t0;
    },
    _JsonMapKeyIterable: function _JsonMapKeyIterable(t0) {
      this._convert$_parent = t0;
    },
    _Utf8Decoder__decoder_closure: function _Utf8Decoder__decoder_closure() {
    },
    _Utf8Decoder__decoderNonfatal_closure: function _Utf8Decoder__decoderNonfatal_closure() {
    },
    Base64Codec: function Base64Codec() {
    },
    Base64Encoder: function Base64Encoder() {
    },
    Codec: function Codec() {
    },
    Converter: function Converter() {
    },
    Encoding: function Encoding() {
    },
    JsonUnsupportedObjectError: function JsonUnsupportedObjectError(t0, t1) {
      this.unsupportedObject = t0;
      this.cause = t1;
    },
    JsonCyclicError: function JsonCyclicError(t0, t1) {
      this.unsupportedObject = t0;
      this.cause = t1;
    },
    JsonCodec: function JsonCodec() {
    },
    JsonEncoder: function JsonEncoder(t0) {
      this._toEncodable = t0;
    },
    JsonDecoder: function JsonDecoder(t0) {
      this._reviver = t0;
    },
    _JsonStringifier: function _JsonStringifier() {
    },
    _JsonStringifier_writeMap_closure: function _JsonStringifier_writeMap_closure(t0, t1) {
      this._box_0 = t0;
      this.keyValueList = t1;
    },
    _JsonStringStringifier: function _JsonStringStringifier(t0, t1, t2) {
      this._sink = t0;
      this._seen = t1;
      this._toEncodable = t2;
    },
    Utf8Codec: function Utf8Codec() {
    },
    Utf8Encoder: function Utf8Encoder() {
    },
    _Utf8Encoder: function _Utf8Encoder(t0) {
      this._bufferIndex = 0;
      this._convert$_buffer = t0;
    },
    Utf8Decoder: function Utf8Decoder(t0) {
      this._allowMalformed = t0;
    },
    _Utf8Decoder: function _Utf8Decoder(t0) {
      this.allowMalformed = t0;
      this._convert$_state = 16;
      this._charOrIndex = 0;
    },
    Expando$() {
      return new A.Expando(new WeakMap());
    },
    Expando__checkType(object) {
    },
    Expando__badExpandoKey(object) {
      throw A.wrapException(A.ArgumentError$value(object, "object", "Expandos are not allowed on strings, numbers, bools, records or null"));
    },
    int_parse(source, radix) {
      var value = A.Primitives_parseInt(source, radix);
      if (value != null)
        return value;
      throw A.wrapException(A.FormatException$(source, null, null));
    },
    double_parse(source) {
      var value = A.Primitives_parseDouble(source);
      if (value != null)
        return value;
      throw A.wrapException(A.FormatException$("Invalid double", source, null));
    },
    Error__throw(error, stackTrace) {
      error = A.initializeExceptionWrapper(error, new Error());
      error.stack = stackTrace.toString$0(0);
      throw error;
    },
    List_List$filled($length, fill, growable, $E) {
      var i,
        result = growable ? J.JSArray_JSArray$growable($length, $E) : J.JSArray_JSArray$fixed($length, $E);
      if ($length !== 0 && fill != null)
        for (i = 0; i < result.length; ++i)
          result[i] = fill;
      return result;
    },
    List_List$from(elements, growable, $E) {
      var t1,
        list = A._setArrayType([], $E._eval$1("JSArray<0>"));
      for (t1 = J.get$iterator$ax(elements); t1.moveNext$0();)
        list.push(t1.get$current());
      if (growable)
        return list;
      list.$flags = 1;
      return list;
    },
    List_List$_of(elements, $E) {
      var list, t1;
      if (Array.isArray(elements))
        return A._setArrayType(elements.slice(0), $E._eval$1("JSArray<0>"));
      list = A._setArrayType([], $E._eval$1("JSArray<0>"));
      for (t1 = J.get$iterator$ax(elements); t1.moveNext$0();)
        list.push(t1.get$current());
      return list;
    },
    List_List$generate($length, generator, $E) {
      var i,
        result = J.JSArray_JSArray$growable($length, $E);
      for (i = 0; i < $length; ++i)
        result[i] = generator.call$1(i);
      return result;
    },
    List_List$unmodifiable(elements, $E) {
      var result = A.List_List$from(elements, false, $E);
      result.$flags = 3;
      return result;
    },
    String_String$fromCharCodes(charCodes, start, end) {
      var maxLength, t1;
      A.RangeError_checkNotNegative(start, "start");
      if (end != null) {
        maxLength = end - start;
        if (maxLength < 0)
          throw A.wrapException(A.RangeError$range(end, start, null, "end", null));
        if (maxLength === 0)
          return "";
      }
      t1 = A.String__stringFromUint8List(charCodes, start, end);
      return t1;
    },
    String_String$fromCharCode(charCode) {
      return A.Primitives_stringFromCharCode(charCode);
    },
    String__stringFromUint8List(charCodes, start, endOrNull) {
      var len = charCodes.length;
      if (start >= len)
        return "";
      return A.Primitives_stringFromNativeUint8List(charCodes, start, endOrNull == null || endOrNull > len ? len : endOrNull);
    },
    RegExp_RegExp(source, unicode) {
      return new A.JSSyntaxRegExp(source, A.JSSyntaxRegExp_makeNative(source, false, true, unicode, false, ""));
    },
    StringBuffer__writeAll(string, objects, separator) {
      var iterator = J.get$iterator$ax(objects);
      if (!iterator.moveNext$0())
        return string;
      if (separator.length === 0) {
        do
          string += A.S(iterator.get$current());
        while (iterator.moveNext$0());
      } else {
        string += A.S(iterator.get$current());
        for (; iterator.moveNext$0();)
          string = string + separator + A.S(iterator.get$current());
      }
      return string;
    },
    NoSuchMethodError_NoSuchMethodError$withInvocation(receiver, invocation) {
      return new A.NoSuchMethodError(receiver, invocation.get$memberName(), invocation.get$positionalArguments(), invocation.get$namedArguments());
    },
    _Uri__uriEncode(canonicalMask, text, encoding, spaceToPlus) {
      var t1, bytes, i, t2, byte,
        _s16_ = "0123456789ABCDEF";
      if (encoding === B.C_Utf8Codec) {
        t1 = $.$get$_Uri__needsNoEncoding();
        t1 = t1._nativeRegExp.test(text);
      } else
        t1 = false;
      if (t1)
        return text;
      bytes = B.C_Utf8Encoder.convert$1(text);
      for (t1 = bytes.length, i = 0, t2 = ""; i < t1; ++i) {
        byte = bytes[i];
        if (byte < 128 && (string$.x00_____.charCodeAt(byte) & canonicalMask) !== 0)
          t2 += A.Primitives_stringFromCharCode(byte);
        else
          t2 = spaceToPlus && byte === 32 ? t2 + "+" : t2 + "%" + _s16_[byte >>> 4 & 15] + _s16_[byte & 15];
      }
      return t2.charCodeAt(0) == 0 ? t2 : t2;
    },
    StackTrace_current() {
      return A.getTraceFromException(new Error());
    },
    Comparable_compare(a, b) {
      return J.compareTo$1$ns(a, b);
    },
    Duration$(hours, microseconds, milliseconds, minutes, seconds) {
      return new A.Duration(microseconds + 1000 * milliseconds + 1000000 * seconds + 60000000 * minutes + 3600000000 * hours);
    },
    Error_safeToString(object) {
      if (typeof object == "number" || A._isBool(object) || object == null)
        return J.toString$0$(object);
      if (typeof object == "string")
        return JSON.stringify(object);
      return A.Primitives_safeToString(object);
    },
    Error_throwWithStackTrace(error, stackTrace) {
      A.checkNotNullable(error, "error", type$.Object);
      A.checkNotNullable(stackTrace, "stackTrace", type$.StackTrace);
      A.Error__throw(error, stackTrace);
    },
    AssertionError$(message) {
      return new A.AssertionError(message);
    },
    ArgumentError$(message, $name) {
      return new A.ArgumentError(false, null, $name, message);
    },
    ArgumentError$value(value, $name, message) {
      return new A.ArgumentError(true, value, $name, message);
    },
    ArgumentError_checkNotNull(argument, $name) {
      return argument;
    },
    RangeError$(message) {
      var _null = null;
      return new A.RangeError(_null, _null, false, _null, _null, message);
    },
    RangeError$value(value, $name) {
      return new A.RangeError(null, null, true, value, $name, "Value not in range");
    },
    RangeError$range(invalidValue, minValue, maxValue, $name, message) {
      return new A.RangeError(minValue, maxValue, true, invalidValue, $name, "Invalid value");
    },
    RangeError_checkValueInInterval(value, minValue, maxValue, $name) {
      if (value < minValue || value > maxValue)
        throw A.wrapException(A.RangeError$range(value, minValue, maxValue, $name, null));
      return value;
    },
    RangeError_checkValidRange(start, end, $length, startName, endName) {
      if (0 > start || start > $length)
        throw A.wrapException(A.RangeError$range(start, 0, $length, startName == null ? "start" : startName, null));
      if (end != null) {
        if (start > end || end > $length)
          throw A.wrapException(A.RangeError$range(end, start, $length, endName == null ? "end" : endName, null));
        return end;
      }
      return $length;
    },
    RangeError_checkNotNegative(value, $name) {
      if (value < 0)
        throw A.wrapException(A.RangeError$range(value, 0, null, $name, null));
      return value;
    },
    IndexError$withLength(invalidValue, $length, indexable, message, $name) {
      return new A.IndexError($length, true, invalidValue, $name, "Index out of range");
    },
    UnsupportedError$(message) {
      return new A.UnsupportedError(message);
    },
    UnimplementedError$(message) {
      return new A.UnimplementedError(message);
    },
    StateError$(message) {
      return new A.StateError(message);
    },
    ConcurrentModificationError$(modifiedObject) {
      return new A.ConcurrentModificationError(modifiedObject);
    },
    Exception_Exception(message) {
      return new A._Exception(message);
    },
    FormatException$(message, source, offset) {
      return new A.FormatException(message, source, offset);
    },
    Iterable_iterableToShortString(iterable, leftDelimiter, rightDelimiter) {
      var parts, t1;
      if (A.isToStringVisiting(iterable)) {
        if (leftDelimiter === "(" && rightDelimiter === ")")
          return "(...)";
        return leftDelimiter + "..." + rightDelimiter;
      }
      parts = A._setArrayType([], type$.JSArray_String);
      $.toStringVisiting.push(iterable);
      try {
        A._iterablePartsToStrings(iterable, parts);
      } finally {
        $.toStringVisiting.pop();
      }
      t1 = A.StringBuffer__writeAll(leftDelimiter, parts, ", ") + rightDelimiter;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    Iterable_iterableToFullString(iterable, leftDelimiter, rightDelimiter) {
      var buffer, t1;
      if (A.isToStringVisiting(iterable))
        return leftDelimiter + "..." + rightDelimiter;
      buffer = new A.StringBuffer(leftDelimiter);
      $.toStringVisiting.push(iterable);
      try {
        t1 = buffer;
        t1._contents = A.StringBuffer__writeAll(t1._contents, iterable, ", ");
      } finally {
        $.toStringVisiting.pop();
      }
      buffer._contents += rightDelimiter;
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _iterablePartsToStrings(iterable, parts) {
      var next, ultimateString, penultimateString, penultimate, ultimate, ultimate0, elision,
        it = J.get$iterator$ax(iterable),
        $length = 0, count = 0;
      while (true) {
        if (!($length < 80 || count < 3))
          break;
        if (!it.moveNext$0())
          return;
        next = A.S(it.get$current());
        parts.push(next);
        $length += next.length + 2;
        ++count;
      }
      if (!it.moveNext$0()) {
        if (count <= 5)
          return;
        ultimateString = parts.pop();
        penultimateString = parts.pop();
      } else {
        penultimate = it.get$current();
        ++count;
        if (!it.moveNext$0()) {
          if (count <= 4) {
            parts.push(A.S(penultimate));
            return;
          }
          ultimateString = A.S(penultimate);
          penultimateString = parts.pop();
          $length += ultimateString.length + 2;
        } else {
          ultimate = it.get$current();
          ++count;
          for (; it.moveNext$0(); penultimate = ultimate, ultimate = ultimate0) {
            ultimate0 = it.get$current();
            ++count;
            if (count > 100) {
              while (true) {
                if (!($length > 75 && count > 3))
                  break;
                $length -= parts.pop().length + 2;
                --count;
              }
              parts.push("...");
              return;
            }
          }
          penultimateString = A.S(penultimate);
          ultimateString = A.S(ultimate);
          $length += ultimateString.length + penultimateString.length + 4;
        }
      }
      if (count > parts.length + 2) {
        $length += 5;
        elision = "...";
      } else
        elision = null;
      while (true) {
        if (!($length > 80 && parts.length > 3))
          break;
        $length -= parts.pop().length + 2;
        if (elision == null) {
          $length += 5;
          elision = "...";
        }
      }
      if (elision != null)
        parts.push(elision);
      parts.push(penultimateString);
      parts.push(ultimateString);
    },
    Map_castFrom(source, $K, $V, $K2, $V2) {
      return new A.CastMap(source, $K._eval$1("@<0>")._bind$1($V)._bind$1($K2)._bind$1($V2)._eval$1("CastMap<1,2,3,4>"));
    },
    Object_hash(object1, object2, object3, object4, object5, object6, object7, object8, object9, object10, object11, object12, object13, object14, object15, object16, object17, object18, object19, object20) {
      var t1;
      if (B.C_SentinelValue === object3) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2));
      }
      if (B.C_SentinelValue === object4) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        object3 = J.get$hashCode$(object3);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2), object3));
      }
      if (B.C_SentinelValue === object5) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        object3 = J.get$hashCode$(object3);
        object4 = J.get$hashCode$(object4);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2), object3), object4));
      }
      if (B.C_SentinelValue === object6) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        object3 = J.get$hashCode$(object3);
        object4 = J.get$hashCode$(object4);
        object5 = J.get$hashCode$(object5);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2), object3), object4), object5));
      }
      if (B.C_SentinelValue === object7) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        object3 = J.get$hashCode$(object3);
        object4 = J.get$hashCode$(object4);
        object5 = J.get$hashCode$(object5);
        object6 = J.get$hashCode$(object6);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2), object3), object4), object5), object6));
      }
      if (B.C_SentinelValue === object8) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        object3 = J.get$hashCode$(object3);
        object4 = J.get$hashCode$(object4);
        object5 = J.get$hashCode$(object5);
        object6 = J.get$hashCode$(object6);
        object7 = J.get$hashCode$(object7);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2), object3), object4), object5), object6), object7));
      }
      if (B.C_SentinelValue === object9) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        object3 = J.get$hashCode$(object3);
        object4 = J.get$hashCode$(object4);
        object5 = J.get$hashCode$(object5);
        object6 = J.get$hashCode$(object6);
        object7 = J.get$hashCode$(object7);
        object8 = J.get$hashCode$(object8);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2), object3), object4), object5), object6), object7), object8));
      }
      if (B.C_SentinelValue === object10) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        object3 = J.get$hashCode$(object3);
        object4 = J.get$hashCode$(object4);
        object5 = J.get$hashCode$(object5);
        object6 = J.get$hashCode$(object6);
        object7 = J.get$hashCode$(object7);
        object8 = J.get$hashCode$(object8);
        object9 = J.get$hashCode$(object9);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2), object3), object4), object5), object6), object7), object8), object9));
      }
      if (B.C_SentinelValue === object11) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        object3 = J.get$hashCode$(object3);
        object4 = J.get$hashCode$(object4);
        object5 = J.get$hashCode$(object5);
        object6 = J.get$hashCode$(object6);
        object7 = J.get$hashCode$(object7);
        object8 = J.get$hashCode$(object8);
        object9 = J.get$hashCode$(object9);
        object10 = J.get$hashCode$(object10);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2), object3), object4), object5), object6), object7), object8), object9), object10));
      }
      if (B.C_SentinelValue === object12) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        object3 = J.get$hashCode$(object3);
        object4 = J.get$hashCode$(object4);
        object5 = J.get$hashCode$(object5);
        object6 = J.get$hashCode$(object6);
        object7 = J.get$hashCode$(object7);
        object8 = J.get$hashCode$(object8);
        object9 = J.get$hashCode$(object9);
        object10 = J.get$hashCode$(object10);
        object11 = J.get$hashCode$(object11);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2), object3), object4), object5), object6), object7), object8), object9), object10), object11));
      }
      if (B.C_SentinelValue === object13) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        object3 = J.get$hashCode$(object3);
        object4 = J.get$hashCode$(object4);
        object5 = J.get$hashCode$(object5);
        object6 = J.get$hashCode$(object6);
        object7 = J.get$hashCode$(object7);
        object8 = J.get$hashCode$(object8);
        object9 = J.get$hashCode$(object9);
        object10 = J.get$hashCode$(object10);
        object11 = J.get$hashCode$(object11);
        object12 = J.get$hashCode$(object12);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2), object3), object4), object5), object6), object7), object8), object9), object10), object11), object12));
      }
      if (B.C_SentinelValue === object14) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        object3 = J.get$hashCode$(object3);
        object4 = J.get$hashCode$(object4);
        object5 = J.get$hashCode$(object5);
        object6 = J.get$hashCode$(object6);
        object7 = J.get$hashCode$(object7);
        object8 = J.get$hashCode$(object8);
        object9 = J.get$hashCode$(object9);
        object10 = J.get$hashCode$(object10);
        object11 = J.get$hashCode$(object11);
        object12 = J.get$hashCode$(object12);
        object13 = J.get$hashCode$(object13);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2), object3), object4), object5), object6), object7), object8), object9), object10), object11), object12), object13));
      }
      if (B.C_SentinelValue === object15) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        object3 = J.get$hashCode$(object3);
        object4 = J.get$hashCode$(object4);
        object5 = J.get$hashCode$(object5);
        object6 = J.get$hashCode$(object6);
        object7 = J.get$hashCode$(object7);
        object8 = J.get$hashCode$(object8);
        object9 = J.get$hashCode$(object9);
        object10 = J.get$hashCode$(object10);
        object11 = J.get$hashCode$(object11);
        object12 = J.get$hashCode$(object12);
        object13 = J.get$hashCode$(object13);
        object14 = J.get$hashCode$(object14);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2), object3), object4), object5), object6), object7), object8), object9), object10), object11), object12), object13), object14));
      }
      if (B.C_SentinelValue === object16) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        object3 = J.get$hashCode$(object3);
        object4 = J.get$hashCode$(object4);
        object5 = J.get$hashCode$(object5);
        object6 = J.get$hashCode$(object6);
        object7 = J.get$hashCode$(object7);
        object8 = J.get$hashCode$(object8);
        object9 = J.get$hashCode$(object9);
        object10 = J.get$hashCode$(object10);
        object11 = J.get$hashCode$(object11);
        object12 = J.get$hashCode$(object12);
        object13 = J.get$hashCode$(object13);
        object14 = J.get$hashCode$(object14);
        object15 = J.get$hashCode$(object15);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2), object3), object4), object5), object6), object7), object8), object9), object10), object11), object12), object13), object14), object15));
      }
      if (B.C_SentinelValue === object17) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        object3 = J.get$hashCode$(object3);
        object4 = J.get$hashCode$(object4);
        object5 = J.get$hashCode$(object5);
        object6 = J.get$hashCode$(object6);
        object7 = J.get$hashCode$(object7);
        object8 = J.get$hashCode$(object8);
        object9 = J.get$hashCode$(object9);
        object10 = J.get$hashCode$(object10);
        object11 = J.get$hashCode$(object11);
        object12 = J.get$hashCode$(object12);
        object13 = J.get$hashCode$(object13);
        object14 = J.get$hashCode$(object14);
        object15 = J.get$hashCode$(object15);
        object16 = J.get$hashCode$(object16);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2), object3), object4), object5), object6), object7), object8), object9), object10), object11), object12), object13), object14), object15), object16));
      }
      if (B.C_SentinelValue === object18) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        object3 = J.get$hashCode$(object3);
        object4 = J.get$hashCode$(object4);
        object5 = J.get$hashCode$(object5);
        object6 = J.get$hashCode$(object6);
        object7 = J.get$hashCode$(object7);
        object8 = J.get$hashCode$(object8);
        object9 = J.get$hashCode$(object9);
        object10 = J.get$hashCode$(object10);
        object11 = J.get$hashCode$(object11);
        object12 = J.get$hashCode$(object12);
        object13 = J.get$hashCode$(object13);
        object14 = J.get$hashCode$(object14);
        object15 = J.get$hashCode$(object15);
        object16 = J.get$hashCode$(object16);
        object17 = J.get$hashCode$(object17);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2), object3), object4), object5), object6), object7), object8), object9), object10), object11), object12), object13), object14), object15), object16), object17));
      }
      if (B.C_SentinelValue === object19) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        object3 = J.get$hashCode$(object3);
        object4 = J.get$hashCode$(object4);
        object5 = J.get$hashCode$(object5);
        object6 = J.get$hashCode$(object6);
        object7 = J.get$hashCode$(object7);
        object8 = J.get$hashCode$(object8);
        object9 = J.get$hashCode$(object9);
        object10 = J.get$hashCode$(object10);
        object11 = J.get$hashCode$(object11);
        object12 = J.get$hashCode$(object12);
        object13 = J.get$hashCode$(object13);
        object14 = J.get$hashCode$(object14);
        object15 = J.get$hashCode$(object15);
        object16 = J.get$hashCode$(object16);
        object17 = J.get$hashCode$(object17);
        object18 = J.get$hashCode$(object18);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2), object3), object4), object5), object6), object7), object8), object9), object10), object11), object12), object13), object14), object15), object16), object17), object18));
      }
      if (B.C_SentinelValue === object20) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        object3 = J.get$hashCode$(object3);
        object4 = J.get$hashCode$(object4);
        object5 = J.get$hashCode$(object5);
        object6 = J.get$hashCode$(object6);
        object7 = J.get$hashCode$(object7);
        object8 = J.get$hashCode$(object8);
        object9 = J.get$hashCode$(object9);
        object10 = J.get$hashCode$(object10);
        object11 = J.get$hashCode$(object11);
        object12 = J.get$hashCode$(object12);
        object13 = J.get$hashCode$(object13);
        object14 = J.get$hashCode$(object14);
        object15 = J.get$hashCode$(object15);
        object16 = J.get$hashCode$(object16);
        object17 = J.get$hashCode$(object17);
        object18 = J.get$hashCode$(object18);
        object19 = J.get$hashCode$(object19);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2), object3), object4), object5), object6), object7), object8), object9), object10), object11), object12), object13), object14), object15), object16), object17), object18), object19));
      }
      t1 = J.get$hashCode$(object1);
      object2 = J.get$hashCode$(object2);
      object3 = J.get$hashCode$(object3);
      object4 = J.get$hashCode$(object4);
      object5 = J.get$hashCode$(object5);
      object6 = J.get$hashCode$(object6);
      object7 = J.get$hashCode$(object7);
      object8 = J.get$hashCode$(object8);
      object9 = J.get$hashCode$(object9);
      object10 = J.get$hashCode$(object10);
      object11 = J.get$hashCode$(object11);
      object12 = J.get$hashCode$(object12);
      object13 = J.get$hashCode$(object13);
      object14 = J.get$hashCode$(object14);
      object15 = J.get$hashCode$(object15);
      object16 = J.get$hashCode$(object16);
      object17 = J.get$hashCode$(object17);
      object18 = J.get$hashCode$(object18);
      object19 = J.get$hashCode$(object19);
      object20 = J.get$hashCode$(object20);
      return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2), object3), object4), object5), object6), object7), object8), object9), object10), object11), object12), object13), object14), object15), object16), object17), object18), object19), object20));
    },
    Object_hashAll(objects) {
      var t1,
        hash = $.$get$_hashSeed();
      for (t1 = J.get$iterator$ax(objects); t1.moveNext$0();)
        hash = A.SystemHash_combine(hash, J.get$hashCode$(t1.get$current()));
      return A.SystemHash_finish(hash);
    },
    print(object) {
      A.printString(object);
    },
    Set_castFrom(source, newSet, $S, $T) {
      return new A.CastSet(source, newSet, $S._eval$1("@<0>")._bind$1($T)._eval$1("CastSet<1,2>"));
    },
    Stopwatch$() {
      $.$get$Stopwatch__frequency();
      return new A.Stopwatch();
    },
    Uri_parse(uri) {
      var delta, indices, schemeEnd, hostStart, portStart, pathStart, queryStart, fragmentStart, isSimple, scheme, t1, t2, schemeAuth, queryStart0, pathStart0, port, userInfoStart, userInfo, host, portNumber, path, query, _null = null,
        end = uri.length;
      if (end >= 5) {
        delta = ((uri.charCodeAt(4) ^ 58) * 3 | uri.charCodeAt(0) ^ 100 | uri.charCodeAt(1) ^ 97 | uri.charCodeAt(2) ^ 116 | uri.charCodeAt(3) ^ 97) >>> 0;
        if (delta === 0)
          return A.UriData__parse(end < end ? B.JSString_methods.substring$2(uri, 0, end) : uri, 5, _null).get$uri();
        else if (delta === 32)
          return A.UriData__parse(B.JSString_methods.substring$2(uri, 5, end), 0, _null).get$uri();
      }
      indices = A.List_List$filled(8, 0, false, type$.int);
      indices[0] = 0;
      indices[1] = -1;
      indices[2] = -1;
      indices[7] = -1;
      indices[3] = 0;
      indices[4] = 0;
      indices[5] = end;
      indices[6] = end;
      if (A._scan(uri, 0, end, 0, indices) >= 14)
        indices[7] = end;
      schemeEnd = indices[1];
      if (schemeEnd >= 0)
        if (A._scan(uri, 0, schemeEnd, 20, indices) === 20)
          indices[7] = schemeEnd;
      hostStart = indices[2] + 1;
      portStart = indices[3];
      pathStart = indices[4];
      queryStart = indices[5];
      fragmentStart = indices[6];
      if (fragmentStart < queryStart)
        queryStart = fragmentStart;
      if (pathStart < hostStart)
        pathStart = queryStart;
      else if (pathStart <= schemeEnd)
        pathStart = schemeEnd + 1;
      if (portStart < hostStart)
        portStart = pathStart;
      isSimple = indices[7] < 0;
      scheme = _null;
      if (isSimple) {
        isSimple = false;
        if (!(hostStart > schemeEnd + 3)) {
          t1 = portStart > 0;
          if (!(t1 && portStart + 1 === pathStart)) {
            if (!B.JSString_methods.startsWith$2(uri, "\\", pathStart))
              if (hostStart > 0)
                t2 = B.JSString_methods.startsWith$2(uri, "\\", hostStart - 1) || B.JSString_methods.startsWith$2(uri, "\\", hostStart - 2);
              else
                t2 = false;
            else
              t2 = true;
            if (!t2) {
              if (!(queryStart < end && queryStart === pathStart + 2 && B.JSString_methods.startsWith$2(uri, "..", pathStart)))
                t2 = queryStart > pathStart + 2 && B.JSString_methods.startsWith$2(uri, "/..", queryStart - 3);
              else
                t2 = true;
              if (!t2)
                if (schemeEnd === 4) {
                  if (B.JSString_methods.startsWith$2(uri, "file", 0)) {
                    if (hostStart <= 0) {
                      if (!B.JSString_methods.startsWith$2(uri, "/", pathStart)) {
                        schemeAuth = "file:///";
                        delta = 3;
                      } else {
                        schemeAuth = "file://";
                        delta = 2;
                      }
                      uri = schemeAuth + B.JSString_methods.substring$2(uri, pathStart, end);
                      queryStart += delta;
                      fragmentStart += delta;
                      end = uri.length;
                      hostStart = 7;
                      portStart = 7;
                      pathStart = 7;
                    } else if (pathStart === queryStart) {
                      ++fragmentStart;
                      queryStart0 = queryStart + 1;
                      uri = B.JSString_methods.replaceRange$3(uri, pathStart, queryStart, "/");
                      ++end;
                      queryStart = queryStart0;
                    }
                    scheme = "file";
                  } else if (B.JSString_methods.startsWith$2(uri, "http", 0)) {
                    if (t1 && portStart + 3 === pathStart && B.JSString_methods.startsWith$2(uri, "80", portStart + 1)) {
                      fragmentStart -= 3;
                      pathStart0 = pathStart - 3;
                      queryStart -= 3;
                      uri = B.JSString_methods.replaceRange$3(uri, portStart, pathStart, "");
                      end -= 3;
                      pathStart = pathStart0;
                    }
                    scheme = "http";
                  }
                } else if (schemeEnd === 5 && B.JSString_methods.startsWith$2(uri, "https", 0)) {
                  if (t1 && portStart + 4 === pathStart && B.JSString_methods.startsWith$2(uri, "443", portStart + 1)) {
                    fragmentStart -= 4;
                    pathStart0 = pathStart - 4;
                    queryStart -= 4;
                    uri = B.JSString_methods.replaceRange$3(uri, portStart, pathStart, "");
                    end -= 3;
                    pathStart = pathStart0;
                  }
                  scheme = "https";
                }
              isSimple = !t2;
            }
          }
        }
      }
      if (isSimple)
        return new A._SimpleUri(end < uri.length ? B.JSString_methods.substring$2(uri, 0, end) : uri, schemeEnd, hostStart, portStart, pathStart, queryStart, fragmentStart, scheme);
      if (scheme == null)
        if (schemeEnd > 0)
          scheme = A._Uri__makeScheme(uri, 0, schemeEnd);
        else {
          if (schemeEnd === 0)
            A._Uri__fail(uri, 0, "Invalid empty scheme");
          scheme = "";
        }
      port = _null;
      if (hostStart > 0) {
        userInfoStart = schemeEnd + 3;
        userInfo = userInfoStart < hostStart ? A._Uri__makeUserInfo(uri, userInfoStart, hostStart - 1) : "";
        host = A._Uri__makeHost(uri, hostStart, portStart, false);
        t1 = portStart + 1;
        if (t1 < pathStart) {
          portNumber = A.Primitives_parseInt(B.JSString_methods.substring$2(uri, t1, pathStart), _null);
          port = A._Uri__makePort(portNumber == null ? A.throwExpression(A.FormatException$("Invalid port", uri, t1)) : portNumber, scheme);
        }
      } else {
        host = _null;
        userInfo = "";
      }
      path = A._Uri__makePath(uri, pathStart, queryStart, _null, scheme, host != null);
      query = queryStart < fragmentStart ? A._Uri__makeQuery(uri, queryStart + 1, fragmentStart, _null) : _null;
      return A._Uri$_internal(scheme, userInfo, host, port, path, query, fragmentStart < end ? A._Uri__makeFragment(uri, fragmentStart + 1, end) : _null);
    },
    Uri_decodeComponent(encodedComponent) {
      return A._Uri__uriDecode(encodedComponent, 0, encodedComponent.length, B.C_Utf8Codec, false);
    },
    Uri__parseIPv4Address(host, start, end) {
      var i, partStart, partIndex, char, part, partIndex0,
        _s43_ = "IPv4 address should contain exactly 4 parts",
        _s37_ = "each part must be in the range 0..255",
        error = new A.Uri__parseIPv4Address_error(host),
        result = new Uint8Array(4);
      for (i = start, partStart = i, partIndex = 0; i < end; ++i) {
        char = host.charCodeAt(i);
        if (char !== 46) {
          if ((char ^ 48) > 9)
            error.call$2("invalid character", i);
        } else {
          if (partIndex === 3)
            error.call$2(_s43_, i);
          part = A.int_parse(B.JSString_methods.substring$2(host, partStart, i), null);
          if (part > 255)
            error.call$2(_s37_, partStart);
          partIndex0 = partIndex + 1;
          result[partIndex] = part;
          partStart = i + 1;
          partIndex = partIndex0;
        }
      }
      if (partIndex !== 3)
        error.call$2(_s43_, end);
      part = A.int_parse(B.JSString_methods.substring$2(host, partStart, end), null);
      if (part > 255)
        error.call$2(_s37_, partStart);
      result[partIndex] = part;
      return result;
    },
    Uri__validateIPvAddress(host, start, end) {
      var error;
      if (start === end)
        throw A.wrapException(A.FormatException$("Empty IP address", host, start));
      if (host.charCodeAt(start) === 118) {
        error = A.Uri__validateIPvFutureAddress(host, start, end);
        if (error != null)
          throw A.wrapException(error);
        return false;
      }
      A.Uri_parseIPv6Address(host, start, end);
      return true;
    },
    Uri__validateIPvFutureAddress(host, start, end) {
      var cursor, cursor0, char, ucChar,
        _s38_ = "Missing hex-digit in IPvFuture address";
      ++start;
      for (cursor = start; true; cursor = cursor0) {
        if (cursor < end) {
          cursor0 = cursor + 1;
          char = host.charCodeAt(cursor);
          if ((char ^ 48) <= 9)
            continue;
          ucChar = char | 32;
          if (ucChar >= 97 && ucChar <= 102)
            continue;
          if (char === 46) {
            if (cursor0 - 1 === start)
              return new A.FormatException(_s38_, host, cursor0);
            cursor = cursor0;
            break;
          }
          return new A.FormatException("Unexpected character", host, cursor0 - 1);
        }
        if (cursor - 1 === start)
          return new A.FormatException(_s38_, host, cursor);
        return new A.FormatException("Missing '.' in IPvFuture address", host, cursor);
      }
      if (cursor === end)
        return new A.FormatException("Missing address in IPvFuture address, host, cursor", null, null);
      for (; true;) {
        if ((string$.x00_____.charCodeAt(host.charCodeAt(cursor)) & 16) !== 0) {
          ++cursor;
          if (cursor < end)
            continue;
          return null;
        }
        return new A.FormatException("Invalid IPvFuture address character", host, cursor);
      }
    },
    Uri_parseIPv6Address(host, start, end) {
      var parts, i, partStart, wildcardSeen, seenDot, char, atEnd, t1, last, bytes, wildCardLength, index, value, j, _null = null,
        error = new A.Uri_parseIPv6Address_error(host),
        parseHex = new A.Uri_parseIPv6Address_parseHex(error, host);
      if (host.length < 2)
        error.call$2("address is too short", _null);
      parts = A._setArrayType([], type$.JSArray_int);
      for (i = start, partStart = i, wildcardSeen = false, seenDot = false; i < end; ++i) {
        char = host.charCodeAt(i);
        if (char === 58) {
          if (i === start) {
            ++i;
            if (host.charCodeAt(i) !== 58)
              error.call$2("invalid start colon.", i);
            partStart = i;
          }
          if (i === partStart) {
            if (wildcardSeen)
              error.call$2("only one wildcard `::` is allowed", i);
            parts.push(-1);
            wildcardSeen = true;
          } else
            parts.push(parseHex.call$2(partStart, i));
          partStart = i + 1;
        } else if (char === 46)
          seenDot = true;
      }
      if (parts.length === 0)
        error.call$2("too few parts", _null);
      atEnd = partStart === end;
      t1 = B.JSArray_methods.get$last(parts);
      if (atEnd && t1 !== -1)
        error.call$2("expected a part after last `:`", end);
      if (!atEnd)
        if (!seenDot)
          parts.push(parseHex.call$2(partStart, end));
        else {
          last = A.Uri__parseIPv4Address(host, partStart, end);
          parts.push((last[0] << 8 | last[1]) >>> 0);
          parts.push((last[2] << 8 | last[3]) >>> 0);
        }
      if (wildcardSeen) {
        if (parts.length > 7)
          error.call$2("an address with a wildcard must have less than 7 parts", _null);
      } else if (parts.length !== 8)
        error.call$2("an address without a wildcard must contain exactly 8 parts", _null);
      bytes = new Uint8Array(16);
      for (t1 = parts.length, wildCardLength = 9 - t1, i = 0, index = 0; i < t1; ++i) {
        value = parts[i];
        if (value === -1)
          for (j = 0; j < wildCardLength; ++j) {
            bytes[index] = 0;
            bytes[index + 1] = 0;
            index += 2;
          }
        else {
          bytes[index] = B.JSInt_methods._shrOtherPositive$1(value, 8);
          bytes[index + 1] = value & 255;
          index += 2;
        }
      }
      return bytes;
    },
    _Uri$_internal(scheme, _userInfo, _host, _port, path, _query, _fragment) {
      return new A._Uri(scheme, _userInfo, _host, _port, path, _query, _fragment);
    },
    _Uri__Uri(path) {
      var t1, hasAuthority, _null = null,
        userInfo = A._Uri__makeUserInfo(_null, 0, 0),
        host = A._Uri__makeHost(_null, 0, 0, false),
        query = A._Uri__makeQuery(_null, 0, 0, _null),
        fragment = A._Uri__makeFragment(_null, 0, 0),
        port = A._Uri__makePort(_null, "");
      if (host == null)
        if (userInfo.length === 0)
          t1 = port != null;
        else
          t1 = true;
      else
        t1 = false;
      if (t1)
        host = "";
      t1 = host == null;
      hasAuthority = !t1;
      path = A._Uri__makePath(path, 0, path.length, _null, "", hasAuthority);
      if (t1 && !B.JSString_methods.startsWith$1(path, "/"))
        path = A._Uri__normalizeRelativePath(path, hasAuthority);
      else
        path = A._Uri__removeDotSegments(path);
      return A._Uri$_internal("", userInfo, t1 && B.JSString_methods.startsWith$1(path, "//") ? "" : host, port, path, query, fragment);
    },
    _Uri__defaultPort(scheme) {
      if (scheme === "http")
        return 80;
      if (scheme === "https")
        return 443;
      return 0;
    },
    _Uri__fail(uri, index, message) {
      throw A.wrapException(A.FormatException$(message, uri, index));
    },
    _Uri__makePort(port, scheme) {
      if (port != null && port === A._Uri__defaultPort(scheme))
        return null;
      return port;
    },
    _Uri__makeHost(host, start, end, strictIPv6) {
      var index, t1, zoneID, index0, zoneIDstart, isIPv6, hostChars, i;
      if (host == null)
        return null;
      if (start === end)
        return "";
      if (host.charCodeAt(start) === 91) {
        index = end - 1;
        if (host.charCodeAt(index) !== 93)
          A._Uri__fail(host, start, "Missing end `]` to match `[` in host");
        t1 = start + 1;
        zoneID = "";
        if (host.charCodeAt(t1) !== 118) {
          index0 = A._Uri__checkZoneID(host, t1, index);
          if (index0 < index) {
            zoneIDstart = index0 + 1;
            zoneID = A._Uri__normalizeZoneID(host, B.JSString_methods.startsWith$2(host, "25", zoneIDstart) ? index0 + 3 : zoneIDstart, index, "%25");
          }
          index = index0;
        }
        isIPv6 = A.Uri__validateIPvAddress(host, t1, index);
        hostChars = B.JSString_methods.substring$2(host, t1, index);
        return "[" + (isIPv6 ? hostChars.toLowerCase() : hostChars) + zoneID + "]";
      }
      for (i = start; i < end; ++i)
        if (host.charCodeAt(i) === 58) {
          index = B.JSString_methods.indexOf$2(host, "%", start);
          index = index >= start && index < end ? index : end;
          if (index < end) {
            zoneIDstart = index + 1;
            zoneID = A._Uri__normalizeZoneID(host, B.JSString_methods.startsWith$2(host, "25", zoneIDstart) ? index + 3 : zoneIDstart, end, "%25");
          } else
            zoneID = "";
          A.Uri_parseIPv6Address(host, start, index);
          return "[" + B.JSString_methods.substring$2(host, start, index) + zoneID + "]";
        }
      return A._Uri__normalizeRegName(host, start, end);
    },
    _Uri__checkZoneID(host, start, end) {
      var index = B.JSString_methods.indexOf$2(host, "%", start);
      return index >= start && index < end ? index : end;
    },
    _Uri__normalizeZoneID(host, start, end, prefix) {
      var index, sectionStart, isNormalized, char, replacement, t1, t2, sourceLength, tail, slice,
        buffer = prefix !== "" ? new A.StringBuffer(prefix) : null;
      for (index = start, sectionStart = index, isNormalized = true; index < end;) {
        char = host.charCodeAt(index);
        if (char === 37) {
          replacement = A._Uri__normalizeEscape(host, index, true);
          t1 = replacement == null;
          if (t1 && isNormalized) {
            index += 3;
            continue;
          }
          if (buffer == null)
            buffer = new A.StringBuffer("");
          t2 = buffer._contents += B.JSString_methods.substring$2(host, sectionStart, index);
          if (t1)
            replacement = B.JSString_methods.substring$2(host, index, index + 3);
          else if (replacement === "%")
            A._Uri__fail(host, index, "ZoneID should not contain % anymore");
          buffer._contents = t2 + replacement;
          index += 3;
          sectionStart = index;
          isNormalized = true;
        } else if (char < 127 && (string$.x00_____.charCodeAt(char) & 1) !== 0) {
          if (isNormalized && 65 <= char && 90 >= char) {
            if (buffer == null)
              buffer = new A.StringBuffer("");
            if (sectionStart < index) {
              buffer._contents += B.JSString_methods.substring$2(host, sectionStart, index);
              sectionStart = index;
            }
            isNormalized = false;
          }
          ++index;
        } else {
          sourceLength = 1;
          if ((char & 64512) === 55296 && index + 1 < end) {
            tail = host.charCodeAt(index + 1);
            if ((tail & 64512) === 56320) {
              char = 65536 + ((char & 1023) << 10) + (tail & 1023);
              sourceLength = 2;
            }
          }
          slice = B.JSString_methods.substring$2(host, sectionStart, index);
          if (buffer == null) {
            buffer = new A.StringBuffer("");
            t1 = buffer;
          } else
            t1 = buffer;
          t1._contents += slice;
          t2 = A._Uri__escapeChar(char);
          t1._contents += t2;
          index += sourceLength;
          sectionStart = index;
        }
      }
      if (buffer == null)
        return B.JSString_methods.substring$2(host, start, end);
      if (sectionStart < end) {
        slice = B.JSString_methods.substring$2(host, sectionStart, end);
        buffer._contents += slice;
      }
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _Uri__normalizeRegName(host, start, end) {
      var index, sectionStart, buffer, isNormalized, char, replacement, t1, slice, t2, sourceLength, tail,
        _s128_ = string$.x00_____;
      for (index = start, sectionStart = index, buffer = null, isNormalized = true; index < end;) {
        char = host.charCodeAt(index);
        if (char === 37) {
          replacement = A._Uri__normalizeEscape(host, index, true);
          t1 = replacement == null;
          if (t1 && isNormalized) {
            index += 3;
            continue;
          }
          if (buffer == null)
            buffer = new A.StringBuffer("");
          slice = B.JSString_methods.substring$2(host, sectionStart, index);
          if (!isNormalized)
            slice = slice.toLowerCase();
          t2 = buffer._contents += slice;
          sourceLength = 3;
          if (t1)
            replacement = B.JSString_methods.substring$2(host, index, index + 3);
          else if (replacement === "%") {
            replacement = "%25";
            sourceLength = 1;
          }
          buffer._contents = t2 + replacement;
          index += sourceLength;
          sectionStart = index;
          isNormalized = true;
        } else if (char < 127 && (_s128_.charCodeAt(char) & 32) !== 0) {
          if (isNormalized && 65 <= char && 90 >= char) {
            if (buffer == null)
              buffer = new A.StringBuffer("");
            if (sectionStart < index) {
              buffer._contents += B.JSString_methods.substring$2(host, sectionStart, index);
              sectionStart = index;
            }
            isNormalized = false;
          }
          ++index;
        } else if (char <= 93 && (_s128_.charCodeAt(char) & 1024) !== 0)
          A._Uri__fail(host, index, "Invalid character");
        else {
          sourceLength = 1;
          if ((char & 64512) === 55296 && index + 1 < end) {
            tail = host.charCodeAt(index + 1);
            if ((tail & 64512) === 56320) {
              char = 65536 + ((char & 1023) << 10) + (tail & 1023);
              sourceLength = 2;
            }
          }
          slice = B.JSString_methods.substring$2(host, sectionStart, index);
          if (!isNormalized)
            slice = slice.toLowerCase();
          if (buffer == null) {
            buffer = new A.StringBuffer("");
            t1 = buffer;
          } else
            t1 = buffer;
          t1._contents += slice;
          t2 = A._Uri__escapeChar(char);
          t1._contents += t2;
          index += sourceLength;
          sectionStart = index;
        }
      }
      if (buffer == null)
        return B.JSString_methods.substring$2(host, start, end);
      if (sectionStart < end) {
        slice = B.JSString_methods.substring$2(host, sectionStart, end);
        if (!isNormalized)
          slice = slice.toLowerCase();
        buffer._contents += slice;
      }
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _Uri__makeScheme(scheme, start, end) {
      var i, containsUpperCase, codeUnit;
      if (start === end)
        return "";
      if (!A._Uri__isAlphabeticCharacter(scheme.charCodeAt(start)))
        A._Uri__fail(scheme, start, "Scheme not starting with alphabetic character");
      for (i = start, containsUpperCase = false; i < end; ++i) {
        codeUnit = scheme.charCodeAt(i);
        if (!(codeUnit < 128 && (string$.x00_____.charCodeAt(codeUnit) & 8) !== 0))
          A._Uri__fail(scheme, i, "Illegal scheme character");
        if (65 <= codeUnit && codeUnit <= 90)
          containsUpperCase = true;
      }
      scheme = B.JSString_methods.substring$2(scheme, start, end);
      return A._Uri__canonicalizeScheme(containsUpperCase ? scheme.toLowerCase() : scheme);
    },
    _Uri__canonicalizeScheme(scheme) {
      if (scheme === "http")
        return "http";
      if (scheme === "file")
        return "file";
      if (scheme === "https")
        return "https";
      if (scheme === "package")
        return "package";
      return scheme;
    },
    _Uri__makeUserInfo(userInfo, start, end) {
      if (userInfo == null)
        return "";
      return A._Uri__normalizeOrSubstring(userInfo, start, end, 16, false, false);
    },
    _Uri__makePath(path, start, end, pathSegments, scheme, hasAuthority) {
      var isFile = scheme === "file",
        ensureLeadingSlash = isFile || hasAuthority,
        result = A._Uri__normalizeOrSubstring(path, start, end, 128, true, true);
      if (result.length === 0) {
        if (isFile)
          return "/";
      } else if (ensureLeadingSlash && !B.JSString_methods.startsWith$1(result, "/"))
        result = "/" + result;
      return A._Uri__normalizePath(result, scheme, hasAuthority);
    },
    _Uri__normalizePath(path, scheme, hasAuthority) {
      var t1 = scheme.length === 0;
      if (t1 && !hasAuthority && !B.JSString_methods.startsWith$1(path, "/") && !B.JSString_methods.startsWith$1(path, "\\"))
        return A._Uri__normalizeRelativePath(path, !t1 || hasAuthority);
      return A._Uri__removeDotSegments(path);
    },
    _Uri__makeQuery(query, start, end, queryParameters) {
      if (query != null)
        return A._Uri__normalizeOrSubstring(query, start, end, 256, true, false);
      return null;
    },
    _Uri__makeFragment(fragment, start, end) {
      if (fragment == null)
        return null;
      return A._Uri__normalizeOrSubstring(fragment, start, end, 256, true, false);
    },
    _Uri__normalizeEscape(source, index, lowerCase) {
      var firstDigit, secondDigit, firstDigitValue, secondDigitValue, value,
        t1 = index + 2;
      if (t1 >= source.length)
        return "%";
      firstDigit = source.charCodeAt(index + 1);
      secondDigit = source.charCodeAt(t1);
      firstDigitValue = A.hexDigitValue(firstDigit);
      secondDigitValue = A.hexDigitValue(secondDigit);
      if (firstDigitValue < 0 || secondDigitValue < 0)
        return "%";
      value = firstDigitValue * 16 + secondDigitValue;
      if (value < 127 && (string$.x00_____.charCodeAt(value) & 1) !== 0)
        return A.Primitives_stringFromCharCode(lowerCase && 65 <= value && 90 >= value ? (value | 32) >>> 0 : value);
      if (firstDigit >= 97 || secondDigit >= 97)
        return B.JSString_methods.substring$2(source, index, index + 3).toUpperCase();
      return null;
    },
    _Uri__escapeChar(char) {
      var codeUnits, flag, encodedBytes, index, byte,
        _s16_ = "0123456789ABCDEF";
      if (char <= 127) {
        codeUnits = new Uint8Array(3);
        codeUnits[0] = 37;
        codeUnits[1] = _s16_.charCodeAt(char >>> 4);
        codeUnits[2] = _s16_.charCodeAt(char & 15);
      } else {
        if (char > 2047)
          if (char > 65535) {
            flag = 240;
            encodedBytes = 4;
          } else {
            flag = 224;
            encodedBytes = 3;
          }
        else {
          flag = 192;
          encodedBytes = 2;
        }
        codeUnits = new Uint8Array(3 * encodedBytes);
        for (index = 0; --encodedBytes, encodedBytes >= 0; flag = 128) {
          byte = B.JSInt_methods._shrReceiverPositive$1(char, 6 * encodedBytes) & 63 | flag;
          codeUnits[index] = 37;
          codeUnits[index + 1] = _s16_.charCodeAt(byte >>> 4);
          codeUnits[index + 2] = _s16_.charCodeAt(byte & 15);
          index += 3;
        }
      }
      return A.String_String$fromCharCodes(codeUnits, 0, null);
    },
    _Uri__normalizeOrSubstring(component, start, end, charMask, escapeDelimiters, replaceBackslash) {
      var t1 = A._Uri__normalize(component, start, end, charMask, escapeDelimiters, replaceBackslash);
      return t1 == null ? B.JSString_methods.substring$2(component, start, end) : t1;
    },
    _Uri__normalize(component, start, end, charMask, escapeDelimiters, replaceBackslash) {
      var t1, index, sectionStart, buffer, char, sourceLength, replacement, t2, tail, _null = null,
        _s128_ = string$.x00_____;
      for (t1 = !escapeDelimiters, index = start, sectionStart = index, buffer = _null; index < end;) {
        char = component.charCodeAt(index);
        if (char < 127 && (_s128_.charCodeAt(char) & charMask) !== 0)
          ++index;
        else {
          sourceLength = 1;
          if (char === 37) {
            replacement = A._Uri__normalizeEscape(component, index, false);
            if (replacement == null) {
              index += 3;
              continue;
            }
            if ("%" === replacement)
              replacement = "%25";
            else
              sourceLength = 3;
          } else if (char === 92 && replaceBackslash)
            replacement = "/";
          else if (t1 && char <= 93 && (_s128_.charCodeAt(char) & 1024) !== 0) {
            A._Uri__fail(component, index, "Invalid character");
            sourceLength = _null;
            replacement = sourceLength;
          } else {
            if ((char & 64512) === 55296) {
              t2 = index + 1;
              if (t2 < end) {
                tail = component.charCodeAt(t2);
                if ((tail & 64512) === 56320) {
                  char = 65536 + ((char & 1023) << 10) + (tail & 1023);
                  sourceLength = 2;
                }
              }
            }
            replacement = A._Uri__escapeChar(char);
          }
          if (buffer == null) {
            buffer = new A.StringBuffer("");
            t2 = buffer;
          } else
            t2 = buffer;
          t2._contents = (t2._contents += B.JSString_methods.substring$2(component, sectionStart, index)) + replacement;
          index += sourceLength;
          sectionStart = index;
        }
      }
      if (buffer == null)
        return _null;
      if (sectionStart < end) {
        t1 = B.JSString_methods.substring$2(component, sectionStart, end);
        buffer._contents += t1;
      }
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _Uri__mayContainDotSegments(path) {
      if (B.JSString_methods.startsWith$1(path, "."))
        return true;
      return B.JSString_methods.indexOf$1(path, "/.") !== -1;
    },
    _Uri__removeDotSegments(path) {
      var output, t1, t2, appendSlash, _i, segment;
      if (!A._Uri__mayContainDotSegments(path))
        return path;
      output = A._setArrayType([], type$.JSArray_String);
      for (t1 = path.split("/"), t2 = t1.length, appendSlash = false, _i = 0; _i < t2; ++_i) {
        segment = t1[_i];
        if (segment === "..") {
          if (output.length !== 0) {
            output.pop();
            if (output.length === 0)
              output.push("");
          }
          appendSlash = true;
        } else {
          appendSlash = "." === segment;
          if (!appendSlash)
            output.push(segment);
        }
      }
      if (appendSlash)
        output.push("");
      return B.JSArray_methods.join$1(output, "/");
    },
    _Uri__normalizeRelativePath(path, allowScheme) {
      var output, t1, t2, appendSlash, _i, segment;
      if (!A._Uri__mayContainDotSegments(path))
        return !allowScheme ? A._Uri__escapeScheme(path) : path;
      output = A._setArrayType([], type$.JSArray_String);
      for (t1 = path.split("/"), t2 = t1.length, appendSlash = false, _i = 0; _i < t2; ++_i) {
        segment = t1[_i];
        if (".." === segment) {
          appendSlash = output.length !== 0 && B.JSArray_methods.get$last(output) !== "..";
          if (appendSlash)
            output.pop();
          else
            output.push("..");
        } else {
          appendSlash = "." === segment;
          if (!appendSlash)
            output.push(segment);
        }
      }
      t1 = output.length;
      if (t1 !== 0)
        t1 = t1 === 1 && output[0].length === 0;
      else
        t1 = true;
      if (t1)
        return "./";
      if (appendSlash || B.JSArray_methods.get$last(output) === "..")
        output.push("");
      if (!allowScheme)
        output[0] = A._Uri__escapeScheme(output[0]);
      return B.JSArray_methods.join$1(output, "/");
    },
    _Uri__escapeScheme(path) {
      var i, char,
        t1 = path.length;
      if (t1 >= 2 && A._Uri__isAlphabeticCharacter(path.charCodeAt(0)))
        for (i = 1; i < t1; ++i) {
          char = path.charCodeAt(i);
          if (char === 58)
            return B.JSString_methods.substring$2(path, 0, i) + "%3A" + B.JSString_methods.substring$1(path, i + 1);
          if (char > 127 || (string$.x00_____.charCodeAt(char) & 8) === 0)
            break;
        }
      return path;
    },
    _Uri__hexCharPairToByte(s, pos) {
      var byte, i, charCode;
      for (byte = 0, i = 0; i < 2; ++i) {
        charCode = s.charCodeAt(pos + i);
        if (48 <= charCode && charCode <= 57)
          byte = byte * 16 + charCode - 48;
        else {
          charCode |= 32;
          if (97 <= charCode && charCode <= 102)
            byte = byte * 16 + charCode - 87;
          else
            throw A.wrapException(A.ArgumentError$("Invalid URL encoding", null));
        }
      }
      return byte;
    },
    _Uri__uriDecode(text, start, end, encoding, plusToSpace) {
      var simple, codeUnit, t1, bytes,
        i = start;
      while (true) {
        if (!(i < end)) {
          simple = true;
          break;
        }
        codeUnit = text.charCodeAt(i);
        if (codeUnit <= 127)
          t1 = codeUnit === 37;
        else
          t1 = true;
        if (t1) {
          simple = false;
          break;
        }
        ++i;
      }
      if (simple)
        if (B.C_Utf8Codec === encoding)
          return B.JSString_methods.substring$2(text, start, end);
        else
          bytes = new A.CodeUnits(B.JSString_methods.substring$2(text, start, end));
      else {
        bytes = A._setArrayType([], type$.JSArray_int);
        for (t1 = text.length, i = start; i < end; ++i) {
          codeUnit = text.charCodeAt(i);
          if (codeUnit > 127)
            throw A.wrapException(A.ArgumentError$("Illegal percent encoding in URI", null));
          if (codeUnit === 37) {
            if (i + 3 > t1)
              throw A.wrapException(A.ArgumentError$("Truncated URI", null));
            bytes.push(A._Uri__hexCharPairToByte(text, i + 1));
            i += 2;
          } else
            bytes.push(codeUnit);
        }
      }
      return encoding.decode$1(bytes);
    },
    _Uri__isAlphabeticCharacter(codeUnit) {
      var lowerCase = codeUnit | 32;
      return 97 <= lowerCase && lowerCase <= 122;
    },
    UriData__parse(text, start, sourceUri) {
      var t1, i, slashIndex, char, equalsIndex, lastSeparator, t2, data,
        _s17_ = "Invalid MIME type",
        indices = A._setArrayType([start - 1], type$.JSArray_int);
      for (t1 = text.length, i = start, slashIndex = -1, char = null; i < t1; ++i) {
        char = text.charCodeAt(i);
        if (char === 44 || char === 59)
          break;
        if (char === 47) {
          if (slashIndex < 0) {
            slashIndex = i;
            continue;
          }
          throw A.wrapException(A.FormatException$(_s17_, text, i));
        }
      }
      if (slashIndex < 0 && i > start)
        throw A.wrapException(A.FormatException$(_s17_, text, i));
      for (; char !== 44;) {
        indices.push(i);
        ++i;
        for (equalsIndex = -1; i < t1; ++i) {
          char = text.charCodeAt(i);
          if (char === 61) {
            if (equalsIndex < 0)
              equalsIndex = i;
          } else if (char === 59 || char === 44)
            break;
        }
        if (equalsIndex >= 0)
          indices.push(equalsIndex);
        else {
          lastSeparator = B.JSArray_methods.get$last(indices);
          if (char !== 44 || i !== lastSeparator + 7 || !B.JSString_methods.startsWith$2(text, "base64", lastSeparator + 1))
            throw A.wrapException(A.FormatException$("Expecting '='", text, i));
          break;
        }
      }
      indices.push(i);
      t2 = i + 1;
      if ((indices.length & 1) === 1)
        text = B.C_Base64Codec.normalize$3(text, t2, t1);
      else {
        data = A._Uri__normalize(text, t2, t1, 256, true, false);
        if (data != null)
          text = B.JSString_methods.replaceRange$3(text, t2, t1, data);
      }
      return new A.UriData(text, indices, sourceUri);
    },
    _scan(uri, start, end, state, indices) {
      var i, char, transition;
      for (i = start; i < end; ++i) {
        char = uri.charCodeAt(i) ^ 96;
        if (char > 95)
          char = 31;
        transition = '\xe1\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\xe1\xe1\xe1\x01\xe1\xe1\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\xe1\xe3\xe1\xe1\x01\xe1\x01\xe1\xcd\x01\xe1\x01\x01\x01\x01\x01\x01\x01\x01\x0e\x03\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01"\x01\xe1\x01\xe1\xac\xe1\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\xe1\xe1\xe1\x01\xe1\xe1\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\xe1\xea\xe1\xe1\x01\xe1\x01\xe1\xcd\x01\xe1\x01\x01\x01\x01\x01\x01\x01\x01\x01\n\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01"\x01\xe1\x01\xe1\xac\xeb\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\xeb\xeb\xeb\x8b\xeb\xeb\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\xeb\x83\xeb\xeb\x8b\xeb\x8b\xeb\xcd\x8b\xeb\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x92\x83\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\xeb\x8b\xeb\x8b\xeb\xac\xeb\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\xeb\xeb\xeb\v\xeb\xeb\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\xebD\xeb\xeb\v\xeb\v\xeb\xcd\v\xeb\v\v\v\v\v\v\v\v\x12D\v\v\v\v\v\v\v\v\v\v\xeb\v\xeb\v\xeb\xac\xe5\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\xe5\xe5\xe5\x05\xe5D\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe8\x8a\xe5\xe5\x05\xe5\x05\xe5\xcd\x05\xe5\x05\x05\x05\x05\x05\x05\x05\x05\x05\x8a\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05f\x05\xe5\x05\xe5\xac\xe5\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\xe5\xe5\xe5\x05\xe5D\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\x8a\xe5\xe5\x05\xe5\x05\xe5\xcd\x05\xe5\x05\x05\x05\x05\x05\x05\x05\x05\x05\x8a\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05f\x05\xe5\x05\xe5\xac\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7D\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\x8a\xe7\xe7\xe7\xe7\xe7\xe7\xcd\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\x8a\xe7\x07\x07\x07\x07\x07\x07\x07\x07\x07\xe7\xe7\xe7\xe7\xe7\xac\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7D\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\x8a\xe7\xe7\xe7\xe7\xe7\xe7\xcd\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\x8a\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\xe7\xe7\xe7\xe7\xe7\xac\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\x05\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\xeb\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\xeb\xeb\xeb\v\xeb\xeb\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\xeb\xea\xeb\xeb\v\xeb\v\xeb\xcd\v\xeb\v\v\v\v\v\v\v\v\x10\xea\v\v\v\v\v\v\v\v\v\v\xeb\v\xeb\v\xeb\xac\xeb\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\xeb\xeb\xeb\v\xeb\xeb\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\xeb\xea\xeb\xeb\v\xeb\v\xeb\xcd\v\xeb\v\v\v\v\v\v\v\v\x12\n\v\v\v\v\v\v\v\v\v\v\xeb\v\xeb\v\xeb\xac\xeb\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\xeb\xeb\xeb\v\xeb\xeb\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\xeb\xea\xeb\xeb\v\xeb\v\xeb\xcd\v\xeb\v\v\v\v\v\v\v\v\v\n\v\v\v\v\v\v\v\v\v\v\xeb\v\xeb\v\xeb\xac\xec\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\xec\xec\xec\f\xec\xec\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\xec\xec\xec\xec\f\xec\f\xec\xcd\f\xec\f\f\f\f\f\f\f\f\f\xec\f\f\f\f\f\f\f\f\f\f\xec\f\xec\f\xec\f\xed\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\xed\xed\xed\r\xed\xed\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\xed\xed\xed\xed\r\xed\r\xed\xed\r\xed\r\r\r\r\r\r\r\r\r\xed\r\r\r\r\r\r\r\r\r\r\xed\r\xed\r\xed\r\xe1\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\xe1\xe1\xe1\x01\xe1\xe1\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\xe1\xea\xe1\xe1\x01\xe1\x01\xe1\xcd\x01\xe1\x01\x01\x01\x01\x01\x01\x01\x01\x0f\xea\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01"\x01\xe1\x01\xe1\xac\xe1\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\xe1\xe1\xe1\x01\xe1\xe1\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\xe1\xe9\xe1\xe1\x01\xe1\x01\xe1\xcd\x01\xe1\x01\x01\x01\x01\x01\x01\x01\x01\x01\t\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01"\x01\xe1\x01\xe1\xac\xeb\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\xeb\xeb\xeb\v\xeb\xeb\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\xeb\xea\xeb\xeb\v\xeb\v\xeb\xcd\v\xeb\v\v\v\v\v\v\v\v\x11\xea\v\v\v\v\v\v\v\v\v\v\xeb\v\xeb\v\xeb\xac\xeb\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\xeb\xeb\xeb\v\xeb\xeb\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\xeb\xe9\xeb\xeb\v\xeb\v\xeb\xcd\v\xeb\v\v\v\v\v\v\v\v\v\t\v\v\v\v\v\v\v\v\v\v\xeb\v\xeb\v\xeb\xac\xeb\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\xeb\xeb\xeb\v\xeb\xeb\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\xeb\xea\xeb\xeb\v\xeb\v\xeb\xcd\v\xeb\v\v\v\v\v\v\v\v\x13\xea\v\v\v\v\v\v\v\v\v\v\xeb\v\xeb\v\xeb\xac\xeb\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\xeb\xeb\xeb\v\xeb\xeb\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\xeb\xea\xeb\xeb\v\xeb\v\xeb\xcd\v\xeb\v\v\v\v\v\v\v\v\v\xea\v\v\v\v\v\v\v\v\v\v\xeb\v\xeb\v\xeb\xac\xf5\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\x15\xf5\x15\x15\xf5\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\xf5\xf5\xf5\xf5\xf5\xf5'.charCodeAt(state * 96 + char);
        state = transition & 31;
        indices[transition >>> 5] = i;
      }
      return state;
    },
    NoSuchMethodError_toString_closure: function NoSuchMethodError_toString_closure(t0, t1) {
      this._box_0 = t0;
      this.sb = t1;
    },
    Duration: function Duration(t0) {
      this._duration = t0;
    },
    _Enum: function _Enum() {
    },
    Error: function Error() {
    },
    AssertionError: function AssertionError(t0) {
      this.message = t0;
    },
    TypeError: function TypeError() {
    },
    ArgumentError: function ArgumentError(t0, t1, t2, t3) {
      var _ = this;
      _._hasValue = t0;
      _.invalidValue = t1;
      _.name = t2;
      _.message = t3;
    },
    RangeError: function RangeError(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.start = t0;
      _.end = t1;
      _._hasValue = t2;
      _.invalidValue = t3;
      _.name = t4;
      _.message = t5;
    },
    IndexError: function IndexError(t0, t1, t2, t3, t4) {
      var _ = this;
      _.length = t0;
      _._hasValue = t1;
      _.invalidValue = t2;
      _.name = t3;
      _.message = t4;
    },
    NoSuchMethodError: function NoSuchMethodError(t0, t1, t2, t3) {
      var _ = this;
      _._core$_receiver = t0;
      _._memberName = t1;
      _._core$_arguments = t2;
      _._namedArguments = t3;
    },
    UnsupportedError: function UnsupportedError(t0) {
      this.message = t0;
    },
    UnimplementedError: function UnimplementedError(t0) {
      this.message = t0;
    },
    StateError: function StateError(t0) {
      this.message = t0;
    },
    ConcurrentModificationError: function ConcurrentModificationError(t0) {
      this.modifiedObject = t0;
    },
    OutOfMemoryError: function OutOfMemoryError() {
    },
    StackOverflowError: function StackOverflowError() {
    },
    _Exception: function _Exception(t0) {
      this.message = t0;
    },
    FormatException: function FormatException(t0, t1, t2) {
      this.message = t0;
      this.source = t1;
      this.offset = t2;
    },
    Iterable: function Iterable() {
    },
    MapEntry: function MapEntry(t0, t1, t2) {
      this.key = t0;
      this.value = t1;
      this.$ti = t2;
    },
    Null: function Null() {
    },
    Object: function Object() {
    },
    _StringStackTrace: function _StringStackTrace(t0) {
      this._stackTrace = t0;
    },
    Stopwatch: function Stopwatch() {
      this._stop = this._core$_start = 0;
    },
    StringBuffer: function StringBuffer(t0) {
      this._contents = t0;
    },
    Uri__parseIPv4Address_error: function Uri__parseIPv4Address_error(t0) {
      this.host = t0;
    },
    Uri_parseIPv6Address_error: function Uri_parseIPv6Address_error(t0) {
      this.host = t0;
    },
    Uri_parseIPv6Address_parseHex: function Uri_parseIPv6Address_parseHex(t0, t1) {
      this.error = t0;
      this.host = t1;
    },
    _Uri: function _Uri(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.scheme = t0;
      _._userInfo = t1;
      _._host = t2;
      _._port = t3;
      _.path = t4;
      _._query = t5;
      _._fragment = t6;
      _.___Uri_hashCode_FI = _.___Uri_pathSegments_FI = _.___Uri__text_FI = $;
    },
    UriData: function UriData(t0, t1, t2) {
      this._text = t0;
      this._separatorIndices = t1;
      this._uriCache = t2;
    },
    _SimpleUri: function _SimpleUri(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _._uri = t0;
      _._schemeEnd = t1;
      _._hostStart = t2;
      _._portStart = t3;
      _._pathStart = t4;
      _._queryStart = t5;
      _._fragmentStart = t6;
      _._schemeCache = t7;
      _._hashCodeCache = null;
    },
    _DataUri: function _DataUri(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.scheme = t0;
      _._userInfo = t1;
      _._host = t2;
      _._port = t3;
      _.path = t4;
      _._query = t5;
      _._fragment = t6;
      _.___Uri_hashCode_FI = _.___Uri_pathSegments_FI = _.___Uri__text_FI = $;
    },
    Expando: function Expando(t0) {
      this._jsWeakMap = t0;
    },
    max(a, b) {
      return Math.max(a, b);
    },
    log(x) {
      return Math.log(x);
    },
    Random_Random(seed) {
      var t1;
      if (seed == null)
        t1 = B.C__JSRandom;
      else {
        t1 = new A._Random();
        t1._Random$1(seed);
      }
      return t1;
    },
    _JSRandom: function _JSRandom() {
    },
    _Random: function _Random() {
      this._hi = this._lo = 0;
    },
    ByteData_ByteData$view(buffer, offsetInBytes, $length) {
      return J.asByteData$2$x(buffer, offsetInBytes, $length);
    },
    Endian: function Endian() {
    },
    StringCharacterRange_StringCharacterRange$at(string, startIndex) {
      var start,
        t1 = string.length;
      A.RangeError_checkValidRange(startIndex, null, t1, "startIndex", "endIndex");
      start = A.previousBreak(string, 0, t1, startIndex);
      return new A.StringCharacterRange(string, start, startIndex !== start ? A.nextBreak(string, 0, t1, startIndex) : startIndex);
    },
    StringCharacterRange: function StringCharacterRange(t0, t1, t2) {
      var _ = this;
      _._characters_impl$_string = t0;
      _._characters_impl$_start = t1;
      _._characters_impl$_end = t2;
      _._currentCache = null;
    },
    lookAhead(base, start, cursor, state) {
      if (state === 208)
        return A.lookAheadRegional(base, start, cursor);
      if (state === 224) {
        if (A.lookAheadPictorgraphicExtend(base, start, cursor) >= 0)
          return 145;
        return 64;
      }
      throw A.wrapException(A.StateError$("Unexpected state: " + B.JSInt_methods.toRadixString$1(state, 16)));
    },
    lookAheadRegional(base, start, cursor) {
      var index, count, index0, tail, lead;
      for (index = cursor, count = 0; index0 = index - 2, index0 >= start; index = index0) {
        tail = base.charCodeAt(index - 1);
        if ((tail & 64512) !== 56320)
          break;
        lead = base.charCodeAt(index0);
        if ((lead & 64512) !== 55296)
          break;
        if (A.high(lead, tail) !== 6)
          break;
        count ^= 1;
      }
      if (count === 0)
        return 193;
      else
        return 144;
    },
    lookAheadPictorgraphicExtend(base, start, cursor) {
      var index, char, category, prevChar, t1;
      for (index = cursor; index > start;) {
        --index;
        char = base.charCodeAt(index);
        if ((char & 64512) !== 56320)
          category = A.low(char);
        else {
          if (index > start) {
            --index;
            prevChar = base.charCodeAt(index);
            t1 = (prevChar & 64512) === 55296;
          } else {
            prevChar = 0;
            t1 = false;
          }
          if (t1)
            category = A.high(prevChar, char);
          else
            break;
        }
        if (category === 7)
          return index;
        if (category !== 4)
          break;
      }
      return -1;
    },
    previousBreak(text, start, end, index) {
      var nextChar, category, indexBefore, indexAfter, secondChar, prevChar;
      if (index === start || index === end)
        return index;
      nextChar = text.charCodeAt(index);
      if ((nextChar & 63488) !== 55296) {
        category = A.low(nextChar);
        indexBefore = index;
      } else {
        category = 2;
        if ((nextChar & 64512) === 55296) {
          indexAfter = index + 1;
          if (indexAfter < end) {
            secondChar = text.charCodeAt(indexAfter);
            category = (secondChar & 64512) === 56320 ? A.high(nextChar, secondChar) : 2;
          }
          indexBefore = index;
        } else {
          indexBefore = index - 1;
          prevChar = text.charCodeAt(indexBefore);
          if ((prevChar & 64512) === 55296)
            category = A.high(prevChar, nextChar);
          else
            indexBefore = index;
        }
      }
      return new A.BackBreaks(text, start, indexBefore, string$.x10__0__.charCodeAt(category | 176)).nextBreak$0();
    },
    nextBreak(text, start, end, index) {
      var indexBefore, prevChar, prevCategory, nextChar, secondCharIndex, secondChar, state, t1;
      if (index === start || index === end)
        return index;
      indexBefore = index - 1;
      prevChar = text.charCodeAt(indexBefore);
      if ((prevChar & 63488) !== 55296)
        prevCategory = A.low(prevChar);
      else {
        prevCategory = 2;
        if ((prevChar & 64512) === 55296) {
          nextChar = text.charCodeAt(index);
          if ((nextChar & 64512) === 56320) {
            ++index;
            if (index === end)
              return end;
            prevCategory = A.high(prevChar, nextChar);
          }
        } else if (indexBefore > start) {
          secondCharIndex = indexBefore - 1;
          secondChar = text.charCodeAt(secondCharIndex);
          if ((secondChar & 64512) === 55296) {
            prevCategory = A.high(secondChar, prevChar);
            indexBefore = secondCharIndex;
          }
        }
      }
      if (prevCategory === 6)
        state = A.lookAheadRegional(text, start, indexBefore) !== 144 ? 160 : 48;
      else {
        t1 = prevCategory === 1;
        if (t1 || prevCategory === 4)
          if (A.lookAheadPictorgraphicExtend(text, start, indexBefore) >= 0)
            state = t1 ? 144 : 128;
          else
            state = 48;
        else
          state = string$.x200_000.charCodeAt(prevCategory | 176);
      }
      return new A.Breaks(text, text.length, index, state).nextBreak$0();
    },
    Breaks: function Breaks(t0, t1, t2, t3) {
      var _ = this;
      _.base = t0;
      _.end = t1;
      _.cursor = t2;
      _.state = t3;
    },
    BackBreaks: function BackBreaks(t0, t1, t2, t3) {
      var _ = this;
      _.base = t0;
      _.start = t1;
      _.cursor = t2;
      _.state = t3;
    },
    HeapPriorityQueue: function HeapPriorityQueue(t0, t1, t2) {
      var _ = this;
      _.comparison = t0;
      _._priority_queue$_queue = t1;
      _._priority_queue$_modificationCount = _._priority_queue$_length = 0;
      _.$ti = t2;
    },
    Offset_lerp(a, b, t) {
      if (b == null)
        if (a == null)
          return null;
        else
          return a.$mul(0, 1 - t);
      else if (a == null)
        return b.$mul(0, t);
      else
        return new A.Offset(A._lerpDouble(a._dx, b._dx, t), A._lerpDouble(a._dy, b._dy, t));
    },
    Size_lerp(a, b, t) {
      if (b == null)
        if (a == null)
          return null;
        else
          return a.$mul(0, 1 - t);
      else if (a == null)
        return b.$mul(0, t);
      else
        return new A.Size(A._lerpDouble(a._dx, b._dx, t), A._lerpDouble(a._dy, b._dy, t));
    },
    Rect$fromLTWH(left, $top, width, height) {
      return new A.Rect(left, $top, left + width, $top + height);
    },
    Rect$fromCircle(center, radius) {
      var t1 = center._dx,
        t2 = radius * 2 / 2,
        t3 = center._dy;
      return new A.Rect(t1 - t2, t3 - t2, t1 + t2, t3 + t2);
    },
    Rect$fromCenter(center, height, width) {
      var t1 = center._dx,
        t2 = width / 2,
        t3 = center._dy,
        t4 = height / 2;
      return new A.Rect(t1 - t2, t3 - t4, t1 + t2, t3 + t4);
    },
    Rect$fromPoints(a, b) {
      var t1 = a._dx,
        t2 = b._dx,
        t3 = a._dy,
        t4 = b._dy;
      return new A.Rect(Math.min(t1, t2), Math.min(t3, t4), Math.max(t1, t2), Math.max(t3, t4));
    },
    Rect_lerp(a, b, t) {
      var k, t1, t2, t3, t4;
      if (b == null)
        if (a == null)
          return null;
        else {
          k = 1 - t;
          return new A.Rect(a.left * k, a.top * k, a.right * k, a.bottom * k);
        }
      else {
        t1 = b.left;
        t2 = b.top;
        t3 = b.right;
        t4 = b.bottom;
        if (a == null)
          return new A.Rect(t1 * t, t2 * t, t3 * t, t4 * t);
        else
          return new A.Rect(A._lerpDouble(a.left, t1, t), A._lerpDouble(a.top, t2, t), A._lerpDouble(a.right, t3, t), A._lerpDouble(a.bottom, t4, t));
      }
    },
    Radius_lerp(a, b, t) {
      var k, t1, t2;
      if (b == null)
        if (a == null)
          return null;
        else {
          k = 1 - t;
          return new A.Radius(a.x * k, a.y * k);
        }
      else {
        t1 = b.x;
        t2 = b.y;
        if (a == null)
          return new A.Radius(t1 * t, t2 * t);
        else
          return new A.Radius(A._lerpDouble(a.x, t1, t), A._lerpDouble(a.y, t2, t));
      }
    },
    RRect$fromRectAndRadius(rect, radius) {
      var t1 = radius.x,
        t2 = radius.y;
      return new A.RRect(rect.left, rect.top, rect.right, rect.bottom, t1, t2, t1, t2, t1, t2, t1, t2);
    },
    RRect$fromLTRBAndCorners(left, $top, right, bottom, bottomLeft, bottomRight, topLeft, topRight) {
      return new A.RRect(left, $top, right, bottom, topLeft.x, topLeft.y, topRight.x, topRight.y, bottomRight.x, bottomRight.y, bottomLeft.x, bottomLeft.y);
    },
    RRect$fromRectAndCorners(rect, bottomLeft, bottomRight, topLeft, topRight) {
      return new A.RRect(rect.left, rect.top, rect.right, rect.bottom, topLeft.x, topLeft.y, topRight.x, topRight.y, bottomRight.x, bottomRight.y, bottomLeft.x, bottomLeft.y);
    },
    _Jenkins_combine(hash, o) {
      hash = hash + J.get$hashCode$(o) & 536870911;
      hash = hash + ((hash & 524287) << 10) & 536870911;
      return hash ^ hash >>> 6;
    },
    _Jenkins_finish(hash) {
      hash = hash + ((hash & 67108863) << 3) & 536870911;
      hash ^= hash >>> 11;
      return hash + ((hash & 16383) << 15) & 536870911;
    },
    hashValues(arg01, arg02, arg03, arg04, arg05, arg06, arg07, arg08, arg09, arg10, arg11, arg12) {
      var result = A._Jenkins_combine(A._Jenkins_combine(0, arg01), arg02);
      if (arg03 !== B.C__HashEnd) {
        result = A._Jenkins_combine(result, arg03);
        if (arg04 !== B.C__HashEnd) {
          result = A._Jenkins_combine(result, arg04);
          if (arg05 !== B.C__HashEnd) {
            result = A._Jenkins_combine(result, arg05);
            if (arg06 !== B.C__HashEnd) {
              result = A._Jenkins_combine(result, arg06);
              if (arg07 !== B.C__HashEnd) {
                result = A._Jenkins_combine(result, arg07);
                if (arg08 !== B.C__HashEnd) {
                  result = A._Jenkins_combine(result, arg08);
                  if (arg09 !== B.C__HashEnd) {
                    result = A._Jenkins_combine(result, arg09);
                    if (arg10 !== B.C__HashEnd) {
                      result = A._Jenkins_combine(result, arg10);
                      if (arg11 !== B.C__HashEnd) {
                        result = A._Jenkins_combine(result, arg11);
                        if (arg12 !== B.C__HashEnd)
                          result = A._Jenkins_combine(result, arg12);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      return A._Jenkins_finish(result);
    },
    hashList($arguments) {
      var t1, _i, result = 0;
      for (t1 = $arguments.length, _i = 0; _i < t1; ++_i)
        result = A._Jenkins_combine(result, $arguments[_i]);
      return A._Jenkins_finish(result);
    },
    _invoke(callback, zone) {
      if (callback == null)
        return;
      if (zone === $.Zone__current)
        callback.call$0();
      else
        zone.runGuarded$1(callback);
    },
    _invoke1(callback, zone, arg) {
      if (callback == null)
        return;
      if (zone === $.Zone__current)
        callback.call$1(arg);
      else
        zone.runUnaryGuarded$2(callback, arg);
    },
    lerpDouble(a, b, t) {
      var t1;
      if (a != b)
        if ((a == null ? null : isNaN(a)) === true)
          t1 = (b == null ? null : isNaN(b)) === true;
        else
          t1 = false;
      else
        t1 = true;
      if (t1)
        return a == null ? null : a;
      if (a == null)
        a = 0;
      if (b == null)
        b = 0;
      return a * (1 - t) + b * t;
    },
    _lerpDouble(a, b, t) {
      return a * (1 - t) + b * t;
    },
    _clampInt(value, min, max) {
      if (value < min)
        return min;
      else if (value > max)
        return max;
      else
        return value;
    },
    _clampDouble(x, min, max) {
      if (x < min)
        return min;
      if (x > max)
        return max;
      if (isNaN(x))
        return max;
      return x;
    },
    clampDouble(x, min, max) {
      if (x < min)
        return min;
      if (x > max)
        return max;
      if (isNaN(x))
        return max;
      return x;
    },
    _getCallbackHandle(closure) {
      throw A.wrapException(A.UnimplementedError$(null));
    },
    _getCallbackFromHandle(handle) {
      throw A.wrapException(A.UnimplementedError$(null));
    },
    _scaleAlpha(a, factor) {
      return A.Color$fromARGB(B.JSInt_methods.clamp$2(B.JSNumber_methods.round$0((a.get$value() >>> 24 & 255) * factor), 0, 255), a.get$value() >>> 16 & 255, a.get$value() >>> 8 & 255, a.get$value() & 255);
    },
    Color$fromARGB(a, r, g, b) {
      return new A.Color(((a & 255) << 24 | (r & 255) << 16 | (g & 255) << 8 | b & 255) >>> 0);
    },
    Color__linearizeColorComponent(component) {
      if (component <= 0.03928)
        return component / 12.92;
      return Math.pow((component + 0.055) / 1.055, 2.4);
    },
    Color_lerp(a, b, t) {
      var t1, t2, t3, t4;
      if (b == null)
        if (a == null)
          return null;
        else
          return A._scaleAlpha(a, 1 - t);
      else if (a == null)
        return A._scaleAlpha(b, t);
      else {
        t1 = a.get$value() >>> 24 & 255;
        t1 = A._clampInt(B.JSNumber_methods.toInt$0(t1 + ((b.get$value() >>> 24 & 255) - t1) * t), 0, 255);
        t2 = a.get$value() >>> 16 & 255;
        t2 = A._clampInt(B.JSNumber_methods.toInt$0(t2 + ((b.get$value() >>> 16 & 255) - t2) * t), 0, 255);
        t3 = a.get$value() >>> 8 & 255;
        t3 = A._clampInt(B.JSNumber_methods.toInt$0(t3 + ((b.get$value() >>> 8 & 255) - t3) * t), 0, 255);
        t4 = a.get$value() & 255;
        return A.Color$fromARGB(t1, t2, t3, A._clampInt(B.JSNumber_methods.toInt$0(t4 + ((b.get$value() & 255) - t4) * t), 0, 255));
      }
    },
    Color_alphaBlend(foreground, background) {
      var invAlpha, backAlpha, t2, t3, outAlpha,
        t1 = foreground.value,
        alpha = t1 >>> 24 & 255;
      if (alpha === 0)
        return background;
      invAlpha = 255 - alpha;
      backAlpha = background.get$value() >>> 24 & 255;
      t2 = t1 & 255;
      t3 = t1 >>> 16 & 255;
      t1 = t1 >>> 8 & 255;
      if (backAlpha === 255)
        return A.Color$fromARGB(255, B.JSInt_methods._tdivFast$1(alpha * t3 + invAlpha * (background.get$value() >>> 16 & 255), 255), B.JSInt_methods._tdivFast$1(alpha * t1 + invAlpha * (background.get$value() >>> 8 & 255), 255), B.JSInt_methods._tdivFast$1(alpha * t2 + invAlpha * (background.get$value() & 255), 255));
      else {
        backAlpha = B.JSInt_methods._tdivFast$1(backAlpha * invAlpha, 255);
        outAlpha = alpha + backAlpha;
        return A.Color$fromARGB(outAlpha, B.JSInt_methods.$tdiv(t3 * alpha + (background.get$value() >>> 16 & 255) * backAlpha, outAlpha), B.JSInt_methods.$tdiv(t1 * alpha + (background.get$value() >>> 8 & 255) * backAlpha, outAlpha), B.JSInt_methods.$tdiv(t2 * alpha + (background.get$value() & 255) * backAlpha, outAlpha));
      }
    },
    Paint$() {
      var t1 = new DataView(new ArrayBuffer(56));
      return new A.Paint(t1);
    },
    _encodeColorList(colors) {
      var i,
        result = new Int32Array(2);
      for (i = 0; i < 2; ++i)
        result[i] = colors[i].value;
      return result;
    },
    Gradient$linear(from, to, colors) {
      var result = new Float32Array(4);
      result[0] = from._dx;
      result[1] = from._dy;
      result[2] = to._dx;
      result[3] = to._dy;
      A._encodeColorList(colors);
      return new A.Gradient();
    },
    Shadow_lerp(a, b, t) {
      var t2, t3,
        t1 = A.Color_lerp(a.color, b.color, t);
      t1.toString;
      t2 = A.Offset_lerp(a.offset, b.offset, t);
      t2.toString;
      t3 = A._lerpDouble(a.blurRadius, b.blurRadius, t);
      return new A.Shadow(t1, t2, t3);
    },
    Shadow_lerpList(a, b, t) {
      var result, commonLength, i,
        t1 = a == null;
      if (t1 && b == null)
        return null;
      if (t1)
        a = A._setArrayType([], type$.JSArray_Shadow);
      if (b == null)
        b = A._setArrayType([], type$.JSArray_Shadow);
      result = A._setArrayType([], type$.JSArray_Shadow);
      commonLength = Math.min(a.length, b.length);
      for (i = 0; i < commonLength; ++i) {
        t1 = A.Shadow_lerp(a[i], b[i], t);
        t1.toString;
        result.push(t1);
      }
      for (t1 = 1 - t, i = commonLength; i < a.length; ++i)
        result.push(a[i].scale$1(t1));
      for (i = commonLength; i < b.length; ++i)
        result.push(b[i].scale$1(t));
      return result;
    },
    Conic_evalNumerator(p0, p1, p2, w, t) {
      var src2w = p1 * w;
      return ((p2 - 2 * src2w + p0) * t + 2 * (src2w - p0)) * t + p0;
    },
    Conic_evalDenominator(w, t) {
      var $B = 2 * (w - 1);
      return (-$B * t + $B) * t + 1;
    },
    chopCubicAtYExtrema(points, dest) {
      var t1, roots, t2, t3, rootCount,
        y0 = points[1],
        y1 = points[3],
        y2 = points[5],
        quadRoots = new A.QuadRoots();
      quadRoots.findRoots$3(points[7] - y0 + 3 * (y1 - y2), 2 * (y0 - y1 - y1 + y2), y1 - y0);
      t1 = quadRoots.root0;
      if (t1 == null)
        roots = A._setArrayType([], type$.JSArray_double);
      else {
        t2 = quadRoots.root1;
        t3 = type$.JSArray_double;
        roots = t2 == null ? A._setArrayType([t1], t3) : A._setArrayType([t1, t2], t3);
      }
      if (roots.length === 0)
        return 0;
      A._chopCubicAt(roots, points, dest);
      rootCount = roots.length;
      if (rootCount > 0) {
        t1 = dest[7];
        dest.$flags & 2 && A.throwUnsupportedOperation(dest);
        dest[9] = t1;
        dest[5] = t1;
        if (rootCount === 2) {
          t1 = dest[13];
          dest[15] = t1;
          dest[11] = t1;
        }
      }
      return rootCount;
    },
    _chopCubicAt(tValues, points, outPts) {
      var t1, i, t2, t, bufferPos, p3y, p0x, t3, p0y, p1x, p1y, p2x, p2y, bufferPos0, p3x, t4, ab1x, ab1y, bc1x, bc1y, cd1x, cd1y, abc1x, abc1y, bcd1x, bcd1y, outIndex, outIndex0, i0,
        rootCount = tValues.length;
      if (0 === rootCount)
        for (t1 = outPts.$flags | 0, i = 0; i < 8; ++i) {
          t2 = points[i];
          t1 & 2 && A.throwUnsupportedOperation(outPts);
          outPts[i] = t2;
        }
      else {
        t = tValues[0];
        for (t1 = rootCount - 1, t2 = outPts.$flags | 0, bufferPos = 0, i = 0; i < rootCount; i = i0, bufferPos = bufferPos0) {
          p3y = points[bufferPos + 7];
          p0x = points[bufferPos];
          t3 = bufferPos + 1;
          p0y = points[t3];
          p1x = points[bufferPos + 2];
          p1y = points[bufferPos + 3];
          p2x = points[bufferPos + 4];
          p2y = points[bufferPos + 5];
          bufferPos0 = bufferPos + 6;
          p3x = points[bufferPos0];
          t4 = 1 - t;
          ab1x = p0x * t4 + p1x * t;
          ab1y = p0y * t4 + p1y * t;
          bc1x = p1x * t4 + p2x * t;
          bc1y = p1y * t4 + p2y * t;
          cd1x = p2x * t4 + p3x * t;
          cd1y = p2y * t4 + p3y * t;
          abc1x = ab1x * t4 + bc1x * t;
          abc1y = ab1y * t4 + bc1y * t;
          bcd1x = bc1x * t4 + cd1x * t;
          bcd1y = bc1y * t4 + cd1y * t;
          t2 & 2 && A.throwUnsupportedOperation(outPts);
          outPts[bufferPos] = p0x;
          outIndex = t3 + 1;
          outPts[t3] = p0y;
          outIndex0 = outIndex + 1;
          outPts[outIndex] = ab1x;
          outIndex = outIndex0 + 1;
          outPts[outIndex0] = ab1y;
          outIndex0 = outIndex + 1;
          outPts[outIndex] = abc1x;
          outIndex = outIndex0 + 1;
          outPts[outIndex0] = abc1y;
          outIndex0 = outIndex + 1;
          outPts[outIndex] = abc1x * t4 + bcd1x * t;
          outIndex = outIndex0 + 1;
          outPts[outIndex0] = abc1y * t4 + bcd1y * t;
          outIndex0 = outIndex + 1;
          outPts[outIndex] = bcd1x;
          outIndex = outIndex0 + 1;
          outPts[outIndex0] = bcd1y;
          outIndex0 = outIndex + 1;
          outPts[outIndex] = cd1x;
          outIndex = outIndex0 + 1;
          outPts[outIndex0] = cd1y;
          outPts[outIndex] = p3x;
          outPts[outIndex + 1] = p3y;
          if (i === t1)
            break;
          i0 = i + 1;
          t3 = tValues[i0];
          t4 = tValues[i];
          t = A.validUnitDivide(t3 - t4, 1 - t4);
          if (t == null) {
            t1 = points[bufferPos0 + 3];
            outPts[bufferPos0 + 6] = t1;
            outPts[bufferPos0 + 5] = t1;
            outPts[bufferPos0 + 4] = t1;
            break;
          }
        }
      }
    },
    chopMonoAtY(buffer, bufferStartPos, y) {
      var tNeg, tPos, t1, t2, t3, tMid, y01, y12, y012, y0123,
        ycrv0 = buffer[1 + bufferStartPos] - y,
        ycrv1 = buffer[3 + bufferStartPos] - y,
        ycrv2 = buffer[5 + bufferStartPos] - y,
        ycrv3 = buffer[7 + bufferStartPos] - y;
      if (ycrv0 < 0) {
        if (ycrv3 < 0)
          return null;
        tNeg = 0;
        tPos = 1;
      } else {
        if (!(ycrv0 > 0))
          return 0;
        tNeg = 1;
        tPos = 0;
      }
      t1 = ycrv1 - ycrv0;
      t2 = ycrv2 - ycrv1;
      t3 = ycrv3 - ycrv2;
      do {
        tMid = (tPos + tNeg) / 2;
        y01 = ycrv0 + t1 * tMid;
        y12 = ycrv1 + t2 * tMid;
        y012 = y01 + (y12 - y01) * tMid;
        y0123 = y012 + (y12 + (ycrv2 + t3 * tMid - y12) * tMid - y012) * tMid;
        if (y0123 === 0)
          return tMid;
        if (y0123 < 0)
          tNeg = tMid;
        else
          tPos = tMid;
      } while (Math.abs(tPos - tNeg) > 0.0000152587890625);
      return (tNeg + tPos) / 2;
    },
    evalCubicPts(c0, c1, c2, c3, t) {
      return (((c3 + 3 * (c1 - c2) - c0) * t + 3 * (c2 - c1 - c1 + c0)) * t + 3 * (c1 - c0)) * t + c0;
    },
    SurfacePath$() {
      var t1 = new A.SurfacePath(A.PathRef$(), B.PathFillType_0);
      t1._resetFields$0();
      return t1;
    },
    SurfacePath$shiftedFrom(source, offsetX, offsetY) {
      var t4,
        t1 = source.pathRef,
        t2 = A.PathRef__fPointsFromSource(t1, offsetX, offsetY),
        t3 = t1._fVerbsCapacity,
        verbs = new Uint8Array(t3);
      B.NativeUint8List_methods.setAll$2(verbs, 0, t1._fVerbs);
      t2 = new A.PathRef(t2, verbs);
      t3 = t1._conicWeightsCapacity;
      t2._conicWeightsCapacity = t3;
      t2._conicWeightsLength = t1._conicWeightsLength;
      t4 = t1._conicWeights;
      if (t4 != null) {
        t3 = new Float32Array(t3);
        t2._conicWeights = t3;
        B.NativeFloat32List_methods.setAll$2(t3, 0, t4);
      }
      t2._fVerbsCapacity = t1._fVerbsCapacity;
      t2._fVerbsLength = t1._fVerbsLength;
      t2._fPointsCapacity = t1._fPointsCapacity;
      t2._fPointsLength = t1._fPointsLength;
      t3 = t1.fBoundsIsDirty;
      t2.fBoundsIsDirty = t3;
      if (!t3) {
        t2.fBounds = t1.fBounds.translate$2(offsetX, offsetY);
        t3 = t1.cachedBounds;
        t2.cachedBounds = t3 == null ? null : t3.translate$2(offsetX, offsetY);
        t2.fIsFinite = t1.fIsFinite;
      }
      t2.fSegmentMask = t1.fSegmentMask;
      t2.fIsOval = t1.fIsOval;
      t2.fIsRRect = t1.fIsRRect;
      t2.fIsRect = t1.fIsRect;
      t2.fRRectOrOvalIsCCW = t1.fRRectOrOvalIsCCW;
      t2.fRRectOrOvalStartIdx = t1.fRRectOrOvalStartIdx;
      t1 = new A.SurfacePath(t2, B.PathFillType_0);
      t1._fillType = source._fillType;
      t1.fLastMoveToIndex = source.fLastMoveToIndex;
      t1._convexityType = source._convexityType;
      t1._firstDirection = source._firstDirection;
      return t1;
    },
    _arcIsLonePoint(oval, startAngle, sweepAngle) {
      var t1;
      if (0 === sweepAngle)
        t1 = 0 === startAngle || 360 === startAngle;
      else
        t1 = false;
      if (t1)
        return new A.Offset(oval.right, oval.get$center()._dy);
      return null;
    },
    _computeMinScale(radius1, radius2, limit, scale) {
      var totalRadius = radius1 + radius2;
      if (totalRadius <= limit)
        return scale;
      return Math.min(limit / totalRadius, scale);
    },
    PathIterator$(pathRef, forceClose) {
      var t1 = new A.PathIterator(pathRef, true, pathRef._fVerbsLength);
      if (pathRef.fBoundsIsDirty)
        pathRef._computeBounds$0();
      if (!pathRef.fIsFinite)
        t1._verbIndex = pathRef._fVerbsLength;
      return t1;
    },
    PathRef$() {
      var t1 = new Float32Array(16);
      t1 = new A.PathRef(t1, new Uint8Array(8));
      t1._fVerbsCapacity = t1._fPointsCapacity = 8;
      t1.fRRectOrOvalStartIdx = 172;
      return t1;
    },
    PathRef__fPointsFromSource(source, offsetX, offsetY) {
      var i, t1,
        sourceLength = source._fPointsLength,
        sourceCapacity = source._fPointsCapacity,
        dest = new Float32Array(sourceCapacity * 2),
        sourcePoints = source.fPoints,
        len = sourceLength * 2;
      for (i = 0; i < len; i += 2) {
        dest[i] = sourcePoints[i] + offsetX;
        t1 = i + 1;
        dest[t1] = sourcePoints[t1] + offsetY;
      }
      return dest;
    },
    SPath_between(a, b, c) {
      return (a - b) * (c - b) <= 0;
    },
    SPath_scalarSignedAsInt(x) {
      var t1;
      if (x < 0)
        t1 = -1;
      else
        t1 = x > 0 ? 1 : 0;
      return t1;
    },
    validUnitDivide(numer, denom) {
      var r;
      if (numer < 0) {
        numer = -numer;
        denom = -denom;
      }
      if (denom === 0 || numer === 0 || numer >= denom)
        return null;
      r = numer / denom;
      if (isNaN(r))
        return null;
      if (r === 0)
        return null;
      return r;
    },
    isRRectOval(rrect) {
      var t3, t4,
        t1 = rrect.tlRadiusX,
        t2 = rrect.trRadiusX;
      if (t1 + t2 !== rrect.right - rrect.left)
        return false;
      t3 = rrect.tlRadiusY;
      t4 = rrect.trRadiusY;
      if (t3 + t4 !== rrect.bottom - rrect.top)
        return false;
      if (t1 !== rrect.blRadiusX || t2 !== rrect.brRadiusX || t3 !== rrect.blRadiusY || t4 !== rrect.brRadiusY)
        return false;
      return true;
    },
    SkQuadCoefficients$(x0, y0, x1, y1, x2, y2) {
      return new A.SkQuadCoefficients(x2 - 2 * x1 + x0, y2 - 2 * y1 + y0, 2 * (x1 - x0), 2 * (y1 - y0), x0, y0);
    },
    PathWinding__checkOnCurve(x, y, startX, startY, endX, endY) {
      if (startY === endY)
        return A.SPath_between(startX, x, endX) && x !== endX;
      else
        return x === startX && y === startY;
    },
    PathWinding__chopQuadAtExtrema(buffer) {
      var p01x, p01y, p12x, p12y,
        x0 = buffer[0],
        y0 = buffer[1],
        x1 = buffer[2],
        y1 = buffer[3],
        x2 = buffer[4],
        y2 = buffer[5],
        t1 = y0 - y1,
        tValueAtExtrema = A.validUnitDivide(t1, t1 - y1 + y2);
      if (tValueAtExtrema != null) {
        p01x = x0 + tValueAtExtrema * (x1 - x0);
        p01y = y0 + tValueAtExtrema * (y1 - y0);
        p12x = x1 + tValueAtExtrema * (x2 - x1);
        p12y = y1 + tValueAtExtrema * (y2 - y1);
        buffer.$flags & 2 && A.throwUnsupportedOperation(buffer);
        buffer[2] = p01x;
        buffer[3] = p01y;
        buffer[4] = p01x + tValueAtExtrema * (p12x - p01x);
        buffer[5] = p01y + tValueAtExtrema * (p12y - p01y);
        buffer[6] = p12x;
        buffer[7] = p12y;
        buffer[8] = x2;
        buffer[9] = y2;
        return 1;
      }
      t1 = Math.abs(t1) < Math.abs(y1 - y2) ? y0 : y2;
      buffer.$flags & 2 && A.throwUnsupportedOperation(buffer);
      buffer[3] = t1;
      return 0;
    },
    PathWinding__isQuadMonotonic(quad) {
      var y0 = quad[1],
        y1 = quad[3],
        y2 = quad[5];
      if (y0 === y1)
        return true;
      if (y0 < y1)
        return y1 <= y2;
      else
        return y1 >= y2;
    },
    tangentLine(pts, x, y, tangents) {
      var x0, x1, dx, dy,
        y0 = pts[1],
        y1 = pts[3];
      if (!A.SPath_between(y0, y, y1))
        return;
      x0 = pts[0];
      x1 = pts[2];
      if (!A.SPath_between(x0, x, x1))
        return;
      dx = x1 - x0;
      dy = y1 - y0;
      if (!(Math.abs((x - x0) * dy - dx * (y - y0)) < 0.000244140625))
        return;
      tangents.push(new A.Offset(dx, dy));
    },
    tangentQuad(pts, x, y, tangents) {
      var x0, x1, x2, roots, n, $A, $B, index, t1, t,
        y0 = pts[1],
        y1 = pts[3],
        y2 = pts[5];
      if (!A.SPath_between(y0, y, y1) && !A.SPath_between(y1, y, y2))
        return;
      x0 = pts[0];
      x1 = pts[2];
      x2 = pts[4];
      if (!A.SPath_between(x0, x, x1) && !A.SPath_between(x1, x, x2))
        return;
      roots = new A.QuadRoots();
      n = roots.findRoots$3(y0 - 2 * y1 + y2, 2 * (y1 - y0), y0 - y);
      for ($A = x2 - 2 * x1 + x0, $B = 2 * (x1 - x0), index = 0; index < n; ++index) {
        if (index === 0) {
          t1 = roots.root0;
          t1.toString;
          t = t1;
        } else {
          t1 = roots.root1;
          t1.toString;
          t = t1;
        }
        if (!(Math.abs(x - (($A * t + $B) * t + x0)) < 0.000244140625))
          continue;
        tangents.push(A._evalQuadTangentAt(x0, y0, x1, y1, x2, y2, t));
      }
    },
    _evalQuadTangentAt(x0, y0, x1, y1, x2, y2, t) {
      var t1, bx, by;
      if (!(t === 0 && x0 === x1 && y0 === y1))
        t1 = t === 1 && x1 === x2 && y1 === y2;
      else
        t1 = true;
      if (t1)
        return new A.Offset(x2 - x0, y2 - y0);
      bx = x1 - x0;
      by = y1 - y0;
      return new A.Offset(((x2 - x1 - bx) * t + bx) * 2, ((y2 - y1 - by) * t + by) * 2);
    },
    tangentConic(pts, x, y, weight, tangents) {
      var x0, x1, x2, $B, quadRoots, n, src2w, $A, $B0, $A0, index, t1, t,
        y0 = pts[1],
        y1 = pts[3],
        y2 = pts[5];
      if (!A.SPath_between(y0, y, y1) && !A.SPath_between(y1, y, y2))
        return;
      x0 = pts[0];
      x1 = pts[2];
      x2 = pts[4];
      if (!A.SPath_between(x0, x, x1) && !A.SPath_between(x1, x, x2))
        return;
      $B = y1 * weight - y * weight + y;
      quadRoots = new A.QuadRoots();
      n = quadRoots.findRoots$3(y2 + (y0 - 2 * $B), 2 * ($B - y0), y0 - y);
      for (src2w = x1 * weight, $A = x2 - 2 * src2w + x0, $B = 2 * (src2w - x0), $B0 = 2 * (weight - 1), $A0 = -$B0, index = 0; index < n; ++index) {
        if (index === 0) {
          t1 = quadRoots.root0;
          t1.toString;
          t = t1;
        } else {
          t1 = quadRoots.root1;
          t1.toString;
          t = t1;
        }
        if (!(Math.abs(x - (($A * t + $B) * t + x0) / (($A0 * t + $B0) * t + 1)) < 0.000244140625))
          continue;
        tangents.push(new A.Conic(x0, y0, x1, y1, x2, y2, weight).evalTangentAt$1(t));
      }
    },
    tangentCubic(pts, x, y, tangents) {
      var x0, x1, x2, x3, dst, n, i, bufferPos, t,
        y3 = pts[7],
        y0 = pts[1],
        y1 = pts[3],
        y2 = pts[5];
      if (!A.SPath_between(y0, y, y1) && !A.SPath_between(y1, y, y2) && !A.SPath_between(y2, y, y3))
        return;
      x0 = pts[0];
      x1 = pts[2];
      x2 = pts[4];
      x3 = pts[6];
      if (!A.SPath_between(x0, x, x1) && !A.SPath_between(x1, x, x2) && !A.SPath_between(x2, x, x3))
        return;
      dst = new Float32Array(20);
      n = A.chopCubicAtYExtrema(pts, dst);
      for (i = 0; i <= n; ++i) {
        bufferPos = i * 6;
        t = A.chopMonoAtY(dst, bufferPos, y);
        if (t == null)
          continue;
        if (!(Math.abs(x - A.evalCubicPts(dst[bufferPos], dst[bufferPos + 2], dst[bufferPos + 4], dst[bufferPos + 6], t)) < 0.000244140625))
          continue;
        tangents.push(A._evalCubicTangentAt(dst, bufferPos, t));
      }
    },
    _evalCubicTangentAt(points, bufferPos, t) {
      var t2, dx, dy, coeff,
        y3 = points[7 + bufferPos],
        y0 = points[1 + bufferPos],
        y1 = points[3 + bufferPos],
        y2 = points[5 + bufferPos],
        x0 = points[bufferPos],
        x1 = points[2 + bufferPos],
        x2 = points[4 + bufferPos],
        x3 = points[6 + bufferPos],
        t1 = t === 0;
      if (!(t1 && x0 === x1 && y0 === y1))
        t2 = t === 1 && x2 === x3 && y2 === y3;
      else
        t2 = true;
      if (t2) {
        if (t1) {
          dx = x2 - x0;
          dy = y2 - y0;
        } else {
          dx = x3 - x1;
          dy = y3 - y1;
        }
        if (dx === 0 && dy === 0) {
          dx = x3 - x0;
          dy = y3 - y0;
        }
        return new A.Offset(dx, dy);
      } else {
        coeff = A.SkQuadCoefficients$(x3 + 3 * (x1 - x2) - x0, y3 + 3 * (y1 - y2) - y0, 2 * (x2 - 2 * x1 + x0), 2 * (y2 - 2 * y1 + y0), x1 - x0, y1 - y0);
        return new A.Offset(coeff.evalX$1(t), coeff.evalY$1(t));
      }
    },
    PlatformDispatcher__zonedPlatformMessageResponseCallback(callback) {
      return new A.PlatformDispatcher__zonedPlatformMessageResponseCallback_closure($.Zone__current, callback);
    },
    ViewPadding$_(bottom, left, right, $top) {
      return new A.ViewPadding(left, $top, right, bottom);
    },
    PluginUtilities_getCallbackHandle(callback) {
      return $.PluginUtilities__forwardCache.putIfAbsent$2(callback, new A.PluginUtilities_getCallbackHandle_closure(callback));
    },
    PluginUtilities_getCallbackFromHandle(handle) {
      return $.PluginUtilities__backwardCache.putIfAbsent$2(handle, new A.PluginUtilities_getCallbackFromHandle_closure(handle));
    },
    FontWeight_lerp(a, b, t) {
      var t2,
        t1 = a == null;
      if (t1 && b == null)
        return null;
      t2 = (t1 ? B.FontWeight_3 : a).index;
      return B.List_gVO[B.JSInt_methods.clamp$2(B.JSNumber_methods.round$0(t2 + ((b == null ? B.FontWeight_3 : b).index - t2) * t), 0, 8)];
    },
    _listEquals(a, b) {
      var index;
      if (a == null)
        return b == null;
      if (b == null || a.length !== b.length)
        return false;
      for (index = 0; index < a.length; ++index)
        if (!J.$eq$(a[index], b[index]))
          return false;
      return true;
    },
    TextStyle$(background, color, decoration, decorationColor, decorationStyle, decorationThickness, fontFamily, fontFamilyFallback, fontFeatures, fontSize, fontStyle, fontVariations, fontWeight, foreground, height, leadingDistribution, letterSpacing, locale, shadows, textBaseline, wordSpacing) {
      var t1,
        result = new Int32Array(8);
      if (color != null) {
        result[0] = (result[0] | 2) >>> 0;
        result[1] = color.get$value();
      }
      if (decoration != null) {
        result[0] = (result[0] | 4) >>> 0;
        result[2] = decoration._mask;
      }
      if (decorationColor != null) {
        result[0] = (result[0] | 8) >>> 0;
        result[3] = decorationColor.get$value();
      }
      if (decorationStyle != null) {
        result[0] = (result[0] | 16) >>> 0;
        result[4] = decorationStyle.index;
      }
      if (fontWeight != null) {
        result[0] = (result[0] | 32) >>> 0;
        result[5] = fontWeight.index;
      }
      if (fontStyle != null) {
        result[0] = (result[0] | 64) >>> 0;
        result[6] = fontStyle.index;
      }
      if (textBaseline != null) {
        result[0] = (result[0] | 128) >>> 0;
        result[7] = textBaseline.index;
      }
      if (decorationThickness != null)
        result[0] = (result[0] | 256) >>> 0;
      if (fontFamily == null)
        t1 = fontFamilyFallback != null && fontFamilyFallback.length !== 0;
      else
        t1 = true;
      if (t1)
        result[0] = (result[0] | 512) >>> 0;
      if (fontSize != null)
        result[0] = (result[0] | 1024) >>> 0;
      if (letterSpacing != null)
        result[0] = (result[0] | 2048) >>> 0;
      if (wordSpacing != null)
        result[0] = (result[0] | 4096) >>> 0;
      if (height != null)
        result[0] = (result[0] | 8192) >>> 0;
      if (background != null)
        result[0] = (result[0] | 32768) >>> 0;
      if (foreground != null)
        result[0] = (result[0] | 65536) >>> 0;
      if (shadows != null)
        result[0] = (result[0] | 131072) >>> 0;
      if (fontFeatures != null)
        result[0] = (result[0] | 262144) >>> 0;
      if (fontVariations != null)
        result[0] = (result[0] | 524288) >>> 0;
      return new A.TextStyle(result, fontFamily, fontFamilyFallback, fontSize, letterSpacing, wordSpacing, height, decorationThickness, locale, background, foreground, shadows, fontFeatures, fontVariations, leadingDistribution, color, decoration, decorationColor, decorationStyle, fontWeight, fontStyle, textBaseline);
    },
    ParagraphStyle$(ellipsis, fontFamily, fontSize, fontStyle, fontWeight, height, locale, maxLines, strutStyle, textAlign, textDirection, textHeightBehavior) {
      var t1, t2, t3, t4,
        result = new Int32Array(7);
      result[0] = (result[0] | 2) >>> 0;
      result[1] = textAlign.index;
      t1 = textDirection == null;
      if (!t1) {
        result[0] = (result[0] | 4) >>> 0;
        result[2] = textDirection.index;
      }
      t2 = fontWeight == null;
      if (!t2) {
        result[0] = (result[0] | 8) >>> 0;
        result[3] = fontWeight.index;
      }
      if (maxLines != null) {
        result[0] = (result[0] | 32) >>> 0;
        result[5] = maxLines;
      }
      t3 = textHeightBehavior == null;
      if (!t3) {
        result[0] = (result[0] | 64) >>> 0;
        t4 = textHeightBehavior.applyHeightToFirstAscent ? 0 : 1;
        result[6] = t4 | (textHeightBehavior.applyHeightToLastDescent ? 0 : 2);
      }
      if (fontFamily != null)
        result[0] = (result[0] | 128) >>> 0;
      if (fontSize != null)
        result[0] = (result[0] | 256) >>> 0;
      if (height != null)
        result[0] = (result[0] | 512) >>> 0;
      if (strutStyle != null)
        result[0] = (result[0] | 1024) >>> 0;
      if (ellipsis != null)
        result[0] = (result[0] | 2048) >>> 0;
      if (locale != null)
        result[0] = (result[0] | 4096) >>> 0;
      t1 = t1 ? B.TextDirection_1 : textDirection;
      t2 = t2 ? B.FontWeight_3 : fontWeight;
      t3 = t3 ? null : textHeightBehavior.leadingDistribution;
      return new A.ParagraphStyle(result, t1, maxLines, fontFamily, fontSize, height, t2, B.FontStyle_0, strutStyle, ellipsis, locale, t3 == null ? B.TextLeadingDistribution_0 : t3);
    },
    ParagraphBuilder_ParagraphBuilder(style) {
      var strutFontFamilies, t1, t2, t3, t4, _null = null,
        strutStyle = style._strutStyle;
      if (strutStyle != null) {
        strutFontFamilies = A._setArrayType([], type$.JSArray_String);
        strutFontFamilies.push(strutStyle._fontFamily);
        t1 = strutStyle._fontFamilyFallback;
        B.JSArray_methods.addAll$1(strutFontFamilies, t1);
      }
      t1 = A.TextStyle$(_null, _null, _null, _null, _null, _null, style._fontFamily, _null, _null, style._fontSize, style._fontStyle, _null, style._fontWeight, _null, style._height, _null, _null, _null, _null, _null, _null);
      t2 = A._setArrayType([], type$.JSArray_TextStyle);
      t3 = A._setArrayType([], type$.JSArray__Span);
      t4 = A._setArrayType([], type$.JSArray_double);
      t2.push(t1);
      return new A.ParagraphBuilder(style, t2, t1, t3, t4);
    },
    FlutterView$_(viewId, platformDispatcher) {
      return new A.FlutterView(viewId, platformDispatcher);
    },
    initializeEngine(screenSize) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void);
      var $async$initializeEngine = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $._screenWidth = screenSize._dx;
              $._screenHeight = screenSize._dy;
              $async$goto = 2;
              return A._asyncAwait(A.initializeEngine0(), $async$initializeEngine);
            case 2:
              // returning from await.
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$initializeEngine, $async$completer);
    },
    _ChannelCallbackRecord: function _ChannelCallbackRecord(t0, t1) {
      this._callback = t0;
      this._ui$_zone = t1;
    },
    _Channel: function _Channel(t0) {
      this._ui$_queue = t0;
      this._draining = false;
      this._channelCallbackRecord = null;
    },
    ChannelBuffers: function ChannelBuffers(t0) {
      this._channels = t0;
    },
    ChannelBuffers_setListener_closure: function ChannelBuffers_setListener_closure() {
    },
    Scene: function Scene() {
    },
    _EngineLayerWrapper: function _EngineLayerWrapper() {
    },
    _PictureLayer: function _PictureLayer() {
      this._ui$_children = null;
    },
    TransformEngineLayer: function TransformEngineLayer() {
      this._ui$_children = null;
    },
    OffsetEngineLayer: function OffsetEngineLayer() {
      this._ui$_children = null;
    },
    ClipRectEngineLayer: function ClipRectEngineLayer() {
      this._ui$_children = null;
    },
    ClipRRectEngineLayer: function ClipRRectEngineLayer() {
      this._ui$_children = null;
    },
    ClipPathEngineLayer: function ClipPathEngineLayer() {
      this._ui$_children = null;
    },
    OpacityEngineLayer: function OpacityEngineLayer() {
      this._ui$_children = null;
    },
    SceneBuilder: function SceneBuilder(t0, t1) {
      this._usedLayers = t0;
      this._rootLayer = null;
      this._layerStack = t1;
    },
    OffsetBase: function OffsetBase() {
    },
    Offset: function Offset(t0, t1) {
      this._dx = t0;
      this._dy = t1;
    },
    Size: function Size(t0, t1) {
      this._dx = t0;
      this._dy = t1;
    },
    Rect: function Rect(t0, t1, t2, t3) {
      var _ = this;
      _.left = t0;
      _.top = t1;
      _.right = t2;
      _.bottom = t3;
    },
    Radius: function Radius(t0, t1) {
      this.x = t0;
      this.y = t1;
    },
    RRect: function RRect(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11) {
      var _ = this;
      _.left = t0;
      _.top = t1;
      _.right = t2;
      _.bottom = t3;
      _.tlRadiusX = t4;
      _.tlRadiusY = t5;
      _.trRadiusX = t6;
      _.trRadiusY = t7;
      _.brRadiusX = t8;
      _.brRadiusY = t9;
      _.blRadiusX = t10;
      _.blRadiusY = t11;
    },
    _HashEnd: function _HashEnd() {
    },
    Color: function Color(t0) {
      this.value = t0;
    },
    BlendMode: function BlendMode(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    Clip: function Clip(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    Paint: function Paint(t0) {
      this._ui$_data = t0;
      this._objects = null;
    },
    PathFillType: function PathFillType(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    BlurStyle: function BlurStyle(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    MaskFilter: function MaskFilter(t0, t1) {
      this._style = t0;
      this._sigma = t1;
    },
    Shader: function Shader() {
    },
    TileMode: function TileMode(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    Gradient: function Gradient() {
    },
    ClipOp: function ClipOp(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    Canvas: function Canvas(t0, t1, t2, t3) {
      var _ = this;
      _._ui$_recorder = t0;
      _._methods = t1;
      _._methodsLength = 0;
      _._ui$_data = t2;
      _._dataLength = 0;
      _._objects = t3;
      _._saveCount = 0;
    },
    Picture: function Picture() {
    },
    PictureRecorder: function PictureRecorder() {
      this._ui$_canvas = null;
    },
    Shadow: function Shadow(t0, t1, t2) {
      this.color = t0;
      this.offset = t1;
      this.blurRadius = t2;
    },
    Conic: function Conic(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.p0x = t0;
      _.p0y = t1;
      _.p1x = t2;
      _.p1y = t3;
      _.p2x = t4;
      _.p2y = t5;
      _.fW = t6;
    },
    QuadBounds: function QuadBounds() {
      var _ = this;
      _.maxY = _.maxX = _.minY = _.minX = 0;
    },
    ConicBounds: function ConicBounds() {
      var _ = this;
      _.maxY = _.maxX = _.minY = _.minX = 0;
    },
    CubicBounds: function CubicBounds() {
      var _ = this;
      _.maxY = _.minY = _.maxX = _.minX = 0;
    },
    SurfacePath: function SurfacePath(t0, t1) {
      var _ = this;
      _.pathRef = t0;
      _._fillType = t1;
      _.fLastMoveToIndex = 0;
      _._firstDirection = _._convexityType = -1;
    },
    PathIterator: function PathIterator(t0, t1, t2) {
      var _ = this;
      _.pathRef = t0;
      _._forceClose = t1;
      _._verbCount = t2;
      _._needClose = false;
      _._segmentState = 0;
      _._conicWeightIndex = -1;
      _._pointIndex = _._verbIndex = _._moveToY = _._moveToX = _._lastPointY = _._lastPointX = 0;
    },
    PathRef: function PathRef(t0, t1) {
      var _ = this;
      _.cachedBounds = _.fBounds = null;
      _._fVerbsCapacity = _._fPointsLength = _._fPointsCapacity = 0;
      _.fPoints = t0;
      _._fVerbs = t1;
      _._conicWeightsCapacity = _._fVerbsLength = 0;
      _._conicWeights = null;
      _._conicWeightsLength = 0;
      _.fIsFinite = _.fBoundsIsDirty = true;
      _.fRRectOrOvalIsCCW = _.fIsRect = _.fIsRRect = _.fIsOval = false;
      _.fRRectOrOvalStartIdx = -1;
      _.fSegmentMask = 0;
    },
    PathRefIterator: function PathRefIterator(t0) {
      var _ = this;
      _.pathRef = t0;
      _._conicWeightIndex = -1;
      _.iterIndex = _._pointIndex = _._verbIndex = 0;
    },
    QuadRoots: function QuadRoots() {
      this.root1 = this.root0 = null;
    },
    SkQuadCoefficients: function SkQuadCoefficients(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.ax = t0;
      _.ay = t1;
      _.bx = t2;
      _.by = t3;
      _.cx = t4;
      _.cy = t5;
    },
    PathWinding: function PathWinding(t0, t1, t2, t3) {
      var _ = this;
      _.pathRef = t0;
      _.x = t1;
      _.y = t2;
      _._onCurveCount = _._w = 0;
      _._ui$_buffer = t3;
    },
    PlatformDispatcher: function PlatformDispatcher(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.viewData = t0;
      _._windowConfigurations = t1;
      _._onMetricsChanged = null;
      _._onMetricsChangedZone = t2;
      _._onBeginFrame = null;
      _._onBeginFrameZone = t3;
      _._onDrawFrame = null;
      _._onDrawFrameZone = t4;
      _._onReportTimings = null;
      _.__PlatformDispatcher__setNeedsReportTimings_A = $;
      _._frameTimer = null;
      _._ui$_frameTime = t5;
      _._continue = true;
      _.__PlatformDispatcher__initialLifecycleState_AI = $;
      _._initialLifecycleStateAccessed = false;
    },
    PlatformDispatcher__zonedPlatformMessageResponseCallback_closure: function PlatformDispatcher__zonedPlatformMessageResponseCallback_closure(t0, t1) {
      this.registrationZone = t0;
      this.callback = t1;
    },
    PlatformDispatcher_frameCallback_closure: function PlatformDispatcher_frameCallback_closure() {
    },
    PlatformDispatcher_scheduleFrame_closure: function PlatformDispatcher_scheduleFrame_closure(t0) {
      this.$this = t0;
    },
    PlatformDispatcher_scheduleFrame__closure: function PlatformDispatcher_scheduleFrame__closure(t0, t1) {
      this.$this = t0;
      this.microseconds = t1;
    },
    PlatformDispatcher_scheduleFrame___closure: function PlatformDispatcher_scheduleFrame___closure(t0, t1) {
      this.$this = t0;
      this.beginSw = t1;
    },
    PlatformConfiguration: function PlatformConfiguration() {
    },
    ViewConfiguration0: function ViewConfiguration0(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _.window = t0;
      _.devicePixelRatio = t1;
      _.geometry = t2;
      _.visible = t3;
      _.viewInsets = t4;
      _.viewPadding = t5;
      _.systemGestureInsets = t6;
      _.padding = t7;
      _.gestureSettings = t8;
      _.displayFeatures = t9;
    },
    AppLifecycleState: function AppLifecycleState(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    ViewPadding: function ViewPadding(t0, t1, t2, t3) {
      var _ = this;
      _.left = t0;
      _.top = t1;
      _.right = t2;
      _.bottom = t3;
    },
    Locale: function Locale() {
    },
    DartPerformanceMode: function DartPerformanceMode(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    DisplayFeature: function DisplayFeature(t0, t1, t2) {
      this.bounds = t0;
      this.type = t1;
      this.state = t2;
    },
    DisplayFeatureType: function DisplayFeatureType(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    DisplayFeatureState: function DisplayFeatureState(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    CallbackHandle: function CallbackHandle(t0) {
      this._ui$_handle = t0;
    },
    PluginUtilities_getCallbackHandle_closure: function PluginUtilities_getCallbackHandle_closure(t0) {
      this.callback = t0;
    },
    PluginUtilities_getCallbackFromHandle_closure: function PluginUtilities_getCallbackFromHandle_closure(t0) {
      this.handle = t0;
    },
    PointerDeviceKind: function PointerDeviceKind(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    SemanticsAction: function SemanticsAction(t0) {
      this.index = t0;
    },
    SemanticsFlag: function SemanticsFlag(t0) {
      this.index = t0;
    },
    SemanticsUpdateBuilder: function SemanticsUpdateBuilder() {
    },
    FontStyle: function FontStyle(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    FontWeight: function FontWeight(t0) {
      this.index = t0;
    },
    FontVariation: function FontVariation(t0, t1) {
      this.axis = t0;
      this.value = t1;
    },
    TextAlign: function TextAlign(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    TextBaseline: function TextBaseline(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    TextDecoration: function TextDecoration(t0) {
      this._mask = t0;
    },
    TextDecorationStyle: function TextDecorationStyle(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    TextLeadingDistribution: function TextLeadingDistribution(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    TextHeightBehavior: function TextHeightBehavior(t0, t1, t2) {
      this.applyHeightToFirstAscent = t0;
      this.applyHeightToLastDescent = t1;
      this.leadingDistribution = t2;
    },
    TextStyle: function TextStyle(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21) {
      var _ = this;
      _._encoded = t0;
      _._fontFamily = t1;
      _._fontFamilyFallback = t2;
      _._fontSize = t3;
      _._letterSpacing = t4;
      _._wordSpacing = t5;
      _._height = t6;
      _._decorationThickness = t7;
      _._locale = t8;
      _._background = t9;
      _._foreground = t10;
      _._shadows = t11;
      _._fontFeatures = t12;
      _._fontVariations = t13;
      _._leadingDistribution = t14;
      _._color = t15;
      _._decoration = t16;
      _._decorationColor = t17;
      _._decorationStyle = t18;
      _._fontWeight = t19;
      _._fontStyle = t20;
      _._textBaseline = t21;
    },
    ParagraphStyle: function ParagraphStyle(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11) {
      var _ = this;
      _._encoded = t0;
      _._ui$_textDirection = t1;
      _._maxLines = t2;
      _._fontFamily = t3;
      _._fontSize = t4;
      _._height = t5;
      _._fontWeight = t6;
      _._fontStyle = t7;
      _._strutStyle = t8;
      _._ellipsis = t9;
      _._locale = t10;
      _._leadingDistribution = t11;
    },
    TextDirection: function TextDirection(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    TextAffinity: function TextAffinity(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    TextPosition: function TextPosition(t0, t1) {
      this.offset = t0;
      this.affinity = t1;
    },
    TextRange: function TextRange(t0, t1) {
      this.start = t0;
      this.end = t1;
    },
    ParagraphConstraints: function ParagraphConstraints(t0) {
      this.width = t0;
    },
    BoxHeightStyle: function BoxHeightStyle(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    BoxWidthStyle: function BoxWidthStyle(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    PlaceholderAlignment: function PlaceholderAlignment(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    Paragraph: function Paragraph(t0, t1) {
      var _ = this;
      _._paragraphStyle = t0;
      _._spans = t1;
      _.__Paragraph__boxes_A = $;
      _._maxIntrinsicWidth = _._minIntrinsicWidth = _._height = _._width = 0;
      _._didExceedMaxLines = false;
    },
    _Span: function _Span() {
    },
    _SpanBox: function _SpanBox(t0, t1, t2, t3, t4) {
      var _ = this;
      _.left = t0;
      _.top = t1;
      _.right = t2;
      _.bottom = t3;
      _.span = t4;
    },
    _TextSpan: function _TextSpan(t0, t1) {
      this._style = t0;
      this._ui$_text = t1;
    },
    ParagraphBuilder: function ParagraphBuilder(t0, t1, t2, t3, t4) {
      var _ = this;
      _._style = t0;
      _._styleStack = t1;
      _._currentStyle = t2;
      _._spans = t3;
      _._placeholderScales = t4;
    },
    FlutterView: function FlutterView(t0, t1) {
      this.viewId = t0;
      this.platformDispatcher = t1;
    },
    SingletonFlutterWindow: function SingletonFlutterWindow(t0, t1) {
      this.viewId = t0;
      this.platformDispatcher = t1;
    },
    AccessibilityFeatures: function AccessibilityFeatures() {
    },
    Brightness: function Brightness(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    GestureSettings: function GestureSettings(t0) {
      this.physicalTouchSlop = t0;
    },
    AnimationStatus: function AnimationStatus(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    Animation: function Animation() {
    },
    AnimationController$(debugLabel, duration, reverseDuration, value, vsync) {
      var t1 = new A.AnimationController(0, 1, B.AnimationBehavior_0, duration, reverseDuration, B._AnimationDirection_0, B.AnimationStatus_0, new A.ObserverList(A._setArrayType([], type$.JSArray_of_void_Function_AnimationStatus), type$.ObserverList_of_void_Function_AnimationStatus), new A.ObserverList(A._setArrayType([], type$.JSArray_of_void_Function), type$.ObserverList_of_void_Function));
      t1._ticker = vsync.createTicker$1(t1.get$_animation_controller$_tick());
      t1._internalSetValue$1(value == null ? 0 : value);
      return t1;
    },
    AnimationController$unbounded(debugLabel, value, vsync) {
      var t1 = new A.AnimationController(-1 / 0, 1 / 0, B.AnimationBehavior_1, null, null, B._AnimationDirection_0, B.AnimationStatus_0, new A.ObserverList(A._setArrayType([], type$.JSArray_of_void_Function_AnimationStatus), type$.ObserverList_of_void_Function_AnimationStatus), new A.ObserverList(A._setArrayType([], type$.JSArray_of_void_Function), type$.ObserverList_of_void_Function));
      t1._ticker = vsync.createTicker$1(t1.get$_animation_controller$_tick());
      t1._internalSetValue$1(value);
      return t1;
    },
    _AnimationDirection: function _AnimationDirection(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    AnimationBehavior: function AnimationBehavior(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    AnimationController: function AnimationController(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.lowerBound = t0;
      _.upperBound = t1;
      _.animationBehavior = t2;
      _.duration = t3;
      _.reverseDuration = t4;
      _._simulation = _._ticker = null;
      _.__AnimationController__value_A = $;
      _._lastElapsedDuration = null;
      _._direction = t5;
      _.__AnimationController__status_A = $;
      _._lastReportedStatus = t6;
      _.AnimationLocalStatusListenersMixin__statusListeners = t7;
      _.AnimationLocalListenersMixin__listeners = t8;
    },
    _InterpolationSimulation: function _InterpolationSimulation(t0, t1, t2, t3, t4) {
      var _ = this;
      _._durationInSeconds = t0;
      _._begin = t1;
      _._animation_controller$_end = t2;
      _._curve = t3;
      _.tolerance = t4;
    },
    _RepeatingSimulation: function _RepeatingSimulation(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.min = t0;
      _.max = t1;
      _.reverse = t2;
      _.directionSetter = t3;
      _._periodInSeconds = t4;
      _._initialT = t5;
      _.tolerance = t6;
    },
    _AnimationController_Animation_AnimationEagerListenerMixin: function _AnimationController_Animation_AnimationEagerListenerMixin() {
    },
    _AnimationController_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin: function _AnimationController_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin() {
    },
    _AnimationController_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin: function _AnimationController_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin() {
    },
    ProxyAnimation$(animation) {
      var t1 = new A.ProxyAnimation(new A.ObserverList(A._setArrayType([], type$.JSArray_of_void_Function_AnimationStatus), type$.ObserverList_of_void_Function_AnimationStatus), new A.ObserverList(A._setArrayType([], type$.JSArray_of_void_Function), type$.ObserverList_of_void_Function), 0);
      t1._animations$_parent = animation;
      if (animation == null) {
        t1._status = B.AnimationStatus_0;
        t1._animations$_value = 0;
      }
      return t1;
    },
    CurvedAnimation$(curve, $parent, reverseCurve) {
      var t2,
        t1 = new A.CurvedAnimation($parent, curve, reverseCurve);
      t1._updateCurveDirection$1($parent.get$status());
      $parent.didRegisterListener$0();
      t2 = $parent.AnimationLocalStatusListenersMixin__statusListeners;
      t2._isDirty = true;
      t2._observer_list$_list.push(t1.get$_updateCurveDirection());
      return t1;
    },
    TrainHoppingAnimation$(_currentTrain, _nextTrain, onSwitchedTrain) {
      var t2, t3,
        t1 = new A.TrainHoppingAnimation(_currentTrain, _nextTrain, onSwitchedTrain, new A.ObserverList(A._setArrayType([], type$.JSArray_of_void_Function_AnimationStatus), type$.ObserverList_of_void_Function_AnimationStatus), new A.ObserverList(A._setArrayType([], type$.JSArray_of_void_Function), type$.ObserverList_of_void_Function));
      if (_currentTrain.get$value() === _nextTrain.get$value()) {
        t1._currentTrain = _nextTrain;
        t1._nextTrain = null;
        t2 = _nextTrain;
      } else {
        if (_currentTrain.get$value() > _nextTrain.get$value())
          t1._mode = B._TrainHoppingMode_1;
        else
          t1._mode = B._TrainHoppingMode_0;
        t2 = _currentTrain;
      }
      t2.addStatusListener$1(t1.get$_statusChangeHandler());
      t2 = t1.get$_valueChangeHandler();
      t1._currentTrain.addListener$1(t2);
      t3 = t1._nextTrain;
      if (t3 != null) {
        t3.didRegisterListener$0();
        t3 = t3.AnimationLocalListenersMixin__listeners;
        t3._isDirty = true;
        t3._observer_list$_list.push(t2);
      }
      return t1;
    },
    AnimationMin$(first, next, $T) {
      return new A.AnimationMin(first, next, new A.ObserverList(A._setArrayType([], type$.JSArray_of_void_Function_AnimationStatus), type$.ObserverList_of_void_Function_AnimationStatus), new A.ObserverList(A._setArrayType([], type$.JSArray_of_void_Function), type$.ObserverList_of_void_Function), 0, $T._eval$1("AnimationMin<0>"));
    },
    _AlwaysCompleteAnimation: function _AlwaysCompleteAnimation() {
    },
    _AlwaysDismissedAnimation: function _AlwaysDismissedAnimation() {
    },
    AnimationWithParentMixin: function AnimationWithParentMixin() {
    },
    ProxyAnimation: function ProxyAnimation(t0, t1, t2) {
      var _ = this;
      _._animations$_parent = _._animations$_value = _._status = null;
      _.AnimationLocalStatusListenersMixin__statusListeners = t0;
      _.AnimationLocalListenersMixin__listeners = t1;
      _.AnimationLazyListenerMixin__listenerCounter = t2;
    },
    ReverseAnimation: function ReverseAnimation(t0, t1, t2) {
      this.parent = t0;
      this.AnimationLocalStatusListenersMixin__statusListeners = t1;
      this.AnimationLazyListenerMixin__listenerCounter = t2;
    },
    CurvedAnimation: function CurvedAnimation(t0, t1, t2) {
      var _ = this;
      _.parent = t0;
      _.curve = t1;
      _.reverseCurve = t2;
      _._curveDirection = null;
    },
    _TrainHoppingMode: function _TrainHoppingMode(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    TrainHoppingAnimation: function TrainHoppingAnimation(t0, t1, t2, t3, t4) {
      var _ = this;
      _._currentTrain = t0;
      _._nextTrain = t1;
      _._mode = null;
      _.onSwitchedTrain = t2;
      _._lastValue = _._lastStatus = null;
      _.AnimationLocalStatusListenersMixin__statusListeners = t3;
      _.AnimationLocalListenersMixin__listeners = t4;
    },
    CompoundAnimation: function CompoundAnimation() {
    },
    AnimationMin: function AnimationMin(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.first = t0;
      _.next = t1;
      _._lastValue = _._lastStatus = null;
      _.AnimationLocalStatusListenersMixin__statusListeners = t2;
      _.AnimationLocalListenersMixin__listeners = t3;
      _.AnimationLazyListenerMixin__listenerCounter = t4;
      _.$ti = t5;
    },
    _CompoundAnimation_Animation_AnimationLazyListenerMixin: function _CompoundAnimation_Animation_AnimationLazyListenerMixin() {
    },
    _CompoundAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin: function _CompoundAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin() {
    },
    _CompoundAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin: function _CompoundAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin() {
    },
    _CurvedAnimation_Animation_AnimationWithParentMixin: function _CurvedAnimation_Animation_AnimationWithParentMixin() {
    },
    _ProxyAnimation_Animation_AnimationLazyListenerMixin: function _ProxyAnimation_Animation_AnimationLazyListenerMixin() {
    },
    _ProxyAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin: function _ProxyAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin() {
    },
    _ProxyAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin: function _ProxyAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin() {
    },
    _ReverseAnimation_Animation_AnimationLazyListenerMixin: function _ReverseAnimation_Animation_AnimationLazyListenerMixin() {
    },
    _ReverseAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalStatusListenersMixin: function _ReverseAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalStatusListenersMixin() {
    },
    _TrainHoppingAnimation_Animation_AnimationEagerListenerMixin: function _TrainHoppingAnimation_Animation_AnimationEagerListenerMixin() {
    },
    _TrainHoppingAnimation_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin: function _TrainHoppingAnimation_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin() {
    },
    _TrainHoppingAnimation_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin: function _TrainHoppingAnimation_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin() {
    },
    ParametricCurve: function ParametricCurve() {
    },
    Curve: function Curve() {
    },
    _Linear: function _Linear() {
    },
    SawTooth: function SawTooth(t0) {
      this.count = t0;
    },
    Interval: function Interval(t0, t1, t2) {
      this.begin = t0;
      this.end = t1;
      this.curve = t2;
    },
    Threshold: function Threshold() {
    },
    Cubic: function Cubic(t0, t1, t2, t3) {
      var _ = this;
      _.a = t0;
      _.b = t1;
      _.c = t2;
      _.d = t3;
    },
    FlippedCurve: function FlippedCurve(t0) {
      this.curve = t0;
    },
    _DecelerateCurve: function _DecelerateCurve() {
    },
    AnimationLazyListenerMixin: function AnimationLazyListenerMixin() {
    },
    AnimationEagerListenerMixin: function AnimationEagerListenerMixin() {
    },
    AnimationLocalListenersMixin: function AnimationLocalListenersMixin() {
    },
    AnimationLocalStatusListenersMixin: function AnimationLocalStatusListenersMixin() {
    },
    Tween$(begin, end, $T) {
      return new A.Tween(begin, end, $T._eval$1("Tween<0>"));
    },
    CurveTween$(curve) {
      return new A.CurveTween(curve);
    },
    Animatable: function Animatable() {
    },
    _AnimatedEvaluation: function _AnimatedEvaluation(t0, t1, t2) {
      this.parent = t0;
      this._evaluatable = t1;
      this.$ti = t2;
    },
    _ChainedEvaluation: function _ChainedEvaluation(t0, t1, t2) {
      this._tween$_parent = t0;
      this._evaluatable = t1;
      this.$ti = t2;
    },
    Tween: function Tween(t0, t1, t2) {
      this.begin = t0;
      this.end = t1;
      this.$ti = t2;
    },
    ReverseTween: function ReverseTween(t0, t1, t2, t3) {
      var _ = this;
      _.parent = t0;
      _.begin = t1;
      _.end = t2;
      _.$ti = t3;
    },
    ColorTween: function ColorTween(t0, t1) {
      this.begin = t0;
      this.end = t1;
    },
    RectTween: function RectTween(t0, t1) {
      this.begin = t0;
      this.end = t1;
    },
    IntTween: function IntTween(t0, t1) {
      this.begin = t0;
      this.end = t1;
    },
    CurveTween: function CurveTween(t0) {
      this.curve = t0;
    },
    __AnimatedEvaluation_Animation_AnimationWithParentMixin: function __AnimatedEvaluation_Animation_AnimationWithParentMixin() {
    },
    TweenSequence$(items, $T) {
      var t1 = new A.TweenSequence(A._setArrayType([], $T._eval$1("JSArray<TweenSequenceItem<0>>")), A._setArrayType([], type$.JSArray__Interval), $T._eval$1("TweenSequence<0>"));
      t1.TweenSequence$1(items, $T);
      return t1;
    },
    TweenSequenceItem$(tween, weight, $T) {
      return new A.TweenSequenceItem(tween, weight, $T._eval$1("TweenSequenceItem<0>"));
    },
    TweenSequence: function TweenSequence(t0, t1, t2) {
      this._items = t0;
      this._intervals = t1;
      this.$ti = t2;
    },
    TweenSequenceItem: function TweenSequenceItem(t0, t1, t2) {
      this.tween = t0;
      this.weight = t1;
      this.$ti = t2;
    },
    _Interval: function _Interval(t0, t1) {
      this.start = t0;
      this.end = t1;
    },
    CupertinoDynamicColor_maybeResolve(resolvable, context) {
      if (resolvable == null)
        return null;
      return resolvable instanceof A.CupertinoDynamicColor ? resolvable.resolveFrom$1(context) : resolvable;
    },
    CupertinoDynamicColor: function CupertinoDynamicColor(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11) {
      var _ = this;
      _._effectiveColor = t0;
      _._colors$_debugLabel = t1;
      _._debugResolveContext = t2;
      _.color = t3;
      _.darkColor = t4;
      _.highContrastColor = t5;
      _.darkHighContrastColor = t6;
      _.elevatedColor = t7;
      _.darkElevatedColor = t8;
      _.highContrastElevatedColor = t9;
      _.darkHighContrastElevatedColor = t10;
      _.value = t11;
    },
    CupertinoDynamicColor_toString_toString: function CupertinoDynamicColor_toString_toString(t0) {
      this.$this = t0;
    },
    _CupertinoDynamicColor_Color_Diagnosticable: function _CupertinoDynamicColor_Color_Diagnosticable() {
    },
    _CupertinoTimerPickerState$() {
      var i, _null = null,
        t1 = A.TextPainter$(_null, _null, _null, _null, _null, B.TextAlign_4, _null, _null, 1, B.TextWidthBasis_0),
        _list = A._setArrayType(new Array(10), type$.JSArray_String);
      for (i = 0; i < 10; ++i)
        _list[i] = "" + (9 - i);
      return new A._CupertinoTimerPickerState(t1, _list);
    },
    CupertinoTimerPickerMode: function CupertinoTimerPickerMode(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    CupertinoTimerPicker: function CupertinoTimerPicker(t0, t1) {
      this.onTimerDurationChanged = t0;
      this.key = t1;
    },
    _CupertinoTimerPickerState: function _CupertinoTimerPickerState(t0, t1) {
      var _ = this;
      _.___CupertinoTimerPickerState_localizations_A = _.___CupertinoTimerPickerState_textDirection_A = $;
      _.selectedHour = null;
      _.___CupertinoTimerPickerState_selectedMinute_A = $;
      _.lastSelectedSecond = _.lastSelectedMinute = _.lastSelectedHour = _.selectedSecond = null;
      _.textPainter = t0;
      _.numbers = t1;
      _.___CupertinoTimerPickerState_pickerColumnWidth_A = _.___CupertinoTimerPickerState_totalWidth_A = _.___CupertinoTimerPickerState_secondLabelWidth_A = _.___CupertinoTimerPickerState_minuteLabelWidth_A = _.___CupertinoTimerPickerState_hourLabelWidth_A = _.___CupertinoTimerPickerState_numberLabelBaseline_A = _.___CupertinoTimerPickerState_numberLabelHeight_A = _.___CupertinoTimerPickerState_numberLabelWidth_A = $;
      _._element = _._widget = null;
    },
    _CupertinoTimerPickerState__handleSystemFontsChange_closure: function _CupertinoTimerPickerState__handleSystemFontsChange_closure(t0) {
      this.$this = t0;
    },
    _CupertinoTimerPickerState__buildHourPicker_closure0: function _CupertinoTimerPickerState__buildHourPicker_closure0(t0) {
      this.$this = t0;
    },
    _CupertinoTimerPickerState__buildHourPicker__closure: function _CupertinoTimerPickerState__buildHourPicker__closure(t0, t1) {
      this.$this = t0;
      this.index = t1;
    },
    _CupertinoTimerPickerState__buildHourPicker_closure: function _CupertinoTimerPickerState__buildHourPicker_closure(t0, t1) {
      this.$this = t0;
      this.additionalPadding = t1;
    },
    _CupertinoTimerPickerState__buildHourColumn_closure: function _CupertinoTimerPickerState__buildHourColumn_closure(t0) {
      this.$this = t0;
    },
    _CupertinoTimerPickerState__buildHourColumn__closure: function _CupertinoTimerPickerState__buildHourColumn__closure(t0) {
      this.$this = t0;
    },
    _CupertinoTimerPickerState__buildMinutePicker_closure0: function _CupertinoTimerPickerState__buildMinutePicker_closure0(t0) {
      this.$this = t0;
    },
    _CupertinoTimerPickerState__buildMinutePicker__closure: function _CupertinoTimerPickerState__buildMinutePicker__closure(t0, t1) {
      this.$this = t0;
      this.index = t1;
    },
    _CupertinoTimerPickerState__buildMinutePicker_closure: function _CupertinoTimerPickerState__buildMinutePicker_closure(t0, t1) {
      this.$this = t0;
      this.additionalPadding = t1;
    },
    _CupertinoTimerPickerState__buildMinuteColumn_closure: function _CupertinoTimerPickerState__buildMinuteColumn_closure(t0) {
      this.$this = t0;
    },
    _CupertinoTimerPickerState__buildMinuteColumn__closure: function _CupertinoTimerPickerState__buildMinuteColumn__closure(t0) {
      this.$this = t0;
    },
    _CupertinoTimerPickerState__buildSecondPicker_closure0: function _CupertinoTimerPickerState__buildSecondPicker_closure0(t0) {
      this.$this = t0;
    },
    _CupertinoTimerPickerState__buildSecondPicker__closure: function _CupertinoTimerPickerState__buildSecondPicker__closure(t0, t1) {
      this.$this = t0;
      this.index = t1;
    },
    _CupertinoTimerPickerState__buildSecondPicker_closure: function _CupertinoTimerPickerState__buildSecondPicker_closure(t0, t1) {
      this.$this = t0;
      this.additionalPadding = t1;
    },
    _CupertinoTimerPickerState__buildSecondColumn_closure: function _CupertinoTimerPickerState__buildSecondColumn_closure(t0) {
      this.$this = t0;
    },
    _CupertinoTimerPickerState__buildSecondColumn__closure: function _CupertinoTimerPickerState__buildSecondColumn__closure(t0) {
      this.$this = t0;
    },
    _CupertinoTimerPickerState_build_closure: function _CupertinoTimerPickerState_build_closure(t0) {
      this.$this = t0;
    },
    _CupertinoTimerPickerState_build__closure: function _CupertinoTimerPickerState_build__closure() {
    },
    CupertinoIconThemeData$(color, fill, grade, opacity, opticalSize, shadows, size, weight) {
      return new A.CupertinoIconThemeData(size, fill, weight, grade, opticalSize, color, opacity, shadows);
    },
    CupertinoIconThemeData: function CupertinoIconThemeData(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.size = t0;
      _.fill = t1;
      _.weight = t2;
      _.grade = t3;
      _.opticalSize = t4;
      _.color = t5;
      _._opacity = t6;
      _.shadows = t7;
    },
    _CupertinoIconThemeData_IconThemeData_Diagnosticable: function _CupertinoIconThemeData_IconThemeData_Diagnosticable() {
    },
    _CupertinoLocalizationsDelegate: function _CupertinoLocalizationsDelegate() {
    },
    DefaultCupertinoLocalizations: function DefaultCupertinoLocalizations() {
    },
    CupertinoPicker$(backgroundColor, children, itemExtent, looping, magnification, offAxisFraction, onSelectedItemChanged, scrollController, selectionOverlay, squeeze) {
      return new A.CupertinoPicker(backgroundColor, offAxisFraction, magnification, scrollController, itemExtent, squeeze, onSelectedItemChanged, looping ? new A.ListWheelChildLoopingListDelegate(children) : new A.ListWheelChildListDelegate(children), selectionOverlay, null);
    },
    CupertinoPicker: function CupertinoPicker(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _.backgroundColor = t0;
      _.offAxisFraction = t1;
      _.magnification = t2;
      _.scrollController = t3;
      _.itemExtent = t4;
      _.squeeze = t5;
      _.onSelectedItemChanged = t6;
      _.childDelegate = t7;
      _.selectionOverlay = t8;
      _.key = t9;
    },
    _CupertinoPickerState: function _CupertinoPickerState() {
      var _ = this;
      _._element = _._widget = _._picker$_controller = _._lastHapticIndex = null;
    },
    CupertinoPickerDefaultSelectionOverlay: function CupertinoPickerDefaultSelectionOverlay(t0, t1, t2) {
      this.capStartEdge = t0;
      this.capEndEdge = t1;
      this.key = t2;
    },
    _CupertinoPickerSemantics: function _CupertinoPickerSemantics(t0, t1, t2) {
      this.scrollController = t0;
      this.child = t1;
      this.key = t2;
    },
    _RenderCupertinoPickerSemantics: function _RenderCupertinoPickerSemantics(t0, t1, t2) {
      var _ = this;
      _.___RenderCupertinoPickerSemantics__controller_A = $;
      _._picker$_textDirection = t0;
      _._currentIndex = 0;
      _.RenderObjectWithChildMixin__child = t1;
      _.parentData = _._cachedBaselines = _._size = _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t2;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    _RenderCupertinoPickerSemantics_assembleSemanticsNode_closure: function _RenderCupertinoPickerSemantics_assembleSemanticsNode_closure(t0) {
      this.indexedChildren = t0;
    },
    CupertinoRouteTransitionMixin__isPopGestureEnabled(route) {
      var t1;
      if (route.get$isFirst())
        return false;
      t1 = route.LocalHistoryRoute__localHistory;
      if (t1 != null && t1.length !== 0)
        return false;
      if (route._animationProxy.get$status() !== B.AnimationStatus_3)
        return false;
      if (route._secondaryAnimationProxy.get$status() !== B.AnimationStatus_0)
        return false;
      if (route._navigator.userGestureInProgressNotifier._change_notifier$_value)
        return false;
      return true;
    },
    CupertinoRouteTransitionMixin_buildPageTransitions(route, context, animation, secondaryAnimation, child, $T) {
      var t5, t6, t7,
        t1 = route._navigator.userGestureInProgressNotifier._change_notifier$_value,
        t2 = t1 ? animation : A.CurvedAnimation$(B.Cubic_O6W, animation, B.Cubic_uDh),
        t3 = $.$get$_kRightMiddleTween(),
        t4 = type$.Animation_double;
      t4._as(t2);
      t5 = t1 ? secondaryAnimation : A.CurvedAnimation$(B.Cubic_O6W, secondaryAnimation, B.Cubic_uDh);
      t6 = $.$get$_kMiddleLeftTween();
      t4._as(t5);
      t1 = t1 ? animation : A.CurvedAnimation$(B.Cubic_O6W, animation, null);
      t7 = $.$get$_CupertinoEdgeShadowDecoration_kTween();
      return new A.CupertinoPageTransition(new A._AnimatedEvaluation(t2, t3, t3.$ti._eval$1("_AnimatedEvaluation<Animatable.T>")), new A._AnimatedEvaluation(t5, t6, t6.$ti._eval$1("_AnimatedEvaluation<Animatable.T>")), new A._AnimatedEvaluation(t4._as(t1), t7, A._instanceType(t7)._eval$1("_AnimatedEvaluation<Animatable.T>")), new A._CupertinoBackGestureDetector(child, new A.CupertinoRouteTransitionMixin_buildPageTransitions_closure(route), new A.CupertinoRouteTransitionMixin_buildPageTransitions_closure0(route, $T), null, $T._eval$1("_CupertinoBackGestureDetector<0>")), null);
    },
    _CupertinoEdgeShadowDecoration_lerp(a, b, t) {
      var t1, t2, t3, i, t4;
      if (a == b)
        return a;
      if (a == null) {
        t1 = b._route$_colors;
        if (t1 == null)
          t1 = b;
        else {
          t2 = A._arrayInstanceType(t1)._eval$1("MappedListIterable<1,Color>");
          t1 = A.List_List$_of(new A.MappedListIterable(t1, new A._CupertinoEdgeShadowDecoration_lerp_closure(t), t2), t2._eval$1("ListIterable.E"));
          t1 = new A._CupertinoEdgeShadowDecoration(t1);
        }
        return t1;
      }
      if (b == null) {
        t1 = a._route$_colors;
        if (t1 == null)
          t1 = a;
        else {
          t2 = A._arrayInstanceType(t1)._eval$1("MappedListIterable<1,Color>");
          t1 = A.List_List$_of(new A.MappedListIterable(t1, new A._CupertinoEdgeShadowDecoration_lerp_closure0(t), t2), t2._eval$1("ListIterable.E"));
          t1 = new A._CupertinoEdgeShadowDecoration(t1);
        }
        return t1;
      }
      t1 = A._setArrayType([], type$.JSArray_Color);
      for (t2 = b._route$_colors, t3 = a._route$_colors, i = 0; i < t2.length; ++i) {
        t4 = t3 == null ? null : t3[i];
        t4 = A.Color_lerp(t4, t2[i], t);
        t4.toString;
        t1.push(t4);
      }
      return new A._CupertinoEdgeShadowDecoration(t1);
    },
    CupertinoRouteTransitionMixin_buildPageTransitions_closure: function CupertinoRouteTransitionMixin_buildPageTransitions_closure(t0) {
      this.route = t0;
    },
    CupertinoRouteTransitionMixin_buildPageTransitions_closure0: function CupertinoRouteTransitionMixin_buildPageTransitions_closure0(t0, t1) {
      this.route = t0;
      this.T = t1;
    },
    CupertinoPageTransition: function CupertinoPageTransition(t0, t1, t2, t3, t4) {
      var _ = this;
      _._primaryPositionAnimation = t0;
      _._secondaryPositionAnimation = t1;
      _._primaryShadowAnimation = t2;
      _.child = t3;
      _.key = t4;
    },
    _CupertinoBackGestureDetector: function _CupertinoBackGestureDetector(t0, t1, t2, t3, t4) {
      var _ = this;
      _.child = t0;
      _.enabledCallback = t1;
      _.onStartPopGesture = t2;
      _.key = t3;
      _.$ti = t4;
    },
    _CupertinoBackGestureDetectorState: function _CupertinoBackGestureDetectorState(t0) {
      var _ = this;
      _._backGestureController = null;
      _.___CupertinoBackGestureDetectorState__recognizer_A = $;
      _._element = _._widget = null;
      _.$ti = t0;
    },
    _CupertinoBackGestureController: function _CupertinoBackGestureController(t0, t1) {
      this.controller = t0;
      this.navigator = t1;
    },
    _CupertinoBackGestureController_dragEnd_closure: function _CupertinoBackGestureController_dragEnd_closure(t0, t1) {
      this.$this = t0;
      this.animationStatusCallback = t1;
    },
    _CupertinoEdgeShadowDecoration: function _CupertinoEdgeShadowDecoration(t0) {
      this._route$_colors = t0;
    },
    _CupertinoEdgeShadowDecoration_lerp_closure: function _CupertinoEdgeShadowDecoration_lerp_closure(t0) {
      this.t = t0;
    },
    _CupertinoEdgeShadowDecoration_lerp_closure0: function _CupertinoEdgeShadowDecoration_lerp_closure0(t0) {
      this.t = t0;
    },
    _CupertinoEdgeShadowPainter: function _CupertinoEdgeShadowPainter(t0, t1) {
      this._route$_decoration = t0;
      this.onChanged = t1;
    },
    CupertinoScrollbar: function CupertinoScrollbar(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14) {
      var _ = this;
      _.thicknessWhileDragging = t0;
      _.radiusWhileDragging = t1;
      _.child = t2;
      _.controller = t3;
      _.thumbVisibility = t4;
      _.radius = t5;
      _.thickness = t6;
      _.trackVisibility = t7;
      _.fadeDuration = t8;
      _.timeToFade = t9;
      _.pressDuration = t10;
      _.notificationPredicate = t11;
      _.interactive = t12;
      _.scrollbarOrientation = t13;
      _.key = t14;
    },
    _CupertinoScrollbarState: function _CupertinoScrollbarState(t0, t1, t2) {
      var _ = this;
      _.___CupertinoScrollbarState__thicknessAnimationController_A = $;
      _._pressStartAxisPosition = 0;
      _._fadeoutTimer = _._cachedController = _._startDragThumbOffset = _._lastDragUpdateOffset = _._startDragScrollbarAxisOffset = null;
      _.__RawScrollbarState__fadeoutOpacityAnimation_A = _.__RawScrollbarState__fadeoutAnimationController_A = $;
      _._scrollbarPainterKey = t0;
      _._thumbDragging = _._hoverIsActive = false;
      _.__RawScrollbarState_scrollbarPainter_F = $;
      _.TickerProviderStateMixin__tickers = t1;
      _.TickerProviderStateMixin__tickerModeNotifier = t2;
      _._element = _._widget = null;
    },
    _CupertinoScrollbarState_initState_closure: function _CupertinoScrollbarState_initState_closure(t0) {
      this.$this = t0;
    },
    _CupertinoScrollbarState_handleThumbPress_closure: function _CupertinoScrollbarState_handleThumbPress_closure() {
    },
    _resolveTextStyle(style, context) {
      var t1;
      if (style == null)
        t1 = null;
      else {
        t1 = A.CupertinoDynamicColor_maybeResolve(style.color, context);
        t1 = style.copyWith$3$backgroundColor$color$decorationColor(A.CupertinoDynamicColor_maybeResolve(style.backgroundColor, context), t1, A.CupertinoDynamicColor_maybeResolve(style.decorationColor, context));
      }
      return t1;
    },
    CupertinoTextThemeData: function CupertinoTextThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _._defaults = t0;
      _._primaryColor = t1;
      _._textStyle = t2;
      _._actionTextStyle = t3;
      _._tabLabelTextStyle = t4;
      _._navTitleTextStyle = t5;
      _._navLargeTitleTextStyle = t6;
      _._navActionTextStyle = t7;
      _._pickerTextStyle = t8;
      _._dateTimePickerTextStyle = t9;
    },
    _TextThemeDefaultsBuilder: function _TextThemeDefaultsBuilder(t0, t1) {
      this.labelColor = t0;
      this.inactiveGrayColor = t1;
    },
    _CupertinoTextThemeData_Object_Diagnosticable: function _CupertinoTextThemeData_Object_Diagnosticable() {
    },
    CupertinoTheme_of(context) {
      var inheritedTheme = context.dependOnInheritedWidgetOfExactType$1$0(type$._InheritedCupertinoTheme),
        t1 = inheritedTheme == null ? null : inheritedTheme.theme.data;
      return (t1 == null ? B.CupertinoThemeData_szZ : t1).resolveFrom$1(context);
    },
    CupertinoThemeData$_rawWithDefaults(brightness, primaryColor, primaryContrastingColor, textTheme, barBackgroundColor, scaffoldBackgroundColor, applyThemeToAll, _defaults) {
      return new A.CupertinoThemeData(_defaults, brightness, primaryColor, primaryContrastingColor, textTheme, barBackgroundColor, scaffoldBackgroundColor, applyThemeToAll);
    },
    CupertinoTheme: function CupertinoTheme(t0, t1, t2) {
      this.data = t0;
      this.child = t1;
      this.key = t2;
    },
    _InheritedCupertinoTheme: function _InheritedCupertinoTheme(t0, t1, t2) {
      this.theme = t0;
      this.child = t1;
      this.key = t2;
    },
    CupertinoThemeData: function CupertinoThemeData(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _._theme$_defaults = t0;
      _.brightness = t1;
      _.primaryColor = t2;
      _.primaryContrastingColor = t3;
      _.textTheme = t4;
      _.barBackgroundColor = t5;
      _.scaffoldBackgroundColor = t6;
      _.applyThemeToAll = t7;
    },
    CupertinoThemeData_resolveFrom_convertColor: function CupertinoThemeData_resolveFrom_convertColor(t0) {
      this.context = t0;
    },
    NoDefaultCupertinoThemeData: function NoDefaultCupertinoThemeData(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.brightness = t0;
      _.primaryColor = t1;
      _.primaryContrastingColor = t2;
      _.textTheme = t3;
      _.barBackgroundColor = t4;
      _.scaffoldBackgroundColor = t5;
      _.applyThemeToAll = t6;
    },
    NoDefaultCupertinoThemeData_resolveFrom_convertColor: function NoDefaultCupertinoThemeData_resolveFrom_convertColor(t0) {
      this.context = t0;
    },
    _CupertinoThemeDefaults: function _CupertinoThemeDefaults(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.brightness = t0;
      _.primaryColor = t1;
      _.primaryContrastingColor = t2;
      _.barBackgroundColor = t3;
      _.scaffoldBackgroundColor = t4;
      _.applyThemeToAll = t5;
      _.textThemeDefaults = t6;
    },
    _CupertinoThemeDefaults_resolveFrom_convertColor: function _CupertinoThemeDefaults_resolveFrom_convertColor(t0) {
      this.context = t0;
    },
    _CupertinoTextThemeDefaults: function _CupertinoTextThemeDefaults(t0, t1) {
      this.labelColor = t0;
      this.inactiveGray = t1;
    },
    _DefaultCupertinoTextThemeData: function _DefaultCupertinoTextThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11) {
      var _ = this;
      _.labelColor = t0;
      _.inactiveGray = t1;
      _._defaults = t2;
      _._primaryColor = t3;
      _._textStyle = t4;
      _._actionTextStyle = t5;
      _._tabLabelTextStyle = t6;
      _._navTitleTextStyle = t7;
      _._navLargeTitleTextStyle = t8;
      _._navActionTextStyle = t9;
      _._pickerTextStyle = t10;
      _._dateTimePickerTextStyle = t11;
    },
    _CupertinoThemeData_NoDefaultCupertinoThemeData_Diagnosticable: function _CupertinoThemeData_NoDefaultCupertinoThemeData_Diagnosticable() {
    },
    compute0(callback, message, debugLabel, $M, $R) {
      return A.compute$body(callback, message, debugLabel, $M, $R, $R);
    },
    compute$body(callback, message, debugLabel, $M, $R, $async$type) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter($async$type),
        $async$returnValue;
      var $async$compute0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = A.Isolate_run(new A.compute_closure(callback, message, $R), debugLabel, $R);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$compute0, $async$completer);
    },
    compute_closure: function compute_closure(t0, t1, t2) {
      this.callback = t0;
      this.message = t1;
      this.R = t2;
    },
    defaultTargetPlatform() {
      var t1 = $.$get$_testPlatform();
      return t1 == null ? $.$get$_browserPlatform() : t1;
    },
    _testPlatform_closure: function _testPlatform_closure() {
    },
    _browserPlatform_closure: function _browserPlatform_closure() {
    },
    ErrorDescription$(message) {
      var t1 = A._setArrayType([message], type$.JSArray_Object);
      return new A.ErrorDescription(null, null, false, t1, null, B.DiagnosticLevel_3);
    },
    ErrorSummary$(message) {
      var t1 = A._setArrayType([message], type$.JSArray_Object);
      return new A.ErrorSummary(null, null, false, t1, null, B.DiagnosticLevel_6);
    },
    ErrorHint$(message) {
      var t1 = A._setArrayType([message], type$.JSArray_Object);
      return new A.ErrorHint(null, null, false, t1, null, B.DiagnosticLevel_5);
    },
    FlutterError_FlutterError(message) {
      var lines = A._setArrayType(message.split("\n"), type$.JSArray_String),
        t1 = A._setArrayType([A.ErrorSummary$(B.JSArray_methods.get$first(lines))], type$.JSArray_DiagnosticsNode),
        t2 = A.SubListIterable$(lines, 1, null, type$.String);
      B.JSArray_methods.addAll$1(t1, new A.MappedListIterable(t2, new A.FlutterError_FlutterError_closure(), t2.$ti._eval$1("MappedListIterable<ListIterable.E,DiagnosticsNode>")));
      return new A.FlutterError(t1);
    },
    FlutterError$fromParts(diagnostics) {
      return new A.FlutterError(diagnostics);
    },
    FlutterError__defaultStackTraceDemangler(stackTrace) {
      return stackTrace;
    },
    FlutterError_dumpErrorToConsole(details, forceReport) {
      var t1 = $.FlutterError__errorCount;
      if (t1 === 0)
        A.debugPrintStack(J.toString$0$(details.exception), 100, details.stack);
      else
        A.print__debugPrintThrottled$closure().call$1("Another exception was thrown: " + details.get$summary().toString$0(0));
      $.FlutterError__errorCount = $.FlutterError__errorCount + 1;
    },
    FlutterError_defaultStackFilter($frames) {
      var skipped, index, t1, frame, className, $package, reasons, _i, result, t2, entry,
        removedPackagesAndClasses = A.LinkedHashMap_LinkedHashMap$_literal(["dart:async-patch", 0, "dart:async", 0, "package:stack_trace", 0, "class _AssertionError", 0, "class _FakeAsync", 0, "class _FrameCallbackEntry", 0, "class _Timer", 0, "class _RawReceivePortImpl", 0], type$.String, type$.int),
        parsedFrames = A.StackFrame_fromStackString(J.join$1$ax($frames, "\n"));
      for (skipped = 0, index = 0; t1 = parsedFrames.length, index < t1; ++index) {
        frame = parsedFrames[index];
        className = "class " + frame.className;
        $package = frame.packageScheme + ":" + frame.$package;
        if (removedPackagesAndClasses.containsKey$1(className)) {
          ++skipped;
          removedPackagesAndClasses.update$2(className, new A.FlutterError_defaultStackFilter_closure());
          B.JSArray_methods.removeAt$1(parsedFrames, index);
          --index;
        } else if (removedPackagesAndClasses.containsKey$1($package)) {
          ++skipped;
          removedPackagesAndClasses.update$2($package, new A.FlutterError_defaultStackFilter_closure0());
          B.JSArray_methods.removeAt$1(parsedFrames, index);
          --index;
        }
      }
      reasons = A.List_List$filled(t1, null, false, type$.nullable_String);
      for (_i = 0; false; ++_i)
        $.FlutterError__stackFilters[_i].filter$2(parsedFrames, reasons);
      t1 = type$.JSArray_String;
      result = A._setArrayType([], t1);
      for (index = 0; index < parsedFrames.length; ++index) {
        while (true) {
          if (!false)
            break;
          ++index;
        }
        t2 = parsedFrames[index];
        result.push(t2.source);
      }
      t1 = A._setArrayType([], t1);
      for (t2 = new A.LinkedHashMapEntriesIterable(removedPackagesAndClasses, A._instanceType(removedPackagesAndClasses)._eval$1("LinkedHashMapEntriesIterable<1,2>")).get$iterator(0); t2.moveNext$0();) {
        entry = t2.__js_helper$_current;
        if (entry.value > 0)
          t1.push(entry.key);
      }
      B.JSArray_methods.sort$0(t1);
      if (skipped === 1)
        result.push("(elided one frame from " + B.JSArray_methods.get$single(t1) + ")");
      else if (skipped > 1) {
        t2 = t1.length;
        if (t2 > 1)
          t1[t2 - 1] = "and " + B.JSArray_methods.get$last(t1);
        t2 = "(elided " + skipped;
        if (t1.length > 2)
          result.push(t2 + " frames from " + B.JSArray_methods.join$1(t1, ", ") + ")");
        else
          result.push(t2 + " frames from " + B.JSArray_methods.join$1(t1, " ") + ")");
      }
      return result;
    },
    FlutterError_reportError(details) {
      var t1 = $.FlutterError_onError;
      if (t1 != null)
        t1.call$1(details);
    },
    debugPrintStack(label, maxFrames, stackTrace) {
      var lines, t1;
      A.print__debugPrintThrottled$closure().call$1(label);
      lines = A._setArrayType(B.JSString_methods.trimRight$0((stackTrace == null ? A.StackTrace_current() : A.FlutterError__defaultStackTraceDemangler(stackTrace)).toString$0(0)).split("\n"), type$.JSArray_String);
      t1 = lines.length;
      lines = J.take$1$ax(t1 !== 0 ? new A.SkipWhileIterable(lines, new A.debugPrintStack_closure(), type$.SkipWhileIterable_String) : lines, maxFrames);
      A.print__debugPrintThrottled$closure().call$1(B.JSArray_methods.join$1(A.FlutterError_defaultStackFilter(lines), "\n"));
    },
    DiagnosticsStackTrace$($name, stack, stackFilter) {
      A.DiagnosticsStackTrace__applyStackFilter(stack, stackFilter);
      return new A.DiagnosticsStackTrace();
    },
    DiagnosticsStackTrace__applyStackFilter(stack, stackFilter) {
      if (stack == null)
        return A._setArrayType([], type$.JSArray_DiagnosticsNode);
      return J.map$1$1$ax(A.FlutterError_defaultStackFilter(A._setArrayType(B.JSString_methods.trimRight$0(A.S(A.FlutterError__defaultStackTraceDemangler(stack))).split("\n"), type$.JSArray_String)), A.assertions_DiagnosticsStackTrace__createStackFrame$closure(), type$.DiagnosticsNode).toList$0(0);
    },
    DiagnosticsStackTrace__createStackFrame(frame) {
      return A.DiagnosticsNode_DiagnosticsNode$message(frame, false);
    },
    _FlutterErrorDetailsNode$($name, style, value) {
      return new A._FlutterErrorDetailsNode();
    },
    _ErrorDiagnostic: function _ErrorDiagnostic() {
    },
    ErrorDescription: function ErrorDescription(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.ifNull = t0;
      _.ifEmpty = t1;
      _.missingIfNull = t2;
      _._value = t3;
      _._valueComputed = true;
      _._diagnostics$_exception = null;
      _.defaultValue = t4;
      _._defaultLevel = t5;
    },
    ErrorSummary: function ErrorSummary(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.ifNull = t0;
      _.ifEmpty = t1;
      _.missingIfNull = t2;
      _._value = t3;
      _._valueComputed = true;
      _._diagnostics$_exception = null;
      _.defaultValue = t4;
      _._defaultLevel = t5;
    },
    ErrorHint: function ErrorHint(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.ifNull = t0;
      _.ifEmpty = t1;
      _.missingIfNull = t2;
      _._value = t3;
      _._valueComputed = true;
      _._diagnostics$_exception = null;
      _.defaultValue = t4;
      _._defaultLevel = t5;
    },
    FlutterErrorDetails: function FlutterErrorDetails(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.exception = t0;
      _.stack = t1;
      _.library = t2;
      _.context = t3;
      _.informationCollector = t4;
      _.silent = t5;
    },
    FlutterErrorDetails_summary_formatException: function FlutterErrorDetails_summary_formatException(t0) {
      this.$this = t0;
    },
    FlutterError: function FlutterError(t0) {
      this.diagnostics = t0;
    },
    FlutterError_FlutterError_closure: function FlutterError_FlutterError_closure() {
    },
    FlutterError_defaultStackFilter_closure: function FlutterError_defaultStackFilter_closure() {
    },
    FlutterError_defaultStackFilter_closure0: function FlutterError_defaultStackFilter_closure0() {
    },
    debugPrintStack_closure: function debugPrintStack_closure() {
    },
    DiagnosticsStackTrace: function DiagnosticsStackTrace() {
    },
    _FlutterErrorDetailsNode: function _FlutterErrorDetailsNode() {
    },
    _FlutterError_Error_DiagnosticableTreeMixin: function _FlutterError_Error_DiagnosticableTreeMixin() {
    },
    _FlutterErrorDetails_Object_Diagnosticable: function _FlutterErrorDetails_Object_Diagnosticable() {
    },
    BindingBase: function BindingBase() {
    },
    BindingBase_lockEvents_closure: function BindingBase_lockEvents_closure(t0) {
      this.$this = t0;
    },
    ValueNotifier$(_value) {
      return new A.ValueNotifier(_value, $.$get$ChangeNotifier__emptyListeners());
    },
    Listenable: function Listenable() {
    },
    ChangeNotifier: function ChangeNotifier() {
    },
    ChangeNotifier_notifyListeners_closure: function ChangeNotifier_notifyListeners_closure(t0) {
      this.$this = t0;
    },
    _MergingListenable: function _MergingListenable(t0) {
      this._change_notifier$_children = t0;
    },
    ValueNotifier: function ValueNotifier(t0, t1) {
      var _ = this;
      _._change_notifier$_value = t0;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t1;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
    },
    DiagnosticsNode_DiagnosticsNode$message(message, allowWrap) {
      var _null = null;
      return A.DiagnosticsProperty$("", _null, allowWrap, B.C__NoDefaultValue, message, _null, _null, B.DiagnosticLevel_3, false, false, true, B.DiagnosticsTreeStyle_8, _null);
    },
    DiagnosticsProperty$($name, value, allowWrap, defaultValue, description, ifEmpty, ifNull, level, missingIfNull, showName, showSeparator, style, tooltip) {
      var t1;
      if (ifNull == null)
        t1 = missingIfNull ? "MISSING" : null;
      else
        t1 = ifNull;
      return new A.DiagnosticsProperty(t1, ifEmpty, missingIfNull, value, defaultValue, level);
    },
    DiagnosticableTreeNode$($name, style, value) {
      return new A.DiagnosticableTreeNode();
    },
    shortHash(object) {
      return B.JSString_methods.padLeft$2(B.JSInt_methods.toRadixString$1(J.get$hashCode$(object) & 1048575, 16), 5, "0");
    },
    describeEnum(enumEntry) {
      var description;
      if (enumEntry instanceof A._Enum)
        return enumEntry._name;
      description = enumEntry.toString$0(0);
      return B.JSString_methods.substring$1(description, B.JSString_methods.indexOf$1(description, ".") + 1);
    },
    DiagnosticLevel: function DiagnosticLevel(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    DiagnosticsTreeStyle: function DiagnosticsTreeStyle(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    _NoDefaultValue: function _NoDefaultValue() {
    },
    DiagnosticsNode: function DiagnosticsNode() {
    },
    DiagnosticsProperty: function DiagnosticsProperty(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.ifNull = t0;
      _.ifEmpty = t1;
      _.missingIfNull = t2;
      _._value = t3;
      _._valueComputed = true;
      _._diagnostics$_exception = null;
      _.defaultValue = t4;
      _._defaultLevel = t5;
    },
    DiagnosticableNode: function DiagnosticableNode() {
    },
    DiagnosticableTreeNode: function DiagnosticableTreeNode() {
    },
    Diagnosticable: function Diagnosticable() {
    },
    DiagnosticableTree: function DiagnosticableTree() {
    },
    DiagnosticableTreeMixin: function DiagnosticableTreeMixin() {
    },
    DiagnosticsBlock: function DiagnosticsBlock() {
    },
    _DiagnosticableTree_Object_Diagnosticable: function _DiagnosticableTree_Object_Diagnosticable() {
    },
    Key: function Key() {
    },
    LocalKey: function LocalKey() {
    },
    UniqueKey: function UniqueKey() {
    },
    ValueKey: function ValueKey(t0, t1) {
      this.value = t0;
      this.$ti = t1;
    },
    _TypeLiteral: function _TypeLiteral(t0) {
      this.$ti = t0;
    },
    LicenseEntry: function LicenseEntry() {
    },
    LicenseEntryWithLineBreaks: function LicenseEntryWithLineBreaks() {
    },
    AbstractNode: function AbstractNode() {
    },
    ObserverList$($T) {
      return new A.ObserverList(A._setArrayType([], $T._eval$1("JSArray<0>")), $T._eval$1("ObserverList<0>"));
    },
    ObserverList: function ObserverList(t0, t1) {
      var _ = this;
      _._observer_list$_list = t0;
      _._isDirty = false;
      _.__ObserverList__set_FI = $;
      _.$ti = t1;
    },
    HashedObserverList: function HashedObserverList(t0, t1) {
      this._observer_list$_map = t0;
      this.$ti = t1;
    },
    _makeArray($length) {
      return A.List_List$filled($length, null, false, type$.nullable_Object);
    },
    PersistentHashMap: function PersistentHashMap(t0) {
      this._root = t0;
    },
    _TrieNode: function _TrieNode() {
    },
    _FullNode: function _FullNode(t0) {
      this.descendants = t0;
    },
    _CompressedNode: function _CompressedNode(t0, t1) {
      this.occupiedIndices = t0;
      this.keyValuePairs = t1;
    },
    _HashCollisionNode: function _HashCollisionNode(t0, t1) {
      this.hash = t0;
      this.keyValuePairs = t1;
    },
    TargetPlatform: function TargetPlatform(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    WriteBuffer_WriteBuffer(startCapacity) {
      var eightBytes = new DataView(new ArrayBuffer(8)),
        eightBytesAsList = J.asUint8List$0$x(B.NativeByteData_methods.get$buffer(eightBytes));
      return new A.WriteBuffer(new Uint8Array(startCapacity), eightBytes, eightBytesAsList);
    },
    WriteBuffer: function WriteBuffer(t0, t1, t2) {
      var _ = this;
      _._buffer = t0;
      _._currentSize = 0;
      _._isDone = false;
      _._eightBytes = t1;
      _._eightBytesAsList = t2;
    },
    ReadBuffer: function ReadBuffer(t0) {
      this.data = t0;
      this._serialization$_position = 0;
    },
    StackFrame_fromStackString(stack) {
      var t1 = type$.WhereTypeIterable_StackFrame;
      t1 = A.List_List$_of(new A.WhereTypeIterable(new A.MappedIterable(new A.WhereIterable(A._setArrayType(B.JSString_methods.trim$0(stack).split("\n"), type$.JSArray_String), new A.StackFrame_fromStackString_closure(), type$.WhereIterable_String), A.stack_frame_StackFrame_fromStackTraceLine$closure(), type$.MappedIterable_of_String_and_nullable_StackFrame), t1), t1._eval$1("Iterable.E"));
      return t1;
    },
    StackFrame__parseWebNonDebugFrame(line) {
      var classAndMethod, className,
        _s9_ = "<unknown>",
        match = $.$get$StackFrame__webNonDebugFramePattern().firstMatch$1(line);
      if (match == null)
        return null;
      classAndMethod = A._setArrayType(match._match[1].split("."), type$.JSArray_String);
      className = classAndMethod.length > 1 ? B.JSArray_methods.get$first(classAndMethod) : _s9_;
      return new A.StackFrame(line, -1, _s9_, _s9_, _s9_, -1, -1, className, classAndMethod.length > 1 ? A.SubListIterable$(classAndMethod, 1, null, type$.String).join$1(0, ".") : B.JSArray_methods.get$single(classAndMethod));
    },
    StackFrame_fromStackTraceLine(line) {
      var t1, t2, method, className, parts, packageUri, packagePath, $package, t3, t4,
        _s9_ = "<unknown>";
      if (line === "<asynchronous suspension>")
        return B.StackFrame_Bjm;
      else if (line === "...")
        return B.StackFrame_fqN;
      if (!B.JSString_methods.startsWith$1(line, "#"))
        return A.StackFrame__parseWebNonDebugFrame(line);
      t1 = A.RegExp_RegExp("^#(\\d+) +(.+) \\((.+?):?(\\d+){0,1}:?(\\d+){0,1}\\)$", false).firstMatch$1(line)._match;
      t2 = t1[2];
      t2.toString;
      method = A.stringReplaceAllUnchecked(t2, ".<anonymous closure>", "");
      if (B.JSString_methods.startsWith$1(method, "new")) {
        className = method.split(" ").length > 1 ? method.split(" ")[1] : _s9_;
        if (B.JSString_methods.contains$1(className, ".")) {
          parts = className.split(".");
          className = parts[0];
          method = parts[1];
        } else
          method = "";
      } else if (B.JSString_methods.contains$1(method, ".")) {
        parts = method.split(".");
        className = parts[0];
        method = parts[1];
      } else
        className = "";
      t2 = t1[3];
      t2.toString;
      packageUri = A.Uri_parse(t2);
      packagePath = packageUri.get$path();
      if (packageUri.get$scheme() === "dart" || packageUri.get$scheme() === "package") {
        $package = packageUri.get$pathSegments()[0];
        t2 = packageUri.get$path();
        t3 = packageUri.get$pathSegments()[0];
        A.RangeError_checkValueInInterval(0, 0, t2.length, "startIndex");
        packagePath = A.stringReplaceFirstUnchecked(t2, t3 + "/", "", 0);
      } else
        $package = _s9_;
      t2 = t1[1];
      t2.toString;
      t2 = A.int_parse(t2, null);
      t3 = packageUri.get$scheme();
      t4 = t1[4];
      if (t4 == null)
        t4 = -1;
      else {
        t4 = t4;
        t4.toString;
        t4 = A.int_parse(t4, null);
      }
      t1 = t1[5];
      if (t1 == null)
        t1 = -1;
      else {
        t1 = t1;
        t1.toString;
        t1 = A.int_parse(t1, null);
      }
      return new A.StackFrame(line, t2, t3, $package, packagePath, t4, t1, className, method);
    },
    StackFrame: function StackFrame(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.source = t0;
      _.number = t1;
      _.packageScheme = t2;
      _.$package = t3;
      _.packagePath = t4;
      _.line = t5;
      _.column = t6;
      _.className = t7;
      _.method = t8;
    },
    StackFrame_fromStackString_closure: function StackFrame_fromStackString_closure() {
    },
    SynchronousFuture: function SynchronousFuture(t0, t1) {
      this._synchronous_future$_value = t0;
      this.$ti = t1;
    },
    SynchronousFuture_whenComplete_closure: function SynchronousFuture_whenComplete_closure(t0) {
      this.$this = t0;
    },
    GestureDisposition: function GestureDisposition(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    GestureArenaMember: function GestureArenaMember() {
    },
    GestureArenaEntry: function GestureArenaEntry(t0, t1, t2) {
      this._arena = t0;
      this._pointer = t1;
      this._member = t2;
    },
    _GestureArena: function _GestureArena(t0) {
      var _ = this;
      _.members = t0;
      _.isOpen = true;
      _.hasPendingSweep = _.isHeld = false;
      _.eagerWinner = null;
    },
    _GestureArena_toString_closure: function _GestureArena_toString_closure(t0) {
      this.$this = t0;
    },
    GestureArenaManager: function GestureArenaManager(t0) {
      this._arenas = t0;
    },
    GestureArenaManager_add_closure: function GestureArenaManager_add_closure() {
    },
    GestureArenaManager__tryToResolveArena_closure: function GestureArenaManager__tryToResolveArena_closure(t0, t1, t2) {
      this.$this = t0;
      this.pointer = t1;
      this.state = t2;
    },
    FlutterErrorDetailsForPointerEventDispatcher$(context, $event, exception, hitTestEntry, informationCollector, library, stack) {
      return new A.FlutterErrorDetailsForPointerEventDispatcher(exception, stack, library, context, informationCollector, false);
    },
    _Resampler: function _Resampler(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._resamplers = t0;
      _._frameCallbackScheduled = false;
      _._frameTime = t1;
      _._frameTimeAge = t2;
      _._handlePointerEvent = t3;
      _._handleSampleTimeChanged = t4;
      _._samplingInterval = t5;
      _._timer = null;
    },
    GestureBinding: function GestureBinding() {
    },
    GestureBinding_dispatchEvent_closure: function GestureBinding_dispatchEvent_closure(t0) {
      this.event = t0;
    },
    GestureBinding_dispatchEvent_closure0: function GestureBinding_dispatchEvent_closure0(t0, t1) {
      this.event = t0;
      this.entry = t1;
    },
    FlutterErrorDetailsForPointerEventDispatcher: function FlutterErrorDetailsForPointerEventDispatcher(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.exception = t0;
      _.stack = t1;
      _.library = t2;
      _.context = t3;
      _.informationCollector = t4;
      _.silent = t5;
    },
    DragDownDetails: function DragDownDetails(t0) {
      this.globalPosition = t0;
    },
    DragStartDetails: function DragStartDetails(t0, t1, t2) {
      this.sourceTimeStamp = t0;
      this.globalPosition = t1;
      this.kind = t2;
    },
    DragUpdateDetails: function DragUpdateDetails(t0, t1, t2, t3) {
      var _ = this;
      _.sourceTimeStamp = t0;
      _.delta = t1;
      _.primaryDelta = t2;
      _.globalPosition = t3;
    },
    DragEndDetails: function DragEndDetails(t0, t1) {
      this.velocity = t0;
      this.primaryVelocity = t1;
    },
    PointerEvent_transformPosition(transform, position) {
      var position3, t1;
      if (transform == null)
        return position;
      position3 = new A.Vector3(new Float64Array(3));
      position3.setValues$3(position._dx, position._dy, 0);
      t1 = transform.perspectiveTransform$1(position3)._v3storage;
      return new A.Offset(t1[0], t1[1]);
    },
    PointerEvent_transformDeltaViaPositions(transform, transformedEndPosition, untransformedDelta, untransformedEndPosition) {
      if (transform == null)
        return untransformedDelta;
      if (transformedEndPosition == null)
        transformedEndPosition = A.PointerEvent_transformPosition(transform, untransformedEndPosition);
      return transformedEndPosition.$sub(0, A.PointerEvent_transformPosition(transform, untransformedEndPosition.$sub(0, untransformedDelta)));
    },
    PointerEvent_removePerspectiveTransform(transform) {
      var t1, t2,
        argStorage = new Float64Array(4),
        vector = new A.Vector4(argStorage);
      vector.setValues$4(0, 0, 1, 0);
      t1 = new Float64Array(16);
      t2 = new A.Matrix4(t1);
      t2.setFrom$1(transform);
      t1[11] = argStorage[3];
      t1[10] = argStorage[2];
      t1[9] = argStorage[1];
      t1[8] = argStorage[0];
      t2.setRow$2(2, vector);
      return t2;
    },
    PointerEnterEvent$(buttons, delta, device, distance, distanceMax, down, embedderId, kind, obscured, orientation, pointer, position, pressureMax, pressureMin, radiusMajor, radiusMax, radiusMin, radiusMinor, size, synthesized, tilt, timeStamp) {
      return new A.PointerEnterEvent(embedderId, timeStamp, pointer, kind, device, position, delta, buttons, down, false, 0, pressureMin, pressureMax, distance, distanceMax, size, radiusMajor, radiusMinor, radiusMin, radiusMax, orientation, tilt, 0, false, null, null);
    },
    PointerExitEvent$(buttons, delta, device, distance, distanceMax, down, embedderId, kind, obscured, orientation, pointer, position, pressureMax, pressureMin, radiusMajor, radiusMax, radiusMin, radiusMinor, size, synthesized, tilt, timeStamp) {
      return new A.PointerExitEvent(embedderId, timeStamp, pointer, kind, device, position, delta, buttons, down, false, 0, pressureMin, pressureMax, distance, distanceMax, size, radiusMajor, radiusMinor, radiusMin, radiusMax, orientation, tilt, 0, false, null, null);
    },
    PointerCancelEvent$(buttons, device, distance, distanceMax, embedderId, kind, obscured, orientation, pointer, position, pressureMax, pressureMin, radiusMajor, radiusMax, radiusMin, radiusMinor, size, tilt, timeStamp) {
      return new A.PointerCancelEvent(embedderId, timeStamp, pointer, kind, device, position, B.Offset_0_0, buttons, false, false, 0, pressureMin, pressureMax, distance, distanceMax, size, radiusMajor, radiusMinor, radiusMin, radiusMax, orientation, tilt, 0, false, null, null);
    },
    computeHitSlop(kind, settings) {
      var t1;
      switch (kind.index) {
        case 1:
          return 1;
        case 2:
        case 3:
        case 5:
        case 0:
        case 4:
          t1 = settings == null ? null : settings.touchSlop;
          return t1 == null ? 18 : t1;
      }
    },
    computePanSlop(kind, settings) {
      var t1;
      switch (kind.index) {
        case 1:
          return 2;
        case 2:
        case 3:
        case 5:
        case 0:
        case 4:
          if (settings == null)
            t1 = null;
          else {
            t1 = settings.touchSlop;
            t1 = t1 != null ? t1 * 2 : null;
          }
          return t1 == null ? 36 : t1;
      }
    },
    PointerEvent: function PointerEvent() {
    },
    _PointerEventDescription: function _PointerEventDescription() {
    },
    _AbstractPointerEvent: function _AbstractPointerEvent() {
    },
    _TransformedPointerEvent: function _TransformedPointerEvent() {
    },
    _CopyPointerEnterEvent: function _CopyPointerEnterEvent() {
    },
    PointerEnterEvent: function PointerEnterEvent(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25) {
      var _ = this;
      _.embedderId = t0;
      _.timeStamp = t1;
      _.pointer = t2;
      _.kind = t3;
      _.device = t4;
      _.position = t5;
      _.delta = t6;
      _.buttons = t7;
      _.down = t8;
      _.obscured = t9;
      _.pressure = t10;
      _.pressureMin = t11;
      _.pressureMax = t12;
      _.distance = t13;
      _.distanceMax = t14;
      _.size = t15;
      _.radiusMajor = t16;
      _.radiusMinor = t17;
      _.radiusMin = t18;
      _.radiusMax = t19;
      _.orientation = t20;
      _.tilt = t21;
      _.platformData = t22;
      _.synthesized = t23;
      _.transform = t24;
      _.original = t25;
    },
    _TransformedPointerEnterEvent: function _TransformedPointerEnterEvent(t0, t1) {
      var _ = this;
      _.original = t0;
      _.transform = t1;
      _.___TransformedPointerEvent_localDelta_FI = _.___TransformedPointerEvent_localPosition_FI = $;
    },
    _CopyPointerExitEvent: function _CopyPointerExitEvent() {
    },
    PointerExitEvent: function PointerExitEvent(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25) {
      var _ = this;
      _.embedderId = t0;
      _.timeStamp = t1;
      _.pointer = t2;
      _.kind = t3;
      _.device = t4;
      _.position = t5;
      _.delta = t6;
      _.buttons = t7;
      _.down = t8;
      _.obscured = t9;
      _.pressure = t10;
      _.pressureMin = t11;
      _.pressureMax = t12;
      _.distance = t13;
      _.distanceMax = t14;
      _.size = t15;
      _.radiusMajor = t16;
      _.radiusMinor = t17;
      _.radiusMin = t18;
      _.radiusMax = t19;
      _.orientation = t20;
      _.tilt = t21;
      _.platformData = t22;
      _.synthesized = t23;
      _.transform = t24;
      _.original = t25;
    },
    _TransformedPointerExitEvent: function _TransformedPointerExitEvent(t0, t1) {
      var _ = this;
      _.original = t0;
      _.transform = t1;
      _.___TransformedPointerEvent_localDelta_FI = _.___TransformedPointerEvent_localPosition_FI = $;
    },
    _CopyPointerCancelEvent: function _CopyPointerCancelEvent() {
    },
    PointerCancelEvent: function PointerCancelEvent(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25) {
      var _ = this;
      _.embedderId = t0;
      _.timeStamp = t1;
      _.pointer = t2;
      _.kind = t3;
      _.device = t4;
      _.position = t5;
      _.delta = t6;
      _.buttons = t7;
      _.down = t8;
      _.obscured = t9;
      _.pressure = t10;
      _.pressureMin = t11;
      _.pressureMax = t12;
      _.distance = t13;
      _.distanceMax = t14;
      _.size = t15;
      _.radiusMajor = t16;
      _.radiusMinor = t17;
      _.radiusMin = t18;
      _.radiusMax = t19;
      _.orientation = t20;
      _.tilt = t21;
      _.platformData = t22;
      _.synthesized = t23;
      _.transform = t24;
      _.original = t25;
    },
    _TransformedPointerCancelEvent: function _TransformedPointerCancelEvent(t0, t1) {
      var _ = this;
      _.original = t0;
      _.transform = t1;
      _.___TransformedPointerEvent_localDelta_FI = _.___TransformedPointerEvent_localPosition_FI = $;
    },
    _PointerCancelEvent_PointerEvent__PointerEventDescription: function _PointerCancelEvent_PointerEvent__PointerEventDescription() {
    },
    _PointerCancelEvent_PointerEvent__PointerEventDescription__CopyPointerCancelEvent: function _PointerCancelEvent_PointerEvent__PointerEventDescription__CopyPointerCancelEvent() {
    },
    _PointerEnterEvent_PointerEvent__PointerEventDescription: function _PointerEnterEvent_PointerEvent__PointerEventDescription() {
    },
    _PointerEnterEvent_PointerEvent__PointerEventDescription__CopyPointerEnterEvent: function _PointerEnterEvent_PointerEvent__PointerEventDescription__CopyPointerEnterEvent() {
    },
    _PointerEvent_Object_Diagnosticable: function _PointerEvent_Object_Diagnosticable() {
    },
    _PointerExitEvent_PointerEvent__PointerEventDescription: function _PointerExitEvent_PointerEvent__PointerEventDescription() {
    },
    _PointerExitEvent_PointerEvent__PointerEventDescription__CopyPointerExitEvent: function _PointerExitEvent_PointerEvent__PointerEventDescription__CopyPointerExitEvent() {
    },
    __TransformedPointerCancelEvent__TransformedPointerEvent__CopyPointerCancelEvent: function __TransformedPointerCancelEvent__TransformedPointerEvent__CopyPointerCancelEvent() {
    },
    __TransformedPointerEnterEvent__TransformedPointerEvent__CopyPointerEnterEvent: function __TransformedPointerEnterEvent__TransformedPointerEvent__CopyPointerEnterEvent() {
    },
    __TransformedPointerEvent__AbstractPointerEvent_Diagnosticable: function __TransformedPointerEvent__AbstractPointerEvent_Diagnosticable() {
    },
    __TransformedPointerEvent__AbstractPointerEvent_Diagnosticable__PointerEventDescription: function __TransformedPointerEvent__AbstractPointerEvent_Diagnosticable__PointerEventDescription() {
    },
    __TransformedPointerExitEvent__TransformedPointerEvent__CopyPointerExitEvent: function __TransformedPointerExitEvent__TransformedPointerEvent__CopyPointerExitEvent() {
    },
    DeviceGestureSettings: function DeviceGestureSettings(t0) {
      this.touchSlop = t0;
    },
    HitTestResult$() {
      var t1 = A._setArrayType([], type$.JSArray_HitTestEntry_HitTestTarget),
        t2 = new A.Matrix4(new Float64Array(16));
      t2.setIdentity$0();
      return new A.HitTestResult(t1, A._setArrayType([t2], type$.JSArray_Matrix4), A._setArrayType([], type$.JSArray__TransformPart));
    },
    HitTestEntry: function HitTestEntry(t0, t1) {
      this.target = t0;
      this._transform = null;
      this.$ti = t1;
    },
    _TransformPart: function _TransformPart() {
    },
    _MatrixTransformPart: function _MatrixTransformPart(t0) {
      this.matrix = t0;
    },
    _OffsetTransformPart: function _OffsetTransformPart(t0) {
      this.offset = t0;
    },
    HitTestResult: function HitTestResult(t0, t1, t2) {
      this._path = t0;
      this._transforms = t1;
      this._localTransforms = t2;
    },
    LongPressGestureRecognizer$(debugOwner, duration, supportedDevices) {
      var t1 = duration == null ? B.Duration_500000 : duration,
        t2 = type$.int,
        t3 = A.HashSet_HashSet(t2);
      return new A.LongPressGestureRecognizer(t1, null, B.GestureRecognizerState_0, A.LinkedHashMap_LinkedHashMap$_empty(t2, type$.GestureArenaEntry), t3, debugOwner, supportedDevices, A.long_press_LongPressGestureRecognizer__defaultButtonAcceptBehavior$closure(), A.LinkedHashMap_LinkedHashMap$_empty(t2, type$.PointerDeviceKind));
    },
    LongPressGestureRecognizer__defaultButtonAcceptBehavior(buttons) {
      return buttons === 1 || buttons === 2 || buttons === 4;
    },
    LongPressStartDetails: function LongPressStartDetails(t0) {
      this.localPosition = t0;
    },
    LongPressMoveUpdateDetails: function LongPressMoveUpdateDetails(t0) {
      this.localPosition = t0;
    },
    LongPressEndDetails: function LongPressEndDetails(t0, t1) {
      this.localPosition = t0;
      this.velocity = t1;
    },
    LongPressGestureRecognizer: function LongPressGestureRecognizer(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _._longPressAccepted = false;
      _._velocityTracker = _.onTertiaryLongPressEnd = _.onTertiaryLongPressUp = _.onTertiaryLongPressMoveUpdate = _.onTertiaryLongPressStart = _.onTertiaryLongPress = _.onTertiaryLongPressCancel = _.onTertiaryLongPressDown = _.onSecondaryLongPressEnd = _.onSecondaryLongPressUp = _.onSecondaryLongPressMoveUpdate = _.onSecondaryLongPressStart = _.onSecondaryLongPress = _.onSecondaryLongPressCancel = _.onSecondaryLongPressDown = _.onLongPressEnd = _.onLongPressUp = _.onLongPressMoveUpdate = _.onLongPressStart = _.onLongPress = _.onLongPressCancel = _.onLongPressDown = _._long_press$_initialButtons = _._longPressOrigin = null;
      _.deadline = t0;
      _.postAcceptSlopTolerance = t1;
      _._recognizer$_state = t2;
      _._initialPosition = _._primaryPointer = null;
      _._gestureAccepted = false;
      _._recognizer$_timer = null;
      _._entries = t3;
      _._trackedPointers = t4;
      _._team = null;
      _.debugOwner = t5;
      _.gestureSettings = null;
      _.supportedDevices = t6;
      _._allowedButtonsFilter = t7;
      _._pointerToKind = t8;
    },
    LongPressGestureRecognizer__checkLongPressStart_closure: function LongPressGestureRecognizer__checkLongPressStart_closure(t0, t1) {
      this.$this = t0;
      this.details = t1;
    },
    LongPressGestureRecognizer__checkLongPressMoveUpdate_closure: function LongPressGestureRecognizer__checkLongPressMoveUpdate_closure(t0, t1) {
      this.$this = t0;
      this.details = t1;
    },
    LongPressGestureRecognizer__checkLongPressEnd_closure: function LongPressGestureRecognizer__checkLongPressEnd_closure(t0, t1) {
      this.$this = t0;
      this.details = t1;
    },
    _Vector: function _Vector(t0, t1, t2) {
      this._lsq_solver$_offset = t0;
      this._lsq_solver$_length = t1;
      this._lsq_solver$_elements = t2;
    },
    _Matrix: function _Matrix(t0, t1) {
      this._columns = t0;
      this._lsq_solver$_elements = t1;
    },
    PolynomialFit: function PolynomialFit(t0) {
      this.coefficients = t0;
      this.__PolynomialFit_confidence_A = $;
    },
    LeastSquaresSolver: function LeastSquaresSolver(t0, t1, t2) {
      this.x = t0;
      this.y = t1;
      this.w = t2;
    },
    DragGestureRecognizer__defaultBuilder($event) {
      return new A.VelocityTracker($event.get$kind(), A.List_List$filled(20, null, false, type$.nullable__PointAtTime));
    },
    DragGestureRecognizer__defaultButtonAcceptBehavior(buttons) {
      return buttons === 1;
    },
    VerticalDragGestureRecognizer$(debugOwner, supportedDevices) {
      var t1 = type$.int,
        t2 = A.HashSet_HashSet(t1);
      return new A.VerticalDragGestureRecognizer(B.DragStartBehavior_1, A.monodrag_DragGestureRecognizer__defaultBuilder$closure(), B._DragState_0, A.LinkedHashMap_LinkedHashMap$_empty(t1, type$.VelocityTracker), A.LinkedHashSet_LinkedHashSet$_empty(t1), A.LinkedHashMap_LinkedHashMap$_empty(t1, type$.GestureArenaEntry), t2, debugOwner, supportedDevices, A.monodrag_DragGestureRecognizer__defaultButtonAcceptBehavior$closure(), A.LinkedHashMap_LinkedHashMap$_empty(t1, type$.PointerDeviceKind));
    },
    HorizontalDragGestureRecognizer$(debugOwner, supportedDevices) {
      var t1 = type$.int,
        t2 = A.HashSet_HashSet(t1);
      return new A.HorizontalDragGestureRecognizer(B.DragStartBehavior_1, A.monodrag_DragGestureRecognizer__defaultBuilder$closure(), B._DragState_0, A.LinkedHashMap_LinkedHashMap$_empty(t1, type$.VelocityTracker), A.LinkedHashSet_LinkedHashSet$_empty(t1), A.LinkedHashMap_LinkedHashMap$_empty(t1, type$.GestureArenaEntry), t2, debugOwner, supportedDevices, A.monodrag_DragGestureRecognizer__defaultButtonAcceptBehavior$closure(), A.LinkedHashMap_LinkedHashMap$_empty(t1, type$.PointerDeviceKind));
    },
    _DragState: function _DragState(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    DragGestureRecognizer: function DragGestureRecognizer() {
    },
    DragGestureRecognizer__checkDown_closure: function DragGestureRecognizer__checkDown_closure(t0, t1) {
      this.$this = t0;
      this.details = t1;
    },
    DragGestureRecognizer__checkStart_closure: function DragGestureRecognizer__checkStart_closure(t0, t1) {
      this.$this = t0;
      this.details = t1;
    },
    DragGestureRecognizer__checkUpdate_closure: function DragGestureRecognizer__checkUpdate_closure(t0, t1) {
      this.$this = t0;
      this.details = t1;
    },
    DragGestureRecognizer__checkEnd_closure: function DragGestureRecognizer__checkEnd_closure(t0, t1) {
      this.estimate = t0;
      this.velocity = t1;
    },
    DragGestureRecognizer__checkEnd_closure0: function DragGestureRecognizer__checkEnd_closure0(t0) {
      this.estimate = t0;
    },
    DragGestureRecognizer__checkEnd_closure1: function DragGestureRecognizer__checkEnd_closure1(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    VerticalDragGestureRecognizer: function VerticalDragGestureRecognizer(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _.dragStartBehavior = t0;
      _.maxFlingVelocity = _.minFlingVelocity = _.minFlingDistance = _.onCancel = _.onEnd = _.onUpdate = _.onStart = _.onDown = null;
      _.velocityTrackerBuilder = t1;
      _._monodrag$_state = t2;
      _.__DragGestureRecognizer__pendingDragOffset_A = _.__DragGestureRecognizer__initialPosition_A = $;
      _._lastTransform = _._initialButtons = _._lastPendingEventTimestamp = null;
      _.__DragGestureRecognizer__globalDistanceMoved_A = $;
      _._velocityTrackers = t3;
      _._acceptedActivePointers = t4;
      _._entries = t5;
      _._trackedPointers = t6;
      _._team = null;
      _.debugOwner = t7;
      _.gestureSettings = null;
      _.supportedDevices = t8;
      _._allowedButtonsFilter = t9;
      _._pointerToKind = t10;
    },
    HorizontalDragGestureRecognizer: function HorizontalDragGestureRecognizer(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _.dragStartBehavior = t0;
      _.maxFlingVelocity = _.minFlingVelocity = _.minFlingDistance = _.onCancel = _.onEnd = _.onUpdate = _.onStart = _.onDown = null;
      _.velocityTrackerBuilder = t1;
      _._monodrag$_state = t2;
      _.__DragGestureRecognizer__pendingDragOffset_A = _.__DragGestureRecognizer__initialPosition_A = $;
      _._lastTransform = _._initialButtons = _._lastPendingEventTimestamp = null;
      _.__DragGestureRecognizer__globalDistanceMoved_A = $;
      _._velocityTrackers = t3;
      _._acceptedActivePointers = t4;
      _._entries = t5;
      _._trackedPointers = t6;
      _._team = null;
      _.debugOwner = t7;
      _.gestureSettings = null;
      _.supportedDevices = t8;
      _._allowedButtonsFilter = t9;
      _._pointerToKind = t10;
    },
    PanGestureRecognizer: function PanGestureRecognizer(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _.dragStartBehavior = t0;
      _.maxFlingVelocity = _.minFlingVelocity = _.minFlingDistance = _.onCancel = _.onEnd = _.onUpdate = _.onStart = _.onDown = null;
      _.velocityTrackerBuilder = t1;
      _._monodrag$_state = t2;
      _.__DragGestureRecognizer__pendingDragOffset_A = _.__DragGestureRecognizer__initialPosition_A = $;
      _._lastTransform = _._initialButtons = _._lastPendingEventTimestamp = null;
      _.__DragGestureRecognizer__globalDistanceMoved_A = $;
      _._velocityTrackers = t3;
      _._acceptedActivePointers = t4;
      _._entries = t5;
      _._trackedPointers = t6;
      _._team = null;
      _.debugOwner = t7;
      _.gestureSettings = null;
      _.supportedDevices = t8;
      _._allowedButtonsFilter = t9;
      _._pointerToKind = t10;
    },
    DoubleTapGestureRecognizer__defaultButtonAcceptBehavior(buttons) {
      return buttons === 1;
    },
    _CountdownZoned: function _CountdownZoned() {
      this._timeout = false;
    },
    _TapTracker: function _TapTracker(t0, t1, t2, t3, t4) {
      var _ = this;
      _.pointer = t0;
      _.entry = t1;
      _._initialGlobalPosition = t2;
      _.initialButtons = t3;
      _._doubleTapMinTimeCountdown = t4;
      _._isTrackingPointer = false;
    },
    DoubleTapGestureRecognizer: function DoubleTapGestureRecognizer(t0, t1, t2, t3, t4) {
      var _ = this;
      _._firstTap = _._doubleTapTimer = _.onDoubleTapCancel = _.onDoubleTap = _.onDoubleTapDown = null;
      _._trackers = t0;
      _.debugOwner = t1;
      _.gestureSettings = null;
      _.supportedDevices = t2;
      _._allowedButtonsFilter = t3;
      _._pointerToKind = t4;
    },
    PointerRouter: function PointerRouter(t0, t1) {
      this._routeMap = t0;
      this._globalRoutes = t1;
    },
    PointerRouter_addRoute_closure: function PointerRouter_addRoute_closure() {
    },
    PointerRouter__dispatchEventToRoutes_closure: function PointerRouter__dispatchEventToRoutes_closure(t0, t1, t2) {
      this.$this = t0;
      this.referenceRoutes = t1;
      this.event = t2;
    },
    PointerSignalResolver: function PointerSignalResolver() {
      this._currentEvent = this._firstRegisteredCallback = null;
    },
    GestureRecognizer__defaultButtonAcceptBehavior(buttons) {
      return true;
    },
    DragStartBehavior: function DragStartBehavior(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    GestureRecognizer: function GestureRecognizer() {
    },
    OneSequenceGestureRecognizer: function OneSequenceGestureRecognizer() {
    },
    GestureRecognizerState: function GestureRecognizerState(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    PrimaryPointerGestureRecognizer: function PrimaryPointerGestureRecognizer() {
    },
    PrimaryPointerGestureRecognizer_addAllowedPointer_closure: function PrimaryPointerGestureRecognizer_addAllowedPointer_closure(t0, t1) {
      this.$this = t0;
      this.event = t1;
    },
    OffsetPair: function OffsetPair(t0, t1) {
      this.local = t0;
      this.global = t1;
    },
    _GestureRecognizer_GestureArenaMember_DiagnosticableTreeMixin: function _GestureRecognizer_GestureArenaMember_DiagnosticableTreeMixin() {
    },
    TapGestureRecognizer$(debugOwner, supportedDevices) {
      var t1 = type$.int,
        t2 = A.HashSet_HashSet(t1);
      return new A.TapGestureRecognizer(B.Duration_100000, 18, B.GestureRecognizerState_0, A.LinkedHashMap_LinkedHashMap$_empty(t1, type$.GestureArenaEntry), t2, debugOwner, supportedDevices, A.recognizer_GestureRecognizer__defaultButtonAcceptBehavior$closure(), A.LinkedHashMap_LinkedHashMap$_empty(t1, type$.PointerDeviceKind));
    },
    TapDownDetails: function TapDownDetails(t0, t1) {
      this.globalPosition = t0;
      this.localPosition = t1;
    },
    TapUpDetails: function TapUpDetails() {
    },
    BaseTapGestureRecognizer: function BaseTapGestureRecognizer() {
    },
    TapGestureRecognizer: function TapGestureRecognizer(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.onTertiaryTapCancel = _.onTertiaryTapUp = _.onTertiaryTapDown = _.onSecondaryTapCancel = _.onSecondaryTapUp = _.onSecondaryTapDown = _.onSecondaryTap = _.onTapCancel = _.onTap = _.onTapUp = _.onTapDown = null;
      _._wonArenaForPrimaryPointer = _._sentTapDown = false;
      _._up = _._down = null;
      _.deadline = t0;
      _.postAcceptSlopTolerance = t1;
      _._recognizer$_state = t2;
      _._initialPosition = _._primaryPointer = null;
      _._gestureAccepted = false;
      _._recognizer$_timer = null;
      _._entries = t3;
      _._trackedPointers = t4;
      _._team = null;
      _.debugOwner = t5;
      _.gestureSettings = null;
      _.supportedDevices = t6;
      _._allowedButtonsFilter = t7;
      _._pointerToKind = t8;
    },
    TapGestureRecognizer_handleTapDown_closure: function TapGestureRecognizer_handleTapDown_closure(t0, t1) {
      this.$this = t0;
      this.details = t1;
    },
    TapGestureRecognizer_handleTapUp_closure: function TapGestureRecognizer_handleTapUp_closure(t0, t1) {
      this.$this = t0;
      this.details = t1;
    },
    _CombiningGestureArenaEntry: function _CombiningGestureArenaEntry(t0, t1) {
      this._combiner = t0;
      this._team$_member = t1;
    },
    _CombiningGestureArenaMember: function _CombiningGestureArenaMember(t0, t1, t2) {
      var _ = this;
      _._team$_owner = t0;
      _._members = t1;
      _._team$_pointer = t2;
      _._resolved = false;
      _._entry = _._winner = null;
    },
    GestureArenaTeam: function GestureArenaTeam(t0) {
      this._combiners = t0;
    },
    GestureArenaTeam_add_closure: function GestureArenaTeam_add_closure(t0, t1) {
      this.$this = t0;
      this.pointer = t1;
    },
    IOSScrollViewFlingVelocityTracker$(kind) {
      var t1 = type$.nullable__PointAtTime;
      return new A.IOSScrollViewFlingVelocityTracker(A.List_List$filled(20, null, false, t1), kind, A.List_List$filled(20, null, false, t1));
    },
    Velocity: function Velocity(t0) {
      this.pixelsPerSecond = t0;
    },
    VelocityEstimate: function VelocityEstimate(t0, t1, t2, t3) {
      var _ = this;
      _.pixelsPerSecond = t0;
      _.confidence = t1;
      _.duration = t2;
      _.offset = t3;
    },
    _PointAtTime: function _PointAtTime(t0, t1) {
      this.time = t0;
      this.point = t1;
    },
    VelocityTracker: function VelocityTracker(t0, t1) {
      this.kind = t0;
      this._samples = t1;
      this._velocity_tracker$_index = 0;
    },
    IOSScrollViewFlingVelocityTracker: function IOSScrollViewFlingVelocityTracker(t0, t1, t2) {
      var _ = this;
      _._touchSamples = t0;
      _.kind = t1;
      _._samples = t2;
      _._velocity_tracker$_index = 0;
    },
    MacOSScrollViewFlingVelocityTracker: function MacOSScrollViewFlingVelocityTracker(t0, t1, t2) {
      var _ = this;
      _._touchSamples = t0;
      _.kind = t1;
      _._samples = t2;
      _._velocity_tracker$_index = 0;
    },
    _ActionButton: function _ActionButton() {
    },
    _ActionButton_build_closure: function _ActionButton_build_closure(t0, t1) {
      this.$this = t0;
      this.context = t1;
    },
    _ActionIcon: function _ActionIcon(t0, t1, t2, t3) {
      var _ = this;
      _.iconBuilderCallback = t0;
      _.getIcon = t1;
      _.getAndroidSemanticsLabel = t2;
      _.key = t3;
    },
    BackButtonIcon: function BackButtonIcon(t0) {
      this.key = t0;
    },
    BackButtonIcon_build_closure: function BackButtonIcon_build_closure() {
    },
    BackButtonIcon_build_closure0: function BackButtonIcon_build_closure0() {
    },
    BackButtonIcon_build_closure1: function BackButtonIcon_build_closure1() {
    },
    BackButton: function BackButton(t0, t1, t2, t3) {
      var _ = this;
      _.icon = t0;
      _.onPressed = t1;
      _.style = t2;
      _.key = t3;
    },
    DrawerButtonIcon: function DrawerButtonIcon(t0) {
      this.key = t0;
    },
    DrawerButtonIcon_build_closure: function DrawerButtonIcon_build_closure() {
    },
    DrawerButtonIcon_build_closure0: function DrawerButtonIcon_build_closure0() {
    },
    DrawerButtonIcon_build_closure1: function DrawerButtonIcon_build_closure1() {
    },
    DrawerButton: function DrawerButton(t0, t1, t2, t3) {
      var _ = this;
      _.icon = t0;
      _.onPressed = t1;
      _.style = t2;
      _.key = t3;
    },
    EndDrawerButtonIcon: function EndDrawerButtonIcon(t0) {
      this.key = t0;
    },
    EndDrawerButtonIcon_build_closure: function EndDrawerButtonIcon_build_closure() {
    },
    EndDrawerButtonIcon_build_closure0: function EndDrawerButtonIcon_build_closure0() {
    },
    EndDrawerButtonIcon_build_closure1: function EndDrawerButtonIcon_build_closure1() {
    },
    EndDrawerButton: function EndDrawerButton(t0, t1, t2, t3) {
      var _ = this;
      _.icon = t0;
      _.onPressed = t1;
      _.style = t2;
      _.key = t3;
    },
    ActionIconThemeData_lerp(a, b, t) {
      var t2, t3, t4, t5, _null = null,
        t1 = a == null;
      if (t1 && b == null)
        return _null;
      t2 = t < 0.5;
      if (t2)
        t3 = t1 ? _null : a.backButtonIconBuilder;
      else
        t3 = b == null ? _null : b.backButtonIconBuilder;
      if (t2)
        t4 = t1 ? _null : a.closeButtonIconBuilder;
      else
        t4 = b == null ? _null : b.closeButtonIconBuilder;
      if (t2)
        t5 = t1 ? _null : a.drawerButtonIconBuilder;
      else
        t5 = b == null ? _null : b.drawerButtonIconBuilder;
      if (t2)
        t1 = t1 ? _null : a.endDrawerButtonIconBuilder;
      else
        t1 = b == null ? _null : b.endDrawerButtonIconBuilder;
      return new A.ActionIconThemeData(t3, t4, t5, t1);
    },
    ActionIconThemeData: function ActionIconThemeData(t0, t1, t2, t3) {
      var _ = this;
      _.backButtonIconBuilder = t0;
      _.closeButtonIconBuilder = t1;
      _.drawerButtonIconBuilder = t2;
      _.endDrawerButtonIconBuilder = t3;
    },
    _ActionIconThemeData_Object_Diagnosticable: function _ActionIconThemeData_Object_Diagnosticable() {
    },
    MaterialApp_createMaterialHeroController() {
      return new A.HeroController(new A.MaterialApp_createMaterialHeroController_closure(), A.LinkedHashMap_LinkedHashMap$_empty(type$.Object, type$._HeroFlight));
    },
    ThemeMode: function ThemeMode(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    MaterialApp: function MaterialApp(t0, t1, t2, t3) {
      var _ = this;
      _.home = t0;
      _.title = t1;
      _.theme = t2;
      _.key = t3;
    },
    MaterialApp_createMaterialHeroController_closure: function MaterialApp_createMaterialHeroController_closure() {
    },
    MaterialScrollBehavior: function MaterialScrollBehavior() {
    },
    _MaterialAppState: function _MaterialAppState() {
      this.___MaterialAppState__heroController_A = $;
      this._element = this._widget = null;
    },
    _MaterialAppState__buildWidgetApp_closure: function _MaterialAppState__buildWidgetApp_closure() {
    },
    _MaterialAppState_build_closure: function _MaterialAppState_build_closure() {
    },
    AppBar$(actions, leading, title) {
      return new A.AppBar(leading, title, actions, new A._PreferredAppBarSize(null, null, 1 / 0, 56), null);
    },
    AppBar_preferredHeightFor(context, preferredSize) {
      var t1 = A.Theme_of(context).appBarTheme.toolbarHeight;
      if (t1 == null)
        t1 = 56;
      return t1 + 0;
    },
    _ToolbarContainerLayout: function _ToolbarContainerLayout(t0) {
      this.toolbarHeight = t0;
    },
    _PreferredAppBarSize: function _PreferredAppBarSize(t0, t1, t2, t3) {
      var _ = this;
      _.toolbarHeight = t0;
      _.bottomHeight = t1;
      _._dx = t2;
      _._dy = t3;
    },
    AppBar: function AppBar(t0, t1, t2, t3, t4) {
      var _ = this;
      _.leading = t0;
      _.title = t1;
      _.actions = t2;
      _.preferredSize = t3;
      _.key = t4;
    },
    AppBar__getEffectiveCenterTitle_platformCenter: function AppBar__getEffectiveCenterTitle_platformCenter(t0, t1) {
      this.$this = t0;
      this.theme = t1;
    },
    _AppBarState: function _AppBarState() {
      var _ = this;
      _._scrollNotificationObserver = null;
      _._scrolledUnder = false;
      _._element = _._widget = null;
    },
    _AppBarState__handleScrollNotification_closure: function _AppBarState__handleScrollNotification_closure() {
    },
    _AppBarTitleBox: function _AppBarTitleBox(t0, t1) {
      this.child = t0;
      this.key = t1;
    },
    _RenderAppBarTitleBox: function _RenderAppBarTitleBox(t0, t1, t2, t3) {
      var _ = this;
      _._shifted_box$_resolvedAlignment = null;
      _._shifted_box$_alignment = t0;
      _._shifted_box$_textDirection = t1;
      _.RenderObjectWithChildMixin__child = t2;
      _.parentData = _._cachedBaselines = _._size = _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t3;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    _AppBarDefaultsM2: function _AppBarDefaultsM2(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15) {
      var _ = this;
      _.context = t0;
      _.___AppBarDefaultsM2__colors_FI = _.___AppBarDefaultsM2__theme_FI = $;
      _.backgroundColor = t1;
      _.foregroundColor = t2;
      _.elevation = t3;
      _.scrolledUnderElevation = t4;
      _.shadowColor = t5;
      _.surfaceTintColor = t6;
      _.shape = t7;
      _.iconTheme = t8;
      _.actionsIconTheme = t9;
      _.centerTitle = t10;
      _.titleSpacing = t11;
      _.toolbarHeight = t12;
      _.toolbarTextStyle = t13;
      _.titleTextStyle = t14;
      _.systemOverlayStyle = t15;
    },
    AppBarTheme$(actionsIconTheme, backgroundColor, centerTitle, elevation, foregroundColor, iconTheme, scrolledUnderElevation, shadowColor, shape, surfaceTintColor, systemOverlayStyle, titleSpacing, titleTextStyle, toolbarHeight, toolbarTextStyle) {
      return new A.AppBarTheme(backgroundColor == null ? null : backgroundColor, foregroundColor, elevation, scrolledUnderElevation, shadowColor, surfaceTintColor, shape, iconTheme, actionsIconTheme, centerTitle, titleSpacing, toolbarHeight, toolbarTextStyle, titleTextStyle, systemOverlayStyle);
    },
    AppBarTheme_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15;
      if (a === b)
        return a;
      t1 = A.Color_lerp(a.backgroundColor, b.backgroundColor, t);
      t2 = A.Color_lerp(a.foregroundColor, b.foregroundColor, t);
      t3 = A.lerpDouble(a.elevation, b.elevation, t);
      t4 = A.lerpDouble(a.scrolledUnderElevation, b.scrolledUnderElevation, t);
      t5 = A.Color_lerp(a.shadowColor, b.shadowColor, t);
      t6 = A.Color_lerp(a.surfaceTintColor, b.surfaceTintColor, t);
      t7 = A.ShapeBorder_lerp(a.shape, b.shape, t);
      t8 = A.IconThemeData_lerp(a.iconTheme, b.iconTheme, t);
      t9 = A.IconThemeData_lerp(a.actionsIconTheme, b.actionsIconTheme, t);
      t10 = t < 0.5;
      if (t10)
        t11 = a.centerTitle;
      else
        t11 = b.centerTitle;
      t12 = A.lerpDouble(a.titleSpacing, b.titleSpacing, t);
      t13 = A.lerpDouble(a.toolbarHeight, b.toolbarHeight, t);
      t14 = A.TextStyle_lerp(a.toolbarTextStyle, b.toolbarTextStyle, t);
      t15 = A.TextStyle_lerp(a.titleTextStyle, b.titleTextStyle, t);
      if (t10)
        t10 = a.systemOverlayStyle;
      else
        t10 = b.systemOverlayStyle;
      return A.AppBarTheme$(t9, t1, t11, t3, t2, t8, t4, t5, t7, t6, t10, t12, t15, t13, t14);
    },
    AppBarTheme: function AppBarTheme(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14) {
      var _ = this;
      _.backgroundColor = t0;
      _.foregroundColor = t1;
      _.elevation = t2;
      _.scrolledUnderElevation = t3;
      _.shadowColor = t4;
      _.surfaceTintColor = t5;
      _.shape = t6;
      _.iconTheme = t7;
      _.actionsIconTheme = t8;
      _.centerTitle = t9;
      _.titleSpacing = t10;
      _.toolbarHeight = t11;
      _.toolbarTextStyle = t12;
      _.titleTextStyle = t13;
      _.systemOverlayStyle = t14;
    },
    _AppBarTheme_Object_Diagnosticable: function _AppBarTheme_Object_Diagnosticable() {
    },
    _maxBy(input, keyFunc) {
      var maxKey, _i, value, key,
        maxValue = A._Cell$();
      for (maxKey = null, _i = 0; _i < 4; ++_i) {
        value = input[_i];
        key = keyFunc.call$1(value);
        if (maxKey == null || key > maxKey) {
          maxValue.__late_helper$_value = value;
          maxKey = key;
        }
      }
      return maxValue._readLocal$0();
    },
    MaterialPointArcTween: function MaterialPointArcTween(t0, t1) {
      var _ = this;
      _._arc$_dirty = true;
      _._endAngle = _._beginAngle = _._radius = _._center = null;
      _.begin = t0;
      _.end = t1;
    },
    MaterialPointArcTween__initialize_sweepAngle: function MaterialPointArcTween__initialize_sweepAngle(t0, t1) {
      this.$this = t0;
      this.distanceFromAtoB = t1;
    },
    _CornerId: function _CornerId(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    _Diagonal: function _Diagonal(t0, t1) {
      this.beginId = t0;
      this.endId = t1;
    },
    MaterialRectArcTween: function MaterialRectArcTween(t0, t1) {
      var _ = this;
      _._arc$_dirty = true;
      _.__MaterialRectArcTween__endArc_A = _.__MaterialRectArcTween__beginArc_A = $;
      _.begin = t0;
      _.end = t1;
    },
    MaterialRectArcTween__initialize_closure: function MaterialRectArcTween__initialize_closure(t0, t1) {
      this.$this = t0;
      this.centersVector = t1;
    },
    BadgeThemeData_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, t7;
      if (a === b)
        return a;
      t1 = A.Color_lerp(a.backgroundColor, b.backgroundColor, t);
      t2 = A.Color_lerp(a.textColor, b.textColor, t);
      t3 = A.lerpDouble(a.smallSize, b.smallSize, t);
      t4 = A.lerpDouble(a.largeSize, b.largeSize, t);
      t5 = A.TextStyle_lerp(a.textStyle, b.textStyle, t);
      t6 = A.EdgeInsetsGeometry_lerp(a.padding, b.padding, t);
      t7 = A.AlignmentGeometry_lerp(a.alignment, b.alignment, t);
      return new A.BadgeThemeData(t1, t2, t3, t4, t5, t6, t7, A.Offset_lerp(a.offset, b.offset, t));
    },
    BadgeThemeData: function BadgeThemeData(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.backgroundColor = t0;
      _.textColor = t1;
      _.smallSize = t2;
      _.largeSize = t3;
      _.textStyle = t4;
      _.padding = t5;
      _.alignment = t6;
      _.offset = t7;
    },
    _BadgeThemeData_Object_Diagnosticable: function _BadgeThemeData_Object_Diagnosticable() {
    },
    MaterialBannerThemeData: function MaterialBannerThemeData(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.backgroundColor = t0;
      _.surfaceTintColor = t1;
      _.shadowColor = t2;
      _.dividerColor = t3;
      _.contentTextStyle = t4;
      _.elevation = t5;
      _.padding = t6;
      _.leadingPadding = t7;
    },
    _MaterialBannerThemeData_Object_Diagnosticable: function _MaterialBannerThemeData_Object_Diagnosticable() {
    },
    BottomAppBarTheme_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6;
      if (a === b)
        return a;
      t1 = A.Color_lerp(a.color, b.color, t);
      t2 = A.lerpDouble(a.elevation, b.elevation, t);
      if (t < 0.5)
        t3 = a.shape;
      else
        t3 = b.shape;
      t4 = A.lerpDouble(a.height, b.height, t);
      t5 = A.Color_lerp(a.surfaceTintColor, b.surfaceTintColor, t);
      t6 = A.Color_lerp(a.shadowColor, b.shadowColor, t);
      return new A.BottomAppBarTheme(t1, t2, t3, t4, t5, t6, A.EdgeInsetsGeometry_lerp(a.padding, b.padding, t));
    },
    BottomAppBarTheme: function BottomAppBarTheme(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.color = t0;
      _.elevation = t1;
      _.shape = t2;
      _.height = t3;
      _.surfaceTintColor = t4;
      _.shadowColor = t5;
      _.padding = t6;
    },
    _BottomAppBarTheme_Object_Diagnosticable: function _BottomAppBarTheme_Object_Diagnosticable() {
    },
    BottomNavigationBarThemeData_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14;
      if (a === b)
        return a;
      t1 = A.Color_lerp(a.backgroundColor, b.backgroundColor, t);
      t2 = A.lerpDouble(a.elevation, b.elevation, t);
      t3 = A.IconThemeData_lerp(a.selectedIconTheme, b.selectedIconTheme, t);
      t4 = A.IconThemeData_lerp(a.unselectedIconTheme, b.unselectedIconTheme, t);
      t5 = A.Color_lerp(a.selectedItemColor, b.selectedItemColor, t);
      t6 = A.Color_lerp(a.unselectedItemColor, b.unselectedItemColor, t);
      t7 = A.TextStyle_lerp(a.selectedLabelStyle, b.selectedLabelStyle, t);
      t8 = A.TextStyle_lerp(a.unselectedLabelStyle, b.unselectedLabelStyle, t);
      t9 = t < 0.5;
      if (t9)
        t10 = a.showSelectedLabels;
      else
        t10 = b.showSelectedLabels;
      if (t9)
        t11 = a.showUnselectedLabels;
      else
        t11 = b.showUnselectedLabels;
      if (t9)
        t12 = a.type;
      else
        t12 = b.type;
      if (t9)
        t13 = a.enableFeedback;
      else
        t13 = b.enableFeedback;
      if (t9)
        t14 = a.landscapeLayout;
      else
        t14 = b.landscapeLayout;
      if (t9)
        t9 = a.mouseCursor;
      else
        t9 = b.mouseCursor;
      return new A.BottomNavigationBarThemeData(t1, t2, t3, t4, t5, t6, t7, t8, t10, t11, t12, t13, t14, t9);
    },
    BottomNavigationBarThemeData: function BottomNavigationBarThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13) {
      var _ = this;
      _.backgroundColor = t0;
      _.elevation = t1;
      _.selectedIconTheme = t2;
      _.unselectedIconTheme = t3;
      _.selectedItemColor = t4;
      _.unselectedItemColor = t5;
      _.selectedLabelStyle = t6;
      _.unselectedLabelStyle = t7;
      _.showSelectedLabels = t8;
      _.showUnselectedLabels = t9;
      _.type = t10;
      _.enableFeedback = t11;
      _.landscapeLayout = t12;
      _.mouseCursor = t13;
    },
    _BottomNavigationBarThemeData_Object_Diagnosticable: function _BottomNavigationBarThemeData_Object_Diagnosticable() {
    },
    BottomSheetThemeData_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9;
      if (a === b)
        return a;
      t1 = A.Color_lerp(a.backgroundColor, b.backgroundColor, t);
      t2 = A.Color_lerp(a.surfaceTintColor, b.surfaceTintColor, t);
      t3 = A.lerpDouble(a.elevation, b.elevation, t);
      t4 = A.Color_lerp(a.modalBackgroundColor, b.modalBackgroundColor, t);
      t5 = A.Color_lerp(a.modalBarrierColor, b.modalBarrierColor, t);
      t6 = A.Color_lerp(a.shadowColor, b.shadowColor, t);
      t7 = A.lerpDouble(a.modalElevation, b.modalElevation, t);
      t8 = A.ShapeBorder_lerp(a.shape, b.shape, t);
      if (t < 0.5)
        t9 = a.clipBehavior;
      else
        t9 = b.clipBehavior;
      return new A.BottomSheetThemeData(t1, t2, t3, t4, t5, t6, t7, t8, t9, A.BoxConstraints_lerp(a.constraints, b.constraints, t));
    },
    BottomSheetThemeData: function BottomSheetThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _.backgroundColor = t0;
      _.surfaceTintColor = t1;
      _.elevation = t2;
      _.modalBackgroundColor = t3;
      _.modalBarrierColor = t4;
      _.shadowColor = t5;
      _.modalElevation = t6;
      _.shape = t7;
      _.clipBehavior = t8;
      _.constraints = t9;
    },
    _BottomSheetThemeData_Object_Diagnosticable: function _BottomSheetThemeData_Object_Diagnosticable() {
    },
    ButtonBarThemeData_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9;
      if (a === b)
        return a;
      t1 = t < 0.5;
      if (t1)
        t2 = a.alignment;
      else
        t2 = b.alignment;
      if (t1)
        t3 = a.mainAxisSize;
      else
        t3 = b.mainAxisSize;
      if (t1)
        t4 = a.buttonTextTheme;
      else
        t4 = b.buttonTextTheme;
      t5 = A.lerpDouble(a.buttonMinWidth, b.buttonMinWidth, t);
      t6 = A.lerpDouble(a.buttonHeight, b.buttonHeight, t);
      t7 = A.EdgeInsetsGeometry_lerp(a.buttonPadding, b.buttonPadding, t);
      if (t1)
        t8 = a.buttonAlignedDropdown;
      else
        t8 = b.buttonAlignedDropdown;
      if (t1)
        t9 = a.layoutBehavior;
      else
        t9 = b.layoutBehavior;
      if (t1)
        t1 = a.overflowDirection;
      else
        t1 = b.overflowDirection;
      return new A.ButtonBarThemeData(t2, t3, t4, t5, t6, t7, t8, t9, t1);
    },
    ButtonBarThemeData: function ButtonBarThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.alignment = t0;
      _.mainAxisSize = t1;
      _.buttonTextTheme = t2;
      _.buttonMinWidth = t3;
      _.buttonHeight = t4;
      _.buttonPadding = t5;
      _.buttonAlignedDropdown = t6;
      _.layoutBehavior = t7;
      _.overflowDirection = t8;
    },
    _ButtonBarThemeData_Object_Diagnosticable: function _ButtonBarThemeData_Object_Diagnosticable() {
    },
    ButtonStyle$(alignment, animationDuration, backgroundColor, elevation, enableFeedback, fixedSize, foregroundColor, iconColor, iconSize, maximumSize, minimumSize, mouseCursor, overlayColor, padding, shadowColor, shape, side, splashFactory, surfaceTintColor, tapTargetSize, textStyle, visualDensity) {
      return new A.ButtonStyle(textStyle, backgroundColor, foregroundColor, overlayColor, shadowColor, surfaceTintColor, elevation, padding, minimumSize, fixedSize, maximumSize, iconColor, iconSize, side, shape, mouseCursor, visualDensity, tapTargetSize, animationDuration, enableFeedback, alignment, splashFactory);
    },
    ButtonStyle_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, _null = null;
      if (a == b)
        return a;
      t1 = a == null;
      t2 = t1 ? _null : a.textStyle;
      t3 = b == null;
      t4 = t3 ? _null : b.textStyle;
      t4 = A.MaterialStateProperty_lerp(t2, t4, t, A.text_style_TextStyle_lerp$closure(), type$.nullable_TextStyle);
      t2 = t1 ? _null : a.backgroundColor;
      t5 = t3 ? _null : b.backgroundColor;
      t6 = type$.nullable_Color;
      t5 = A.MaterialStateProperty_lerp(t2, t5, t, A.ui_Color_lerp$closure(), t6);
      t2 = t1 ? _null : a.foregroundColor;
      t2 = A.MaterialStateProperty_lerp(t2, t3 ? _null : b.foregroundColor, t, A.ui_Color_lerp$closure(), t6);
      t7 = t1 ? _null : a.overlayColor;
      t7 = A.MaterialStateProperty_lerp(t7, t3 ? _null : b.overlayColor, t, A.ui_Color_lerp$closure(), t6);
      t8 = t1 ? _null : a.shadowColor;
      t8 = A.MaterialStateProperty_lerp(t8, t3 ? _null : b.shadowColor, t, A.ui_Color_lerp$closure(), t6);
      t9 = t1 ? _null : a.surfaceTintColor;
      t9 = A.MaterialStateProperty_lerp(t9, t3 ? _null : b.surfaceTintColor, t, A.ui_Color_lerp$closure(), t6);
      t10 = t1 ? _null : a.elevation;
      t11 = t3 ? _null : b.elevation;
      t12 = type$.nullable_double;
      t11 = A.MaterialStateProperty_lerp(t10, t11, t, A.ui__lerpDouble$closure(), t12);
      t10 = t1 ? _null : a.padding;
      t13 = t3 ? _null : b.padding;
      t13 = A.MaterialStateProperty_lerp(t10, t13, t, A.edge_insets_EdgeInsetsGeometry_lerp$closure(), type$.nullable_EdgeInsetsGeometry);
      t10 = t1 ? _null : a.minimumSize;
      t14 = t3 ? _null : b.minimumSize;
      t15 = type$.nullable_Size;
      t14 = A.MaterialStateProperty_lerp(t10, t14, t, A.ui_Size_lerp$closure(), t15);
      t10 = t1 ? _null : a.fixedSize;
      t10 = A.MaterialStateProperty_lerp(t10, t3 ? _null : b.fixedSize, t, A.ui_Size_lerp$closure(), t15);
      t16 = t1 ? _null : a.maximumSize;
      t15 = A.MaterialStateProperty_lerp(t16, t3 ? _null : b.maximumSize, t, A.ui_Size_lerp$closure(), t15);
      t16 = t1 ? _null : a.iconColor;
      t6 = A.MaterialStateProperty_lerp(t16, t3 ? _null : b.iconColor, t, A.ui_Color_lerp$closure(), t6);
      t16 = t1 ? _null : a.iconSize;
      t12 = A.MaterialStateProperty_lerp(t16, t3 ? _null : b.iconSize, t, A.ui__lerpDouble$closure(), t12);
      t16 = t1 ? _null : a.side;
      t16 = A.ButtonStyle__lerpSides(t16, t3 ? _null : b.side, t);
      t17 = t1 ? _null : a.shape;
      t18 = t3 ? _null : b.shape;
      t18 = A.MaterialStateProperty_lerp(t17, t18, t, A.borders_OutlinedBorder_lerp$closure(), type$.nullable_OutlinedBorder);
      t17 = t < 0.5;
      if (t17)
        t19 = t1 ? _null : a.mouseCursor;
      else
        t19 = t3 ? _null : b.mouseCursor;
      if (t17)
        t20 = t1 ? _null : a.visualDensity;
      else
        t20 = t3 ? _null : b.visualDensity;
      if (t17)
        t21 = t1 ? _null : a.tapTargetSize;
      else
        t21 = t3 ? _null : b.tapTargetSize;
      if (t17)
        t22 = t1 ? _null : a.animationDuration;
      else
        t22 = t3 ? _null : b.animationDuration;
      if (t17)
        t23 = t1 ? _null : a.enableFeedback;
      else
        t23 = t3 ? _null : b.enableFeedback;
      t24 = t1 ? _null : a.alignment;
      t24 = A.AlignmentGeometry_lerp(t24, t3 ? _null : b.alignment, t);
      if (t17)
        t1 = t1 ? _null : a.splashFactory;
      else
        t1 = t3 ? _null : b.splashFactory;
      return A.ButtonStyle$(t24, t22, t5, t11, t23, t10, t2, t6, t12, t15, t14, t19, t7, t13, t8, t18, t16, t1, t9, t21, t4, t20);
    },
    ButtonStyle__lerpSides(a, b, t) {
      if (a == null && b == null)
        return null;
      return new A._LerpSides(a, b, t);
    },
    ButtonStyle: function ButtonStyle(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21) {
      var _ = this;
      _.textStyle = t0;
      _.backgroundColor = t1;
      _.foregroundColor = t2;
      _.overlayColor = t3;
      _.shadowColor = t4;
      _.surfaceTintColor = t5;
      _.elevation = t6;
      _.padding = t7;
      _.minimumSize = t8;
      _.fixedSize = t9;
      _.maximumSize = t10;
      _.iconColor = t11;
      _.iconSize = t12;
      _.side = t13;
      _.shape = t14;
      _.mouseCursor = t15;
      _.visualDensity = t16;
      _.tapTargetSize = t17;
      _.animationDuration = t18;
      _.enableFeedback = t19;
      _.alignment = t20;
      _.splashFactory = t21;
    },
    _LerpSides: function _LerpSides(t0, t1, t2) {
      this.a = t0;
      this.b = t1;
      this.t = t2;
    },
    _ButtonStyle_Object_Diagnosticable: function _ButtonStyle_Object_Diagnosticable() {
    },
    ButtonStyleButton_scaledPadding(geometry1x, geometry2x, geometry3x, textScaleFactor) {
      var t1;
      if (textScaleFactor <= 1)
        return geometry1x;
      else if (textScaleFactor >= 3)
        return geometry3x;
      else if (textScaleFactor <= 2) {
        t1 = A.EdgeInsetsGeometry_lerp(geometry1x, geometry2x, textScaleFactor - 1);
        t1.toString;
        return t1;
      }
      t1 = A.EdgeInsetsGeometry_lerp(geometry2x, geometry3x, textScaleFactor - 2);
      t1.toString;
      return t1;
    },
    ButtonStyleButton: function ButtonStyleButton() {
    },
    _ButtonStyleState: function _ButtonStyleState(t0, t1) {
      var _ = this;
      _.internalStatesController = _.backgroundColor = _.elevation = _.controller = null;
      _.TickerProviderStateMixin__tickers = t0;
      _.TickerProviderStateMixin__tickerModeNotifier = t1;
      _._element = _._widget = null;
    },
    _ButtonStyleState_handleStatesControllerChange_closure: function _ButtonStyleState_handleStatesControllerChange_closure() {
    },
    _ButtonStyleState_build_effectiveValue: function _ButtonStyleState_build_effectiveValue(t0, t1, t2) {
      this.widgetStyle = t0;
      this.themeStyle = t1;
      this.defaultStyle = t2;
    },
    _ButtonStyleState_build_resolve: function _ButtonStyleState_build_resolve(t0, t1) {
      this.$this = t0;
      this.effectiveValue = t1;
    },
    _ButtonStyleState_build_resolve_closure: function _ButtonStyleState_build_resolve_closure(t0, t1, t2) {
      this.$this = t0;
      this.getProperty = t1;
      this.T = t2;
    },
    _ButtonStyleState_build_closure: function _ButtonStyleState_build_closure() {
    },
    _ButtonStyleState_build_closure0: function _ButtonStyleState_build_closure0() {
    },
    _ButtonStyleState_build_closure1: function _ButtonStyleState_build_closure1() {
    },
    _ButtonStyleState_build_closure2: function _ButtonStyleState_build_closure2() {
    },
    _ButtonStyleState_build_closure3: function _ButtonStyleState_build_closure3() {
    },
    _ButtonStyleState_build_closure4: function _ButtonStyleState_build_closure4() {
    },
    _ButtonStyleState_build_closure5: function _ButtonStyleState_build_closure5() {
    },
    _ButtonStyleState_build_closure6: function _ButtonStyleState_build_closure6() {
    },
    _ButtonStyleState_build_closure7: function _ButtonStyleState_build_closure7() {
    },
    _ButtonStyleState_build_closure8: function _ButtonStyleState_build_closure8() {
    },
    _ButtonStyleState_build_closure9: function _ButtonStyleState_build_closure9() {
    },
    _ButtonStyleState_build_closure10: function _ButtonStyleState_build_closure10() {
    },
    _ButtonStyleState_build_closure11: function _ButtonStyleState_build_closure11() {
    },
    _ButtonStyleState_build_closure12: function _ButtonStyleState_build_closure12() {
    },
    _ButtonStyleState_build_closure20: function _ButtonStyleState_build_closure20(t0) {
      this.effectiveValue = t0;
    },
    _ButtonStyleState_build__closure0: function _ButtonStyleState_build__closure0(t0) {
      this.states = t0;
    },
    _ButtonStyleState_build_closure21: function _ButtonStyleState_build_closure21(t0) {
      this.effectiveValue = t0;
    },
    _ButtonStyleState_build__closure: function _ButtonStyleState_build__closure(t0) {
      this.states = t0;
    },
    _ButtonStyleState_build_closure13: function _ButtonStyleState_build_closure13() {
    },
    _ButtonStyleState_build_closure14: function _ButtonStyleState_build_closure14() {
    },
    _ButtonStyleState_build_closure15: function _ButtonStyleState_build_closure15() {
    },
    _ButtonStyleState_build_closure16: function _ButtonStyleState_build_closure16() {
    },
    _ButtonStyleState_build_closure17: function _ButtonStyleState_build_closure17() {
    },
    _ButtonStyleState_build_closure18: function _ButtonStyleState_build_closure18() {
    },
    _ButtonStyleState_build_closure19: function _ButtonStyleState_build_closure19(t0) {
      this.$this = t0;
    },
    _ButtonStyleState_build__closure1: function _ButtonStyleState_build__closure1() {
    },
    _MouseCursor: function _MouseCursor(t0) {
      this.resolveCallback = t0;
    },
    _InputPadding: function _InputPadding(t0, t1, t2) {
      this.minSize = t0;
      this.child = t1;
      this.key = t2;
    },
    _RenderInputPadding: function _RenderInputPadding(t0, t1, t2) {
      var _ = this;
      _._minSize = t0;
      _.RenderObjectWithChildMixin__child = t1;
      _.parentData = _._cachedBaselines = _._size = _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t2;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    _RenderInputPadding_hitTest_closure: function _RenderInputPadding_hitTest_closure(t0, t1) {
      this.$this = t0;
      this.center = t1;
    },
    __ButtonStyleState_State_TickerProviderStateMixin: function __ButtonStyleState_State_TickerProviderStateMixin() {
    },
    ButtonTextTheme: function ButtonTextTheme(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    ButtonThemeData: function ButtonThemeData(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _._buttonColor = t0;
      _._disabledColor = t1;
      _._button_theme$_focusColor = t2;
      _._button_theme$_hoverColor = t3;
      _._highlightColor = t4;
      _._splashColor = t5;
      _.colorScheme = t6;
      _._materialTapTargetSize = t7;
    },
    _ButtonThemeData_Object_Diagnosticable: function _ButtonThemeData_Object_Diagnosticable() {
    },
    CardTheme_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6;
      if (a === b)
        return a;
      if (t < 0.5)
        t1 = a.clipBehavior;
      else
        t1 = b.clipBehavior;
      t2 = A.Color_lerp(a.color, b.color, t);
      t3 = A.Color_lerp(a.shadowColor, b.shadowColor, t);
      t4 = A.Color_lerp(a.surfaceTintColor, b.surfaceTintColor, t);
      t5 = A.lerpDouble(a.elevation, b.elevation, t);
      t6 = A.EdgeInsetsGeometry_lerp(a.margin, b.margin, t);
      return new A.CardTheme(t1, t2, t3, t4, t5, t6, A.ShapeBorder_lerp(a.shape, b.shape, t));
    },
    CardTheme: function CardTheme(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.clipBehavior = t0;
      _.color = t1;
      _.shadowColor = t2;
      _.surfaceTintColor = t3;
      _.elevation = t4;
      _.margin = t5;
      _.shape = t6;
    },
    _CardTheme_Object_Diagnosticable: function _CardTheme_Object_Diagnosticable() {
    },
    Checkbox: function Checkbox(t0, t1, t2) {
      this.value = t0;
      this.onChanged = t1;
      this.key = t2;
    },
    _CheckboxState: function _CheckboxState(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14) {
      var _ = this;
      _._checkbox$_painter = t0;
      _._previousValue = null;
      _.ToggleableStateMixin___ToggleableStateMixin__positionController_A = t1;
      _.ToggleableStateMixin___ToggleableStateMixin__position_A = t2;
      _.ToggleableStateMixin___ToggleableStateMixin__reactionController_A = t3;
      _.ToggleableStateMixin___ToggleableStateMixin__reaction_A = t4;
      _.ToggleableStateMixin___ToggleableStateMixin__reactionHoverFade_A = t5;
      _.ToggleableStateMixin___ToggleableStateMixin__reactionHoverFadeController_A = t6;
      _.ToggleableStateMixin___ToggleableStateMixin__reactionFocusFade_A = t7;
      _.ToggleableStateMixin___ToggleableStateMixin__reactionFocusFadeController_A = t8;
      _.ToggleableStateMixin___ToggleableStateMixin__actionMap_FI = t9;
      _.ToggleableStateMixin__downPosition = t10;
      _.ToggleableStateMixin__focused = t11;
      _.ToggleableStateMixin__hovering = t12;
      _.TickerProviderStateMixin__tickers = t13;
      _.TickerProviderStateMixin__tickerModeNotifier = t14;
      _._element = _._widget = null;
    },
    _CheckboxState__widgetFillColor_closure: function _CheckboxState__widgetFillColor_closure(t0) {
      this.$this = t0;
    },
    _CheckboxState_build_closure: function _CheckboxState_build_closure(t0, t1) {
      this.$this = t0;
      this.checkboxTheme = t1;
    },
    _CheckboxPainter: function _CheckboxPainter(t0) {
      var _ = this;
      _._isHovered = _._isFocused = _._downPosition = _._splashRadius = _._focusColor = _._hoverColor = _._reactionColor = _._inactiveReactionColor = _._inactiveColor = _._activeColor = _._reactionHoverFade = _._reactionFocusFade = _._reaction = _._toggleable$_position = _._side = _._checkbox$_shape = _._previousValue = _._checkbox$_value = _._checkColor = null;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t0;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
    },
    _CheckboxDefaultsM2: function _CheckboxDefaultsM2(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _._theme = t0;
      _._checkbox$_colors = t1;
      _.mouseCursor = t2;
      _.fillColor = t3;
      _.checkColor = t4;
      _.overlayColor = t5;
      _.splashRadius = t6;
      _.materialTapTargetSize = t7;
      _.visualDensity = t8;
      _.shape = t9;
      _.side = t10;
    },
    _CheckboxDefaultsM2_fillColor_closure: function _CheckboxDefaultsM2_fillColor_closure(t0) {
      this.$this = t0;
    },
    _CheckboxDefaultsM2_overlayColor_closure: function _CheckboxDefaultsM2_overlayColor_closure(t0) {
      this.$this = t0;
    },
    __CheckboxState_State_TickerProviderStateMixin: function __CheckboxState_State_TickerProviderStateMixin() {
    },
    __CheckboxState_State_TickerProviderStateMixin_ToggleableStateMixin: function __CheckboxState_State_TickerProviderStateMixin_ToggleableStateMixin() {
    },
    CheckboxThemeData_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, t7, t8;
      if (a === b)
        return a;
      t1 = t < 0.5;
      if (t1)
        t2 = a.mouseCursor;
      else
        t2 = b.mouseCursor;
      t3 = type$.nullable_Color;
      t4 = A.MaterialStateProperty_lerp(a.fillColor, b.fillColor, t, A.ui_Color_lerp$closure(), t3);
      t5 = A.MaterialStateProperty_lerp(a.checkColor, b.checkColor, t, A.ui_Color_lerp$closure(), t3);
      t3 = A.MaterialStateProperty_lerp(a.overlayColor, b.overlayColor, t, A.ui_Color_lerp$closure(), t3);
      t6 = A.lerpDouble(a.splashRadius, b.splashRadius, t);
      if (t1)
        t7 = a.materialTapTargetSize;
      else
        t7 = b.materialTapTargetSize;
      if (t1)
        t1 = a.visualDensity;
      else
        t1 = b.visualDensity;
      t8 = type$.nullable_OutlinedBorder._as(A.ShapeBorder_lerp(a.shape, b.shape, t));
      return new A.CheckboxThemeData(t2, t4, t5, t3, t6, t7, t1, t8, A.CheckboxThemeData__lerpSides(a.side, b.side, t));
    },
    CheckboxThemeData__lerpSides(a, b, t) {
      if (a == null || b == null)
        return null;
      if (a === b)
        return a;
      return A.BorderSide_lerp(a, b, t);
    },
    CheckboxThemeData: function CheckboxThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.mouseCursor = t0;
      _.fillColor = t1;
      _.checkColor = t2;
      _.overlayColor = t3;
      _.splashRadius = t4;
      _.materialTapTargetSize = t5;
      _.visualDensity = t6;
      _.shape = t7;
      _.side = t8;
    },
    _CheckboxThemeData_Object_Diagnosticable: function _CheckboxThemeData_Object_Diagnosticable() {
    },
    ChipThemeData_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21;
      if (a === b)
        return a;
      t1 = A.Color_lerp(a.backgroundColor, b.backgroundColor, t);
      t2 = A.Color_lerp(a.deleteIconColor, b.deleteIconColor, t);
      t3 = A.Color_lerp(a.disabledColor, b.disabledColor, t);
      t4 = A.Color_lerp(a.selectedColor, b.selectedColor, t);
      t5 = A.Color_lerp(a.secondarySelectedColor, b.secondarySelectedColor, t);
      t6 = A.Color_lerp(a.shadowColor, b.shadowColor, t);
      t7 = A.Color_lerp(a.surfaceTintColor, b.surfaceTintColor, t);
      t8 = A.Color_lerp(a.selectedShadowColor, b.selectedShadowColor, t);
      t9 = t < 0.5;
      if (t9)
        t10 = a.showCheckmark !== false;
      else
        t10 = b.showCheckmark !== false;
      t11 = A.Color_lerp(a.checkmarkColor, b.checkmarkColor, t);
      t12 = A.EdgeInsetsGeometry_lerp(a.labelPadding, b.labelPadding, t);
      t13 = A.EdgeInsetsGeometry_lerp(a.padding, b.padding, t);
      t14 = A.ChipThemeData__lerpSides(a.side, b.side, t);
      t15 = A.ChipThemeData__lerpShapes(a.shape, b.shape, t);
      t16 = A.TextStyle_lerp(a.labelStyle, b.labelStyle, t);
      t17 = A.TextStyle_lerp(a.secondaryLabelStyle, b.secondaryLabelStyle, t);
      if (t9) {
        t9 = a.brightness;
        if (t9 == null)
          t9 = B.Brightness_1;
      } else {
        t9 = b.brightness;
        if (t9 == null)
          t9 = B.Brightness_1;
      }
      t18 = A.lerpDouble(a.elevation, b.elevation, t);
      t19 = A.lerpDouble(a.pressElevation, b.pressElevation, t);
      t20 = a.iconTheme;
      if (t20 == null)
        t21 = b.iconTheme != null;
      else
        t21 = true;
      if (t21)
        t20 = A.IconThemeData_lerp(t20, b.iconTheme, t);
      else
        t20 = null;
      return new A.ChipThemeData(t1, t2, t3, t4, t5, t6, t7, t8, t10, t11, t12, t13, t14, t15, t16, t17, t9, t18, t19, t20);
    },
    ChipThemeData__lerpSides(a, b, t) {
      var t1 = a == null;
      if (t1 && b == null)
        return null;
      if (t1) {
        t1 = b.color.value;
        return A.BorderSide_lerp(new A.BorderSide(A.Color$fromARGB(0, t1 >>> 16 & 255, t1 >>> 8 & 255, t1 & 255), 0, B.BorderStyle_1, -1), b, t);
      }
      if (b == null) {
        t1 = a.color.value;
        return A.BorderSide_lerp(new A.BorderSide(A.Color$fromARGB(0, t1 >>> 16 & 255, t1 >>> 8 & 255, t1 & 255), 0, B.BorderStyle_1, -1), a, t);
      }
      return A.BorderSide_lerp(a, b, t);
    },
    ChipThemeData__lerpShapes(a, b, t) {
      if (a == null && b == null)
        return null;
      return type$.nullable_OutlinedBorder._as(A.ShapeBorder_lerp(a, b, t));
    },
    ChipThemeData: function ChipThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19) {
      var _ = this;
      _.backgroundColor = t0;
      _.deleteIconColor = t1;
      _.disabledColor = t2;
      _.selectedColor = t3;
      _.secondarySelectedColor = t4;
      _.shadowColor = t5;
      _.surfaceTintColor = t6;
      _.selectedShadowColor = t7;
      _.showCheckmark = t8;
      _.checkmarkColor = t9;
      _.labelPadding = t10;
      _.padding = t11;
      _.side = t12;
      _.shape = t13;
      _.labelStyle = t14;
      _.secondaryLabelStyle = t15;
      _.brightness = t16;
      _.elevation = t17;
      _.pressElevation = t18;
      _.iconTheme = t19;
    },
    _ChipThemeData_Object_Diagnosticable: function _ChipThemeData_Object_Diagnosticable() {
    },
    ColorScheme$(background, brightness, error, errorContainer, inversePrimary, inverseSurface, onBackground, onError, onErrorContainer, onInverseSurface, onPrimary, onPrimaryContainer, onSecondary, onSecondaryContainer, onSurface, onSurfaceVariant, onTertiary, onTertiaryContainer, outline, outlineVariant, primary, primaryContainer, primaryVariant, scrim, secondary, secondaryContainer, secondaryVariant, shadow, surface, surfaceTint, surfaceVariant, tertiary, tertiaryContainer) {
      return new A.ColorScheme(brightness, primary, onPrimary, primaryContainer, onPrimaryContainer, secondary, onSecondary, secondaryContainer, onSecondaryContainer, tertiary, onTertiary, tertiaryContainer, onTertiaryContainer, error, onError, errorContainer, onErrorContainer, background, onBackground, surface, onSurface, surfaceVariant, onSurfaceVariant, outline, outlineVariant, shadow, scrim, inverseSurface, onInverseSurface, inversePrimary, surfaceTint, primaryVariant, secondaryVariant);
    },
    ColorScheme_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, t31, t32, t33, t34, t35, t36, t37, t38;
      if (a === b)
        return a;
      t1 = t < 0.5 ? a.brightness : b.brightness;
      t2 = a.primary;
      t3 = b.primary;
      t4 = A.Color_lerp(t2, t3, t);
      t4.toString;
      t5 = a.onPrimary;
      t6 = b.onPrimary;
      t7 = A.Color_lerp(t5, t6, t);
      t7.toString;
      t8 = a._primaryContainer;
      if (t8 == null)
        t8 = t2;
      t9 = b._primaryContainer;
      t8 = A.Color_lerp(t8, t9 == null ? t3 : t9, t);
      t9 = a._onPrimaryContainer;
      if (t9 == null)
        t9 = t5;
      t10 = b._onPrimaryContainer;
      t9 = A.Color_lerp(t9, t10 == null ? t6 : t10, t);
      t10 = a.secondary;
      t11 = b.secondary;
      t12 = A.Color_lerp(t10, t11, t);
      t12.toString;
      t13 = a.onSecondary;
      t14 = b.onSecondary;
      t15 = A.Color_lerp(t13, t14, t);
      t15.toString;
      t16 = a._secondaryContainer;
      if (t16 == null)
        t16 = t10;
      t17 = b._secondaryContainer;
      t16 = A.Color_lerp(t16, t17 == null ? t11 : t17, t);
      t17 = a._onSecondaryContainer;
      if (t17 == null)
        t17 = t13;
      t18 = b._onSecondaryContainer;
      t17 = A.Color_lerp(t17, t18 == null ? t14 : t18, t);
      t18 = a._tertiary;
      t19 = t18 == null;
      t20 = t19 ? t10 : t18;
      t21 = b._tertiary;
      t22 = t21 == null;
      t20 = A.Color_lerp(t20, t22 ? t11 : t21, t);
      t23 = a._onTertiary;
      t24 = t23 == null;
      t25 = t24 ? t13 : t23;
      t26 = b._onTertiary;
      t27 = t26 == null;
      t25 = A.Color_lerp(t25, t27 ? t14 : t26, t);
      t28 = a._tertiaryContainer;
      if (t28 == null) {
        if (t19)
          t18 = t10;
      } else
        t18 = t28;
      t19 = b._tertiaryContainer;
      if (t19 == null)
        t19 = t22 ? t11 : t21;
      t19 = A.Color_lerp(t18, t19, t);
      t18 = a._onTertiaryContainer;
      if (t18 == null)
        t13 = t24 ? t13 : t23;
      else
        t13 = t18;
      t18 = b._onTertiaryContainer;
      if (t18 == null)
        t14 = t27 ? t14 : t26;
      else
        t14 = t18;
      t14 = A.Color_lerp(t13, t14, t);
      t13 = a.error;
      t18 = b.error;
      t21 = A.Color_lerp(t13, t18, t);
      t21.toString;
      t22 = a.onError;
      t23 = b.onError;
      t24 = A.Color_lerp(t22, t23, t);
      t24.toString;
      t26 = a._errorContainer;
      t13 = t26 == null ? t13 : t26;
      t26 = b._errorContainer;
      t13 = A.Color_lerp(t13, t26 == null ? t18 : t26, t);
      t18 = a._onErrorContainer;
      if (t18 == null)
        t18 = t22;
      t22 = b._onErrorContainer;
      t18 = A.Color_lerp(t18, t22 == null ? t23 : t22, t);
      t22 = A.Color_lerp(a.background, b.background, t);
      t22.toString;
      t23 = a.onBackground;
      t26 = b.onBackground;
      t27 = A.Color_lerp(t23, t26, t);
      t27.toString;
      t28 = a.surface;
      t29 = b.surface;
      t30 = A.Color_lerp(t28, t29, t);
      t30.toString;
      t31 = a.onSurface;
      t32 = b.onSurface;
      t33 = A.Color_lerp(t31, t32, t);
      t33.toString;
      t34 = a._surfaceVariant;
      if (t34 == null)
        t34 = t28;
      t35 = b._surfaceVariant;
      t34 = A.Color_lerp(t34, t35 == null ? t29 : t35, t);
      t35 = a._onSurfaceVariant;
      if (t35 == null)
        t35 = t31;
      t36 = b._onSurfaceVariant;
      t35 = A.Color_lerp(t35, t36 == null ? t32 : t36, t);
      t36 = a._outline;
      if (t36 == null)
        t36 = t23;
      t37 = b._outline;
      t36 = A.Color_lerp(t36, t37 == null ? t26 : t37, t);
      t37 = a._outlineVariant;
      t23 = t37 == null ? t23 : t37;
      t37 = b._outlineVariant;
      t23 = A.Color_lerp(t23, t37 == null ? t26 : t37, t);
      t26 = a._shadow;
      if (t26 == null)
        t26 = B.Color_4278190080;
      t37 = b._shadow;
      t26 = A.Color_lerp(t26, t37 == null ? B.Color_4278190080 : t37, t);
      t37 = a._scrim;
      if (t37 == null)
        t37 = B.Color_4278190080;
      t38 = b._scrim;
      t37 = A.Color_lerp(t37, t38 == null ? B.Color_4278190080 : t38, t);
      t38 = a._inverseSurface;
      t31 = t38 == null ? t31 : t38;
      t38 = b._inverseSurface;
      t31 = A.Color_lerp(t31, t38 == null ? t32 : t38, t);
      t32 = a._onInverseSurface;
      t28 = t32 == null ? t28 : t32;
      t32 = b._onInverseSurface;
      t28 = A.Color_lerp(t28, t32 == null ? t29 : t32, t);
      t29 = a._inversePrimary;
      t5 = t29 == null ? t5 : t29;
      t29 = b._inversePrimary;
      t5 = A.Color_lerp(t5, t29 == null ? t6 : t29, t);
      t6 = a._primaryVariant;
      if (t6 == null)
        t6 = t2;
      t29 = b._primaryVariant;
      t6 = A.Color_lerp(t6, t29 == null ? t3 : t29, t);
      t29 = a._secondaryVariant;
      t10 = t29 == null ? t10 : t29;
      t29 = b._secondaryVariant;
      t10 = A.Color_lerp(t10, t29 == null ? t11 : t29, t);
      t11 = a._surfaceTint;
      t2 = t11 == null ? t2 : t11;
      t11 = b._surfaceTint;
      return A.ColorScheme$(t22, t1, t21, t13, t5, t31, t27, t24, t18, t28, t7, t9, t15, t17, t33, t35, t25, t14, t36, t23, t4, t8, t6, t37, t12, t16, t10, t26, t30, A.Color_lerp(t2, t11 == null ? t3 : t11, t), t34, t20, t19);
    },
    ColorScheme: function ColorScheme(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, t31, t32) {
      var _ = this;
      _.brightness = t0;
      _.primary = t1;
      _.onPrimary = t2;
      _._primaryContainer = t3;
      _._onPrimaryContainer = t4;
      _.secondary = t5;
      _.onSecondary = t6;
      _._secondaryContainer = t7;
      _._onSecondaryContainer = t8;
      _._tertiary = t9;
      _._onTertiary = t10;
      _._tertiaryContainer = t11;
      _._onTertiaryContainer = t12;
      _.error = t13;
      _.onError = t14;
      _._errorContainer = t15;
      _._onErrorContainer = t16;
      _.background = t17;
      _.onBackground = t18;
      _.surface = t19;
      _.onSurface = t20;
      _._surfaceVariant = t21;
      _._onSurfaceVariant = t22;
      _._outline = t23;
      _._outlineVariant = t24;
      _._shadow = t25;
      _._scrim = t26;
      _._inverseSurface = t27;
      _._onInverseSurface = t28;
      _._inversePrimary = t29;
      _._surfaceTint = t30;
      _._primaryVariant = t31;
      _._secondaryVariant = t32;
    },
    _ColorScheme_Object_Diagnosticable: function _ColorScheme_Object_Diagnosticable() {
    },
    MaterialColor: function MaterialColor(t0, t1) {
      this._swatch = t0;
      this.value = t1;
    },
    DataTableThemeData_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12;
      if (a === b)
        return a;
      t1 = A.Decoration_lerp(a.decoration, b.decoration, t);
      t2 = type$.nullable_Color;
      t3 = A.MaterialStateProperty_lerp(a.dataRowColor, b.dataRowColor, t, A.ui_Color_lerp$closure(), t2);
      t4 = A.lerpDouble(a.dataRowMinHeight, b.dataRowMinHeight, t);
      t5 = A.lerpDouble(a.dataRowMaxHeight, b.dataRowMaxHeight, t);
      t6 = A.TextStyle_lerp(a.dataTextStyle, b.dataTextStyle, t);
      t2 = A.MaterialStateProperty_lerp(a.headingRowColor, b.headingRowColor, t, A.ui_Color_lerp$closure(), t2);
      t7 = A.lerpDouble(a.headingRowHeight, b.headingRowHeight, t);
      t8 = A.TextStyle_lerp(a.headingTextStyle, b.headingTextStyle, t);
      t9 = A.lerpDouble(a.horizontalMargin, b.horizontalMargin, t);
      t10 = A.lerpDouble(a.columnSpacing, b.columnSpacing, t);
      t11 = A.lerpDouble(a.dividerThickness, b.dividerThickness, t);
      t12 = A.lerpDouble(a.checkboxHorizontalMargin, b.checkboxHorizontalMargin, t);
      return new A.DataTableThemeData(t1, t3, t4, t5, t6, t2, t7, t8, t9, t10, t11, t12);
    },
    DataTableThemeData: function DataTableThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11) {
      var _ = this;
      _.decoration = t0;
      _.dataRowColor = t1;
      _.dataRowMinHeight = t2;
      _.dataRowMaxHeight = t3;
      _.dataTextStyle = t4;
      _.headingRowColor = t5;
      _.headingRowHeight = t6;
      _.headingTextStyle = t7;
      _.horizontalMargin = t8;
      _.columnSpacing = t9;
      _.dividerThickness = t10;
      _.checkboxHorizontalMargin = t11;
    },
    _DataTableThemeData_Object_Diagnosticable: function _DataTableThemeData_Object_Diagnosticable() {
    },
    DatePickerThemeData_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, t31, t32;
      if (a === b)
        return a;
      t1 = A.Color_lerp(a.backgroundColor, b.backgroundColor, t);
      t2 = A.lerpDouble(a.elevation, b.elevation, t);
      t3 = A.Color_lerp(a.shadowColor, b.shadowColor, t);
      t4 = A.Color_lerp(a.surfaceTintColor, b.surfaceTintColor, t);
      t5 = A.ShapeBorder_lerp(a.shape, b.shape, t);
      t6 = A.Color_lerp(a.headerBackgroundColor, b.headerBackgroundColor, t);
      t7 = A.Color_lerp(a.headerForegroundColor, b.headerForegroundColor, t);
      t8 = A.TextStyle_lerp(a.headerHeadlineStyle, b.headerHeadlineStyle, t);
      t9 = A.TextStyle_lerp(a.headerHelpStyle, b.headerHelpStyle, t);
      t10 = A.TextStyle_lerp(a.weekdayStyle, b.weekdayStyle, t);
      t11 = A.TextStyle_lerp(a.dayStyle, b.dayStyle, t);
      t12 = type$.nullable_Color;
      t13 = A.MaterialStateProperty_lerp(a.dayForegroundColor, b.dayForegroundColor, t, A.ui_Color_lerp$closure(), t12);
      t14 = A.MaterialStateProperty_lerp(a.dayBackgroundColor, b.dayBackgroundColor, t, A.ui_Color_lerp$closure(), t12);
      t15 = A.MaterialStateProperty_lerp(a.dayOverlayColor, b.dayOverlayColor, t, A.ui_Color_lerp$closure(), t12);
      t16 = A.MaterialStateProperty_lerp(a.todayForegroundColor, b.todayForegroundColor, t, A.ui_Color_lerp$closure(), t12);
      t17 = A.MaterialStateProperty_lerp(a.todayBackgroundColor, b.todayBackgroundColor, t, A.ui_Color_lerp$closure(), t12);
      t18 = A.DatePickerThemeData__lerpBorderSide(a.todayBorder, b.todayBorder, t);
      t19 = A.TextStyle_lerp(a.yearStyle, b.yearStyle, t);
      t20 = A.MaterialStateProperty_lerp(a.yearForegroundColor, b.yearForegroundColor, t, A.ui_Color_lerp$closure(), t12);
      t21 = A.MaterialStateProperty_lerp(a.yearBackgroundColor, b.yearBackgroundColor, t, A.ui_Color_lerp$closure(), t12);
      t22 = A.MaterialStateProperty_lerp(a.yearOverlayColor, b.yearOverlayColor, t, A.ui_Color_lerp$closure(), t12);
      t23 = A.Color_lerp(a.rangePickerBackgroundColor, b.rangePickerBackgroundColor, t);
      t24 = A.lerpDouble(a.rangePickerElevation, b.rangePickerElevation, t);
      t25 = A.Color_lerp(a.rangePickerShadowColor, b.rangePickerShadowColor, t);
      t26 = A.Color_lerp(a.rangePickerSurfaceTintColor, b.rangePickerSurfaceTintColor, t);
      t27 = A.ShapeBorder_lerp(a.rangePickerShape, b.rangePickerShape, t);
      t28 = A.Color_lerp(a.rangePickerHeaderBackgroundColor, b.rangePickerHeaderBackgroundColor, t);
      t29 = A.Color_lerp(a.rangePickerHeaderForegroundColor, b.rangePickerHeaderForegroundColor, t);
      t30 = A.TextStyle_lerp(a.rangePickerHeaderHeadlineStyle, b.rangePickerHeaderHeadlineStyle, t);
      t31 = A.TextStyle_lerp(a.rangePickerHeaderHelpStyle, b.rangePickerHeaderHelpStyle, t);
      t32 = A.Color_lerp(a.rangeSelectionBackgroundColor, b.rangeSelectionBackgroundColor, t);
      return new A.DatePickerThemeData(t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, t31, t32, A.MaterialStateProperty_lerp(a.rangeSelectionOverlayColor, b.rangeSelectionOverlayColor, t, A.ui_Color_lerp$closure(), t12));
    },
    DatePickerThemeData__lerpBorderSide(a, b, t) {
      var t1;
      if (a == b)
        return a;
      if (a == null) {
        t1 = b.color.value;
        return A.BorderSide_lerp(new A.BorderSide(A.Color$fromARGB(0, t1 >>> 16 & 255, t1 >>> 8 & 255, t1 & 255), 0, B.BorderStyle_1, -1), b, t);
      }
      t1 = a.color.value;
      return A.BorderSide_lerp(a, new A.BorderSide(A.Color$fromARGB(0, t1 >>> 16 & 255, t1 >>> 8 & 255, t1 & 255), 0, B.BorderStyle_1, -1), t);
    },
    DatePickerThemeData: function DatePickerThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, t31) {
      var _ = this;
      _.backgroundColor = t0;
      _.elevation = t1;
      _.shadowColor = t2;
      _.surfaceTintColor = t3;
      _.shape = t4;
      _.headerBackgroundColor = t5;
      _.headerForegroundColor = t6;
      _.headerHeadlineStyle = t7;
      _.headerHelpStyle = t8;
      _.weekdayStyle = t9;
      _.dayStyle = t10;
      _.dayForegroundColor = t11;
      _.dayBackgroundColor = t12;
      _.dayOverlayColor = t13;
      _.todayForegroundColor = t14;
      _.todayBackgroundColor = t15;
      _.todayBorder = t16;
      _.yearStyle = t17;
      _.yearForegroundColor = t18;
      _.yearBackgroundColor = t19;
      _.yearOverlayColor = t20;
      _.rangePickerBackgroundColor = t21;
      _.rangePickerElevation = t22;
      _.rangePickerShadowColor = t23;
      _.rangePickerSurfaceTintColor = t24;
      _.rangePickerShape = t25;
      _.rangePickerHeaderBackgroundColor = t26;
      _.rangePickerHeaderForegroundColor = t27;
      _.rangePickerHeaderHeadlineStyle = t28;
      _.rangePickerHeaderHelpStyle = t29;
      _.rangeSelectionBackgroundColor = t30;
      _.rangeSelectionOverlayColor = t31;
    },
    _DatePickerThemeData_Object_Diagnosticable: function _DatePickerThemeData_Object_Diagnosticable() {
    },
    DialogTheme_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9;
      if (a === b)
        return a;
      t1 = A.Color_lerp(a.backgroundColor, b.backgroundColor, t);
      t2 = A.lerpDouble(a.elevation, b.elevation, t);
      t3 = A.Color_lerp(a.shadowColor, b.shadowColor, t);
      t4 = A.Color_lerp(a.surfaceTintColor, b.surfaceTintColor, t);
      t5 = A.ShapeBorder_lerp(a.shape, b.shape, t);
      t6 = A.AlignmentGeometry_lerp(a.alignment, b.alignment, t);
      t7 = A.Color_lerp(a.iconColor, b.iconColor, t);
      t8 = A.TextStyle_lerp(a.titleTextStyle, b.titleTextStyle, t);
      t9 = A.TextStyle_lerp(a.contentTextStyle, b.contentTextStyle, t);
      return new A.DialogTheme(t1, t2, t3, t4, t5, t6, t8, t9, A.EdgeInsetsGeometry_lerp(a.actionsPadding, b.actionsPadding, t), t7);
    },
    DialogTheme: function DialogTheme(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _.backgroundColor = t0;
      _.elevation = t1;
      _.shadowColor = t2;
      _.surfaceTintColor = t3;
      _.shape = t4;
      _.alignment = t5;
      _.titleTextStyle = t6;
      _.contentTextStyle = t7;
      _.actionsPadding = t8;
      _.iconColor = t9;
    },
    _DialogTheme_Object_Diagnosticable: function _DialogTheme_Object_Diagnosticable() {
    },
    DividerThemeData_lerp(a, b, t) {
      var t1, t2, t3, t4;
      if (a === b)
        return a;
      t1 = A.Color_lerp(a.color, b.color, t);
      t2 = A.lerpDouble(a.space, b.space, t);
      t3 = A.lerpDouble(a.thickness, b.thickness, t);
      t4 = A.lerpDouble(a.indent, b.indent, t);
      return new A.DividerThemeData(t1, t2, t3, t4, A.lerpDouble(a.endIndent, b.endIndent, t));
    },
    DividerThemeData: function DividerThemeData(t0, t1, t2, t3, t4) {
      var _ = this;
      _.color = t0;
      _.space = t1;
      _.thickness = t2;
      _.indent = t3;
      _.endIndent = t4;
    },
    _DividerThemeData_Object_Diagnosticable: function _DividerThemeData_Object_Diagnosticable() {
    },
    DrawerThemeData_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, t7;
      if (a === b)
        return a;
      t1 = A.Color_lerp(a.backgroundColor, b.backgroundColor, t);
      t2 = A.Color_lerp(a.scrimColor, b.scrimColor, t);
      t3 = A.lerpDouble(a.elevation, b.elevation, t);
      t4 = A.Color_lerp(a.shadowColor, b.shadowColor, t);
      t5 = A.Color_lerp(a.surfaceTintColor, b.surfaceTintColor, t);
      t6 = A.ShapeBorder_lerp(a.shape, b.shape, t);
      t7 = A.ShapeBorder_lerp(a.endShape, b.endShape, t);
      return new A.DrawerThemeData(t1, t2, t3, t4, t5, t6, t7, A.lerpDouble(a.width, b.width, t));
    },
    DrawerThemeData: function DrawerThemeData(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.backgroundColor = t0;
      _.scrimColor = t1;
      _.elevation = t2;
      _.shadowColor = t3;
      _.surfaceTintColor = t4;
      _.shape = t5;
      _.endShape = t6;
      _.width = t7;
    },
    _DrawerThemeData_Object_Diagnosticable: function _DrawerThemeData_Object_Diagnosticable() {
    },
    DropdownMenuThemeData_lerp(a, b, t) {
      var t1, t2;
      if (a === b)
        return a;
      t1 = A.TextStyle_lerp(a.textStyle, b.textStyle, t);
      if (t < 0.5)
        t2 = a.inputDecorationTheme;
      else
        t2 = b.inputDecorationTheme;
      return new A.DropdownMenuThemeData(t1, t2, A.MenuStyle_lerp(a.menuStyle, b.menuStyle, t));
    },
    DropdownMenuThemeData: function DropdownMenuThemeData(t0, t1, t2) {
      this.textStyle = t0;
      this.inputDecorationTheme = t1;
      this.menuStyle = t2;
    },
    _DropdownMenuThemeData_Object_Diagnosticable: function _DropdownMenuThemeData_Object_Diagnosticable() {
    },
    ElevatedButtonThemeData_lerp(a, b, t) {
      if (a === b)
        return a;
      return new A.ElevatedButtonThemeData(A.ButtonStyle_lerp(a.style, b.style, t));
    },
    ElevatedButtonThemeData: function ElevatedButtonThemeData(t0) {
      this.style = t0;
    },
    _ElevatedButtonThemeData_Object_Diagnosticable: function _ElevatedButtonThemeData_Object_Diagnosticable() {
    },
    ExpansionTileThemeData_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10;
      if (a === b)
        return a;
      t1 = A.Color_lerp(a.backgroundColor, b.backgroundColor, t);
      t2 = A.Color_lerp(a.collapsedBackgroundColor, b.collapsedBackgroundColor, t);
      t3 = A.EdgeInsetsGeometry_lerp(a.tilePadding, b.tilePadding, t);
      t4 = A.AlignmentGeometry_lerp(a.expandedAlignment, b.expandedAlignment, t);
      t5 = A.EdgeInsetsGeometry_lerp(a.childrenPadding, b.childrenPadding, t);
      t6 = A.Color_lerp(a.iconColor, b.iconColor, t);
      t7 = A.Color_lerp(a.collapsedIconColor, b.collapsedIconColor, t);
      t8 = A.Color_lerp(a.textColor, b.textColor, t);
      t9 = A.Color_lerp(a.collapsedTextColor, b.collapsedTextColor, t);
      t10 = A.ShapeBorder_lerp(a.shape, b.shape, t);
      return new A.ExpansionTileThemeData(t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, A.ShapeBorder_lerp(a.collapsedShape, b.collapsedShape, t));
    },
    ExpansionTileThemeData: function ExpansionTileThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _.backgroundColor = t0;
      _.collapsedBackgroundColor = t1;
      _.tilePadding = t2;
      _.expandedAlignment = t3;
      _.childrenPadding = t4;
      _.iconColor = t5;
      _.collapsedIconColor = t6;
      _.textColor = t7;
      _.collapsedTextColor = t8;
      _.shape = t9;
      _.collapsedShape = t10;
    },
    _ExpansionTileThemeData_Object_Diagnosticable: function _ExpansionTileThemeData_Object_Diagnosticable() {
    },
    FilledButtonThemeData_lerp(a, b, t) {
      if (a === b)
        return a;
      return new A.FilledButtonThemeData(A.ButtonStyle_lerp(a.style, b.style, t));
    },
    FilledButtonThemeData: function FilledButtonThemeData(t0) {
      this.style = t0;
    },
    _FilledButtonThemeData_Object_Diagnosticable: function _FilledButtonThemeData_Object_Diagnosticable() {
    },
    FlexibleSpaceBarSettings: function FlexibleSpaceBarSettings(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.toolbarOpacity = t0;
      _.minExtent = t1;
      _.maxExtent = t2;
      _.currentExtent = t3;
      _.isScrolledUnder = t4;
      _.child = t5;
      _.key = t6;
    },
    _AnimationSwap$(first, next, $parent, swapThreshold, $T) {
      return new A._AnimationSwap($parent, swapThreshold, first, next, new A.ObserverList(A._setArrayType([], type$.JSArray_of_void_Function_AnimationStatus), type$.ObserverList_of_void_Function_AnimationStatus), new A.ObserverList(A._setArrayType([], type$.JSArray_of_void_Function), type$.ObserverList_of_void_Function), 0, $T._eval$1("_AnimationSwap<0>"));
    },
    FloatingActionButtonLocation: function FloatingActionButtonLocation() {
    },
    StandardFabLocation: function StandardFabLocation() {
    },
    FabFloatOffsetY: function FabFloatOffsetY() {
    },
    FabEndOffsetX: function FabEndOffsetX() {
    },
    _EndFloatFabLocation: function _EndFloatFabLocation() {
    },
    FloatingActionButtonAnimator: function FloatingActionButtonAnimator() {
    },
    _ScalingFabMotionAnimator: function _ScalingFabMotionAnimator() {
    },
    _AnimationSwap: function _AnimationSwap(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.parent = t0;
      _.swapThreshold = t1;
      _.first = t2;
      _.next = t3;
      _._lastValue = _._lastStatus = null;
      _.AnimationLocalStatusListenersMixin__statusListeners = t4;
      _.AnimationLocalListenersMixin__listeners = t5;
      _.AnimationLazyListenerMixin__listenerCounter = t6;
      _.$ti = t7;
    },
    __EndFloatFabLocation_StandardFabLocation_FabEndOffsetX: function __EndFloatFabLocation_StandardFabLocation_FabEndOffsetX() {
    },
    __EndFloatFabLocation_StandardFabLocation_FabEndOffsetX_FabFloatOffsetY: function __EndFloatFabLocation_StandardFabLocation_FabEndOffsetX_FabFloatOffsetY() {
    },
    FloatingActionButtonThemeData$(backgroundColor, disabledElevation, elevation, enableFeedback, extendedIconLabelSpacing, extendedPadding, extendedSizeConstraints, extendedTextStyle, focusColor, focusElevation, foregroundColor, highlightElevation, hoverColor, hoverElevation, iconSize, largeSizeConstraints, mouseCursor, shape, sizeConstraints, smallSizeConstraints, splashColor) {
      return new A.FloatingActionButtonThemeData(foregroundColor, backgroundColor, focusColor, hoverColor, splashColor, elevation, focusElevation, hoverElevation, disabledElevation, highlightElevation, shape, enableFeedback, iconSize, sizeConstraints, smallSizeConstraints, largeSizeConstraints, extendedSizeConstraints, extendedIconLabelSpacing, extendedPadding, extendedTextStyle, mouseCursor);
    },
    FloatingActionButtonThemeData_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21;
      if (a === b)
        return a;
      t1 = A.Color_lerp(a.foregroundColor, b.foregroundColor, t);
      t2 = A.Color_lerp(a.backgroundColor, b.backgroundColor, t);
      t3 = A.Color_lerp(a.focusColor, b.focusColor, t);
      t4 = A.Color_lerp(a.hoverColor, b.hoverColor, t);
      t5 = A.Color_lerp(a.splashColor, b.splashColor, t);
      t6 = A.lerpDouble(a.elevation, b.elevation, t);
      t7 = A.lerpDouble(a.focusElevation, b.focusElevation, t);
      t8 = A.lerpDouble(a.hoverElevation, b.hoverElevation, t);
      t9 = A.lerpDouble(a.disabledElevation, b.disabledElevation, t);
      t10 = A.lerpDouble(a.highlightElevation, b.highlightElevation, t);
      t11 = A.ShapeBorder_lerp(a.shape, b.shape, t);
      t12 = t < 0.5;
      if (t12)
        t13 = a.enableFeedback;
      else
        t13 = b.enableFeedback;
      t14 = A.lerpDouble(a.iconSize, b.iconSize, t);
      t15 = A.BoxConstraints_lerp(a.sizeConstraints, b.sizeConstraints, t);
      t16 = A.BoxConstraints_lerp(a.smallSizeConstraints, b.smallSizeConstraints, t);
      t17 = A.BoxConstraints_lerp(a.largeSizeConstraints, b.largeSizeConstraints, t);
      t18 = A.BoxConstraints_lerp(a.extendedSizeConstraints, b.extendedSizeConstraints, t);
      t19 = A.lerpDouble(a.extendedIconLabelSpacing, b.extendedIconLabelSpacing, t);
      t20 = A.EdgeInsetsGeometry_lerp(a.extendedPadding, b.extendedPadding, t);
      t21 = A.TextStyle_lerp(a.extendedTextStyle, b.extendedTextStyle, t);
      if (t12)
        t12 = a.mouseCursor;
      else
        t12 = b.mouseCursor;
      return A.FloatingActionButtonThemeData$(t2, t9, t6, t13, t19, t20, t18, t21, t3, t7, t1, t10, t4, t8, t14, t17, t12, t11, t15, t16, t5);
    },
    FloatingActionButtonThemeData: function FloatingActionButtonThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20) {
      var _ = this;
      _.foregroundColor = t0;
      _.backgroundColor = t1;
      _.focusColor = t2;
      _.hoverColor = t3;
      _.splashColor = t4;
      _.elevation = t5;
      _.focusElevation = t6;
      _.hoverElevation = t7;
      _.disabledElevation = t8;
      _.highlightElevation = t9;
      _.shape = t10;
      _.enableFeedback = t11;
      _.iconSize = t12;
      _.sizeConstraints = t13;
      _.smallSizeConstraints = t14;
      _.largeSizeConstraints = t15;
      _.extendedSizeConstraints = t16;
      _.extendedIconLabelSpacing = t17;
      _.extendedPadding = t18;
      _.extendedTextStyle = t19;
      _.mouseCursor = t20;
    },
    _FloatingActionButtonThemeData_Object_Diagnosticable: function _FloatingActionButtonThemeData_Object_Diagnosticable() {
    },
    IconButton_styleFrom(alignment, disabledForegroundColor, disabledMouseCursor, enableFeedback, enabledMouseCursor, focusColor, foregroundColor, highlightColor, hoverColor, iconSize, maximumSize, minimumSize, padding, visualDensity) {
      var t2, t3, _null = null,
        t1 = foregroundColor == null,
        buttonForegroundColor = t1 ? _null : new A._IconButtonDefaultForeground(foregroundColor, disabledForegroundColor),
        overlayColor = t1 ? _null : new A._IconButtonDefaultOverlay(foregroundColor, focusColor, hoverColor, highlightColor);
      t1 = minimumSize == null ? _null : new A.MaterialStatePropertyAll(minimumSize, type$.MaterialStatePropertyAll_Size);
      t2 = maximumSize == null ? _null : new A.MaterialStatePropertyAll(maximumSize, type$.MaterialStatePropertyAll_Size);
      t3 = iconSize == null ? _null : new A.MaterialStatePropertyAll(iconSize, type$.MaterialStatePropertyAll_double);
      return A.ButtonStyle$(alignment, _null, _null, _null, enableFeedback, _null, buttonForegroundColor, _null, t3, t2, t1, _null, overlayColor, _null, _null, _null, _null, _null, _null, _null, _null, visualDensity);
    },
    _IconButtonVariant: function _IconButtonVariant(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    IconButton: function IconButton(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.icon = t0;
      _.color = t1;
      _.onPressed = t2;
      _.tooltip = t3;
      _.style = t4;
      _.key = t5;
    },
    _IconButtonDefaultForeground: function _IconButtonDefaultForeground(t0, t1) {
      this.foregroundColor = t0;
      this.disabledForegroundColor = t1;
    },
    _IconButtonDefaultOverlay: function _IconButtonDefaultOverlay(t0, t1, t2, t3) {
      var _ = this;
      _.foregroundColor = t0;
      _.focusColor = t1;
      _.hoverColor = t2;
      _.highlightColor = t3;
    },
    IconButtonThemeData_lerp(a, b, t) {
      if (a === b)
        return a;
      return new A.IconButtonThemeData(A.ButtonStyle_lerp(a.style, b.style, t));
    },
    IconButtonTheme$(child, data) {
      return new A.IconButtonTheme(data, child, null);
    },
    IconButtonTheme_of(context) {
      var buttonTheme = context.dependOnInheritedWidgetOfExactType$1$0(type$.IconButtonTheme),
        t1 = buttonTheme == null ? null : buttonTheme.data;
      return t1 == null ? A.Theme_of(context).iconButtonTheme : t1;
    },
    IconButtonThemeData: function IconButtonThemeData(t0) {
      this.style = t0;
    },
    IconButtonTheme: function IconButtonTheme(t0, t1, t2) {
      this.data = t0;
      this.child = t1;
      this.key = t2;
    },
    _IconButtonThemeData_Object_Diagnosticable: function _IconButtonThemeData_Object_Diagnosticable() {
    },
    InkHighlight: function InkHighlight(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _._ink_highlight$_shape = t0;
      _._ink_highlight$_radius = t1;
      _._ink_highlight$_borderRadius = t2;
      _._ink_highlight$_customBorder = t3;
      _._rectCallback = t4;
      _._ink_highlight$_textDirection = t5;
      _.__InkHighlight__alphaController_A = _.__InkHighlight__alpha_A = $;
      _._ink_highlight$_active = true;
      _._ink_well$_color = t6;
      _._material$_controller = t7;
      _.referenceBox = t8;
      _.onRemoved = t9;
    },
    _getClipCallback(referenceBox, containedInkWell, rectCallback) {
      if (rectCallback != null)
        return rectCallback;
      if (containedInkWell)
        return new A._getClipCallback_closure(referenceBox);
      return null;
    },
    _getClipCallback_closure: function _getClipCallback_closure(t0) {
      this.referenceBox = t0;
    },
    _InkRippleFactory: function _InkRippleFactory() {
    },
    InkRipple: function InkRipple(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _._ink_ripple$_position = t0;
      _._ink_ripple$_borderRadius = t1;
      _._ink_ripple$_customBorder = t2;
      _._ink_ripple$_targetRadius = t3;
      _._ink_ripple$_clipCallback = t4;
      _._ink_ripple$_textDirection = t5;
      _.__InkRipple__fadeOutController_A = _.__InkRipple__fadeOut_A = _.__InkRipple__fadeInController_A = _.__InkRipple__fadeIn_A = _.__InkRipple__radiusController_A = _.__InkRipple__radius_A = $;
      _._ink_well$_color = t6;
      _._material$_controller = t7;
      _.referenceBox = t8;
      _.onRemoved = t9;
    },
    _getClipCallback0(referenceBox, containedInkWell, rectCallback) {
      if (rectCallback != null)
        return rectCallback;
      if (containedInkWell)
        return new A._getClipCallback_closure0(referenceBox);
      return null;
    },
    _getTargetRadius(referenceBox, containedInkWell, rectCallback, position) {
      var t1, size, d1, d2, d3, d4;
      if (containedInkWell) {
        if (rectCallback != null) {
          t1 = rectCallback.call$0();
          size = new A.Size(t1.right - t1.left, t1.bottom - t1.top);
        } else {
          t1 = referenceBox._size;
          t1.toString;
          size = t1;
        }
        d1 = position.$sub(0, B.Offset_0_0).get$distance();
        d2 = position.$sub(0, new A.Offset(0 + size._dx, 0)).get$distance();
        d3 = position.$sub(0, new A.Offset(0, 0 + size._dy)).get$distance();
        d4 = position.$sub(0, size.bottomRight$1(B.Offset_0_0)).get$distance();
        return Math.ceil(Math.max(Math.max(d1, d2), Math.max(d3, d4)));
      }
      return 35;
    },
    _getClipCallback_closure0: function _getClipCallback_closure0(t0) {
      this.referenceBox = t0;
    },
    _InkSplashFactory: function _InkSplashFactory() {
    },
    InkSplash: function InkSplash(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _._ink_splash$_position = t0;
      _._ink_splash$_borderRadius = t1;
      _._customBorder = t2;
      _._targetRadius = t3;
      _._clipCallback = t4;
      _._repositionToReferenceBox = t5;
      _._ink_splash$_textDirection = t6;
      _.__InkSplash__alpha_A = _.__InkSplash__radiusController_A = _.__InkSplash__radius_A = $;
      _._alphaController = null;
      _._ink_well$_color = t7;
      _._material$_controller = t8;
      _.referenceBox = t9;
      _.onRemoved = t10;
    },
    InkResponse$(autofocus, borderRadius, canRequestFocus, child, containedInkWell, customBorder, enableFeedback, excludeFromSemantics, focusColor, focusNode, highlightColor, highlightShape, hoverColor, key, mouseCursor, onDoubleTap, onFocusChange, onHighlightChanged, onHover, onLongPress, onTap, onTapCancel, onTapDown, onTapUp, overlayColor, radius, splashColor, splashFactory, statesController) {
      return new A.InkResponse(child, onTap, onTapDown, onTapUp, onTapCancel, onDoubleTap, onLongPress, onHighlightChanged, onHover, mouseCursor, containedInkWell, highlightShape, radius, borderRadius, customBorder, focusColor, hoverColor, highlightColor, overlayColor, splashColor, splashFactory, enableFeedback, false, onFocusChange, false, focusNode, canRequestFocus, statesController, key);
    },
    InkWell$(autofocus, canRequestFocus, child, customBorder, enableFeedback, focusColor, focusNode, highlightColor, hoverColor, mouseCursor, onFocusChange, onHighlightChanged, onHover, onLongPress, onTap, overlayColor, splashColor, splashFactory, statesController) {
      var _null = null;
      return new A.InkWell(child, onTap, _null, _null, _null, _null, onLongPress, onHighlightChanged, onHover, mouseCursor, true, B.BoxShape_0, _null, _null, customBorder, focusColor, hoverColor, highlightColor, overlayColor, splashColor, splashFactory, enableFeedback !== false, false, onFocusChange, false, focusNode, canRequestFocus, statesController, _null);
    },
    InteractiveInkFeature: function InteractiveInkFeature() {
    },
    InteractiveInkFeatureFactory: function InteractiveInkFeatureFactory() {
    },
    _ParentInkResponseProvider: function _ParentInkResponseProvider(t0, t1, t2) {
      this.state = t0;
      this.child = t1;
      this.key = t2;
    },
    InkResponse: function InkResponse(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28) {
      var _ = this;
      _.child = t0;
      _.onTap = t1;
      _.onTapDown = t2;
      _.onTapUp = t3;
      _.onTapCancel = t4;
      _.onDoubleTap = t5;
      _.onLongPress = t6;
      _.onHighlightChanged = t7;
      _.onHover = t8;
      _.mouseCursor = t9;
      _.containedInkWell = t10;
      _.highlightShape = t11;
      _.radius = t12;
      _.borderRadius = t13;
      _.customBorder = t14;
      _.focusColor = t15;
      _.hoverColor = t16;
      _.highlightColor = t17;
      _.overlayColor = t18;
      _.splashColor = t19;
      _.splashFactory = t20;
      _.enableFeedback = t21;
      _.excludeFromSemantics = t22;
      _.onFocusChange = t23;
      _.autofocus = t24;
      _.focusNode = t25;
      _.canRequestFocus = t26;
      _.statesController = t27;
      _.key = t28;
    },
    _InkResponseStateWidget: function _InkResponseStateWidget(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30) {
      var _ = this;
      _.child = t0;
      _.onTap = t1;
      _.onTapDown = t2;
      _.onTapUp = t3;
      _.onTapCancel = t4;
      _.onDoubleTap = t5;
      _.onLongPress = t6;
      _.onHighlightChanged = t7;
      _.onHover = t8;
      _.mouseCursor = t9;
      _.containedInkWell = t10;
      _.highlightShape = t11;
      _.radius = t12;
      _.borderRadius = t13;
      _.customBorder = t14;
      _.focusColor = t15;
      _.hoverColor = t16;
      _.highlightColor = t17;
      _.overlayColor = t18;
      _.splashColor = t19;
      _.splashFactory = t20;
      _.enableFeedback = t21;
      _.excludeFromSemantics = t22;
      _.onFocusChange = t23;
      _.autofocus = t24;
      _.focusNode = t25;
      _.canRequestFocus = t26;
      _.parentState = t27;
      _.getRectCallback = t28;
      _.statesController = t29;
      _.key = t30;
    },
    _HighlightType: function _HighlightType(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    _InkResponseState: function _InkResponseState(t0, t1, t2) {
      var _ = this;
      _._currentSplash = _._splashes = null;
      _._ink_well$_hovering = false;
      _._highlights = t0;
      _.___InkResponseState__actionMap_FI = $;
      _.internalStatesController = null;
      _._activeChildren = t1;
      _._ink_well$_hasFocus = false;
      _.AutomaticKeepAliveClientMixin__keepAliveHandle = t2;
      _._element = _._widget = null;
    },
    _InkResponseState_highlightsExist_closure: function _InkResponseState_highlightsExist_closure() {
    },
    _InkResponseState_handleStatesControllerChange_closure: function _InkResponseState_handleStatesControllerChange_closure() {
    },
    _InkResponseState_updateHighlight_handleInkRemoval: function _InkResponseState_updateHighlight_handleInkRemoval(t0, t1) {
      this.$this = t0;
      this.type = t1;
    },
    _InkResponseState__createInkFeature_onRemoved: function _InkResponseState__createInkFeature_onRemoved(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    _InkResponseState_handleFocusHighlightModeChange_closure: function _InkResponseState_handleFocusHighlightModeChange_closure(t0) {
      this.$this = t0;
    },
    _InkResponseState_build_getHighlightColorForType: function _InkResponseState_build_getHighlightColorForType(t0, t1) {
      this.$this = t0;
      this.context = t1;
    },
    InkWell: function InkWell(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28) {
      var _ = this;
      _.child = t0;
      _.onTap = t1;
      _.onTapDown = t2;
      _.onTapUp = t3;
      _.onTapCancel = t4;
      _.onDoubleTap = t5;
      _.onLongPress = t6;
      _.onHighlightChanged = t7;
      _.onHover = t8;
      _.mouseCursor = t9;
      _.containedInkWell = t10;
      _.highlightShape = t11;
      _.radius = t12;
      _.borderRadius = t13;
      _.customBorder = t14;
      _.focusColor = t15;
      _.hoverColor = t16;
      _.highlightColor = t17;
      _.overlayColor = t18;
      _.splashColor = t19;
      _.splashFactory = t20;
      _.enableFeedback = t21;
      _.excludeFromSemantics = t22;
      _.onFocusChange = t23;
      _.autofocus = t24;
      _.focusNode = t25;
      _.canRequestFocus = t26;
      _.statesController = t27;
      _.key = t28;
    },
    __InkResponseState_State_AutomaticKeepAliveClientMixin: function __InkResponseState_State_AutomaticKeepAliveClientMixin() {
    },
    FloatingLabelAlignment__stringify(x) {
      if (x === -1)
        return "FloatingLabelAlignment.start";
      if (x === 0)
        return "FloatingLabelAlignment.center";
      return "FloatingLabelAlignment(x: " + B.JSInt_methods.toStringAsFixed$1(x, 1) + ")";
    },
    FloatingLabelBehavior: function FloatingLabelBehavior(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    FloatingLabelAlignment: function FloatingLabelAlignment() {
    },
    InputDecorationTheme: function InputDecorationTheme() {
    },
    _InputDecorationTheme_Object_Diagnosticable: function _InputDecorationTheme_Object_Diagnosticable() {
    },
    ListTileThemeData$(contentPadding, dense, enableFeedback, horizontalTitleGap, iconColor, leadingAndTrailingTextStyle, minLeadingWidth, minVerticalPadding, mouseCursor, selectedColor, selectedTileColor, shape, style, subtitleTextStyle, textColor, tileColor, titleAlignment, titleTextStyle, visualDensity) {
      return new A.ListTileThemeData(dense, shape, style, selectedColor, iconColor, textColor, titleTextStyle, subtitleTextStyle, leadingAndTrailingTextStyle, contentPadding, tileColor, selectedTileColor, horizontalTitleGap, minVerticalPadding, minLeadingWidth, enableFeedback, mouseCursor, visualDensity, titleAlignment);
    },
    ListTileThemeData_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19;
      if (a === b)
        return a;
      t1 = t < 0.5;
      if (t1)
        t2 = a.dense;
      else
        t2 = b.dense;
      t3 = A.ShapeBorder_lerp(a.shape, b.shape, t);
      if (t1)
        t4 = a.style;
      else
        t4 = b.style;
      t5 = A.Color_lerp(a.selectedColor, b.selectedColor, t);
      t6 = A.Color_lerp(a.iconColor, b.iconColor, t);
      t7 = A.Color_lerp(a.textColor, b.textColor, t);
      t8 = A.TextStyle_lerp(a.titleTextStyle, b.titleTextStyle, t);
      t9 = A.TextStyle_lerp(a.subtitleTextStyle, b.subtitleTextStyle, t);
      t10 = A.TextStyle_lerp(a.leadingAndTrailingTextStyle, b.leadingAndTrailingTextStyle, t);
      t11 = A.EdgeInsetsGeometry_lerp(a.contentPadding, b.contentPadding, t);
      t12 = A.Color_lerp(a.tileColor, b.tileColor, t);
      t13 = A.Color_lerp(a.selectedTileColor, b.selectedTileColor, t);
      t14 = A.lerpDouble(a.horizontalTitleGap, b.horizontalTitleGap, t);
      t15 = A.lerpDouble(a.minVerticalPadding, b.minVerticalPadding, t);
      t16 = A.lerpDouble(a.minLeadingWidth, b.minLeadingWidth, t);
      if (t1)
        t17 = a.enableFeedback;
      else
        t17 = b.enableFeedback;
      if (t1)
        t18 = a.mouseCursor;
      else
        t18 = b.mouseCursor;
      if (t1)
        t19 = a.visualDensity;
      else
        t19 = b.visualDensity;
      if (t1)
        t1 = a.titleAlignment;
      else
        t1 = b.titleAlignment;
      return A.ListTileThemeData$(t11, t2, t17, t14, t6, t10, t16, t15, t18, t5, t13, t3, t4, t9, t7, t12, t1, t8, t19);
    },
    ListTileThemeData: function ListTileThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18) {
      var _ = this;
      _.dense = t0;
      _.shape = t1;
      _.style = t2;
      _.selectedColor = t3;
      _.iconColor = t4;
      _.textColor = t5;
      _.titleTextStyle = t6;
      _.subtitleTextStyle = t7;
      _.leadingAndTrailingTextStyle = t8;
      _.contentPadding = t9;
      _.tileColor = t10;
      _.selectedTileColor = t11;
      _.horizontalTitleGap = t12;
      _.minVerticalPadding = t13;
      _.minLeadingWidth = t14;
      _.enableFeedback = t15;
      _.mouseCursor = t16;
      _.visualDensity = t17;
      _.titleAlignment = t18;
    },
    _ListTileThemeData_Object_Diagnosticable: function _ListTileThemeData_Object_Diagnosticable() {
    },
    Material$(animationDuration, child, clipBehavior, color, elevation, key, shadowColor, shape, surfaceTintColor, textStyle, type) {
      return new A.Material(child, type, elevation, color, shadowColor, surfaceTintColor, textStyle, shape, clipBehavior, animationDuration, key);
    },
    InkFeature__getPaintTransform(fromRenderObject, toRenderObject) {
      var to, from, fromDepth, toDepth, fromParent, toParent, transform, inverseTransform, index, index0,
        t1 = type$.JSArray_RenderObject,
        fromPath = A._setArrayType([fromRenderObject], t1),
        toPath = A._setArrayType([toRenderObject], t1);
      for (to = toRenderObject, from = fromRenderObject; from !== to;) {
        fromDepth = from._depth;
        toDepth = to._depth;
        if (fromDepth >= toDepth) {
          fromParent = from._node$_parent;
          if (!(fromParent instanceof A.RenderObject) || !fromParent.paintsChild$1(from))
            return null;
          fromPath.push(fromParent);
          from = fromParent;
        }
        if (fromDepth <= toDepth) {
          toParent = to._node$_parent;
          if (!(toParent instanceof A.RenderObject) || !toParent.paintsChild$1(to))
            return null;
          toPath.push(toParent);
          to = toParent;
        }
      }
      transform = new A.Matrix4(new Float64Array(16));
      transform.setIdentity$0();
      inverseTransform = new A.Matrix4(new Float64Array(16));
      inverseTransform.setIdentity$0();
      for (index = toPath.length - 1; index > 0; index = index0) {
        index0 = index - 1;
        toPath[index].applyPaintTransform$2(toPath[index0], transform);
      }
      for (index = fromPath.length - 1; index > 0; index = index0) {
        index0 = index - 1;
        fromPath[index].applyPaintTransform$2(fromPath[index0], inverseTransform);
      }
      if (inverseTransform.copyInverse$1(inverseTransform) !== 0) {
        inverseTransform.multiply$1(transform);
        t1 = inverseTransform;
      } else
        t1 = null;
      return t1;
    },
    MaterialType: function MaterialType(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    Material: function Material(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _.child = t0;
      _.type = t1;
      _.elevation = t2;
      _.color = t3;
      _.shadowColor = t4;
      _.surfaceTintColor = t5;
      _.textStyle = t6;
      _.shape = t7;
      _.clipBehavior = t8;
      _.animationDuration = t9;
      _.key = t10;
    },
    _MaterialState: function _MaterialState(t0, t1, t2) {
      var _ = this;
      _._inkFeatureRenderer = t0;
      _.TickerProviderStateMixin__tickers = t1;
      _.TickerProviderStateMixin__tickerModeNotifier = t2;
      _._element = _._widget = null;
    },
    _MaterialState_build_closure: function _MaterialState_build_closure(t0) {
      this.$this = t0;
    },
    _RenderInkFeatures: function _RenderInkFeatures(t0, t1, t2, t3) {
      var _ = this;
      _.vsync = t0;
      _.absorbHitTest = t1;
      _._inkFeatures = null;
      _.RenderObjectWithChildMixin__child = t2;
      _.parentData = _._cachedBaselines = _._size = _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t3;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    _InkFeatures: function _InkFeatures(t0, t1, t2, t3, t4) {
      var _ = this;
      _.color = t0;
      _.vsync = t1;
      _.absorbHitTest = t2;
      _.child = t3;
      _.key = t4;
    },
    InkFeature: function InkFeature() {
    },
    ShapeBorderTween: function ShapeBorderTween(t0, t1) {
      this.begin = t0;
      this.end = t1;
    },
    _MaterialInterior: function _MaterialInterior(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11) {
      var _ = this;
      _.child = t0;
      _.shape = t1;
      _.borderOnForeground = t2;
      _.clipBehavior = t3;
      _.elevation = t4;
      _.color = t5;
      _.shadowColor = t6;
      _.surfaceTintColor = t7;
      _.curve = t8;
      _.duration = t9;
      _.onEnd = t10;
      _.key = t11;
    },
    _MaterialInteriorState: function _MaterialInteriorState(t0, t1) {
      var _ = this;
      _._border = _._shadowColor = _._surfaceTintColor = _._elevation = null;
      _.__ImplicitlyAnimatedWidgetState__animation_AI = _.__ImplicitlyAnimatedWidgetState__controller_FI = $;
      _.SingleTickerProviderStateMixin__ticker = t0;
      _.SingleTickerProviderStateMixin__tickerModeNotifier = t1;
      _._element = _._widget = null;
    },
    _MaterialInteriorState_forEachTween_closure: function _MaterialInteriorState_forEachTween_closure() {
    },
    _MaterialInteriorState_forEachTween_closure0: function _MaterialInteriorState_forEachTween_closure0() {
    },
    _MaterialInteriorState_forEachTween_closure1: function _MaterialInteriorState_forEachTween_closure1() {
    },
    _MaterialInteriorState_forEachTween_closure2: function _MaterialInteriorState_forEachTween_closure2() {
    },
    _ShapeBorderPaint: function _ShapeBorderPaint(t0, t1, t2, t3) {
      var _ = this;
      _.child = t0;
      _.shape = t1;
      _.borderOnForeground = t2;
      _.key = t3;
    },
    _ShapeBorderPainter: function _ShapeBorderPainter(t0, t1, t2) {
      this.border = t0;
      this.textDirection = t1;
      this._repaint = t2;
    },
    __MaterialState_State_TickerProviderStateMixin: function __MaterialState_State_TickerProviderStateMixin() {
    },
    _MaterialLocalizationsDelegate: function _MaterialLocalizationsDelegate() {
    },
    DefaultMaterialLocalizations: function DefaultMaterialLocalizations() {
    },
    MaterialStateProperty_resolveAs(value, states, $T) {
      if ($T._eval$1("MaterialStateProperty<0>")._is(value))
        return value.resolve$1(states);
      return value;
    },
    MaterialStateProperty_lerp(a, b, t, lerpFunction, $T) {
      if (a == null && b == null)
        return null;
      return new A._LerpProperties(a, b, t, lerpFunction, $T._eval$1("_LerpProperties<0>"));
    },
    MaterialStatesController$(value) {
      var t1 = A.LinkedHashSet_LinkedHashSet$_empty(type$.MaterialState);
      if (value != null)
        t1.addAll$1(0, value);
      return new A.MaterialStatesController(t1, $.$get$ChangeNotifier__emptyListeners());
    },
    MaterialState: function MaterialState(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    MaterialStateMouseCursor: function MaterialStateMouseCursor() {
    },
    _EnabledAndDisabledMouseCursor: function _EnabledAndDisabledMouseCursor() {
    },
    MaterialStateProperty: function MaterialStateProperty() {
    },
    _LerpProperties: function _LerpProperties(t0, t1, t2, t3, t4) {
      var _ = this;
      _.a = t0;
      _.b = t1;
      _.t = t2;
      _.lerpFunction = t3;
      _.$ti = t4;
    },
    _MaterialStatePropertyWith: function _MaterialStatePropertyWith(t0, t1) {
      this._material_state$_resolve = t0;
      this.$ti = t1;
    },
    MaterialStatePropertyAll: function MaterialStatePropertyAll(t0, t1) {
      this.value = t0;
      this.$ti = t1;
    },
    MaterialStatesController: function MaterialStatesController(t0, t1) {
      var _ = this;
      _._change_notifier$_value = t0;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t1;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
    },
    MenuBarThemeData_lerp(a, b, t) {
      if (a === b)
        return a;
      return new A.MenuBarThemeData(A.MenuStyle_lerp(a.style, b.style, t));
    },
    MenuBarThemeData: function MenuBarThemeData(t0) {
      this.style = t0;
    },
    MenuButtonThemeData_lerp(a, b, t) {
      if (a === b)
        return a;
      return new A.MenuButtonThemeData(A.ButtonStyle_lerp(a.style, b.style, t));
    },
    MenuButtonThemeData: function MenuButtonThemeData(t0) {
      this.style = t0;
    },
    _MenuButtonThemeData_Object_Diagnosticable: function _MenuButtonThemeData_Object_Diagnosticable() {
    },
    MenuStyle_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, _null = null;
      if (a == b)
        return a;
      t1 = a == null;
      t2 = t1 ? _null : a.backgroundColor;
      t3 = b == null;
      t4 = t3 ? _null : b.backgroundColor;
      t5 = type$.nullable_Color;
      t4 = A.MaterialStateProperty_lerp(t2, t4, t, A.ui_Color_lerp$closure(), t5);
      t2 = t1 ? _null : a.shadowColor;
      t2 = A.MaterialStateProperty_lerp(t2, t3 ? _null : b.shadowColor, t, A.ui_Color_lerp$closure(), t5);
      t6 = t1 ? _null : a.surfaceTintColor;
      t5 = A.MaterialStateProperty_lerp(t6, t3 ? _null : b.surfaceTintColor, t, A.ui_Color_lerp$closure(), t5);
      t6 = t1 ? _null : a.elevation;
      t7 = t3 ? _null : b.elevation;
      t7 = A.MaterialStateProperty_lerp(t6, t7, t, A.ui__lerpDouble$closure(), type$.nullable_double);
      t6 = t1 ? _null : a.padding;
      t8 = t3 ? _null : b.padding;
      t8 = A.MaterialStateProperty_lerp(t6, t8, t, A.edge_insets_EdgeInsetsGeometry_lerp$closure(), type$.nullable_EdgeInsetsGeometry);
      t6 = t1 ? _null : a.minimumSize;
      t9 = t3 ? _null : b.minimumSize;
      t10 = type$.nullable_Size;
      t9 = A.MaterialStateProperty_lerp(t6, t9, t, A.ui_Size_lerp$closure(), t10);
      t6 = t1 ? _null : a.fixedSize;
      t6 = A.MaterialStateProperty_lerp(t6, t3 ? _null : b.fixedSize, t, A.ui_Size_lerp$closure(), t10);
      t11 = t1 ? _null : a.maximumSize;
      t10 = A.MaterialStateProperty_lerp(t11, t3 ? _null : b.maximumSize, t, A.ui_Size_lerp$closure(), t10);
      t11 = t1 ? _null : a.side;
      t12 = t3 ? _null : b.side;
      t13 = t1 ? _null : a.shape;
      t14 = t3 ? _null : b.shape;
      t14 = A.MaterialStateProperty_lerp(t13, t14, t, A.borders_OutlinedBorder_lerp$closure(), type$.nullable_OutlinedBorder);
      t13 = t < 0.5;
      if (t13)
        t15 = t1 ? _null : a.mouseCursor;
      else
        t15 = t3 ? _null : b.mouseCursor;
      if (t13)
        t13 = t1 ? _null : a.visualDensity;
      else
        t13 = t3 ? _null : b.visualDensity;
      t1 = t1 ? _null : a.alignment;
      return new A.MenuStyle(t4, t2, t5, t7, t8, t9, t6, t10, new A._LerpSides0(t11, t12, t), t14, t15, t13, A.AlignmentGeometry_lerp(t1, t3 ? _null : b.alignment, t));
    },
    MenuStyle: function MenuStyle(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12) {
      var _ = this;
      _.backgroundColor = t0;
      _.shadowColor = t1;
      _.surfaceTintColor = t2;
      _.elevation = t3;
      _.padding = t4;
      _.minimumSize = t5;
      _.fixedSize = t6;
      _.maximumSize = t7;
      _.side = t8;
      _.shape = t9;
      _.mouseCursor = t10;
      _.visualDensity = t11;
      _.alignment = t12;
    },
    _LerpSides0: function _LerpSides0(t0, t1, t2) {
      this.a = t0;
      this.b = t1;
      this.t = t2;
    },
    _MenuStyle_Object_Diagnosticable: function _MenuStyle_Object_Diagnosticable() {
    },
    MenuThemeData_lerp(a, b, t) {
      if (a === b)
        return a;
      return new A.MenuThemeData(A.MenuStyle_lerp(a.style, b.style, t));
    },
    MenuThemeData: function MenuThemeData(t0) {
      this.style = t0;
    },
    _MenuThemeData_Object_Diagnosticable: function _MenuThemeData_Object_Diagnosticable() {
    },
    NavigationBarThemeData_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10;
      if (a === b)
        return a;
      t1 = A.lerpDouble(a.height, b.height, t);
      t2 = A.Color_lerp(a.backgroundColor, b.backgroundColor, t);
      t3 = A.lerpDouble(a.elevation, b.elevation, t);
      t4 = A.Color_lerp(a.shadowColor, b.shadowColor, t);
      t5 = A.Color_lerp(a.surfaceTintColor, b.surfaceTintColor, t);
      t6 = A.Color_lerp(a.indicatorColor, b.indicatorColor, t);
      t7 = A.ShapeBorder_lerp(a.indicatorShape, b.indicatorShape, t);
      t8 = A.MaterialStateProperty_lerp(a.labelTextStyle, b.labelTextStyle, t, A.text_style_TextStyle_lerp$closure(), type$.nullable_TextStyle);
      t9 = A.MaterialStateProperty_lerp(a.iconTheme, b.iconTheme, t, A.icon_theme_data_IconThemeData_lerp$closure(), type$.nullable_IconThemeData);
      if (t < 0.5)
        t10 = a.labelBehavior;
      else
        t10 = b.labelBehavior;
      return new A.NavigationBarThemeData(t1, t2, t3, t4, t5, t6, t7, t8, t9, t10);
    },
    NavigationBarThemeData: function NavigationBarThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _.height = t0;
      _.backgroundColor = t1;
      _.elevation = t2;
      _.shadowColor = t3;
      _.surfaceTintColor = t4;
      _.indicatorColor = t5;
      _.indicatorShape = t6;
      _.labelTextStyle = t7;
      _.iconTheme = t8;
      _.labelBehavior = t9;
    },
    _NavigationBarThemeData_Object_Diagnosticable: function _NavigationBarThemeData_Object_Diagnosticable() {
    },
    NavigationDrawerThemeData_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9;
      if (a === b)
        return a;
      t1 = A.lerpDouble(a.tileHeight, b.tileHeight, t);
      t2 = A.Color_lerp(a.backgroundColor, b.backgroundColor, t);
      t3 = A.lerpDouble(a.elevation, b.elevation, t);
      t4 = A.Color_lerp(a.shadowColor, b.shadowColor, t);
      t5 = A.Color_lerp(a.surfaceTintColor, b.surfaceTintColor, t);
      t6 = A.Color_lerp(a.indicatorColor, b.indicatorColor, t);
      t7 = A.ShapeBorder_lerp(a.indicatorShape, b.indicatorShape, t);
      t8 = a.indicatorSize;
      t8 = A.Size_lerp(t8, t8, t);
      t9 = A.MaterialStateProperty_lerp(a.labelTextStyle, b.labelTextStyle, t, A.text_style_TextStyle_lerp$closure(), type$.nullable_TextStyle);
      return new A.NavigationDrawerThemeData(t1, t2, t3, t4, t5, t6, t7, t8, t9, A.MaterialStateProperty_lerp(a.iconTheme, b.iconTheme, t, A.icon_theme_data_IconThemeData_lerp$closure(), type$.nullable_IconThemeData));
    },
    NavigationDrawerThemeData: function NavigationDrawerThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _.tileHeight = t0;
      _.backgroundColor = t1;
      _.elevation = t2;
      _.shadowColor = t3;
      _.surfaceTintColor = t4;
      _.indicatorColor = t5;
      _.indicatorShape = t6;
      _.indicatorSize = t7;
      _.labelTextStyle = t8;
      _.iconTheme = t9;
    },
    _NavigationDrawerThemeData_Object_Diagnosticable: function _NavigationDrawerThemeData_Object_Diagnosticable() {
    },
    NavigationRailThemeData_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12;
      if (a === b)
        return a;
      t1 = A.Color_lerp(a.backgroundColor, b.backgroundColor, t);
      t2 = A.lerpDouble(a.elevation, b.elevation, t);
      t3 = A.TextStyle_lerp(a.unselectedLabelTextStyle, b.unselectedLabelTextStyle, t);
      t4 = A.TextStyle_lerp(a.selectedLabelTextStyle, b.selectedLabelTextStyle, t);
      t5 = a.unselectedIconTheme;
      if (t5 == null)
        t6 = b.unselectedIconTheme == null;
      else
        t6 = false;
      if (t6)
        t5 = null;
      else
        t5 = A.IconThemeData_lerp(t5, b.unselectedIconTheme, t);
      t6 = a.selectedIconTheme;
      if (t6 == null)
        t7 = b.selectedIconTheme == null;
      else
        t7 = false;
      if (t7)
        t6 = null;
      else
        t6 = A.IconThemeData_lerp(t6, b.selectedIconTheme, t);
      t7 = A.lerpDouble(a.groupAlignment, b.groupAlignment, t);
      t8 = t < 0.5;
      if (t8)
        t9 = a.labelType;
      else
        t9 = b.labelType;
      if (t8)
        t8 = a.useIndicator;
      else
        t8 = b.useIndicator;
      t10 = A.Color_lerp(a.indicatorColor, b.indicatorColor, t);
      t11 = A.ShapeBorder_lerp(a.indicatorShape, b.indicatorShape, t);
      t12 = A.lerpDouble(a.minWidth, b.minWidth, t);
      return new A.NavigationRailThemeData(t1, t2, t3, t4, t5, t6, t7, t9, t8, t10, t11, t12, A.lerpDouble(a.minExtendedWidth, b.minExtendedWidth, t));
    },
    NavigationRailThemeData: function NavigationRailThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12) {
      var _ = this;
      _.backgroundColor = t0;
      _.elevation = t1;
      _.unselectedLabelTextStyle = t2;
      _.selectedLabelTextStyle = t3;
      _.unselectedIconTheme = t4;
      _.selectedIconTheme = t5;
      _.groupAlignment = t6;
      _.labelType = t7;
      _.useIndicator = t8;
      _.indicatorColor = t9;
      _.indicatorShape = t10;
      _.minWidth = t11;
      _.minExtendedWidth = t12;
    },
    _NavigationRailThemeData_Object_Diagnosticable: function _NavigationRailThemeData_Object_Diagnosticable() {
    },
    OutlinedButtonThemeData_lerp(a, b, t) {
      if (a === b)
        return a;
      return new A.OutlinedButtonThemeData(A.ButtonStyle_lerp(a.style, b.style, t));
    },
    OutlinedButtonThemeData: function OutlinedButtonThemeData(t0) {
      this.style = t0;
    },
    _OutlinedButtonThemeData_Object_Diagnosticable: function _OutlinedButtonThemeData_Object_Diagnosticable() {
    },
    MaterialPageRoute: function MaterialPageRoute(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15) {
      var _ = this;
      _.builder = t0;
      _.fullscreenDialog = t1;
      _.allowSnapshotting = t2;
      _._offstage = false;
      _._secondaryAnimationProxy = _._animationProxy = null;
      _._willPopCallbacks = t3;
      _._scopeKey = t4;
      _._subtreeKey = t5;
      _._storageBucket = t6;
      _.__ModalRoute__modalBarrier_A = $;
      _._modalScopeCache = null;
      _.__ModalRoute__modalScope_A = $;
      _.LocalHistoryRoute__localHistory = t7;
      _.LocalHistoryRoute__entriesImpliesAppBarDismissal = t8;
      _._transitionCompleter = t9;
      _._performanceModeRequestHandle = null;
      _._popFinalized = false;
      _._routes$_controller = _._routes$_animation = null;
      _._secondaryAnimation = t10;
      _._trainHoppingListenerRemover = _._result = null;
      _._overlayEntries = t11;
      _._navigator = null;
      _._settings = t12;
      _._restorationScopeId = t13;
      _._popCompleter = t14;
      _.$ti = t15;
    },
    MaterialRouteTransitionMixin: function MaterialRouteTransitionMixin() {
    },
    _MaterialPageRoute_PageRoute_MaterialRouteTransitionMixin: function _MaterialPageRoute_PageRoute_MaterialRouteTransitionMixin() {
    },
    _updateScaledTransform(transform, scale, size) {
      var t1, t2;
      transform.setIdentity$0();
      if (scale === 1)
        return;
      transform.scale$2(scale, scale);
      t1 = size._dx;
      t2 = size._dy;
      transform.translate$2(-((t1 * scale - t1) / 2), -((t2 * scale - t2) / 2));
    },
    _ZoomEnterTransitionPainter$(animation, fade, reverse, scale) {
      var t1 = new A._ZoomEnterTransitionPainter(reverse, animation, scale, fade, new A.Matrix4(new Float64Array(16)), A.LayerHandle$(), A.LayerHandle$(), $.$get$ChangeNotifier__emptyListeners()),
        t2 = t1.get$notifyListeners();
      animation.addListener$1(t2);
      animation.addStatusListener$1(t1.get$_onStatusChange());
      scale.parent.addListener$1(t2);
      fade.addListener$1(t2);
      return t1;
    },
    _ZoomExitTransitionPainter$(animation, fade, reverse, scale) {
      var t1 = new A._ZoomExitTransitionPainter(reverse, scale, fade, animation, new A.Matrix4(new Float64Array(16)), A.LayerHandle$(), A.LayerHandle$(), $.$get$ChangeNotifier__emptyListeners()),
        t2 = t1.get$notifyListeners();
      scale.parent.addListener$1(t2);
      fade.addListener$1(t2);
      animation.addStatusListener$1(t1.get$_onStatusChange());
      return t1;
    },
    _ZoomPageTransition: function _ZoomPageTransition(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.animation = t0;
      _.secondaryAnimation = t1;
      _.allowSnapshotting = t2;
      _.child = t3;
      _.allowEnterRouteSnapshotting = t4;
      _.key = t5;
    },
    _ZoomPageTransition_build_closure: function _ZoomPageTransition_build_closure(t0) {
      this.$this = t0;
    },
    _ZoomPageTransition_build_closure0: function _ZoomPageTransition_build_closure0(t0) {
      this.$this = t0;
    },
    _ZoomPageTransition_build_closure1: function _ZoomPageTransition_build_closure1(t0) {
      this.$this = t0;
    },
    _ZoomPageTransition_build_closure2: function _ZoomPageTransition_build_closure2(t0) {
      this.$this = t0;
    },
    _ZoomEnterTransition: function _ZoomEnterTransition(t0, t1, t2, t3, t4) {
      var _ = this;
      _.animation = t0;
      _.child = t1;
      _.allowSnapshotting = t2;
      _.reverse = t3;
      _.key = t4;
    },
    _ZoomEnterTransitionState: function _ZoomEnterTransitionState(t0, t1, t2) {
      var _ = this;
      _.___ZoomEnterTransitionState_delegate_A = $;
      _._ZoomTransitionBase_controller = t0;
      _._ZoomTransitionBase____ZoomTransitionBase_fadeTransition_A = t1;
      _._ZoomTransitionBase____ZoomTransitionBase_scaleTransition_A = t2;
      _._element = _._widget = null;
    },
    _ZoomExitTransition: function _ZoomExitTransition(t0, t1, t2, t3, t4) {
      var _ = this;
      _.animation = t0;
      _.allowSnapshotting = t1;
      _.reverse = t2;
      _.child = t3;
      _.key = t4;
    },
    _ZoomExitTransitionState: function _ZoomExitTransitionState(t0, t1, t2) {
      var _ = this;
      _.___ZoomExitTransitionState_delegate_A = $;
      _._ZoomTransitionBase_controller = t0;
      _._ZoomTransitionBase____ZoomTransitionBase_fadeTransition_A = t1;
      _._ZoomTransitionBase____ZoomTransitionBase_scaleTransition_A = t2;
      _._element = _._widget = null;
    },
    PageTransitionsBuilder: function PageTransitionsBuilder() {
    },
    ZoomPageTransitionsBuilder: function ZoomPageTransitionsBuilder() {
    },
    CupertinoPageTransitionsBuilder: function CupertinoPageTransitionsBuilder() {
    },
    PageTransitionsTheme: function PageTransitionsTheme() {
    },
    PageTransitionsTheme__all_closure: function PageTransitionsTheme__all_closure(t0) {
      this.builders = t0;
    },
    _ZoomTransitionBase: function _ZoomTransitionBase() {
    },
    _ZoomEnterTransitionPainter: function _ZoomEnterTransitionPainter(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.reverse = t0;
      _.animation = t1;
      _.scale = t2;
      _.fade = t3;
      _._page_transitions_theme$_transform = t4;
      _._opacityHandle = t5;
      _._transformHandler = t6;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t7;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
    },
    _ZoomEnterTransitionPainter_paint_closure: function _ZoomEnterTransitionPainter_paint_closure(t0, t1) {
      this.$this = t0;
      this.painter = t1;
    },
    _ZoomExitTransitionPainter: function _ZoomExitTransitionPainter(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.reverse = t0;
      _.scale = t1;
      _.fade = t2;
      _.animation = t3;
      _._page_transitions_theme$_transform = t4;
      _._opacityHandle = t5;
      _._transformHandler = t6;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t7;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
    },
    _ZoomExitTransitionPainter_paint_closure: function _ZoomExitTransitionPainter_paint_closure(t0, t1) {
      this.$this = t0;
      this.painter = t1;
    },
    _PageTransitionsTheme_Object_Diagnosticable: function _PageTransitionsTheme_Object_Diagnosticable() {
    },
    __ZoomEnterTransitionState_State__ZoomTransitionBase: function __ZoomEnterTransitionState_State__ZoomTransitionBase() {
    },
    __ZoomExitTransitionState_State__ZoomTransitionBase: function __ZoomExitTransitionState_State__ZoomTransitionBase() {
    },
    PopupMenuThemeData_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10;
      if (a === b)
        return a;
      t1 = A.Color_lerp(a.color, b.color, t);
      t2 = A.ShapeBorder_lerp(a.shape, b.shape, t);
      t3 = A.lerpDouble(a.elevation, b.elevation, t);
      t4 = A.Color_lerp(a.shadowColor, b.shadowColor, t);
      t5 = A.Color_lerp(a.surfaceTintColor, b.surfaceTintColor, t);
      t6 = A.TextStyle_lerp(a.textStyle, b.textStyle, t);
      t7 = A.MaterialStateProperty_lerp(a.labelTextStyle, b.labelTextStyle, t, A.text_style_TextStyle_lerp$closure(), type$.nullable_TextStyle);
      t8 = t < 0.5;
      if (t8)
        t9 = a.enableFeedback;
      else
        t9 = b.enableFeedback;
      if (t8)
        t10 = a.mouseCursor;
      else
        t10 = b.mouseCursor;
      if (t8)
        t8 = a.position;
      else
        t8 = b.position;
      return new A.PopupMenuThemeData(t1, t2, t3, t4, t5, t6, t7, t9, t10, t8);
    },
    PopupMenuThemeData: function PopupMenuThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _.color = t0;
      _.shape = t1;
      _.elevation = t2;
      _.shadowColor = t3;
      _.surfaceTintColor = t4;
      _.textStyle = t5;
      _.labelTextStyle = t6;
      _.enableFeedback = t7;
      _.mouseCursor = t8;
      _.position = t9;
    },
    _PopupMenuThemeData_Object_Diagnosticable: function _PopupMenuThemeData_Object_Diagnosticable() {
    },
    _ActivityIndicatorType: function _ActivityIndicatorType(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    ProgressIndicator: function ProgressIndicator() {
    },
    _CircularProgressIndicatorPainter: function _CircularProgressIndicatorPainter(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _.backgroundColor = t0;
      _.valueColor = t1;
      _.value = t2;
      _.headValue = t3;
      _.tailValue = t4;
      _.offsetValue = t5;
      _.rotationValue = t6;
      _.strokeWidth = t7;
      _.arcStart = t8;
      _.arcSweep = t9;
      _._repaint = t10;
    },
    CircularProgressIndicator: function CircularProgressIndicator(t0) {
      this.key = t0;
    },
    _CircularProgressIndicatorState: function _CircularProgressIndicatorState(t0, t1) {
      var _ = this;
      _.___CircularProgressIndicatorState__controller_A = $;
      _.SingleTickerProviderStateMixin__ticker = t0;
      _.SingleTickerProviderStateMixin__tickerModeNotifier = t1;
      _._element = _._widget = null;
    },
    _CircularProgressIndicatorState__buildAnimation_closure: function _CircularProgressIndicatorState__buildAnimation_closure(t0) {
      this.$this = t0;
    },
    _CircularProgressIndicatorDefaultsM2: function _CircularProgressIndicatorDefaultsM2(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.context = t0;
      _.___CircularProgressIndicatorDefaultsM2__colors_FI = $;
      _.color = t1;
      _.linearTrackColor = t2;
      _.linearMinHeight = t3;
      _.circularTrackColor = t4;
      _.refreshBackgroundColor = t5;
    },
    __CircularProgressIndicatorState_State_SingleTickerProviderStateMixin: function __CircularProgressIndicatorState_State_SingleTickerProviderStateMixin() {
    },
    ProgressIndicatorThemeData_lerp(a, b, t) {
      var t1, t2, t3, t4;
      if (a === b)
        return a;
      t1 = A.Color_lerp(a.color, b.color, t);
      t2 = A.Color_lerp(a.linearTrackColor, b.linearTrackColor, t);
      t3 = A.lerpDouble(a.linearMinHeight, b.linearMinHeight, t);
      t4 = A.Color_lerp(a.circularTrackColor, b.circularTrackColor, t);
      return new A.ProgressIndicatorThemeData(t1, t2, t3, t4, A.Color_lerp(a.refreshBackgroundColor, b.refreshBackgroundColor, t));
    },
    ProgressIndicatorTheme_of(context) {
      var t1;
      context.dependOnInheritedWidgetOfExactType$1$0(type$.ProgressIndicatorTheme);
      t1 = A.Theme_of(context);
      return t1.progressIndicatorTheme;
    },
    ProgressIndicatorThemeData: function ProgressIndicatorThemeData(t0, t1, t2, t3, t4) {
      var _ = this;
      _.color = t0;
      _.linearTrackColor = t1;
      _.linearMinHeight = t2;
      _.circularTrackColor = t3;
      _.refreshBackgroundColor = t4;
    },
    _ProgressIndicatorThemeData_Object_Diagnosticable: function _ProgressIndicatorThemeData_Object_Diagnosticable() {
    },
    RadioThemeData_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6;
      if (a === b)
        return a;
      t1 = t < 0.5;
      if (t1)
        t2 = a.mouseCursor;
      else
        t2 = b.mouseCursor;
      t3 = type$.nullable_Color;
      t4 = A.MaterialStateProperty_lerp(a.fillColor, b.fillColor, t, A.ui_Color_lerp$closure(), t3);
      if (t1)
        t5 = a.materialTapTargetSize;
      else
        t5 = b.materialTapTargetSize;
      t3 = A.MaterialStateProperty_lerp(a.overlayColor, b.overlayColor, t, A.ui_Color_lerp$closure(), t3);
      t6 = A.lerpDouble(a.splashRadius, b.splashRadius, t);
      if (t1)
        t1 = a.visualDensity;
      else
        t1 = b.visualDensity;
      return new A.RadioThemeData(t2, t4, t3, t6, t5, t1);
    },
    RadioThemeData: function RadioThemeData(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.mouseCursor = t0;
      _.fillColor = t1;
      _.overlayColor = t2;
      _.splashRadius = t3;
      _.materialTapTargetSize = t4;
      _.visualDensity = t5;
    },
    _RadioThemeData_Object_Diagnosticable: function _RadioThemeData_Object_Diagnosticable() {
    },
    Scaffold_of(context) {
      var result = context.findAncestorStateOfType$1$0(type$.ScaffoldState);
      if (result != null)
        return result;
      throw A.wrapException(A.FlutterError$fromParts(A._setArrayType([A.ErrorSummary$("Scaffold.of() called with a context that does not contain a Scaffold."), A.ErrorDescription$("No Scaffold ancestor could be found starting from the context that was passed to Scaffold.of(). This usually happens when the context provided is from the same StatefulWidget as that whose build function actually creates the Scaffold widget being sought."), A.ErrorHint$('There are several ways to avoid this problem. The simplest is to use a Builder to get a context that is "under" the Scaffold. For an example of this, please see the documentation for Scaffold.of():\n  https://api.flutter.dev/flutter/material/Scaffold/of.html'), A.ErrorHint$("A more efficient solution is to split your build function into several widgets. This introduces a new context from which you can obtain the Scaffold. In this solution, you would have an outer widget that creates the Scaffold populated by instances of your new inner widgets, and then in these inner widgets you would use Scaffold.of().\nA less elegant but more expedient solution is assign a GlobalKey to the Scaffold, then use the key.currentState property to obtain the ScaffoldState rather than using the Scaffold.of() function."), context.describeElement$1("The context used was")], type$.JSArray_DiagnosticsNode)));
    },
    _ScaffoldSlot: function _ScaffoldSlot(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    ScaffoldMessenger: function ScaffoldMessenger(t0, t1) {
      this.child = t0;
      this.key = t1;
    },
    ScaffoldMessengerState: function ScaffoldMessengerState(t0, t1, t2, t3, t4) {
      var _ = this;
      _._scaffolds = t0;
      _._materialBanners = t1;
      _._snackBars = t2;
      _._accessibleNavigation = _._snackBarTimer = null;
      _.TickerProviderStateMixin__tickers = t3;
      _.TickerProviderStateMixin__tickerModeNotifier = t4;
      _._element = _._widget = null;
    },
    ScaffoldMessengerState_hideCurrentSnackBar_closure: function ScaffoldMessengerState_hideCurrentSnackBar_closure(t0, t1) {
      this.completer = t0;
      this.reason = t1;
    },
    _ScaffoldMessengerScope: function _ScaffoldMessengerScope(t0, t1, t2) {
      this._scaffoldMessengerState = t0;
      this.child = t1;
      this.key = t2;
    },
    ScaffoldPrelayoutGeometry: function ScaffoldPrelayoutGeometry(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.floatingActionButtonSize = t0;
      _.bottomSheetSize = t1;
      _.contentBottom = t2;
      _.minInsets = t3;
      _.minViewPadding = t4;
      _.scaffoldSize = t5;
      _.snackBarSize = t6;
      _.textDirection = t7;
    },
    ScaffoldGeometry: function ScaffoldGeometry(t0, t1) {
      this.bottomNavigationBarTop = t0;
      this.floatingActionButtonArea = t1;
    },
    _ScaffoldGeometryNotifier: function _ScaffoldGeometryNotifier(t0, t1) {
      var _ = this;
      _.floatingActionButtonScale = null;
      _.geometry = t0;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t1;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
    },
    _BodyBoxConstraints: function _BodyBoxConstraints(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.bottomWidgetsHeight = t0;
      _.appBarHeight = t1;
      _.materialBannerHeight = t2;
      _.minWidth = t3;
      _.maxWidth = t4;
      _.minHeight = t5;
      _.maxHeight = t6;
    },
    _BodyBuilder: function _BodyBuilder(t0, t1, t2, t3) {
      var _ = this;
      _.body = t0;
      _.extendBody = t1;
      _.extendBodyBehindAppBar = t2;
      _.key = t3;
    },
    _ScaffoldLayout: function _ScaffoldLayout(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12) {
      var _ = this;
      _.extendBody = t0;
      _.extendBodyBehindAppBar = t1;
      _.minInsets = t2;
      _.minViewPadding = t3;
      _.textDirection = t4;
      _.geometryNotifier = t5;
      _.previousFloatingActionButtonLocation = t6;
      _.currentFloatingActionButtonLocation = t7;
      _.floatingActionButtonMoveAnimationProgress = t8;
      _.floatingActionButtonMotionAnimator = t9;
      _.isSnackBarFloating = t10;
      _.snackBarWidth = t11;
      _.extendBodyBehindMaterialBanner = t12;
      _._idToChild = null;
    },
    _FloatingActionButtonTransition: function _FloatingActionButtonTransition(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.child = t0;
      _.fabMoveAnimation = t1;
      _.fabMotionAnimator = t2;
      _.geometryNotifier = t3;
      _.currentController = t4;
      _.key = t5;
    },
    _FloatingActionButtonTransitionState: function _FloatingActionButtonTransitionState(t0, t1) {
      var _ = this;
      _.___FloatingActionButtonTransitionState__currentRotationAnimation_A = _.___FloatingActionButtonTransitionState__extendedCurrentScaleAnimation_A = _.___FloatingActionButtonTransitionState__currentScaleAnimation_A = _.___FloatingActionButtonTransitionState__previousRotationAnimation_A = _.___FloatingActionButtonTransitionState__previousScaleAnimation_A = _.___FloatingActionButtonTransitionState__previousController_A = $;
      _._previousChild = null;
      _.TickerProviderStateMixin__tickers = t0;
      _.TickerProviderStateMixin__tickerModeNotifier = t1;
      _._element = _._widget = null;
    },
    _FloatingActionButtonTransitionState__handlePreviousAnimationStatusChanged_closure: function _FloatingActionButtonTransitionState__handlePreviousAnimationStatusChanged_closure(t0, t1) {
      this.$this = t0;
      this.status = t1;
    },
    Scaffold: function Scaffold(t0, t1, t2) {
      this.appBar = t0;
      this.body = t1;
      this.key = t2;
    },
    ScaffoldState: function ScaffoldState(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14) {
      var _ = this;
      _._drawerKey = t0;
      _._endDrawerKey = t1;
      _._bodyKey = t2;
      _._appBarMaxHeight = null;
      _._drawerOpened = t3;
      _._endDrawerOpened = t4;
      _._messengerMaterialBanner = _._messengerSnackBar = _._scaffoldMessenger = null;
      _._dismissedBottomSheets = t5;
      _._currentBottomSheet = null;
      _._currentBottomSheetKey = t6;
      _._persistentSheetHistoryEntry = null;
      _.__ScaffoldState__floatingActionButtonAnimator_A = _.__ScaffoldState__floatingActionButtonMoveController_A = $;
      _._floatingActionButtonLocation = _._previousFloatingActionButtonLocation = null;
      _.__ScaffoldState__geometryNotifier_A = _.__ScaffoldState__floatingActionButtonVisibilityController_A = $;
      _._showBodyScrim = false;
      _._bodyScrimColor = t7;
      _.RestorationMixin__bucket = t8;
      _.RestorationMixin__properties = t9;
      _.RestorationMixin__debugPropertiesWaitingForReregistration = t10;
      _.RestorationMixin__firstRestorePending = t11;
      _.RestorationMixin__currentParent = t12;
      _.TickerProviderStateMixin__tickers = t13;
      _.TickerProviderStateMixin__tickerModeNotifier = t14;
      _._element = _._widget = null;
    },
    ScaffoldState__updateSnackBar_closure: function ScaffoldState__updateSnackBar_closure(t0, t1) {
      this.$this = t0;
      this.messengerSnackBar = t1;
    },
    ScaffoldState__updateMaterialBanner_closure: function ScaffoldState__updateMaterialBanner_closure(t0, t1) {
      this.$this = t0;
      this.messengerMaterialBanner = t1;
    },
    ScaffoldState_build_closure: function ScaffoldState_build_closure(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._box_0 = t0;
      _.$this = t1;
      _.extendBody = t2;
      _.minInsets = t3;
      _.minViewPadding = t4;
      _.textDirection = t5;
      _.children = t6;
    },
    _DismissDrawerAction: function _DismissDrawerAction(t0, t1) {
      this.context = t0;
      this._actions$_listeners = t1;
      this._currentCallingAction = null;
    },
    _ScaffoldScope: function _ScaffoldScope(t0, t1, t2) {
      this.hasDrawer = t0;
      this.child = t1;
      this.key = t2;
    },
    _ScaffoldState_State_TickerProviderStateMixin_RestorationMixin_dispose_closure: function _ScaffoldState_State_TickerProviderStateMixin_RestorationMixin_dispose_closure() {
    },
    _ScaffoldMessengerState_State_TickerProviderStateMixin: function _ScaffoldMessengerState_State_TickerProviderStateMixin() {
    },
    _ScaffoldState_State_TickerProviderStateMixin: function _ScaffoldState_State_TickerProviderStateMixin() {
    },
    _ScaffoldState_State_TickerProviderStateMixin_RestorationMixin: function _ScaffoldState_State_TickerProviderStateMixin_RestorationMixin() {
    },
    __FloatingActionButtonTransitionState_State_TickerProviderStateMixin: function __FloatingActionButtonTransitionState_State_TickerProviderStateMixin() {
    },
    Scrollbar: function Scrollbar(t0, t1, t2) {
      this.child = t0;
      this.controller = t1;
      this.key = t2;
    },
    _MaterialScrollbar: function _MaterialScrollbar(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14) {
      var _ = this;
      _.showTrackOnHover = t0;
      _.hoverThickness = t1;
      _.child = t2;
      _.controller = t3;
      _.thumbVisibility = t4;
      _.radius = t5;
      _.thickness = t6;
      _.trackVisibility = t7;
      _.fadeDuration = t8;
      _.timeToFade = t9;
      _.pressDuration = t10;
      _.notificationPredicate = t11;
      _.interactive = t12;
      _.scrollbarOrientation = t13;
      _.key = t14;
    },
    _MaterialScrollbarState: function _MaterialScrollbarState(t0, t1, t2) {
      var _ = this;
      _.___MaterialScrollbarState__hoverAnimationController_A = $;
      _._scrollbar0$_hoverIsActive = _._dragIsActive = false;
      _.___MaterialScrollbarState__useAndroidScrollbar_A = _.___MaterialScrollbarState__scrollbarTheme_A = _.___MaterialScrollbarState__colorScheme_A = $;
      _._fadeoutTimer = _._cachedController = _._startDragThumbOffset = _._lastDragUpdateOffset = _._startDragScrollbarAxisOffset = null;
      _.__RawScrollbarState__fadeoutOpacityAnimation_A = _.__RawScrollbarState__fadeoutAnimationController_A = $;
      _._scrollbarPainterKey = t0;
      _._thumbDragging = _._hoverIsActive = false;
      _.__RawScrollbarState_scrollbarPainter_F = $;
      _.TickerProviderStateMixin__tickers = t1;
      _.TickerProviderStateMixin__tickerModeNotifier = t2;
      _._element = _._widget = null;
    },
    _MaterialScrollbarState__trackVisibility_closure: function _MaterialScrollbarState__trackVisibility_closure(t0) {
      this.$this = t0;
    },
    _MaterialScrollbarState__thumbColor_closure: function _MaterialScrollbarState__thumbColor_closure(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.dragColor = t1;
      _.hoverColor = t2;
      _.idleColor = t3;
    },
    _MaterialScrollbarState__trackColor_closure: function _MaterialScrollbarState__trackColor_closure(t0, t1, t2) {
      this.$this = t0;
      this.brightness = t1;
      this.onSurface = t2;
    },
    _MaterialScrollbarState__trackBorderColor_closure: function _MaterialScrollbarState__trackBorderColor_closure(t0, t1, t2) {
      this.$this = t0;
      this.brightness = t1;
      this.onSurface = t2;
    },
    _MaterialScrollbarState__thickness_closure: function _MaterialScrollbarState__thickness_closure(t0) {
      this.$this = t0;
    },
    _MaterialScrollbarState_initState_closure: function _MaterialScrollbarState_initState_closure(t0) {
      this.$this = t0;
    },
    _MaterialScrollbarState_handleThumbPressStart_closure: function _MaterialScrollbarState_handleThumbPressStart_closure(t0) {
      this.$this = t0;
    },
    _MaterialScrollbarState_handleThumbPressEnd_closure: function _MaterialScrollbarState_handleThumbPressEnd_closure(t0) {
      this.$this = t0;
    },
    _MaterialScrollbarState_handleHover_closure: function _MaterialScrollbarState_handleHover_closure(t0) {
      this.$this = t0;
    },
    _MaterialScrollbarState_handleHover_closure0: function _MaterialScrollbarState_handleHover_closure0(t0) {
      this.$this = t0;
    },
    _MaterialScrollbarState_handleHoverExit_closure: function _MaterialScrollbarState_handleHoverExit_closure(t0) {
      this.$this = t0;
    },
    ScrollbarThemeData_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12;
      if (a === b)
        return a;
      t1 = type$.nullable_bool;
      t2 = A.MaterialStateProperty_lerp(a.thumbVisibility, b.thumbVisibility, t, A.scrollbar_theme___lerpBool$closure(), t1);
      t3 = A.MaterialStateProperty_lerp(a.thickness, b.thickness, t, A.ui__lerpDouble$closure(), type$.nullable_double);
      t1 = A.MaterialStateProperty_lerp(a.trackVisibility, b.trackVisibility, t, A.scrollbar_theme___lerpBool$closure(), t1);
      t4 = a.showTrackOnHover;
      t5 = b.showTrackOnHover;
      t6 = t < 0.5;
      t4 = t6 ? t4 : t5;
      t5 = a.isAlwaysShown;
      t7 = b.isAlwaysShown;
      t5 = t6 ? t5 : t7;
      t7 = a.interactive;
      t8 = b.interactive;
      t6 = t6 ? t7 : t8;
      t7 = A.Radius_lerp(a.radius, b.radius, t);
      t8 = type$.nullable_Color;
      t9 = A.MaterialStateProperty_lerp(a.thumbColor, b.thumbColor, t, A.ui_Color_lerp$closure(), t8);
      t10 = A.MaterialStateProperty_lerp(a.trackColor, b.trackColor, t, A.ui_Color_lerp$closure(), t8);
      t8 = A.MaterialStateProperty_lerp(a.trackBorderColor, b.trackBorderColor, t, A.ui_Color_lerp$closure(), t8);
      t11 = A.lerpDouble(a.crossAxisMargin, b.crossAxisMargin, t);
      t12 = A.lerpDouble(a.mainAxisMargin, b.mainAxisMargin, t);
      return new A.ScrollbarThemeData(t2, t3, t1, t4, t5, t6, t7, t9, t10, t8, t11, t12, A.lerpDouble(a.minThumbLength, b.minThumbLength, t));
    },
    _lerpBool(a, b, t) {
      return t < 0.5 ? a : b;
    },
    ScrollbarThemeData: function ScrollbarThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12) {
      var _ = this;
      _.thumbVisibility = t0;
      _.thickness = t1;
      _.trackVisibility = t2;
      _.showTrackOnHover = t3;
      _.isAlwaysShown = t4;
      _.interactive = t5;
      _.radius = t6;
      _.thumbColor = t7;
      _.trackColor = t8;
      _.trackBorderColor = t9;
      _.crossAxisMargin = t10;
      _.mainAxisMargin = t11;
      _.minThumbLength = t12;
    },
    _ScrollbarThemeData_Object_Diagnosticable: function _ScrollbarThemeData_Object_Diagnosticable() {
    },
    SegmentedButtonThemeData_lerp(a, b, t) {
      var t1, t2;
      if (a === b)
        return a;
      t1 = A.ButtonStyle_lerp(a.style, b.style, t);
      if (t < 0.5)
        t2 = a.selectedIcon;
      else
        t2 = b.selectedIcon;
      return new A.SegmentedButtonThemeData(t1, t2);
    },
    SegmentedButtonThemeData: function SegmentedButtonThemeData(t0, t1) {
      this.style = t0;
      this.selectedIcon = t1;
    },
    _SegmentedButtonThemeData_Object_Diagnosticable: function _SegmentedButtonThemeData_Object_Diagnosticable() {
    },
    _RenderSlider$(divisions, gestureSettings, hasFocus, hovering, label, onChangeEnd, onChangeStart, onChanged, platform, screenSize, secondaryTrackValue, semanticFormatterCallback, sliderTheme, state, textDirection, textScaleFactor, value) {
      var _null = null,
        t1 = new A._RenderSlider(state, A.TextPainter$(_null, _null, _null, _null, _null, B.TextAlign_4, _null, _null, 1, B.TextWidthBasis_0), value, secondaryTrackValue, platform, semanticFormatterCallback, divisions, label, sliderTheme, textScaleFactor, screenSize, onChanged, onChangeStart, onChangeEnd, textDirection, hasFocus, hovering, false, A.LayerHandle$());
      t1.RenderObject$0();
      t1._RenderSlider$17$divisions$gestureSettings$hasFocus$hovering$label$onChangeEnd$onChangeStart$onChanged$platform$screenSize$secondaryTrackValue$semanticFormatterCallback$sliderTheme$state$textDirection$textScaleFactor$value(divisions, gestureSettings, hasFocus, hovering, label, onChangeEnd, onChangeStart, onChanged, platform, screenSize, secondaryTrackValue, semanticFormatterCallback, sliderTheme, state, textDirection, textScaleFactor, value);
      return t1;
    },
    _SliderType: function _SliderType(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    Slider: function Slider(t0, t1, t2, t3) {
      var _ = this;
      _.value = t0;
      _.onChanged = t1;
      _.max = t2;
      _.key = t3;
    },
    _SliderState: function _SliderState(t0, t1, t2, t3) {
      var _ = this;
      _.___SliderState_positionController_A = _.___SliderState_enableController_A = _.___SliderState_valueIndicatorController_A = _.___SliderState_overlayController_A = $;
      _.interactionTimer = null;
      _._renderObjectKey = t0;
      _.___SliderState__actionMap_A = $;
      _.paintValueIndicator = null;
      _._dragging = false;
      _._focusNode = null;
      _._hovering = _._focused = false;
      _._layerLink = t1;
      _.overlayEntry = null;
      _.TickerProviderStateMixin__tickers = t2;
      _.TickerProviderStateMixin__tickerModeNotifier = t3;
      _._element = _._widget = null;
    },
    _SliderState__handleFocusHighlightChanged_closure: function _SliderState__handleFocusHighlightChanged_closure(t0, t1) {
      this.$this = t0;
      this.focused = t1;
    },
    _SliderState__handleHoverChanged_closure: function _SliderState__handleHoverChanged_closure(t0, t1) {
      this.$this = t0;
      this.hovering = t1;
    },
    _SliderState__buildMaterialSlider_effectiveOverlayColor: function _SliderState__buildMaterialSlider_effectiveOverlayColor(t0, t1, t2, t3) {
      var _ = this;
      _._box_0 = t0;
      _.$this = t1;
      _.states = t2;
      _.defaults = t3;
    },
    _SliderState__buildMaterialSlider_screenSize: function _SliderState__buildMaterialSlider_screenSize(t0) {
      this.context = t0;
    },
    _SliderState__buildMaterialSlider_closure: function _SliderState__buildMaterialSlider_closure(t0) {
      this.$this = t0;
    },
    _SliderState_showValueIndicator_closure: function _SliderState_showValueIndicator_closure(t0) {
      this.$this = t0;
    },
    _SliderRenderObjectWidget: function _SliderRenderObjectWidget(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14) {
      var _ = this;
      _.value = t0;
      _.secondaryTrackValue = t1;
      _.divisions = t2;
      _.label = t3;
      _.sliderTheme = t4;
      _.textScaleFactor = t5;
      _.screenSize = t6;
      _.onChanged = t7;
      _.onChangeStart = t8;
      _.onChangeEnd = t9;
      _.semanticFormatterCallback = t10;
      _.state = t11;
      _.hasFocus = t12;
      _.hovering = t13;
      _.key = t14;
    },
    _RenderSlider: function _RenderSlider(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18) {
      var _ = this;
      _._slider$_state = t0;
      _.___RenderSlider__enableAnimation_A = _.___RenderSlider__valueIndicatorAnimation_A = _.___RenderSlider__overlayAnimation_A = $;
      _._labelPainter = t1;
      _.___RenderSlider__tap_A = _.___RenderSlider__drag_A = $;
      _._active = false;
      _._currentDragValue = 0;
      _.overlayRect = null;
      _._slider$_value = t2;
      _._secondaryTrackValue = t3;
      _._platform = t4;
      _._semanticFormatterCallback = t5;
      _._divisions = t6;
      _._label = t7;
      _._sliderTheme = t8;
      _._textScaleFactor = t9;
      _._screenSize = t10;
      _._onChanged = t11;
      _.onChangeStart = t12;
      _.onChangeEnd = t13;
      _._slider$_textDirection = t14;
      _._hasFocus = t15;
      _._hovering = t16;
      _._hoveringThumb = false;
      _.RelayoutWhenSystemFontsChangeMixin__hasPendingSystemFontsDidChangeCallBack = t17;
      _.parentData = _._cachedBaselines = _._size = _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t18;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    _RenderSlider_closure: function _RenderSlider_closure(t0) {
      this.$this = t0;
    },
    _RenderSlider__maxSliderPartWidth_closure: function _RenderSlider__maxSliderPartWidth_closure() {
    },
    _RenderSlider__maxSliderPartHeight_closure: function _RenderSlider__maxSliderPartHeight_closure() {
    },
    _RenderSlider__startInteraction_closure: function _RenderSlider__startInteraction_closure(t0) {
      this.$this = t0;
    },
    _AdjustSliderIntent: function _AdjustSliderIntent(t0) {
      this.type = t0;
    },
    _SliderAdjustmentType: function _SliderAdjustmentType(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    _ValueIndicatorRenderObjectWidget: function _ValueIndicatorRenderObjectWidget(t0, t1) {
      this.state = t0;
      this.key = t1;
    },
    _RenderValueIndicator: function _RenderValueIndicator(t0, t1, t2) {
      var _ = this;
      _.___RenderValueIndicator__valueIndicatorAnimation_A = $;
      _._slider$_state = t0;
      _.RelayoutWhenSystemFontsChangeMixin__hasPendingSystemFontsDidChangeCallBack = t1;
      _.parentData = _._cachedBaselines = _._size = _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t2;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    _SliderDefaultsM2: function _SliderDefaultsM2(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, t31) {
      var _ = this;
      _.context = t0;
      _._colors = t1;
      _.trackHeight = t2;
      _.activeTrackColor = t3;
      _.inactiveTrackColor = t4;
      _.secondaryActiveTrackColor = t5;
      _.disabledActiveTrackColor = t6;
      _.disabledSecondaryActiveTrackColor = t7;
      _.disabledInactiveTrackColor = t8;
      _.activeTickMarkColor = t9;
      _.inactiveTickMarkColor = t10;
      _.disabledActiveTickMarkColor = t11;
      _.disabledInactiveTickMarkColor = t12;
      _.thumbColor = t13;
      _.overlappingShapeStrokeColor = t14;
      _.disabledThumbColor = t15;
      _.overlayColor = t16;
      _.valueIndicatorColor = t17;
      _.overlayShape = t18;
      _.tickMarkShape = t19;
      _.thumbShape = t20;
      _.trackShape = t21;
      _.valueIndicatorShape = t22;
      _.rangeTickMarkShape = t23;
      _.rangeThumbShape = t24;
      _.rangeTrackShape = t25;
      _.rangeValueIndicatorShape = t26;
      _.showValueIndicator = t27;
      _.valueIndicatorTextStyle = t28;
      _.minThumbSeparation = t29;
      _.thumbSelector = t30;
      _.mouseCursor = t31;
    },
    __RenderSlider_RenderBox_RelayoutWhenSystemFontsChangeMixin: function __RenderSlider_RenderBox_RelayoutWhenSystemFontsChangeMixin() {
    },
    __RenderValueIndicator_RenderBox_RelayoutWhenSystemFontsChangeMixin: function __RenderValueIndicator_RenderBox_RelayoutWhenSystemFontsChangeMixin() {
    },
    __SliderState_State_TickerProviderStateMixin: function __SliderState_State_TickerProviderStateMixin() {
    },
    SliderThemeData$(activeTickMarkColor, activeTrackColor, disabledActiveTickMarkColor, disabledActiveTrackColor, disabledInactiveTickMarkColor, disabledInactiveTrackColor, disabledSecondaryActiveTrackColor, disabledThumbColor, inactiveTickMarkColor, inactiveTrackColor, minThumbSeparation, mouseCursor, overlappingShapeStrokeColor, overlayColor, overlayShape, rangeThumbShape, rangeTickMarkShape, rangeTrackShape, rangeValueIndicatorShape, secondaryActiveTrackColor, showValueIndicator, thumbColor, thumbSelector, thumbShape, tickMarkShape, trackHeight, trackShape, valueIndicatorColor, valueIndicatorShape, valueIndicatorTextStyle) {
      return new A.SliderThemeData(trackHeight, activeTrackColor, inactiveTrackColor, secondaryActiveTrackColor, disabledActiveTrackColor, disabledSecondaryActiveTrackColor, disabledInactiveTrackColor, activeTickMarkColor, inactiveTickMarkColor, disabledActiveTickMarkColor, disabledInactiveTickMarkColor, thumbColor, overlappingShapeStrokeColor, disabledThumbColor, overlayColor, valueIndicatorColor, overlayShape, tickMarkShape, thumbShape, trackShape, valueIndicatorShape, rangeTickMarkShape, rangeThumbShape, rangeTrackShape, rangeValueIndicatorShape, showValueIndicator, valueIndicatorTextStyle, minThumbSeparation, thumbSelector, mouseCursor);
    },
    SliderThemeData_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30;
      if (a === b)
        return a;
      t1 = A.lerpDouble(a.trackHeight, b.trackHeight, t);
      t2 = A.Color_lerp(a.activeTrackColor, b.activeTrackColor, t);
      t3 = A.Color_lerp(a.inactiveTrackColor, b.inactiveTrackColor, t);
      t4 = A.Color_lerp(a.secondaryActiveTrackColor, b.secondaryActiveTrackColor, t);
      t5 = A.Color_lerp(a.disabledActiveTrackColor, b.disabledActiveTrackColor, t);
      t6 = A.Color_lerp(a.disabledInactiveTrackColor, b.disabledInactiveTrackColor, t);
      t7 = A.Color_lerp(a.disabledSecondaryActiveTrackColor, b.disabledSecondaryActiveTrackColor, t);
      t8 = A.Color_lerp(a.activeTickMarkColor, b.activeTickMarkColor, t);
      t9 = A.Color_lerp(a.inactiveTickMarkColor, b.inactiveTickMarkColor, t);
      t10 = A.Color_lerp(a.disabledActiveTickMarkColor, b.disabledActiveTickMarkColor, t);
      t11 = A.Color_lerp(a.disabledInactiveTickMarkColor, b.disabledInactiveTickMarkColor, t);
      t12 = A.Color_lerp(a.thumbColor, b.thumbColor, t);
      t13 = A.Color_lerp(a.overlappingShapeStrokeColor, b.overlappingShapeStrokeColor, t);
      t14 = A.Color_lerp(a.disabledThumbColor, b.disabledThumbColor, t);
      t15 = A.Color_lerp(a.overlayColor, b.overlayColor, t);
      t16 = A.Color_lerp(a.valueIndicatorColor, b.valueIndicatorColor, t);
      t17 = t < 0.5;
      t18 = t17 ? a.overlayShape : b.overlayShape;
      t19 = t17 ? a.tickMarkShape : b.tickMarkShape;
      t20 = t17 ? a.thumbShape : b.thumbShape;
      t21 = t17 ? a.trackShape : b.trackShape;
      t22 = t17 ? a.valueIndicatorShape : b.valueIndicatorShape;
      t23 = t17 ? a.rangeTickMarkShape : b.rangeTickMarkShape;
      t24 = t17 ? a.rangeThumbShape : b.rangeThumbShape;
      t25 = t17 ? a.rangeTrackShape : b.rangeTrackShape;
      t26 = t17 ? a.rangeValueIndicatorShape : b.rangeValueIndicatorShape;
      t27 = t17 ? a.showValueIndicator : b.showValueIndicator;
      t28 = A.TextStyle_lerp(a.valueIndicatorTextStyle, b.valueIndicatorTextStyle, t);
      t29 = A.lerpDouble(a.minThumbSeparation, b.minThumbSeparation, t);
      t30 = t17 ? a.thumbSelector : b.thumbSelector;
      return A.SliderThemeData$(t8, t2, t10, t5, t11, t6, t7, t14, t9, t3, t29, t17 ? a.mouseCursor : b.mouseCursor, t13, t15, t18, t24, t23, t25, t26, t4, t27, t12, t30, t20, t19, t1, t21, t16, t22, t28);
    },
    ShowValueIndicator: function ShowValueIndicator(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    SliderThemeData: function SliderThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29) {
      var _ = this;
      _.trackHeight = t0;
      _.activeTrackColor = t1;
      _.inactiveTrackColor = t2;
      _.secondaryActiveTrackColor = t3;
      _.disabledActiveTrackColor = t4;
      _.disabledSecondaryActiveTrackColor = t5;
      _.disabledInactiveTrackColor = t6;
      _.activeTickMarkColor = t7;
      _.inactiveTickMarkColor = t8;
      _.disabledActiveTickMarkColor = t9;
      _.disabledInactiveTickMarkColor = t10;
      _.thumbColor = t11;
      _.overlappingShapeStrokeColor = t12;
      _.disabledThumbColor = t13;
      _.overlayColor = t14;
      _.valueIndicatorColor = t15;
      _.overlayShape = t16;
      _.tickMarkShape = t17;
      _.thumbShape = t18;
      _.trackShape = t19;
      _.valueIndicatorShape = t20;
      _.rangeTickMarkShape = t21;
      _.rangeThumbShape = t22;
      _.rangeTrackShape = t23;
      _.rangeValueIndicatorShape = t24;
      _.showValueIndicator = t25;
      _.valueIndicatorTextStyle = t26;
      _.minThumbSeparation = t27;
      _.thumbSelector = t28;
      _.mouseCursor = t29;
    },
    SliderComponentShape: function SliderComponentShape() {
    },
    SliderTickMarkShape: function SliderTickMarkShape() {
    },
    SliderTrackShape: function SliderTrackShape() {
    },
    BaseSliderTrackShape: function BaseSliderTrackShape() {
    },
    RoundedRectSliderTrackShape: function RoundedRectSliderTrackShape() {
    },
    RoundSliderTickMarkShape: function RoundSliderTickMarkShape() {
    },
    RoundSliderThumbShape: function RoundSliderThumbShape() {
    },
    RoundSliderOverlayShape: function RoundSliderOverlayShape() {
    },
    RectangularSliderValueIndicatorShape: function RectangularSliderValueIndicatorShape() {
    },
    _RoundedRectSliderTrackShape_SliderTrackShape_BaseSliderTrackShape: function _RoundedRectSliderTrackShape_SliderTrackShape_BaseSliderTrackShape() {
    },
    _SliderThemeData_Object_Diagnosticable: function _SliderThemeData_Object_Diagnosticable() {
    },
    SnackBarClosedReason: function SnackBarClosedReason(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    SnackBarThemeData_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10;
      if (a === b)
        return a;
      t1 = A.Color_lerp(a.backgroundColor, b.backgroundColor, t);
      t2 = A.Color_lerp(a.actionTextColor, b.actionTextColor, t);
      t3 = A.Color_lerp(a.disabledActionTextColor, b.disabledActionTextColor, t);
      t4 = A.TextStyle_lerp(a.contentTextStyle, b.contentTextStyle, t);
      t5 = A.lerpDouble(a.elevation, b.elevation, t);
      t6 = A.ShapeBorder_lerp(a.shape, b.shape, t);
      if (t < 0.5)
        t7 = a.behavior;
      else
        t7 = b.behavior;
      t8 = A.lerpDouble(a.width, b.width, t);
      t9 = A.EdgeInsets_lerp(a.insetPadding, b.insetPadding, t);
      t10 = A.Color_lerp(a.closeIconColor, b.closeIconColor, t);
      return new A.SnackBarThemeData(t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, A.lerpDouble(a.actionOverflowThreshold, b.actionOverflowThreshold, t));
    },
    SnackBarThemeData: function SnackBarThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _.backgroundColor = t0;
      _.actionTextColor = t1;
      _.disabledActionTextColor = t2;
      _.contentTextStyle = t3;
      _.elevation = t4;
      _.shape = t5;
      _.behavior = t6;
      _.width = t7;
      _.insetPadding = t8;
      _.closeIconColor = t9;
      _.actionOverflowThreshold = t10;
    },
    _SnackBarThemeData_Object_Diagnosticable: function _SnackBarThemeData_Object_Diagnosticable() {
    },
    SwitchThemeData_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, t7, t8;
      if (a === b)
        return a;
      t1 = type$.nullable_Color;
      t2 = A.MaterialStateProperty_lerp(a.thumbColor, b.thumbColor, t, A.ui_Color_lerp$closure(), t1);
      t3 = A.MaterialStateProperty_lerp(a.trackColor, b.trackColor, t, A.ui_Color_lerp$closure(), t1);
      t4 = A.MaterialStateProperty_lerp(a.trackOutlineColor, b.trackOutlineColor, t, A.ui_Color_lerp$closure(), t1);
      t5 = t < 0.5;
      if (t5)
        t6 = a.materialTapTargetSize;
      else
        t6 = b.materialTapTargetSize;
      if (t5)
        t7 = a.mouseCursor;
      else
        t7 = b.mouseCursor;
      t1 = A.MaterialStateProperty_lerp(a.overlayColor, b.overlayColor, t, A.ui_Color_lerp$closure(), t1);
      t8 = A.lerpDouble(a.splashRadius, b.splashRadius, t);
      if (t5)
        t5 = a.thumbIcon;
      else
        t5 = b.thumbIcon;
      return new A.SwitchThemeData(t2, t3, t4, t6, t7, t1, t8, t5);
    },
    SwitchThemeData: function SwitchThemeData(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.thumbColor = t0;
      _.trackColor = t1;
      _.trackOutlineColor = t2;
      _.materialTapTargetSize = t3;
      _.mouseCursor = t4;
      _.overlayColor = t5;
      _.splashRadius = t6;
      _.thumbIcon = t7;
    },
    _SwitchThemeData_Object_Diagnosticable: function _SwitchThemeData_Object_Diagnosticable() {
    },
    TabBarTheme_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12;
      if (a === b)
        return a;
      t1 = A.Decoration_lerp(a.indicator, b.indicator, t);
      t2 = A.Color_lerp(a.indicatorColor, b.indicatorColor, t);
      t3 = t < 0.5;
      t4 = t3 ? a.indicatorSize : b.indicatorSize;
      t5 = A.Color_lerp(a.dividerColor, b.dividerColor, t);
      t6 = A.Color_lerp(a.labelColor, b.labelColor, t);
      t7 = A.EdgeInsetsGeometry_lerp(a.labelPadding, b.labelPadding, t);
      t8 = A.TextStyle_lerp(a.labelStyle, b.labelStyle, t);
      t9 = A.Color_lerp(a.unselectedLabelColor, b.unselectedLabelColor, t);
      t10 = A.TextStyle_lerp(a.unselectedLabelStyle, b.unselectedLabelStyle, t);
      t11 = A.MaterialStateProperty_lerp(a.overlayColor, b.overlayColor, t, A.ui_Color_lerp$closure(), type$.nullable_Color);
      t12 = t3 ? a.splashFactory : b.splashFactory;
      return new A.TabBarTheme(t1, t2, t4, t5, t6, t7, t8, t9, t10, t11, t12, t3 ? a.mouseCursor : b.mouseCursor);
    },
    TabBarTheme: function TabBarTheme(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11) {
      var _ = this;
      _.indicator = t0;
      _.indicatorColor = t1;
      _.indicatorSize = t2;
      _.dividerColor = t3;
      _.labelColor = t4;
      _.labelPadding = t5;
      _.labelStyle = t6;
      _.unselectedLabelColor = t7;
      _.unselectedLabelStyle = t8;
      _.overlayColor = t9;
      _.splashFactory = t10;
      _.mouseCursor = t11;
    },
    _TabBarTheme_Object_Diagnosticable: function _TabBarTheme_Object_Diagnosticable() {
    },
    TextButton$(child, onPressed) {
      var _null = null;
      return new A.TextButton(onPressed, _null, _null, _null, _null, B.Clip_0, _null, false, _null, child, _null);
    },
    _scaledPadding(context) {
      var t1;
      A.Theme_of(context);
      t1 = A.MediaQuery__maybeOf(context, B._MediaQueryAspect_3);
      t1 = t1 == null ? null : t1.textScaleFactor;
      return A.ButtonStyleButton_scaledPadding(B.EdgeInsets_8_8_8_8, B.EdgeInsets_8_0_8_0, B.EdgeInsets_4_0_4_0, t1 == null ? 1 : t1);
    },
    TextButton: function TextButton(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _.onPressed = t0;
      _.onLongPress = t1;
      _.onHover = t2;
      _.onFocusChange = t3;
      _.style = t4;
      _.clipBehavior = t5;
      _.focusNode = t6;
      _.autofocus = t7;
      _.statesController = t8;
      _.child = t9;
      _.key = t10;
    },
    _TextButtonDefaultColor: function _TextButtonDefaultColor(t0, t1) {
      this.color = t0;
      this.disabled = t1;
    },
    _TextButtonDefaultOverlay: function _TextButtonDefaultOverlay(t0) {
      this.primary = t0;
    },
    _TextButtonDefaultMouseCursor: function _TextButtonDefaultMouseCursor(t0, t1) {
      this.enabledCursor = t0;
      this.disabledCursor = t1;
    },
    __TextButtonDefaultMouseCursor_MaterialStateProperty_Diagnosticable: function __TextButtonDefaultMouseCursor_MaterialStateProperty_Diagnosticable() {
    },
    TextButtonThemeData_lerp(a, b, t) {
      if (a === b)
        return a;
      return new A.TextButtonThemeData(A.ButtonStyle_lerp(a.style, b.style, t));
    },
    TextButtonThemeData: function TextButtonThemeData(t0) {
      this.style = t0;
    },
    _TextButtonThemeData_Object_Diagnosticable: function _TextButtonThemeData_Object_Diagnosticable() {
    },
    TextSelectionThemeData_lerp(a, b, t) {
      var t1, t2;
      if (a === b)
        return a;
      t1 = A.Color_lerp(a.cursorColor, b.cursorColor, t);
      t2 = A.Color_lerp(a.selectionColor, b.selectionColor, t);
      return new A.TextSelectionThemeData(t1, t2, A.Color_lerp(a.selectionHandleColor, b.selectionHandleColor, t));
    },
    TextSelectionThemeData: function TextSelectionThemeData(t0, t1, t2) {
      this.cursorColor = t0;
      this.selectionColor = t1;
      this.selectionHandleColor = t2;
    },
    _TextSelectionThemeData_Object_Diagnosticable: function _TextSelectionThemeData_Object_Diagnosticable() {
    },
    TextTheme$(bodyLarge, bodyMedium, bodySmall, displayLarge, displayMedium, displaySmall, headlineLarge, headlineMedium, headlineSmall, labelLarge, labelMedium, labelSmall, titleLarge, titleMedium, titleSmall) {
      var _null = null,
        t1 = displayLarge == null ? _null : displayLarge,
        t2 = displayMedium == null ? _null : displayMedium,
        t3 = displaySmall == null ? _null : displaySmall,
        t4 = headlineMedium == null ? _null : headlineMedium,
        t5 = headlineSmall == null ? _null : headlineSmall,
        t6 = titleLarge == null ? _null : titleLarge,
        t7 = titleMedium == null ? _null : titleMedium,
        t8 = titleSmall == null ? _null : titleSmall,
        t9 = bodyLarge == null ? _null : bodyLarge,
        t10 = bodyMedium == null ? _null : bodyMedium,
        t11 = bodySmall == null ? _null : bodySmall,
        t12 = labelLarge == null ? _null : labelLarge;
      return new A.TextTheme(t1, t2, t3, headlineLarge, t4, t5, t6, t7, t8, t9, t10, t11, t12, labelMedium, labelSmall == null ? _null : labelSmall);
    },
    TextTheme_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14;
      if (a === b)
        return a;
      t1 = A.TextStyle_lerp(a.displayLarge, b.displayLarge, t);
      t2 = A.TextStyle_lerp(a.displayMedium, b.displayMedium, t);
      t3 = A.TextStyle_lerp(a.displaySmall, b.displaySmall, t);
      t4 = A.TextStyle_lerp(a.headlineLarge, b.headlineLarge, t);
      t5 = A.TextStyle_lerp(a.headlineMedium, b.headlineMedium, t);
      t6 = A.TextStyle_lerp(a.headlineSmall, b.headlineSmall, t);
      t7 = A.TextStyle_lerp(a.titleLarge, b.titleLarge, t);
      t8 = A.TextStyle_lerp(a.titleMedium, b.titleMedium, t);
      t9 = A.TextStyle_lerp(a.titleSmall, b.titleSmall, t);
      t10 = A.TextStyle_lerp(a.bodyLarge, b.bodyLarge, t);
      t11 = A.TextStyle_lerp(a.bodyMedium, b.bodyMedium, t);
      t12 = A.TextStyle_lerp(a.bodySmall, b.bodySmall, t);
      t13 = A.TextStyle_lerp(a.labelLarge, b.labelLarge, t);
      t14 = A.TextStyle_lerp(a.labelMedium, b.labelMedium, t);
      return A.TextTheme$(t10, t11, t12, t1, t2, t3, t4, t5, t6, t13, t14, A.TextStyle_lerp(a.labelSmall, b.labelSmall, t), t7, t8, t9);
    },
    TextTheme: function TextTheme(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14) {
      var _ = this;
      _.displayLarge = t0;
      _.displayMedium = t1;
      _.displaySmall = t2;
      _.headlineLarge = t3;
      _.headlineMedium = t4;
      _.headlineSmall = t5;
      _.titleLarge = t6;
      _.titleMedium = t7;
      _.titleSmall = t8;
      _.bodyLarge = t9;
      _.bodyMedium = t10;
      _.bodySmall = t11;
      _.labelLarge = t12;
      _.labelMedium = t13;
      _.labelSmall = t14;
    },
    _TextTheme_Object_Diagnosticable: function _TextTheme_Object_Diagnosticable() {
    },
    Theme_of(context) {
      var theme,
        inheritedTheme = context.dependOnInheritedWidgetOfExactType$1$0(type$._InheritedTheme),
        category = A.Localizations_of(context, B.Type_MaterialLocalizations_nEU, type$.MaterialLocalizations) == null ? null : B.ScriptCategory_0;
      if (category == null)
        category = B.ScriptCategory_0;
      theme = inheritedTheme == null ? null : inheritedTheme.theme.data;
      if (theme == null)
        theme = $.$get$Theme__kFallbackTheme();
      return A.ThemeData_localize(theme, theme.typography.geometryThemeFor$1(category));
    },
    Theme: function Theme(t0, t1, t2) {
      this.data = t0;
      this.child = t1;
      this.key = t2;
    },
    _InheritedTheme: function _InheritedTheme(t0, t1, t2) {
      this.theme = t0;
      this.child = t1;
      this.key = t2;
    },
    ThemeDataTween: function ThemeDataTween(t0, t1) {
      this.begin = t0;
      this.end = t1;
    },
    AnimatedTheme: function AnimatedTheme(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.data = t0;
      _.child = t1;
      _.curve = t2;
      _.duration = t3;
      _.onEnd = t4;
      _.key = t5;
    },
    _AnimatedThemeState: function _AnimatedThemeState(t0, t1) {
      var _ = this;
      _._theme0$_data = null;
      _.__ImplicitlyAnimatedWidgetState__animation_AI = _.__ImplicitlyAnimatedWidgetState__controller_FI = $;
      _.SingleTickerProviderStateMixin__ticker = t0;
      _.SingleTickerProviderStateMixin__tickerModeNotifier = t1;
      _._element = _._widget = null;
    },
    _AnimatedThemeState_forEachTween_closure: function _AnimatedThemeState_forEachTween_closure() {
    },
    ThemeData_ThemeData(brightness, primarySwatch, useMaterial3) {
      var materialTapTargetSize, visualDensity, effectiveBrightness, isDark, primaryColor, estimatedPrimaryColorBrightness, primaryColorLight, t1, primaryColorDark, primaryIsDark, toggleableActiveColor, focusColor, hoverColor, canvasColor, cardColor, dividerColor, secondary, primaryIsDark0, t2, t3, t4, t5, t6, colorScheme, unselectedWidgetColor, secondaryHeaderColor, dialogBackgroundColor, indicatorColor, hintColor, buttonTheme, disabledColor, highlightColor, splashColor, typography, defaultTextTheme, defaultPrimaryTextTheme, textTheme, primaryTextTheme, iconTheme, primaryIconTheme, backgroundColor, bottomAppBarColor, _null = null,
        extensions = A._setArrayType([], type$.JSArray_ThemeExtension_ThemeExtension_dynamic),
        platform = A.defaultTargetPlatform();
      switch (platform.index) {
        case 0:
        case 1:
        case 2:
          materialTapTargetSize = B.MaterialTapTargetSize_0;
          break;
        case 3:
        case 4:
        case 5:
          materialTapTargetSize = B.MaterialTapTargetSize_1;
          break;
        default:
          materialTapTargetSize = _null;
      }
      visualDensity = A.VisualDensity_adaptivePlatformDensity();
      if (brightness == null)
        effectiveBrightness = _null;
      else
        effectiveBrightness = brightness;
      if (effectiveBrightness == null)
        effectiveBrightness = B.Brightness_1;
      isDark = effectiveBrightness === B.Brightness_0;
      if (primarySwatch == null)
        primarySwatch = B.MaterialColor_Map_tF9to_4280391411;
      primaryColor = isDark ? B.Color_4280361249 : primarySwatch;
      estimatedPrimaryColorBrightness = A.ThemeData_estimateBrightnessForColor(primaryColor);
      if (isDark)
        primaryColorLight = B.Color_4288585374;
      else {
        t1 = primarySwatch._swatch.$index(0, 100);
        t1.toString;
        primaryColorLight = t1;
      }
      if (isDark)
        primaryColorDark = B.Color_4278190080;
      else {
        t1 = primarySwatch._swatch.$index(0, 700);
        t1.toString;
        primaryColorDark = t1;
      }
      primaryIsDark = estimatedPrimaryColorBrightness === B.Brightness_0;
      if (isDark)
        toggleableActiveColor = B.Color_4284809178;
      else if (null == null) {
        t1 = primarySwatch._swatch.$index(0, 600);
        t1.toString;
        toggleableActiveColor = t1;
      } else
        toggleableActiveColor = _null;
      focusColor = isDark ? A.Color$fromARGB(31, 255, 255, 255) : A.Color$fromARGB(31, 0, 0, 0);
      hoverColor = isDark ? A.Color$fromARGB(10, 255, 255, 255) : A.Color$fromARGB(10, 0, 0, 0);
      canvasColor = isDark ? B.Color_4281348144 : B.Color_4294638330;
      cardColor = isDark ? B.Color_4282532418 : B.Color_4294967295;
      dividerColor = isDark ? B.Color_536870911 : B.Color_520093696;
      if (isDark)
        secondary = B.Color_4284809178;
      else {
        t1 = primarySwatch._swatch.$index(0, 500);
        t1.toString;
        secondary = t1;
      }
      if (isDark)
        t1 = B.Color_4284572001;
      else {
        t1 = primarySwatch._swatch.$index(0, 200);
        t1.toString;
      }
      primaryIsDark0 = A.ThemeData_estimateBrightnessForColor(primarySwatch) === B.Brightness_0;
      t2 = A.ThemeData_estimateBrightnessForColor(secondary);
      if (isDark)
        t3 = B.Color_4278239141;
      else {
        t3 = primarySwatch._swatch.$index(0, 700);
        t3.toString;
      }
      t4 = primaryIsDark0 ? B.Color_4294967295 : B.Color_4278190080;
      t2 = t2 === B.Brightness_0 ? B.Color_4294967295 : B.Color_4278190080;
      t5 = isDark ? B.Color_4294967295 : B.Color_4278190080;
      t6 = primaryIsDark0 ? B.Color_4294967295 : B.Color_4278190080;
      colorScheme = A.ColorScheme$(t1, effectiveBrightness, B.Color_4292030255, _null, _null, _null, t6, isDark ? B.Color_4278190080 : B.Color_4294967295, _null, _null, t4, _null, t2, _null, t5, _null, _null, _null, _null, _null, primarySwatch, _null, primaryColorDark, _null, secondary, _null, t3, _null, cardColor, _null, _null, _null, _null);
      unselectedWidgetColor = isDark ? B.Color_3019898879 : B.Color_2315255808;
      if (isDark)
        secondaryHeaderColor = B.Color_4284572001;
      else {
        t1 = primarySwatch._swatch.$index(0, 50);
        t1.toString;
        secondaryHeaderColor = t1;
      }
      dialogBackgroundColor = isDark ? B.Color_4282532418 : B.Color_4294967295;
      indicatorColor = colorScheme.secondary;
      if (indicatorColor.$eq(0, primaryColor))
        indicatorColor = B.Color_4294967295;
      hintColor = isDark ? B.Color_2583691263 : A.Color$fromARGB(153, 0, 0, 0);
      if (isDark) {
        t1 = primarySwatch._swatch.$index(0, 600);
        t1.toString;
      } else
        t1 = B.Color_4292927712;
      buttonTheme = new A.ButtonThemeData(t1, _null, focusColor, hoverColor, _null, _null, colorScheme, materialTapTargetSize);
      disabledColor = isDark ? B.Color_1660944383 : B.Color_1627389952;
      highlightColor = isDark ? B.Color_1087163596 : B.Color_1723645116;
      splashColor = isDark ? B.Color_1087163596 : B.Color_1724434632;
      typography = A.Typography_Typography$material2014(platform);
      defaultTextTheme = isDark ? typography.white : typography.black;
      defaultPrimaryTextTheme = primaryIsDark ? typography.white : typography.black;
      textTheme = defaultTextTheme.merge$1(_null);
      primaryTextTheme = defaultPrimaryTextTheme.merge$1(_null);
      iconTheme = isDark ? B.IconThemeData_9ac : B.IconThemeData_U3c;
      primaryIconTheme = primaryIsDark ? B.IconThemeData_9ac : B.IconThemeData_pIP;
      if (isDark)
        backgroundColor = B.Color_4284572001;
      else {
        t1 = primarySwatch._swatch.$index(0, 200);
        t1.toString;
        backgroundColor = t1;
      }
      bottomAppBarColor = isDark ? B.Color_4282532418 : B.Color_4294967295;
      return A.ThemeData$raw(_null, _null, B.AppBarTheme_QlX, false, backgroundColor, B.BadgeThemeData_MPo, B.MaterialBannerThemeData_G75, bottomAppBarColor, B.BottomAppBarTheme_uXR, B.BottomNavigationBarThemeData_w6n, B.BottomSheetThemeData_vNd, B.ButtonBarThemeData_CyY, buttonTheme, canvasColor, cardColor, B.CardTheme_sAu, B.CheckboxThemeData_aO9, B.ChipThemeData_wFD, colorScheme, _null, B.DataTableThemeData_Lqf, B.DatePickerThemeData_YJF, dialogBackgroundColor, B.DialogTheme_shD, disabledColor, dividerColor, B.DividerThemeData_Vjf, B.DrawerThemeData_QZa, B.DropdownMenuThemeData_null_null_null, B.ElevatedButtonThemeData_null, B.Color_4292030255, B.ExpansionTileThemeData_UMp, A.ThemeData__themeExtensionIterableToMap(extensions), B.FilledButtonThemeData_null, true, B.FloatingActionButtonThemeData_Fkh, focusColor, highlightColor, hintColor, hoverColor, B.IconButtonThemeData_null, iconTheme, indicatorColor, B.C_InputDecorationTheme, B.ListTileThemeData_mFB, materialTapTargetSize, B.MenuBarThemeData_null, B.MenuButtonThemeData_null, B.MenuThemeData_null, B.NavigationBarThemeData_N2P, B.NavigationDrawerThemeData_iQs, B.NavigationRailThemeData_LDF, B.OutlinedButtonThemeData_null, B.C_PageTransitionsTheme, platform, B.PopupMenuThemeData_r1B, primaryColor, estimatedPrimaryColorBrightness, primaryColorDark, primaryColorLight, primaryIconTheme, primaryTextTheme, B.ProgressIndicatorThemeData_X75, B.RadioThemeData_ajE, canvasColor, B.ScrollbarThemeData_WUa, secondaryHeaderColor, B.SegmentedButtonThemeData_null_null, B.Color_4294309365, B.Color_4278190080, B.SliderThemeData_vuK, B.SnackBarThemeData_aPG, splashColor, B.C__InkSplashFactory, B.SwitchThemeData_k3d, B.TabBarTheme_Y43, B.TextButtonThemeData_null, B.TextSelectionThemeData_null_null_null, textTheme, B.TimePickerThemeData_94M, B.ToggleButtonsThemeData_F1A, toggleableActiveColor, B.TooltipThemeData_3xc, typography, unselectedWidgetColor, false, visualDensity);
    },
    ThemeData$raw(actionIconTheme, androidOverscrollIndicator, appBarTheme, applyElevationOverlayColor, backgroundColor, badgeTheme, bannerTheme, bottomAppBarColor, bottomAppBarTheme, bottomNavigationBarTheme, bottomSheetTheme, buttonBarTheme, buttonTheme, canvasColor, cardColor, cardTheme, checkboxTheme, chipTheme, colorScheme, cupertinoOverrideTheme, dataTableTheme, datePickerTheme, dialogBackgroundColor, dialogTheme, disabledColor, dividerColor, dividerTheme, drawerTheme, dropdownMenuTheme, elevatedButtonTheme, errorColor, expansionTileTheme, extensions, filledButtonTheme, fixTextFieldOutlineLabel, floatingActionButtonTheme, focusColor, highlightColor, hintColor, hoverColor, iconButtonTheme, iconTheme, indicatorColor, inputDecorationTheme, listTileTheme, materialTapTargetSize, menuBarTheme, menuButtonTheme, menuTheme, navigationBarTheme, navigationDrawerTheme, navigationRailTheme, outlinedButtonTheme, pageTransitionsTheme, platform, popupMenuTheme, primaryColor, primaryColorBrightness, primaryColorDark, primaryColorLight, primaryIconTheme, primaryTextTheme, progressIndicatorTheme, radioTheme, scaffoldBackgroundColor, scrollbarTheme, secondaryHeaderColor, segmentedButtonTheme, selectedRowColor, shadowColor, sliderTheme, snackBarTheme, splashColor, splashFactory, switchTheme, tabBarTheme, textButtonTheme, textSelectionTheme, textTheme, timePickerTheme, toggleButtonsTheme, toggleableActiveColor, tooltipTheme, typography, unselectedWidgetColor, useMaterial3, visualDensity) {
      return new A.ThemeData(applyElevationOverlayColor, cupertinoOverrideTheme, extensions, inputDecorationTheme, materialTapTargetSize, pageTransitionsTheme, platform, scrollbarTheme, splashFactory, false, visualDensity, bottomAppBarColor, canvasColor, cardColor, colorScheme, dialogBackgroundColor, disabledColor, dividerColor, focusColor, highlightColor, hintColor, hoverColor, indicatorColor, primaryColor, primaryColorDark, primaryColorLight, scaffoldBackgroundColor, secondaryHeaderColor, selectedRowColor, shadowColor, splashColor, unselectedWidgetColor, iconTheme, primaryIconTheme, primaryTextTheme, textTheme, typography, actionIconTheme, appBarTheme, badgeTheme, bannerTheme, bottomAppBarTheme, bottomNavigationBarTheme, bottomSheetTheme, buttonBarTheme, buttonTheme, cardTheme, checkboxTheme, chipTheme, dataTableTheme, datePickerTheme, dialogTheme, dividerTheme, drawerTheme, dropdownMenuTheme, elevatedButtonTheme, expansionTileTheme, filledButtonTheme, floatingActionButtonTheme, iconButtonTheme, listTileTheme, menuBarTheme, menuButtonTheme, menuTheme, navigationBarTheme, navigationDrawerTheme, navigationRailTheme, outlinedButtonTheme, popupMenuTheme, progressIndicatorTheme, radioTheme, segmentedButtonTheme, sliderTheme, snackBarTheme, switchTheme, tabBarTheme, textButtonTheme, textSelectionTheme, timePickerTheme, toggleButtonsTheme, tooltipTheme, true, primaryColorBrightness, androidOverscrollIndicator, errorColor, backgroundColor, toggleableActiveColor);
    },
    ThemeData_ThemeData$fallback() {
      return A.ThemeData_ThemeData(B.Brightness_1, null, null);
    },
    ThemeData_localize(baseTheme, localTextGeometry) {
      return $.$get$ThemeData__localizedThemeDataCache().putIfAbsent$2(new A._IdentityThemeDataCacheKey(baseTheme, localTextGeometry), new A.ThemeData_localize_closure(baseTheme, localTextGeometry));
    },
    ThemeData_estimateBrightnessForColor(color) {
      var t1 = 0.2126 * A.Color__linearizeColorComponent((color.get$value() >>> 16 & 255) / 255) + 0.7152 * A.Color__linearizeColorComponent((color.get$value() >>> 8 & 255) / 255) + 0.0722 * A.Color__linearizeColorComponent((color.get$value() & 255) / 255) + 0.05;
      if (t1 * t1 > 0.15)
        return B.Brightness_1;
      return B.Brightness_0;
    },
    ThemeData__lerpThemeExtensions(a, b, t) {
      var newExtensions = a.extensions.map$2$1(0, new A.ThemeData__lerpThemeExtensions_closure(b, t), type$.Object, type$.ThemeExtension_dynamic),
        t1 = b.extensions.get$entries();
      newExtensions.addEntries$1(t1.where$1(t1, new A.ThemeData__lerpThemeExtensions_closure0(a)));
      return newExtensions;
    },
    ThemeData__themeExtensionIterableToMap(extensionsIterable) {
      var _i, extension,
        t1 = type$.Object,
        t2 = type$.ThemeExtension_ThemeExtension_dynamic,
        t3 = A.LinkedHashMap_LinkedHashMap$_empty(t1, t2);
      for (_i = 0; false; ++_i) {
        extension = extensionsIterable[_i];
        t3.$indexSet(0, extension.get$type(), t2._as(extension));
      }
      return A.ConstantMap_ConstantMap$from(t3, t1, type$.ThemeExtension_dynamic);
    },
    ThemeData_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, t31, t32, t33, t34, t35, t36, t37, t38, t39, t40, t41, t42, t43, t44, t45, t46, t47, t48, t49, t50, t51, t52, t53, t54, t55, t56, t57, t58, t59, t60, t61, t62, t63, t64, t65, t66, t67, t68, t69, t70, t71, t72, t73, t74, t75, t76, t77, t78, t79, t80, t81, t82, t83, t84, t85, t86, t87, t88, t89, t90, t91, t92, t93;
      if (a === b)
        return a;
      t1 = t < 0.5;
      t2 = t1 ? a.applyElevationOverlayColor : b.applyElevationOverlayColor;
      t3 = t1 ? a.cupertinoOverrideTheme : b.cupertinoOverrideTheme;
      t4 = A.ThemeData__lerpThemeExtensions(a, b, t);
      t5 = t1 ? a.inputDecorationTheme : b.inputDecorationTheme;
      t6 = t1 ? a.materialTapTargetSize : b.materialTapTargetSize;
      t7 = t1 ? a.pageTransitionsTheme : b.pageTransitionsTheme;
      t8 = t1 ? a.platform : b.platform;
      t9 = A.ScrollbarThemeData_lerp(a.scrollbarTheme, b.scrollbarTheme, t);
      t10 = t1 ? a.splashFactory : b.splashFactory;
      t11 = A.VisualDensity_lerp(a.visualDensity, b.visualDensity, t);
      t12 = A.Color_lerp(a.canvasColor, b.canvasColor, t);
      t12.toString;
      t13 = A.Color_lerp(a.cardColor, b.cardColor, t);
      t13.toString;
      t14 = A.ColorScheme_lerp(a.colorScheme, b.colorScheme, t);
      t15 = A.Color_lerp(a.dialogBackgroundColor, b.dialogBackgroundColor, t);
      t15.toString;
      t16 = A.Color_lerp(a.disabledColor, b.disabledColor, t);
      t16.toString;
      t17 = A.Color_lerp(a.dividerColor, b.dividerColor, t);
      t17.toString;
      t18 = A.Color_lerp(a.focusColor, b.focusColor, t);
      t18.toString;
      t19 = A.Color_lerp(a.highlightColor, b.highlightColor, t);
      t19.toString;
      t20 = A.Color_lerp(a.hintColor, b.hintColor, t);
      t20.toString;
      t21 = A.Color_lerp(a.hoverColor, b.hoverColor, t);
      t21.toString;
      t22 = A.Color_lerp(a.indicatorColor, b.indicatorColor, t);
      t22.toString;
      t23 = A.Color_lerp(a.primaryColor, b.primaryColor, t);
      t23.toString;
      t24 = A.Color_lerp(a.primaryColorDark, b.primaryColorDark, t);
      t24.toString;
      t25 = A.Color_lerp(a.primaryColorLight, b.primaryColorLight, t);
      t25.toString;
      t26 = A.Color_lerp(a.scaffoldBackgroundColor, b.scaffoldBackgroundColor, t);
      t26.toString;
      t27 = A.Color_lerp(a.secondaryHeaderColor, b.secondaryHeaderColor, t);
      t27.toString;
      t28 = A.Color_lerp(a.shadowColor, b.shadowColor, t);
      t28.toString;
      t29 = A.Color_lerp(a.splashColor, b.splashColor, t);
      t29.toString;
      t30 = A.Color_lerp(a.unselectedWidgetColor, b.unselectedWidgetColor, t);
      t30.toString;
      t31 = A.IconThemeData_lerp(a.iconTheme, b.iconTheme, t);
      t32 = A.IconThemeData_lerp(a.primaryIconTheme, b.primaryIconTheme, t);
      t33 = A.TextTheme_lerp(a.primaryTextTheme, b.primaryTextTheme, t);
      t34 = A.TextTheme_lerp(a.textTheme, b.textTheme, t);
      t35 = A.Typography_lerp(a.typography, b.typography, t);
      t36 = A.ActionIconThemeData_lerp(a.actionIconTheme, b.actionIconTheme, t);
      t37 = A.AppBarTheme_lerp(a.appBarTheme, b.appBarTheme, t);
      t38 = A.BadgeThemeData_lerp(a.badgeTheme, b.badgeTheme, t);
      t39 = a.bannerTheme;
      t40 = b.bannerTheme;
      t41 = A.Color_lerp(t39.backgroundColor, t40.backgroundColor, t);
      t42 = A.Color_lerp(t39.surfaceTintColor, t40.surfaceTintColor, t);
      t43 = A.Color_lerp(t39.shadowColor, t40.shadowColor, t);
      t44 = A.Color_lerp(t39.dividerColor, t40.dividerColor, t);
      t45 = A.TextStyle_lerp(t39.contentTextStyle, t40.contentTextStyle, t);
      t46 = A.lerpDouble(t39.elevation, t40.elevation, t);
      t47 = A.EdgeInsetsGeometry_lerp(t39.padding, t40.padding, t);
      t39 = A.EdgeInsetsGeometry_lerp(t39.leadingPadding, t40.leadingPadding, t);
      t40 = A.BottomAppBarTheme_lerp(a.bottomAppBarTheme, b.bottomAppBarTheme, t);
      t48 = A.BottomNavigationBarThemeData_lerp(a.bottomNavigationBarTheme, b.bottomNavigationBarTheme, t);
      t49 = A.BottomSheetThemeData_lerp(a.bottomSheetTheme, b.bottomSheetTheme, t);
      t50 = A.ButtonBarThemeData_lerp(a.buttonBarTheme, b.buttonBarTheme, t);
      t51 = t1 ? a.buttonTheme : b.buttonTheme;
      t52 = A.CardTheme_lerp(a.cardTheme, b.cardTheme, t);
      t53 = A.CheckboxThemeData_lerp(a.checkboxTheme, b.checkboxTheme, t);
      t54 = A.ChipThemeData_lerp(a.chipTheme, b.chipTheme, t);
      t55 = A.DataTableThemeData_lerp(a.dataTableTheme, b.dataTableTheme, t);
      t56 = A.DatePickerThemeData_lerp(a.datePickerTheme, b.datePickerTheme, t);
      t57 = A.DialogTheme_lerp(a.dialogTheme, b.dialogTheme, t);
      t58 = A.DividerThemeData_lerp(a.dividerTheme, b.dividerTheme, t);
      t59 = A.DrawerThemeData_lerp(a.drawerTheme, b.drawerTheme, t);
      t60 = A.DropdownMenuThemeData_lerp(a.dropdownMenuTheme, b.dropdownMenuTheme, t);
      t61 = A.ElevatedButtonThemeData_lerp(a.elevatedButtonTheme, b.elevatedButtonTheme, t);
      t62 = A.ExpansionTileThemeData_lerp(a.expansionTileTheme, b.expansionTileTheme, t);
      t63 = A.FilledButtonThemeData_lerp(a.filledButtonTheme, b.filledButtonTheme, t);
      t64 = A.FloatingActionButtonThemeData_lerp(a.floatingActionButtonTheme, b.floatingActionButtonTheme, t);
      t65 = A.IconButtonThemeData_lerp(a.iconButtonTheme, b.iconButtonTheme, t);
      t66 = A.ListTileThemeData_lerp(a.listTileTheme, b.listTileTheme, t);
      t67 = A.MenuBarThemeData_lerp(a.menuBarTheme, b.menuBarTheme, t);
      t68 = A.MenuButtonThemeData_lerp(a.menuButtonTheme, b.menuButtonTheme, t);
      t69 = A.MenuThemeData_lerp(a.menuTheme, b.menuTheme, t);
      t70 = A.NavigationBarThemeData_lerp(a.navigationBarTheme, b.navigationBarTheme, t);
      t71 = A.NavigationDrawerThemeData_lerp(a.navigationDrawerTheme, b.navigationDrawerTheme, t);
      t72 = A.NavigationRailThemeData_lerp(a.navigationRailTheme, b.navigationRailTheme, t);
      t73 = A.OutlinedButtonThemeData_lerp(a.outlinedButtonTheme, b.outlinedButtonTheme, t);
      t74 = A.PopupMenuThemeData_lerp(a.popupMenuTheme, b.popupMenuTheme, t);
      t75 = A.ProgressIndicatorThemeData_lerp(a.progressIndicatorTheme, b.progressIndicatorTheme, t);
      t76 = A.RadioThemeData_lerp(a.radioTheme, b.radioTheme, t);
      t77 = A.SegmentedButtonThemeData_lerp(a.segmentedButtonTheme, b.segmentedButtonTheme, t);
      t78 = A.SliderThemeData_lerp(a.sliderTheme, b.sliderTheme, t);
      t79 = A.SnackBarThemeData_lerp(a.snackBarTheme, b.snackBarTheme, t);
      t80 = A.SwitchThemeData_lerp(a.switchTheme, b.switchTheme, t);
      t81 = A.TabBarTheme_lerp(a.tabBarTheme, b.tabBarTheme, t);
      t82 = A.TextButtonThemeData_lerp(a.textButtonTheme, b.textButtonTheme, t);
      t83 = A.TextSelectionThemeData_lerp(a.textSelectionTheme, b.textSelectionTheme, t);
      t84 = A.TimePickerThemeData_lerp(a.timePickerTheme, b.timePickerTheme, t);
      t85 = A.ToggleButtonsThemeData_lerp(a.toggleButtonsTheme, b.toggleButtonsTheme, t);
      t86 = A.TooltipThemeData_lerp(a.tooltipTheme, b.tooltipTheme, t);
      t87 = t1 ? a._primaryColorBrightness : b._primaryColorBrightness;
      t1 = t1 ? a.androidOverscrollIndicator : b.androidOverscrollIndicator;
      t88 = a._toggleableActiveColor;
      t88.toString;
      t89 = b._toggleableActiveColor;
      t89.toString;
      t89 = A.Color_lerp(t88, t89, t);
      t88 = a._selectedRowColor;
      t88.toString;
      t90 = b._selectedRowColor;
      t90.toString;
      t90 = A.Color_lerp(t88, t90, t);
      t88 = a._errorColor;
      t88.toString;
      t91 = b._errorColor;
      t91.toString;
      t91 = A.Color_lerp(t88, t91, t);
      t88 = a._backgroundColor;
      t88.toString;
      t92 = b._backgroundColor;
      t92.toString;
      t92 = A.Color_lerp(t88, t92, t);
      t88 = a._bottomAppBarColor;
      t88.toString;
      t93 = b._bottomAppBarColor;
      t93.toString;
      return A.ThemeData$raw(t36, t1, t37, t2, t92, t38, new A.MaterialBannerThemeData(t41, t42, t43, t44, t45, t46, t47, t39), A.Color_lerp(t88, t93, t), t40, t48, t49, t50, t51, t12, t13, t52, t53, t54, t14, t3, t55, t56, t15, t57, t16, t17, t58, t59, t60, t61, t91, t62, t4, t63, true, t64, t18, t19, t20, t21, t65, t31, t22, t5, t66, t6, t67, t68, t69, t70, t71, t72, t73, t7, t8, t74, t23, t87, t24, t25, t32, t33, t75, t76, t26, t9, t27, t77, t90, t28, t78, t79, t29, t10, t80, t81, t82, t83, t34, t84, t85, t89, t86, t35, t30, false, t11);
    },
    MaterialBasedCupertinoThemeData$_(_materialTheme, _cupertinoOverrideTheme) {
      return new A.MaterialBasedCupertinoThemeData(_materialTheme, _cupertinoOverrideTheme, B._CupertinoThemeDefaults_v32, _cupertinoOverrideTheme.brightness, _cupertinoOverrideTheme.primaryColor, _cupertinoOverrideTheme.primaryContrastingColor, _cupertinoOverrideTheme.textTheme, _cupertinoOverrideTheme.barBackgroundColor, _cupertinoOverrideTheme.scaffoldBackgroundColor, _cupertinoOverrideTheme.applyThemeToAll);
    },
    VisualDensity_adaptivePlatformDensity() {
      switch (A.defaultTargetPlatform().index) {
        case 0:
        case 2:
        case 1:
          break;
        case 3:
        case 4:
        case 5:
          return B.VisualDensity_m2_m2;
      }
      return B.VisualDensity_0_0;
    },
    VisualDensity_lerp(a, b, t) {
      var t1, t2;
      if (a === b)
        return a;
      t1 = A.lerpDouble(a.horizontal, b.horizontal, t);
      t1.toString;
      t2 = A.lerpDouble(a.vertical, b.vertical, t);
      t2.toString;
      return new A.VisualDensity(t1, t2);
    },
    MaterialTapTargetSize: function MaterialTapTargetSize(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    ThemeData: function ThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, t31, t32, t33, t34, t35, t36, t37, t38, t39, t40, t41, t42, t43, t44, t45, t46, t47, t48, t49, t50, t51, t52, t53, t54, t55, t56, t57, t58, t59, t60, t61, t62, t63, t64, t65, t66, t67, t68, t69, t70, t71, t72, t73, t74, t75, t76, t77, t78, t79, t80, t81, t82, t83, t84, t85, t86) {
      var _ = this;
      _.applyElevationOverlayColor = t0;
      _.cupertinoOverrideTheme = t1;
      _.extensions = t2;
      _.inputDecorationTheme = t3;
      _.materialTapTargetSize = t4;
      _.pageTransitionsTheme = t5;
      _.platform = t6;
      _.scrollbarTheme = t7;
      _.splashFactory = t8;
      _.useMaterial3 = t9;
      _.visualDensity = t10;
      _._bottomAppBarColor = t11;
      _.canvasColor = t12;
      _.cardColor = t13;
      _.colorScheme = t14;
      _.dialogBackgroundColor = t15;
      _.disabledColor = t16;
      _.dividerColor = t17;
      _.focusColor = t18;
      _.highlightColor = t19;
      _.hintColor = t20;
      _.hoverColor = t21;
      _.indicatorColor = t22;
      _.primaryColor = t23;
      _.primaryColorDark = t24;
      _.primaryColorLight = t25;
      _.scaffoldBackgroundColor = t26;
      _.secondaryHeaderColor = t27;
      _._selectedRowColor = t28;
      _.shadowColor = t29;
      _.splashColor = t30;
      _.unselectedWidgetColor = t31;
      _.iconTheme = t32;
      _.primaryIconTheme = t33;
      _.primaryTextTheme = t34;
      _.textTheme = t35;
      _.typography = t36;
      _.actionIconTheme = t37;
      _.appBarTheme = t38;
      _.badgeTheme = t39;
      _.bannerTheme = t40;
      _.bottomAppBarTheme = t41;
      _.bottomNavigationBarTheme = t42;
      _.bottomSheetTheme = t43;
      _.buttonBarTheme = t44;
      _.buttonTheme = t45;
      _.cardTheme = t46;
      _.checkboxTheme = t47;
      _.chipTheme = t48;
      _.dataTableTheme = t49;
      _.datePickerTheme = t50;
      _.dialogTheme = t51;
      _.dividerTheme = t52;
      _.drawerTheme = t53;
      _.dropdownMenuTheme = t54;
      _.elevatedButtonTheme = t55;
      _.expansionTileTheme = t56;
      _.filledButtonTheme = t57;
      _.floatingActionButtonTheme = t58;
      _.iconButtonTheme = t59;
      _.listTileTheme = t60;
      _.menuBarTheme = t61;
      _.menuButtonTheme = t62;
      _.menuTheme = t63;
      _.navigationBarTheme = t64;
      _.navigationDrawerTheme = t65;
      _.navigationRailTheme = t66;
      _.outlinedButtonTheme = t67;
      _.popupMenuTheme = t68;
      _.progressIndicatorTheme = t69;
      _.radioTheme = t70;
      _.segmentedButtonTheme = t71;
      _.sliderTheme = t72;
      _.snackBarTheme = t73;
      _.switchTheme = t74;
      _.tabBarTheme = t75;
      _.textButtonTheme = t76;
      _.textSelectionTheme = t77;
      _.timePickerTheme = t78;
      _.toggleButtonsTheme = t79;
      _.tooltipTheme = t80;
      _._fixTextFieldOutlineLabel = t81;
      _._primaryColorBrightness = t82;
      _.androidOverscrollIndicator = t83;
      _._errorColor = t84;
      _._backgroundColor = t85;
      _._toggleableActiveColor = t86;
    },
    ThemeData_localize_closure: function ThemeData_localize_closure(t0, t1) {
      this.baseTheme = t0;
      this.localTextGeometry = t1;
    },
    ThemeData__lerpThemeExtensions_closure: function ThemeData__lerpThemeExtensions_closure(t0, t1) {
      this.b = t0;
      this.t = t1;
    },
    ThemeData__lerpThemeExtensions_closure0: function ThemeData__lerpThemeExtensions_closure0(t0) {
      this.a = t0;
    },
    MaterialBasedCupertinoThemeData: function MaterialBasedCupertinoThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _._materialTheme = t0;
      _._cupertinoOverrideTheme = t1;
      _._theme$_defaults = t2;
      _.brightness = t3;
      _.primaryColor = t4;
      _.primaryContrastingColor = t5;
      _.textTheme = t6;
      _.barBackgroundColor = t7;
      _.scaffoldBackgroundColor = t8;
      _.applyThemeToAll = t9;
    },
    _IdentityThemeDataCacheKey: function _IdentityThemeDataCacheKey(t0, t1) {
      this.baseTheme = t0;
      this.localTextGeometry = t1;
    },
    _FifoCache: function _FifoCache(t0, t1, t2) {
      this._cache = t0;
      this._maximumSize = t1;
      this.$ti = t2;
    },
    VisualDensity: function VisualDensity(t0, t1) {
      this.horizontal = t0;
      this.vertical = t1;
    },
    _ThemeData_Object_Diagnosticable: function _ThemeData_Object_Diagnosticable() {
    },
    _VisualDensity_Object_Diagnosticable: function _VisualDensity_Object_Diagnosticable() {
    },
    TimePickerThemeData_lerp(a, b, t) {
      var lerpedBorderSide, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20;
      if (a === b)
        return a;
      lerpedBorderSide = a.dayPeriodBorderSide;
      if (lerpedBorderSide == null)
        t1 = b.dayPeriodBorderSide == null;
      else
        t1 = false;
      if (t1)
        lerpedBorderSide = null;
      else if (lerpedBorderSide == null)
        lerpedBorderSide = b.dayPeriodBorderSide;
      else {
        t1 = b.dayPeriodBorderSide;
        if (!(t1 == null)) {
          lerpedBorderSide.toString;
          t1.toString;
          lerpedBorderSide = A.BorderSide_lerp(lerpedBorderSide, t1, t);
        }
      }
      t1 = A.Color_lerp(a.backgroundColor, b.backgroundColor, t);
      t2 = A.ButtonStyle_lerp(a.cancelButtonStyle, b.cancelButtonStyle, t);
      t3 = A.ButtonStyle_lerp(a.confirmButtonStyle, b.confirmButtonStyle, t);
      t4 = A.Color_lerp(a.dayPeriodColor, b.dayPeriodColor, t);
      t5 = type$.nullable_OutlinedBorder._as(A.ShapeBorder_lerp(a.dayPeriodShape, b.dayPeriodShape, t));
      t6 = A.Color_lerp(a.dayPeriodTextColor, b.dayPeriodTextColor, t);
      t7 = A.TextStyle_lerp(a.dayPeriodTextStyle, b.dayPeriodTextStyle, t);
      t8 = A.Color_lerp(a.dialBackgroundColor, b.dialBackgroundColor, t);
      t9 = A.Color_lerp(a.dialHandColor, b.dialHandColor, t);
      t10 = A.Color_lerp(a.dialTextColor, b.dialTextColor, t);
      t11 = A.TextStyle_lerp(a.dialTextStyle, b.dialTextStyle, t);
      t12 = A.lerpDouble(a.elevation, b.elevation, t);
      t13 = A.Color_lerp(a.entryModeIconColor, b.entryModeIconColor, t);
      t14 = A.TextStyle_lerp(a.helpTextStyle, b.helpTextStyle, t);
      t15 = A.Color_lerp(a.hourMinuteColor, b.hourMinuteColor, t);
      t16 = A.ShapeBorder_lerp(a.hourMinuteShape, b.hourMinuteShape, t);
      t17 = A.Color_lerp(a.hourMinuteTextColor, b.hourMinuteTextColor, t);
      t18 = A.TextStyle_lerp(a.hourMinuteTextStyle, b.hourMinuteTextStyle, t);
      if (t < 0.5)
        t19 = a.inputDecorationTheme;
      else
        t19 = b.inputDecorationTheme;
      t20 = A.EdgeInsetsGeometry_lerp(a.padding, b.padding, t);
      return new A.TimePickerThemeData(t1, t2, t3, lerpedBorderSide, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, A.ShapeBorder_lerp(a.shape, b.shape, t));
    },
    TimePickerThemeData: function TimePickerThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21) {
      var _ = this;
      _.backgroundColor = t0;
      _.cancelButtonStyle = t1;
      _.confirmButtonStyle = t2;
      _.dayPeriodBorderSide = t3;
      _.dayPeriodColor = t4;
      _.dayPeriodShape = t5;
      _.dayPeriodTextColor = t6;
      _.dayPeriodTextStyle = t7;
      _.dialBackgroundColor = t8;
      _.dialHandColor = t9;
      _.dialTextColor = t10;
      _.dialTextStyle = t11;
      _.elevation = t12;
      _.entryModeIconColor = t13;
      _.helpTextStyle = t14;
      _.hourMinuteColor = t15;
      _.hourMinuteShape = t16;
      _.hourMinuteTextColor = t17;
      _.hourMinuteTextStyle = t18;
      _.inputDecorationTheme = t19;
      _.padding = t20;
      _.shape = t21;
    },
    _TimePickerThemeData_Object_Diagnosticable: function _TimePickerThemeData_Object_Diagnosticable() {
    },
    ToggleButtonsThemeData_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14;
      if (a === b)
        return a;
      t1 = A.TextStyle_lerp(a.textStyle, b.textStyle, t);
      t2 = A.BoxConstraints_lerp(a.constraints, b.constraints, t);
      t3 = A.Color_lerp(a.color, b.color, t);
      t4 = A.Color_lerp(a.selectedColor, b.selectedColor, t);
      t5 = A.Color_lerp(a.disabledColor, b.disabledColor, t);
      t6 = A.Color_lerp(a.fillColor, b.fillColor, t);
      t7 = A.Color_lerp(a.focusColor, b.focusColor, t);
      t8 = A.Color_lerp(a.highlightColor, b.highlightColor, t);
      t9 = A.Color_lerp(a.hoverColor, b.hoverColor, t);
      t10 = A.Color_lerp(a.splashColor, b.splashColor, t);
      t11 = A.Color_lerp(a.borderColor, b.borderColor, t);
      t12 = A.Color_lerp(a.selectedBorderColor, b.selectedBorderColor, t);
      t13 = A.Color_lerp(a.disabledBorderColor, b.disabledBorderColor, t);
      t14 = A.BorderRadius_lerp(a.borderRadius, b.borderRadius, t);
      return new A.ToggleButtonsThemeData(t1, t2, t3, t4, t5, t6, t7, t8, t10, t9, t11, t12, t13, A.lerpDouble(a.borderWidth, b.borderWidth, t), t14);
    },
    ToggleButtonsThemeData: function ToggleButtonsThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14) {
      var _ = this;
      _.textStyle = t0;
      _.constraints = t1;
      _.color = t2;
      _.selectedColor = t3;
      _.disabledColor = t4;
      _.fillColor = t5;
      _.focusColor = t6;
      _.highlightColor = t7;
      _.splashColor = t8;
      _.hoverColor = t9;
      _.borderColor = t10;
      _.selectedBorderColor = t11;
      _.disabledBorderColor = t12;
      _.borderWidth = t13;
      _.borderRadius = t14;
    },
    _ToggleButtonsThemeData_Object_Diagnosticable: function _ToggleButtonsThemeData_Object_Diagnosticable() {
    },
    ToggleableStateMixin: function ToggleableStateMixin() {
    },
    ToggleableStateMixin__handleTapDown_closure: function ToggleableStateMixin__handleTapDown_closure(t0, t1) {
      this.$this = t0;
      this.details = t1;
    },
    ToggleableStateMixin__handleTapEnd_closure: function ToggleableStateMixin__handleTapEnd_closure(t0) {
      this.$this = t0;
    },
    ToggleableStateMixin__handleFocusHighlightChanged_closure: function ToggleableStateMixin__handleFocusHighlightChanged_closure(t0, t1) {
      this.$this = t0;
      this.focused = t1;
    },
    ToggleableStateMixin__handleHoverChanged_closure: function ToggleableStateMixin__handleHoverChanged_closure(t0, t1) {
      this.$this = t0;
      this.hovering = t1;
    },
    ToggleablePainter: function ToggleablePainter() {
    },
    Tooltip$(child, message) {
      return new A.Tooltip(message, child, null);
    },
    Tooltip__concealOtherTooltips(current) {
      var openedTooltips, t1, _i, state;
      if ($.Tooltip__openedTooltips.length !== 0) {
        openedTooltips = A._setArrayType($.Tooltip__openedTooltips.slice(0), A._arrayInstanceType($.Tooltip__openedTooltips));
        for (t1 = openedTooltips.length, _i = 0; _i < openedTooltips.length; openedTooltips.length === t1 || (0, A.throwConcurrentModificationError)(openedTooltips), ++_i) {
          state = openedTooltips[_i];
          if (state === current)
            continue;
          state._concealTooltip$0();
        }
      }
    },
    Tooltip_dismissAllToolTips() {
      var openedTooltips, t1, _i;
      if ($.Tooltip__openedTooltips.length !== 0) {
        openedTooltips = A._setArrayType($.Tooltip__openedTooltips.slice(0), A._arrayInstanceType($.Tooltip__openedTooltips));
        for (t1 = openedTooltips.length, _i = 0; _i < openedTooltips.length; openedTooltips.length === t1 || (0, A.throwConcurrentModificationError)(openedTooltips), ++_i)
          openedTooltips[_i]._dismissTooltip$1$immediately(true);
        return true;
      }
      return false;
    },
    Tooltip: function Tooltip(t0, t1, t2) {
      this.message = t0;
      this.child = t1;
      this.key = t2;
    },
    TooltipState: function TooltipState(t0, t1) {
      var _ = this;
      _.__TooltipState__controller_A = _.__TooltipState__excludeFromSemantics_A = _.__TooltipState__preferBelow_A = _.__TooltipState__verticalOffset_A = _.__TooltipState__textAlign_A = _.__TooltipState__textStyle_A = _.__TooltipState__decoration_A = _.__TooltipState__margin_A = _.__TooltipState__padding_A = _.__TooltipState__height_A = $;
      _._showTimer = _._dismissTimer = _._tooltip$_entry = null;
      _.__TooltipState__mouseIsConnected_A = _.__TooltipState__waitDuration_A = _.__TooltipState__hoverShowDuration_A = _.__TooltipState__showDuration_A = $;
      _._pressActivated = false;
      _.__TooltipState__visible_A = _.__TooltipState__forceRemoval_A = _.__TooltipState__isConcealed_A = _.__TooltipState__enableFeedback_A = _.__TooltipState__triggerMode_A = $;
      _.SingleTickerProviderStateMixin__ticker = t0;
      _.SingleTickerProviderStateMixin__tickerModeNotifier = t1;
      _._element = _._widget = null;
    },
    TooltipState__handleMouseTrackerChange_closure: function TooltipState__handleMouseTrackerChange_closure(t0, t1) {
      this.$this = t0;
      this.mouseIsConnected = t1;
    },
    TooltipState__createNewEntry_closure: function TooltipState__createNewEntry_closure(t0) {
      this.$this = t0;
    },
    TooltipState__createNewEntry_closure0: function TooltipState__createNewEntry_closure0(t0) {
      this.$this = t0;
    },
    TooltipState__createNewEntry_closure1: function TooltipState__createNewEntry_closure1(t0) {
      this.overlay = t0;
    },
    TooltipState_build_closure: function TooltipState_build_closure(t0) {
      this.$this = t0;
    },
    TooltipState_build_closure0: function TooltipState_build_closure0(t0) {
      this.$this = t0;
    },
    _TooltipPositionDelegate: function _TooltipPositionDelegate(t0, t1, t2) {
      this.target = t0;
      this.verticalOffset = t1;
      this.preferBelow = t2;
    },
    _TooltipOverlay: function _TooltipOverlay(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13) {
      var _ = this;
      _.richMessage = t0;
      _.height = t1;
      _.padding = t2;
      _.margin = t3;
      _.decoration = t4;
      _.textStyle = t5;
      _.textAlign = t6;
      _.animation = t7;
      _.target = t8;
      _.verticalOffset = t9;
      _.preferBelow = t10;
      _.onEnter = t11;
      _.onExit = t12;
      _.key = t13;
    },
    _TooltipState_State_SingleTickerProviderStateMixin: function _TooltipState_State_SingleTickerProviderStateMixin() {
    },
    TooltipThemeData_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9;
      if (a === b)
        return a;
      t1 = A.lerpDouble(a.height, b.height, t);
      t2 = A.EdgeInsetsGeometry_lerp(a.padding, b.padding, t);
      t3 = A.EdgeInsetsGeometry_lerp(a.margin, b.margin, t);
      t4 = A.lerpDouble(a.verticalOffset, b.verticalOffset, t);
      t5 = t < 0.5;
      if (t5)
        t6 = a.preferBelow;
      else
        t6 = b.preferBelow;
      if (t5)
        t7 = a.excludeFromSemantics;
      else
        t7 = b.excludeFromSemantics;
      t8 = A.Decoration_lerp(a.decoration, b.decoration, t);
      t9 = A.TextStyle_lerp(a.textStyle, b.textStyle, t);
      if (t5)
        t5 = a.textAlign;
      else
        t5 = b.textAlign;
      return new A.TooltipThemeData(t1, t2, t3, t4, t6, t7, t8, t9, t5);
    },
    TooltipThemeData: function TooltipThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.height = t0;
      _.padding = t1;
      _.margin = t2;
      _.verticalOffset = t3;
      _.preferBelow = t4;
      _.excludeFromSemantics = t5;
      _.decoration = t6;
      _.textStyle = t7;
      _.textAlign = t8;
    },
    TooltipTriggerMode: function TooltipTriggerMode(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    _TooltipThemeData_Object_Diagnosticable: function _TooltipThemeData_Object_Diagnosticable() {
    },
    Typography_Typography$material2014(platform) {
      return A.Typography_Typography$_withPlatform(platform, null, null, B.TextTheme_Kqs, B.TextTheme_65B, B.TextTheme_Q2d);
    },
    Typography_Typography$_withPlatform(platform, black, white, englishLike, dense, tall) {
      switch (platform) {
        case B.TargetPlatform_2:
          black = B.TextTheme_xwF;
          white = B.TextTheme_hnv;
          break;
        case B.TargetPlatform_0:
        case B.TargetPlatform_1:
          black = B.TextTheme_Rhm;
          white = B.TextTheme_bC7;
          break;
        case B.TargetPlatform_5:
          black = B.TextTheme_p9c;
          white = B.TextTheme_Zge;
          break;
        case B.TargetPlatform_4:
          black = B.TextTheme_9Bw;
          white = B.TextTheme_mwk;
          break;
        case B.TargetPlatform_3:
          black = B.TextTheme_XUI;
          white = B.TextTheme_Ktk;
          break;
        case null:
        case void 0:
          break;
      }
      black.toString;
      white.toString;
      return new A.Typography(black, white, englishLike, dense, tall);
    },
    Typography_lerp(a, b, t) {
      if (a === b)
        return a;
      return new A.Typography(A.TextTheme_lerp(a.black, b.black, t), A.TextTheme_lerp(a.white, b.white, t), A.TextTheme_lerp(a.englishLike, b.englishLike, t), A.TextTheme_lerp(a.dense, b.dense, t), A.TextTheme_lerp(a.tall, b.tall, t));
    },
    ScriptCategory: function ScriptCategory(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    Typography: function Typography(t0, t1, t2, t3, t4) {
      var _ = this;
      _.black = t0;
      _.white = t1;
      _.englishLike = t2;
      _.dense = t3;
      _.tall = t4;
    },
    _Typography_Object_Diagnosticable: function _Typography_Object_Diagnosticable() {
    },
    AlignmentGeometry_lerp(a, b, t) {
      var t1, t2, t3;
      if (a == b)
        return a;
      if (a == null)
        return b.$mul(0, t);
      if (b == null)
        return a.$mul(0, 1 - t);
      if (a instanceof A.Alignment && b instanceof A.Alignment)
        return A.Alignment_lerp(a, b, t);
      if (a instanceof A.AlignmentDirectional && b instanceof A.AlignmentDirectional)
        return A.AlignmentDirectional_lerp(a, b, t);
      t1 = A.lerpDouble(a.get$_x(), b.get$_x(), t);
      t1.toString;
      t2 = A.lerpDouble(a.get$_alignment$_start(), b.get$_alignment$_start(), t);
      t2.toString;
      t3 = A.lerpDouble(a.get$_y(), b.get$_y(), t);
      t3.toString;
      return new A._MixedAlignment(t1, t2, t3);
    },
    Alignment_lerp(a, b, t) {
      var t1, t2;
      if (a === b)
        return a;
      t1 = A.lerpDouble(a.x, b.x, t);
      t1.toString;
      t2 = A.lerpDouble(a.y, b.y, t);
      t2.toString;
      return new A.Alignment(t1, t2);
    },
    Alignment__stringify(x, y) {
      var t2, t3,
        t1 = x === -1;
      if (t1 && y === -1)
        return "Alignment.topLeft";
      t2 = x === 0;
      if (t2 && y === -1)
        return "Alignment.topCenter";
      t3 = x === 1;
      if (t3 && y === -1)
        return "Alignment.topRight";
      if (t1 && y === 0)
        return "Alignment.centerLeft";
      if (t2 && y === 0)
        return "Alignment.center";
      if (t3 && y === 0)
        return "Alignment.centerRight";
      if (t1 && y === 1)
        return "Alignment.bottomLeft";
      if (t2 && y === 1)
        return "Alignment.bottomCenter";
      if (t3 && y === 1)
        return "Alignment.bottomRight";
      return "Alignment(" + B.JSNumber_methods.toStringAsFixed$1(x, 1) + ", " + B.JSNumber_methods.toStringAsFixed$1(y, 1) + ")";
    },
    AlignmentDirectional_lerp(a, b, t) {
      var t1, t2;
      if (a === b)
        return a;
      t1 = A.lerpDouble(a.start, b.start, t);
      t1.toString;
      t2 = A.lerpDouble(a.y, b.y, t);
      t2.toString;
      return new A.AlignmentDirectional(t1, t2);
    },
    AlignmentDirectional__stringify(start, y) {
      var t2, t3,
        t1 = start === -1;
      if (t1 && y === -1)
        return "AlignmentDirectional.topStart";
      t2 = start === 0;
      if (t2 && y === -1)
        return "AlignmentDirectional.topCenter";
      t3 = start === 1;
      if (t3 && y === -1)
        return "AlignmentDirectional.topEnd";
      if (t1 && y === 0)
        return "AlignmentDirectional.centerStart";
      if (t2 && y === 0)
        return "AlignmentDirectional.center";
      if (t3 && y === 0)
        return "AlignmentDirectional.centerEnd";
      if (t1 && y === 1)
        return "AlignmentDirectional.bottomStart";
      if (t2 && y === 1)
        return "AlignmentDirectional.bottomCenter";
      if (t3 && y === 1)
        return "AlignmentDirectional.bottomEnd";
      return "AlignmentDirectional(" + B.JSNumber_methods.toStringAsFixed$1(start, 1) + ", " + B.JSNumber_methods.toStringAsFixed$1(y, 1) + ")";
    },
    AlignmentGeometry: function AlignmentGeometry() {
    },
    Alignment: function Alignment(t0, t1) {
      this.x = t0;
      this.y = t1;
    },
    AlignmentDirectional: function AlignmentDirectional(t0, t1) {
      this.start = t0;
      this.y = t1;
    },
    _MixedAlignment: function _MixedAlignment(t0, t1, t2) {
      this._x = t0;
      this._alignment$_start = t1;
      this._y = t2;
    },
    flipAxis(direction) {
      switch (direction.index) {
        case 0:
          return B.Axis_1;
        case 1:
          return B.Axis_0;
      }
    },
    axisDirectionToAxis(axisDirection) {
      switch (axisDirection.index) {
        case 0:
        case 2:
          return B.Axis_1;
        case 3:
        case 1:
          return B.Axis_0;
      }
    },
    flipAxisDirection(axisDirection) {
      switch (axisDirection.index) {
        case 0:
          return B.AxisDirection_2;
        case 1:
          return B.AxisDirection_3;
        case 2:
          return B.AxisDirection_0;
        case 3:
          return B.AxisDirection_1;
      }
    },
    axisDirectionIsReversed(axisDirection) {
      switch (axisDirection.index) {
        case 0:
        case 3:
          return true;
        case 2:
        case 1:
          return false;
      }
    },
    RenderComparison: function RenderComparison(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    Axis: function Axis(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    VerticalDirection: function VerticalDirection(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    AxisDirection: function AxisDirection(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    PaintingBinding: function PaintingBinding() {
    },
    _SystemFontsNotifier: function _SystemFontsNotifier(t0) {
      this._systemFontsCallbacks = t0;
    },
    BorderRadiusGeometry_lerp(a, b, t) {
      if (a == b)
        return a;
      if (a == null)
        a = B.BorderRadius_tUf;
      return a.add$1(0, (b == null ? B.BorderRadius_tUf : b).subtract$1(a).$mul(0, t));
    },
    BorderRadius$all(radius) {
      return new A.BorderRadius(radius, radius, radius, radius);
    },
    BorderRadius$circular(radius) {
      var t1 = new A.Radius(radius, radius);
      return new A.BorderRadius(t1, t1, t1, t1);
    },
    BorderRadius_lerp(a, b, t) {
      var t1, t2, t3, t4;
      if (a == b)
        return a;
      if (a == null)
        return b.$mul(0, t);
      if (b == null)
        return a.$mul(0, 1 - t);
      t1 = A.Radius_lerp(a.topLeft, b.topLeft, t);
      t1.toString;
      t2 = A.Radius_lerp(a.topRight, b.topRight, t);
      t2.toString;
      t3 = A.Radius_lerp(a.bottomLeft, b.bottomLeft, t);
      t3.toString;
      t4 = A.Radius_lerp(a.bottomRight, b.bottomRight, t);
      t4.toString;
      return new A.BorderRadius(t1, t2, t3, t4);
    },
    BorderRadiusGeometry: function BorderRadiusGeometry() {
    },
    BorderRadius: function BorderRadius(t0, t1, t2, t3) {
      var _ = this;
      _.topLeft = t0;
      _.topRight = t1;
      _.bottomLeft = t2;
      _.bottomRight = t3;
    },
    BorderRadiusDirectional: function BorderRadiusDirectional(t0, t1, t2, t3) {
      var _ = this;
      _.topStart = t0;
      _.topEnd = t1;
      _.bottomStart = t2;
      _.bottomEnd = t3;
    },
    _MixedBorderRadius: function _MixedBorderRadius(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _._topLeft = t0;
      _._topRight = t1;
      _._bottomLeft = t2;
      _._bottomRight = t3;
      _._topStart = t4;
      _._topEnd = t5;
      _._bottomStart = t6;
      _._bottomEnd = t7;
    },
    BorderSide_merge(a, b) {
      var t1 = a.style,
        aIsNone = t1 === B.BorderStyle_0 && a.width === 0,
        bIsNone = b.style === B.BorderStyle_0 && b.width === 0;
      if (aIsNone && bIsNone)
        return B.BorderSide_5Di;
      if (aIsNone)
        return b;
      if (bIsNone)
        return a;
      return new A.BorderSide(a.color, a.width + b.width, t1, Math.max(a.strokeAlign, b.strokeAlign));
    },
    BorderSide_canMerge(a, b) {
      var t2,
        t1 = a.style;
      if (!(t1 === B.BorderStyle_0 && a.width === 0))
        t2 = b.style === B.BorderStyle_0 && b.width === 0;
      else
        t2 = true;
      if (t2)
        return true;
      return t1 === b.style && a.color.$eq(0, b.color);
    },
    BorderSide_lerp(a, b, t) {
      var t1, t2, t3, colorA, colorB, t4;
      if (a === b)
        return a;
      if (t === 0)
        return a;
      if (t === 1)
        return b;
      t1 = A.lerpDouble(a.width, b.width, t);
      t1.toString;
      if (t1 < 0)
        return B.BorderSide_5Di;
      t2 = a.style;
      t3 = b.style;
      if (t2 === t3 && a.strokeAlign === b.strokeAlign) {
        t3 = A.Color_lerp(a.color, b.color, t);
        t3.toString;
        return new A.BorderSide(t3, t1, t2, a.strokeAlign);
      }
      switch (t2.index) {
        case 1:
          colorA = a.color;
          break;
        case 0:
          t2 = a.color.value;
          colorA = A.Color$fromARGB(0, t2 >>> 16 & 255, t2 >>> 8 & 255, t2 & 255);
          break;
        default:
          colorA = null;
      }
      switch (t3.index) {
        case 1:
          colorB = b.color;
          break;
        case 0:
          t2 = b.color.value;
          colorB = A.Color$fromARGB(0, t2 >>> 16 & 255, t2 >>> 8 & 255, t2 & 255);
          break;
        default:
          colorB = null;
      }
      t2 = a.strokeAlign;
      t3 = b.strokeAlign;
      if (t2 !== t3) {
        t4 = A.Color_lerp(colorA, colorB, t);
        t4.toString;
        t3 = A.lerpDouble(t2, t3, t);
        t3.toString;
        return new A.BorderSide(t4, t1, B.BorderStyle_1, t3);
      }
      t3 = A.Color_lerp(colorA, colorB, t);
      t3.toString;
      return new A.BorderSide(t3, t1, B.BorderStyle_1, t2);
    },
    ShapeBorder_lerp(a, b, t) {
      var result, t1;
      if (a == b)
        return a;
      result = b != null ? b.lerpFrom$2(a, t) : null;
      if (result == null && a != null)
        result = a.lerpTo$2(b, t);
      if (result == null)
        t1 = t < 0.5 ? a : b;
      else
        t1 = result;
      return t1;
    },
    OutlinedBorder_lerp(a, b, t) {
      var result, t1;
      if (a == b)
        return a;
      result = b != null ? b.lerpFrom$2(a, t) : null;
      if (result == null && a != null)
        result = a.lerpTo$2(b, t);
      if (result == null)
        t1 = t < 0.5 ? a : b;
      else
        t1 = result;
      return t1;
    },
    _CompoundBorder_lerp(a, b, t) {
      var t1, index, localA, localB, t2, localResult,
        aList = a instanceof A._CompoundBorder ? a.borders : A._setArrayType([a], type$.JSArray_nullable_ShapeBorder),
        bList = b instanceof A._CompoundBorder ? b.borders : A._setArrayType([b], type$.JSArray_nullable_ShapeBorder),
        results = A._setArrayType([], type$.JSArray_ShapeBorder),
        $length = Math.max(aList.length, bList.length);
      for (t1 = 1 - t, index = 0; index < $length; ++index) {
        localA = index < aList.length ? aList[index] : null;
        localB = index < bList.length ? bList[index] : null;
        t2 = localA != null;
        if (t2 && localB != null) {
          localResult = localA.lerpTo$2(localB, t);
          if (localResult == null)
            localResult = localB.lerpFrom$2(localA, t);
          if (localResult != null) {
            results.push(localResult);
            continue;
          }
        }
        if (localB != null)
          results.push(localB.scale$1(t));
        if (t2)
          results.push(localA.scale$1(t1));
      }
      return new A._CompoundBorder(results);
    },
    paintBorder(canvas, rect, bottom, left, right, $top) {
      var path, t2, t3, t4, t5,
        paint = A.Paint$(),
        t1 = paint._ui$_data;
      t1.$flags & 2 && A.throwUnsupportedOperation(t1, 12);
      t1.setFloat32(16, 0, true);
      path = A.SurfacePath$();
      switch ($top.style.index) {
        case 1:
          paint.set$color($top.color);
          path.reset$0();
          t2 = rect.left;
          t3 = rect.top;
          path.moveTo$2(t2, t3);
          t4 = rect.right;
          path.lineTo$2(t4, t3);
          t5 = $top.width;
          if (t5 === 0)
            t1.setInt32(12, 1, true);
          else {
            t1.setInt32(12, 0, true);
            t3 += t5;
            path.lineTo$2(t4 - right.width, t3);
            path.lineTo$2(t2 + left.width, t3);
          }
          canvas.drawPath$2(path, paint);
          break;
        case 0:
          break;
      }
      switch (right.style.index) {
        case 1:
          paint.set$color(right.color);
          path.reset$0();
          t2 = rect.right;
          t3 = rect.top;
          path.moveTo$2(t2, t3);
          t4 = rect.bottom;
          path.lineTo$2(t2, t4);
          t5 = right.width;
          if (t5 === 0)
            t1.setInt32(12, 1, true);
          else {
            t1.setInt32(12, 0, true);
            t2 -= t5;
            path.lineTo$2(t2, t4 - bottom.width);
            path.lineTo$2(t2, t3 + $top.width);
          }
          canvas.drawPath$2(path, paint);
          break;
        case 0:
          break;
      }
      switch (bottom.style.index) {
        case 1:
          paint.set$color(bottom.color);
          path.reset$0();
          t2 = rect.right;
          t3 = rect.bottom;
          path.moveTo$2(t2, t3);
          t4 = rect.left;
          path.lineTo$2(t4, t3);
          t5 = bottom.width;
          if (t5 === 0)
            t1.setInt32(12, 1, true);
          else {
            t1.setInt32(12, 0, true);
            t3 -= t5;
            path.lineTo$2(t4 + left.width, t3);
            path.lineTo$2(t2 - right.width, t3);
          }
          canvas.drawPath$2(path, paint);
          break;
        case 0:
          break;
      }
      switch (left.style.index) {
        case 1:
          paint.set$color(left.color);
          path.reset$0();
          t2 = rect.left;
          t3 = rect.bottom;
          path.moveTo$2(t2, t3);
          t4 = rect.top;
          path.lineTo$2(t2, t4);
          t5 = left.width;
          if (t5 === 0)
            t1.setInt32(12, 1, true);
          else {
            t1.setInt32(12, 0, true);
            t1 = t2 + t5;
            path.lineTo$2(t1, t4 + $top.width);
            path.lineTo$2(t1, t3 - bottom.width);
          }
          canvas.drawPath$2(path, paint);
          break;
        case 0:
          break;
      }
    },
    BorderStyle: function BorderStyle(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    BorderSide: function BorderSide(t0, t1, t2, t3) {
      var _ = this;
      _.color = t0;
      _.width = t1;
      _.style = t2;
      _.strokeAlign = t3;
    },
    ShapeBorder: function ShapeBorder() {
    },
    OutlinedBorder: function OutlinedBorder() {
    },
    _CompoundBorder: function _CompoundBorder(t0) {
      this.borders = t0;
    },
    _CompoundBorder_dimensions_closure: function _CompoundBorder_dimensions_closure() {
    },
    _CompoundBorder_scale_closure: function _CompoundBorder_scale_closure(t0) {
      this.t = t0;
    },
    _CompoundBorder_toString_closure: function _CompoundBorder_toString_closure() {
    },
    _BorderSide_Object_Diagnosticable: function _BorderSide_Object_Diagnosticable() {
    },
    BoxBorder_lerp(a, b, t) {
      var t1, t0, t2;
      if (a == b)
        return a;
      t1 = type$.nullable_Border;
      if (t1._is(a) && t1._is(b))
        return A.Border_lerp(a, b, t);
      t1 = type$.nullable_BorderDirectional;
      if (t1._is(a) && t1._is(b))
        return A.BorderDirectional_lerp(a, b, t);
      if (b instanceof A.Border && a instanceof A.BorderDirectional) {
        t = 1 - t;
        t0 = b;
        b = a;
        a = t0;
      }
      if (a instanceof A.Border && b instanceof A.BorderDirectional) {
        t1 = b.start;
        if (t1.$eq(0, B.BorderSide_5Di) && b.end.$eq(0, B.BorderSide_5Di))
          return new A.Border(A.BorderSide_lerp(a.top, b.top, t), A.BorderSide_lerp(a.right, B.BorderSide_5Di, t), A.BorderSide_lerp(a.bottom, b.bottom, t), A.BorderSide_lerp(a.left, B.BorderSide_5Di, t));
        t2 = a.left;
        if (t2.$eq(0, B.BorderSide_5Di) && a.right.$eq(0, B.BorderSide_5Di))
          return new A.BorderDirectional(A.BorderSide_lerp(a.top, b.top, t), A.BorderSide_lerp(B.BorderSide_5Di, t1, t), A.BorderSide_lerp(B.BorderSide_5Di, b.end, t), A.BorderSide_lerp(a.bottom, b.bottom, t));
        if (t < 0.5) {
          t1 = t * 2;
          return new A.Border(A.BorderSide_lerp(a.top, b.top, t), A.BorderSide_lerp(a.right, B.BorderSide_5Di, t1), A.BorderSide_lerp(a.bottom, b.bottom, t), A.BorderSide_lerp(t2, B.BorderSide_5Di, t1));
        }
        t2 = (t - 0.5) * 2;
        return new A.BorderDirectional(A.BorderSide_lerp(a.top, b.top, t), A.BorderSide_lerp(B.BorderSide_5Di, t1, t2), A.BorderSide_lerp(B.BorderSide_5Di, b.end, t2), A.BorderSide_lerp(a.bottom, b.bottom, t));
      }
      throw A.wrapException(A.FlutterError$fromParts(A._setArrayType([A.ErrorSummary$("BoxBorder.lerp can only interpolate Border and BorderDirectional classes."), A.ErrorDescription$("BoxBorder.lerp() was called with two objects of type " + J.get$runtimeType$(a).toString$0(0) + " and " + J.get$runtimeType$(b).toString$0(0) + ":\n  " + A.S(a) + "\n  " + A.S(b) + "\nHowever, only Border and BorderDirectional classes are supported by this method."), A.ErrorHint$("For a more general interpolation method, consider using ShapeBorder.lerp instead.")], type$.JSArray_DiagnosticsNode)));
    },
    BoxBorder__paintUniformBorderWithRadius(canvas, rect, side, borderRadius) {
      var t1, borderRect, inner,
        paint = A.Paint$();
      paint.set$color(side.color);
      if (side.width === 0) {
        t1 = paint._ui$_data;
        t1.$flags & 2 && A.throwUnsupportedOperation(t1, 8);
        t1.setInt32(12, 1, true);
        t1.setFloat32(16, 0, true);
        canvas.drawRRect$2(borderRadius.toRRect$1(rect), paint);
      } else {
        borderRect = borderRadius.toRRect$1(rect);
        inner = borderRect.inflate$1(-side.get$strokeInset());
        canvas.drawDRRect$3(borderRect.inflate$1(side.get$strokeOutset()), inner, paint);
      }
    },
    BoxBorder__paintUniformBorderWithCircle(canvas, rect, side) {
      var t1 = rect.get$shortestSide();
      canvas.drawCircle$3(rect.get$center(), (t1 + side.width * side.strokeAlign) / 2, side.toPaint$0());
    },
    BoxBorder__paintUniformBorderWithRectangle(canvas, rect, side) {
      canvas.drawRect$2(rect.inflate$1(side.width * side.strokeAlign / 2), side.toPaint$0());
    },
    Border_lerp(a, b, t) {
      if (a == b)
        return a;
      if (a == null)
        return b.scale$1(t);
      if (b == null)
        return a.scale$1(1 - t);
      return new A.Border(A.BorderSide_lerp(a.top, b.top, t), A.BorderSide_lerp(a.right, b.right, t), A.BorderSide_lerp(a.bottom, b.bottom, t), A.BorderSide_lerp(a.left, b.left, t));
    },
    BorderDirectional_lerp(a, b, t) {
      var t1, t2, t3;
      if (a == b)
        return a;
      if (a == null)
        return b.scale$1(t);
      if (b == null)
        return a.scale$1(1 - t);
      t1 = A.BorderSide_lerp(a.top, b.top, t);
      t2 = A.BorderSide_lerp(a.end, b.end, t);
      t3 = A.BorderSide_lerp(a.bottom, b.bottom, t);
      return new A.BorderDirectional(t1, A.BorderSide_lerp(a.start, b.start, t), t2, t3);
    },
    BoxShape: function BoxShape(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    BoxBorder: function BoxBorder() {
    },
    Border: function Border(t0, t1, t2, t3) {
      var _ = this;
      _.top = t0;
      _.right = t1;
      _.bottom = t2;
      _.left = t3;
    },
    BorderDirectional: function BorderDirectional(t0, t1, t2, t3) {
      var _ = this;
      _.top = t0;
      _.start = t1;
      _.end = t2;
      _.bottom = t3;
    },
    BoxDecoration_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, t7;
      if (a === b)
        return a;
      if (t === 0)
        return a;
      if (t === 1)
        return b;
      t1 = A.Color_lerp(a.color, b.color, t);
      t2 = t < 0.5;
      t3 = t2 ? a.image : b.image;
      t4 = A.BoxBorder_lerp(a.border, b.border, t);
      t5 = A.BorderRadiusGeometry_lerp(a.borderRadius, b.borderRadius, t);
      t6 = A.BoxShadow_lerpList(a.boxShadow, b.boxShadow, t);
      t7 = A.Gradient_lerp(a.gradient, b.gradient, t);
      return new A.BoxDecoration(t1, t3, t4, t5, t6, t7, t2 ? a.shape : b.shape);
    },
    BoxDecoration: function BoxDecoration(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.color = t0;
      _.image = t1;
      _.border = t2;
      _.borderRadius = t3;
      _.boxShadow = t4;
      _.gradient = t5;
      _.shape = t6;
    },
    _BoxDecorationPainter: function _BoxDecorationPainter(t0, t1) {
      var _ = this;
      _._box_decoration$_decoration = t0;
      _._imagePainter = _._rectForCachedBackgroundPaint = _._cachedBackgroundPaint = null;
      _.onChanged = t1;
    },
    BoxShadow_lerp(a, b, t) {
      var t1, t2, t3, t4, t5;
      if (a === b)
        return a;
      t1 = A.Color_lerp(a.color, b.color, t);
      t1.toString;
      t2 = A.Offset_lerp(a.offset, b.offset, t);
      t2.toString;
      t3 = A.lerpDouble(a.blurRadius, b.blurRadius, t);
      t3.toString;
      t4 = A.lerpDouble(a.spreadRadius, b.spreadRadius, t);
      t4.toString;
      t5 = a.blurStyle;
      return new A.BoxShadow(t4, t5 === B.BlurStyle_0 ? b.blurStyle : t5, t1, t2, t3);
    },
    BoxShadow_lerpList(a, b, t) {
      var commonLength, t1, i, t2, t3, t4;
      if (a == null ? b == null : a === b)
        return a;
      if (a == null)
        a = A._setArrayType([], type$.JSArray_BoxShadow);
      if (b == null)
        b = A._setArrayType([], type$.JSArray_BoxShadow);
      commonLength = Math.min(a.length, b.length);
      t1 = A._setArrayType([], type$.JSArray_BoxShadow);
      for (i = 0; i < commonLength; ++i)
        t1.push(A.BoxShadow_lerp(a[i], b[i], t));
      for (t2 = 1 - t, i = commonLength; i < a.length; ++i) {
        t3 = a[i];
        t4 = t3.offset;
        t1.push(new A.BoxShadow(t3.spreadRadius * t2, t3.blurStyle, t3.color, new A.Offset(t4._dx * t2, t4._dy * t2), t3.blurRadius * t2));
      }
      for (i = commonLength; i < b.length; ++i) {
        t2 = b[i];
        t3 = t2.offset;
        t1.push(new A.BoxShadow(t2.spreadRadius * t, t2.blurStyle, t2.color, new A.Offset(t3._dx * t, t3._dy * t), t2.blurRadius * t));
      }
      return t1;
    },
    BoxShadow: function BoxShadow(t0, t1, t2, t3, t4) {
      var _ = this;
      _.spreadRadius = t0;
      _.blurStyle = t1;
      _.color = t2;
      _.offset = t3;
      _.blurRadius = t4;
    },
    CircleBorder: function CircleBorder(t0, t1) {
      this.eccentricity = t0;
      this.side = t1;
    },
    ClipContext: function ClipContext() {
    },
    ClipContext_clipPathAndPaint_closure: function ClipContext_clipPathAndPaint_closure(t0, t1) {
      this.$this = t0;
      this.path = t1;
    },
    ClipContext_clipRRectAndPaint_closure: function ClipContext_clipRRectAndPaint_closure(t0, t1) {
      this.$this = t0;
      this.rrect = t1;
    },
    ClipContext_clipRectAndPaint_closure: function ClipContext_clipRectAndPaint_closure(t0, t1) {
      this.$this = t0;
      this.rect = t1;
    },
    ColorSwatch: function ColorSwatch() {
    },
    Decoration_lerp(a, b, t) {
      var t1, _null = null;
      if (a == b)
        return a;
      if (a == null) {
        t1 = b.lerpFrom$2(_null, t);
        return t1 == null ? b : t1;
      }
      if (b == null) {
        t1 = a.lerpTo$2(_null, t);
        return t1 == null ? a : t1;
      }
      if (t === 0)
        return a;
      if (t === 1)
        return b;
      t1 = b.lerpFrom$2(a, t);
      if (t1 == null)
        t1 = a.lerpTo$2(b, t);
      if (t1 == null)
        if (t < 0.5) {
          t1 = a.lerpTo$2(_null, t * 2);
          if (t1 == null)
            t1 = a;
        } else {
          t1 = b.lerpFrom$2(_null, (t - 0.5) * 2);
          if (t1 == null)
            t1 = b;
        }
      return t1;
    },
    Decoration: function Decoration() {
    },
    BoxPainter: function BoxPainter() {
    },
    _Decoration_Object_Diagnosticable: function _Decoration_Object_Diagnosticable() {
    },
    EdgeInsetsGeometry_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6;
      if (a == b)
        return a;
      if (a == null)
        return b.$mul(0, t);
      if (b == null)
        return a.$mul(0, 1 - t);
      if (a instanceof A.EdgeInsets && b instanceof A.EdgeInsets)
        return A.EdgeInsets_lerp(a, b, t);
      if (a instanceof A.EdgeInsetsDirectional && b instanceof A.EdgeInsetsDirectional)
        return A.EdgeInsetsDirectional_lerp(a, b, t);
      t1 = A.lerpDouble(a.get$_left(), b.get$_left(), t);
      t1.toString;
      t2 = A.lerpDouble(a.get$_right(), b.get$_right(), t);
      t2.toString;
      t3 = A.lerpDouble(a.get$_edge_insets$_start(), b.get$_edge_insets$_start(), t);
      t3.toString;
      t4 = A.lerpDouble(a.get$_edge_insets$_end(), b.get$_edge_insets$_end(), t);
      t4.toString;
      t5 = A.lerpDouble(a.get$_top(), b.get$_top(), t);
      t5.toString;
      t6 = A.lerpDouble(a.get$_bottom(), b.get$_bottom(), t);
      t6.toString;
      return new A._MixedEdgeInsets(t1, t2, t3, t4, t5, t6);
    },
    EdgeInsets$fromViewPadding(padding, devicePixelRatio) {
      return new A.EdgeInsets(padding.left / devicePixelRatio, padding.top / devicePixelRatio, padding.right / devicePixelRatio, padding.bottom / devicePixelRatio);
    },
    EdgeInsets_lerp(a, b, t) {
      var t1, t2, t3, t4;
      if (a == b)
        return a;
      if (a == null)
        return b.$mul(0, t);
      if (b == null)
        return a.$mul(0, 1 - t);
      t1 = A.lerpDouble(a.left, b.left, t);
      t1.toString;
      t2 = A.lerpDouble(a.top, b.top, t);
      t2.toString;
      t3 = A.lerpDouble(a.right, b.right, t);
      t3.toString;
      t4 = A.lerpDouble(a.bottom, b.bottom, t);
      t4.toString;
      return new A.EdgeInsets(t1, t2, t3, t4);
    },
    EdgeInsetsDirectional_lerp(a, b, t) {
      var t1, t2, t3, t4;
      if (a === b)
        return a;
      t1 = A.lerpDouble(a.start, b.start, t);
      t1.toString;
      t2 = A.lerpDouble(a.top, b.top, t);
      t2.toString;
      t3 = A.lerpDouble(a.end, b.end, t);
      t3.toString;
      t4 = A.lerpDouble(a.bottom, b.bottom, t);
      t4.toString;
      return new A.EdgeInsetsDirectional(t1, t2, t3, t4);
    },
    EdgeInsetsGeometry: function EdgeInsetsGeometry() {
    },
    EdgeInsets: function EdgeInsets(t0, t1, t2, t3) {
      var _ = this;
      _.left = t0;
      _.top = t1;
      _.right = t2;
      _.bottom = t3;
    },
    EdgeInsetsDirectional: function EdgeInsetsDirectional(t0, t1, t2, t3) {
      var _ = this;
      _.start = t0;
      _.top = t1;
      _.end = t2;
      _.bottom = t3;
    },
    _MixedEdgeInsets: function _MixedEdgeInsets(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._left = t0;
      _._right = t1;
      _._edge_insets$_start = t2;
      _._edge_insets$_end = t3;
      _._top = t4;
      _._bottom = t5;
    },
    ImageCache: function ImageCache(t0, t1, t2) {
      this._pendingImages = t0;
      this._image_cache$_cache = t1;
      this._liveImages = t2;
    },
    ImageConfiguration: function ImageConfiguration(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.bundle = t0;
      _.devicePixelRatio = t1;
      _.locale = t2;
      _.textDirection = t3;
      _.size = t4;
      _.platform = t5;
    },
    InlineSpanSemanticsInformation$(text, recognizer, semanticsLabel, stringAttributes) {
      return new A.InlineSpanSemanticsInformation(text, semanticsLabel, recognizer, false, stringAttributes);
    },
    combineSemanticsInfo(infoList) {
      var t2, workingText, workingLabel, _i, info, effectiveLabel, effectiveLabel0, t3, t4, t5, _i0, infoAttribute, t6,
        combined = A._setArrayType([], type$.JSArray_InlineSpanSemanticsInformation),
        t1 = type$.JSArray_StringAttribute,
        workingAttributes = A._setArrayType([], t1);
      for (t2 = infoList.length, workingText = "", workingLabel = "", _i = 0; _i < infoList.length; infoList.length === t2 || (0, A.throwConcurrentModificationError)(infoList), ++_i) {
        info = infoList[_i];
        if (info.requiresOwnNode) {
          combined.push(new A.InlineSpanSemanticsInformation(workingText, workingLabel, null, false, workingAttributes));
          workingAttributes = A._setArrayType([], t1);
          combined.push(info);
          workingText = "";
          workingLabel = "";
        } else {
          effectiveLabel = info.text;
          workingText += effectiveLabel;
          effectiveLabel0 = info.semanticsLabel;
          effectiveLabel = effectiveLabel0 == null ? effectiveLabel : effectiveLabel0;
          for (t3 = info.stringAttributes, t4 = t3.length, t5 = workingLabel.length, _i0 = 0; _i0 < t3.length; t3.length === t4 || (0, A.throwConcurrentModificationError)(t3), ++_i0) {
            infoAttribute = t3[_i0];
            t6 = infoAttribute.range;
            workingAttributes.push(infoAttribute.copy$1$range(new A.TextRange(t6.start + t5, t6.end + t5)));
          }
          workingLabel += effectiveLabel;
        }
      }
      combined.push(A.InlineSpanSemanticsInformation$(workingText, null, workingLabel, workingAttributes));
      return combined;
    },
    Accumulator: function Accumulator() {
      this._inline_span$_value = 0;
    },
    InlineSpanSemanticsInformation: function InlineSpanSemanticsInformation(t0, t1, t2, t3, t4) {
      var _ = this;
      _.text = t0;
      _.semanticsLabel = t1;
      _.recognizer = t2;
      _.requiresOwnNode = t3;
      _.stringAttributes = t4;
    },
    InlineSpan: function InlineSpan() {
    },
    InlineSpan_codeUnitAt_closure: function InlineSpan_codeUnitAt_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.index = t1;
      this.offset = t2;
    },
    RoundedRectangleBorder: function RoundedRectangleBorder(t0, t1) {
      this.borderRadius = t0;
      this.side = t1;
    },
    _RoundedRectangleToCircleBorder: function _RoundedRectangleToCircleBorder(t0, t1, t2, t3) {
      var _ = this;
      _.borderRadius = t0;
      _.circularity = t1;
      _.eccentricity = t2;
      _.side = t3;
    },
    WordBoundary__isNewline(codePoint) {
      switch (codePoint) {
        case 10:
        case 133:
        case 11:
        case 12:
        case 8232:
        case 8233:
          return true;
        default:
          return false;
      }
    },
    TextPainter$(ellipsis, locale, maxLines, strutStyle, text, textAlign, textDirection, textHeightBehavior, textScaleFactor, textWidthBasis) {
      return new A.TextPainter(text, textAlign, textDirection, textScaleFactor, ellipsis, locale, maxLines, strutStyle, textWidthBasis, textHeightBehavior);
    },
    TextOverflow: function TextOverflow(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    PlaceholderDimensions: function PlaceholderDimensions(t0, t1, t2, t3) {
      var _ = this;
      _.size = t0;
      _.alignment = t1;
      _.baselineOffset = t2;
      _.baseline = t3;
    },
    TextWidthBasis: function TextWidthBasis(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    WordBoundary: function WordBoundary(t0, t1) {
      this._text_painter$_text = t0;
      this._paragraph = t1;
      this.__WordBoundary_moveByWordBoundary_FI = $;
    },
    _UntilTextBoundary: function _UntilTextBoundary(t0, t1) {
      this._predicate = t0;
      this._textBoundary = t1;
    },
    _CaretMetrics: function _CaretMetrics(t0, t1) {
      this.offset = t0;
      this.fullHeight = t1;
    },
    TextPainter: function TextPainter(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _._paragraph = null;
      _._rebuildParagraphForPaint = true;
      _._text_painter$_text = t0;
      _._cachedPlainText = null;
      _._textAlign = t1;
      _._text_painter$_textDirection = t2;
      _._text_painter$_textScaleFactor = t3;
      _._text_painter$_ellipsis = t4;
      _._text_painter$_locale = t5;
      _._text_painter$_maxLines = t6;
      _._text_painter$_strutStyle = t7;
      _._textWidthBasis = t8;
      _._textHeightBehavior = t9;
      _._lastMaxWidth = _._lastMinWidth = _._layoutTemplate = _._placeholderDimensions = _._inlinePlaceholderScales = _._inlinePlaceholderBoxes = null;
      _.__TextPainter__caretMetrics_A = $;
      _._lineMetricsCache = _._previousCaretPrototype = _._previousCaretPosition = null;
    },
    TextSpan$(children, style, text) {
      return new A.TextSpan(text, children, B.C__DeferringMouseCursor, style);
    },
    TextSpan: function TextSpan(t0, t1, t2, t3) {
      var _ = this;
      _.text = t0;
      _.children = t1;
      _.mouseCursor = t2;
      _.style = t3;
    },
    TextStyle$0(background, backgroundColor, color, debugLabel, decoration, decorationColor, decorationStyle, decorationThickness, fontFamily, fontFamilyFallback, fontFeatures, fontSize, fontStyle, fontVariations, fontWeight, foreground, height, inherit, leadingDistribution, letterSpacing, locale, overflow, $package, shadows, textBaseline, wordSpacing) {
      return new A.TextStyle0(inherit, color, backgroundColor, fontFamily, fontFamilyFallback, $package, fontSize, fontWeight, fontStyle, letterSpacing, wordSpacing, textBaseline, height, leadingDistribution, locale, foreground, background, decoration, decorationColor, decorationStyle, decorationThickness, debugLabel, shadows, fontFeatures, fontVariations, overflow);
    },
    TextStyle_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, _null = null;
      if (a == b)
        return a;
      if (a == null) {
        t1 = b.inherit;
        t2 = A.Color_lerp(_null, b.color, t);
        t3 = A.Color_lerp(_null, b.backgroundColor, t);
        t4 = t < 0.5;
        t5 = t4 ? _null : b.fontSize;
        t6 = A.FontWeight_lerp(_null, b.fontWeight, t);
        t7 = t4 ? _null : b.fontStyle;
        t8 = t4 ? _null : b.letterSpacing;
        t9 = t4 ? _null : b.wordSpacing;
        t10 = t4 ? _null : b.textBaseline;
        t11 = t4 ? _null : b.height;
        t12 = t4 ? _null : b.leadingDistribution;
        t13 = t4 ? _null : b.locale;
        t14 = t4 ? _null : b.foreground;
        t15 = t4 ? _null : b.background;
        t16 = t4 ? _null : b.shadows;
        t17 = t4 ? _null : b.fontFeatures;
        t18 = t4 ? _null : b.fontVariations;
        t19 = t4 ? _null : b.decoration;
        t20 = A.Color_lerp(_null, b.decorationColor, t);
        t21 = t4 ? _null : b.decorationStyle;
        t22 = t4 ? _null : b.decorationThickness;
        t23 = t4 ? _null : b.get$_text_style$_fontFamily();
        t24 = t4 ? _null : b._text_style$_fontFamilyFallback;
        t25 = t4 ? _null : b._package;
        return A.TextStyle$0(t15, t3, t2, _null, t19, t20, t21, t22, t23, t24, t17, t5, t7, t18, t6, t14, t11, t1, t12, t8, t13, t4 ? _null : b.overflow, t25, t16, t10, t9);
      }
      if (b == null) {
        t1 = a.inherit;
        t2 = A.Color_lerp(a.color, _null, t);
        t3 = A.Color_lerp(_null, a.backgroundColor, t);
        t4 = t < 0.5;
        t5 = t4 ? a.fontSize : _null;
        t6 = A.FontWeight_lerp(a.fontWeight, _null, t);
        t7 = t4 ? a.fontStyle : _null;
        t8 = t4 ? a.letterSpacing : _null;
        t9 = t4 ? a.wordSpacing : _null;
        t10 = t4 ? a.textBaseline : _null;
        t11 = t4 ? a.height : _null;
        t12 = t4 ? a.leadingDistribution : _null;
        t13 = t4 ? a.locale : _null;
        t14 = t4 ? a.foreground : _null;
        t15 = t4 ? a.background : _null;
        t16 = t4 ? a.shadows : _null;
        t17 = t4 ? a.fontFeatures : _null;
        t18 = t4 ? a.fontVariations : _null;
        t19 = t4 ? a.decoration : _null;
        t20 = A.Color_lerp(a.decorationColor, _null, t);
        t21 = t4 ? a.decorationStyle : _null;
        t22 = t4 ? a.decorationThickness : _null;
        t23 = t4 ? a.get$_text_style$_fontFamily() : _null;
        t24 = t4 ? a._text_style$_fontFamilyFallback : _null;
        t25 = t4 ? a._package : _null;
        return A.TextStyle$0(t15, t3, t2, _null, t19, t20, t21, t22, t23, t24, t17, t5, t7, t18, t6, t14, t11, t1, t12, t8, t13, t4 ? a.overflow : _null, t25, t16, t10, t9);
      }
      t1 = t < 0.5;
      t2 = t1 ? a.inherit : b.inherit;
      t3 = a.foreground;
      t4 = t3 == null;
      t5 = t4 && b.foreground == null ? A.Color_lerp(a.color, b.color, t) : _null;
      t6 = a.background;
      t7 = t6 == null;
      t8 = t7 && b.background == null ? A.Color_lerp(a.backgroundColor, b.backgroundColor, t) : _null;
      t9 = a.fontSize;
      t10 = t9 == null ? b.fontSize : t9;
      t11 = b.fontSize;
      t9 = A.lerpDouble(t10, t11 == null ? t9 : t11, t);
      t10 = A.FontWeight_lerp(a.fontWeight, b.fontWeight, t);
      t11 = t1 ? a.fontStyle : b.fontStyle;
      t12 = a.letterSpacing;
      t13 = t12 == null ? b.letterSpacing : t12;
      t14 = b.letterSpacing;
      t12 = A.lerpDouble(t13, t14 == null ? t12 : t14, t);
      t13 = a.wordSpacing;
      t14 = t13 == null ? b.wordSpacing : t13;
      t15 = b.wordSpacing;
      t13 = A.lerpDouble(t14, t15 == null ? t13 : t15, t);
      t14 = t1 ? a.textBaseline : b.textBaseline;
      t15 = a.height;
      t16 = t15 == null ? b.height : t15;
      t17 = b.height;
      t15 = A.lerpDouble(t16, t17 == null ? t15 : t17, t);
      t16 = t1 ? a.leadingDistribution : b.leadingDistribution;
      t17 = t1 ? a.locale : b.locale;
      if (!t4 || b.foreground != null)
        if (t1) {
          if (t4) {
            t3 = A.Paint$();
            t4 = a.color;
            t4.toString;
            t3.set$color(t4);
          }
        } else {
          t3 = b.foreground;
          if (t3 == null) {
            t3 = A.Paint$();
            t4 = b.color;
            t4.toString;
            t3.set$color(t4);
          }
        }
      else
        t3 = _null;
      if (!t7 || b.background != null)
        if (t1)
          if (t7) {
            t4 = A.Paint$();
            t6 = a.backgroundColor;
            t6.toString;
            t4.set$color(t6);
          } else
            t4 = t6;
        else {
          t4 = b.background;
          if (t4 == null) {
            t4 = A.Paint$();
            t6 = b.backgroundColor;
            t6.toString;
            t4.set$color(t6);
          }
        }
      else
        t4 = _null;
      t6 = t1 ? a.shadows : b.shadows;
      t7 = t1 ? a.fontFeatures : b.fontFeatures;
      t18 = t1 ? a.fontVariations : b.fontVariations;
      t19 = t1 ? a.decoration : b.decoration;
      t20 = A.Color_lerp(a.decorationColor, b.decorationColor, t);
      t21 = t1 ? a.decorationStyle : b.decorationStyle;
      t22 = a.decorationThickness;
      t23 = t22 == null ? b.decorationThickness : t22;
      t24 = b.decorationThickness;
      t22 = A.lerpDouble(t23, t24 == null ? t22 : t24, t);
      t23 = t1 ? a.get$_text_style$_fontFamily() : b.get$_text_style$_fontFamily();
      t24 = t1 ? a._text_style$_fontFamilyFallback : b._text_style$_fontFamilyFallback;
      t25 = t1 ? a._package : b._package;
      return A.TextStyle$0(t4, t8, t5, _null, t19, t20, t21, t22, t23, t24, t7, t9, t11, t18, t10, t3, t15, t2, t16, t12, t17, t1 ? a.overflow : b.overflow, t25, t6, t14, t13);
    },
    TextStyle0: function TextStyle0(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25) {
      var _ = this;
      _.inherit = t0;
      _.color = t1;
      _.backgroundColor = t2;
      _.fontFamily = t3;
      _._text_style$_fontFamilyFallback = t4;
      _._package = t5;
      _.fontSize = t6;
      _.fontWeight = t7;
      _.fontStyle = t8;
      _.letterSpacing = t9;
      _.wordSpacing = t10;
      _.textBaseline = t11;
      _.height = t12;
      _.leadingDistribution = t13;
      _.locale = t14;
      _.foreground = t15;
      _.background = t16;
      _.decoration = t17;
      _.decorationColor = t18;
      _.decorationStyle = t19;
      _.decorationThickness = t20;
      _.debugLabel = t21;
      _.shadows = t22;
      _.fontFeatures = t23;
      _.fontVariations = t24;
      _.overflow = t25;
    },
    _TextStyle_Object_Diagnosticable: function _TextStyle_Object_Diagnosticable() {
    },
    _newtonsMethod(df, f, initialGuess, iterations, target) {
      var guess, i;
      for (guess = initialGuess, i = 0; i < iterations; ++i)
        guess -= (f.call$1(guess) - target) / df.call$1(guess);
      return guess;
    },
    FrictionSimulation$(drag, position, velocity, constantDeceleration, tolerance) {
      var t1 = new A.FrictionSimulation(drag, Math.log(drag), position, velocity, constantDeceleration * J.get$sign$in(velocity), tolerance);
      t1.FrictionSimulation$5$constantDeceleration$tolerance(drag, position, velocity, constantDeceleration, tolerance);
      return t1;
    },
    FrictionSimulation: function FrictionSimulation(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._drag = t0;
      _._dragLog = t1;
      _._friction_simulation$_x = t2;
      _._v = t3;
      _._constantDeceleration = t4;
      _._finalTime = 1 / 0;
      _.tolerance = t5;
    },
    FrictionSimulation_closure: function FrictionSimulation_closure(t0) {
      this.$this = t0;
    },
    Simulation: function Simulation() {
    },
    SpringDescription$withDampingRatio(mass, ratio, stiffness) {
      return new A.SpringDescription(mass, stiffness, ratio * 2 * Math.sqrt(mass * stiffness));
    },
    _SpringSolution__SpringSolution(spring, initialPosition, initialVelocity) {
      var r, r1, r2, c2, w,
        t1 = spring.damping,
        t2 = t1 * t1,
        t3 = spring.mass,
        t4 = 4 * t3 * spring.stiffness,
        cmk = t2 - t4;
      if (cmk === 0) {
        r = -t1 / (2 * t3);
        return new A._CriticalSolution(r, initialPosition, initialVelocity - r * initialPosition);
      }
      if (cmk > 0) {
        t1 = -t1;
        t3 = 2 * t3;
        r1 = (t1 - Math.sqrt(cmk)) / t3;
        r2 = (t1 + Math.sqrt(cmk)) / t3;
        c2 = (initialVelocity - r1 * initialPosition) / (r2 - r1);
        return new A._OverdampedSolution(r1, r2, initialPosition - c2, c2);
      }
      w = Math.sqrt(t4 - t2) / (2 * t3);
      r = -(t1 / 2 * t3);
      return new A._UnderdampedSolution(w, r, initialPosition, (initialVelocity - r * initialPosition) / w);
    },
    SpringDescription: function SpringDescription(t0, t1, t2) {
      this.mass = t0;
      this.stiffness = t1;
      this.damping = t2;
    },
    SpringType: function SpringType(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    SpringSimulation: function SpringSimulation(t0, t1, t2) {
      this._endPosition = t0;
      this._solution = t1;
      this.tolerance = t2;
    },
    ScrollSpringSimulation: function ScrollSpringSimulation(t0, t1, t2) {
      this._endPosition = t0;
      this._solution = t1;
      this.tolerance = t2;
    },
    _CriticalSolution: function _CriticalSolution(t0, t1, t2) {
      this._r = t0;
      this._c1 = t1;
      this._c2 = t2;
    },
    _OverdampedSolution: function _OverdampedSolution(t0, t1, t2, t3) {
      var _ = this;
      _._r1 = t0;
      _._r2 = t1;
      _._c1 = t2;
      _._c2 = t3;
    },
    _UnderdampedSolution: function _UnderdampedSolution(t0, t1, t2, t3) {
      var _ = this;
      _._spring_simulation$_w = t0;
      _._r = t1;
      _._c1 = t2;
      _._c2 = t3;
    },
    Tolerance: function Tolerance(t0, t1) {
      this.distance = t0;
      this.velocity = t1;
    },
    RendererBinding: function RendererBinding() {
    },
    RendererBinding__scheduleMouseTrackerUpdate_closure: function RendererBinding__scheduleMouseTrackerUpdate_closure(t0) {
      this.$this = t0;
    },
    BoxConstraints$tight(size) {
      var t1 = size._dx,
        t2 = size._dy;
      return new A.BoxConstraints(t1, t1, t2, t2);
    },
    BoxConstraints$tightFor(height, width) {
      var t3, t4,
        t1 = width == null,
        t2 = t1 ? 0 : width;
      t1 = t1 ? 1 / 0 : width;
      t3 = height == null;
      t4 = t3 ? 0 : height;
      return new A.BoxConstraints(t2, t1, t4, t3 ? 1 / 0 : height);
    },
    BoxConstraints$loose(size) {
      return new A.BoxConstraints(0, size._dx, 0, size._dy);
    },
    BoxConstraints_lerp(a, b, t) {
      var t1, t2, t3, t4;
      if (a == b)
        return a;
      if (a == null)
        return b.$mul(0, t);
      if (b == null)
        return a.$mul(0, 1 - t);
      t1 = a.minWidth;
      if (isFinite(t1)) {
        t1 = A.lerpDouble(t1, b.minWidth, t);
        t1.toString;
      } else
        t1 = 1 / 0;
      t2 = a.maxWidth;
      if (isFinite(t2)) {
        t2 = A.lerpDouble(t2, b.maxWidth, t);
        t2.toString;
      } else
        t2 = 1 / 0;
      t3 = a.minHeight;
      if (isFinite(t3)) {
        t3 = A.lerpDouble(t3, b.minHeight, t);
        t3.toString;
      } else
        t3 = 1 / 0;
      t4 = a.maxHeight;
      if (isFinite(t4)) {
        t4 = A.lerpDouble(t4, b.maxHeight, t);
        t4.toString;
      } else
        t4 = 1 / 0;
      return new A.BoxConstraints(t1, t2, t3, t4);
    },
    BoxHitTestResult$() {
      var t1 = A._setArrayType([], type$.JSArray_HitTestEntry_HitTestTarget),
        t2 = new A.Matrix4(new Float64Array(16));
      t2.setIdentity$0();
      return new A.BoxHitTestResult(t1, A._setArrayType([t2], type$.JSArray_Matrix4), A._setArrayType([], type$.JSArray__TransformPart));
    },
    BoxConstraints: function BoxConstraints(t0, t1, t2, t3) {
      var _ = this;
      _.minWidth = t0;
      _.maxWidth = t1;
      _.minHeight = t2;
      _.maxHeight = t3;
    },
    BoxConstraints_toString_describe: function BoxConstraints_toString_describe() {
    },
    BoxHitTestResult: function BoxHitTestResult(t0, t1, t2) {
      this._path = t0;
      this._transforms = t1;
      this._localTransforms = t2;
    },
    BoxHitTestEntry: function BoxHitTestEntry(t0, t1) {
      this.localPosition = t0;
      this.target = t1;
      this._transform = null;
    },
    BoxParentData: function BoxParentData(t0) {
      this.offset = t0;
    },
    ContainerBoxParentData: function ContainerBoxParentData() {
    },
    RenderBox: function RenderBox() {
    },
    RenderBox_getDryLayout_closure: function RenderBox_getDryLayout_closure(t0, t1) {
      this.$this = t0;
      this.constraints = t1;
    },
    RenderBox_getDistanceToActualBaseline_closure: function RenderBox_getDistanceToActualBaseline_closure(t0, t1) {
      this.$this = t0;
      this.baseline = t1;
    },
    RenderBoxContainerDefaultsMixin: function RenderBoxContainerDefaultsMixin() {
    },
    RenderBoxContainerDefaultsMixin_defaultHitTestChildren_closure: function RenderBoxContainerDefaultsMixin_defaultHitTestChildren_closure(t0) {
      this._box_0 = t0;
    },
    _ContainerBoxParentData_BoxParentData_ContainerParentDataMixin: function _ContainerBoxParentData_BoxParentData_ContainerParentDataMixin() {
    },
    MultiChildLayoutParentData: function MultiChildLayoutParentData(t0, t1, t2) {
      var _ = this;
      _.id = null;
      _.ContainerParentDataMixin_previousSibling = t0;
      _.ContainerParentDataMixin_nextSibling = t1;
      _.offset = t2;
    },
    MultiChildLayoutDelegate: function MultiChildLayoutDelegate() {
    },
    RenderCustomMultiChildLayoutBox: function RenderCustomMultiChildLayoutBox(t0, t1, t2, t3, t4) {
      var _ = this;
      _._custom_layout$_delegate = t0;
      _.ContainerRenderObjectMixin__childCount = t1;
      _.ContainerRenderObjectMixin__firstChild = t2;
      _.ContainerRenderObjectMixin__lastChild = t3;
      _.parentData = _._cachedBaselines = _._size = _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t4;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    _RenderCustomMultiChildLayoutBox_RenderBox_ContainerRenderObjectMixin: function _RenderCustomMultiChildLayoutBox_RenderBox_ContainerRenderObjectMixin() {
    },
    _RenderCustomMultiChildLayoutBox_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin: function _RenderCustomMultiChildLayoutBox_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin() {
    },
    RenderCustomPaint__updateSemanticsChildren(oldSemantics, newChildSemantics) {
      var t1, oldChildrenBottom, newChildren, t2, oldKeyedChildren, oldChildrenTop, oldChild, t3, t4, newChildrenTop, newSemantics, key, oldChild0;
      if (oldSemantics == null)
        oldSemantics = B.List_empty9;
      t1 = J.getInterceptor$asx(oldSemantics);
      oldChildrenBottom = t1.get$length(oldSemantics) - 1;
      newChildren = A.List_List$filled(0, null, false, type$.nullable_SemanticsNode);
      t2 = 0 <= oldChildrenBottom;
      while (true) {
        if (!false)
          break;
        t1.$index(oldSemantics, 0);
        newChildSemantics[0].get$key();
        break;
      }
      while (true) {
        if (!false)
          break;
        t1.$index(oldSemantics, oldChildrenBottom);
        newChildSemantics[-1].get$key();
        break;
      }
      oldKeyedChildren = A._Cell$();
      oldChildrenTop = 0;
      if (t2) {
        oldKeyedChildren.set$finalLocalValue(A.LinkedHashMap_LinkedHashMap$_empty(type$.Key, type$.SemanticsNode));
        for (; oldChildrenTop <= oldChildrenBottom;) {
          oldChild = t1.$index(oldSemantics, oldChildrenTop);
          t3 = oldChild.key;
          if (t3 != null) {
            t4 = oldKeyedChildren.__late_helper$_value;
            if (t4 === oldKeyedChildren)
              A.throwExpression(A.LateError$localNI(""));
            J.$indexSet$ax(t4, t3, oldChild);
          }
          ++oldChildrenTop;
        }
      }
      for (newChildrenTop = 0; false;) {
        newSemantics = newChildSemantics[newChildrenTop];
        oldChild = null;
        if (t2) {
          key = newSemantics.get$key();
          t3 = oldKeyedChildren.__late_helper$_value;
          if (t3 === oldKeyedChildren)
            A.throwExpression(A.LateError$localNI(""));
          oldChild0 = J.$index$asx(t3, key);
          if (oldChild0 != null)
            newSemantics.get$key();
          else
            oldChild = oldChild0;
        }
        newChildren[newChildrenTop] = A.RenderCustomPaint__updateSemanticsChild(oldChild, newSemantics);
        ++newChildrenTop;
      }
      t1.get$length(oldSemantics);
      while (true) {
        if (!false)
          break;
        newChildren[newChildrenTop] = A.RenderCustomPaint__updateSemanticsChild(t1.$index(oldSemantics, oldChildrenTop), newChildSemantics[newChildrenTop]);
        ++newChildrenTop;
        ++oldChildrenTop;
      }
      return new A.CastList(newChildren, A._arrayInstanceType(newChildren)._eval$1("CastList<1,SemanticsNode>"));
    },
    RenderCustomPaint__updateSemanticsChild(oldChild, newSemantics) {
      var t1,
        newChild = oldChild == null ? A.SemanticsNode$(newSemantics.get$key(), null) : oldChild,
        properties = newSemantics.get$properties(),
        config = A.SemanticsConfiguration$();
      properties.get$sortKey();
      config._sortKey = properties.get$sortKey();
      config._hasBeenAnnotated = true;
      properties.get$checked();
      t1 = properties.get$checked();
      config._setFlag$2(B.SemanticsFlag_1, true);
      config._setFlag$2(B.SemanticsFlag_2, t1);
      properties.get$mixed();
      t1 = properties.get$mixed();
      config._setFlag$2(B.SemanticsFlag_1, true);
      config._setFlag$2(B.SemanticsFlag_33554432, t1);
      properties.get$selected();
      config._setFlag$2(B.SemanticsFlag_4, properties.get$selected());
      properties.get$button();
      config._setFlag$2(B.SemanticsFlag_8, properties.get$button());
      properties.get$link();
      config._setFlag$2(B.SemanticsFlag_4194304, properties.get$link());
      properties.get$textField();
      config._setFlag$2(B.SemanticsFlag_16, properties.get$textField());
      properties.get$slider();
      config._setFlag$2(B.SemanticsFlag_8388608, properties.get$slider());
      properties.get$keyboardKey();
      config._setFlag$2(B.SemanticsFlag_16777216, properties.get$keyboardKey());
      properties.get$readOnly();
      config._setFlag$2(B.SemanticsFlag_1048576, properties.get$readOnly());
      properties.get$focusable();
      config._setFlag$2(B.SemanticsFlag_2097152, properties.get$focusable());
      properties.get$focused();
      config._setFlag$2(B.SemanticsFlag_32, properties.get$focused());
      properties.get$enabled();
      t1 = properties.get$enabled();
      config._setFlag$2(B.SemanticsFlag_64, true);
      config._setFlag$2(B.SemanticsFlag_128, t1);
      properties.get$inMutuallyExclusiveGroup();
      config._setFlag$2(B.SemanticsFlag_256, properties.get$inMutuallyExclusiveGroup());
      properties.get$obscured();
      config._setFlag$2(B.SemanticsFlag_1024, properties.get$obscured());
      properties.get$multiline();
      config._setFlag$2(B.SemanticsFlag_524288, properties.get$multiline());
      properties.get$hidden();
      config._setFlag$2(B.SemanticsFlag_8192, properties.get$hidden());
      properties.get$header();
      config._setFlag$2(B.SemanticsFlag_512, properties.get$header());
      properties.get$scopesRoute();
      config._setFlag$2(B.SemanticsFlag_2048, properties.get$scopesRoute());
      properties.get$namesRoute();
      config._setFlag$2(B.SemanticsFlag_4096, properties.get$namesRoute());
      properties.get$liveRegion();
      config._setFlag$2(B.SemanticsFlag_32768, properties.get$liveRegion());
      properties.get$maxValueLength();
      config.set$maxValueLength(properties.get$maxValueLength());
      properties.get$currentValueLength();
      config.set$currentValueLength(properties.get$currentValueLength());
      properties.get$toggled();
      t1 = properties.get$toggled();
      config._setFlag$2(B.SemanticsFlag_65536, true);
      config._setFlag$2(B.SemanticsFlag_131072, t1);
      properties.get$image();
      config._setFlag$2(B.SemanticsFlag_16384, properties.get$image());
      properties.get$label();
      config._semantics$_attributedLabel = new A.AttributedString(properties.get$label(), B.List_empty0);
      config._hasBeenAnnotated = true;
      properties.get$value();
      config._semantics$_attributedValue = new A.AttributedString(properties.get$value(), B.List_empty0);
      config._hasBeenAnnotated = true;
      properties.get$increasedValue();
      config._semantics$_attributedIncreasedValue = new A.AttributedString(properties.get$increasedValue(), B.List_empty0);
      config._hasBeenAnnotated = true;
      properties.get$decreasedValue();
      config._semantics$_attributedDecreasedValue = new A.AttributedString(properties.get$decreasedValue(), B.List_empty0);
      config._hasBeenAnnotated = true;
      properties.get$hint();
      config._semantics$_attributedHint = new A.AttributedString(properties.get$hint(), B.List_empty0);
      config._hasBeenAnnotated = true;
      properties.get$textDirection();
      config._semantics$_textDirection = properties.get$textDirection();
      config._hasBeenAnnotated = true;
      properties.get$onTap();
      config.set$onTap(properties.get$onTap());
      properties.get$onLongPress();
      config.set$onLongPress(properties.get$onLongPress());
      properties.get$onScrollLeft();
      config.set$onScrollLeft(properties.get$onScrollLeft());
      properties.get$onScrollRight();
      config.set$onScrollRight(properties.get$onScrollRight());
      properties.get$onScrollUp();
      config.set$onScrollUp(properties.get$onScrollUp());
      properties.get$onScrollDown();
      config.set$onScrollDown(properties.get$onScrollDown());
      properties.get$onIncrease();
      config.set$onIncrease(properties.get$onIncrease());
      properties.get$onDecrease();
      config.set$onDecrease(properties.get$onDecrease());
      properties.get$onCopy();
      config.set$onCopy(properties.get$onCopy());
      properties.get$onCut();
      config.set$onCut(properties.get$onCut());
      properties.get$onPaste();
      config.set$onPaste(properties.get$onPaste());
      properties.get$onMoveCursorForwardByCharacter();
      config.set$onMoveCursorForwardByCharacter(properties.get$onMoveCursorForwardByCharacter());
      properties.get$onMoveCursorBackwardByCharacter();
      config.set$onMoveCursorBackwardByCharacter(properties.get$onMoveCursorBackwardByCharacter());
      properties.get$onMoveCursorForwardByWord();
      config.set$onMoveCursorForwardByWord(properties.get$onMoveCursorForwardByWord());
      properties.get$onMoveCursorBackwardByWord();
      config.set$onMoveCursorBackwardByWord(properties.get$onMoveCursorBackwardByWord());
      properties.get$onSetSelection();
      config.set$onSetSelection(properties.get$onSetSelection());
      properties.get$onSetText();
      config.set$onSetText(properties.get$onSetText());
      properties.get$onDidGainAccessibilityFocus();
      config.set$onDidGainAccessibilityFocus(properties.get$onDidGainAccessibilityFocus());
      properties.get$onDidLoseAccessibilityFocus();
      config.set$onDidLoseAccessibilityFocus(properties.get$onDidLoseAccessibilityFocus());
      properties.get$onDismiss();
      config.set$onDismiss(properties.get$onDismiss());
      newChild.updateWith$2$childrenInInversePaintOrder$config(B.List_empty9, config);
      newChild.set$rect(newSemantics.get$rect());
      newChild.set$transform(newSemantics.get$transform());
      newChild.tags = newSemantics.get$tags();
      return newChild;
    },
    CustomPainter: function CustomPainter() {
    },
    RenderCustomPaint: function RenderCustomPaint(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._painter = t0;
      _._foregroundPainter = t1;
      _._preferredSize = t2;
      _.isComplex = t3;
      _.willChange = t4;
      _._foregroundSemanticsNodes = _._backgroundSemanticsNodes = _._foregroundSemanticsBuilder = _._backgroundSemanticsBuilder = null;
      _.RenderObjectWithChildMixin__child = t5;
      _.parentData = _._cachedBaselines = _._size = _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t6;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    DebugOverflowIndicatorMixin: function DebugOverflowIndicatorMixin() {
    },
    RenderErrorBox: function RenderErrorBox(t0, t1) {
      var _ = this;
      _.message = t0;
      _.__RenderErrorBox__paragraph_F = $;
      _.parentData = _._cachedBaselines = _._size = _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t1;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    _startIsTopLeft(direction, textDirection, verticalDirection) {
      switch (direction.index) {
        case 0:
          switch (textDirection) {
            case B.TextDirection_1:
              return true;
            case B.TextDirection_0:
              return false;
            case null:
            case void 0:
              return null;
          }
          break;
        case 1:
          switch (verticalDirection) {
            case B.VerticalDirection_1:
              return true;
            case B.VerticalDirection_0:
              return false;
            case null:
            case void 0:
              return null;
          }
          break;
      }
    },
    FlexFit: function FlexFit(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    FlexParentData: function FlexParentData(t0, t1, t2) {
      var _ = this;
      _.fit = _.flex = null;
      _.ContainerParentDataMixin_previousSibling = t0;
      _.ContainerParentDataMixin_nextSibling = t1;
      _.offset = t2;
    },
    MainAxisSize: function MainAxisSize(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    MainAxisAlignment: function MainAxisAlignment(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    CrossAxisAlignment: function CrossAxisAlignment(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    RenderFlex: function RenderFlex(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14) {
      var _ = this;
      _._flex$_direction = t0;
      _._mainAxisAlignment = t1;
      _._mainAxisSize = t2;
      _._crossAxisAlignment = t3;
      _._flex$_textDirection = t4;
      _._verticalDirection = t5;
      _._flex$_textBaseline = t6;
      _._flex$_overflow = 0;
      _._flex$_clipBehavior = t7;
      _._flex$_clipRectLayer = t8;
      _.DebugOverflowIndicatorMixin__indicatorLabel = t9;
      _.DebugOverflowIndicatorMixin__overflowReportNeeded = t10;
      _.ContainerRenderObjectMixin__childCount = t11;
      _.ContainerRenderObjectMixin__firstChild = t12;
      _.ContainerRenderObjectMixin__lastChild = t13;
      _.parentData = _._cachedBaselines = _._size = _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t14;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    _LayoutSizes: function _LayoutSizes(t0, t1, t2) {
      this.mainSize = t0;
      this.crossSize = t1;
      this.allocatedSize = t2;
    },
    _RenderFlex_RenderBox_ContainerRenderObjectMixin: function _RenderFlex_RenderBox_ContainerRenderObjectMixin() {
    },
    _RenderFlex_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin: function _RenderFlex_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin() {
    },
    _RenderFlex_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin: function _RenderFlex_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin() {
    },
    LayerHandle$() {
      return new A.LayerHandle();
    },
    OffsetLayer$(offset) {
      return new A.OffsetLayer(offset, A.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$.void_Function), A.LayerHandle$());
    },
    TransformLayer$(transform) {
      return new A.TransformLayer(transform, B.Offset_0_0, A.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$.void_Function), A.LayerHandle$());
    },
    OpacityLayer$() {
      return new A.OpacityLayer(B.Offset_0_0, A.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$.void_Function), A.LayerHandle$());
    },
    LeaderLayer$(link, offset) {
      return new A.LeaderLayer(link, offset, A.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$.void_Function), A.LayerHandle$());
    },
    FollowerLayer__collectTransformForLayerChain(layers) {
      var index, t1,
        result = new A.Matrix4(new Float64Array(16));
      result.setIdentity$0();
      for (index = layers.length - 1; index > 0; --index) {
        t1 = layers[index];
        if (t1 != null)
          t1.applyTransform$2(layers[index - 1], result);
      }
      return result;
    },
    FollowerLayer__pathsToCommonAncestor(a, b, ancestorsA, ancestorsB) {
      var t1, t2;
      if (a == null || b == null)
        return null;
      if (a === b)
        return a;
      t1 = a._depth;
      t2 = b._depth;
      if (t1 < t2) {
        t1 = type$.nullable_ContainerLayer;
        ancestorsB.push(t1._as(A.AbstractNode.prototype.get$parent.call(b)));
        return A.FollowerLayer__pathsToCommonAncestor(a, t1._as(A.AbstractNode.prototype.get$parent.call(b)), ancestorsA, ancestorsB);
      } else if (t1 > t2) {
        t1 = type$.nullable_ContainerLayer;
        ancestorsA.push(t1._as(A.AbstractNode.prototype.get$parent.call(a)));
        return A.FollowerLayer__pathsToCommonAncestor(t1._as(A.AbstractNode.prototype.get$parent.call(a)), b, ancestorsA, ancestorsB);
      }
      t1 = type$.nullable_ContainerLayer;
      ancestorsA.push(t1._as(A.AbstractNode.prototype.get$parent.call(a)));
      ancestorsB.push(t1._as(A.AbstractNode.prototype.get$parent.call(b)));
      return A.FollowerLayer__pathsToCommonAncestor(t1._as(A.AbstractNode.prototype.get$parent.call(a)), t1._as(A.AbstractNode.prototype.get$parent.call(b)), ancestorsA, ancestorsB);
    },
    AnnotationEntry: function AnnotationEntry(t0, t1, t2) {
      this.annotation = t0;
      this.localPosition = t1;
      this.$ti = t2;
    },
    AnnotationResult: function AnnotationResult(t0, t1) {
      this._layer$_entries = t0;
      this.$ti = t1;
    },
    Layer: function Layer() {
    },
    LayerHandle: function LayerHandle() {
      this._layer = null;
    },
    PictureLayer: function PictureLayer(t0, t1, t2) {
      var _ = this;
      _.canvasBounds = t0;
      _._picture = null;
      _._willChangeHint = _._isComplexHint = false;
      _._layer$_callbacks = t1;
      _._compositionCallbackCount = 0;
      _._parentHandle = t2;
      _._refCount = 0;
      _._needsAddToScene = true;
      _._previousSibling = _._nextSibling = _._engineLayer = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    ContainerLayer: function ContainerLayer() {
    },
    OffsetLayer: function OffsetLayer(t0, t1, t2) {
      var _ = this;
      _._layer$_offset = t0;
      _._lastChild = _._firstChild = null;
      _._layer$_callbacks = t1;
      _._compositionCallbackCount = 0;
      _._parentHandle = t2;
      _._refCount = 0;
      _._needsAddToScene = true;
      _._previousSibling = _._nextSibling = _._engineLayer = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    ClipRectLayer: function ClipRectLayer(t0, t1, t2) {
      var _ = this;
      _._clipRect = null;
      _._layer$_clipBehavior = t0;
      _._lastChild = _._firstChild = null;
      _._layer$_callbacks = t1;
      _._compositionCallbackCount = 0;
      _._parentHandle = t2;
      _._refCount = 0;
      _._needsAddToScene = true;
      _._previousSibling = _._nextSibling = _._engineLayer = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    ClipRRectLayer: function ClipRRectLayer(t0, t1, t2) {
      var _ = this;
      _._clipRRect = null;
      _._layer$_clipBehavior = t0;
      _._lastChild = _._firstChild = null;
      _._layer$_callbacks = t1;
      _._compositionCallbackCount = 0;
      _._parentHandle = t2;
      _._refCount = 0;
      _._needsAddToScene = true;
      _._previousSibling = _._nextSibling = _._engineLayer = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    ClipPathLayer: function ClipPathLayer(t0, t1, t2) {
      var _ = this;
      _._clipPath = null;
      _._layer$_clipBehavior = t0;
      _._lastChild = _._firstChild = null;
      _._layer$_callbacks = t1;
      _._compositionCallbackCount = 0;
      _._parentHandle = t2;
      _._refCount = 0;
      _._needsAddToScene = true;
      _._previousSibling = _._nextSibling = _._engineLayer = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    TransformLayer: function TransformLayer(t0, t1, t2, t3) {
      var _ = this;
      _._layer$_transform = t0;
      _._invertedTransform = _._lastEffectiveTransform = null;
      _._inverseDirty = true;
      _._layer$_offset = t1;
      _._lastChild = _._firstChild = null;
      _._layer$_callbacks = t2;
      _._compositionCallbackCount = 0;
      _._parentHandle = t3;
      _._refCount = 0;
      _._needsAddToScene = true;
      _._previousSibling = _._nextSibling = _._engineLayer = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    OpacityLayer: function OpacityLayer(t0, t1, t2) {
      var _ = this;
      _._alpha = null;
      _._layer$_offset = t0;
      _._lastChild = _._firstChild = null;
      _._layer$_callbacks = t1;
      _._compositionCallbackCount = 0;
      _._parentHandle = t2;
      _._refCount = 0;
      _._needsAddToScene = true;
      _._previousSibling = _._nextSibling = _._engineLayer = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    LayerLink: function LayerLink() {
      this.leaderSize = this._leader = null;
    },
    LeaderLayer: function LeaderLayer(t0, t1, t2, t3) {
      var _ = this;
      _._layer$_link = t0;
      _._layer$_offset = t1;
      _._lastChild = _._firstChild = null;
      _._layer$_callbacks = t2;
      _._compositionCallbackCount = 0;
      _._parentHandle = t3;
      _._refCount = 0;
      _._needsAddToScene = true;
      _._previousSibling = _._nextSibling = _._engineLayer = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    FollowerLayer: function FollowerLayer(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.link = t0;
      _.showWhenUnlinked = t1;
      _.unlinkedOffset = t2;
      _.linkedOffset = t3;
      _._invertedTransform = _._layer$_lastTransform = _._lastOffset = null;
      _._inverseDirty = true;
      _._lastChild = _._firstChild = null;
      _._layer$_callbacks = t4;
      _._compositionCallbackCount = 0;
      _._parentHandle = t5;
      _._refCount = 0;
      _._needsAddToScene = true;
      _._previousSibling = _._nextSibling = _._engineLayer = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    AnnotatedRegionLayer: function AnnotatedRegionLayer(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.value = t0;
      _.size = t1;
      _.offset = t2;
      _._lastChild = _._firstChild = null;
      _._layer$_callbacks = t3;
      _._compositionCallbackCount = 0;
      _._parentHandle = t4;
      _._refCount = 0;
      _._needsAddToScene = true;
      _._previousSibling = _._nextSibling = _._engineLayer = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
      _.$ti = t5;
    },
    _Layer_AbstractNode_DiagnosticableTreeMixin: function _Layer_AbstractNode_DiagnosticableTreeMixin() {
    },
    ListWheelParentData: function ListWheelParentData(t0, t1, t2) {
      var _ = this;
      _.index = null;
      _.ContainerParentDataMixin_previousSibling = t0;
      _.ContainerParentDataMixin_nextSibling = t1;
      _.offset = t2;
    },
    RenderListWheelViewport: function RenderListWheelViewport(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16) {
      var _ = this;
      _.childManager = t0;
      _._list_wheel_viewport$_offset = t1;
      _._diameterRatio = t2;
      _._perspective = t3;
      _._offAxisFraction = t4;
      _._useMagnifier = t5;
      _._magnification = t6;
      _._overAndUnderCenterOpacity = t7;
      _._itemExtent = t8;
      _._squeeze = t9;
      _._renderChildrenOutsideViewport = t10;
      _._list_wheel_viewport$_clipBehavior = t11;
      _._list_wheel_viewport$_clipRectLayer = t12;
      _.ContainerRenderObjectMixin__childCount = t13;
      _.ContainerRenderObjectMixin__firstChild = t14;
      _.ContainerRenderObjectMixin__lastChild = t15;
      _.parentData = _._cachedBaselines = _._size = _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t16;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderListWheelViewport__createChild_closure: function RenderListWheelViewport__createChild_closure(t0, t1, t2) {
      this.$this = t0;
      this.index = t1;
      this.after = t2;
    },
    RenderListWheelViewport__destroyChild_closure: function RenderListWheelViewport__destroyChild_closure(t0, t1) {
      this.$this = t0;
      this.child = t1;
    },
    RenderListWheelViewport__paintChildWithMagnifier_closure: function RenderListWheelViewport__paintChildWithMagnifier_closure(t0, t1, t2) {
      this.$this = t0;
      this.child = t1;
      this.untransformedPaintingCoordinates = t2;
    },
    RenderListWheelViewport__paintChildWithMagnifier__closure: function RenderListWheelViewport__paintChildWithMagnifier__closure(t0, t1) {
      this.child = t0;
      this.untransformedPaintingCoordinates = t1;
    },
    RenderListWheelViewport__paintChildWithMagnifier_closure0: function RenderListWheelViewport__paintChildWithMagnifier_closure0(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.child = t1;
      _.cylindricalTransform = t2;
      _.offsetToCenter = t3;
    },
    RenderListWheelViewport__paintChildCylindrically_painter: function RenderListWheelViewport__paintChildCylindrically_painter(t0, t1) {
      this.child = t0;
      this.offsetToCenter = t1;
    },
    RenderListWheelViewport__paintChildCylindrically_opacityPainter: function RenderListWheelViewport__paintChildCylindrically_opacityPainter(t0, t1) {
      this.$this = t0;
      this.painter = t1;
    },
    _RenderListWheelViewport_RenderBox_ContainerRenderObjectMixin: function _RenderListWheelViewport_RenderBox_ContainerRenderObjectMixin() {
    },
    MouseTracker__shouldMarkStateDirty(state, $event) {
      var lastEvent;
      if (state == null)
        return true;
      lastEvent = state._latestEvent;
      if (type$.PointerSignalEvent._is($event))
        return false;
      return type$.PointerAddedEvent._is(lastEvent) || type$.PointerRemovedEvent._is($event) || !lastEvent.get$position().$eq(0, $event.get$position());
    },
    MouseTracker__handleDeviceUpdateMouseEvents(details) {
      var lastAnnotations, nextAnnotations, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, enteringAnnotations, baseEnterEvent,
        result = details.triggeringEvent;
      if (result == null)
        result = details.previousEvent;
      lastAnnotations = details.lastAnnotations;
      nextAnnotations = details.nextAnnotations;
      t1 = result.get$timeStamp();
      t2 = result.get$pointer();
      t3 = result.get$kind();
      t4 = result.get$device();
      t5 = result.get$position();
      t6 = result.get$delta();
      t7 = result.get$buttons();
      result.get$obscured();
      t8 = result.get$pressureMin();
      t9 = result.get$pressureMax();
      t10 = result.get$distance();
      t11 = result.get$distanceMax();
      t12 = result.get$size();
      t13 = result.get$radiusMajor();
      t14 = result.get$radiusMinor();
      t15 = result.get$radiusMin();
      t16 = result.get$radiusMax();
      t17 = result.get$orientation();
      t18 = result.get$tilt();
      t19 = result.get$down();
      result.get$synthesized();
      lastAnnotations.forEach$1(0, new A.MouseTracker__handleDeviceUpdateMouseEvents_closure(nextAnnotations, A.PointerExitEvent$(t7, t6, t4, t10, t11, t19, 0, t3, false, t17, t2, t5, t9, t8, t13, t16, t15, t14, t12, false, t18, t1).transformed$1(result.get$transform()), lastAnnotations));
      t1 = A._instanceType(nextAnnotations)._eval$1("LinkedHashMapKeysIterable<1>");
      t18 = t1._eval$1("WhereIterable<Iterable.E>");
      enteringAnnotations = A.List_List$_of(new A.WhereIterable(new A.LinkedHashMapKeysIterable(nextAnnotations, t1), new A.MouseTracker__handleDeviceUpdateMouseEvents_closure0(lastAnnotations), t18), t18._eval$1("Iterable.E"));
      t1 = result.get$timeStamp();
      t2 = result.get$pointer();
      t3 = result.get$kind();
      t4 = result.get$device();
      t5 = result.get$position();
      t6 = result.get$delta();
      t7 = result.get$buttons();
      result.get$obscured();
      t8 = result.get$pressureMin();
      t9 = result.get$pressureMax();
      t10 = result.get$distance();
      t11 = result.get$distanceMax();
      t12 = result.get$size();
      t13 = result.get$radiusMajor();
      t14 = result.get$radiusMinor();
      t15 = result.get$radiusMin();
      t16 = result.get$radiusMax();
      t17 = result.get$orientation();
      t18 = result.get$tilt();
      t19 = result.get$down();
      result.get$synthesized();
      baseEnterEvent = A.PointerEnterEvent$(t7, t6, t4, t10, t11, t19, 0, t3, false, t17, t2, t5, t9, t8, t13, t16, t15, t14, t12, false, t18, t1).transformed$1(result.get$transform());
      for (t1 = A._arrayInstanceType(enteringAnnotations)._eval$1("ReversedListIterable<1>"), t2 = new A.ReversedListIterable(enteringAnnotations, t1), t2 = new A.ListIterator(t2, t2.get$length(0), t1._eval$1("ListIterator<ListIterable.E>")), t1 = t1._eval$1("ListIterable.E"); t2.moveNext$0();) {
        t3 = t2.__internal$_current;
        if (t3 == null)
          t3 = t1._as(t3);
        if (t3.get$validForMouseTracker() && t3.get$onEnter() != null) {
          t4 = t3.get$onEnter();
          t4.toString;
          t4.call$1(baseEnterEvent.transformed$1(nextAnnotations.$index(0, t3)));
        }
      }
    },
    _MouseState: function _MouseState(t0, t1) {
      this._annotations = t0;
      this._latestEvent = t1;
    },
    _MouseTrackerUpdateDetails: function _MouseTrackerUpdateDetails(t0, t1, t2, t3) {
      var _ = this;
      _.lastAnnotations = t0;
      _.nextAnnotations = t1;
      _.previousEvent = t2;
      _.triggeringEvent = t3;
    },
    MouseTracker: function MouseTracker(t0, t1, t2) {
      var _ = this;
      _._mouseCursorMixin = t0;
      _._mouseStates = t1;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t2;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
    },
    MouseTracker__handleDeviceUpdate_closure: function MouseTracker__handleDeviceUpdate_closure() {
    },
    MouseTracker_updateWithEvent_closure: function MouseTracker_updateWithEvent_closure(t0, t1, t2, t3, t4) {
      var _ = this;
      _.$this = t0;
      _.existingState = t1;
      _.event = t2;
      _.device = t3;
      _.result = t4;
    },
    MouseTracker_updateWithEvent__closure: function MouseTracker_updateWithEvent__closure(t0, t1, t2, t3, t4) {
      var _ = this;
      _.$this = t0;
      _.existingState = t1;
      _.event = t2;
      _.device = t3;
      _.result = t4;
    },
    MouseTracker_updateAllDevices_closure: function MouseTracker_updateAllDevices_closure(t0, t1) {
      this.$this = t0;
      this.hitTest = t1;
    },
    MouseTracker__handleDeviceUpdateMouseEvents_closure: function MouseTracker__handleDeviceUpdateMouseEvents_closure(t0, t1, t2) {
      this.nextAnnotations = t0;
      this.baseExitEvent = t1;
      this.lastAnnotations = t2;
    },
    MouseTracker__handleDeviceUpdateMouseEvents_closure0: function MouseTracker__handleDeviceUpdateMouseEvents_closure0(t0) {
      this.lastAnnotations = t0;
    },
    __MouseTrackerUpdateDetails_Object_Diagnosticable: function __MouseTrackerUpdateDetails_Object_Diagnosticable() {
    },
    PaintingContext__repaintCompositedChild(child, debugAlsoPaintedParent) {
      var layer, childContext,
        t1 = child._layerHandle,
        childLayer = type$.nullable_OffsetLayer._as(t1._layer);
      if (childLayer == null) {
        layer = child.updateCompositedLayer$1$oldLayer(null);
        t1.set$layer(layer);
        childLayer = layer;
      } else {
        childLayer.removeAllChildren$0();
        child.updateCompositedLayer$1$oldLayer(childLayer);
      }
      child._needsCompositedLayerUpdate = false;
      childContext = new A.PaintingContext(childLayer, child.get$paintBounds());
      child._paintWithContext$2(childContext, B.Offset_0_0);
      childContext.stopRecordingIfNeeded$0();
    },
    PaintingContext_updateLayerProperties(child) {
      var t1 = child._layerHandle._layer;
      t1.toString;
      child.updateCompositedLayer$1$oldLayer(type$.OffsetLayer._as(t1));
      child._needsCompositedLayerUpdate = false;
    },
    RenderObject__cleanChildRelayoutBoundary(child) {
      child._cleanRelayoutBoundary$0();
    },
    RenderObject__propagateRelayoutBoundaryToChild(child) {
      child._propagateRelayoutBoundary$0();
    },
    _SemanticsGeometry$(ancestors, parentPaintClipRect, parentSemanticsClipRect) {
      var t1 = new A._SemanticsGeometry();
      t1._computeValues$3(parentSemanticsClipRect, parentPaintClipRect, ancestors);
      return t1;
    },
    _SemanticsGeometry__transformRect(rect, transform) {
      if (rect == null)
        return null;
      if (rect.get$isEmpty(0) || transform.isZero$0())
        return B.Rect_0_0_0_0;
      return A.MatrixUtils_inverseTransformRect(transform, rect);
    },
    _SemanticsGeometry__applyIntermediatePaintTransforms(ancestor, child, transform, clipRectTransform) {
      var t2, intermediateParent, t3,
        t1 = child._node$_parent;
      t1.toString;
      t2 = type$.RenderObject;
      t2._as(t1);
      for (intermediateParent = t1; intermediateParent !== ancestor; intermediateParent = t1, child = t3) {
        intermediateParent.applyPaintTransform$2(child, transform);
        t1 = intermediateParent._node$_parent;
        t1.toString;
        t2._as(t1);
        t3 = child._node$_parent;
        t3.toString;
        t2._as(t3);
      }
      ancestor.applyPaintTransform$2(child, transform);
      ancestor.applyPaintTransform$2(child, clipRectTransform);
    },
    _SemanticsGeometry__intersectRects(a, b) {
      if (a == null)
        return b;
      if (b == null)
        return a;
      return a.intersect$1(b);
    },
    ParentData: function ParentData() {
    },
    PaintingContext: function PaintingContext(t0, t1) {
      var _ = this;
      _._containerLayer = t0;
      _.estimatedBounds = t1;
      _._canvas = _._recorder = _._currentLayer = null;
    },
    PaintingContext_pushClipRect_closure: function PaintingContext_pushClipRect_closure(t0, t1, t2) {
      this.$this = t0;
      this.painter = t1;
      this.offset = t2;
    },
    PaintingContext_pushClipRRect_closure: function PaintingContext_pushClipRRect_closure(t0, t1, t2) {
      this.$this = t0;
      this.painter = t1;
      this.offset = t2;
    },
    PaintingContext_pushClipPath_closure: function PaintingContext_pushClipPath_closure(t0, t1, t2) {
      this.$this = t0;
      this.painter = t1;
      this.offset = t2;
    },
    Constraints: function Constraints() {
    },
    _LocalSemanticsHandle: function _LocalSemanticsHandle(t0, t1) {
      this._object$_owner = t0;
      this.listener = t1;
    },
    PipelineOwner: function PipelineOwner(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.onNeedVisualUpdate = t0;
      _.onSemanticsOwnerCreated = t1;
      _.onSemanticsUpdate = t2;
      _.onSemanticsOwnerDisposed = t3;
      _._rootNode = null;
      _._shouldMergeDirtyNodes = false;
      _._nodesNeedingLayout = t4;
      _._nodesNeedingCompositingBitsUpdate = t5;
      _._nodesNeedingPaint = t6;
      _._semanticsOwner = null;
      _._outstandingSemanticsHandles = 0;
      _._nodesNeedingSemantics = t7;
    },
    PipelineOwner_flushLayout_closure: function PipelineOwner_flushLayout_closure() {
    },
    PipelineOwner_flushCompositingBits_closure: function PipelineOwner_flushCompositingBits_closure() {
    },
    PipelineOwner_flushPaint_closure: function PipelineOwner_flushPaint_closure() {
    },
    PipelineOwner_flushSemantics_closure: function PipelineOwner_flushSemantics_closure() {
    },
    RenderObject: function RenderObject() {
    },
    RenderObject__reportException_closure: function RenderObject__reportException_closure(t0) {
      this.$this = t0;
    },
    RenderObject_invokeLayoutCallback_closure: function RenderObject_invokeLayoutCallback_closure(t0, t1, t2) {
      this.$this = t0;
      this.callback = t1;
      this.T = t2;
    },
    RenderObject__updateCompositingBits_closure: function RenderObject__updateCompositingBits_closure(t0) {
      this.$this = t0;
    },
    RenderObject_clearSemantics_closure: function RenderObject_clearSemantics_closure() {
    },
    RenderObject__getSemanticsForParent_closure: function RenderObject__getSemanticsForParent_closure(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _._box_0 = t0;
      _.$this = t1;
      _.childrenMergeIntoParent = t2;
      _.childConfigurations = t3;
      _.mergeUpFragments = t4;
      _.siblingMergeFragmentGroups = t5;
      _.config = t6;
      _.hasTags = t7;
      _.hasChildConfigurationsDelegate = t8;
      _.configToFragment = t9;
    },
    RenderObject__getSemanticsForParent_closure0: function RenderObject__getSemanticsForParent_closure0(t0, t1, t2) {
      this._box_0 = t0;
      this.$this = t1;
      this.configToFragment = t2;
    },
    RenderObject__getSemanticsForParent_closure1: function RenderObject__getSemanticsForParent_closure1(t0, t1) {
      this.$this = t0;
      this.configToFragment = t1;
    },
    RenderObjectWithChildMixin: function RenderObjectWithChildMixin() {
    },
    ContainerParentDataMixin: function ContainerParentDataMixin() {
    },
    ContainerRenderObjectMixin: function ContainerRenderObjectMixin() {
    },
    RelayoutWhenSystemFontsChangeMixin: function RelayoutWhenSystemFontsChangeMixin() {
    },
    RelayoutWhenSystemFontsChangeMixin__scheduleSystemFontsUpdate_closure: function RelayoutWhenSystemFontsChangeMixin__scheduleSystemFontsUpdate_closure(t0) {
      this.$this = t0;
    },
    _SemanticsFragment: function _SemanticsFragment() {
    },
    _ContainerSemanticsFragment: function _ContainerSemanticsFragment(t0, t1, t2) {
      this.siblingMergeGroups = t0;
      this.mergeUpFragments = t1;
      this.dropsSemanticsOfPreviousSiblings = t2;
    },
    _InterestingSemanticsFragment: function _InterestingSemanticsFragment() {
    },
    _RootSemanticsFragment: function _RootSemanticsFragment(t0, t1, t2) {
      var _ = this;
      _._object$_children = t0;
      _._ancestorChain = t1;
      _._object$_tagsForChildren = null;
      _.dropsSemanticsOfPreviousSiblings = t2;
    },
    _IncompleteSemanticsFragment: function _IncompleteSemanticsFragment(t0, t1, t2) {
      var _ = this;
      _.config = t0;
      _._ancestorChain = t1;
      _._object$_tagsForChildren = null;
      _.dropsSemanticsOfPreviousSiblings = t2;
    },
    _SwitchableSemanticsFragment: function _SwitchableSemanticsFragment(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._mergeIntoParent = t0;
      _._config = t1;
      _._mergesToSibling = _._isConfigWritable = false;
      _._siblingMergeGroups = t2;
      _._object$_children = t3;
      _._isExplicit = false;
      _._ancestorChain = t4;
      _._object$_tagsForChildren = null;
      _.dropsSemanticsOfPreviousSiblings = t5;
    },
    _SemanticsGeometry: function _SemanticsGeometry() {
      var _ = this;
      _._semanticsClipRect = _._paintClipRect = null;
      _.___SemanticsGeometry__rect_A = _.___SemanticsGeometry__transform_A = $;
      _._markAsHidden = false;
    },
    _RenderObject_AbstractNode_DiagnosticableTreeMixin: function _RenderObject_AbstractNode_DiagnosticableTreeMixin() {
    },
    TextParentData: function TextParentData(t0, t1, t2) {
      var _ = this;
      _.scale = null;
      _.ContainerParentDataMixin_previousSibling = t0;
      _.ContainerParentDataMixin_nextSibling = t1;
      _.offset = t2;
    },
    RenderParagraph: function RenderParagraph(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _._textPainter = t0;
      _._registrar = _._lastSelectableFragments = _._cachedCombinedSemanticsInfos = _._cachedAttributedLabels = null;
      _.__RenderParagraph__placeholderSpans_A = $;
      _._softWrap = t1;
      _._overflow = t2;
      _._selectionColor = t3;
      _._needsClipping = false;
      _._cachedChildNodes = _._semanticsInfo = _._paragraph$_placeholderDimensions = _._overflowShader = null;
      _.RelayoutWhenSystemFontsChangeMixin__hasPendingSystemFontsDidChangeCallBack = t4;
      _.ContainerRenderObjectMixin__childCount = t5;
      _.ContainerRenderObjectMixin__firstChild = t6;
      _.ContainerRenderObjectMixin__lastChild = t7;
      _.parentData = _._cachedBaselines = _._size = _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t8;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderParagraph_markNeedsLayout_closure: function RenderParagraph_markNeedsLayout_closure() {
    },
    RenderParagraph__extractPlaceholderSpans_closure: function RenderParagraph__extractPlaceholderSpans_closure(t0) {
      this.$this = t0;
    },
    RenderParagraph_selectionColor_closure: function RenderParagraph_selectionColor_closure() {
    },
    RenderParagraph_paint_closure: function RenderParagraph_paint_closure(t0) {
      this._box_0 = t0;
    },
    _SelectableFragment: function _SelectableFragment(t0, t1, t2, t3) {
      var _ = this;
      _.range = t0;
      _.paragraph = t1;
      _.fullText = t2;
      _._endHandleLayerLink = _._startHandleLayerLink = _._textSelectionEnd = _._textSelectionStart = null;
      _.___SelectableFragment__selectionGeometry_A = $;
      _._cachedRect = null;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t3;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
    },
    _RenderParagraph_RenderBox_ContainerRenderObjectMixin: function _RenderParagraph_RenderBox_ContainerRenderObjectMixin() {
    },
    _RenderParagraph_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin: function _RenderParagraph_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin() {
    },
    _RenderParagraph_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_RelayoutWhenSystemFontsChangeMixin: function _RenderParagraph_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_RelayoutWhenSystemFontsChangeMixin() {
    },
    __SelectableFragment_Object_Selectable: function __SelectableFragment_Object_Selectable() {
    },
    __SelectableFragment_Object_Selectable_ChangeNotifier: function __SelectableFragment_Object_Selectable_ChangeNotifier() {
    },
    RenderConstrainedBox$(additionalConstraints) {
      var t1 = new A.RenderConstrainedBox(additionalConstraints, null, A.LayerHandle$());
      t1.RenderObject$0();
      t1.set$child(null);
      return t1;
    },
    RenderProxyBox: function RenderProxyBox() {
    },
    RenderProxyBoxMixin: function RenderProxyBoxMixin() {
    },
    HitTestBehavior: function HitTestBehavior(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    RenderProxyBoxWithHitTestBehavior: function RenderProxyBoxWithHitTestBehavior() {
    },
    RenderConstrainedBox: function RenderConstrainedBox(t0, t1, t2) {
      var _ = this;
      _._additionalConstraints = t0;
      _.RenderObjectWithChildMixin__child = t1;
      _.parentData = _._cachedBaselines = _._size = _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t2;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderLimitedBox: function RenderLimitedBox(t0, t1, t2, t3) {
      var _ = this;
      _._maxWidth = t0;
      _._maxHeight = t1;
      _.RenderObjectWithChildMixin__child = t2;
      _.parentData = _._cachedBaselines = _._size = _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t3;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderAnimatedOpacityMixin: function RenderAnimatedOpacityMixin() {
    },
    RenderAnimatedOpacity: function RenderAnimatedOpacity(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.RenderAnimatedOpacityMixin__alpha = t0;
      _.RenderAnimatedOpacityMixin__currentlyIsRepaintBoundary = t1;
      _.RenderAnimatedOpacityMixin__opacity = t2;
      _.RenderAnimatedOpacityMixin__alwaysIncludeSemantics = t3;
      _.RenderObjectWithChildMixin__child = t4;
      _.parentData = _._cachedBaselines = _._size = _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t5;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    CustomClipper: function CustomClipper() {
    },
    ShapeBorderClipper: function ShapeBorderClipper(t0, t1) {
      this.shape = t0;
      this.textDirection = t1;
    },
    _RenderCustomClip: function _RenderCustomClip() {
    },
    RenderClipRect: function RenderClipRect(t0, t1, t2, t3) {
      var _ = this;
      _._clipper = t0;
      _._clip = null;
      _._clipBehavior = t1;
      _._debugText = null;
      _.RenderObjectWithChildMixin__child = t2;
      _.parentData = _._cachedBaselines = _._size = _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t3;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderClipPath: function RenderClipPath(t0, t1, t2, t3) {
      var _ = this;
      _._clipper = t0;
      _._clip = null;
      _._clipBehavior = t1;
      _._debugText = null;
      _.RenderObjectWithChildMixin__child = t2;
      _.parentData = _._cachedBaselines = _._size = _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t3;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    _RenderPhysicalModelBase: function _RenderPhysicalModelBase() {
    },
    RenderPhysicalModel: function RenderPhysicalModel(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _._shape = t0;
      _._proxy_box$_borderRadius = t1;
      _._proxy_box$_elevation = t2;
      _._proxy_box$_shadowColor = t3;
      _._proxy_box$_color = t4;
      _._clipper = t5;
      _._clip = null;
      _._clipBehavior = t6;
      _._debugText = null;
      _.RenderObjectWithChildMixin__child = t7;
      _.parentData = _._cachedBaselines = _._size = _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t8;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderPhysicalModel_paint_closure: function RenderPhysicalModel_paint_closure(t0, t1) {
      this.$this = t0;
      this.usesSaveLayer = t1;
    },
    RenderPhysicalShape: function RenderPhysicalShape(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._proxy_box$_elevation = t0;
      _._proxy_box$_shadowColor = t1;
      _._proxy_box$_color = t2;
      _._clipper = t3;
      _._clip = null;
      _._clipBehavior = t4;
      _._debugText = null;
      _.RenderObjectWithChildMixin__child = t5;
      _.parentData = _._cachedBaselines = _._size = _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t6;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderPhysicalShape_paint_closure: function RenderPhysicalShape_paint_closure(t0, t1) {
      this.$this = t0;
      this.usesSaveLayer = t1;
    },
    DecorationPosition: function DecorationPosition(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    RenderDecoratedBox: function RenderDecoratedBox(t0, t1, t2, t3, t4) {
      var _ = this;
      _._proxy_box$_painter = null;
      _._proxy_box$_decoration = t0;
      _._proxy_box$_position = t1;
      _._configuration = t2;
      _.RenderObjectWithChildMixin__child = t3;
      _.parentData = _._cachedBaselines = _._size = _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t4;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderTransform: function RenderTransform(t0, t1, t2) {
      var _ = this;
      _._textDirection = _._alignment = _._origin = null;
      _.transformHitTests = t0;
      _._filterQuality = _._proxy_box$_transform = null;
      _.RenderObjectWithChildMixin__child = t1;
      _.parentData = _._cachedBaselines = _._size = _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t2;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderTransform_hitTestChildren_closure: function RenderTransform_hitTestChildren_closure(t0) {
      this.$this = t0;
    },
    RenderFractionalTranslation: function RenderFractionalTranslation(t0, t1, t2, t3) {
      var _ = this;
      _._translation = t0;
      _.transformHitTests = t1;
      _.RenderObjectWithChildMixin__child = t2;
      _.parentData = _._cachedBaselines = _._size = _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t3;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderFractionalTranslation_hitTestChildren_closure: function RenderFractionalTranslation_hitTestChildren_closure(t0) {
      this.$this = t0;
    },
    RenderPointerListener: function RenderPointerListener(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11) {
      var _ = this;
      _.onPointerDown = t0;
      _.onPointerMove = t1;
      _.onPointerUp = t2;
      _.onPointerHover = t3;
      _.onPointerCancel = t4;
      _.onPointerPanZoomStart = t5;
      _.onPointerPanZoomUpdate = t6;
      _.onPointerPanZoomEnd = t7;
      _.onPointerSignal = t8;
      _.behavior = t9;
      _.RenderObjectWithChildMixin__child = t10;
      _.parentData = _._cachedBaselines = _._size = _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t11;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderMouseRegion: function RenderMouseRegion(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _._proxy_box$_opaque = t0;
      _.onEnter = t1;
      _.onHover = t2;
      _.onExit = t3;
      _._cursor = t4;
      _._validForMouseTracker = true;
      _.behavior = t5;
      _.RenderObjectWithChildMixin__child = t6;
      _.parentData = _._cachedBaselines = _._size = _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t7;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderRepaintBoundary: function RenderRepaintBoundary(t0, t1) {
      var _ = this;
      _.RenderObjectWithChildMixin__child = t0;
      _.parentData = _._cachedBaselines = _._size = _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t1;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderIgnorePointer: function RenderIgnorePointer(t0, t1, t2, t3) {
      var _ = this;
      _._ignoring = t0;
      _._ignoringSemantics = t1;
      _.RenderObjectWithChildMixin__child = t2;
      _.parentData = _._cachedBaselines = _._size = _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t3;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderOffstage: function RenderOffstage(t0, t1, t2) {
      var _ = this;
      _._proxy_box$_offstage = t0;
      _.RenderObjectWithChildMixin__child = t1;
      _.parentData = _._cachedBaselines = _._size = _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t2;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderAbsorbPointer: function RenderAbsorbPointer(t0, t1, t2, t3) {
      var _ = this;
      _._absorbing = t0;
      _._ignoringSemantics = t1;
      _.RenderObjectWithChildMixin__child = t2;
      _.parentData = _._cachedBaselines = _._size = _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t3;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderSemanticsGestureHandler: function RenderSemanticsGestureHandler(t0, t1, t2) {
      var _ = this;
      _._onVerticalDragUpdate = _._onHorizontalDragUpdate = _._onLongPress = _._onTap = _._validActions = null;
      _.behavior = t0;
      _.RenderObjectWithChildMixin__child = t1;
      _.parentData = _._cachedBaselines = _._size = _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t2;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderSemanticsAnnotations: function RenderSemanticsAnnotations(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._properties = t0;
      _._container = t1;
      _._explicitChildNodes = t2;
      _._excludeSemantics = t3;
      _._attributedHint = _._attributedDecreasedValue = _._attributedIncreasedValue = _._attributedValue = _._attributedLabel = null;
      _._textDirection = t4;
      _.RenderObjectWithChildMixin__child = t5;
      _.parentData = _._cachedBaselines = _._size = _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t6;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderBlockSemantics: function RenderBlockSemantics(t0, t1, t2) {
      var _ = this;
      _._blocking = t0;
      _.RenderObjectWithChildMixin__child = t1;
      _.parentData = _._cachedBaselines = _._size = _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t2;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderExcludeSemantics: function RenderExcludeSemantics(t0, t1, t2) {
      var _ = this;
      _._excluding = t0;
      _.RenderObjectWithChildMixin__child = t1;
      _.parentData = _._cachedBaselines = _._size = _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t2;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderIndexedSemantics: function RenderIndexedSemantics(t0, t1, t2) {
      var _ = this;
      _._proxy_box$_index = t0;
      _.RenderObjectWithChildMixin__child = t1;
      _.parentData = _._cachedBaselines = _._size = _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t2;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderLeaderLayer: function RenderLeaderLayer(t0, t1, t2) {
      var _ = this;
      _._link = t0;
      _._previousLayoutSize = null;
      _.RenderObjectWithChildMixin__child = t1;
      _.parentData = _._cachedBaselines = _._size = _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t2;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderFollowerLayer: function RenderFollowerLayer(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._link = t0;
      _._showWhenUnlinked = t1;
      _._proxy_box$_offset = t2;
      _._leaderAnchor = t3;
      _._followerAnchor = t4;
      _.RenderObjectWithChildMixin__child = t5;
      _.parentData = _._cachedBaselines = _._size = _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t6;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderFollowerLayer_hitTestChildren_closure: function RenderFollowerLayer_hitTestChildren_closure(t0) {
      this.$this = t0;
    },
    RenderAnnotatedRegion: function RenderAnnotatedRegion(t0, t1, t2, t3, t4) {
      var _ = this;
      _._proxy_box$_value = t0;
      _._sized = t1;
      _.RenderObjectWithChildMixin__child = t2;
      _.parentData = _._cachedBaselines = _._size = _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t3;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
      _.$ti = t4;
    },
    _RenderAnimatedOpacity_RenderProxyBox_RenderAnimatedOpacityMixin: function _RenderAnimatedOpacity_RenderProxyBox_RenderAnimatedOpacityMixin() {
    },
    _RenderProxyBox_RenderBox_RenderObjectWithChildMixin: function _RenderProxyBox_RenderBox_RenderObjectWithChildMixin() {
    },
    _RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin: function _RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin() {
    },
    SelectionUtils_getResultBasedOnRect(targetRect, point) {
      var t1;
      if (targetRect.contains$1(0, point))
        return B.SelectionResult_2;
      t1 = point._dy;
      if (t1 < targetRect.top)
        return B.SelectionResult_1;
      if (t1 > targetRect.bottom)
        return B.SelectionResult_0;
      return point._dx >= targetRect.right ? B.SelectionResult_0 : B.SelectionResult_1;
    },
    SelectionUtils_adjustDragOffset(targetRect, point, direction) {
      var t1, t2;
      if (targetRect.contains$1(0, point))
        return point;
      t1 = point._dy;
      t2 = targetRect.top;
      if (!(t1 <= t2))
        t1 = t1 <= targetRect.bottom && point._dx <= targetRect.left;
      else
        t1 = true;
      if (t1)
        return direction === B.TextDirection_1 ? new A.Offset(targetRect.left, t2) : new A.Offset(targetRect.right, t2);
      else {
        t1 = targetRect.bottom;
        return direction === B.TextDirection_1 ? new A.Offset(targetRect.right, t1) : new A.Offset(targetRect.left, t1);
      }
    },
    SelectionResult: function SelectionResult(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    Selectable: function Selectable() {
    },
    SelectionRegistrant: function SelectionRegistrant() {
    },
    SelectionEventType: function SelectionEventType(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    TextGranularity: function TextGranularity(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    SelectionEvent: function SelectionEvent() {
    },
    ClearSelectionEvent: function ClearSelectionEvent(t0) {
      this.type = t0;
    },
    SelectionEdgeUpdateEvent: function SelectionEdgeUpdateEvent(t0, t1) {
      this.globalPosition = t0;
      this.type = t1;
    },
    SelectionExtendDirection: function SelectionExtendDirection(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    SelectionStatus: function SelectionStatus(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    SelectionGeometry: function SelectionGeometry(t0, t1, t2, t3) {
      var _ = this;
      _.startSelectionPoint = t0;
      _.endSelectionPoint = t1;
      _.status = t2;
      _.hasContent = t3;
    },
    SelectionPoint: function SelectionPoint(t0, t1, t2) {
      this.localPosition = t0;
      this.lineHeight = t1;
      this.handleType = t2;
    },
    TextSelectionHandleType: function TextSelectionHandleType(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    RenderShiftedBox: function RenderShiftedBox() {
    },
    RenderShiftedBox_hitTestChildren_closure: function RenderShiftedBox_hitTestChildren_closure(t0) {
      this.child = t0;
    },
    RenderPadding: function RenderPadding(t0, t1, t2, t3) {
      var _ = this;
      _._resolvedPadding = null;
      _._padding = t0;
      _._shifted_box$_textDirection = t1;
      _.RenderObjectWithChildMixin__child = t2;
      _.parentData = _._cachedBaselines = _._size = _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t3;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderAligningShiftedBox: function RenderAligningShiftedBox() {
    },
    RenderPositionedBox: function RenderPositionedBox(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._widthFactor = t0;
      _._heightFactor = t1;
      _._shifted_box$_resolvedAlignment = null;
      _._shifted_box$_alignment = t2;
      _._shifted_box$_textDirection = t3;
      _.RenderObjectWithChildMixin__child = t4;
      _.parentData = _._cachedBaselines = _._size = _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t5;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    SingleChildLayoutDelegate: function SingleChildLayoutDelegate() {
    },
    RenderCustomSingleChildLayoutBox: function RenderCustomSingleChildLayoutBox(t0, t1, t2) {
      var _ = this;
      _._shifted_box$_delegate = t0;
      _.RenderObjectWithChildMixin__child = t1;
      _.parentData = _._cachedBaselines = _._size = _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t2;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderBaseline: function RenderBaseline(t0, t1, t2, t3) {
      var _ = this;
      _._baseline = t0;
      _._baselineType = t1;
      _.RenderObjectWithChildMixin__child = t2;
      _.parentData = _._cachedBaselines = _._size = _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t3;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    _RenderShiftedBox_RenderBox_RenderObjectWithChildMixin: function _RenderShiftedBox_RenderBox_RenderObjectWithChildMixin() {
    },
    applyGrowthDirectionToAxisDirection(axisDirection, growthDirection) {
      switch (growthDirection.index) {
        case 0:
          return axisDirection;
        case 1:
          return A.flipAxisDirection(axisDirection);
      }
    },
    GrowthDirection: function GrowthDirection(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    RenderStack_layoutPositionedChild(child, childParentData, size, alignment) {
      var t2, childConstraints, x, hasVisualOverflow, y,
        t1 = childParentData.left;
      if (t1 != null && childParentData.right != null) {
        t2 = childParentData.right;
        t2.toString;
        childConstraints = B.BoxConstraints_0Yu.tighten$1$width(size._dx - t2 - t1);
      } else {
        t1 = childParentData.width;
        childConstraints = t1 != null ? B.BoxConstraints_0Yu.tighten$1$width(t1) : B.BoxConstraints_0Yu;
      }
      t1 = childParentData.top;
      if (t1 != null && childParentData.bottom != null) {
        t2 = childParentData.bottom;
        t2.toString;
        childConstraints = childConstraints.tighten$1$height(size._dy - t2 - t1);
      }
      child.layout$2$parentUsesSize(childConstraints, true);
      x = childParentData.left;
      if (!(x != null)) {
        t1 = childParentData.right;
        t2 = child._size;
        if (t1 != null)
          x = size._dx - t1 - t2._dx;
        else {
          t2.toString;
          x = alignment.alongOffset$1(type$.Offset._as(size.$sub(0, t2)))._dx;
        }
      }
      hasVisualOverflow = x < 0 || x + child._size._dx > size._dx;
      y = childParentData.top;
      if (!(y != null)) {
        t1 = childParentData.bottom;
        t2 = child._size;
        if (t1 != null)
          y = size._dy - t1 - t2._dy;
        else {
          t2.toString;
          y = alignment.alongOffset$1(type$.Offset._as(size.$sub(0, t2)))._dy;
        }
      }
      if (y < 0 || y + child._size._dy > size._dy)
        hasVisualOverflow = true;
      childParentData.offset = new A.Offset(x, y);
      return hasVisualOverflow;
    },
    RelativeRect: function RelativeRect(t0, t1, t2, t3) {
      var _ = this;
      _.left = t0;
      _.top = t1;
      _.right = t2;
      _.bottom = t3;
    },
    StackParentData: function StackParentData(t0, t1, t2) {
      var _ = this;
      _.height = _.width = _.left = _.bottom = _.right = _.top = null;
      _.ContainerParentDataMixin_previousSibling = t0;
      _.ContainerParentDataMixin_nextSibling = t1;
      _.offset = t2;
    },
    StackFit: function StackFit(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    RenderStack: function RenderStack(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _._hasVisualOverflow = false;
      _._resolvedAlignment = null;
      _._stack$_alignment = t0;
      _._stack$_textDirection = t1;
      _._fit = t2;
      _._stack$_clipBehavior = t3;
      _._stack$_clipRectLayer = t4;
      _.ContainerRenderObjectMixin__childCount = t5;
      _.ContainerRenderObjectMixin__firstChild = t6;
      _.ContainerRenderObjectMixin__lastChild = t7;
      _.parentData = _._cachedBaselines = _._size = _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t8;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    _RenderStack_RenderBox_ContainerRenderObjectMixin: function _RenderStack_RenderBox_ContainerRenderObjectMixin() {
    },
    _RenderStack_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin: function _RenderStack_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin() {
    },
    ViewConfiguration: function ViewConfiguration(t0, t1) {
      this.size = t0;
      this.devicePixelRatio = t1;
    },
    RenderView: function RenderView(t0, t1, t2, t3, t4) {
      var _ = this;
      _._view$_size = t0;
      _._view$_configuration = t1;
      _._window = t2;
      _._rootTransform = null;
      _.RenderObjectWithChildMixin__child = t3;
      _.parentData = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t4;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    _RenderView_RenderObject_RenderObjectWithChildMixin: function _RenderView_RenderObject_RenderObjectWithChildMixin() {
    },
    RenderAbstractViewport_maybeOf(object) {
      var t1;
      for (t1 = type$.nullable_RenderObject; object != null;) {
        if (object instanceof A.RenderListWheelViewport)
          return object;
        object = t1._as(object._node$_parent);
      }
      return null;
    },
    RevealedOffset: function RevealedOffset(t0, t1) {
      this.offset = t0;
      this.rect = t1;
    },
    ScrollDirection: function ScrollDirection(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    ViewportOffset: function ViewportOffset() {
    },
    SchedulerBinding__taskSorter(e1, e2) {
      return e1.get$priority().compareTo$1(0, e2.get$priority()).$negate(0);
    },
    defaultSchedulingStrategy(priority, scheduler) {
      if (scheduler.SchedulerBinding__transientCallbacks.__js_helper$_length > 0)
        return priority.$ge(0, 100000);
      return true;
    },
    _FrameCallbackEntry: function _FrameCallbackEntry(t0) {
      this.callback = t0;
    },
    SchedulerPhase: function SchedulerPhase(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    PerformanceModeRequestHandle: function PerformanceModeRequestHandle(t0) {
      this._cleanup = t0;
    },
    SchedulerBinding: function SchedulerBinding() {
    },
    SchedulerBinding_handleEventLoopCallback_closure: function SchedulerBinding_handleEventLoopCallback_closure(t0) {
      this.callbackStack = t0;
    },
    SchedulerBinding_endOfFrame_closure: function SchedulerBinding_endOfFrame_closure(t0) {
      this.$this = t0;
    },
    SchedulerBinding_scheduleWarmUpFrame_closure: function SchedulerBinding_scheduleWarmUpFrame_closure(t0) {
      this.$this = t0;
    },
    SchedulerBinding_scheduleWarmUpFrame_closure0: function SchedulerBinding_scheduleWarmUpFrame_closure0(t0, t1) {
      this.$this = t0;
      this.hadScheduledFrame = t1;
    },
    SchedulerBinding_scheduleWarmUpFrame_closure1: function SchedulerBinding_scheduleWarmUpFrame_closure1(t0) {
      this.$this = t0;
    },
    SchedulerBinding__handleDrawFrame_closure: function SchedulerBinding__handleDrawFrame_closure(t0) {
      this.$this = t0;
    },
    SchedulerBinding_handleBeginFrame_closure: function SchedulerBinding_handleBeginFrame_closure(t0) {
      this.$this = t0;
    },
    TickerFuture$complete() {
      var t1 = new A.TickerFuture(new A._AsyncCompleter(new A._Future($.Zone__current, type$._Future_void), type$._AsyncCompleter_void));
      t1._complete$0();
      return t1;
    },
    Ticker: function Ticker(t0) {
      var _ = this;
      _._ticker$_future = null;
      _._muted = false;
      _._startTime = null;
      _._onTick = t0;
      _._animationId = null;
    },
    TickerFuture: function TickerFuture(t0) {
      this._primaryCompleter = t0;
      this._completed = this._secondaryCompleter = null;
    },
    TickerFuture_whenCompleteOrCancel_thunk: function TickerFuture_whenCompleteOrCancel_thunk(t0) {
      this.callback = t0;
    },
    TickerCanceled: function TickerCanceled(t0) {
      this.ticker = t0;
    },
    SemanticsBinding: function SemanticsBinding() {
    },
    SemanticsNode$(key, showOnScreen) {
      var t1 = $.$get$SemanticsNode__kEmptyConfig(),
        t2 = t1._isMergingSemanticsOfDescendants,
        t3 = t1._customSemanticsActions,
        t4 = t1._actionsAsBits,
        t5 = t1._flags,
        t6 = t1._semantics$_attributedLabel,
        t7 = t1._semantics$_attributedValue,
        t8 = t1._semantics$_attributedIncreasedValue,
        t9 = t1._semantics$_attributedDecreasedValue,
        t10 = t1._semantics$_attributedHint,
        t11 = t1._tooltip,
        t12 = t1._semantics$_elevation,
        t13 = t1._semantics$_thickness,
        t14 = t1._semantics$_textDirection,
        t15 = ($.SemanticsNode__lastIdentifier + 1) % 65535;
      $.SemanticsNode__lastIdentifier = t15;
      return new A.SemanticsNode(key, t15, showOnScreen, B.Rect_0_0_0_0, t2, t1._actions, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14);
    },
    SemanticsConfiguration$() {
      return new A.SemanticsConfiguration(A.LinkedHashMap_LinkedHashMap$_empty(type$.SemanticsAction, type$.void_Function_nullable_Object), A.LinkedHashMap_LinkedHashMap$_empty(type$.CustomSemanticsAction, type$.void_Function), new A.AttributedString("", B.List_empty0), new A.AttributedString("", B.List_empty0), new A.AttributedString("", B.List_empty0), new A.AttributedString("", B.List_empty0), new A.AttributedString("", B.List_empty0));
    },
    _concatAttributedString(otherAttributedString, otherTextDirection, thisAttributedString, thisTextDirection) {
      if (otherAttributedString.string.length === 0)
        return thisAttributedString;
      if (thisTextDirection != otherTextDirection && otherTextDirection != null)
        switch (otherTextDirection.index) {
          case 0:
            otherAttributedString = new A.AttributedString("\u202b", B.List_empty0).$add(0, otherAttributedString).$add(0, new A.AttributedString("\u202c", B.List_empty0));
            break;
          case 1:
            otherAttributedString = new A.AttributedString("\u202a", B.List_empty0).$add(0, otherAttributedString).$add(0, new A.AttributedString("\u202c", B.List_empty0));
            break;
        }
      if (thisAttributedString.string.length === 0)
        return otherAttributedString;
      return thisAttributedString.$add(0, new A.AttributedString("\n", B.List_empty0)).$add(0, otherAttributedString);
    },
    SemanticsTag: function SemanticsTag(t0) {
      this.name = t0;
    },
    AttributedString: function AttributedString(t0, t1) {
      this.string = t0;
      this.attributes = t1;
    },
    _SemanticsDiagnosticableNode: function _SemanticsDiagnosticableNode() {
    },
    SemanticsProperties: function SemanticsProperties(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, t31, t32, t33, t34, t35, t36, t37, t38, t39, t40, t41, t42, t43, t44, t45, t46, t47, t48, t49, t50, t51, t52, t53, t54, t55, t56, t57) {
      var _ = this;
      _.enabled = t0;
      _.checked = t1;
      _.mixed = t2;
      _.toggled = t3;
      _.selected = t4;
      _.button = t5;
      _.link = t6;
      _.header = t7;
      _.textField = t8;
      _.slider = t9;
      _.keyboardKey = t10;
      _.readOnly = t11;
      _.focusable = t12;
      _.focused = t13;
      _.inMutuallyExclusiveGroup = t14;
      _.hidden = t15;
      _.obscured = t16;
      _.multiline = t17;
      _.scopesRoute = t18;
      _.namesRoute = t19;
      _.image = t20;
      _.liveRegion = t21;
      _.maxValueLength = t22;
      _.currentValueLength = t23;
      _.label = t24;
      _.attributedLabel = t25;
      _.value = t26;
      _.attributedValue = t27;
      _.increasedValue = t28;
      _.attributedIncreasedValue = t29;
      _.decreasedValue = t30;
      _.attributedDecreasedValue = t31;
      _.hint = t32;
      _.attributedHint = t33;
      _.tooltip = t34;
      _.hintOverrides = t35;
      _.textDirection = t36;
      _.sortKey = t37;
      _.tagForChildren = t38;
      _.onTap = t39;
      _.onLongPress = t40;
      _.onScrollLeft = t41;
      _.onScrollRight = t42;
      _.onScrollUp = t43;
      _.onScrollDown = t44;
      _.onIncrease = t45;
      _.onDecrease = t46;
      _.onCopy = t47;
      _.onCut = t48;
      _.onPaste = t49;
      _.onMoveCursorForwardByCharacter = t50;
      _.onMoveCursorBackwardByCharacter = t51;
      _.onSetSelection = t52;
      _.onSetText = t53;
      _.onDidGainAccessibilityFocus = t54;
      _.onDidLoseAccessibilityFocus = t55;
      _.onDismiss = t56;
      _.customSemanticsActions = t57;
    },
    SemanticsNode: function SemanticsNode(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17) {
      var _ = this;
      _.key = t0;
      _._id = t1;
      _._showOnScreen = t2;
      _._semantics$_transform = null;
      _._semantics$_rect = t3;
      _.indexInParent = _.elevationAdjustment = _.parentPaintClipRect = _.parentSemanticsClipRect = null;
      _._isMergedIntoParent = false;
      _._mergeAllDescendantsIntoThisNode = t4;
      _._semantics$_children = null;
      _._semantics$_dirty = _._dead = false;
      _._actions = t5;
      _._customSemanticsActions = t6;
      _._actionsAsBits = t7;
      _.tags = null;
      _._flags = t8;
      _._semantics$_attributedLabel = t9;
      _._semantics$_attributedValue = t10;
      _._semantics$_attributedIncreasedValue = t11;
      _._semantics$_attributedDecreasedValue = t12;
      _._semantics$_attributedHint = t13;
      _._tooltip = t14;
      _._semantics$_elevation = t15;
      _._semantics$_thickness = t16;
      _._hintOverrides = null;
      _._semantics$_textDirection = t17;
      _._currentValueLength = _._maxValueLength = _._platformViewId = _._scrollExtentMin = _._scrollExtentMax = _._scrollPosition = _._scrollIndex = _._scrollChildCount = _._textSelection = _._sortKey = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    SemanticsOwner: function SemanticsOwner(t0, t1, t2, t3, t4) {
      var _ = this;
      _.onSemanticsUpdate = t0;
      _._semantics$_dirtyNodes = t1;
      _._nodes = t2;
      _._detachedNodes = t3;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t4;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
    },
    SemanticsOwner_sendSemanticsUpdate_closure: function SemanticsOwner_sendSemanticsUpdate_closure(t0) {
      this.$this = t0;
    },
    SemanticsOwner_sendSemanticsUpdate_closure0: function SemanticsOwner_sendSemanticsUpdate_closure0() {
    },
    SemanticsOwner_sendSemanticsUpdate_closure1: function SemanticsOwner_sendSemanticsUpdate_closure1() {
    },
    SemanticsConfiguration: function SemanticsConfiguration(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._hasBeenAnnotated = _.isBlockingSemanticsOfPreviouslyPaintedNodes = _.explicitChildNodes = _._isSemanticBoundary = false;
      _._actions = t0;
      _._actionsAsBits = 0;
      _._currentValueLength = _._maxValueLength = _._platformViewId = _._scrollIndex = _._scrollChildCount = _._indexInParent = _._sortKey = _._childConfigurationsDelegate = null;
      _._isMergingSemanticsOfDescendants = false;
      _._customSemanticsActions = t1;
      _._semantics$_attributedLabel = t2;
      _._semantics$_attributedValue = t3;
      _._semantics$_attributedIncreasedValue = t4;
      _._semantics$_attributedDecreasedValue = t5;
      _._semantics$_attributedHint = t6;
      _._tooltip = "";
      _._hintOverrides = null;
      _._semantics$_thickness = _._semantics$_elevation = 0;
      _._tagsForChildren = _._scrollExtentMin = _._scrollExtentMax = _._scrollPosition = _._textSelection = _._semantics$_textDirection = null;
      _._flags = 0;
    },
    SemanticsConfiguration__addArgumentlessAction_closure: function SemanticsConfiguration__addArgumentlessAction_closure(t0) {
      this.handler = t0;
    },
    SemanticsConfiguration_onMoveCursorForwardByCharacter_closure: function SemanticsConfiguration_onMoveCursorForwardByCharacter_closure(t0) {
      this.value = t0;
    },
    SemanticsConfiguration_onMoveCursorBackwardByCharacter_closure: function SemanticsConfiguration_onMoveCursorBackwardByCharacter_closure(t0) {
      this.value = t0;
    },
    SemanticsConfiguration_onMoveCursorForwardByWord_closure: function SemanticsConfiguration_onMoveCursorForwardByWord_closure(t0) {
      this.value = t0;
    },
    SemanticsConfiguration_onMoveCursorBackwardByWord_closure: function SemanticsConfiguration_onMoveCursorBackwardByWord_closure(t0) {
      this.value = t0;
    },
    SemanticsConfiguration_onSetSelection_closure: function SemanticsConfiguration_onSetSelection_closure(t0) {
      this.value = t0;
    },
    SemanticsConfiguration_onSetText_closure: function SemanticsConfiguration_onSetText_closure(t0) {
      this.value = t0;
    },
    DebugSemanticsDumpOrder: function DebugSemanticsDumpOrder(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    SemanticsSortKey: function SemanticsSortKey() {
    },
    OrdinalSortKey: function OrdinalSortKey(t0, t1) {
      this.order = t0;
      this.name = t1;
    },
    _SemanticsNode_AbstractNode_DiagnosticableTreeMixin: function _SemanticsNode_AbstractNode_DiagnosticableTreeMixin() {
    },
    _SemanticsSortKey_Object_Diagnosticable: function _SemanticsSortKey_Object_Diagnosticable() {
    },
    SemanticsEvent: function SemanticsEvent() {
    },
    TooltipSemanticsEvent: function TooltipSemanticsEvent(t0, t1) {
      this.message = t0;
      this.type = t1;
    },
    LongPressSemanticsEvent: function LongPressSemanticsEvent(t0) {
      this.type = t0;
    },
    TapSemanticEvent: function TapSemanticEvent(t0) {
      this.type = t0;
    },
    AssetBundle__utf8decode(data) {
      return B.C_Utf8Codec.decode$1(J.asUint8List$0$x(B.NativeByteData_methods.get$buffer(data)));
    },
    _errorSummaryWithKey(key) {
      return A.ErrorSummary$('Unable to load asset: "' + key + '".');
    },
    AssetBundle: function AssetBundle() {
    },
    CachingAssetBundle: function CachingAssetBundle() {
    },
    PlatformAssetBundle: function PlatformAssetBundle(t0, t1, t2) {
      this._stringCache = t0;
      this._structuredDataCache = t1;
      this._structuredBinaryDataCache = t2;
    },
    PlatformAssetBundle_load_closure: function PlatformAssetBundle_load_closure(t0) {
      this.key = t0;
    },
    BinaryMessenger: function BinaryMessenger() {
    },
    ServicesBinding__parseLicenses(rawLicenses) {
      var _i, license, split,
        t1 = B.JSString_methods.$mul("-", 80),
        result = A._setArrayType([], type$.JSArray_LicenseEntry),
        licenses = rawLicenses.split("\n" + t1 + "\n");
      for (t1 = licenses.length, _i = 0; _i < t1; ++_i) {
        license = licenses[_i];
        split = B.JSString_methods.indexOf$1(license, "\n\n");
        if (split >= 0) {
          B.JSString_methods.substring$2(license, 0, split).split("\n");
          B.JSString_methods.substring$1(license, split + 2);
          result.push(new A.LicenseEntryWithLineBreaks());
        } else
          result.push(new A.LicenseEntryWithLineBreaks());
      }
      return result;
    },
    ServicesBinding__parseAppLifecycleMessage(message) {
      switch (message) {
        case "AppLifecycleState.paused":
          return B.AppLifecycleState_2;
        case "AppLifecycleState.resumed":
          return B.AppLifecycleState_0;
        case "AppLifecycleState.inactive":
          return B.AppLifecycleState_1;
        case "AppLifecycleState.detached":
          return B.AppLifecycleState_3;
      }
      return null;
    },
    ServicesBinding: function ServicesBinding() {
    },
    ServicesBinding__addLicenses_closure: function ServicesBinding__addLicenses_closure(t0) {
      this.controller = t0;
    },
    _DefaultBinaryMessenger: function _DefaultBinaryMessenger() {
    },
    _DefaultBinaryMessenger_send_closure: function _DefaultBinaryMessenger_send_closure(t0) {
      this.completer = t0;
    },
    _DefaultBinaryMessenger_setMessageHandler_closure: function _DefaultBinaryMessenger_setMessageHandler_closure(t0) {
      this.handler = t0;
    },
    KeyboardLockMode: function KeyboardLockMode(t0, t1, t2) {
      this.logicalKey = t0;
      this.index = t1;
      this._name = t2;
    },
    KeyEvent: function KeyEvent() {
    },
    KeyDownEvent: function KeyDownEvent(t0, t1, t2, t3, t4) {
      var _ = this;
      _.physicalKey = t0;
      _.logicalKey = t1;
      _.character = t2;
      _.timeStamp = t3;
      _.synthesized = t4;
    },
    KeyUpEvent: function KeyUpEvent(t0, t1, t2, t3, t4) {
      var _ = this;
      _.physicalKey = t0;
      _.logicalKey = t1;
      _.character = t2;
      _.timeStamp = t3;
      _.synthesized = t4;
    },
    KeyRepeatEvent: function KeyRepeatEvent(t0, t1, t2, t3, t4) {
      var _ = this;
      _.physicalKey = t0;
      _.logicalKey = t1;
      _.character = t2;
      _.timeStamp = t3;
      _.synthesized = t4;
    },
    HardwareKeyboard: function HardwareKeyboard(t0, t1, t2) {
      var _ = this;
      _._pressedKeys = t0;
      _._lockModes = t1;
      _._handlers = t2;
      _._modifiedHandlers = null;
    },
    KeyDataTransitMode: function KeyDataTransitMode(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    KeyMessage: function KeyMessage(t0, t1) {
      this.events = t0;
      this.rawEvent = t1;
    },
    KeyEventManager: function KeyEventManager(t0, t1, t2, t3) {
      var _ = this;
      _.keyMessageHandler = null;
      _._hardwareKeyboard = t0;
      _._rawKeyboard = t1;
      _._transitMode = null;
      _._keyEventsSinceLastMessage = t2;
      _._skippedRawKeysPressed = t3;
    },
    _KeyEvent_Object_Diagnosticable: function _KeyEvent_Object_Diagnosticable() {
    },
    KeyboardKey: function KeyboardKey() {
    },
    LogicalKeyboardKey: function LogicalKeyboardKey(t0) {
      this.keyId = t0;
    },
    PhysicalKeyboardKey: function PhysicalKeyboardKey(t0) {
      this.usbHidUsage = t0;
    },
    _KeyboardKey_Object_Diagnosticable: function _KeyboardKey_Object_Diagnosticable() {
    },
    PlatformException$(code, details, message, stacktrace) {
      return new A.PlatformException(code, message, details, stacktrace);
    },
    MissingPluginException$(message) {
      return new A.MissingPluginException(message);
    },
    MethodCall: function MethodCall(t0, t1) {
      this.method = t0;
      this.$arguments = t1;
    },
    PlatformException: function PlatformException(t0, t1, t2, t3) {
      var _ = this;
      _.code = t0;
      _.message = t1;
      _.details = t2;
      _.stacktrace = t3;
    },
    MissingPluginException: function MissingPluginException(t0) {
      this.message = t0;
    },
    StringCodec: function StringCodec() {
    },
    JSONMessageCodec: function JSONMessageCodec() {
    },
    JSONMethodCodec: function JSONMethodCodec() {
    },
    StandardMessageCodec: function StandardMessageCodec() {
    },
    StandardMessageCodec_writeValue_closure: function StandardMessageCodec_writeValue_closure(t0, t1) {
      this.$this = t0;
      this.buffer = t1;
    },
    StandardMethodCodec: function StandardMethodCodec() {
    },
    _DeferringMouseCursor_firstNonDeferred(cursors) {
      var t1, t2, t3;
      for (t1 = A._instanceType(cursors), t2 = new A.MappedIterator(J.get$iterator$ax(cursors.__internal$_iterable), cursors._f, t1._eval$1("MappedIterator<1,2>")), t1 = t1._rest[1]; t2.moveNext$0();) {
        t3 = t2.__internal$_current;
        if (t3 == null)
          t3 = t1._as(t3);
        if (!t3.$eq(0, B.C__DeferringMouseCursor))
          return t3;
      }
      return null;
    },
    MouseCursorManager: function MouseCursorManager(t0, t1) {
      this.fallbackMouseCursor = t0;
      this._lastSession = t1;
    },
    MouseCursorSession: function MouseCursorSession() {
    },
    MouseCursor: function MouseCursor() {
    },
    _DeferringMouseCursor: function _DeferringMouseCursor() {
    },
    _SystemMouseCursorSession: function _SystemMouseCursorSession(t0, t1) {
      this.cursor = t0;
      this.device = t1;
    },
    SystemMouseCursor: function SystemMouseCursor(t0) {
      this.kind = t0;
    },
    _MouseCursor_Object_Diagnosticable: function _MouseCursor_Object_Diagnosticable() {
    },
    BasicMessageChannel: function BasicMessageChannel(t0, t1, t2) {
      this.name = t0;
      this.codec = t1;
      this.$ti = t2;
    },
    BasicMessageChannel_setMessageHandler_closure: function BasicMessageChannel_setMessageHandler_closure(t0, t1) {
      this.$this = t0;
      this.handler = t1;
    },
    MethodChannel: function MethodChannel(t0, t1) {
      this.name = t0;
      this.codec = t1;
    },
    MethodChannel_setMethodCallHandler_closure: function MethodChannel_setMethodCallHandler_closure(t0, t1) {
      this.$this = t0;
      this.handler = t1;
    },
    OptionalMethodChannel: function OptionalMethodChannel(t0, t1) {
      this.name = t0;
      this.codec = t1;
    },
    RawKeyEvent_RawKeyEvent$fromMessage(message) {
      var data, t2, t3, repeat, t1 = {};
      t1.character = null;
      data = new A.RawKeyEvent_RawKeyEvent$fromMessage_dataFromWeb(t1, message).call$0();
      t2 = $.$get$RawKeyboard_instance()._keysPressed;
      t3 = A._instanceType(t2)._eval$1("LinkedHashMapKeysIterable<1>");
      repeat = A.LinkedHashSet_LinkedHashSet$of(new A.LinkedHashMapKeysIterable(t2, t3), t3._eval$1("Iterable.E")).contains$1(0, data.get$physicalKey());
      t3 = message.$index(0, "type");
      t3.toString;
      A._asString(t3);
      switch (t3) {
        case "keydown":
          return new A.RawKeyDownEvent(t1.character, repeat, data);
        case "keyup":
          return new A.RawKeyUpEvent(null, false, data);
        default:
          throw A.wrapException(A.FlutterError_FlutterError("Unknown key event type: " + t3));
      }
    },
    KeyboardSide: function KeyboardSide(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    ModifierKey: function ModifierKey(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    RawKeyEventData: function RawKeyEventData() {
    },
    RawKeyEvent: function RawKeyEvent() {
    },
    RawKeyEvent_RawKeyEvent$fromMessage_dataFromWeb: function RawKeyEvent_RawKeyEvent$fromMessage_dataFromWeb(t0, t1) {
      this._box_0 = t0;
      this.message = t1;
    },
    RawKeyDownEvent: function RawKeyDownEvent(t0, t1, t2) {
      this.character = t0;
      this.repeat = t1;
      this.data = t2;
    },
    RawKeyUpEvent: function RawKeyUpEvent(t0, t1, t2) {
      this.character = t0;
      this.repeat = t1;
      this.data = t2;
    },
    RawKeyboard: function RawKeyboard(t0, t1) {
      this._raw_keyboard$_listeners = t0;
      this._keysPressed = t1;
    },
    _ModifierSidePair: function _ModifierSidePair(t0, t1) {
      this.modifier = t0;
      this.side = t1;
    },
    _RawKeyEvent_Object_Diagnosticable: function _RawKeyEvent_Object_Diagnosticable() {
    },
    _RawKeyEventData_Object_Diagnosticable: function _RawKeyEventData_Object_Diagnosticable() {
    },
    RawKeyEventDataWeb: function RawKeyEventDataWeb(t0, t1, t2, t3, t4) {
      var _ = this;
      _.code = t0;
      _.key = t1;
      _.location = t2;
      _.metaState = t3;
      _.keyCode = t4;
    },
    RestorationManager: function RestorationManager(t0, t1) {
      var _ = this;
      _._pendingRootBucket = _._rootBucket = null;
      _._serializationScheduled = _._isReplacing = _._rootBucketIsValid = false;
      _._bucketsNeedingSerialization = t0;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t1;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
    },
    RestorationManager_handleRestorationUpdateFromEngine_closure: function RestorationManager_handleRestorationUpdateFromEngine_closure(t0) {
      this.$this = t0;
    },
    RestorationManager_scheduleSerializationFor_closure: function RestorationManager_scheduleSerializationFor_closure(t0) {
      this.$this = t0;
    },
    RestorationBucket: function RestorationBucket(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._rawData = t0;
      _._manager = t1;
      _._restoration$_parent = t2;
      _._restorationId = t3;
      _._claimedChildren = t4;
      _._childrenToAdd = t5;
      _._needsSerialization = false;
    },
    RestorationBucket__rawChildren_closure: function RestorationBucket__rawChildren_closure() {
    },
    RestorationBucket__rawValues_closure: function RestorationBucket__rawValues_closure() {
    },
    RestorationBucket__addChildData_closure: function RestorationBucket__addChildData_closure() {
    },
    RestorationBucket__visitChildren_closure: function RestorationBucket__visitChildren_closure() {
    },
    SystemChrome_setApplicationSwitcherDescription(description) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void);
      var $async$SystemChrome_setApplicationSwitcherDescription = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 2;
              return A._asyncAwait(B.OptionalMethodChannel_ZFR.invokeMethod$1$2("SystemChrome.setApplicationSwitcherDescription", A.LinkedHashMap_LinkedHashMap$_literal(["label", description.label, "primaryColor", description.primaryColor], type$.String, type$.dynamic), type$.void), $async$SystemChrome_setApplicationSwitcherDescription);
            case 2:
              // returning from await.
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$SystemChrome_setApplicationSwitcherDescription, $async$completer);
    },
    SystemChrome_setSystemUIOverlayStyle(style) {
      if ($.SystemChrome__pendingStyle != null) {
        $.SystemChrome__pendingStyle = style;
        return;
      }
      if (style.$eq(0, $.SystemChrome__latestStyle))
        return;
      $.SystemChrome__pendingStyle = style;
      A.scheduleMicrotask(new A.SystemChrome_setSystemUIOverlayStyle_closure());
    },
    ApplicationSwitcherDescription: function ApplicationSwitcherDescription(t0, t1) {
      this.label = t0;
      this.primaryColor = t1;
    },
    SystemUiOverlayStyle: function SystemUiOverlayStyle(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.systemNavigationBarColor = t0;
      _.systemNavigationBarDividerColor = t1;
      _.systemNavigationBarIconBrightness = t2;
      _.systemNavigationBarContrastEnforced = t3;
      _.statusBarColor = t4;
      _.statusBarBrightness = t5;
      _.statusBarIconBrightness = t6;
      _.systemStatusBarContrastEnforced = t7;
    },
    SystemChrome_setSystemUIOverlayStyle_closure: function SystemChrome_setSystemUIOverlayStyle_closure() {
    },
    SystemSound_play(type) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void);
      var $async$SystemSound_play = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 2;
              return A._asyncAwait(B.OptionalMethodChannel_ZFR.invokeMethod$1$2("SystemSound.play", type._enumToString$0(), type$.void), $async$SystemSound_play);
            case 2:
              // returning from await.
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$SystemSound_play, $async$completer);
    },
    SystemSoundType: function SystemSoundType(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    TextBoundary: function TextBoundary() {
    },
    CharacterBoundary: function CharacterBoundary(t0) {
      this._text_boundary$_text = t0;
    },
    LineBoundary: function LineBoundary(t0) {
      this._textLayout = t0;
    },
    DocumentBoundary: function DocumentBoundary(t0) {
      this._text_boundary$_text = t0;
    },
    TextSelection$(affinity, baseOffset, extentOffset, isDirectional) {
      var t1 = baseOffset < extentOffset,
        t2 = t1 ? baseOffset : extentOffset;
      return new A.TextSelection(baseOffset, extentOffset, affinity, isDirectional, t2, t1 ? extentOffset : baseOffset);
    },
    TextSelection: function TextSelection(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.baseOffset = t0;
      _.extentOffset = t1;
      _.affinity = t2;
      _.isDirectional = t3;
      _.start = t4;
      _.end = t5;
    },
    SelectionChangedCause: function SelectionChangedCause(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    TextInput: function TextInput(t0, t1, t2) {
      var _ = this;
      _._currentControl = t0;
      _._inputControls = t1;
      _.__TextInput__channel_A = $;
      _._currentConnection = null;
      _.__TextInput__currentConfiguration_A = $;
      _._scribbleClients = t2;
    },
    TextInput__loudlyHandleTextInputInvocation_closure: function TextInput__loudlyHandleTextInputInvocation_closure(t0) {
      this.$call = t0;
    },
    TextInput__handleTextInputInvocation_closure: function TextInput__handleTextInputInvocation_closure() {
    },
    TextInput__handleTextInputInvocation_closure0: function TextInput__handleTextInputInvocation_closure0(t0, t1) {
      this.$this = t0;
      this.args = t1;
    },
    TextInput__handleTextInputInvocation_closure1: function TextInput__handleTextInputInvocation_closure1(t0) {
      this.$this = t0;
    },
    TextInputControl: function TextInputControl() {
    },
    _PlatformTextInputControl: function _PlatformTextInputControl() {
    },
    __PlatformTextInputControl_Object_TextInputControl: function __PlatformTextInputControl_Object_TextInputControl() {
    },
    _getParent(context) {
      var $parent = A._Cell$();
      context.visitAncestorElements$1(new A._getParent_closure($parent));
      return $parent._readLocal$0();
    },
    Actions$(actions, child) {
      return new A.Actions(actions, child, null);
    },
    Actions__visitActionsAncestors(context, visitor) {
      var t2, ancestor,
        t1 = type$._ActionsScope,
        actionsElement = context.getElementForInheritedWidgetOfExactType$1$0(t1);
      for (; t2 = actionsElement != null, t2; actionsElement = ancestor) {
        if (J.$eq$(visitor.call$1(actionsElement), true))
          break;
        t2 = A._getParent(actionsElement)._inheritedElements;
        ancestor = t2 == null ? null : t2.$index(0, A.createRuntimeType(t1));
      }
      return t2;
    },
    Actions__findDispatcher(context) {
      var t1 = {};
      t1.dispatcher = null;
      A.Actions__visitActionsAncestors(context, new A.Actions__findDispatcher_closure(t1));
      return B.C_ActionDispatcher;
    },
    Actions_maybeFind(context, intent, $T) {
      var t1 = {};
      t1.action = null;
      if ((intent == null ? null : A.getRuntimeTypeOfDartObject(intent)) == null)
        A.createRuntimeType($T);
      A.Actions__visitActionsAncestors(context, new A.Actions_maybeFind_closure(t1, intent, context, $T));
      return t1.action;
    },
    Actions__maybeFindWithoutDependingOn(context, $T) {
      var t1 = {};
      t1.action = null;
      A.createRuntimeType($T);
      A.Actions__visitActionsAncestors(context, new A.Actions__maybeFindWithoutDependingOn_closure(t1, null, $T));
      return t1.action;
    },
    Actions__castAction(actionsMarker, intent, $T) {
      var mappedAction,
        t1 = intent == null ? null : A.getRuntimeTypeOfDartObject(intent);
      if (t1 == null)
        t1 = A.createRuntimeType($T);
      mappedAction = actionsMarker.actions.$index(0, t1);
      if ($T._eval$1("Action<0>?")._is(mappedAction))
        return mappedAction;
      else
        return null;
    },
    Actions_maybeInvoke(context, intent, $T) {
      var t1 = {};
      t1.returnValue = null;
      A.Actions__visitActionsAncestors(context, new A.Actions_maybeInvoke_closure(t1, intent, context, $T));
      return t1.returnValue;
    },
    FocusableActionDetector$(actions, autofocus, child, enabled, focusNode, mouseCursor, onFocusChange, onShowFocusHighlight, onShowHoverHighlight, shortcuts) {
      return new A.FocusableActionDetector(enabled, focusNode, false, actions, shortcuts, onShowFocusHighlight, onShowHoverHighlight, onFocusChange, mouseCursor, child, null);
    },
    DoNothingAction$(consumesKey) {
      return new A.DoNothingAction(consumesKey, new A.ObserverList(A._setArrayType([], type$.JSArray_of_void_Function_Action_Intent), type$.ObserverList_of_void_Function_Action_Intent));
    },
    _getParent_closure: function _getParent_closure(t0) {
      this.parent = t0;
    },
    Intent: function Intent() {
    },
    Action: function Action() {
    },
    ContextAction: function ContextAction() {
    },
    CallbackAction: function CallbackAction(t0, t1, t2) {
      var _ = this;
      _.onInvoke = t0;
      _._actions$_listeners = t1;
      _._currentCallingAction = null;
      _.$ti = t2;
    },
    ActionDispatcher: function ActionDispatcher() {
    },
    Actions: function Actions(t0, t1, t2) {
      this.actions = t0;
      this.child = t1;
      this.key = t2;
    },
    Actions__findDispatcher_closure: function Actions__findDispatcher_closure(t0) {
      this._box_0 = t0;
    },
    Actions_maybeFind_closure: function Actions_maybeFind_closure(t0, t1, t2, t3) {
      var _ = this;
      _._box_0 = t0;
      _.intent = t1;
      _.context = t2;
      _.T = t3;
    },
    Actions__maybeFindWithoutDependingOn_closure: function Actions__maybeFindWithoutDependingOn_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.intent = t1;
      this.T = t2;
    },
    Actions_maybeInvoke_closure: function Actions_maybeInvoke_closure(t0, t1, t2, t3) {
      var _ = this;
      _._box_0 = t0;
      _.intent = t1;
      _.context = t2;
      _.T = t3;
    },
    _ActionsState: function _ActionsState(t0, t1) {
      var _ = this;
      _.listenedActions = t0;
      _.rebuildKey = t1;
      _._element = _._widget = null;
    },
    _ActionsState__handleActionChanged_closure: function _ActionsState__handleActionChanged_closure(t0) {
      this.$this = t0;
    },
    _ActionsScope: function _ActionsScope(t0, t1, t2, t3, t4) {
      var _ = this;
      _.dispatcher = t0;
      _.actions = t1;
      _.rebuildKey = t2;
      _.child = t3;
      _.key = t4;
    },
    FocusableActionDetector: function FocusableActionDetector(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _.enabled = t0;
      _.focusNode = t1;
      _.autofocus = t2;
      _.actions = t3;
      _.shortcuts = t4;
      _.onShowFocusHighlight = t5;
      _.onShowHoverHighlight = t6;
      _.onFocusChange = t7;
      _.mouseCursor = t8;
      _.child = t9;
      _.key = t10;
    },
    _FocusableActionDetectorState: function _FocusableActionDetectorState(t0) {
      var _ = this;
      _._actions$_focused = _._actions$_hovering = _._canShowHighlight = false;
      _._mouseRegionKey = t0;
      _._element = _._widget = null;
    },
    _FocusableActionDetectorState_initState_closure: function _FocusableActionDetectorState_initState_closure(t0) {
      this.$this = t0;
    },
    _FocusableActionDetectorState__updateHighlightMode_closure: function _FocusableActionDetectorState__updateHighlightMode_closure(t0) {
      this.$this = t0;
    },
    _FocusableActionDetectorState__handleMouseEnter_closure: function _FocusableActionDetectorState__handleMouseEnter_closure(t0) {
      this.$this = t0;
    },
    _FocusableActionDetectorState__handleMouseExit_closure: function _FocusableActionDetectorState__handleMouseExit_closure(t0) {
      this.$this = t0;
    },
    _FocusableActionDetectorState__handleFocusChange_closure: function _FocusableActionDetectorState__handleFocusChange_closure(t0, t1) {
      this.$this = t0;
      this.focused = t1;
    },
    _FocusableActionDetectorState__mayTriggerCallback_shouldShowHoverHighlight: function _FocusableActionDetectorState__mayTriggerCallback_shouldShowHoverHighlight(t0) {
      this.$this = t0;
    },
    _FocusableActionDetectorState__mayTriggerCallback_canRequestFocus: function _FocusableActionDetectorState__mayTriggerCallback_canRequestFocus(t0) {
      this.$this = t0;
    },
    _FocusableActionDetectorState__mayTriggerCallback_shouldShowFocusHighlight: function _FocusableActionDetectorState__mayTriggerCallback_shouldShowFocusHighlight(t0, t1) {
      this.$this = t0;
      this.canRequestFocus = t1;
    },
    _FocusableActionDetectorState_didUpdateWidget_closure: function _FocusableActionDetectorState_didUpdateWidget_closure(t0, t1) {
      this.$this = t0;
      this.oldWidget = t1;
    },
    VoidCallbackAction: function VoidCallbackAction(t0) {
      this._actions$_listeners = t0;
      this._currentCallingAction = null;
    },
    DoNothingAction: function DoNothingAction(t0, t1) {
      this._consumesKey = t0;
      this._actions$_listeners = t1;
      this._currentCallingAction = null;
    },
    ActivateIntent: function ActivateIntent() {
    },
    ButtonActivateIntent: function ButtonActivateIntent() {
    },
    DismissIntent: function DismissIntent() {
    },
    DismissAction: function DismissAction() {
    },
    PrioritizedIntents: function PrioritizedIntents() {
    },
    PrioritizedAction: function PrioritizedAction(t0) {
      var _ = this;
      _.__PrioritizedAction__selectedIntent_A = _.__PrioritizedAction__selectedAction_A = $;
      _._actions$_listeners = t0;
      _._currentCallingAction = null;
    },
    _OverridableActionMixin: function _OverridableActionMixin() {
    },
    _OverridableAction: function _OverridableAction(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.defaultAction = t0;
      _.lookupContext = t1;
      _._OverridableActionMixin_debugAssertMutuallyRecursive = t2;
      _._OverridableActionMixin_debugAssertIsActionEnabledMutuallyRecursive = t3;
      _._OverridableActionMixin_debugAssertIsEnabledMutuallyRecursive = t4;
      _._OverridableActionMixin_debugAssertConsumeKeyMutuallyRecursive = t5;
      _._actions$_listeners = t6;
      _._currentCallingAction = null;
      _.$ti = t7;
    },
    _Action_Object_Diagnosticable: function _Action_Object_Diagnosticable() {
    },
    _ActionDispatcher_Object_Diagnosticable: function _ActionDispatcher_Object_Diagnosticable() {
    },
    _Intent_Object_Diagnosticable: function _Intent_Object_Diagnosticable() {
    },
    __OverridableAction_ContextAction__OverridableActionMixin: function __OverridableAction_ContextAction__OverridableActionMixin() {
    },
    AnnotatedRegion: function AnnotatedRegion(t0, t1, t2, t3) {
      var _ = this;
      _.value = t0;
      _.child = t1;
      _.key = t2;
      _.$ti = t3;
    },
    basicLocaleListResolution(preferredLocales, supportedLocales) {
      var t1, t2, allSupportedLocales, languageAndCountryLocales, languageAndScriptLocales, languageLocales, countryLocales, _i, locale, matchesLanguageCode, matchesCountryCode, localeIndex, userLocale, match, resolvedLocale,
        _s10_ = "en_null_US",
        _s5_ = "en_US";
      if (preferredLocales == null || preferredLocales.length === 0)
        return B.JSArray_methods.get$first(supportedLocales);
      t1 = type$.String;
      t2 = type$.Locale;
      allSupportedLocales = A.HashMap_HashMap(t1, t2);
      languageAndCountryLocales = A.HashMap_HashMap(t1, t2);
      languageAndScriptLocales = A.HashMap_HashMap(t1, t2);
      languageLocales = A.HashMap_HashMap(t1, t2);
      countryLocales = A.HashMap_HashMap(type$.nullable_String, t2);
      for (_i = 0; _i < 1; ++_i) {
        locale = supportedLocales[_i];
        if (allSupportedLocales.$index(0, _s10_) == null)
          allSupportedLocales.$indexSet(0, _s10_, locale);
        if (languageAndScriptLocales.$index(0, "en_null") == null)
          languageAndScriptLocales.$indexSet(0, "en_null", locale);
        if (languageAndCountryLocales.$index(0, _s5_) == null)
          languageAndCountryLocales.$indexSet(0, _s5_, locale);
        if (languageLocales.$index(0, "en") == null)
          languageLocales.$indexSet(0, "en", locale);
        if (countryLocales.$index(0, "US") == null)
          countryLocales.$indexSet(0, "US", locale);
      }
      for (matchesLanguageCode = null, matchesCountryCode = null, localeIndex = 0; localeIndex < preferredLocales.length; ++localeIndex) {
        userLocale = preferredLocales[localeIndex];
        if (allSupportedLocales.containsKey$1(_s10_))
          return userLocale;
        match = languageAndCountryLocales.$index(0, _s5_);
        if (match != null)
          return match;
        if (matchesLanguageCode != null)
          return matchesLanguageCode;
        match = languageLocales.$index(0, "en");
        if (match != null) {
          if (localeIndex === 0) {
            t1 = preferredLocales.length;
            t1 = localeIndex + 1 >= t1;
          } else
            t1 = false;
          if (t1)
            return match;
          matchesLanguageCode = match;
        }
        if (matchesCountryCode == null) {
          match = countryLocales.$index(0, "US");
          if (match != null)
            matchesCountryCode = match;
        }
      }
      resolvedLocale = matchesLanguageCode == null ? matchesCountryCode : matchesLanguageCode;
      return resolvedLocale == null ? B.JSArray_methods.get$first(supportedLocales) : resolvedLocale;
    },
    WidgetsApp_defaultShortcuts() {
      return B.Map_D3MsM;
    },
    WidgetsApp: function WidgetsApp(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, t31) {
      var _ = this;
      _.navigatorKey = t0;
      _.onGenerateRoute = t1;
      _.onGenerateInitialRoutes = t2;
      _.pageRouteBuilder = t3;
      _.routeInformationParser = t4;
      _.routerDelegate = t5;
      _.backButtonDispatcher = t6;
      _.routeInformationProvider = t7;
      _.routerConfig = t8;
      _.home = t9;
      _.routes = t10;
      _.onUnknownRoute = t11;
      _.initialRoute = t12;
      _.navigatorObservers = t13;
      _.builder = t14;
      _.title = t15;
      _.onGenerateTitle = t16;
      _.textStyle = t17;
      _.color = t18;
      _.locale = t19;
      _.localizationsDelegates = t20;
      _.localeListResolutionCallback = t21;
      _.localeResolutionCallback = t22;
      _.supportedLocales = t23;
      _.showPerformanceOverlay = t24;
      _.checkerboardRasterCacheImages = t25;
      _.checkerboardOffscreenLayers = t26;
      _.showSemanticsDebugger = t27;
      _.shortcuts = t28;
      _.actions = t29;
      _.restorationScopeId = t30;
      _.key = t31;
    },
    _WidgetsAppState: function _WidgetsAppState() {
      var _ = this;
      _._element = _._widget = _._app$_locale = _._app$_navigator = _._defaultBackButtonDispatcher = _._defaultRouteInformationProvider = null;
    },
    _WidgetsAppState__onGenerateRoute_closure: function _WidgetsAppState__onGenerateRoute_closure(t0) {
      this.$this = t0;
    },
    _WidgetsAppState_build_closure: function _WidgetsAppState_build_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    __WidgetsAppState_State_WidgetsBindingObserver: function __WidgetsAppState_State_WidgetsBindingObserver() {
    },
    KeepAliveNotification: function KeepAliveNotification() {
    },
    KeepAliveHandle: function KeepAliveHandle(t0) {
      var _ = this;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t0;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
    },
    AutomaticKeepAliveClientMixin: function AutomaticKeepAliveClientMixin() {
    },
    _NullWidget: function _NullWidget(t0) {
      this.key = t0;
    },
    _UbiquitousInheritedElement__recurseChildren(element, visitor) {
      element.visitChildren$1(new A._UbiquitousInheritedElement__recurseChildren_closure(visitor));
      visitor.call$1(element);
    },
    Directionality$(child, textDirection) {
      return new A.Directionality(textDirection, child, null);
    },
    Directionality_maybeOf(context) {
      var widget = context.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality);
      return widget == null ? null : widget.textDirection;
    },
    CustomPaint$(child, foregroundPainter, key, painter, size) {
      return new A.CustomPaint(painter, foregroundPainter, size, child, key);
    },
    ClipRect$(child, clipBehavior) {
      return new A.ClipRect(clipBehavior, child, null);
    },
    ClipPath$(child, clipBehavior, clipper) {
      return new A.ClipPath(clipper, clipBehavior, child, null);
    },
    Transform$(alignment, child, transform, transformHitTests) {
      return new A.Transform(transform, alignment, transformHitTests, null, child, null);
    },
    Transform__computeRotation(radians) {
      var t1, sin, cos;
      if (radians === 0) {
        t1 = new A.Matrix4(new Float64Array(16));
        t1.setIdentity$0();
        return t1;
      }
      sin = Math.sin(radians);
      if (sin === 1)
        return A.Transform__createZRotation(1, 0);
      if (sin === -1)
        return A.Transform__createZRotation(-1, 0);
      cos = Math.cos(radians);
      if (cos === -1)
        return A.Transform__createZRotation(0, -1);
      return A.Transform__createZRotation(sin, cos);
    },
    Transform__createZRotation(sin, cos) {
      var t1 = new Float64Array(16);
      t1[0] = cos;
      t1[1] = sin;
      t1[4] = -sin;
      t1[5] = cos;
      t1[10] = 1;
      t1[15] = 1;
      return new A.Matrix4(t1);
    },
    Center$(child, heightFactor, widthFactor) {
      return new A.Center(B.Alignment_0_0, widthFactor, heightFactor, child, null);
    },
    LayoutId$(child, id) {
      return new A.LayoutId(id, child, new A.ValueKey(id, type$.ValueKey_Object));
    },
    SizedBox$(child, height, width) {
      return new A.SizedBox(width, height, child, null);
    },
    Stack$(alignment, children, fit) {
      return new A.Stack(alignment, fit, children, null);
    },
    Positioned$(bottom, child, height, key, left, right, $top, width) {
      return new A.Positioned(left, $top, right, bottom, width, height, child, key);
    },
    Positioned$fill(bottom, child) {
      return new A.Positioned(0, 0, 0, bottom, null, null, child, null);
    },
    Positioned_Positioned$directional(bottom, child, end, height, start, textDirection, $top, width) {
      var right, left;
      switch (textDirection.index) {
        case 0:
          right = start;
          left = end;
          break;
        case 1:
          right = end;
          left = start;
          break;
        default:
          left = null;
          right = null;
      }
      return A.Positioned$(bottom, child, height, null, left, right, $top, width);
    },
    Row$(children, crossAxisAlignment, mainAxisSize) {
      return new A.Row(B.Axis_0, B.MainAxisAlignment_0, mainAxisSize, crossAxisAlignment, null, B.VerticalDirection_1, null, children, null);
    },
    Column$(children, mainAxisAlignment) {
      return new A.Column(B.Axis_1, mainAxisAlignment, B.MainAxisSize_1, B.CrossAxisAlignment_2, null, B.VerticalDirection_1, null, children, null);
    },
    RichText$(locale, maxLines, overflow, selectionColor, selectionRegistrar, softWrap, strutStyle, text, textAlign, textDirection, textHeightBehavior, textScaleFactor, textWidthBasis) {
      return new A.RichText(text, textAlign, textDirection, softWrap, overflow, textScaleFactor, maxLines, locale, strutStyle, textWidthBasis, textHeightBehavior, selectionRegistrar, selectionColor, A.RichText__extractChildren(text), null);
    },
    RichText__extractChildren(span) {
      var result, t1 = {};
      t1.index = 0;
      result = A._setArrayType([], type$.JSArray_Widget);
      span.visitChildren$1(new A.RichText__extractChildren_closure(t1, result));
      return result;
    },
    Listener$(behavior, child, onPointerCancel, onPointerDown, onPointerPanZoomStart, onPointerSignal, onPointerUp) {
      return new A.Listener(onPointerDown, onPointerUp, onPointerCancel, onPointerPanZoomStart, onPointerSignal, behavior, child, null);
    },
    MouseRegion$(child, cursor, key, onEnter, onExit, onHover) {
      return new A.MouseRegion(onEnter, onHover, onExit, cursor, child, key);
    },
    Semantics$(button, checked, child, container, enabled, excludeSemantics, explicitChildNodes, focusable, focused, header, label, mixed, namesRoute, onDidGainAccessibilityFocus, onDismiss, onLongPress, onTap, onTapHint, scopesRoute, slider, sortKey, tagForChildren, textDirection, tooltip, value) {
      var _null = null;
      return new A.Semantics(new A.SemanticsProperties(enabled, checked, mixed, _null, _null, button, _null, header, _null, slider, _null, _null, focusable, focused, _null, _null, _null, _null, scopesRoute, namesRoute, _null, _null, _null, _null, label, _null, value, _null, _null, _null, _null, _null, _null, _null, tooltip, _null, textDirection, sortKey, tagForChildren, onTap, onLongPress, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, onDidGainAccessibilityFocus, _null, onDismiss, _null), container, explicitChildNodes, excludeSemantics, child, _null);
    },
    BlockSemantics$(child) {
      return new A.BlockSemantics(child, null);
    },
    _UbiquitousInheritedElement: function _UbiquitousInheritedElement(t0, t1, t2) {
      var _ = this;
      _._dependents = t0;
      _._slot = _._notificationTree = _._parent = _._framework$_child = null;
      _.__Element__depth_A = $;
      _._widget = t1;
      _._owner = null;
      _._lifecycleState = t2;
      _._dependencies = _._inheritedElements = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._inDirtyList = false;
    },
    _UbiquitousInheritedElement_notifyClients_closure: function _UbiquitousInheritedElement_notifyClients_closure(t0, t1) {
      this.$this = t0;
      this.oldWidget = t1;
    },
    _UbiquitousInheritedElement__recurseChildren_closure: function _UbiquitousInheritedElement__recurseChildren_closure(t0) {
      this.visitor = t0;
    },
    _UbiquitousInheritedWidget: function _UbiquitousInheritedWidget() {
    },
    Directionality: function Directionality(t0, t1, t2) {
      this.textDirection = t0;
      this.child = t1;
      this.key = t2;
    },
    CustomPaint: function CustomPaint(t0, t1, t2, t3, t4) {
      var _ = this;
      _.painter = t0;
      _.foregroundPainter = t1;
      _.size = t2;
      _.child = t3;
      _.key = t4;
    },
    ClipRect: function ClipRect(t0, t1, t2) {
      this.clipBehavior = t0;
      this.child = t1;
      this.key = t2;
    },
    ClipPath: function ClipPath(t0, t1, t2, t3) {
      var _ = this;
      _.clipper = t0;
      _.clipBehavior = t1;
      _.child = t2;
      _.key = t3;
    },
    PhysicalModel: function PhysicalModel(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.shape = t0;
      _.clipBehavior = t1;
      _.borderRadius = t2;
      _.elevation = t3;
      _.color = t4;
      _.shadowColor = t5;
      _.child = t6;
      _.key = t7;
    },
    PhysicalShape: function PhysicalShape(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.clipper = t0;
      _.clipBehavior = t1;
      _.elevation = t2;
      _.color = t3;
      _.shadowColor = t4;
      _.child = t5;
      _.key = t6;
    },
    Transform: function Transform(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.transform = t0;
      _.alignment = t1;
      _.transformHitTests = t2;
      _.filterQuality = t3;
      _.child = t4;
      _.key = t5;
    },
    CompositedTransformTarget: function CompositedTransformTarget(t0, t1, t2) {
      this.link = t0;
      this.child = t1;
      this.key = t2;
    },
    CompositedTransformFollower: function CompositedTransformFollower(t0, t1, t2) {
      this.link = t0;
      this.child = t1;
      this.key = t2;
    },
    FractionalTranslation: function FractionalTranslation(t0, t1, t2, t3) {
      var _ = this;
      _.translation = t0;
      _.transformHitTests = t1;
      _.child = t2;
      _.key = t3;
    },
    Padding: function Padding(t0, t1, t2) {
      this.padding = t0;
      this.child = t1;
      this.key = t2;
    },
    Align: function Align(t0, t1, t2, t3, t4) {
      var _ = this;
      _.alignment = t0;
      _.widthFactor = t1;
      _.heightFactor = t2;
      _.child = t3;
      _.key = t4;
    },
    Center: function Center(t0, t1, t2, t3, t4) {
      var _ = this;
      _.alignment = t0;
      _.widthFactor = t1;
      _.heightFactor = t2;
      _.child = t3;
      _.key = t4;
    },
    CustomSingleChildLayout: function CustomSingleChildLayout(t0, t1, t2) {
      this.delegate = t0;
      this.child = t1;
      this.key = t2;
    },
    LayoutId: function LayoutId(t0, t1, t2) {
      this.id = t0;
      this.child = t1;
      this.key = t2;
    },
    CustomMultiChildLayout: function CustomMultiChildLayout(t0, t1, t2) {
      this.delegate = t0;
      this.children = t1;
      this.key = t2;
    },
    SizedBox: function SizedBox(t0, t1, t2, t3) {
      var _ = this;
      _.width = t0;
      _.height = t1;
      _.child = t2;
      _.key = t3;
    },
    ConstrainedBox: function ConstrainedBox(t0, t1, t2) {
      this.constraints = t0;
      this.child = t1;
      this.key = t2;
    },
    LimitedBox: function LimitedBox(t0, t1, t2, t3) {
      var _ = this;
      _.maxWidth = t0;
      _.maxHeight = t1;
      _.child = t2;
      _.key = t3;
    },
    Offstage: function Offstage(t0, t1, t2) {
      this.offstage = t0;
      this.child = t1;
      this.key = t2;
    },
    _OffstageElement: function _OffstageElement(t0, t1) {
      var _ = this;
      _._slot = _._notificationTree = _._parent = _._ancestorRenderObjectElement = _._renderObject = _._framework$_child = null;
      _.__Element__depth_A = $;
      _._widget = t0;
      _._owner = null;
      _._lifecycleState = t1;
      _._dependencies = _._inheritedElements = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._inDirtyList = false;
    },
    Baseline: function Baseline(t0, t1, t2, t3) {
      var _ = this;
      _.baseline = t0;
      _.baselineType = t1;
      _.child = t2;
      _.key = t3;
    },
    Stack: function Stack(t0, t1, t2, t3) {
      var _ = this;
      _.alignment = t0;
      _.fit = t1;
      _.children = t2;
      _.key = t3;
    },
    Positioned: function Positioned(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.left = t0;
      _.top = t1;
      _.right = t2;
      _.bottom = t3;
      _.width = t4;
      _.height = t5;
      _.child = t6;
      _.key = t7;
    },
    PositionedDirectional: function PositionedDirectional(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.start = t0;
      _.top = t1;
      _.bottom = t2;
      _.width = t3;
      _.child = t4;
      _.key = t5;
    },
    Flex: function Flex() {
    },
    Row: function Row(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.direction = t0;
      _.mainAxisAlignment = t1;
      _.mainAxisSize = t2;
      _.crossAxisAlignment = t3;
      _.textDirection = t4;
      _.verticalDirection = t5;
      _.textBaseline = t6;
      _.children = t7;
      _.key = t8;
    },
    Column: function Column(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.direction = t0;
      _.mainAxisAlignment = t1;
      _.mainAxisSize = t2;
      _.crossAxisAlignment = t3;
      _.textDirection = t4;
      _.verticalDirection = t5;
      _.textBaseline = t6;
      _.children = t7;
      _.key = t8;
    },
    Flexible: function Flexible(t0, t1, t2, t3) {
      var _ = this;
      _.flex = t0;
      _.fit = t1;
      _.child = t2;
      _.key = t3;
    },
    Expanded: function Expanded(t0, t1, t2, t3) {
      var _ = this;
      _.flex = t0;
      _.fit = t1;
      _.child = t2;
      _.key = t3;
    },
    RichText: function RichText(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14) {
      var _ = this;
      _.text = t0;
      _.textAlign = t1;
      _.textDirection = t2;
      _.softWrap = t3;
      _.overflow = t4;
      _.textScaleFactor = t5;
      _.maxLines = t6;
      _.locale = t7;
      _.strutStyle = t8;
      _.textWidthBasis = t9;
      _.textHeightBehavior = t10;
      _.selectionRegistrar = t11;
      _.selectionColor = t12;
      _.children = t13;
      _.key = t14;
    },
    RichText__extractChildren_closure: function RichText__extractChildren_closure(t0, t1) {
      this._box_0 = t0;
      this.result = t1;
    },
    Listener: function Listener(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.onPointerDown = t0;
      _.onPointerUp = t1;
      _.onPointerCancel = t2;
      _.onPointerPanZoomStart = t3;
      _.onPointerSignal = t4;
      _.behavior = t5;
      _.child = t6;
      _.key = t7;
    },
    MouseRegion: function MouseRegion(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.onEnter = t0;
      _.onHover = t1;
      _.onExit = t2;
      _.cursor = t3;
      _.child = t4;
      _.key = t5;
    },
    RepaintBoundary: function RepaintBoundary(t0, t1) {
      this.child = t0;
      this.key = t1;
    },
    IgnorePointer: function IgnorePointer(t0, t1, t2, t3) {
      var _ = this;
      _.ignoring = t0;
      _.ignoringSemantics = t1;
      _.child = t2;
      _.key = t3;
    },
    AbsorbPointer: function AbsorbPointer(t0, t1, t2) {
      this.absorbing = t0;
      this.child = t1;
      this.key = t2;
    },
    Semantics: function Semantics(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.properties = t0;
      _.container = t1;
      _.explicitChildNodes = t2;
      _.excludeSemantics = t3;
      _.child = t4;
      _.key = t5;
    },
    BlockSemantics: function BlockSemantics(t0, t1) {
      this.child = t0;
      this.key = t1;
    },
    ExcludeSemantics: function ExcludeSemantics(t0, t1, t2) {
      this.excluding = t0;
      this.child = t1;
      this.key = t2;
    },
    IndexedSemantics: function IndexedSemantics(t0, t1, t2) {
      this.index = t0;
      this.child = t1;
      this.key = t2;
    },
    KeyedSubtree: function KeyedSubtree(t0, t1) {
      this.child = t0;
      this.key = t1;
    },
    Builder: function Builder(t0, t1) {
      this.builder = t0;
      this.key = t1;
    },
    ColoredBox: function ColoredBox(t0, t1, t2) {
      this.color = t0;
      this.child = t1;
      this.key = t2;
    },
    _RenderColoredBox: function _RenderColoredBox(t0, t1, t2, t3) {
      var _ = this;
      _._basic$_color = t0;
      _.behavior = t1;
      _.RenderObjectWithChildMixin__child = t2;
      _.parentData = _._cachedBaselines = _._size = _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t3;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderObjectToWidgetElement$(widget, $T) {
      return new A.RenderObjectToWidgetElement(widget, B._ElementLifecycle_0, $T._eval$1("RenderObjectToWidgetElement<0>"));
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_dispatchEvent_closure: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_dispatchEvent_closure(t0, t1, t2) {
      this.$this = t0;
      this.hitTestResult = t1;
      this.event = t2;
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_initInstances_closure: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_initInstances_closure(t0) {
      this.$this = t0;
    },
    WidgetsBindingObserver: function WidgetsBindingObserver() {
    },
    WidgetsBinding: function WidgetsBinding() {
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_drawFrame_closure: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_drawFrame_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    WidgetsBinding_scheduleAttachRootWidget_closure: function WidgetsBinding_scheduleAttachRootWidget_closure(t0, t1) {
      this.$this = t0;
      this.rootWidget = t1;
    },
    RenderObjectToWidgetAdapter: function RenderObjectToWidgetAdapter(t0, t1, t2, t3, t4) {
      var _ = this;
      _.child = t0;
      _.container = t1;
      _.debugShortDescription = t2;
      _.key = t3;
      _.$ti = t4;
    },
    RenderObjectToWidgetAdapter_attachToRenderTree_closure: function RenderObjectToWidgetAdapter_attachToRenderTree_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.$this = t1;
      this.owner = t2;
    },
    RenderObjectToWidgetAdapter_attachToRenderTree_closure0: function RenderObjectToWidgetAdapter_attachToRenderTree_closure0(t0) {
      this._box_0 = t0;
    },
    RenderObjectToWidgetElement: function RenderObjectToWidgetElement(t0, t1, t2) {
      var _ = this;
      _._slot = _._notificationTree = _._parent = _._ancestorRenderObjectElement = _._renderObject = _._newWidget = _._child = null;
      _.__Element__depth_A = $;
      _._widget = t0;
      _._owner = null;
      _._lifecycleState = t1;
      _._dependencies = _._inheritedElements = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._inDirtyList = false;
      _.$ti = t2;
    },
    WidgetsFlutterBinding: function WidgetsFlutterBinding(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, t31, t32, t33, t34, t35, t36, t37, t38, t39, t40, t41, t42, t43, t44, t45, t46, t47, t48, t49, t50, t51, t52, t53, t54, t55, t56, t57, t58) {
      var _ = this;
      _.WidgetsBinding__buildOwner = t0;
      _.WidgetsBinding___WidgetsBinding_platformMenuDelegate_A = t1;
      _.WidgetsBinding__observers = t2;
      _.WidgetsBinding__needToReportFirstFrame = t3;
      _.WidgetsBinding__firstFrameCompleter = t4;
      _.WidgetsBinding_debugBuildingDirtyElements = t5;
      _.WidgetsBinding__renderViewElement = t6;
      _.WidgetsBinding__readyToProduceFrames = t7;
      _.RendererBinding__debugIsRenderViewInitialized = t8;
      _.RendererBinding__mouseTracker = t9;
      _.RendererBinding___RendererBinding__pipelineOwner_A = t10;
      _.RendererBinding__semanticsHandle = t11;
      _.RendererBinding__debugMouseTrackerUpdateScheduled = t12;
      _.RendererBinding__firstFrameDeferredCount = t13;
      _.RendererBinding__firstFrameSent = t14;
      _.SemanticsBinding___SemanticsBinding__semanticsEnabled_FI = t15;
      _.SemanticsBinding__outstandingHandles = t16;
      _.SemanticsBinding__semanticsHandle = t17;
      _.SemanticsBinding___SemanticsBinding__accessibilityFeatures_A = t18;
      _.PaintingBinding___PaintingBinding__imageCache_A = t19;
      _.PaintingBinding__systemFonts = t20;
      _.ServicesBinding___ServicesBinding__keyboard_F = t21;
      _.ServicesBinding___ServicesBinding__keyEventManager_F = t22;
      _.ServicesBinding___ServicesBinding__defaultBinaryMessenger_F = t23;
      _.ServicesBinding___ServicesBinding__restorationManager_A = t24;
      _.ServicesBinding__systemUiChangeCallback = t25;
      _.SchedulerBinding__timingsCallbacks = t26;
      _.SchedulerBinding__lifecycleState = t27;
      _.SchedulerBinding_schedulingStrategy = t28;
      _.SchedulerBinding__taskQueue = t29;
      _.SchedulerBinding__hasRequestedAnEventLoopCallback = t30;
      _.SchedulerBinding__nextFrameCallbackId = t31;
      _.SchedulerBinding__transientCallbacks = t32;
      _.SchedulerBinding__removedIds = t33;
      _.SchedulerBinding__persistentCallbacks = t34;
      _.SchedulerBinding__postFrameCallbacks = t35;
      _.SchedulerBinding__nextFrameCompleter = t36;
      _.SchedulerBinding__hasScheduledFrame = t37;
      _.SchedulerBinding__schedulerPhase = t38;
      _.SchedulerBinding__framesEnabled = t39;
      _.SchedulerBinding__warmUpFrame = t40;
      _.SchedulerBinding__firstRawTimeStampInEpoch = t41;
      _.SchedulerBinding__epochStart = t42;
      _.SchedulerBinding__lastRawTimeStamp = t43;
      _.SchedulerBinding__currentFrameTimeStamp = t44;
      _.SchedulerBinding__debugFrameNumber = t45;
      _.SchedulerBinding__debugBanner = t46;
      _.SchedulerBinding__rescheduleAfterWarmUpFrame = t47;
      _.SchedulerBinding__frameTimelineTask = t48;
      _.SchedulerBinding__performanceMode = t49;
      _.SchedulerBinding__numPerformanceModeRequests = t50;
      _.GestureBinding__pendingPointerEvents = t51;
      _.GestureBinding_pointerRouter = t52;
      _.GestureBinding_gestureArena = t53;
      _.GestureBinding_pointerSignalResolver = t54;
      _.GestureBinding__hitTests = t55;
      _.GestureBinding___GestureBinding__resampler_FI = t56;
      _.GestureBinding_resamplingEnabled = t57;
      _.GestureBinding_samplingOffset = t58;
      _._lockCount = 0;
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding: function _WidgetsFlutterBinding_BindingBase_GestureBinding() {
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding() {
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding() {
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding() {
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding() {
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding() {
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding() {
    },
    DecoratedBox$(child, decoration, position) {
      return new A.DecoratedBox(decoration, position, child, null);
    },
    Container$(alignment, child, color, constraints, decoration, height, margin, padding, width) {
      var t1;
      if (width != null || height != null) {
        t1 = constraints == null ? null : constraints.tighten$2$height$width(height, width);
        if (t1 == null)
          t1 = A.BoxConstraints$tightFor(height, width);
      } else
        t1 = constraints;
      return new A.Container(child, alignment, padding, color, decoration, t1, margin, null);
    },
    DecoratedBox: function DecoratedBox(t0, t1, t2, t3) {
      var _ = this;
      _.decoration = t0;
      _.position = t1;
      _.child = t2;
      _.key = t3;
    },
    Container: function Container(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.child = t0;
      _.alignment = t1;
      _.padding = t2;
      _.color = t3;
      _.decoration = t4;
      _.constraints = t5;
      _.margin = t6;
      _.key = t7;
    },
    DefaultSelectionStyle$(child, cursorColor, selectionColor) {
      return new A.DefaultSelectionStyle(cursorColor, selectionColor, child, null);
    },
    DefaultSelectionStyle: function DefaultSelectionStyle(t0, t1, t2, t3) {
      var _ = this;
      _.cursorColor = t0;
      _.selectionColor = t1;
      _.child = t2;
      _.key = t3;
    },
    _NullWidget0: function _NullWidget0(t0) {
      this.key = t0;
    },
    DefaultTextEditingShortcuts__shortcuts() {
      switch (A.defaultTargetPlatform().index) {
        case 0:
          return $.$get$DefaultTextEditingShortcuts__androidShortcuts();
        case 1:
          return $.$get$DefaultTextEditingShortcuts__fuchsiaShortcuts();
        case 2:
          return $.$get$DefaultTextEditingShortcuts__iOSShortcuts();
        case 3:
          return $.$get$DefaultTextEditingShortcuts__linuxShortcuts();
        case 4:
          return $.$get$DefaultTextEditingShortcuts__macShortcuts();
        case 5:
          return $.$get$DefaultTextEditingShortcuts__windowsShortcuts();
      }
    },
    DefaultTextEditingShortcuts: function DefaultTextEditingShortcuts(t0, t1) {
      this.child = t0;
      this.key = t1;
    },
    DualTransitionBuilder: function DualTransitionBuilder(t0, t1, t2, t3, t4) {
      var _ = this;
      _.animation = t0;
      _.forwardBuilder = t1;
      _.reverseBuilder = t2;
      _.child = t3;
      _.key = t4;
    },
    _DualTransitionBuilderState: function _DualTransitionBuilderState(t0, t1) {
      var _ = this;
      _.___DualTransitionBuilderState__effectiveAnimationStatus_A = $;
      _._forwardAnimation = t0;
      _._reverseAnimation = t1;
      _._element = _._widget = null;
    },
    combineKeyEventResults(results) {
      var t1, hasSkipRemainingHandlers, _i;
      for (t1 = results.length, hasSkipRemainingHandlers = false, _i = 0; _i < t1; ++_i)
        switch (results[_i].index) {
          case 0:
            return B.KeyEventResult_0;
          case 2:
            hasSkipRemainingHandlers = true;
            break;
          case 1:
            break;
        }
      return hasSkipRemainingHandlers ? B.KeyEventResult_2 : B.KeyEventResult_1;
    },
    FocusNode$(canRequestFocus, debugLabel, descendantsAreFocusable, descendantsAreTraversable, onKey, onKeyEvent, skipTraversal) {
      return new A.FocusNode(skipTraversal, canRequestFocus, true, true, onKey, onKeyEvent, A._setArrayType([], type$.JSArray_FocusNode), $.$get$ChangeNotifier__emptyListeners());
    },
    FocusScopeNode$(canRequestFocus, debugLabel, skipTraversal) {
      var t1 = type$.JSArray_FocusNode;
      return new A.FocusScopeNode(B.TraversalEdgeBehavior_0, A._setArrayType([], t1), skipTraversal, canRequestFocus, true, true, null, null, A._setArrayType([], t1), $.$get$ChangeNotifier__emptyListeners());
    },
    _HighlightModeManager__defaultModeForPlatform() {
      switch (A.defaultTargetPlatform().index) {
        case 0:
        case 1:
        case 2:
          if ($.WidgetsBinding__instance.RendererBinding__mouseTracker._mouseStates.__js_helper$_length !== 0)
            return B.FocusHighlightMode_1;
          return B.FocusHighlightMode_0;
        case 3:
        case 4:
        case 5:
          return B.FocusHighlightMode_1;
      }
    },
    KeyEventResult: function KeyEventResult(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    _Autofocus: function _Autofocus(t0, t1) {
      this.scope = t0;
      this.autofocusNode = t1;
    },
    FocusAttachment: function FocusAttachment(t0) {
      this._node = t0;
    },
    UnfocusDisposition: function UnfocusDisposition(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    FocusNode: function FocusNode(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _._skipTraversal = t0;
      _._focus_manager$_canRequestFocus = t1;
      _._focus_manager$_descendantsAreFocusable = t2;
      _._focus_manager$_descendantsAreTraversable = t3;
      _._context = null;
      _.onKey = t4;
      _.onKeyEvent = t5;
      _._focus_manager$_parent = _._descendants = _._ancestors = _._focus_manager$_manager = null;
      _._children = t6;
      _._attachment = null;
      _._requestFocusWhenReparented = false;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t7;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
    },
    FocusNode_traversalDescendants_closure: function FocusNode_traversalDescendants_closure() {
    },
    FocusScopeNode: function FocusScopeNode(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _.traversalEdgeBehavior = t0;
      _._focusedChildren = t1;
      _._skipTraversal = t2;
      _._focus_manager$_canRequestFocus = t3;
      _._focus_manager$_descendantsAreFocusable = t4;
      _._focus_manager$_descendantsAreTraversable = t5;
      _._context = null;
      _.onKey = t6;
      _.onKeyEvent = t7;
      _._focus_manager$_parent = _._descendants = _._ancestors = _._focus_manager$_manager = null;
      _._children = t8;
      _._attachment = null;
      _._requestFocusWhenReparented = false;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t9;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
    },
    FocusHighlightMode: function FocusHighlightMode(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    FocusHighlightStrategy: function FocusHighlightStrategy(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    FocusManager: function FocusManager(t0, t1, t2, t3, t4) {
      var _ = this;
      _._highlightManager = t0;
      _.rootScope = t1;
      _._primaryFocus = null;
      _._dirtyNodes = t2;
      _._markedForFocus = null;
      _._pendingAutofocuses = t3;
      _._haveScheduledUpdate = false;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t4;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
    },
    _HighlightModeManager: function _HighlightModeManager(t0) {
      this._highlightMode = this._lastInteractionWasTouch = null;
      this._focus_manager$_listeners = t0;
    },
    _FocusManager_Object_DiagnosticableTreeMixin: function _FocusManager_Object_DiagnosticableTreeMixin() {
    },
    _FocusManager_Object_DiagnosticableTreeMixin_ChangeNotifier: function _FocusManager_Object_DiagnosticableTreeMixin_ChangeNotifier() {
    },
    _FocusNode_Object_DiagnosticableTreeMixin: function _FocusNode_Object_DiagnosticableTreeMixin() {
    },
    _FocusNode_Object_DiagnosticableTreeMixin_ChangeNotifier: function _FocusNode_Object_DiagnosticableTreeMixin_ChangeNotifier() {
    },
    Focus$(autofocus, canRequestFocus, child, debugLabel, descendantsAreFocusable, descendantsAreTraversable, focusNode, includeSemantics, key, onFocusChange, onKey, onKeyEvent, parentNode, skipTraversal) {
      return new A.Focus(parentNode, child, focusNode, autofocus, onFocusChange, onKeyEvent, onKey, canRequestFocus, skipTraversal, descendantsAreFocusable, descendantsAreTraversable, includeSemantics, debugLabel, key);
    },
    Focus_maybeOf(context, createDependency, scopeOk) {
      var t1 = type$._FocusInheritedScope,
        scope = createDependency ? context.dependOnInheritedWidgetOfExactType$1$0(t1) : context.getInheritedWidgetOfExactType$1$0(t1),
        node = scope == null ? null : scope.notifier;
      if (node == null)
        return null;
      return node;
    },
    _FocusState$() {
      return new A._FocusState();
    },
    FocusScope$(autofocus, child, debugLabel, key, node) {
      var _null = null;
      return new A.FocusScope(_null, child, node, autofocus, _null, _null, _null, _null, _null, _null, _null, true, debugLabel, key);
    },
    FocusScope_of(context) {
      var t1 = A.Focus_maybeOf(context, true, true);
      t1 = t1 == null ? null : t1.get$nearestScope();
      return t1 == null ? context._owner.focusManager.rootScope : t1;
    },
    _FocusInheritedScope$(child, node) {
      return new A._FocusInheritedScope(node, child, null);
    },
    Focus: function Focus(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13) {
      var _ = this;
      _.parentNode = t0;
      _.child = t1;
      _.focusNode = t2;
      _.autofocus = t3;
      _.onFocusChange = t4;
      _._onKeyEvent = t5;
      _._onKey = t6;
      _._focus_scope$_canRequestFocus = t7;
      _._focus_scope$_skipTraversal = t8;
      _._descendantsAreFocusable = t9;
      _._descendantsAreTraversable = t10;
      _.includeSemantics = t11;
      _._focus_scope$_debugLabel = t12;
      _.key = t13;
    },
    _FocusState: function _FocusState() {
      var _ = this;
      _._internalNode = null;
      _.___FocusState__descendantsWereTraversable_A = _.___FocusState__descendantsWereFocusable_A = _.___FocusState__couldRequestFocus_A = _.___FocusState__hadPrimaryFocus_A = $;
      _._didAutofocus = false;
      _._element = _._widget = _._focusAttachment = null;
    },
    _FocusState__handleFocusChanged_closure: function _FocusState__handleFocusChanged_closure(t0, t1) {
      this.$this = t0;
      this.hasPrimaryFocus = t1;
    },
    _FocusState__handleFocusChanged_closure0: function _FocusState__handleFocusChanged_closure0(t0, t1) {
      this.$this = t0;
      this.canRequestFocus = t1;
    },
    _FocusState__handleFocusChanged_closure1: function _FocusState__handleFocusChanged_closure1(t0, t1) {
      this.$this = t0;
      this.descendantsAreFocusable = t1;
    },
    _FocusState__handleFocusChanged_closure2: function _FocusState__handleFocusChanged_closure2(t0, t1) {
      this.$this = t0;
      this.descendantsAreTraversable = t1;
    },
    FocusScope: function FocusScope(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13) {
      var _ = this;
      _.parentNode = t0;
      _.child = t1;
      _.focusNode = t2;
      _.autofocus = t3;
      _.onFocusChange = t4;
      _._onKeyEvent = t5;
      _._onKey = t6;
      _._focus_scope$_canRequestFocus = t7;
      _._focus_scope$_skipTraversal = t8;
      _._descendantsAreFocusable = t9;
      _._descendantsAreTraversable = t10;
      _.includeSemantics = t11;
      _._focus_scope$_debugLabel = t12;
      _.key = t13;
    },
    _FocusScopeState: function _FocusScopeState() {
      var _ = this;
      _._internalNode = null;
      _.___FocusState__descendantsWereTraversable_A = _.___FocusState__descendantsWereFocusable_A = _.___FocusState__couldRequestFocus_A = _.___FocusState__hadPrimaryFocus_A = $;
      _._didAutofocus = false;
      _._element = _._widget = _._focusAttachment = null;
    },
    _FocusInheritedScope: function _FocusInheritedScope(t0, t1, t2) {
      this.notifier = t0;
      this.child = t1;
      this.key = t2;
    },
    _getAncestor(context) {
      var count, t1 = {};
      t1.count = count;
      t1.count = 1;
      t1.target = null;
      context.visitAncestorElements$1(new A._getAncestor_closure(t1));
      return t1.target;
    },
    _focusAndEnsureVisible(node, alignmentPolicy) {
      var t1;
      node.requestFocus$0();
      t1 = node._context;
      t1.toString;
      A.Scrollable_ensureVisible(t1, 1, alignmentPolicy);
    },
    _FocusTraversalGroupInfo$(group, defaultPolicy, members) {
      var t1 = group == null ? null : group.policy;
      if (t1 == null)
        t1 = defaultPolicy;
      return new A._FocusTraversalGroupInfo(t1, members);
    },
    DirectionalFocusTraversalPolicyMixin__verticalCompare(target, a, b) {
      var t1 = target._dy;
      return B.JSNumber_methods.compareTo$1(Math.abs(a._dy - t1), Math.abs(b._dy - t1));
    },
    DirectionalFocusTraversalPolicyMixin__horizontalCompare(target, a, b) {
      var t1 = target._dx;
      return B.JSNumber_methods.compareTo$1(Math.abs(a._dx - t1), Math.abs(b._dx - t1));
    },
    DirectionalFocusTraversalPolicyMixin__sortByDistancePreferVertical(target, nodes) {
      var sorted = J.toList$0$ax(nodes);
      A.mergeSort(sorted, new A.DirectionalFocusTraversalPolicyMixin__sortByDistancePreferVertical_closure(target), type$.FocusNode);
      return sorted;
    },
    DirectionalFocusTraversalPolicyMixin__sortByDistancePreferHorizontal(target, nodes) {
      var sorted = J.toList$0$ax(nodes);
      A.mergeSort(sorted, new A.DirectionalFocusTraversalPolicyMixin__sortByDistancePreferHorizontal_closure(target), type$.FocusNode);
      return sorted;
    },
    _ReadingOrderSortData_commonDirectionalityOf(list) {
      var t2, common, t3, common0,
        t1 = A._arrayInstanceType(list)._eval$1("MappedListIterable<1,Set<Directionality>>"),
        allAncestors = new A.MappedListIterable(list, new A._ReadingOrderSortData_commonDirectionalityOf_closure(), t1);
      for (t2 = new A.ListIterator(allAncestors, allAncestors.get$length(0), t1._eval$1("ListIterator<ListIterable.E>")), t1 = t1._eval$1("ListIterable.E"), common = null; t2.moveNext$0();) {
        t3 = t2.__internal$_current;
        common0 = t3 == null ? t1._as(t3) : t3;
        common = (common == null ? common0 : common).intersection$1(common0);
      }
      if (common.get$isEmpty(common))
        return B.JSArray_methods.get$first(list).directionality;
      return B.JSArray_methods.firstWhere$1(B.JSArray_methods.get$first(list).get$directionalAncestors(), common.get$contains(common)).textDirection;
    },
    _ReadingOrderSortData_sortWithDirectionality(list, directionality) {
      A.mergeSort(list, new A._ReadingOrderSortData_sortWithDirectionality_closure(directionality), type$._ReadingOrderSortData);
    },
    _ReadingOrderDirectionalGroupData_sortWithDirectionality(list, directionality) {
      A.mergeSort(list, new A._ReadingOrderDirectionalGroupData_sortWithDirectionality_closure(directionality), type$._ReadingOrderDirectionalGroupData);
    },
    FocusTraversalGroup$(child, policy) {
      return new A.FocusTraversalGroup(policy == null ? new A.ReadingOrderTraversalPolicy(A.LinkedHashMap_LinkedHashMap$_empty(type$.FocusScopeNode, type$._DirectionalPolicyData)) : policy, child, null);
    },
    FocusTraversalGroup__getGroupNode(node) {
      var node0;
      for (; node0 = node._focus_manager$_parent, node0 != null; node = node0) {
        if (node._context == null)
          return null;
        if (node instanceof A._FocusTraversalGroupNode)
          return node;
      }
      return null;
    },
    FocusTraversalGroup_maybeOf(context) {
      var t1,
        node = A.Focus_maybeOf(context, false, true);
      if (node == null)
        return null;
      t1 = A.FocusTraversalGroup__getGroupNode(node);
      return t1 == null ? null : t1.policy;
    },
    _getAncestor_closure: function _getAncestor_closure(t0) {
      this._box_0 = t0;
    },
    _FocusTraversalGroupInfo: function _FocusTraversalGroupInfo(t0, t1) {
      this.policy = t0;
      this.members = t1;
    },
    TraversalDirection: function TraversalDirection(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    TraversalEdgeBehavior: function TraversalEdgeBehavior(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    FocusTraversalPolicy: function FocusTraversalPolicy() {
    },
    FocusTraversalPolicy__sortAllDescendants_visitGroups: function FocusTraversalPolicy__sortAllDescendants_visitGroups(t0, t1) {
      this.groups = t0;
      this.sortedDescendants = t1;
    },
    FocusTraversalPolicy__sortAllDescendants_closure: function FocusTraversalPolicy__sortAllDescendants_closure() {
    },
    _DirectionalPolicyDataEntry: function _DirectionalPolicyDataEntry(t0, t1) {
      this.direction = t0;
      this.node = t1;
    },
    _DirectionalPolicyData: function _DirectionalPolicyData(t0) {
      this.history = t0;
    },
    DirectionalFocusTraversalPolicyMixin: function DirectionalFocusTraversalPolicyMixin() {
    },
    _ReadingOrderTraversalPolicy_FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin_changedScope_closure: function _ReadingOrderTraversalPolicy_FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin_changedScope_closure(t0) {
      this.node = t0;
    },
    DirectionalFocusTraversalPolicyMixin__sortAndFindInitial_closure: function DirectionalFocusTraversalPolicyMixin__sortAndFindInitial_closure(t0, t1) {
      this.vertical = t0;
      this.first = t1;
    },
    DirectionalFocusTraversalPolicyMixin__sortByDistancePreferVertical_closure: function DirectionalFocusTraversalPolicyMixin__sortByDistancePreferVertical_closure(t0) {
      this.target = t0;
    },
    DirectionalFocusTraversalPolicyMixin__sortByDistancePreferHorizontal_closure: function DirectionalFocusTraversalPolicyMixin__sortByDistancePreferHorizontal_closure(t0) {
      this.target = t0;
    },
    DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure: function DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure(t0) {
      this.target = t0;
    },
    DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure0: function DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure0(t0) {
      this.target = t0;
    },
    DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure1: function DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure1() {
    },
    DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure: function DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure(t0) {
      this.target = t0;
    },
    DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure0: function DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure0(t0) {
      this.target = t0;
    },
    DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure1: function DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure1() {
    },
    DirectionalFocusTraversalPolicyMixin__popPolicyDataIfNeeded_popOrInvalidate: function DirectionalFocusTraversalPolicyMixin__popPolicyDataIfNeeded_popOrInvalidate(t0, t1, t2) {
      this.$this = t0;
      this.policyData = t1;
      this.nearestScope = t2;
    },
    DirectionalFocusTraversalPolicyMixin_inDirection_closure: function DirectionalFocusTraversalPolicyMixin_inDirection_closure(t0) {
      this.focusedScrollable = t0;
    },
    DirectionalFocusTraversalPolicyMixin_inDirection_closure0: function DirectionalFocusTraversalPolicyMixin_inDirection_closure0(t0) {
      this.band = t0;
    },
    DirectionalFocusTraversalPolicyMixin_inDirection_closure1: function DirectionalFocusTraversalPolicyMixin_inDirection_closure1(t0) {
      this.focusedScrollable = t0;
    },
    DirectionalFocusTraversalPolicyMixin_inDirection_closure2: function DirectionalFocusTraversalPolicyMixin_inDirection_closure2(t0) {
      this.band = t0;
    },
    _ReadingOrderSortData: function _ReadingOrderSortData(t0, t1, t2) {
      var _ = this;
      _.directionality = t0;
      _.rect = t1;
      _.node = t2;
      _._directionalAncestors = null;
    },
    _ReadingOrderSortData_commonDirectionalityOf_closure: function _ReadingOrderSortData_commonDirectionalityOf_closure() {
    },
    _ReadingOrderSortData_sortWithDirectionality_closure: function _ReadingOrderSortData_sortWithDirectionality_closure(t0) {
      this.directionality = t0;
    },
    _ReadingOrderSortData_directionalAncestors_getDirectionalityAncestors: function _ReadingOrderSortData_directionalAncestors_getDirectionalityAncestors() {
    },
    _ReadingOrderDirectionalGroupData: function _ReadingOrderDirectionalGroupData(t0) {
      this.members = t0;
      this._focus_traversal$_rect = null;
    },
    _ReadingOrderDirectionalGroupData_rect_closure: function _ReadingOrderDirectionalGroupData_rect_closure() {
    },
    _ReadingOrderDirectionalGroupData_sortWithDirectionality_closure: function _ReadingOrderDirectionalGroupData_sortWithDirectionality_closure(t0) {
      this.directionality = t0;
    },
    ReadingOrderTraversalPolicy: function ReadingOrderTraversalPolicy(t0) {
      this.DirectionalFocusTraversalPolicyMixin__policyData = t0;
    },
    ReadingOrderTraversalPolicy__pickNext_closure: function ReadingOrderTraversalPolicy__pickNext_closure() {
    },
    ReadingOrderTraversalPolicy__pickNext_inBand: function ReadingOrderTraversalPolicy__pickNext_inBand() {
    },
    ReadingOrderTraversalPolicy__pickNext_inBand_closure: function ReadingOrderTraversalPolicy__pickNext_inBand_closure(t0) {
      this.band = t0;
    },
    FocusTraversalGroup: function FocusTraversalGroup(t0, t1, t2) {
      this.policy = t0;
      this.child = t1;
      this.key = t2;
    },
    _FocusTraversalGroupNode: function _FocusTraversalGroupNode(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.policy = t0;
      _._skipTraversal = t1;
      _._focus_manager$_canRequestFocus = t2;
      _._focus_manager$_descendantsAreFocusable = t3;
      _._focus_manager$_descendantsAreTraversable = t4;
      _._context = null;
      _.onKey = t5;
      _.onKeyEvent = t6;
      _._focus_manager$_parent = _._descendants = _._ancestors = _._focus_manager$_manager = null;
      _._children = t7;
      _._attachment = null;
      _._requestFocusWhenReparented = false;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t8;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
    },
    _FocusTraversalGroupState: function _FocusTraversalGroupState() {
      this.___FocusTraversalGroupState_focusNode_FI = $;
      this._element = this._widget = null;
    },
    RequestFocusAction: function RequestFocusAction(t0) {
      this._actions$_listeners = t0;
      this._currentCallingAction = null;
    },
    NextFocusIntent: function NextFocusIntent() {
    },
    NextFocusAction: function NextFocusAction(t0) {
      this._actions$_listeners = t0;
      this._currentCallingAction = null;
    },
    PreviousFocusIntent: function PreviousFocusIntent() {
    },
    PreviousFocusAction: function PreviousFocusAction(t0) {
      this._actions$_listeners = t0;
      this._currentCallingAction = null;
    },
    DirectionalFocusAction: function DirectionalFocusAction(t0) {
      this._actions$_listeners = t0;
      this._currentCallingAction = null;
    },
    _FocusTraversalPolicy_Object_Diagnosticable: function _FocusTraversalPolicy_Object_Diagnosticable() {
    },
    _ReadingOrderTraversalPolicy_FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin: function _ReadingOrderTraversalPolicy_FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin() {
    },
    __ReadingOrderDirectionalGroupData_Object_Diagnosticable: function __ReadingOrderDirectionalGroupData_Object_Diagnosticable() {
    },
    __ReadingOrderSortData_Object_Diagnosticable: function __ReadingOrderSortData_Object_Diagnosticable() {
    },
    _InactiveElements__deactivateRecursively(element) {
      element.deactivate$0();
      element.visitChildren$1(A.framework__InactiveElements__deactivateRecursively$closure());
    },
    Element__sort(a, b) {
      var t2, diff, isBDirty,
        t1 = a.__Element__depth_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t2 = b.__Element__depth_A;
      t2 === $ && A.throwUnnamedLateFieldNI();
      diff = t1 - t2;
      if (diff !== 0)
        return diff;
      isBDirty = b._dirty;
      if (a._dirty !== isBDirty)
        return isBDirty ? -1 : 1;
      return 0;
    },
    Element__activateRecursively(element) {
      element.activate$0();
      element.visitChildren$1(A.framework_Element__activateRecursively$closure());
    },
    ErrorWidget__defaultErrorWidgetBuilder(details) {
      var exception = details.exception,
        t1 = exception instanceof A.FlutterError ? exception : null;
      return new A.ErrorWidget("", t1, new A.UniqueKey());
    },
    InheritedElement$(widget) {
      return new A.InheritedElement(A.HashMap_HashMap(type$.Element, type$.nullable_Object), widget, B._ElementLifecycle_0);
    },
    MultiChildRenderObjectElement$(widget) {
      return new A.MultiChildRenderObjectElement(A.HashSet_HashSet(type$.Element), widget, B._ElementLifecycle_0);
    },
    _reportException(context, exception, stack, informationCollector) {
      var details = new A.FlutterErrorDetails(exception, stack, "widgets library", context, informationCollector, false);
      A.FlutterError_reportError(details);
      return details;
    },
    GlobalKey: function GlobalKey() {
    },
    LabeledGlobalKey: function LabeledGlobalKey(t0, t1) {
      this._debugLabel = t0;
      this.$ti = t1;
    },
    GlobalObjectKey: function GlobalObjectKey(t0, t1) {
      this.value = t0;
      this.$ti = t1;
    },
    Widget: function Widget() {
    },
    StatelessWidget: function StatelessWidget() {
    },
    StatefulWidget: function StatefulWidget() {
    },
    State: function State() {
    },
    ProxyWidget: function ProxyWidget() {
    },
    ParentDataWidget: function ParentDataWidget() {
    },
    InheritedWidget: function InheritedWidget() {
    },
    RenderObjectWidget: function RenderObjectWidget() {
    },
    LeafRenderObjectWidget: function LeafRenderObjectWidget() {
    },
    SingleChildRenderObjectWidget: function SingleChildRenderObjectWidget() {
    },
    MultiChildRenderObjectWidget: function MultiChildRenderObjectWidget() {
    },
    _ElementLifecycle: function _ElementLifecycle(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    _InactiveElements: function _InactiveElements(t0) {
      this._framework$_elements = t0;
    },
    _InactiveElements__unmount_closure: function _InactiveElements__unmount_closure(t0) {
      this.$this = t0;
    },
    BuildOwner: function BuildOwner(t0, t1, t2, t3) {
      var _ = this;
      _.onBuildScheduled = null;
      _._inactiveElements = t0;
      _._dirtyElements = t1;
      _._scheduledFlushDirtyElements = false;
      _._dirtyElementsNeedsResorting = null;
      _.focusManager = t2;
      _._globalKeyRegistry = t3;
    },
    BuildOwner_buildScope_closure: function BuildOwner_buildScope_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.$this = t1;
      this.element = t2;
    },
    NotifiableElementMixin: function NotifiableElementMixin() {
    },
    _NotificationNode: function _NotificationNode(t0, t1) {
      this.current = t0;
      this.parent = t1;
    },
    Element: function Element() {
    },
    Element_renderObject_closure: function Element_renderObject_closure(t0) {
      this._box_0 = t0;
    },
    Element_updateSlotForChild_visit: function Element_updateSlotForChild_visit(t0) {
      this.newSlot = t0;
    },
    Element__updateDepth_closure: function Element__updateDepth_closure(t0) {
      this.expectedDepth = t0;
    },
    Element_detachRenderObject_closure: function Element_detachRenderObject_closure() {
    },
    Element_attachRenderObject_closure: function Element_attachRenderObject_closure(t0) {
      this.newSlot = t0;
    },
    ErrorWidget: function ErrorWidget(t0, t1, t2) {
      this.message = t0;
      this._flutterError = t1;
      this.key = t2;
    },
    ComponentElement: function ComponentElement() {
    },
    ComponentElement_performRebuild_closure: function ComponentElement_performRebuild_closure() {
    },
    ComponentElement_performRebuild_closure0: function ComponentElement_performRebuild_closure0() {
    },
    StatelessElement: function StatelessElement(t0, t1) {
      var _ = this;
      _._slot = _._notificationTree = _._parent = _._framework$_child = null;
      _.__Element__depth_A = $;
      _._widget = t0;
      _._owner = null;
      _._lifecycleState = t1;
      _._dependencies = _._inheritedElements = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._inDirtyList = false;
    },
    StatefulElement: function StatefulElement(t0, t1, t2) {
      var _ = this;
      _._framework$_state = t0;
      _._didChangeDependencies = false;
      _._slot = _._notificationTree = _._parent = _._framework$_child = null;
      _.__Element__depth_A = $;
      _._widget = t1;
      _._owner = null;
      _._lifecycleState = t2;
      _._dependencies = _._inheritedElements = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._inDirtyList = false;
    },
    ProxyElement: function ProxyElement() {
    },
    ParentDataElement: function ParentDataElement(t0, t1, t2) {
      var _ = this;
      _._slot = _._notificationTree = _._parent = _._framework$_child = null;
      _.__Element__depth_A = $;
      _._widget = t0;
      _._owner = null;
      _._lifecycleState = t1;
      _._dependencies = _._inheritedElements = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._inDirtyList = false;
      _.$ti = t2;
    },
    ParentDataElement__applyParentData_applyParentDataToChild: function ParentDataElement__applyParentData_applyParentDataToChild(t0) {
      this.widget = t0;
    },
    InheritedElement: function InheritedElement(t0, t1, t2) {
      var _ = this;
      _._dependents = t0;
      _._slot = _._notificationTree = _._parent = _._framework$_child = null;
      _.__Element__depth_A = $;
      _._widget = t1;
      _._owner = null;
      _._lifecycleState = t2;
      _._dependencies = _._inheritedElements = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._inDirtyList = false;
    },
    RenderObjectElement: function RenderObjectElement() {
    },
    RenderObjectElement_updateChildren_replaceWithNullIfForgotten: function RenderObjectElement_updateChildren_replaceWithNullIfForgotten(t0) {
      this.forgottenChildren = t0;
    },
    RenderObjectElement_updateChildren_slotFor: function RenderObjectElement_updateChildren_slotFor(t0) {
      this.slots = t0;
    },
    RootRenderObjectElement: function RootRenderObjectElement() {
    },
    LeafRenderObjectElement: function LeafRenderObjectElement(t0, t1) {
      var _ = this;
      _._slot = _._notificationTree = _._parent = _._ancestorRenderObjectElement = _._renderObject = null;
      _.__Element__depth_A = $;
      _._widget = t0;
      _._owner = null;
      _._lifecycleState = t1;
      _._dependencies = _._inheritedElements = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._inDirtyList = false;
    },
    SingleChildRenderObjectElement: function SingleChildRenderObjectElement(t0, t1) {
      var _ = this;
      _._slot = _._notificationTree = _._parent = _._ancestorRenderObjectElement = _._renderObject = _._framework$_child = null;
      _.__Element__depth_A = $;
      _._widget = t0;
      _._owner = null;
      _._lifecycleState = t1;
      _._dependencies = _._inheritedElements = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._inDirtyList = false;
    },
    MultiChildRenderObjectElement: function MultiChildRenderObjectElement(t0, t1, t2) {
      var _ = this;
      _.__MultiChildRenderObjectElement__children_A = $;
      _._forgottenChildren = t0;
      _._slot = _._notificationTree = _._parent = _._ancestorRenderObjectElement = _._renderObject = null;
      _.__Element__depth_A = $;
      _._widget = t1;
      _._owner = null;
      _._lifecycleState = t2;
      _._dependencies = _._inheritedElements = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._inDirtyList = false;
    },
    IndexedSlot: function IndexedSlot(t0, t1, t2) {
      this.value = t0;
      this.index = t1;
      this.$ti = t2;
    },
    _NullElement: function _NullElement(t0, t1) {
      var _ = this;
      _._slot = _._notificationTree = _._parent = null;
      _.__Element__depth_A = $;
      _._widget = t0;
      _._owner = null;
      _._lifecycleState = t1;
      _._dependencies = _._inheritedElements = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._inDirtyList = false;
    },
    _NullWidget1: function _NullWidget1(t0) {
      this.key = t0;
    },
    _State_Object_Diagnosticable: function _State_Object_Diagnosticable() {
    },
    GestureDetector$(behavior, child, dragStartBehavior, excludeFromSemantics, key, onDoubleTap, onHorizontalDragCancel, onHorizontalDragDown, onHorizontalDragEnd, onHorizontalDragUpdate, onLongPress, onPanEnd, onTap, onTapCancel, onTapDown, onTapUp, onVerticalDragEnd, onVerticalDragStart, onVerticalDragUpdate) {
      return new A.GestureDetector(child, onTapDown, onTapUp, onTap, onTapCancel, onDoubleTap, onLongPress, onVerticalDragStart, onVerticalDragUpdate, onVerticalDragEnd, onHorizontalDragDown, onHorizontalDragUpdate, onHorizontalDragEnd, onHorizontalDragCancel, onPanEnd, behavior, excludeFromSemantics, dragStartBehavior, key);
    },
    GestureRecognizerFactory: function GestureRecognizerFactory() {
    },
    GestureRecognizerFactoryWithHandlers: function GestureRecognizerFactoryWithHandlers(t0, t1, t2) {
      this._constructor = t0;
      this._initializer = t1;
      this.$ti = t2;
    },
    GestureDetector: function GestureDetector(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18) {
      var _ = this;
      _.child = t0;
      _.onTapDown = t1;
      _.onTapUp = t2;
      _.onTap = t3;
      _.onTapCancel = t4;
      _.onDoubleTap = t5;
      _.onLongPress = t6;
      _.onVerticalDragStart = t7;
      _.onVerticalDragUpdate = t8;
      _.onVerticalDragEnd = t9;
      _.onHorizontalDragDown = t10;
      _.onHorizontalDragUpdate = t11;
      _.onHorizontalDragEnd = t12;
      _.onHorizontalDragCancel = t13;
      _.onPanEnd = t14;
      _.behavior = t15;
      _.excludeFromSemantics = t16;
      _.dragStartBehavior = t17;
      _.key = t18;
    },
    GestureDetector_build_closure: function GestureDetector_build_closure(t0) {
      this.$this = t0;
    },
    GestureDetector_build_closure0: function GestureDetector_build_closure0(t0, t1) {
      this.$this = t0;
      this.gestureSettings = t1;
    },
    GestureDetector_build_closure1: function GestureDetector_build_closure1(t0) {
      this.$this = t0;
    },
    GestureDetector_build_closure2: function GestureDetector_build_closure2(t0, t1) {
      this.$this = t0;
      this.gestureSettings = t1;
    },
    GestureDetector_build_closure3: function GestureDetector_build_closure3(t0) {
      this.$this = t0;
    },
    GestureDetector_build_closure4: function GestureDetector_build_closure4(t0, t1) {
      this.$this = t0;
      this.gestureSettings = t1;
    },
    GestureDetector_build_closure5: function GestureDetector_build_closure5(t0) {
      this.$this = t0;
    },
    GestureDetector_build_closure6: function GestureDetector_build_closure6(t0, t1) {
      this.$this = t0;
      this.gestureSettings = t1;
    },
    GestureDetector_build_closure7: function GestureDetector_build_closure7(t0) {
      this.$this = t0;
    },
    GestureDetector_build_closure8: function GestureDetector_build_closure8(t0, t1) {
      this.$this = t0;
      this.gestureSettings = t1;
    },
    GestureDetector_build_closure9: function GestureDetector_build_closure9(t0) {
      this.$this = t0;
    },
    GestureDetector_build_closure10: function GestureDetector_build_closure10(t0, t1) {
      this.$this = t0;
      this.gestureSettings = t1;
    },
    RawGestureDetector: function RawGestureDetector(t0, t1, t2, t3, t4) {
      var _ = this;
      _.child = t0;
      _.gestures = t1;
      _.behavior = t2;
      _.excludeFromSemantics = t3;
      _.key = t4;
    },
    RawGestureDetectorState: function RawGestureDetectorState(t0) {
      var _ = this;
      _._recognizers = t0;
      _._element = _._widget = _._gesture_detector$_semantics = null;
    },
    _GestureSemantics: function _GestureSemantics(t0, t1, t2, t3) {
      var _ = this;
      _.behavior = t0;
      _.assignSemantics = t1;
      _.child = t2;
      _.key = t3;
    },
    SemanticsGestureDelegate: function SemanticsGestureDelegate() {
    },
    _DefaultSemanticsGestureDelegate: function _DefaultSemanticsGestureDelegate(t0) {
      this.detectorState = t0;
    },
    _DefaultSemanticsGestureDelegate__getTapHandler_closure: function _DefaultSemanticsGestureDelegate__getTapHandler_closure(t0) {
      this.tap = t0;
    },
    _DefaultSemanticsGestureDelegate__getLongPressHandler_closure: function _DefaultSemanticsGestureDelegate__getLongPressHandler_closure(t0) {
      this.longPress = t0;
    },
    _DefaultSemanticsGestureDelegate__getHorizontalDragUpdateHandler_closure: function _DefaultSemanticsGestureDelegate__getHorizontalDragUpdateHandler_closure(t0) {
      this.horizontal = t0;
    },
    _DefaultSemanticsGestureDelegate__getHorizontalDragUpdateHandler_closure0: function _DefaultSemanticsGestureDelegate__getHorizontalDragUpdateHandler_closure0(t0) {
      this.pan = t0;
    },
    _DefaultSemanticsGestureDelegate__getHorizontalDragUpdateHandler_closure1: function _DefaultSemanticsGestureDelegate__getHorizontalDragUpdateHandler_closure1(t0, t1) {
      this.horizontalHandler = t0;
      this.panHandler = t1;
    },
    _DefaultSemanticsGestureDelegate__getVerticalDragUpdateHandler_closure: function _DefaultSemanticsGestureDelegate__getVerticalDragUpdateHandler_closure(t0) {
      this.vertical = t0;
    },
    _DefaultSemanticsGestureDelegate__getVerticalDragUpdateHandler_closure0: function _DefaultSemanticsGestureDelegate__getVerticalDragUpdateHandler_closure0(t0) {
      this.pan = t0;
    },
    _DefaultSemanticsGestureDelegate__getVerticalDragUpdateHandler_closure1: function _DefaultSemanticsGestureDelegate__getVerticalDragUpdateHandler_closure1(t0, t1) {
      this.verticalHandler = t0;
      this.panHandler = t1;
    },
    Hero__allHeroesFor(context, isUserGestureTransition, $navigator) {
      var result = A.LinkedHashMap_LinkedHashMap$_empty(type$.Object, type$._HeroState);
      context.visitChildren$1(new A.Hero__allHeroesFor_visitor($navigator, new A.Hero__allHeroesFor_inviteHero(isUserGestureTransition, result)));
      return result;
    },
    _HeroFlightManifest__boundingBoxFor(context, ancestorContext) {
      var t2,
        t1 = context.get$renderObject();
      t1.toString;
      type$.RenderBox._as(t1);
      t2 = t1.getTransformTo$1(ancestorContext == null ? null : ancestorContext.get$renderObject());
      t1 = t1._size;
      return A.MatrixUtils_transformRect(t2, new A.Rect(0, 0, 0 + t1._dx, 0 + t1._dy));
    },
    HeroFlightDirection: function HeroFlightDirection(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    Hero: function Hero() {
    },
    Hero__allHeroesFor_inviteHero: function Hero__allHeroesFor_inviteHero(t0, t1) {
      this.isUserGestureTransition = t0;
      this.result = t1;
    },
    Hero__allHeroesFor_visitor: function Hero__allHeroesFor_visitor(t0, t1) {
      this.navigator = t0;
      this.inviteHero = t1;
    },
    _HeroState_startFlight_closure: function _HeroState_startFlight_closure(t0, t1) {
      this.$this = t0;
      this.box = t1;
    },
    _HeroState_endFlight_closure: function _HeroState_endFlight_closure() {
    },
    _HeroFlightManifest: function _HeroFlightManifest(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _.type = t0;
      _.overlay = t1;
      _.navigatorSize = t2;
      _.fromRoute = t3;
      _.toRoute = t4;
      _.fromHero = t5;
      _.toHero = t6;
      _.createRectTween = t7;
      _.shuttleBuilder = t8;
      _.isUserGestureTransition = t9;
      _.isDiverted = t10;
      _.___HeroFlightManifest_isValid_FI = _.___HeroFlightManifest_toHeroLocation_FI = _.___HeroFlightManifest_fromHeroLocation_FI = $;
    },
    _HeroFlight: function _HeroFlight(t0, t1) {
      var _ = this;
      _.onFlightEnded = t0;
      _.___HeroFlight_heroRectTween_A = $;
      _.shuttle = null;
      _._heroOpacity = t1;
      _.___HeroFlight_manifest_A = _.___HeroFlight__proxyAnimation_A = $;
      _.overlayEntry = null;
      _._scheduledPerformAnimationUpdate = _._aborted = false;
    },
    _HeroFlight__buildOverlay_closure: function _HeroFlight__buildOverlay_closure(t0) {
      this.$this = t0;
    },
    _HeroFlight__handleAnimationUpdate_delayedPerformAnimationUpdate: function _HeroFlight__handleAnimationUpdate_delayedPerformAnimationUpdate(t0, t1) {
      this.$this = t0;
      this.navigator = t1;
    },
    HeroController: function HeroController(t0, t1) {
      this.createRectTween = t0;
      this._flights = t1;
    },
    HeroController_didStopUserGesture_isInvalidFlight: function HeroController_didStopUserGesture_isInvalidFlight() {
    },
    HeroController__maybeStartHeroTransition_closure: function HeroController__maybeStartHeroTransition_closure(t0, t1, t2, t3, t4) {
      var _ = this;
      _.$this = t0;
      _.from = t1;
      _.to = t2;
      _.flightType = t3;
      _.isUserGestureTransition = t4;
    },
    HeroController__defaultHeroFlightShuttleBuilder_closure: function HeroController__defaultHeroFlightShuttleBuilder_closure(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.toMediaQueryData = t0;
      _.flightDirection = t1;
      _.fromHeroPadding = t2;
      _.toHeroPadding = t3;
      _.animation = t4;
      _.toHero = t5;
    },
    Icon: function Icon(t0, t1, t2) {
      this.icon = t0;
      this.semanticLabel = t1;
      this.key = t2;
    },
    IconData: function IconData(t0, t1) {
      this.codePoint = t0;
      this.matchTextDirection = t1;
    },
    IconTheme$(child, data, key) {
      return new A.IconTheme(data, child, key);
    },
    IconTheme_merge(child, data) {
      return new A.Builder(new A.IconTheme_merge_closure(null, data, child), null);
    },
    IconTheme_of(context) {
      var t3, t4, t5, t6, t7, t8,
        iconThemeData = A.IconTheme__getInheritedIconThemeData(context).resolve$1(context),
        t1 = iconThemeData.size,
        t2 = t1 == null;
      if (!t2 && iconThemeData.fill != null && iconThemeData.weight != null && iconThemeData.grade != null && iconThemeData.opticalSize != null && iconThemeData.color != null && iconThemeData.get$opacity() != null)
        t1 = iconThemeData;
      else {
        if (t2)
          t1 = 24;
        t2 = iconThemeData.fill;
        if (t2 == null)
          t2 = 0;
        t3 = iconThemeData.weight;
        if (t3 == null)
          t3 = 400;
        t4 = iconThemeData.grade;
        if (t4 == null)
          t4 = 0;
        t5 = iconThemeData.opticalSize;
        if (t5 == null)
          t5 = 48;
        t6 = iconThemeData.color;
        if (t6 == null)
          t6 = B.Color_4278190080;
        t7 = iconThemeData.get$opacity();
        if (t7 == null)
          t7 = B.IconThemeData_33L.get$opacity();
        t8 = iconThemeData.shadows;
        t1 = iconThemeData.copyWith$8$color$fill$grade$opacity$opticalSize$shadows$size$weight(t6, t2, t4, t7, t5, t8 == null ? null : t8, t1, t3);
      }
      return t1;
    },
    IconTheme__getInheritedIconThemeData(context) {
      var iconTheme = context.dependOnInheritedWidgetOfExactType$1$0(type$.IconTheme),
        t1 = iconTheme == null ? null : iconTheme.data;
      return t1 == null ? B.IconThemeData_33L : t1;
    },
    IconTheme: function IconTheme(t0, t1, t2) {
      this.data = t0;
      this.child = t1;
      this.key = t2;
    },
    IconTheme_merge_closure: function IconTheme_merge_closure(t0, t1, t2) {
      this.key = t0;
      this.data = t1;
      this.child = t2;
    },
    IconThemeData_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, _null = null;
      if (a == b && a != null)
        return a;
      t1 = a == null;
      t2 = t1 ? _null : a.size;
      t3 = b == null;
      t2 = A.lerpDouble(t2, t3 ? _null : b.size, t);
      t4 = t1 ? _null : a.fill;
      t4 = A.lerpDouble(t4, t3 ? _null : b.fill, t);
      t5 = t1 ? _null : a.weight;
      t5 = A.lerpDouble(t5, t3 ? _null : b.weight, t);
      t6 = t1 ? _null : a.grade;
      t6 = A.lerpDouble(t6, t3 ? _null : b.grade, t);
      t7 = t1 ? _null : a.opticalSize;
      t7 = A.lerpDouble(t7, t3 ? _null : b.opticalSize, t);
      t8 = t1 ? _null : a.color;
      t8 = A.Color_lerp(t8, t3 ? _null : b.color, t);
      t9 = t1 ? _null : a.get$opacity();
      t9 = A.lerpDouble(t9, t3 ? _null : b.get$opacity(), t);
      t1 = t1 ? _null : a.shadows;
      return new A.IconThemeData(t2, t4, t5, t6, t7, t8, t9, A.Shadow_lerpList(t1, t3 ? _null : b.shadows, t));
    },
    IconThemeData: function IconThemeData(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.size = t0;
      _.fill = t1;
      _.weight = t2;
      _.grade = t3;
      _.opticalSize = t4;
      _.color = t5;
      _._opacity = t6;
      _.shadows = t7;
    },
    _IconThemeData_Object_Diagnosticable: function _IconThemeData_Object_Diagnosticable() {
    },
    DecorationTween: function DecorationTween(t0, t1) {
      this.begin = t0;
      this.end = t1;
    },
    EdgeInsetsTween: function EdgeInsetsTween(t0, t1) {
      this.begin = t0;
      this.end = t1;
    },
    BorderRadiusTween: function BorderRadiusTween(t0, t1) {
      this.begin = t0;
      this.end = t1;
    },
    TextStyleTween: function TextStyleTween(t0, t1) {
      this.begin = t0;
      this.end = t1;
    },
    ImplicitlyAnimatedWidget: function ImplicitlyAnimatedWidget() {
    },
    ImplicitlyAnimatedWidgetState: function ImplicitlyAnimatedWidgetState() {
    },
    ImplicitlyAnimatedWidgetState_initState_closure: function ImplicitlyAnimatedWidgetState_initState_closure(t0) {
      this.$this = t0;
    },
    ImplicitlyAnimatedWidgetState_didUpdateWidget_closure: function ImplicitlyAnimatedWidgetState_didUpdateWidget_closure(t0) {
      this.$this = t0;
    },
    ImplicitlyAnimatedWidgetState__constructTweens_closure: function ImplicitlyAnimatedWidgetState__constructTweens_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    AnimatedWidgetBaseState: function AnimatedWidgetBaseState() {
    },
    AnimatedWidgetBaseState__handleAnimationChanged_closure: function AnimatedWidgetBaseState__handleAnimationChanged_closure() {
    },
    AnimatedDefaultTextStyle: function AnimatedDefaultTextStyle(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.child = t0;
      _.style = t1;
      _.curve = t2;
      _.duration = t3;
      _.onEnd = t4;
      _.key = t5;
    },
    _AnimatedDefaultTextStyleState: function _AnimatedDefaultTextStyleState(t0, t1) {
      var _ = this;
      _._implicit_animations$_style = null;
      _.__ImplicitlyAnimatedWidgetState__animation_AI = _.__ImplicitlyAnimatedWidgetState__controller_FI = $;
      _.SingleTickerProviderStateMixin__ticker = t0;
      _.SingleTickerProviderStateMixin__tickerModeNotifier = t1;
      _._element = _._widget = null;
    },
    _AnimatedDefaultTextStyleState_forEachTween_closure: function _AnimatedDefaultTextStyleState_forEachTween_closure() {
    },
    AnimatedPhysicalModel: function AnimatedPhysicalModel(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _.child = t0;
      _.shape = t1;
      _.clipBehavior = t2;
      _.elevation = t3;
      _.color = t4;
      _.animateColor = t5;
      _.shadowColor = t6;
      _.curve = t7;
      _.duration = t8;
      _.onEnd = t9;
      _.key = t10;
    },
    _AnimatedPhysicalModelState: function _AnimatedPhysicalModelState(t0, t1) {
      var _ = this;
      _._implicit_animations$_shadowColor = _._implicit_animations$_color = _._implicit_animations$_elevation = _._borderRadius = null;
      _.__ImplicitlyAnimatedWidgetState__animation_AI = _.__ImplicitlyAnimatedWidgetState__controller_FI = $;
      _.SingleTickerProviderStateMixin__ticker = t0;
      _.SingleTickerProviderStateMixin__tickerModeNotifier = t1;
      _._element = _._widget = null;
    },
    _AnimatedPhysicalModelState_forEachTween_closure: function _AnimatedPhysicalModelState_forEachTween_closure() {
    },
    _AnimatedPhysicalModelState_forEachTween_closure0: function _AnimatedPhysicalModelState_forEachTween_closure0() {
    },
    _AnimatedPhysicalModelState_forEachTween_closure1: function _AnimatedPhysicalModelState_forEachTween_closure1() {
    },
    _AnimatedPhysicalModelState_forEachTween_closure2: function _AnimatedPhysicalModelState_forEachTween_closure2() {
    },
    _ImplicitlyAnimatedWidgetState_State_SingleTickerProviderStateMixin: function _ImplicitlyAnimatedWidgetState_State_SingleTickerProviderStateMixin() {
    },
    InheritedModel__findModels(context, aspect, results, $T) {
      var t1,
        model = context.getElementForInheritedWidgetOfExactType$1$0($T);
      if (model == null)
        return;
      results.push(model);
      t1 = model._widget;
      t1.toString;
      $T._as(t1);
      return;
    },
    InheritedModel_inheritFrom(context, aspect, $T) {
      var models, lastModel, t1, _i, model, value;
      if (aspect == null)
        return context.dependOnInheritedWidgetOfExactType$1$0($T);
      models = A._setArrayType([], type$.JSArray_InheritedElement);
      A.InheritedModel__findModels(context, aspect, models, $T);
      if (models.length === 0)
        return null;
      lastModel = B.JSArray_methods.get$last(models);
      for (t1 = models.length, _i = 0; _i < models.length; models.length === t1 || (0, A.throwConcurrentModificationError)(models), ++_i) {
        model = models[_i];
        value = $T._as(context.dependOnInheritedElement$2$aspect(model, aspect));
        if (model.$eq(0, lastModel))
          return value;
      }
      return null;
    },
    InheritedModel: function InheritedModel() {
    },
    InheritedModelElement: function InheritedModelElement(t0, t1, t2, t3) {
      var _ = this;
      _._dependents = t0;
      _._slot = _._notificationTree = _._parent = _._framework$_child = null;
      _.__Element__depth_A = $;
      _._widget = t1;
      _._owner = null;
      _._lifecycleState = t2;
      _._dependencies = _._inheritedElements = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._inDirtyList = false;
      _.$ti = t3;
    },
    InheritedNotifier: function InheritedNotifier() {
    },
    _InheritedNotifierElement: function _InheritedNotifierElement(t0, t1, t2, t3) {
      var _ = this;
      _._inherited_notifier$_dirty = false;
      _._dependents = t0;
      _._slot = _._notificationTree = _._parent = _._framework$_child = null;
      _.__Element__depth_A = $;
      _._widget = t1;
      _._owner = null;
      _._lifecycleState = t2;
      _._dependencies = _._inheritedElements = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._inDirtyList = false;
      _.$ti = t3;
    },
    InheritedTheme: function InheritedTheme() {
    },
    _reportException0(context, exception, stack, informationCollector) {
      var details = new A.FlutterErrorDetails(exception, stack, "widgets library", context, informationCollector, false);
      A.FlutterError_reportError(details);
      return details;
    },
    ConstrainedLayoutBuilder: function ConstrainedLayoutBuilder() {
    },
    _LayoutBuilderElement: function _LayoutBuilderElement(t0, t1, t2) {
      var _ = this;
      _._slot = _._notificationTree = _._parent = _._ancestorRenderObjectElement = _._renderObject = _._layout_builder$_child = null;
      _.__Element__depth_A = $;
      _._widget = t0;
      _._owner = null;
      _._lifecycleState = t1;
      _._dependencies = _._inheritedElements = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._inDirtyList = false;
      _.$ti = t2;
    },
    _LayoutBuilderElement__layout_layoutCallback: function _LayoutBuilderElement__layout_layoutCallback(t0, t1) {
      this.$this = t0;
      this.constraints = t1;
    },
    _LayoutBuilderElement__layout_layoutCallback_closure: function _LayoutBuilderElement__layout_layoutCallback_closure() {
    },
    _LayoutBuilderElement__layout_layoutCallback_closure0: function _LayoutBuilderElement__layout_layoutCallback_closure0() {
    },
    RenderConstrainedLayoutBuilder: function RenderConstrainedLayoutBuilder() {
    },
    LayoutBuilder: function LayoutBuilder(t0, t1) {
      this.builder = t0;
      this.key = t1;
    },
    _RenderLayoutBuilder: function _RenderLayoutBuilder(t0, t1, t2, t3, t4) {
      var _ = this;
      _.RenderConstrainedLayoutBuilder__callback = t0;
      _.RenderConstrainedLayoutBuilder__needsBuild = t1;
      _.RenderConstrainedLayoutBuilder__previousConstraints = t2;
      _.RenderObjectWithChildMixin__child = t3;
      _.parentData = _._cachedBaselines = _._size = _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t4;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    __RenderLayoutBuilder_RenderBox_RenderObjectWithChildMixin: function __RenderLayoutBuilder_RenderBox_RenderObjectWithChildMixin() {
    },
    __RenderLayoutBuilder_RenderBox_RenderObjectWithChildMixin_RenderConstrainedLayoutBuilder: function __RenderLayoutBuilder_RenderBox_RenderObjectWithChildMixin_RenderConstrainedLayoutBuilder() {
    },
    FixedExtentScrollController$(initialItem) {
      return new A.FixedExtentScrollController(initialItem, A._setArrayType([], type$.JSArray_ScrollPosition), $.$get$ChangeNotifier__emptyListeners());
    },
    ListWheelChildDelegate: function ListWheelChildDelegate() {
    },
    ListWheelChildListDelegate: function ListWheelChildListDelegate(t0) {
      this.children = t0;
    },
    ListWheelChildLoopingListDelegate: function ListWheelChildLoopingListDelegate(t0) {
      this.children = t0;
    },
    FixedExtentScrollController: function FixedExtentScrollController(t0, t1, t2) {
      var _ = this;
      _.initialItem = t0;
      _._positions = t1;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t2;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
    },
    FixedExtentMetrics: function FixedExtentMetrics(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.itemIndex = t0;
      _._minScrollExtent = t1;
      _._maxScrollExtent = t2;
      _._pixels = t3;
      _._scroll_metrics$_viewportDimension = t4;
      _.axisDirection = t5;
      _.devicePixelRatio = t6;
    },
    _FixedExtentScrollPosition: function _FixedExtentScrollPosition(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._heldPreviousVelocity = 0;
      _._userScrollDirection = t0;
      _._currentDrag = null;
      _.physics = t1;
      _.context = t2;
      _.keepScrollOffset = t3;
      _.debugLabel = t4;
      _._viewportDimension = _._scroll_position$_pixels = _._scroll_position$_maxScrollExtent = _._scroll_position$_minScrollExtent = null;
      _._haveDimensions = false;
      _._didChangeViewportDimensionOrReceiveCorrection = true;
      _._pendingDimensions = false;
      _._scroll_position$_lastMetrics = null;
      _._haveScheduledUpdateNotification = false;
      _._semanticActions = _._lastAxis = null;
      _.isScrollingNotifier = t5;
      _._activity = null;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t6;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
    },
    _FixedExtentScrollable: function _FixedExtentScrollable(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.itemExtent = t0;
      _.controller = t1;
      _.physics = t2;
      _.viewportBuilder = t3;
      _.restorationId = t4;
      _.scrollBehavior = t5;
      _.key = t6;
    },
    _FixedExtentScrollableState: function _FixedExtentScrollableState(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11) {
      var _ = this;
      _._scrollable$_position = null;
      _._persistedScrollOffset = t0;
      _.__ScrollableState__configuration_A = $;
      _._mediaQueryGestureSettings = _._fallbackScrollController = _._physics = null;
      _._scrollSemanticsKey = t1;
      _._gestureDetectorKey = t2;
      _._ignorePointerKey = t3;
      _._gestureRecognizers = t4;
      _._shouldIgnorePointer = false;
      _._hold = _._scrollable$_drag = _._scrollable$_lastAxisDirection = _._lastCanDrag = null;
      _.RestorationMixin__bucket = t5;
      _.RestorationMixin__properties = t6;
      _.RestorationMixin__debugPropertiesWaitingForReregistration = t7;
      _.RestorationMixin__firstRestorePending = t8;
      _.RestorationMixin__currentParent = t9;
      _.TickerProviderStateMixin__tickers = t10;
      _.TickerProviderStateMixin__tickerModeNotifier = t11;
      _._element = _._widget = null;
    },
    FixedExtentScrollPhysics: function FixedExtentScrollPhysics(t0) {
      this.parent = t0;
    },
    ListWheelScrollView: function ListWheelScrollView(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11) {
      var _ = this;
      _.controller = t0;
      _.physics = t1;
      _.diameterRatio = t2;
      _.offAxisFraction = t3;
      _.useMagnifier = t4;
      _.magnification = t5;
      _.overAndUnderCenterOpacity = t6;
      _.itemExtent = t7;
      _.squeeze = t8;
      _.onSelectedItemChanged = t9;
      _.childDelegate = t10;
      _.key = t11;
    },
    _ListWheelScrollViewState: function _ListWheelScrollViewState() {
      var _ = this;
      _._lastReportedItemIndex = 0;
      _._element = _._widget = _.scrollController = null;
    },
    _ListWheelScrollViewState_didUpdateWidget_closure: function _ListWheelScrollViewState_didUpdateWidget_closure(t0) {
      this.oldScrollController = t0;
    },
    _ListWheelScrollViewState_build_closure: function _ListWheelScrollViewState_build_closure(t0) {
      this.$this = t0;
    },
    ListWheelElement: function ListWheelElement(t0, t1, t2, t3) {
      var _ = this;
      _._childWidgets = t0;
      _._childElements = t1;
      _._slot = _._notificationTree = _._parent = _._ancestorRenderObjectElement = _._renderObject = null;
      _.__Element__depth_A = $;
      _._widget = t2;
      _._owner = null;
      _._lifecycleState = t3;
      _._dependencies = _._inheritedElements = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._inDirtyList = false;
    },
    ListWheelElement_retrieveWidget_closure: function ListWheelElement_retrieveWidget_closure(t0, t1) {
      this.$this = t0;
      this.index = t1;
    },
    ListWheelElement_createChild_closure: function ListWheelElement_createChild_closure(t0, t1, t2) {
      this.$this = t0;
      this.after = t1;
      this.index = t2;
    },
    ListWheelElement_removeChild_closure: function ListWheelElement_removeChild_closure(t0, t1) {
      this.$this = t0;
      this.index = t1;
    },
    ListWheelElement_visitChildren_closure: function ListWheelElement_visitChildren_closure(t0) {
      this.visitor = t0;
    },
    ListWheelViewport: function ListWheelViewport(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12) {
      var _ = this;
      _.diameterRatio = t0;
      _.perspective = t1;
      _.offAxisFraction = t2;
      _.useMagnifier = t3;
      _.magnification = t4;
      _.overAndUnderCenterOpacity = t5;
      _.itemExtent = t6;
      _.squeeze = t7;
      _.renderChildrenOutsideViewport = t8;
      _.offset = t9;
      _.childDelegate = t10;
      _.clipBehavior = t11;
      _.key = t12;
    },
    _loadAll(locale, allDelegates) {
      var types, delegates, _i, delegate, t3, t4, inputValue, futureValue, _box_1 = {},
        t1 = type$.Type,
        t2 = type$.dynamic,
        output = A.LinkedHashMap_LinkedHashMap$_empty(t1, t2);
      _box_1.pendingList = null;
      types = A.LinkedHashSet_LinkedHashSet$_empty(t1);
      delegates = A._setArrayType([], type$.JSArray_LocalizationsDelegate_dynamic);
      for (t1 = allDelegates.length, _i = 0; _i < allDelegates.length; allDelegates.length === t1 || (0, A.throwConcurrentModificationError)(allDelegates), ++_i) {
        delegate = allDelegates[_i];
        t3 = A._instanceType(delegate)._eval$1("LocalizationsDelegate.T");
        if (!types.contains$1(0, A.createRuntimeType(t3)) && delegate.isSupported$1(locale)) {
          types.add$1(0, A.createRuntimeType(t3));
          delegates.push(delegate);
        }
      }
      for (t1 = delegates.length, t3 = type$.JSArray__Pending, _i = 0; _i < delegates.length; delegates.length === t1 || (0, A.throwConcurrentModificationError)(delegates), ++_i) {
        t4 = {};
        delegate = delegates[_i];
        inputValue = delegate.load$1(locale);
        t4.completedValue = null;
        futureValue = inputValue.then$1$1(new A._loadAll_closure(t4), t2);
        if (t4.completedValue != null)
          output.$indexSet(0, A.createRuntimeType(A._instanceType(delegate)._eval$1("LocalizationsDelegate.T")), t4.completedValue);
        else {
          t4 = _box_1.pendingList;
          if (t4 == null)
            t4 = _box_1.pendingList = A._setArrayType([], t3);
          t4.push(new A._Pending(delegate, futureValue));
        }
      }
      t1 = _box_1.pendingList;
      if (t1 == null)
        return new A.SynchronousFuture(output, type$.SynchronousFuture_Map_Type_dynamic);
      return A.Future_wait(new A.MappedListIterable(t1, new A._loadAll_closure0(), A._arrayInstanceType(t1)._eval$1("MappedListIterable<1,Future<@>>")), t2).then$1$1(new A._loadAll_closure1(_box_1, output), type$.Map_Type_dynamic);
    },
    Localizations_maybeLocaleOf(context) {
      var scope = context.dependOnInheritedWidgetOfExactType$1$0(type$._LocalizationsScope);
      return scope == null ? null : scope.localizationsState._localizations$_locale;
    },
    Localizations_of(context, type, $T) {
      var scope = context.dependOnInheritedWidgetOfExactType$1$0(type$._LocalizationsScope);
      return scope == null ? null : $T._eval$1("0?")._as(scope.localizationsState._typeToResources.$index(0, type));
    },
    _Pending: function _Pending(t0, t1) {
      this.delegate = t0;
      this.futureValue = t1;
    },
    _loadAll_closure: function _loadAll_closure(t0) {
      this._box_0 = t0;
    },
    _loadAll_closure0: function _loadAll_closure0() {
    },
    _loadAll_closure1: function _loadAll_closure1(t0, t1) {
      this._box_1 = t0;
      this.output = t1;
    },
    LocalizationsDelegate: function LocalizationsDelegate() {
    },
    _WidgetsLocalizationsDelegate: function _WidgetsLocalizationsDelegate() {
    },
    DefaultWidgetsLocalizations: function DefaultWidgetsLocalizations() {
    },
    _LocalizationsScope: function _LocalizationsScope(t0, t1, t2, t3) {
      var _ = this;
      _.localizationsState = t0;
      _.typeToResources = t1;
      _.child = t2;
      _.key = t3;
    },
    Localizations: function Localizations(t0, t1, t2, t3) {
      var _ = this;
      _.locale = t0;
      _.delegates = t1;
      _.child = t2;
      _.key = t3;
    },
    _LocalizationsState: function _LocalizationsState(t0, t1) {
      var _ = this;
      _._localizedResourcesScopeKey = t0;
      _._typeToResources = t1;
      _._element = _._widget = _._localizations$_locale = null;
    },
    _LocalizationsState_load_closure: function _LocalizationsState_load_closure(t0) {
      this._box_0 = t0;
    },
    _LocalizationsState_load_closure0: function _LocalizationsState_load_closure0(t0, t1) {
      this.$this = t0;
      this.locale = t1;
    },
    _LocalizationsState_load__closure: function _LocalizationsState_load__closure(t0, t1, t2) {
      this.$this = t0;
      this.value = t1;
      this.locale = t2;
    },
    LookupBoundary_dependOnInheritedWidgetOfExactType(context, $T) {
      var candidate, t1;
      context.dependOnInheritedWidgetOfExactType$1$0(type$.LookupBoundary);
      candidate = A.LookupBoundary_getElementForInheritedWidgetOfExactType(context, $T);
      if (candidate == null)
        return null;
      context.super$Element$dependOnInheritedElement(candidate, null);
      t1 = candidate._widget;
      t1.toString;
      return $T._as(t1);
    },
    LookupBoundary_getElementForInheritedWidgetOfExactType(context, $T) {
      var boundary, t1, t2,
        candidate = context.getElementForInheritedWidgetOfExactType$1$0($T);
      if (candidate == null)
        return null;
      boundary = context.getElementForInheritedWidgetOfExactType$1$0(type$.LookupBoundary);
      if (boundary != null) {
        t1 = boundary.__Element__depth_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
        t2 = candidate.__Element__depth_A;
        t2 === $ && A.throwUnnamedLateFieldNI();
        t2 = t1 > t2;
        t1 = t2;
      } else
        t1 = false;
      if (t1)
        return null;
      return candidate;
    },
    LookupBoundary_findAncestorStateOfType(context, $T) {
      var t1 = {};
      t1.target = null;
      context.visitAncestorElements$1(new A.LookupBoundary_findAncestorStateOfType_closure(t1, $T));
      t1 = t1.target;
      if (t1 == null)
        t1 = null;
      else {
        t1 = t1._framework$_state;
        t1.toString;
      }
      return $T._eval$1("0?")._as(t1);
    },
    LookupBoundary_findAncestorRenderObjectOfType(context, $T) {
      var t1 = {};
      t1.target = null;
      context.visitAncestorElements$1(new A.LookupBoundary_findAncestorRenderObjectOfType_closure(t1, $T));
      t1 = t1.target;
      t1 = t1 == null ? null : t1.get$renderObject();
      return $T._eval$1("0?")._as(t1);
    },
    LookupBoundary_findAncestorStateOfType_closure: function LookupBoundary_findAncestorStateOfType_closure(t0, t1) {
      this._box_0 = t0;
      this.T = t1;
    },
    LookupBoundary_findAncestorRenderObjectOfType_closure: function LookupBoundary_findAncestorRenderObjectOfType_closure(t0, t1) {
      this._box_0 = t0;
      this.T = t1;
    },
    MediaQuery$(child, data, key) {
      return new A.MediaQuery(data, child, key);
    },
    MediaQuery__maybeOf(context, aspect) {
      var t1 = A.InheritedModel_inheritFrom(context, aspect, type$.MediaQuery);
      return t1 == null ? null : t1.data;
    },
    Orientation: function Orientation(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    _MediaQueryAspect: function _MediaQueryAspect(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    MediaQueryData: function MediaQueryData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16) {
      var _ = this;
      _.size = t0;
      _.devicePixelRatio = t1;
      _.textScaleFactor = t2;
      _.platformBrightness = t3;
      _.viewInsets = t4;
      _.padding = t5;
      _.viewPadding = t6;
      _.systemGestureInsets = t7;
      _.alwaysUse24HourFormat = t8;
      _.accessibleNavigation = t9;
      _.invertColors = t10;
      _.highContrast = t11;
      _.disableAnimations = t12;
      _.boldText = t13;
      _.navigationMode = t14;
      _.gestureSettings = t15;
      _.displayFeatures = t16;
    },
    MediaQuery: function MediaQuery(t0, t1, t2) {
      this.data = t0;
      this.child = t1;
      this.key = t2;
    },
    NavigationMode: function NavigationMode(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    _MediaQueryFromView: function _MediaQueryFromView(t0, t1, t2) {
      this.view = t0;
      this.child = t1;
      this.key = t2;
    },
    _MediaQueryFromViewState: function _MediaQueryFromViewState() {
      var _ = this;
      _._element = _._widget = _._media_query$_data = _._parentData = null;
    },
    _MediaQueryFromViewState__updateData_closure: function _MediaQueryFromViewState__updateData_closure(t0, t1) {
      this.$this = t0;
      this.newData = t1;
    },
    __MediaQueryFromViewState_State_WidgetsBindingObserver: function __MediaQueryFromViewState_State_WidgetsBindingObserver() {
    },
    ModalBarrier$(barrierSemanticsDismissible, clipDetailsNotifier, color, dismissible, onDismiss, semanticsLabel, semanticsOnTapHint) {
      return new A.ModalBarrier(color, false, onDismiss, true, semanticsLabel, clipDetailsNotifier, semanticsOnTapHint, null);
    },
    ModalBarrier: function ModalBarrier(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.color = t0;
      _.dismissible = t1;
      _.onDismiss = t2;
      _.barrierSemanticsDismissible = t3;
      _.semanticsLabel = t4;
      _.clipDetailsNotifier = t5;
      _.semanticsOnTapHint = t6;
      _.key = t7;
    },
    ModalBarrier_build_handleDismiss: function ModalBarrier_build_handleDismiss(t0, t1) {
      this.$this = t0;
      this.context = t1;
    },
    _AnyTapGestureRecognizer: function _AnyTapGestureRecognizer(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.onAnyTapUp = null;
      _._wonArenaForPrimaryPointer = _._sentTapDown = false;
      _._up = _._down = null;
      _.deadline = t0;
      _.postAcceptSlopTolerance = t1;
      _._recognizer$_state = t2;
      _._initialPosition = _._primaryPointer = null;
      _._gestureAccepted = false;
      _._recognizer$_timer = null;
      _._entries = t3;
      _._trackedPointers = t4;
      _._team = null;
      _.debugOwner = t5;
      _.gestureSettings = null;
      _.supportedDevices = t6;
      _._allowedButtonsFilter = t7;
      _._pointerToKind = t8;
    },
    _AnyTapGestureRecognizerFactory: function _AnyTapGestureRecognizerFactory(t0) {
      this.onAnyTapUp = t0;
    },
    _ModalBarrierGestureDetector: function _ModalBarrierGestureDetector(t0, t1, t2) {
      this.child = t0;
      this.onDismiss = t1;
      this.key = t2;
    },
    NavigationToolbar: function NavigationToolbar(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.leading = t0;
      _.middle = t1;
      _.trailing = t2;
      _.centerMiddle = t3;
      _.middleSpacing = t4;
      _.key = t5;
    },
    _ToolbarSlot: function _ToolbarSlot(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    _ToolbarLayout: function _ToolbarLayout(t0, t1, t2) {
      var _ = this;
      _.centerMiddle = t0;
      _.middleSpacing = t1;
      _.textDirection = t2;
      _._idToChild = null;
    },
    Navigator_maybePop(context) {
      return A.Navigator_of(context).maybePop$1(null);
    },
    Navigator_of(context) {
      var t1, $navigator;
      if (context instanceof A.StatefulElement) {
        t1 = context._framework$_state;
        t1.toString;
        t1 = t1 instanceof A.NavigatorState;
      } else
        t1 = false;
      if (t1) {
        t1 = context._framework$_state;
        t1.toString;
        type$.NavigatorState._as(t1);
        $navigator = t1;
      } else
        $navigator = null;
      if ($navigator == null)
        $navigator = context.findAncestorStateOfType$1$0(type$.NavigatorState);
      $navigator.toString;
      return $navigator;
    },
    Navigator_defaultGenerateInitialRoutes($navigator, initialRouteName) {
      var t1, routeParts, t2, routeName, _i, _null = null,
        result = A._setArrayType([], type$.JSArray_nullable_Route_dynamic);
      if (B.JSString_methods.startsWith$1(initialRouteName, "/") && initialRouteName.length > 1) {
        initialRouteName = B.JSString_methods.substring$1(initialRouteName, 1);
        t1 = type$.dynamic;
        result.push($navigator._routeNamed$1$3$allowNull$arguments("/", true, _null, t1));
        routeParts = initialRouteName.split("/");
        if (initialRouteName.length !== 0)
          for (t2 = routeParts.length, routeName = "", _i = 0; _i < t2; ++_i) {
            routeName += "/" + routeParts[_i];
            result.push($navigator._routeNamed$1$3$allowNull$arguments(routeName, true, _null, t1));
          }
        if (B.JSArray_methods.get$last(result) == null)
          B.JSArray_methods.clear$0(result);
      } else if (initialRouteName !== "/")
        result.push($navigator._routeNamed$1$3$allowNull$arguments(initialRouteName, true, _null, type$.dynamic));
      B.JSArray_methods.removeWhere$1(result, new A.Navigator_defaultGenerateInitialRoutes_closure());
      if (result.length === 0)
        result.push($navigator._routeNamed$1$2$arguments("/", _null, type$.dynamic));
      return new A.CastList(result, type$.CastList_of_nullable_Route_dynamic_and_Route_dynamic);
    },
    _RouteEntry$(route, initialState, pageBased, restorationInformation) {
      var t1 = $.$get$_RouteEntry_notAnnounced();
      return new A._RouteEntry(route, restorationInformation, pageBased, initialState, t1, t1, t1);
    },
    _RouteEntry_isPresentPredicate(entry) {
      return entry.get$isPresent();
    },
    _RouteEntry_suitableForTransitionAnimationPredicate(entry) {
      var t1 = entry.currentState.index;
      return t1 <= 10 && t1 >= 3;
    },
    _RouteEntry_willBePresentPredicate(entry) {
      return entry.get$willBePresent();
    },
    _RouteEntry_isRoutePredicate(route) {
      return new A._RouteEntry_isRoutePredicate_closure(route);
    },
    _RestorationInformation__RestorationInformation$fromSerializableData(data) {
      var t1, t2, t3;
      type$.List_nullable_Object._as(data);
      t1 = J.getInterceptor$asx(data);
      t2 = t1.$index(data, 0);
      t2.toString;
      switch (B.List_5Hu[A._asInt(t2)].index) {
        case 0:
          t1 = t1.sublist$1(data, 1);
          t2 = t1[0];
          t2.toString;
          A._asInt(t2);
          t3 = t1[1];
          t3.toString;
          A._asString(t3);
          return new A._NamedRestorationInformation(t2, t3, t1.length > 2 ? t1[2] : null, B._RouteRestorationType_0);
        case 1:
          t1 = t1.sublist$1(data, 1);
          t2 = t1[1];
          t2.toString;
          t2 = A.PluginUtilities_getCallbackFromHandle(new A.CallbackHandle(A._asInt(t2)));
          t2.toString;
          type$.Route_dynamic_Function_2_BuildContext_and_nullable_Object._as(t2);
          t3 = t1[0];
          t3.toString;
          A._asInt(t3);
          return new A._AnonymousRestorationInformation(t3, t2, t1.length > 2 ? t1[2] : null, B._RouteRestorationType_1);
      }
    },
    RoutePopDisposition: function RoutePopDisposition(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    Route: function Route() {
    },
    Route_didPush_closure: function Route_didPush_closure(t0) {
      this.$this = t0;
    },
    Route_didAdd_closure: function Route_didAdd_closure(t0) {
      this.$this = t0;
    },
    Route_isCurrent_closure: function Route_isCurrent_closure() {
    },
    Route_isCurrent_closure0: function Route_isCurrent_closure0() {
    },
    Route_isFirst_closure: function Route_isFirst_closure() {
    },
    Route_isFirst_closure0: function Route_isFirst_closure0() {
    },
    Route_isActive_closure: function Route_isActive_closure(t0) {
      this.$this = t0;
    },
    Route_isActive_closure0: function Route_isActive_closure0() {
    },
    RouteSettings: function RouteSettings(t0, t1) {
      this.name = t0;
      this.$arguments = t1;
    },
    NavigatorObserver: function NavigatorObserver() {
    },
    HeroControllerScope: function HeroControllerScope(t0, t1, t2) {
      this.controller = t0;
      this.child = t1;
      this.key = t2;
    },
    RouteTransitionRecord: function RouteTransitionRecord() {
    },
    TransitionDelegate: function TransitionDelegate() {
    },
    DefaultTransitionDelegate: function DefaultTransitionDelegate() {
    },
    Navigator: function Navigator(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.initialRoute = t0;
      _.onGenerateRoute = t1;
      _.onUnknownRoute = t2;
      _.observers = t3;
      _.restorationScopeId = t4;
      _.onGenerateInitialRoutes = t5;
      _.reportsRouteUpdateToEngine = t6;
      _.clipBehavior = t7;
      _.key = t8;
    },
    Navigator_defaultGenerateInitialRoutes_closure: function Navigator_defaultGenerateInitialRoutes_closure() {
    },
    _RouteLifecycle: function _RouteLifecycle(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    _NotAnnounced: function _NotAnnounced(t0, t1, t2) {
      var _ = this;
      _._navigator = null;
      _._settings = t0;
      _._restorationScopeId = t1;
      _._popCompleter = t2;
    },
    _RouteEntry: function _RouteEntry(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.route = t0;
      _.restorationInformation = t1;
      _.pageBased = t2;
      _.currentState = t3;
      _.lastAnnouncedPreviousRoute = t4;
      _.lastAnnouncedPoppedNextRoute = t5;
      _.lastAnnouncedNextRoute = t6;
      _.pendingResult = null;
      _._reportRemovalToObserver = true;
      _._isWaitingForExitingDecision = false;
    },
    _RouteEntry_handlePush_closure: function _RouteEntry_handlePush_closure(t0, t1) {
      this.$this = t0;
      this.navigator = t1;
    },
    _RouteEntry_dispose_closure: function _RouteEntry_dispose_closure() {
    },
    _RouteEntry_dispose_closure0: function _RouteEntry_dispose_closure0(t0, t1, t2, t3) {
      var _ = this;
      _._box_0 = t0;
      _.$this = t1;
      _.entry = t2;
      _.listener = t3;
    },
    _RouteEntry_isRoutePredicate_closure: function _RouteEntry_isRoutePredicate_closure(t0) {
      this.route = t0;
    },
    _NavigatorObservation: function _NavigatorObservation() {
    },
    _NavigatorPushObservation: function _NavigatorPushObservation(t0, t1) {
      this.primaryRoute = t0;
      this.secondaryRoute = t1;
    },
    _NavigatorPopObservation: function _NavigatorPopObservation(t0, t1) {
      this.primaryRoute = t0;
      this.secondaryRoute = t1;
    },
    _NavigatorRemoveObservation: function _NavigatorRemoveObservation(t0, t1) {
      this.primaryRoute = t0;
      this.secondaryRoute = t1;
    },
    _NavigatorReplaceObservation: function _NavigatorReplaceObservation(t0, t1) {
      this.primaryRoute = t0;
      this.secondaryRoute = t1;
    },
    NavigatorState: function NavigatorState(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14) {
      var _ = this;
      _.__NavigatorState__overlayKey_A = $;
      _._history = t0;
      _._serializableHistory = t1;
      _._observedRouteAdditions = t2;
      _._observedRouteDeletions = t3;
      _.focusNode = t4;
      _._heroControllerFromScope = null;
      _.__NavigatorState__effectiveObservers_A = $;
      _._rawNextPagelessRestorationScopeId = t5;
      _._lastAnnouncedRouteName = null;
      _._flushingHistory = false;
      _._userGesturesInProgressCount = 0;
      _.userGestureInProgressNotifier = t6;
      _._activePointers = t7;
      _.RestorationMixin__bucket = t8;
      _.RestorationMixin__properties = t9;
      _.RestorationMixin__debugPropertiesWaitingForReregistration = t10;
      _.RestorationMixin__firstRestorePending = t11;
      _.RestorationMixin__currentParent = t12;
      _.TickerProviderStateMixin__tickers = t13;
      _.TickerProviderStateMixin__tickerModeNotifier = t14;
      _._element = _._widget = null;
    },
    NavigatorState_restoreState_closure: function NavigatorState_restoreState_closure(t0) {
      this.$this = t0;
    },
    NavigatorState__flushHistoryUpdates_closure: function NavigatorState__flushHistoryUpdates_closure() {
    },
    NavigatorState__flushHistoryUpdates_closure0: function NavigatorState__flushHistoryUpdates_closure0() {
    },
    NavigatorState_maybePop_closure: function NavigatorState_maybePop_closure() {
    },
    NavigatorState_maybePop_closure0: function NavigatorState_maybePop_closure0() {
    },
    NavigatorState_maybePop_closure1: function NavigatorState_maybePop_closure1() {
    },
    NavigatorState_maybePop_closure2: function NavigatorState_maybePop_closure2() {
    },
    NavigatorState__cancelActivePointers_closure: function NavigatorState__cancelActivePointers_closure(t0) {
      this.absorber = t0;
    },
    _RouteRestorationType: function _RouteRestorationType(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    _RestorationInformation: function _RestorationInformation() {
    },
    _NamedRestorationInformation: function _NamedRestorationInformation(t0, t1, t2, t3) {
      var _ = this;
      _.restorationScopeId = t0;
      _.name = t1;
      _.$arguments = t2;
      _.type = t3;
      _._serializableData = null;
    },
    _AnonymousRestorationInformation: function _AnonymousRestorationInformation(t0, t1, t2, t3) {
      var _ = this;
      _.restorationScopeId = t0;
      _.routeBuilder = t1;
      _.$arguments = t2;
      _.type = t3;
      _._serializableData = null;
    },
    _HistoryProperty: function _HistoryProperty(t0) {
      var _ = this;
      _._pageToPagelessRoutes = null;
      _._disposed = false;
      _._restoration0$_owner = _._restoration0$_restorationId = null;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t0;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
    },
    _HistoryProperty_fromPrimitives_closure: function _HistoryProperty_fromPrimitives_closure() {
    },
    _NavigatorState_State_TickerProviderStateMixin_RestorationMixin_dispose_closure: function _NavigatorState_State_TickerProviderStateMixin_RestorationMixin_dispose_closure() {
    },
    _NavigatorState_State_TickerProviderStateMixin: function _NavigatorState_State_TickerProviderStateMixin() {
    },
    _NavigatorState_State_TickerProviderStateMixin_RestorationMixin: function _NavigatorState_State_TickerProviderStateMixin_RestorationMixin() {
    },
    Notification: function Notification() {
    },
    NotificationListener: function NotificationListener(t0, t1, t2, t3) {
      var _ = this;
      _.onNotification = t0;
      _.child = t1;
      _.key = t2;
      _.$ti = t3;
    },
    _NotificationElement: function _NotificationElement(t0, t1, t2) {
      var _ = this;
      _._slot = _._notificationTree = _._parent = _._framework$_child = null;
      _.__Element__depth_A = $;
      _._widget = t0;
      _._owner = null;
      _._lifecycleState = t1;
      _._dependencies = _._inheritedElements = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._inDirtyList = false;
      _.$ti = t2;
    },
    LayoutChangedNotification: function LayoutChangedNotification() {
    },
    __NotificationElement_ProxyElement_NotifiableElementMixin: function __NotificationElement_ProxyElement_NotifiableElementMixin() {
    },
    OverlayEntry$(builder, maintainState) {
      return new A.OverlayEntry(builder, maintainState, A.ValueNotifier$(null), new A.LabeledGlobalKey(null, type$.LabeledGlobalKey__OverlayEntryWidgetState));
    },
    _RenderTheater__detachChild(child) {
      return child.detach$0();
    },
    OverlayEntry: function OverlayEntry(t0, t1, t2, t3) {
      var _ = this;
      _.builder = t0;
      _._opaque = false;
      _._maintainState = t1;
      _._overlayEntryStateNotifier = t2;
      _._overlay = null;
      _._key = t3;
      _._disposedByOwner = false;
    },
    OverlayEntry_remove_closure: function OverlayEntry_remove_closure(t0) {
      this.overlay = t0;
    },
    _OverlayEntryWidget: function _OverlayEntryWidget(t0, t1, t2, t3) {
      var _ = this;
      _.entry = t0;
      _.overlayState = t1;
      _.tickerEnabled = t2;
      _.key = t3;
    },
    _OverlayEntryWidgetState: function _OverlayEntryWidgetState() {
      var _ = this;
      _.___OverlayEntryWidgetState__theater_A = $;
      _._sortedTheaterSiblings = null;
      _.___OverlayEntryWidgetState__hitTestOrderIterable_FI = _.___OverlayEntryWidgetState__paintOrderIterable_FI = $;
      _._element = _._widget = null;
    },
    _OverlayEntryWidgetState__markNeedsBuild_closure: function _OverlayEntryWidgetState__markNeedsBuild_closure() {
    },
    Overlay: function Overlay(t0, t1, t2) {
      this.initialEntries = t0;
      this.clipBehavior = t1;
      this.key = t2;
    },
    OverlayState: function OverlayState(t0, t1, t2) {
      var _ = this;
      _._overlay$_entries = t0;
      _.TickerProviderStateMixin__tickers = t1;
      _.TickerProviderStateMixin__tickerModeNotifier = t2;
      _._element = _._widget = null;
    },
    OverlayState_insert_closure: function OverlayState_insert_closure(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.below = t1;
      _.above = t2;
      _.entry = t3;
    },
    OverlayState_insertAll_closure: function OverlayState_insertAll_closure(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.below = t1;
      _.above = t2;
      _.entries = t3;
    },
    OverlayState_rearrange_closure: function OverlayState_rearrange_closure(t0, t1, t2, t3, t4) {
      var _ = this;
      _.$this = t0;
      _.newEntriesList = t1;
      _.old = t2;
      _.below = t3;
      _.above = t4;
    },
    OverlayState__markDirty_closure: function OverlayState__markDirty_closure() {
    },
    OverlayState__didChangeEntryOpacity_closure: function OverlayState__didChangeEntryOpacity_closure() {
    },
    _Theater: function _Theater(t0, t1, t2, t3) {
      var _ = this;
      _.skipCount = t0;
      _.clipBehavior = t1;
      _.children = t2;
      _.key = t3;
    },
    _TheaterElement: function _TheaterElement(t0, t1, t2) {
      var _ = this;
      _.__MultiChildRenderObjectElement__children_A = $;
      _._forgottenChildren = t0;
      _._slot = _._notificationTree = _._parent = _._ancestorRenderObjectElement = _._renderObject = null;
      _.__Element__depth_A = $;
      _._widget = t1;
      _._owner = null;
      _._lifecycleState = t2;
      _._dependencies = _._inheritedElements = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._inDirtyList = false;
    },
    _RenderTheaterMixin: function _RenderTheaterMixin() {
    },
    _RenderTheaterMixin_hitTestChildren_childHitTest: function _RenderTheaterMixin_hitTestChildren_childHitTest(t0) {
      this.localChild = t0;
    },
    _TheaterParentData: function _TheaterParentData(t0, t1, t2) {
      var _ = this;
      _.height = _.width = _.left = _.bottom = _.right = _.top = _.overlayEntry = null;
      _.ContainerParentDataMixin_previousSibling = t0;
      _.ContainerParentDataMixin_nextSibling = t1;
      _.offset = t2;
    },
    _RenderTheater: function _RenderTheater(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _._alignmentCache = null;
      _._overlay$_textDirection = t0;
      _._overlay$_skipCount = t1;
      _._overlay$_clipBehavior = t2;
      _._clipRectLayer = t3;
      _.ContainerRenderObjectMixin__childCount = t4;
      _.ContainerRenderObjectMixin__firstChild = t5;
      _.ContainerRenderObjectMixin__lastChild = t6;
      _.parentData = _._cachedBaselines = _._size = _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t7;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    _RenderTheaterMarker: function _RenderTheaterMarker(t0, t1, t2, t3) {
      var _ = this;
      _.theater = t0;
      _.overlayEntryWidgetState = t1;
      _.child = t2;
      _.key = t3;
    },
    _OverlayState_State_TickerProviderStateMixin: function _OverlayState_State_TickerProviderStateMixin() {
    },
    __RenderTheater_RenderBox_ContainerRenderObjectMixin: function __RenderTheater_RenderBox_ContainerRenderObjectMixin() {
    },
    __RenderTheater_RenderBox_ContainerRenderObjectMixin__RenderTheaterMixin: function __RenderTheater_RenderBox_ContainerRenderObjectMixin__RenderTheaterMixin() {
    },
    _GlowController$(axis, color, vsync) {
      var t6, decelerator, _null = null,
        t1 = type$.Tween_double,
        t2 = new A.Tween(0, 0, t1),
        t3 = new A.Tween(0, 0, t1),
        t4 = new A._GlowController(B._GlowState_0, t2, t3, color, axis, $.$get$ChangeNotifier__emptyListeners()),
        t5 = A.AnimationController$(_null, _null, _null, _null, vsync);
      t5.didRegisterListener$0();
      t6 = t5.AnimationLocalStatusListenersMixin__statusListeners;
      t6._isDirty = true;
      t6._observer_list$_list.push(t4.get$_changePhase());
      t4.___GlowController__glowController_F !== $ && A.throwUnnamedLateFieldAI();
      t4.___GlowController__glowController_F = t5;
      decelerator = A.CurvedAnimation$(B.C__DecelerateCurve, t5, _null);
      decelerator.parent.addListener$1(t4.get$notifyListeners());
      type$.Animation_double._as(decelerator);
      t1 = t1._eval$1("_AnimatedEvaluation<Animatable.T>");
      t4.___GlowController__glowOpacity_F !== $ && A.throwUnnamedLateFieldAI();
      t4.___GlowController__glowOpacity_F = new A._AnimatedEvaluation(decelerator, t2, t1);
      t4.___GlowController__glowSize_F !== $ && A.throwUnnamedLateFieldAI();
      t4.___GlowController__glowSize_F = new A._AnimatedEvaluation(decelerator, t3, t1);
      t1 = vsync.createTicker$1(t4.get$_tickDisplacement());
      t4.___GlowController__displacementTicker_F !== $ && A.throwUnnamedLateFieldAI();
      t4.___GlowController__displacementTicker_F = t1;
      return t4;
    },
    GlowingOverscrollIndicator: function GlowingOverscrollIndicator(t0, t1, t2, t3) {
      var _ = this;
      _.axisDirection = t0;
      _.color = t1;
      _.child = t2;
      _.key = t3;
    },
    _GlowingOverscrollIndicatorState: function _GlowingOverscrollIndicatorState(t0, t1, t2) {
      var _ = this;
      _._lastNotificationType = _._leadingAndTrailingListener = _._trailingController = _._leadingController = null;
      _._accepted = t0;
      _.TickerProviderStateMixin__tickers = t1;
      _.TickerProviderStateMixin__tickerModeNotifier = t2;
      _._element = _._widget = null;
    },
    _GlowState: function _GlowState(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    _GlowController: function _GlowController(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._overscroll_indicator$_state = t0;
      _.___GlowController__glowController_F = $;
      _._pullRecedeTimer = null;
      _._paintOffsetScrollPixels = _._paintOffset = 0;
      _._glowOpacityTween = t1;
      _.___GlowController__glowOpacity_F = $;
      _._glowSizeTween = t2;
      _.___GlowController__displacementTicker_F = _.___GlowController__glowSize_F = $;
      _._displacementTickerLastElapsed = null;
      _._displacement = _._displacementTarget = 0.5;
      _._pullDistance = 0;
      _._overscroll_indicator$_color = t3;
      _._axis = t4;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t5;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
    },
    _GlowController_pull_closure: function _GlowController_pull_closure(t0) {
      this.$this = t0;
    },
    _GlowingOverscrollIndicatorPainter: function _GlowingOverscrollIndicatorPainter(t0, t1, t2, t3) {
      var _ = this;
      _.leadingController = t0;
      _.trailingController = t1;
      _.axisDirection = t2;
      _._repaint = t3;
    },
    _StretchDirection: function _StretchDirection(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    StretchingOverscrollIndicator: function StretchingOverscrollIndicator(t0, t1, t2, t3) {
      var _ = this;
      _.axisDirection = t0;
      _.clipBehavior = t1;
      _.child = t2;
      _.key = t3;
    },
    _StretchingOverscrollIndicatorState: function _StretchingOverscrollIndicatorState(t0, t1) {
      var _ = this;
      _.___StretchingOverscrollIndicatorState__stretchController_FI = $;
      _._lastOverscrollNotification = _._lastNotification = null;
      _._totalOverscroll = 0;
      _._accepted = true;
      _.TickerProviderStateMixin__tickers = t0;
      _.TickerProviderStateMixin__tickerModeNotifier = t1;
      _._element = _._widget = null;
    },
    _StretchingOverscrollIndicatorState_build_closure: function _StretchingOverscrollIndicatorState_build_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.$this = t1;
      this.size = t2;
    },
    _StretchState: function _StretchState(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    _StretchController: function _StretchController(t0, t1, t2, t3) {
      var _ = this;
      _.___StretchController__stretchSize_F = _.___StretchController__stretchController_F = $;
      _._stretchSizeTween = t0;
      _._overscroll_indicator$_state = t1;
      _._pullDistance = 0;
      _._stretchDirection = t2;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t3;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
    },
    OverscrollIndicatorNotification: function OverscrollIndicatorNotification(t0, t1) {
      this.leading = t0;
      this.ViewportNotificationMixin__depth = t1;
    },
    _OverscrollIndicatorNotification_Notification_ViewportNotificationMixin: function _OverscrollIndicatorNotification_Notification_ViewportNotificationMixin() {
    },
    __GlowingOverscrollIndicatorState_State_TickerProviderStateMixin: function __GlowingOverscrollIndicatorState_State_TickerProviderStateMixin() {
    },
    __StretchingOverscrollIndicatorState_State_TickerProviderStateMixin: function __StretchingOverscrollIndicatorState_State_TickerProviderStateMixin() {
    },
    PageStorageBucket__maybeAddKey(context, keys) {
      var t1 = context._widget;
      t1.toString;
      return !(t1 instanceof A.PageStorage);
    },
    PageStorage_maybeOf(context) {
      var widget = context.findAncestorWidgetOfExactType$1$0(type$.PageStorage);
      return widget == null ? null : widget.bucket;
    },
    _StorageEntryIdentifier: function _StorageEntryIdentifier(t0) {
      this.keys = t0;
    },
    PageStorageBucket: function PageStorageBucket() {
      this._storage = null;
    },
    PageStorageBucket__allKeys_closure: function PageStorageBucket__allKeys_closure(t0) {
      this.keys = t0;
    },
    PageStorage: function PageStorage(t0, t1, t2) {
      this.child = t0;
      this.bucket = t1;
      this.key = t2;
    },
    PageRoute: function PageRoute() {
    },
    MenuSerializableShortcut: function MenuSerializableShortcut() {
    },
    PlatformMenuDelegate: function PlatformMenuDelegate() {
    },
    DefaultPlatformMenuDelegate: function DefaultPlatformMenuDelegate(t0, t1) {
      this._idMap = t0;
      this.channel = t1;
    },
    PrimaryScrollController_maybeOf(context) {
      var result = context.dependOnInheritedWidgetOfExactType$1$0(type$.PrimaryScrollController);
      return result == null ? null : result.controller;
    },
    PrimaryScrollController: function PrimaryScrollController(t0, t1, t2) {
      this.controller = t0;
      this.child = t1;
      this.key = t2;
    },
    RestorationScope_maybeOf(context) {
      var t1 = context.dependOnInheritedWidgetOfExactType$1$0(type$.UnmanagedRestorationScope);
      return t1 == null ? null : t1.bucket;
    },
    UnmanagedRestorationScope$(bucket, child) {
      return new A.UnmanagedRestorationScope(bucket, child, null);
    },
    RestorationScope: function RestorationScope(t0, t1, t2) {
      this.child = t0;
      this.restorationId = t1;
      this.key = t2;
    },
    _RestorationScopeState: function _RestorationScopeState(t0, t1, t2, t3, t4) {
      var _ = this;
      _.RestorationMixin__bucket = t0;
      _.RestorationMixin__properties = t1;
      _.RestorationMixin__debugPropertiesWaitingForReregistration = t2;
      _.RestorationMixin__firstRestorePending = t3;
      _.RestorationMixin__currentParent = t4;
      _._element = _._widget = null;
    },
    UnmanagedRestorationScope: function UnmanagedRestorationScope(t0, t1, t2) {
      this.bucket = t0;
      this.child = t1;
      this.key = t2;
    },
    RootRestorationScope: function RootRestorationScope(t0, t1, t2) {
      this.child = t0;
      this.restorationId = t1;
      this.key = t2;
    },
    _RootRestorationScopeState: function _RootRestorationScopeState() {
      var _ = this;
      _._okToRenderBlankContainer = null;
      _._rootBucketValid = false;
      _._ancestorBucket = _._restoration0$_rootBucket = null;
      _._isLoadingRootBucket = false;
      _._element = _._widget = null;
    },
    _RootRestorationScopeState__loadRootBucketIfNecessary_closure: function _RootRestorationScopeState__loadRootBucketIfNecessary_closure(t0) {
      this.$this = t0;
    },
    _RootRestorationScopeState__loadRootBucketIfNecessary__closure: function _RootRestorationScopeState__loadRootBucketIfNecessary__closure(t0, t1) {
      this.$this = t0;
      this.bucket = t1;
    },
    RestorableProperty: function RestorableProperty() {
    },
    RestorationMixin: function RestorationMixin() {
    },
    RestorationMixin_registerForRestoration_listener: function RestorationMixin_registerForRestoration_listener(t0, t1) {
      this.$this = t0;
      this.property = t1;
    },
    __RestorationScopeState_State_RestorationMixin_dispose_closure: function __RestorationScopeState_State_RestorationMixin_dispose_closure() {
    },
    __RestorationScopeState_State_RestorationMixin: function __RestorationScopeState_State_RestorationMixin() {
    },
    RestorableValue: function RestorableValue() {
    },
    _RestorablePrimitiveValueN: function _RestorablePrimitiveValueN() {
    },
    _RestorablePrimitiveValue: function _RestorablePrimitiveValue() {
    },
    RestorableNum: function RestorableNum(t0, t1, t2) {
      var _ = this;
      _._defaultValue = t0;
      _._restoration_properties$_value = null;
      _._disposed = false;
      _._restoration0$_owner = _._restoration0$_restorationId = null;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t1;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
      _.$ti = t2;
    },
    RestorableBool: function RestorableBool(t0, t1) {
      var _ = this;
      _._defaultValue = t0;
      _._restoration_properties$_value = null;
      _._disposed = false;
      _._restoration0$_owner = _._restoration0$_restorationId = null;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t1;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
    },
    __RouterState_State_RestorationMixin_dispose_closure: function __RouterState_State_RestorationMixin_dispose_closure() {
    },
    RouteInformation: function RouteInformation(t0, t1) {
      this.location = t0;
      this.state = t1;
    },
    Router: function Router(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.routeInformationProvider = t0;
      _.routeInformationParser = t1;
      _.routerDelegate = t2;
      _.backButtonDispatcher = t3;
      _.restorationScopeId = t4;
      _.key = t5;
      _.$ti = t6;
    },
    RouteInformationReportingType: function RouteInformationReportingType(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    _RouterState: function _RouterState(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._currentIntentionToReport = _._currentRouterTransaction = null;
      _._routeInformation = t0;
      _.___RouterState__routeParsePending_A = $;
      _._routeInformationReportingTaskScheduled = false;
      _.RestorationMixin__bucket = t1;
      _.RestorationMixin__properties = t2;
      _.RestorationMixin__debugPropertiesWaitingForReregistration = t3;
      _.RestorationMixin__firstRestorePending = t4;
      _.RestorationMixin__currentParent = t5;
      _._element = _._widget = null;
      _.$ti = t6;
    },
    _RouterState_restoreState_closure: function _RouterState_restoreState_closure(t0) {
      this.$this = t0;
    },
    _RouterState_restoreState_closure0: function _RouterState_restoreState_closure0(t0) {
      this.$this = t0;
    },
    _RouterState_didChangeDependencies_closure: function _RouterState_didChangeDependencies_closure(t0) {
      this.$this = t0;
    },
    _RouterState__processParsedRouteInformation_closure: function _RouterState__processParsedRouteInformation_closure(t0, t1, t2) {
      this.$this = t0;
      this.transaction = t1;
      this.delegateRouteSetter = t2;
    },
    _RouterState__handleRouteInformationProviderNotification_closure: function _RouterState__handleRouteInformationProviderNotification_closure(t0) {
      this.$this = t0;
    },
    _RouterState__handleRoutePopped_closure: function _RouterState__handleRoutePopped_closure(t0, t1) {
      this.$this = t0;
      this.transaction = t1;
    },
    _RouterState__rebuild_closure: function _RouterState__rebuild_closure() {
    },
    _RouterState__handleRouterDelegateNotification_closure: function _RouterState__handleRouterDelegateNotification_closure() {
    },
    _RouterScope: function _RouterScope(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.routeInformationProvider = t0;
      _.backButtonDispatcher = t1;
      _.routeInformationParser = t2;
      _.routerDelegate = t3;
      _.routerState = t4;
      _.child = t5;
      _.key = t6;
    },
    _RestorableRouteInformation: function _RestorableRouteInformation(t0) {
      var _ = this;
      _._restoration_properties$_value = null;
      _._disposed = false;
      _._restoration0$_owner = _._restoration0$_restorationId = null;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t0;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
    },
    __RouterState_State_RestorationMixin: function __RouterState_State_RestorationMixin() {
    },
    ModalRoute_of(context, $T) {
      var widget = context.dependOnInheritedWidgetOfExactType$1$0(type$._ModalScopeStatus),
        t1 = widget == null ? null : widget.route;
      return $T._eval$1("ModalRoute<0>?")._as(t1);
    },
    OverlayRoute: function OverlayRoute() {
    },
    TransitionRoute: function TransitionRoute() {
    },
    TransitionRoute__updateSecondaryAnimation_jumpOnAnimationEnd: function TransitionRoute__updateSecondaryAnimation_jumpOnAnimationEnd(t0, t1, t2) {
      this.$this = t0;
      this.nextTrain = t1;
      this.nextRoute = t2;
    },
    TransitionRoute__updateSecondaryAnimation_closure: function TransitionRoute__updateSecondaryAnimation_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.nextTrain = t1;
      this.jumpOnAnimationEnd = t2;
    },
    TransitionRoute__updateSecondaryAnimation_closure0: function TransitionRoute__updateSecondaryAnimation_closure0(t0, t1, t2) {
      this._box_0 = t0;
      this.$this = t1;
      this.nextRoute = t2;
    },
    TransitionRoute__setSecondaryAnimation_closure: function TransitionRoute__setSecondaryAnimation_closure(t0, t1) {
      this.$this = t0;
      this.animation = t1;
    },
    LocalHistoryRoute: function LocalHistoryRoute() {
    },
    _DismissModalAction: function _DismissModalAction(t0, t1) {
      this.context = t0;
      this._actions$_listeners = t1;
      this._currentCallingAction = null;
    },
    _ModalScopeStatus: function _ModalScopeStatus(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.isCurrent = t0;
      _.canPop = t1;
      _.impliesAppBarDismissal = t2;
      _.route = t3;
      _.child = t4;
      _.key = t5;
    },
    _ModalScope: function _ModalScope(t0, t1, t2) {
      this.route = t0;
      this.key = t1;
      this.$ti = t2;
    },
    _ModalScopeState: function _ModalScopeState(t0, t1, t2) {
      var _ = this;
      _._page = null;
      _.___ModalScopeState__listenable_A = $;
      _.focusScopeNode = t0;
      _.primaryScrollController = t1;
      _._element = _._widget = null;
      _.$ti = t2;
    },
    _ModalScopeState__forceRebuildPage_closure: function _ModalScopeState__forceRebuildPage_closure(t0) {
      this.$this = t0;
    },
    _ModalScopeState_build_closure: function _ModalScopeState_build_closure(t0) {
      this.$this = t0;
    },
    _ModalScopeState_build_closure0: function _ModalScopeState_build_closure0(t0) {
      this.$this = t0;
    },
    _ModalScopeState_build__closure0: function _ModalScopeState_build__closure0(t0) {
      this.$this = t0;
    },
    _ModalScopeState_build___closure: function _ModalScopeState_build___closure(t0) {
      this.$this = t0;
    },
    _ModalScopeState_build__closure: function _ModalScopeState_build__closure(t0) {
      this.$this = t0;
    },
    ModalRoute: function ModalRoute() {
    },
    ModalRoute_offstage_closure: function ModalRoute_offstage_closure(t0, t1) {
      this.$this = t0;
      this.value = t1;
    },
    ModalRoute_changedInternalState_closure: function ModalRoute_changedInternalState_closure() {
    },
    _ModalRoute_TransitionRoute_LocalHistoryRoute: function _ModalRoute_TransitionRoute_LocalHistoryRoute() {
    },
    SafeArea$(bottom, child, $top) {
      return new A.SafeArea($top, bottom, child, null);
    },
    SafeArea: function SafeArea(t0, t1, t2, t3) {
      var _ = this;
      _.top = t0;
      _.bottom = t1;
      _.child = t2;
      _.key = t3;
    },
    ScrollActivity: function ScrollActivity() {
    },
    IdleScrollActivity: function IdleScrollActivity(t0) {
      this._delegate = t0;
    },
    HoldScrollActivity: function HoldScrollActivity(t0, t1) {
      this.onHoldCanceled = t0;
      this._delegate = t1;
    },
    ScrollDragController: function ScrollDragController(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _._delegate = t0;
      _.onDragCanceled = t1;
      _.carriedVelocity = t2;
      _.motionStartDistanceThreshold = t3;
      _._lastNonStationaryTimestamp = t4;
      _._retainMomentum = t5;
      _._offsetSinceLastStop = t6;
      _._scroll_activity$_kind = t7;
      _._lastDetails = t8;
    },
    DragScrollActivity: function DragScrollActivity(t0, t1) {
      this._scroll_activity$_controller = t0;
      this._delegate = t1;
    },
    BallisticScrollActivity: function BallisticScrollActivity(t0, t1) {
      this.__BallisticScrollActivity__controller_A = $;
      this.shouldIgnorePointer = t0;
      this._delegate = t1;
    },
    DrivenScrollActivity: function DrivenScrollActivity(t0) {
      this.__DrivenScrollActivity__controller_F = this.__DrivenScrollActivity__completer_F = $;
      this._delegate = t0;
    },
    ScrollConfiguration_of(context) {
      var configuration = context.dependOnInheritedWidgetOfExactType$1$0(type$.ScrollConfiguration),
        t1 = configuration == null ? null : configuration.behavior;
      return t1 == null ? B.C_ScrollBehavior : t1;
    },
    AndroidOverscrollIndicator: function AndroidOverscrollIndicator(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    ScrollBehavior: function ScrollBehavior() {
    },
    ScrollBehavior_velocityTrackerBuilder_closure: function ScrollBehavior_velocityTrackerBuilder_closure() {
    },
    ScrollBehavior_velocityTrackerBuilder_closure0: function ScrollBehavior_velocityTrackerBuilder_closure0() {
    },
    ScrollBehavior_velocityTrackerBuilder_closure1: function ScrollBehavior_velocityTrackerBuilder_closure1() {
    },
    _WrappedScrollBehavior: function _WrappedScrollBehavior(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.delegate = t0;
      _.scrollbars = t1;
      _.overscroll = t2;
      _.physics = t3;
      _.platform = t4;
      _._dragDevices = t5;
      _._pointerAxisModifiers = t6;
      _._scroll_configuration$_androidOverscrollIndicator = t7;
    },
    ScrollConfiguration: function ScrollConfiguration(t0, t1, t2) {
      this.behavior = t0;
      this.child = t1;
      this.key = t2;
    },
    ScrollController$() {
      return new A.ScrollController(A._setArrayType([], type$.JSArray_ScrollPosition), $.$get$ChangeNotifier__emptyListeners());
    },
    ScrollController: function ScrollController(t0, t1) {
      var _ = this;
      _._positions = t0;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t1;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
    },
    ScrollMetrics: function ScrollMetrics() {
    },
    FixedScrollMetrics: function FixedScrollMetrics(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._minScrollExtent = t0;
      _._maxScrollExtent = t1;
      _._pixels = t2;
      _._scroll_metrics$_viewportDimension = t3;
      _.axisDirection = t4;
      _.devicePixelRatio = t5;
    },
    _FixedScrollMetrics_Object_ScrollMetrics: function _FixedScrollMetrics_Object_ScrollMetrics() {
    },
    ScrollUpdateNotification$(context, depth, dragDetails, metrics, scrollDelta) {
      var t1 = new A.ScrollUpdateNotification(dragDetails, scrollDelta, metrics, context, 0);
      if (depth != null)
        t1.ViewportNotificationMixin__depth = depth;
      return t1;
    },
    defaultScrollNotificationPredicate(notification) {
      return notification.ViewportNotificationMixin__depth === 0;
    },
    ViewportNotificationMixin: function ViewportNotificationMixin() {
    },
    ScrollNotification: function ScrollNotification() {
    },
    ScrollStartNotification: function ScrollStartNotification(t0, t1, t2, t3) {
      var _ = this;
      _.dragDetails = t0;
      _.metrics = t1;
      _.context = t2;
      _.ViewportNotificationMixin__depth = t3;
    },
    ScrollUpdateNotification: function ScrollUpdateNotification(t0, t1, t2, t3, t4) {
      var _ = this;
      _.dragDetails = t0;
      _.scrollDelta = t1;
      _.metrics = t2;
      _.context = t3;
      _.ViewportNotificationMixin__depth = t4;
    },
    OverscrollNotification: function OverscrollNotification(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.dragDetails = t0;
      _.overscroll = t1;
      _.velocity = t2;
      _.metrics = t3;
      _.context = t4;
      _.ViewportNotificationMixin__depth = t5;
    },
    ScrollEndNotification: function ScrollEndNotification(t0, t1, t2, t3) {
      var _ = this;
      _.dragDetails = t0;
      _.metrics = t1;
      _.context = t2;
      _.ViewportNotificationMixin__depth = t3;
    },
    UserScrollNotification: function UserScrollNotification(t0, t1, t2, t3) {
      var _ = this;
      _.direction = t0;
      _.metrics = t1;
      _.context = t2;
      _.ViewportNotificationMixin__depth = t3;
    },
    _ScrollNotification_LayoutChangedNotification_ViewportNotificationMixin: function _ScrollNotification_LayoutChangedNotification_ViewportNotificationMixin() {
    },
    _ScrollNotificationObserverScope: function _ScrollNotificationObserverScope(t0, t1, t2) {
      this._scrollNotificationObserverState = t0;
      this.child = t1;
      this.key = t2;
    },
    _ListenerEntry: function _ListenerEntry(t0) {
      var _ = this;
      _.listener = t0;
      _._collection$_previous = _._collection$_next = _._list = null;
    },
    ScrollNotificationObserver: function ScrollNotificationObserver(t0, t1) {
      this.child = t0;
      this.key = t1;
    },
    ScrollNotificationObserverState: function ScrollNotificationObserverState(t0) {
      this._scroll_notification_observer$_listeners = t0;
      this._element = this._widget = null;
    },
    ScrollNotificationObserverState__notifyListeners_closure: function ScrollNotificationObserverState__notifyListeners_closure(t0) {
      this.$this = t0;
    },
    ScrollNotificationObserverState_build_closure: function ScrollNotificationObserverState_build_closure(t0) {
      this.$this = t0;
    },
    ScrollNotificationObserverState_build_closure0: function ScrollNotificationObserverState_build_closure0(t0) {
      this.$this = t0;
    },
    _ConvertedScrollMetricsNotification: function _ConvertedScrollMetricsNotification(t0, t1, t2, t3, t4) {
      var _ = this;
      _.dragDetails = t0;
      _.scrollDelta = t1;
      _.metrics = t2;
      _.context = t3;
      _.ViewportNotificationMixin__depth = t4;
    },
    BouncingScrollPhysics__applyFriction(extentOutside, absDelta, gamma) {
      var deltaToLimit, total;
      if (extentOutside > 0) {
        deltaToLimit = extentOutside / gamma;
        if (absDelta < deltaToLimit)
          return absDelta * gamma;
        total = 0 + extentOutside;
        absDelta -= deltaToLimit;
      } else
        total = 0;
      return total + absDelta;
    },
    ScrollDecelerationRate: function ScrollDecelerationRate(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    ScrollPhysics: function ScrollPhysics() {
    },
    RangeMaintainingScrollPhysics: function RangeMaintainingScrollPhysics(t0) {
      this.parent = t0;
    },
    BouncingScrollPhysics: function BouncingScrollPhysics(t0, t1) {
      this.decelerationRate = t0;
      this.parent = t1;
    },
    ClampingScrollPhysics: function ClampingScrollPhysics(t0) {
      this.parent = t0;
    },
    ScrollPositionAlignmentPolicy: function ScrollPositionAlignmentPolicy(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    ScrollPosition: function ScrollPosition() {
    },
    ScrollPosition_forcePixels_closure: function ScrollPosition_forcePixels_closure(t0) {
      this.$this = t0;
    },
    ScrollMetricsNotification: function ScrollMetricsNotification(t0, t1, t2) {
      this.metrics = t0;
      this.context = t1;
      this.ViewportNotificationMixin__depth = t2;
    },
    _ScrollMetricsNotification_Notification_ViewportNotificationMixin: function _ScrollMetricsNotification_Notification_ViewportNotificationMixin() {
    },
    _ScrollPosition_ViewportOffset_ScrollMetrics: function _ScrollPosition_ViewportOffset_ScrollMetrics() {
    },
    ScrollPositionWithSingleContext$(context, debugLabel, initialPixels, keepScrollOffset, oldPosition, physics) {
      var t1 = new A.ScrollPositionWithSingleContext(B.ScrollDirection_0, physics, context, true, debugLabel, A.ValueNotifier$(false), $.$get$ChangeNotifier__emptyListeners());
      t1.ScrollPosition$5$context$debugLabel$keepScrollOffset$oldPosition$physics(context, debugLabel, true, oldPosition, physics);
      t1.ScrollPositionWithSingleContext$6$context$debugLabel$initialPixels$keepScrollOffset$oldPosition$physics(context, debugLabel, initialPixels, true, oldPosition, physics);
      return t1;
    },
    ScrollPositionWithSingleContext: function ScrollPositionWithSingleContext(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._heldPreviousVelocity = 0;
      _._userScrollDirection = t0;
      _._currentDrag = null;
      _.physics = t1;
      _.context = t2;
      _.keepScrollOffset = t3;
      _.debugLabel = t4;
      _._viewportDimension = _._scroll_position$_pixels = _._scroll_position$_maxScrollExtent = _._scroll_position$_minScrollExtent = null;
      _._haveDimensions = false;
      _._didChangeViewportDimensionOrReceiveCorrection = true;
      _._pendingDimensions = false;
      _._scroll_position$_lastMetrics = null;
      _._haveScheduledUpdateNotification = false;
      _._semanticActions = _._lastAxis = null;
      _.isScrollingNotifier = t5;
      _._activity = null;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t6;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
    },
    BouncingScrollSimulation: function BouncingScrollSimulation(t0, t1, t2, t3) {
      var _ = this;
      _.leadingExtent = t0;
      _.trailingExtent = t1;
      _.spring = t2;
      _.__BouncingScrollSimulation__springTime_A = _.__BouncingScrollSimulation__springSimulation_A = _.__BouncingScrollSimulation__frictionSimulation_A = $;
      _._timeOffset = 0;
      _.tolerance = t3;
    },
    ClampingScrollSimulation: function ClampingScrollSimulation(t0, t1, t2) {
      var _ = this;
      _.position = t0;
      _.velocity = t1;
      _.__ClampingScrollSimulation__distance_A = _.__ClampingScrollSimulation__duration_A = $;
      _.tolerance = t2;
    },
    Scrollable_maybeOf(context) {
      var widget = context.dependOnInheritedWidgetOfExactType$1$0(type$._ScrollableScope);
      return widget == null ? null : widget.scrollable;
    },
    Scrollable_ensureVisible(context, alignment, alignmentPolicy) {
      var t1, targetRenderObject, t2, t3, widget,
        futures = A._setArrayType([], type$.JSArray_Future_void),
        scrollable = A.Scrollable_maybeOf(context);
      for (t1 = type$._ScrollableScope, targetRenderObject = null; scrollable != null;) {
        t2 = scrollable._scrollable$_position;
        t2.toString;
        t3 = context.get$renderObject();
        t3.toString;
        futures.push(t2.ensureVisible$6$alignment$alignmentPolicy$curve$duration$targetRenderObject(t3, alignment, alignmentPolicy, B.Cubic_glB, B.Duration_0, targetRenderObject));
        if (targetRenderObject == null)
          targetRenderObject = context.get$renderObject();
        context = scrollable._element;
        widget = context.dependOnInheritedWidgetOfExactType$1$0(t1);
        scrollable = widget == null ? null : widget.scrollable;
      }
      t1 = A.Future_Future$value(null, type$.void);
      return t1;
    },
    ScrollableState$() {
      var _null = null,
        t1 = type$.LabeledGlobalKey_State_StatefulWidget;
      return new A.ScrollableState(new A._RestorableScrollOffset($.$get$ChangeNotifier__emptyListeners()), new A.LabeledGlobalKey(_null, t1), new A.LabeledGlobalKey(_null, type$.LabeledGlobalKey_RawGestureDetectorState), new A.LabeledGlobalKey(_null, t1), B.Map_empty1, _null, A.LinkedHashMap_LinkedHashMap$_empty(type$.RestorableProperty_nullable_Object, type$.void_Function), _null, true, _null, _null, _null);
    },
    _getDeltaToScrollOrigin(scrollableState) {
      var t1;
      scrollableState._widget.toString;
      switch (2) {
        case 2:
          t1 = scrollableState._scrollable$_position._scroll_position$_pixels;
          t1.toString;
          return new A.Offset(0, t1);
      }
    },
    ScrollAction$() {
      return new A.ScrollAction(new A.ObserverList(A._setArrayType([], type$.JSArray_of_void_Function_Action_Intent), type$.ObserverList_of_void_Function_Action_Intent));
    },
    ScrollAction__calculateScrollIncrement(state, type) {
      var t1;
      state._widget.toString;
      switch (type.index) {
        case 0:
          return 50;
        case 1:
          t1 = state._scrollable$_position._viewportDimension;
          t1.toString;
          return 0.8 * t1;
      }
    },
    ScrollAction_getDirectionalIncrement(state, intent) {
      var increment = A.ScrollAction__calculateScrollIncrement(state, intent.type);
      switch (intent.direction.index) {
        case 2:
          state._widget.toString;
          switch (2) {
            case 2:
              return increment;
          }
        case 0:
          state._widget.toString;
          switch (2) {
            case 2:
              return -increment;
          }
        case 3:
          state._widget.toString;
          switch (2) {
            case 0:
            case 2:
              return 0;
          }
        case 1:
          state._widget.toString;
          switch (2) {
            case 0:
            case 2:
              return 0;
          }
      }
    },
    _ScrollableState_State_TickerProviderStateMixin_RestorationMixin_dispose_closure: function _ScrollableState_State_TickerProviderStateMixin_RestorationMixin_dispose_closure() {
    },
    Scrollable: function Scrollable() {
    },
    _ScrollableScope: function _ScrollableScope(t0, t1, t2, t3) {
      var _ = this;
      _.scrollable = t0;
      _.position = t1;
      _.child = t2;
      _.key = t3;
    },
    ScrollableState: function ScrollableState(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11) {
      var _ = this;
      _._scrollable$_position = null;
      _._persistedScrollOffset = t0;
      _.__ScrollableState__configuration_A = $;
      _._mediaQueryGestureSettings = _._fallbackScrollController = _._physics = null;
      _._scrollSemanticsKey = t1;
      _._gestureDetectorKey = t2;
      _._ignorePointerKey = t3;
      _._gestureRecognizers = t4;
      _._shouldIgnorePointer = false;
      _._hold = _._scrollable$_drag = _._scrollable$_lastAxisDirection = _._lastCanDrag = null;
      _.RestorationMixin__bucket = t5;
      _.RestorationMixin__properties = t6;
      _.RestorationMixin__debugPropertiesWaitingForReregistration = t7;
      _.RestorationMixin__firstRestorePending = t8;
      _.RestorationMixin__currentParent = t9;
      _.TickerProviderStateMixin__tickers = t10;
      _.TickerProviderStateMixin__tickerModeNotifier = t11;
      _._element = _._widget = null;
    },
    ScrollableState_setCanDrag_closure: function ScrollableState_setCanDrag_closure(t0) {
      this.$this = t0;
    },
    ScrollableState_setCanDrag_closure0: function ScrollableState_setCanDrag_closure0(t0) {
      this.$this = t0;
    },
    ScrollableState_setCanDrag_closure1: function ScrollableState_setCanDrag_closure1(t0) {
      this.$this = t0;
    },
    ScrollableState_setCanDrag_closure2: function ScrollableState_setCanDrag_closure2(t0) {
      this.$this = t0;
    },
    _ScrollableSelectionHandler: function _ScrollableSelectionHandler(t0, t1, t2, t3, t4) {
      var _ = this;
      _.state = t0;
      _.position = t1;
      _.child = t2;
      _.registrar = t3;
      _.key = t4;
    },
    _ScrollableSelectionHandlerState: function _ScrollableSelectionHandlerState() {
      this.___ScrollableSelectionHandlerState__selectionDelegate_A = $;
      this._element = this._widget = null;
    },
    EdgeDraggingAutoScroller: function EdgeDraggingAutoScroller(t0, t1) {
      var _ = this;
      _.scrollable = t0;
      _.velocityScalar = t1;
      _.__EdgeDraggingAutoScroller__dragTargetRelatedToScrollOrigin_A = $;
      _._scrolling = false;
    },
    _ScrollableSelectionContainerDelegate: function _ScrollableSelectionContainerDelegate(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.state = t0;
      _._autoScroller = t1;
      _._scheduledLayoutChange = false;
      _._currentDragEndRelatedToOrigin = _._currentDragStartRelatedToOrigin = null;
      _._selectionStartsInScrollable = false;
      _._scrollable$_position = t2;
      _._selectableStartEdgeUpdateRecords = t3;
      _._selectableEndEdgeUpdateRecords = t4;
      _.selectables = t5;
      _.currentSelectionStartIndex = _.currentSelectionEndIndex = -1;
      _._endHandleLayerOwner = _._endHandleLayer = _._startHandleLayerOwner = _._startHandleLayer = null;
      _._selectionInProgress = _._scheduledSelectableUpdate = _._isHandlingSelectionEvent = false;
      _._additions = t6;
      _._extendSelectionInProgress = false;
      _._selectionGeometry = t7;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t8;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
      _._selectionContainerContext = null;
    },
    _ScrollableSelectionContainerDelegate__scheduleLayoutChange_closure: function _ScrollableSelectionContainerDelegate__scheduleLayoutChange_closure(t0) {
      this.$this = t0;
    },
    _ScrollableSelectionContainerDelegate_didChangeSelectables_closure: function _ScrollableSelectionContainerDelegate_didChangeSelectables_closure(t0) {
      this.selectableSet = t0;
    },
    _ScrollableSelectionContainerDelegate_didChangeSelectables_closure0: function _ScrollableSelectionContainerDelegate_didChangeSelectables_closure0(t0) {
      this.selectableSet = t0;
    },
    ScrollableDetails: function ScrollableDetails(t0, t1, t2) {
      this.direction = t0;
      this.controller = t1;
      this.clipBehavior = t2;
    },
    _ScrollSemantics: function _ScrollSemantics(t0, t1, t2, t3, t4) {
      var _ = this;
      _.position = t0;
      _.allowImplicitScrolling = t1;
      _.semanticChildCount = t2;
      _.child = t3;
      _.key = t4;
    },
    _RenderScrollSemantics: function _RenderScrollSemantics(t0, t1, t2, t3, t4) {
      var _ = this;
      _._scrollable$_position = t0;
      _._allowImplicitScrolling = t1;
      _._semanticChildCount = t2;
      _._innerNode = null;
      _.RenderObjectWithChildMixin__child = t3;
      _.parentData = _._cachedBaselines = _._size = _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t4;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    ScrollIncrementType: function ScrollIncrementType(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    ScrollIntent: function ScrollIntent(t0, t1) {
      this.direction = t0;
      this.type = t1;
    },
    ScrollAction: function ScrollAction(t0) {
      this._actions$_listeners = t0;
      this._currentCallingAction = null;
    },
    _RestorableScrollOffset: function _RestorableScrollOffset(t0) {
      var _ = this;
      _._restoration_properties$_value = null;
      _._disposed = false;
      _._restoration0$_owner = _._restoration0$_restorationId = null;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t0;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
    },
    _ScrollableState_State_TickerProviderStateMixin: function _ScrollableState_State_TickerProviderStateMixin() {
    },
    _ScrollableState_State_TickerProviderStateMixin_RestorationMixin: function _ScrollableState_State_TickerProviderStateMixin_RestorationMixin() {
    },
    RawScrollbar$(child, controller, fadeDuration, interactive, key, notificationPredicate, pressDuration, radius, scrollbarOrientation, thickness, thumbVisibility, timeToFade, trackVisibility) {
      return new A.RawScrollbar(child, controller, thumbVisibility, radius, thickness, trackVisibility, fadeDuration, timeToFade, pressDuration, notificationPredicate, interactive, scrollbarOrientation, key);
    },
    RawScrollbarState$($T) {
      return new A.RawScrollbarState(new A.LabeledGlobalKey(null, type$.LabeledGlobalKey_State_StatefulWidget), null, null, $T._eval$1("RawScrollbarState<0>"));
    },
    _getLocalOffset(scrollbarPainterKey, position) {
      var t1 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, scrollbarPainterKey).get$renderObject();
      t1.toString;
      return type$.RenderBox._as(t1).globalToLocal$1(position);
    },
    ScrollbarOrientation: function ScrollbarOrientation(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    ScrollbarPainter: function ScrollbarPainter(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14) {
      var _ = this;
      _._scrollbar$_color = t0;
      _._scrollbar$_trackColor = t1;
      _._scrollbar$_trackBorderColor = t2;
      _._trackRadius = t3;
      _._scrollbar$_textDirection = null;
      _._scrollbar$_thickness = t4;
      _.fadeoutOpacityAnimation = t5;
      _._mainAxisMargin = t6;
      _._crossAxisMargin = t7;
      _._scrollbar$_radius = t8;
      _._scrollbar$_shape = t9;
      _._scrollbar$_padding = t10;
      _._minLength = t11;
      _._minOverscrollLength = t12;
      _._scrollbarOrientation = t13;
      _._ignorePointer = false;
      _._thumbRect = _._scrollbar$_trackRect = null;
      _.__ScrollbarPainter__thumbExtent_A = _.__ScrollbarPainter__thumbOffset_A = $;
      _._lastAxisDirection = _._lastMetrics = null;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t14;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
    },
    ScrollbarPainter_update_needPaint: function ScrollbarPainter_update_needPaint() {
    },
    RawScrollbar: function RawScrollbar(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12) {
      var _ = this;
      _.child = t0;
      _.controller = t1;
      _.thumbVisibility = t2;
      _.radius = t3;
      _.thickness = t4;
      _.trackVisibility = t5;
      _.fadeDuration = t6;
      _.timeToFade = t7;
      _.pressDuration = t8;
      _.notificationPredicate = t9;
      _.interactive = t10;
      _.scrollbarOrientation = t11;
      _.key = t12;
    },
    RawScrollbarState: function RawScrollbarState(t0, t1, t2, t3) {
      var _ = this;
      _._fadeoutTimer = _._cachedController = _._startDragThumbOffset = _._lastDragUpdateOffset = _._startDragScrollbarAxisOffset = null;
      _.__RawScrollbarState__fadeoutOpacityAnimation_A = _.__RawScrollbarState__fadeoutAnimationController_A = $;
      _._scrollbarPainterKey = t0;
      _._thumbDragging = _._hoverIsActive = false;
      _.__RawScrollbarState_scrollbarPainter_F = $;
      _.TickerProviderStateMixin__tickers = t1;
      _.TickerProviderStateMixin__tickerModeNotifier = t2;
      _._element = _._widget = null;
      _.$ti = t3;
    },
    RawScrollbarState__maybeStartFadeoutTimer_closure: function RawScrollbarState__maybeStartFadeoutTimer_closure(t0) {
      this.$this = t0;
    },
    RawScrollbarState__gestures_closure: function RawScrollbarState__gestures_closure(t0) {
      this.$this = t0;
    },
    RawScrollbarState__gestures_closure0: function RawScrollbarState__gestures_closure0(t0) {
      this.$this = t0;
    },
    RawScrollbarState__gestures__closure: function RawScrollbarState__gestures__closure(t0) {
      this.$this = t0;
    },
    RawScrollbarState__gestures__closure0: function RawScrollbarState__gestures__closure0(t0) {
      this.$this = t0;
    },
    RawScrollbarState__gestures__closure1: function RawScrollbarState__gestures__closure1(t0) {
      this.$this = t0;
    },
    RawScrollbarState__gestures_closure1: function RawScrollbarState__gestures_closure1(t0) {
      this.$this = t0;
    },
    RawScrollbarState__gestures_closure2: function RawScrollbarState__gestures_closure2(t0) {
      this.$this = t0;
    },
    RawScrollbarState_build_closure: function RawScrollbarState_build_closure(t0) {
      this.$this = t0;
    },
    RawScrollbarState_build_closure0: function RawScrollbarState_build_closure0(t0) {
      this.$this = t0;
    },
    _ThumbPressGestureRecognizer: function _ThumbPressGestureRecognizer(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _._customPaintKey = t0;
      _._longPressAccepted = false;
      _._velocityTracker = _.onTertiaryLongPressEnd = _.onTertiaryLongPressUp = _.onTertiaryLongPressMoveUpdate = _.onTertiaryLongPressStart = _.onTertiaryLongPress = _.onTertiaryLongPressCancel = _.onTertiaryLongPressDown = _.onSecondaryLongPressEnd = _.onSecondaryLongPressUp = _.onSecondaryLongPressMoveUpdate = _.onSecondaryLongPressStart = _.onSecondaryLongPress = _.onSecondaryLongPressCancel = _.onSecondaryLongPressDown = _.onLongPressEnd = _.onLongPressUp = _.onLongPressMoveUpdate = _.onLongPressStart = _.onLongPress = _.onLongPressCancel = _.onLongPressDown = _._long_press$_initialButtons = _._longPressOrigin = null;
      _.deadline = t1;
      _.postAcceptSlopTolerance = t2;
      _._recognizer$_state = t3;
      _._initialPosition = _._primaryPointer = null;
      _._gestureAccepted = false;
      _._recognizer$_timer = null;
      _._entries = t4;
      _._trackedPointers = t5;
      _._team = null;
      _.debugOwner = t6;
      _.gestureSettings = null;
      _.supportedDevices = t7;
      _._allowedButtonsFilter = t8;
      _._pointerToKind = t9;
    },
    _TrackTapGestureRecognizer: function _TrackTapGestureRecognizer(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _._customPaintKey = t0;
      _.onTertiaryTapCancel = _.onTertiaryTapUp = _.onTertiaryTapDown = _.onSecondaryTapCancel = _.onSecondaryTapUp = _.onSecondaryTapDown = _.onSecondaryTap = _.onTapCancel = _.onTap = _.onTapUp = _.onTapDown = null;
      _._wonArenaForPrimaryPointer = _._sentTapDown = false;
      _._up = _._down = null;
      _.deadline = t1;
      _.postAcceptSlopTolerance = t2;
      _._recognizer$_state = t3;
      _._initialPosition = _._primaryPointer = null;
      _._gestureAccepted = false;
      _._recognizer$_timer = null;
      _._entries = t4;
      _._trackedPointers = t5;
      _._team = null;
      _.debugOwner = t6;
      _.gestureSettings = null;
      _.supportedDevices = t7;
      _._allowedButtonsFilter = t8;
      _._pointerToKind = t9;
    },
    _RawScrollbarState_State_TickerProviderStateMixin: function _RawScrollbarState_State_TickerProviderStateMixin() {
    },
    MultiSelectableSelectionContainerDelegate__compareVertically(a, b) {
      var t4,
        t1 = a.top,
        t2 = b.top,
        t3 = t1 - t2;
      if (!(t3 < 1e-10 && a.bottom - b.bottom > -1e-10))
        t4 = t2 - t1 < 1e-10 && b.bottom - a.bottom > -1e-10;
      else
        t4 = true;
      if (t4)
        return 0;
      if (Math.abs(t3) > 1e-10)
        return t1 > t2 ? 1 : -1;
      return a.bottom > b.bottom ? 1 : -1;
    },
    MultiSelectableSelectionContainerDelegate__compareHorizontally(a, b) {
      var t1 = a.left,
        t2 = b.left,
        t3 = t1 - t2;
      if (t3 < 1e-10 && a.right - b.right > -1e-10)
        return -1;
      if (t2 - t1 < 1e-10 && b.right - a.right > -1e-10)
        return 1;
      if (Math.abs(t3) > 1e-10)
        return t1 > t2 ? 1 : -1;
      return a.right > b.right ? 1 : -1;
    },
    MultiSelectableSelectionContainerDelegate: function MultiSelectableSelectionContainerDelegate() {
    },
    MultiSelectableSelectionContainerDelegate__scheduleSelectableUpdate_closure: function MultiSelectableSelectionContainerDelegate__scheduleSelectableUpdate_closure(t0) {
      this.$this = t0;
    },
    MultiSelectableSelectionContainerDelegate_handleSelectWord_closure: function MultiSelectableSelectionContainerDelegate_handleSelectWord_closure(t0, t1) {
      this.$this = t0;
      this.index = t1;
    },
    MultiSelectableSelectionContainerDelegate_handleSelectWord_closure0: function MultiSelectableSelectionContainerDelegate_handleSelectWord_closure0(t0) {
      this.$this = t0;
    },
    _MultiSelectableSelectionContainerDelegate_SelectionContainerDelegate_ChangeNotifier: function _MultiSelectableSelectionContainerDelegate_SelectionContainerDelegate_ChangeNotifier() {
    },
    SelectionContainer_maybeOf(context) {
      var scope = context.dependOnInheritedWidgetOfExactType$1$0(type$.SelectionRegistrarScope);
      return scope == null ? null : scope.registrar;
    },
    SelectionContainer: function SelectionContainer(t0, t1, t2, t3) {
      var _ = this;
      _.registrar = t0;
      _.child = t1;
      _.delegate = t2;
      _.key = t3;
    },
    _SelectionContainerState: function _SelectionContainerState(t0, t1, t2) {
      var _ = this;
      _._selection_container$_listeners = t0;
      _.SelectionRegistrant__registrar = t1;
      _.SelectionRegistrant__subscribedToSelectionRegistrar = t2;
      _._element = _._widget = null;
    },
    SelectionRegistrarScope: function SelectionRegistrarScope(t0, t1, t2) {
      this.registrar = t0;
      this.child = t1;
      this.key = t2;
    },
    SelectionContainerDelegate: function SelectionContainerDelegate() {
    },
    __SelectionContainerState_State_Selectable: function __SelectionContainerState_State_Selectable() {
    },
    __SelectionContainerState_State_Selectable_SelectionRegistrant: function __SelectionContainerState_State_Selectable_SelectionRegistrant() {
    },
    SharedAppData: function SharedAppData(t0, t1) {
      this.child = t0;
      this.key = t1;
    },
    _SharedAppDataState: function _SharedAppDataState() {
      this.___SharedAppDataState_data_AI = $;
      this._element = this._widget = null;
    },
    _SharedAppModel: function _SharedAppModel(t0, t1, t2) {
      this.data = t0;
      this.child = t1;
      this.key = t2;
    },
    SingleActivator$(trigger, alt, control, meta, shift) {
      return new A.SingleActivator(trigger, control, shift, alt, meta);
    },
    ShortcutManager__indexShortcuts(source) {
      var result = A.LinkedHashMap_LinkedHashMap$_empty(type$.nullable_LogicalKeyboardKey, type$.List__ActivatorIntentPair);
      source.forEach$1(0, new A.ShortcutManager__indexShortcuts_closure(result));
      return result;
    },
    Shortcuts$(child, debugLabel, shortcuts) {
      return new A.Shortcuts(null, shortcuts, child, debugLabel, null);
    },
    SingleActivator: function SingleActivator(t0, t1, t2, t3, t4) {
      var _ = this;
      _.trigger = t0;
      _.control = t1;
      _.shift = t2;
      _.alt = t3;
      _.meta = t4;
    },
    _ActivatorIntentPair: function _ActivatorIntentPair(t0, t1) {
      this.activator = t0;
      this.intent = t1;
    },
    ShortcutManager: function ShortcutManager(t0, t1) {
      var _ = this;
      _._shortcuts = t0;
      _._indexedShortcutsCache = null;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t1;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
    },
    ShortcutManager__indexShortcuts_closure: function ShortcutManager__indexShortcuts_closure(t0) {
      this.result = t0;
    },
    ShortcutManager__indexShortcuts__closure: function ShortcutManager__indexShortcuts__closure() {
    },
    Shortcuts: function Shortcuts(t0, t1, t2, t3, t4) {
      var _ = this;
      _.manager = t0;
      _._shortcuts = t1;
      _.child = t2;
      _.debugLabel = t3;
      _.key = t4;
    },
    _ShortcutsState: function _ShortcutsState() {
      this._element = this._widget = this._internalManager = null;
    },
    ShortcutRegistry: function ShortcutRegistry(t0, t1) {
      var _ = this;
      _._registeredShortcuts = t0;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t1;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
    },
    ShortcutRegistrar: function ShortcutRegistrar(t0, t1) {
      this.child = t0;
      this.key = t1;
    },
    _ShortcutRegistrarState: function _ShortcutRegistrarState(t0, t1) {
      var _ = this;
      _.registry = t0;
      _.manager = t1;
      _._element = _._widget = null;
    },
    _ShortcutRegistrarScope: function _ShortcutRegistrarScope(t0, t1, t2) {
      this.registry = t0;
      this.child = t1;
      this.key = t2;
    },
    _ShortcutManager_Object_Diagnosticable: function _ShortcutManager_Object_Diagnosticable() {
    },
    _ShortcutManager_Object_Diagnosticable_ChangeNotifier: function _ShortcutManager_Object_Diagnosticable_ChangeNotifier() {
    },
    _ShortcutRegistry_Object_ChangeNotifier: function _ShortcutRegistry_Object_ChangeNotifier() {
    },
    _SingleActivator_Object_Diagnosticable: function _SingleActivator_Object_Diagnosticable() {
    },
    _SingleActivator_Object_Diagnosticable_MenuSerializableShortcut: function _SingleActivator_Object_Diagnosticable_MenuSerializableShortcut() {
    },
    __ActivatorIntentPair_Object_Diagnosticable: function __ActivatorIntentPair_Object_Diagnosticable() {
    },
    SnapshotWidget$(autoresize, child, controller, mode, painter) {
      return new A.SnapshotWidget(controller, mode, true, painter, child, null);
    },
    SnapshotMode: function SnapshotMode(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    SnapshotController: function SnapshotController(t0) {
      var _ = this;
      _._allowSnapshotting = false;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t0;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
    },
    SnapshotWidget: function SnapshotWidget(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.controller = t0;
      _.mode = t1;
      _.autoresize = t2;
      _.painter = t3;
      _.child = t4;
      _.key = t5;
    },
    _RenderSnapshotWidget: function _RenderSnapshotWidget(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._devicePixelRatio = t0;
      _._snapshot_widget$_painter = t1;
      _._snapshot_widget$_controller = t2;
      _._snapshot_widget$_mode = t3;
      _._autoresize = t4;
      _._childRasterSize = _._childRaster = null;
      _._disableSnapshotAttempt = false;
      _._lastCachedSize = null;
      _.RenderObjectWithChildMixin__child = t5;
      _.parentData = _._cachedBaselines = _._size = _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t6;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    SnapshotPainter: function SnapshotPainter() {
    },
    _DefaultSnapshotPainter: function _DefaultSnapshotPainter() {
    },
    TapRegionSurface: function TapRegionSurface(t0, t1) {
      this.child = t0;
      this.key = t1;
    },
    RenderTapRegionSurface: function RenderTapRegionSurface(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._cachedResults = t0;
      _._registeredRegions = t1;
      _._groupIdToRegions = t2;
      _.behavior = t3;
      _.RenderObjectWithChildMixin__child = t4;
      _.parentData = _._cachedBaselines = _._size = _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t5;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    DefaultTextStyle$(child, maxLines, overflow, softWrap, style, textAlign, textHeightBehavior, textWidthBasis) {
      return new A.DefaultTextStyle(style, textAlign, softWrap, overflow, maxLines, textWidthBasis, textHeightBehavior, child, null);
    },
    Text$(data, maxLines, overflow, softWrap, style) {
      return new A.Text(data, null, style, null, softWrap, overflow, maxLines, null);
    },
    DefaultTextStyle: function DefaultTextStyle(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.style = t0;
      _.textAlign = t1;
      _.softWrap = t2;
      _.overflow = t3;
      _.maxLines = t4;
      _.textWidthBasis = t5;
      _.textHeightBehavior = t6;
      _.child = t7;
      _.key = t8;
    },
    _NullWidget2: function _NullWidget2(t0) {
      this.key = t0;
    },
    Text: function Text(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.data = t0;
      _.textSpan = t1;
      _.style = t2;
      _.textAlign = t3;
      _.softWrap = t4;
      _.overflow = t5;
      _.maxLines = t6;
      _.key = t7;
    },
    DoNothingAndStopPropagationTextIntent: function DoNothingAndStopPropagationTextIntent() {
    },
    DirectionalTextEditingIntent: function DirectionalTextEditingIntent() {
    },
    DeleteCharacterIntent: function DeleteCharacterIntent() {
    },
    DeleteToNextWordBoundaryIntent: function DeleteToNextWordBoundaryIntent() {
    },
    DeleteToLineBreakIntent: function DeleteToLineBreakIntent() {
    },
    DirectionalCaretMovementIntent: function DirectionalCaretMovementIntent() {
    },
    ExtendSelectionByCharacterIntent: function ExtendSelectionByCharacterIntent() {
    },
    ExtendSelectionToNextWordBoundaryIntent: function ExtendSelectionToNextWordBoundaryIntent() {
    },
    ExtendSelectionToNextWordBoundaryOrCaretLocationIntent: function ExtendSelectionToNextWordBoundaryOrCaretLocationIntent() {
    },
    ExpandSelectionToDocumentBoundaryIntent: function ExpandSelectionToDocumentBoundaryIntent() {
    },
    ExpandSelectionToLineBreakIntent: function ExpandSelectionToLineBreakIntent() {
    },
    ExtendSelectionToLineBreakIntent: function ExtendSelectionToLineBreakIntent() {
    },
    ExtendSelectionVerticallyToAdjacentLineIntent: function ExtendSelectionVerticallyToAdjacentLineIntent() {
    },
    ExtendSelectionVerticallyToAdjacentPageIntent: function ExtendSelectionVerticallyToAdjacentPageIntent() {
    },
    ExtendSelectionToNextParagraphBoundaryIntent: function ExtendSelectionToNextParagraphBoundaryIntent() {
    },
    ExtendSelectionToNextParagraphBoundaryOrCaretLocationIntent: function ExtendSelectionToNextParagraphBoundaryOrCaretLocationIntent() {
    },
    ExtendSelectionToDocumentBoundaryIntent: function ExtendSelectionToDocumentBoundaryIntent() {
    },
    ScrollToDocumentBoundaryIntent: function ScrollToDocumentBoundaryIntent() {
    },
    SelectAllTextIntent: function SelectAllTextIntent() {
    },
    CopySelectionTextIntent: function CopySelectionTextIntent() {
    },
    PasteTextIntent: function PasteTextIntent() {
    },
    RedoTextIntent: function RedoTextIntent() {
    },
    UndoTextIntent: function UndoTextIntent() {
    },
    TransposeCharactersIntent: function TransposeCharactersIntent() {
    },
    TickerMode_getNotifier(context) {
      var widget = context.getInheritedWidgetOfExactType$1$0(type$._EffectiveTickerMode),
        t1 = widget == null ? null : widget.notifier;
      return t1 == null ? A.ValueNotifier$(true) : t1;
    },
    TickerMode: function TickerMode(t0, t1, t2) {
      this.enabled = t0;
      this.child = t1;
      this.key = t2;
    },
    _TickerModeState: function _TickerModeState(t0) {
      var _ = this;
      _._ancestorTicketMode = true;
      _._effectiveMode = t0;
      _._element = _._widget = null;
    },
    _EffectiveTickerMode: function _EffectiveTickerMode(t0, t1, t2, t3) {
      var _ = this;
      _.enabled = t0;
      _.notifier = t1;
      _.child = t2;
      _.key = t3;
    },
    SingleTickerProviderStateMixin: function SingleTickerProviderStateMixin() {
    },
    TickerProviderStateMixin: function TickerProviderStateMixin() {
    },
    _WidgetTicker: function _WidgetTicker(t0, t1) {
      var _ = this;
      _._creator = t0;
      _._ticker$_future = null;
      _._muted = false;
      _._startTime = null;
      _._onTick = t1;
      _._animationId = null;
    },
    Title: function Title(t0, t1, t2, t3) {
      var _ = this;
      _.title = t0;
      _.color = t1;
      _.child = t2;
      _.key = t3;
    },
    SlideTransition$(child, position, textDirection, transformHitTests) {
      return new A.SlideTransition(textDirection, transformHitTests, child, position, null);
    },
    ScaleTransition$(child, scale) {
      return new A.ScaleTransition(child, scale, null);
    },
    RotationTransition$(child, turns) {
      return new A.RotationTransition(child, turns, null);
    },
    FadeTransition$(child, opacity) {
      return new A.FadeTransition(opacity, child, null);
    },
    AnimatedBuilder$(animation, builder, child) {
      return new A.AnimatedBuilder(builder, child, animation, null);
    },
    AnimatedWidget: function AnimatedWidget() {
    },
    _AnimatedState: function _AnimatedState() {
      this._element = this._widget = null;
    },
    _AnimatedState__handleChange_closure: function _AnimatedState__handleChange_closure() {
    },
    SlideTransition: function SlideTransition(t0, t1, t2, t3, t4) {
      var _ = this;
      _.textDirection = t0;
      _.transformHitTests = t1;
      _.child = t2;
      _.listenable = t3;
      _.key = t4;
    },
    ScaleTransition: function ScaleTransition(t0, t1, t2) {
      this.child = t0;
      this.listenable = t1;
      this.key = t2;
    },
    RotationTransition: function RotationTransition(t0, t1, t2) {
      this.child = t0;
      this.listenable = t1;
      this.key = t2;
    },
    FadeTransition: function FadeTransition(t0, t1, t2) {
      this.opacity = t0;
      this.child = t1;
      this.key = t2;
    },
    DecoratedBoxTransition: function DecoratedBoxTransition(t0, t1, t2, t3) {
      var _ = this;
      _.decoration = t0;
      _.child = t1;
      _.listenable = t2;
      _.key = t3;
    },
    ListenableBuilder: function ListenableBuilder() {
    },
    AnimatedBuilder: function AnimatedBuilder(t0, t1, t2, t3) {
      var _ = this;
      _.builder = t0;
      _.child = t1;
      _.listenable = t2;
      _.key = t3;
    },
    View_maybeOf(context) {
      var t1 = A.LookupBoundary_dependOnInheritedWidgetOfExactType(context, type$._ViewScope);
      return t1 == null ? null : t1.view;
    },
    View: function View(t0, t1, t2) {
      this.view = t0;
      this.child = t1;
      this.key = t2;
    },
    _ViewScope: function _ViewScope(t0, t1, t2) {
      this.view = t0;
      this.child = t1;
      this.key = t2;
    },
    _LayoutWidgetState__buildChild(key, child) {
      if (child instanceof A._LayoutNode)
        return new A._LayoutWidget(child, key);
      else
        return new A._LeafWidget(type$._LeafNode._as(child), key);
    },
    _LayoutNode__LayoutNode$generate(depth) {
      var t1 = depth >= 6,
        t2 = t1 ? A._LeafNode__LeafNode$generate() : A._LayoutNode__LayoutNode$generate(depth + 1);
      t1 = t1 ? A._LeafNode__LeafNode$generate() : A._LayoutNode__LayoutNode$generate(depth + 1);
      return new A._LayoutNode((depth & 1) === 0, t2, t1);
    },
    _LeafNode__LeafNode$generate() {
      return new A._LeafNode(B.List_1SY[$.$get$random().nextInt$1(7)]);
    },
    MyApp: function MyApp(t0) {
      this.key = t0;
    },
    MyHomePage: function MyHomePage(t0) {
      this.key = t0;
    },
    _MyHomePageState: function _MyHomePageState(t0) {
      this.rootNode = t0;
      this._element = this._widget = null;
    },
    _LayoutWidget: function _LayoutWidget(t0, t1) {
      this.node = t0;
      this.key = t1;
    },
    _LayoutWidgetState: function _LayoutWidgetState(t0, t1, t2) {
      var _ = this;
      _.___LayoutWidgetState__animation_F = _.___LayoutWidgetState_secondChild_FI = _.___LayoutWidgetState_firstChild_FI = $;
      _.isReversed = t0;
      _.SingleTickerProviderStateMixin__ticker = t1;
      _.SingleTickerProviderStateMixin__tickerModeNotifier = t2;
      _._element = _._widget = null;
    },
    _LayoutWidgetState_initState_closure: function _LayoutWidgetState_initState_closure(t0) {
      this.$this = t0;
    },
    _LayoutWidgetState_initState__closure: function _LayoutWidgetState_initState__closure() {
    },
    _LeafWidget: function _LeafWidget(t0, t1) {
      this.node = t0;
      this.key = t1;
    },
    _LeafWidget_build_closure: function _LeafWidget_build_closure() {
    },
    _LeafWidget_build_closure0: function _LeafWidget_build_closure0() {
    },
    _LeafWidget_build_closure1: function _LeafWidget_build_closure1() {
    },
    _LeafWidget_build_closure2: function _LeafWidget_build_closure2() {
    },
    _LeafWidget_build_closure3: function _LeafWidget_build_closure3() {
    },
    _LeafWidget_build_closure4: function _LeafWidget_build_closure4() {
    },
    _LeafWidget_build_closure5: function _LeafWidget_build_closure5() {
    },
    _LeafWidget_build_closure6: function _LeafWidget_build_closure6() {
    },
    _LeafWidget_build_closure7: function _LeafWidget_build_closure7() {
    },
    _LeafWidget_build_closure8: function _LeafWidget_build_closure8() {
    },
    _LeafWidget_build_closure9: function _LeafWidget_build_closure9() {
    },
    _WidgetKind: function _WidgetKind(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    _Node: function _Node() {
    },
    _LayoutNode: function _LayoutNode(t0, t1, t2) {
      this.isColumn = t0;
      this.firstChild = t1;
      this.secondChild = t2;
    },
    _LeafNode: function _LeafNode(t0) {
      this.kind = t0;
    },
    __LayoutWidgetState_State_SingleTickerProviderStateMixin: function __LayoutWidgetState_State_SingleTickerProviderStateMixin() {
    },
    initializeBenchmarkHarness($name, args) {
      var beforeStart, framesToTime, framesToSkip, t1 = {},
        t2 = Date.now(),
        t3 = J.getInterceptor$asx(args);
      if (t3.get$isEmpty(args))
        return;
      beforeStart = B.JSNumber_methods.toInt$0(A.double_parse(t3.$index(args, 0)) * 1000000);
      A.print($name + ".TimeToMain(StartupTime): " + (1000 * t2 - beforeStart) + " us.");
      framesToTime = t3.get$length(args) < 2 ? 1000 : A.int_parse(t3.$index(args, 1), null);
      framesToSkip = t3.get$length(args) < 3 ? 10 : A.int_parse(t3.$index(args, 2), null);
      t1.drawSum = t1.buildSum = 0;
      t1.averagesPrinted = false;
      $.PlatformDispatcher_frameCallback = new A.initializeBenchmarkHarness_frameCallback(t1, beforeStart, $name, framesToSkip, framesToTime);
    },
    initializeBenchmarkHarness_frameCallback: function initializeBenchmarkHarness_frameCallback(t0, t1, t2, t3, t4) {
      var _ = this;
      _._box_0 = t0;
      _.beforeStart = t1;
      _.name = t2;
      _.framesToSkip = t3;
      _.framesToTime = t4;
    },
    Matrix4_tryInvert(other) {
      var r = new A.Matrix4(new Float64Array(16));
      if (r.copyInverse$1(other) === 0)
        return null;
      return r;
    },
    Matrix4$zero() {
      return new A.Matrix4(new Float64Array(16));
    },
    Matrix4_Matrix4$translationValues(x, y, z) {
      var t1 = new Float64Array(16),
        t2 = new A.Matrix4(t1);
      t2.setIdentity$0();
      t1[14] = z;
      t1[13] = y;
      t1[12] = x;
      return t2;
    },
    Matrix4_Matrix4$diagonal3Values(x, y, z) {
      var t1 = new Float64Array(16);
      t1[15] = 1;
      t1[10] = z;
      t1[5] = y;
      t1[0] = x;
      return new A.Matrix4(t1);
    },
    Matrix4: function Matrix4(t0) {
      this._m4storage = t0;
    },
    Vector3: function Vector3(t0) {
      this._v3storage = t0;
    },
    Vector4: function Vector4(t0) {
      this._v4storage = t0;
    },
    CupertinoUserInterfaceLevel_maybeOf(context) {
      context.dependOnInheritedWidgetOfExactType$1$0(type$.CupertinoUserInterfaceLevel);
      return null;
    },
    printString(string) {
      if (typeof dartPrint == "function") {
        dartPrint(string);
        return;
      }
      if (typeof console == "object" && typeof console.log != "undefined") {
        console.log(string);
        return;
      }
      if (typeof print == "function") {
        print(string);
        return;
      }
      throw "Unable to print message: " + String(string);
    },
    RawReceivePort_RawReceivePort() {
      throw A.wrapException(A.UnsupportedError$("new RawReceivePort"));
    },
    Isolate_run(computation, debugName, $R) {
      var result = new A._AsyncCompleter(new A._Future($.Zone__current, $R._eval$1("_Future<0>")), $R._eval$1("_AsyncCompleter<0>")),
        resultPort = A.RawReceivePort_RawReceivePort();
    },
    low(codeUnit) {
      var index = string$.u0e3b_____.charCodeAt(codeUnit >>> 6) + (codeUnit & 63),
        bit = index & 1,
        pair = string$.x22_____.charCodeAt(index >>> 1);
      return pair >>> 4 & -bit | pair & 15 & bit - 1;
    },
    high(lead, tail) {
      var index = string$.u0e3b_____.charCodeAt(1024 + (lead & 1023)) + (tail & 1023),
        bit = index & 1,
        pair = string$.x22_____.charCodeAt(index >>> 1);
      return pair >>> 4 & -bit | pair & 15 & bit - 1;
    },
    initializeEngine0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        t1, box;
      var $async$initializeEngine0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = init.G.window;
              box = {};
              box[$.$get$_jsBoxedDartObjectProperty()] = new A.Object();
              t1.flutterCanvasKit = box;
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$initializeEngine0, $async$completer);
    },
    setEquals(a, b) {
      var t1, t2, value;
      if (a == null)
        return b == null;
      if (b == null || a._collection$_length !== b.get$length(b))
        return false;
      if (a === b)
        return true;
      for (t1 = A._LinkedHashSetIterator$(a, a._collection$_modifications, A._instanceType(a)._precomputed1), t2 = t1.$ti._precomputed1; t1.moveNext$0();) {
        value = t1._current;
        if (!b.contains$1(0, value == null ? t2._as(value) : value))
          return false;
      }
      return true;
    },
    listEquals(a, b) {
      var index;
      if (a == null)
        return b == null;
      if (b == null || a.length !== b.length)
        return false;
      if (a === b)
        return true;
      for (index = 0; index < a.length; ++index)
        if (!J.$eq$(a[index], b[index]))
          return false;
      return true;
    },
    mapEquals(a, b) {
      var key,
        t1 = a.get$length(a),
        t2 = b.get$length(b);
      if (t1 !== t2)
        return false;
      if (a === b)
        return true;
      for (t1 = a.get$keys(), t1 = t1.get$iterator(t1); t1.moveNext$0();) {
        key = t1.get$current();
        if (!b.containsKey$1(key) || !J.$eq$(b.$index(0, key), a.$index(0, key)))
          return false;
      }
      return true;
    },
    mergeSort(list, compare, $T) {
      var middle, secondLength, scratchSpace,
        end = list.length;
      if (end < 2)
        return;
      if (end < 32) {
        A._insertionSort(list, compare, end, 0, $T);
        return;
      }
      middle = end >>> 1;
      secondLength = end - middle;
      scratchSpace = A.List_List$filled(secondLength, list[0], false, $T);
      A._mergeSort(list, compare, middle, end, scratchSpace, 0);
      A._mergeSort(list, compare, 0, middle, list, secondLength);
      A._merge(compare, list, secondLength, end, scratchSpace, 0, secondLength, list, 0);
    },
    _insertionSort(list, compare, end, start, $T) {
      var pos, element, max, min, mid;
      for (pos = start + 1; pos < end;) {
        element = list[pos];
        for (max = pos, min = start; min < max;) {
          mid = min + B.JSInt_methods._shrOtherPositive$1(max - min, 1);
          if (compare.call$2(element, list[mid]) < 0)
            max = mid;
          else
            min = mid + 1;
        }
        ++pos;
        B.JSArray_methods.setRange$4(list, min + 1, pos, list, min);
        list[min] = element;
      }
    },
    _movingInsertionSort(list, compare, start, end, target, targetOffset) {
      var i, element, max, max0, min, mid,
        $length = end - start;
      if ($length === 0)
        return;
      target[targetOffset] = list[start];
      for (i = 1; i < $length; ++i) {
        element = list[start + i];
        max = targetOffset + i;
        for (max0 = max, min = targetOffset; min < max0;) {
          mid = min + B.JSInt_methods._shrOtherPositive$1(max0 - min, 1);
          if (compare.call$2(element, target[mid]) < 0)
            max0 = mid;
          else
            min = mid + 1;
        }
        B.JSArray_methods.setRange$4(target, min + 1, max + 1, target, min);
        target[min] = element;
      }
    },
    _mergeSort(list, compare, start, end, target, targetOffset) {
      var middle, firstLength, targetMiddle,
        $length = end - start;
      if ($length < 32) {
        A._movingInsertionSort(list, compare, start, end, target, targetOffset);
        return;
      }
      middle = start + B.JSInt_methods._shrOtherPositive$1($length, 1);
      firstLength = middle - start;
      targetMiddle = targetOffset + firstLength;
      A._mergeSort(list, compare, middle, end, target, targetMiddle);
      A._mergeSort(list, compare, start, middle, list, middle);
      A._merge(compare, list, middle, middle + firstLength, target, targetMiddle, targetMiddle + (end - middle), target, targetOffset);
    },
    _merge(compare, firstList, firstStart, firstEnd, secondList, secondStart, secondEnd, target, targetOffset) {
      var targetOffset0, cursor10, cursor20,
        cursor1 = firstStart + 1,
        firstElement = firstList[firstStart],
        cursor2 = secondStart + 1,
        secondElement = secondList[secondStart];
      for (; true; targetOffset = targetOffset0) {
        targetOffset0 = targetOffset + 1;
        if (compare.call$2(firstElement, secondElement) <= 0) {
          target[targetOffset] = firstElement;
          if (cursor1 === firstEnd) {
            targetOffset = targetOffset0;
            break;
          }
          cursor10 = cursor1 + 1;
          firstElement = firstList[cursor1];
        } else {
          target[targetOffset] = secondElement;
          if (cursor2 !== secondEnd) {
            cursor20 = cursor2 + 1;
            secondElement = secondList[cursor2];
            cursor2 = cursor20;
            continue;
          }
          targetOffset = targetOffset0 + 1;
          target[targetOffset0] = firstElement;
          B.JSArray_methods.setRange$4(target, targetOffset, targetOffset + (firstEnd - cursor1), firstList, cursor1);
          return;
        }
        cursor1 = cursor10;
      }
      targetOffset0 = targetOffset + 1;
      target[targetOffset] = secondElement;
      B.JSArray_methods.setRange$4(target, targetOffset0, targetOffset0 + (secondEnd - cursor2), secondList, cursor2);
    },
    debugFormatDouble(value) {
      if (value == null)
        return "null";
      return B.JSNumber_methods.toStringAsFixed$1(value, 1);
    },
    compute(callback, message, debugLabel, $M, $R) {
      return A.compute0(callback, message, debugLabel, $M, $R);
    },
    debugPrintThrottled(message, wrapWidth) {
      var t1 = type$.JSArray_String,
        messageLines = A._setArrayType(message.split("\n"), t1);
      $.$get$_debugPrintBuffer().addAll$1(0, messageLines);
      if (!$._debugPrintScheduled)
        A._debugPrintTask();
    },
    _debugPrintTask() {
      var line,
        t1 = $._debugPrintScheduled = false,
        t2 = $.$get$_debugPrintStopwatch();
      if (A.Duration$(0, t2.get$elapsedMicroseconds(), 0, 0, 0)._duration > 1000000) {
        if (t2._stop == null)
          t2._stop = $.Primitives_timerTicks.call$0();
        t2.reset$0();
        $._debugPrintedCharacters = 0;
      }
      while (true) {
        if (!($._debugPrintedCharacters < 12288 ? !$.$get$_debugPrintBuffer().get$isEmpty(0) : t1))
          break;
        line = $.$get$_debugPrintBuffer().removeFirst$0();
        $._debugPrintedCharacters = $._debugPrintedCharacters + line.length;
        A.printString(line);
      }
      if (!$.$get$_debugPrintBuffer().get$isEmpty(0)) {
        $._debugPrintScheduled = true;
        $._debugPrintedCharacters = 0;
        A.Timer_Timer(B.Duration_1000000, A.print___debugPrintTask$closure());
        if ($._debugPrintCompleter == null)
          $._debugPrintCompleter = new A._AsyncCompleter(new A._Future($.Zone__current, type$._Future_void), type$._AsyncCompleter_void);
      } else {
        $.$get$_debugPrintStopwatch().start$0();
        t1 = $._debugPrintCompleter;
        if (t1 != null)
          t1.complete$0();
        $._debugPrintCompleter = null;
      }
    },
    ElevationOverlay_applyOverlay(context, color, elevation) {
      var t2,
        theme = A.Theme_of(context),
        t1 = false;
      if (elevation > 0)
        if (theme.applyElevationOverlayColor) {
          t2 = theme.colorScheme;
          if (t2.brightness === B.Brightness_0) {
            t1 = t2.surface.value;
            t1 = A.Color$fromARGB(255, color.get$value() >>> 16 & 255, color.get$value() >>> 8 & 255, color.get$value() & 255).$eq(0, A.Color$fromARGB(255, t1 >>> 16 & 255, t1 >>> 8 & 255, t1 & 255));
          }
        }
      if (t1) {
        t1 = theme.colorScheme.onSurface.value;
        return A.Color_alphaBlend(A.Color$fromARGB(B.JSNumber_methods.round$0(255 * ((4.5 * Math.log(elevation + 1) + 2) / 100)), t1 >>> 16 & 255, t1 >>> 8 & 255, t1 & 255), color);
      }
      return color;
    },
    Feedback_forTap(context) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue;
      var $async$Feedback_forTap = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          $async$outer:
            switch ($async$goto) {
              case 0:
                // Function start
                context.get$renderObject().sendSemanticsEvent$1(B.TapSemanticEvent_tap);
                switch (A.Theme_of(context).platform.index) {
                  case 0:
                  case 1:
                    $async$returnValue = A.SystemSound_play(B.SystemSoundType_0);
                    // goto return
                    $async$goto = 1;
                    break $async$outer;
                  case 2:
                  case 3:
                  case 4:
                  case 5:
                    $async$returnValue = A.Future_Future$value(null, type$.void);
                    // goto return
                    $async$goto = 1;
                    break $async$outer;
                }
              case 1:
                // return
                return A._asyncReturn($async$returnValue, $async$completer);
            }
      });
      return A._asyncStartSync($async$Feedback_forTap, $async$completer);
    },
    Feedback_forLongPress(context) {
      context.get$renderObject().sendSemanticsEvent$1(B.LongPressSemanticsEvent_longPress);
      switch (A.Theme_of(context).platform.index) {
        case 0:
        case 1:
          return A.HapticFeedback_vibrate();
        case 2:
        case 3:
        case 4:
        case 5:
          return A.Future_Future$value(null, type$.void);
      }
    },
    Gradient_lerp(a, b, t) {
      return a;
    },
    MatrixUtils_getAsTranslation(transform) {
      var values = transform._m4storage;
      if (values[0] === 1 && values[1] === 0 && values[2] === 0 && values[3] === 0 && values[4] === 0 && values[5] === 1 && values[6] === 0 && values[7] === 0 && values[8] === 0 && values[9] === 0 && values[10] === 1 && values[11] === 0 && values[14] === 0 && values[15] === 1)
        return new A.Offset(values[12], values[13]);
      return null;
    },
    MatrixUtils_matrixEquals(a, b) {
      var t1, t2, t3;
      if (a == b)
        return true;
      if (a == null) {
        b.toString;
        return A.MatrixUtils_isIdentity(b);
      }
      if (b == null)
        return A.MatrixUtils_isIdentity(a);
      t1 = a._m4storage;
      t2 = t1[0];
      t3 = b._m4storage;
      return t2 === t3[0] && t1[1] === t3[1] && t1[2] === t3[2] && t1[3] === t3[3] && t1[4] === t3[4] && t1[5] === t3[5] && t1[6] === t3[6] && t1[7] === t3[7] && t1[8] === t3[8] && t1[9] === t3[9] && t1[10] === t3[10] && t1[11] === t3[11] && t1[12] === t3[12] && t1[13] === t3[13] && t1[14] === t3[14] && t1[15] === t3[15];
    },
    MatrixUtils_isIdentity(a) {
      var t1 = a._m4storage;
      return t1[0] === 1 && t1[1] === 0 && t1[2] === 0 && t1[3] === 0 && t1[4] === 0 && t1[5] === 1 && t1[6] === 0 && t1[7] === 0 && t1[8] === 0 && t1[9] === 0 && t1[10] === 1 && t1[11] === 0 && t1[12] === 0 && t1[13] === 0 && t1[14] === 0 && t1[15] === 1;
    },
    MatrixUtils_transformPoint(transform, point) {
      var storage = transform._m4storage,
        x = point._dx,
        y = point._dy,
        rx = storage[0] * x + storage[4] * y + storage[12],
        ry = storage[1] * x + storage[5] * y + storage[13],
        rw = storage[3] * x + storage[7] * y + storage[15];
      if (rw === 1)
        return new A.Offset(rx, ry);
      else
        return new A.Offset(rx / rw, ry / rw);
    },
    MatrixUtils__accumulate(m, x, y, first, isAffine) {
      var t1,
        w = isAffine ? 1 : 1 / (m[3] * x + m[7] * y + m[15]),
        tx = (m[0] * x + m[4] * y + m[12]) * w,
        ty = (m[1] * x + m[5] * y + m[13]) * w;
      if (first) {
        t1 = $.$get$MatrixUtils__minMax();
        t1.$flags & 2 && A.throwUnsupportedOperation(t1);
        t1[2] = tx;
        t1[0] = tx;
        t1[3] = ty;
        t1[1] = ty;
      } else {
        t1 = $.$get$MatrixUtils__minMax();
        if (tx < t1[0]) {
          t1.$flags & 2 && A.throwUnsupportedOperation(t1);
          t1[0] = tx;
        }
        if (ty < t1[1]) {
          t1.$flags & 2 && A.throwUnsupportedOperation(t1);
          t1[1] = ty;
        }
        if (tx > t1[2]) {
          t1.$flags & 2 && A.throwUnsupportedOperation(t1);
          t1[2] = tx;
        }
        if (ty > t1[3]) {
          t1.$flags & 2 && A.throwUnsupportedOperation(t1);
          t1[3] = ty;
        }
      }
    },
    MatrixUtils_transformRect(transform, rect) {
      var isAffine, wx, hx, rx, wy, hy, ry, left, right, $top, bottom, hw, rw, ulx, uly, urx, t3, ury, t4, llx, lly, lrx, lry,
        storage = transform._m4storage,
        x = rect.left,
        y = rect.top,
        t1 = rect.right,
        w = t1 - x,
        t2 = rect.bottom,
        h = t2 - y;
      if (!isFinite(w) || !isFinite(h)) {
        isAffine = storage[3] === 0 && storage[7] === 0 && storage[15] === 1;
        A.MatrixUtils__accumulate(storage, x, y, true, isAffine);
        A.MatrixUtils__accumulate(storage, t1, y, false, isAffine);
        A.MatrixUtils__accumulate(storage, x, t2, false, isAffine);
        A.MatrixUtils__accumulate(storage, t1, t2, false, isAffine);
        t1 = $.$get$MatrixUtils__minMax();
        return new A.Rect(t1[0], t1[1], t1[2], t1[3]);
      }
      t1 = storage[0];
      wx = t1 * w;
      t2 = storage[4];
      hx = t2 * h;
      rx = t1 * x + t2 * y + storage[12];
      t2 = storage[1];
      wy = t2 * w;
      t1 = storage[5];
      hy = t1 * h;
      ry = t2 * x + t1 * y + storage[13];
      t1 = storage[3];
      if (t1 === 0 && storage[7] === 0 && storage[15] === 1) {
        left = rx + wx;
        if (wx < 0)
          right = rx;
        else {
          right = left;
          left = rx;
        }
        if (hx < 0)
          left += hx;
        else
          right += hx;
        $top = ry + wy;
        if (wy < 0)
          bottom = ry;
        else {
          bottom = $top;
          $top = ry;
        }
        if (hy < 0)
          $top += hy;
        else
          bottom += hy;
        return new A.Rect(left, $top, right, bottom);
      } else {
        t2 = storage[7];
        hw = t2 * h;
        rw = t1 * x + t2 * y + storage[15];
        ulx = rx / rw;
        uly = ry / rw;
        t2 = rx + wx;
        t1 = rw + t1 * w;
        urx = t2 / t1;
        t3 = ry + wy;
        ury = t3 / t1;
        t4 = rw + hw;
        llx = (rx + hx) / t4;
        lly = (ry + hy) / t4;
        t1 += hw;
        lrx = (t2 + hx) / t1;
        lry = (t3 + hy) / t1;
        return new A.Rect(A.MatrixUtils__min4(ulx, urx, llx, lrx), A.MatrixUtils__min4(uly, ury, lly, lry), A.MatrixUtils__max4(ulx, urx, llx, lrx), A.MatrixUtils__max4(uly, ury, lly, lry));
      }
    },
    MatrixUtils__min4(a, b, c, d) {
      var e = a < b ? a : b,
        f = c < d ? c : d;
      return e < f ? e : f;
    },
    MatrixUtils__max4(a, b, c, d) {
      var e = a > b ? a : b,
        f = c > d ? c : d;
      return e > f ? e : f;
    },
    MatrixUtils_inverseTransformRect(transform, rect) {
      var transform0;
      if (A.MatrixUtils_isIdentity(transform))
        return rect;
      transform0 = new A.Matrix4(new Float64Array(16));
      transform0.setFrom$1(transform);
      transform0.copyInverse$1(transform0);
      return A.MatrixUtils_transformRect(transform0, rect);
    },
    MatrixUtils_forceToPoint(offset) {
      var t2,
        t1 = new A.Matrix4(new Float64Array(16));
      t1.setIdentity$0();
      t2 = new A.Vector4(new Float64Array(4));
      t2.setValues$4(0, 0, 0, offset._dx);
      t1.setRow$2(0, t2);
      t2 = new A.Vector4(new Float64Array(4));
      t2.setValues$4(0, 0, 0, offset._dy);
      t1.setRow$2(1, t2);
      return t1;
    },
    nearEqual(a, b, epsilon) {
      if (a == null)
        return a === b;
      return a > b - epsilon && a < b + epsilon || a === b;
    },
    ChildLayoutHelper_dryLayoutChild(child, constraints) {
      return child.getDryLayout$1(constraints);
    },
    ChildLayoutHelper_layoutChild(child, constraints) {
      var t1;
      child.layout$2$parentUsesSize(constraints, true);
      t1 = child._size;
      t1.toString;
      return t1;
    },
    SemanticsService_tooltip(message) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void);
      var $async$SemanticsService_tooltip = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 2;
              return A._asyncAwait(B.BasicMessageChannel_vKF.send$1(new A.TooltipSemanticsEvent(message, "tooltip").toMap$0()), $async$SemanticsService_tooltip);
            case 2:
              // returning from await.
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$SemanticsService_tooltip, $async$completer);
    },
    HapticFeedback_vibrate() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void);
      var $async$HapticFeedback_vibrate = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 2;
              return A._asyncAwait(B.OptionalMethodChannel_ZFR.invokeMethod$1$1("HapticFeedback.vibrate", type$.void), $async$HapticFeedback_vibrate);
            case 2:
              // returning from await.
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$HapticFeedback_vibrate, $async$completer);
    },
    HapticFeedback_mediumImpact() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void);
      var $async$HapticFeedback_mediumImpact = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 2;
              return A._asyncAwait(B.OptionalMethodChannel_ZFR.invokeMethod$1$2("HapticFeedback.vibrate", "HapticFeedbackType.mediumImpact", type$.void), $async$HapticFeedback_mediumImpact);
            case 2:
              // returning from await.
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$HapticFeedback_mediumImpact, $async$completer);
    },
    HapticFeedback_selectionClick() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void);
      var $async$HapticFeedback_selectionClick = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 2;
              return A._asyncAwait(B.OptionalMethodChannel_ZFR.invokeMethod$1$2("HapticFeedback.vibrate", "HapticFeedbackType.selectionClick", type$.void), $async$HapticFeedback_selectionClick);
            case 2:
              // returning from await.
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$HapticFeedback_selectionClick, $async$completer);
    },
    SystemNavigator_pop() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void);
      var $async$SystemNavigator_pop = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 2;
              return A._asyncAwait(B.OptionalMethodChannel_ZFR.invokeMethod$1$2("SystemNavigator.pop", null, type$.void), $async$SystemNavigator_pop);
            case 2:
              // returning from await.
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$SystemNavigator_pop, $async$completer);
    },
    SystemNavigator_routeInformationUpdated($location, replace, state) {
      return B.OptionalMethodChannel_sjf.invokeMethod$1$2("routeInformationUpdated", A.LinkedHashMap_LinkedHashMap$_literal(["location", $location, "state", state, "replace", replace], type$.String, type$.dynamic), type$.void);
    },
    createLocalImageConfiguration(context) {
      var t1, t2;
      context.dependOnInheritedWidgetOfExactType$1$0(type$.DefaultAssetBundle);
      t1 = $.$get$rootBundle();
      t2 = A.MediaQuery__maybeOf(context, B._MediaQueryAspect_2);
      t2 = t2 == null ? null : t2.devicePixelRatio;
      if (t2 == null)
        t2 = 1;
      return new A.ImageConfiguration(t1, t2, A.Localizations_maybeLocaleOf(context), A.Directionality_maybeOf(context), null, A.defaultTargetPlatform());
    },
    main(args) {
      var t1, t2, t3, t4, t5, t6, _null = null;
      A.initializeBenchmarkHarness("FluteComplex", args);
      A.initializeEngine(B.Size_3840_2160);
      if ($.WidgetsBinding__instance == null) {
        t1 = A._setArrayType([], type$.JSArray_WidgetsBindingObserver);
        t2 = $.Zone__current;
        t3 = A._setArrayType([], type$.JSArray_of_void_Function_List_FrameTiming);
        t4 = A.List_List$filled(7, _null, false, type$.nullable__TaskEntry_dynamic);
        t5 = type$.int;
        t6 = type$.JSArray_of_void_Function_Duration;
        t5 = new A.WidgetsFlutterBinding(_null, $, t1, true, new A._AsyncCompleter(new A._Future(t2, type$._Future_void), type$._AsyncCompleter_void), false, _null, false, false, _null, $, _null, false, 0, false, $, 0, _null, $, $, new A._SystemFontsNotifier(A.LinkedHashSet_LinkedHashSet$_empty(type$.void_Function)), $, $, $, $, _null, t3, _null, A.binding__defaultSchedulingStrategy$closure(), new A.HeapPriorityQueue(A.binding_SchedulerBinding__taskSorter$closure(), t4, type$.HeapPriorityQueue__TaskEntry_dynamic), false, 0, A.LinkedHashMap_LinkedHashMap$_empty(t5, type$._FrameCallbackEntry), A.HashSet_HashSet(t5), A._setArrayType([], t6), A._setArrayType([], t6), _null, false, B.SchedulerPhase_0, true, false, _null, B.Duration_0, B.Duration_0, _null, 0, _null, false, _null, _null, 0, A.ListQueue$(_null, type$.PointerEvent), new A.PointerRouter(A.LinkedHashMap_LinkedHashMap$_empty(t5, type$.Map_of_void_Function_PointerEvent_and_nullable_Matrix4), A.LinkedHashMap_LinkedHashMap$_empty(type$.void_Function_PointerEvent, type$.nullable_Matrix4)), new A.GestureArenaManager(A.LinkedHashMap_LinkedHashMap$_empty(t5, type$._GestureArena)), new A.PointerSignalResolver(), A.LinkedHashMap_LinkedHashMap$_empty(t5, type$.HitTestResult), $, false, B.Duration_m38000);
        t5.initInstances$0();
        t5.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding$initServiceExtensions();
      }
      t1 = $.WidgetsBinding__instance;
      t1.toString;
      t2 = $.$get$PlatformDispatcher__instance().viewData.$index(0, 0);
      t2.toString;
      t1.scheduleAttachRootWidget$1(new A.View(t2, new A.MyApp(_null), new A.GlobalObjectKey(t2, type$.GlobalObjectKey_State_StatefulWidget)));
      t1.scheduleWarmUpFrame$0();
    }
  },
  B = {};
  var holders = [A, J, B];
  var $ = {};
  A.JS_CONST.prototype = {};
  J.Interceptor.prototype = {
    $eq(receiver, other) {
      return receiver === other;
    },
    get$hashCode(receiver) {
      return A.Primitives_objectHashCode(receiver);
    },
    toString$0(receiver) {
      return "Instance of '" + A.Primitives_objectTypeName(receiver) + "'";
    },
    get$runtimeType(receiver) {
      return A.createRuntimeType(A._instanceTypeFromConstructor(this));
    }
  };
  J.JSBool.prototype = {
    toString$0(receiver) {
      return String(receiver);
    },
    get$hashCode(receiver) {
      return receiver ? 519018 : 218159;
    },
    get$runtimeType(receiver) {
      return A.createRuntimeType(type$.bool);
    },
    $isTrustedGetRuntimeType: 1,
    $isbool: 1
  };
  J.JSNull.prototype = {
    $eq(receiver, other) {
      return null == other;
    },
    toString$0(receiver) {
      return "null";
    },
    get$hashCode(receiver) {
      return 0;
    },
    get$runtimeType(receiver) {
      return A.createRuntimeType(type$.Null);
    },
    $isTrustedGetRuntimeType: 1,
    $isNull: 1
  };
  J.JavaScriptObject.prototype = {$isJSObject: 1};
  J.LegacyJavaScriptObject.prototype = {
    get$hashCode(receiver) {
      return 0;
    },
    get$runtimeType(receiver) {
      return B.Type_JSObject_ttY;
    },
    toString$0(receiver) {
      return String(receiver);
    }
  };
  J.PlainJavaScriptObject.prototype = {};
  J.UnknownJavaScriptObject.prototype = {};
  J.JavaScriptFunction.prototype = {
    toString$0(receiver) {
      var dartClosure = receiver[$.$get$DART_CLOSURE_PROPERTY_NAME()];
      if (dartClosure == null)
        return this.super$LegacyJavaScriptObject$toString(receiver);
      return "JavaScript function for " + J.toString$0$(dartClosure);
    },
    $isFunction: 1
  };
  J.JavaScriptBigInt.prototype = {
    get$hashCode(receiver) {
      return 0;
    },
    toString$0(receiver) {
      return String(receiver);
    }
  };
  J.JavaScriptSymbol.prototype = {
    get$hashCode(receiver) {
      return 0;
    },
    toString$0(receiver) {
      return String(receiver);
    }
  };
  J.JSArray.prototype = {
    cast$1$0(receiver, $R) {
      return new A.CastList(receiver, A._arrayInstanceType(receiver)._eval$1("@<1>")._bind$1($R)._eval$1("CastList<1,2>"));
    },
    add$1(receiver, value) {
      receiver.$flags & 1 && A.throwUnsupportedOperation(receiver, 29);
      receiver.push(value);
    },
    removeAt$1(receiver, index) {
      receiver.$flags & 1 && A.throwUnsupportedOperation(receiver, "removeAt", 1);
      if (index < 0 || index >= receiver.length)
        throw A.wrapException(A.RangeError$value(index, null));
      return receiver.splice(index, 1)[0];
    },
    insert$2(receiver, index, value) {
      receiver.$flags & 1 && A.throwUnsupportedOperation(receiver, "insert", 2);
      if (index < 0 || index > receiver.length)
        throw A.wrapException(A.RangeError$value(index, null));
      receiver.splice(index, 0, value);
    },
    insertAll$2(receiver, index, iterable) {
      var insertionLength, end;
      receiver.$flags & 1 && A.throwUnsupportedOperation(receiver, "insertAll", 2);
      A.RangeError_checkValueInInterval(index, 0, receiver.length, "index");
      if (!type$.EfficientLengthIterable_dynamic._is(iterable))
        iterable = J.toList$0$ax(iterable);
      insertionLength = J.get$length$asx(iterable);
      receiver.length = receiver.length + insertionLength;
      end = index + insertionLength;
      this.setRange$4(receiver, end, receiver.length, receiver, index);
      this.setRange$3(receiver, index, end, iterable);
    },
    removeLast$0(receiver) {
      receiver.$flags & 1 && A.throwUnsupportedOperation(receiver, "removeLast", 1);
      if (receiver.length === 0)
        throw A.wrapException(A.diagnoseIndexError(receiver, -1));
      return receiver.pop();
    },
    remove$1(receiver, element) {
      var i;
      receiver.$flags & 1 && A.throwUnsupportedOperation(receiver, "remove", 1);
      for (i = 0; i < receiver.length; ++i)
        if (J.$eq$(receiver[i], element)) {
          receiver.splice(i, 1);
          return true;
        }
      return false;
    },
    removeWhere$1(receiver, test) {
      receiver.$flags & 1 && A.throwUnsupportedOperation(receiver, 16);
      this._removeWhere$2(receiver, test, true);
    },
    _removeWhere$2(receiver, test, removeMatching) {
      var i, element, t1, retained = [],
        end = receiver.length;
      for (i = 0; i < end; ++i) {
        element = receiver[i];
        if (!test.call$1(element))
          retained.push(element);
        if (receiver.length !== end)
          throw A.wrapException(A.ConcurrentModificationError$(receiver));
      }
      t1 = retained.length;
      if (t1 === end)
        return;
      this.set$length(receiver, t1);
      for (i = 0; i < retained.length; ++i)
        receiver[i] = retained[i];
    },
    where$1(receiver, f) {
      return new A.WhereIterable(receiver, f, A._arrayInstanceType(receiver)._eval$1("WhereIterable<1>"));
    },
    addAll$1(receiver, collection) {
      var t1;
      receiver.$flags & 1 && A.throwUnsupportedOperation(receiver, "addAll", 2);
      if (Array.isArray(collection)) {
        this._addAllFromArray$1(receiver, collection);
        return;
      }
      for (t1 = J.get$iterator$ax(collection); t1.moveNext$0();)
        receiver.push(t1.get$current());
    },
    _addAllFromArray$1(receiver, array) {
      var i,
        len = array.length;
      if (len === 0)
        return;
      if (receiver === array)
        throw A.wrapException(A.ConcurrentModificationError$(receiver));
      for (i = 0; i < len; ++i)
        receiver.push(array[i]);
    },
    clear$0(receiver) {
      receiver.$flags & 1 && A.throwUnsupportedOperation(receiver, "clear", "clear");
      receiver.length = 0;
    },
    forEach$1(receiver, f) {
      var i,
        end = receiver.length;
      for (i = 0; i < end; ++i) {
        f.call$1(receiver[i]);
        if (receiver.length !== end)
          throw A.wrapException(A.ConcurrentModificationError$(receiver));
      }
    },
    map$1$1(receiver, f, $T) {
      return new A.MappedListIterable(receiver, f, A._arrayInstanceType(receiver)._eval$1("@<1>")._bind$1($T)._eval$1("MappedListIterable<1,2>"));
    },
    join$1(receiver, separator) {
      var i,
        list = A.List_List$filled(receiver.length, "", false, type$.String);
      for (i = 0; i < receiver.length; ++i)
        list[i] = A.S(receiver[i]);
      return list.join(separator);
    },
    join$0(receiver) {
      return this.join$1(receiver, "");
    },
    take$1(receiver, n) {
      return A.SubListIterable$(receiver, 0, A.checkNotNullable(n, "count", type$.int), A._arrayInstanceType(receiver)._precomputed1);
    },
    skip$1(receiver, n) {
      return A.SubListIterable$(receiver, n, null, A._arrayInstanceType(receiver)._precomputed1);
    },
    fold$1$2(receiver, initialValue, combine) {
      var value, i,
        $length = receiver.length;
      for (value = initialValue, i = 0; i < $length; ++i) {
        value = combine.call$2(value, receiver[i]);
        if (receiver.length !== $length)
          throw A.wrapException(A.ConcurrentModificationError$(receiver));
      }
      return value;
    },
    fold$2(receiver, initialValue, combine) {
      return this.fold$1$2(receiver, initialValue, combine, type$.dynamic);
    },
    firstWhere$2$orElse(receiver, test, orElse) {
      var i, element,
        end = receiver.length;
      for (i = 0; i < end; ++i) {
        element = receiver[i];
        if (test.call$1(element))
          return element;
        if (receiver.length !== end)
          throw A.wrapException(A.ConcurrentModificationError$(receiver));
      }
      throw A.wrapException(A.IterableElementError_noElement());
    },
    firstWhere$1(receiver, test) {
      return this.firstWhere$2$orElse(receiver, test, null);
    },
    lastWhere$2$orElse(receiver, test, orElse) {
      var i, element,
        $length = receiver.length;
      for (i = $length - 1; i >= 0; --i) {
        element = receiver[i];
        if (test.call$1(element))
          return element;
        if ($length !== receiver.length)
          throw A.wrapException(A.ConcurrentModificationError$(receiver));
      }
      if (orElse != null)
        return orElse.call$0();
      throw A.wrapException(A.IterableElementError_noElement());
    },
    lastWhere$1(receiver, test) {
      return this.lastWhere$2$orElse(receiver, test, null);
    },
    elementAt$1(receiver, index) {
      return receiver[index];
    },
    sublist$1(receiver, start) {
      var t1 = receiver.length;
      if (start > t1)
        throw A.wrapException(A.RangeError$range(start, 0, t1, "start", null));
      if (start === t1)
        return A._setArrayType([], A._arrayInstanceType(receiver));
      return A._setArrayType(receiver.slice(start, t1), A._arrayInstanceType(receiver));
    },
    getRange$2(receiver, start, end) {
      A.RangeError_checkValidRange(start, end, receiver.length, null, null);
      return A.SubListIterable$(receiver, start, end, A._arrayInstanceType(receiver)._precomputed1);
    },
    get$first(receiver) {
      if (receiver.length > 0)
        return receiver[0];
      throw A.wrapException(A.IterableElementError_noElement());
    },
    get$last(receiver) {
      var t1 = receiver.length;
      if (t1 > 0)
        return receiver[t1 - 1];
      throw A.wrapException(A.IterableElementError_noElement());
    },
    get$single(receiver) {
      var t1 = receiver.length;
      if (t1 === 1)
        return receiver[0];
      if (t1 === 0)
        throw A.wrapException(A.IterableElementError_noElement());
      throw A.wrapException(A.IterableElementError_tooMany());
    },
    setRange$4(receiver, start, end, iterable, skipCount) {
      var $length, otherList, otherStart, t1, i;
      receiver.$flags & 2 && A.throwUnsupportedOperation(receiver, 5);
      A.RangeError_checkValidRange(start, end, receiver.length, null, null);
      $length = end - start;
      if ($length === 0)
        return;
      A.RangeError_checkNotNegative(skipCount, "skipCount");
      if (type$.List_dynamic._is(iterable)) {
        otherList = iterable;
        otherStart = skipCount;
      } else {
        otherList = J.skip$1$ax(iterable, skipCount).toList$1$growable(0, false);
        otherStart = 0;
      }
      t1 = J.getInterceptor$asx(otherList);
      if (otherStart + $length > t1.get$length(otherList))
        throw A.wrapException(A.IterableElementError_tooFew());
      if (otherStart < start)
        for (i = $length - 1; i >= 0; --i)
          receiver[start + i] = t1.$index(otherList, otherStart + i);
      else
        for (i = 0; i < $length; ++i)
          receiver[start + i] = t1.$index(otherList, otherStart + i);
    },
    setRange$3(receiver, start, end, iterable) {
      return this.setRange$4(receiver, start, end, iterable, 0);
    },
    any$1(receiver, test) {
      var i,
        end = receiver.length;
      for (i = 0; i < end; ++i) {
        if (test.call$1(receiver[i]))
          return true;
        if (receiver.length !== end)
          throw A.wrapException(A.ConcurrentModificationError$(receiver));
      }
      return false;
    },
    sort$1(receiver, compare) {
      var len, a, b, undefineds, i;
      receiver.$flags & 2 && A.throwUnsupportedOperation(receiver, "sort");
      len = receiver.length;
      if (len < 2)
        return;
      if (compare == null)
        compare = J._interceptors_JSArray__compareAny$closure();
      if (len === 2) {
        a = receiver[0];
        b = receiver[1];
        if (compare.call$2(a, b) > 0) {
          receiver[0] = b;
          receiver[1] = a;
        }
        return;
      }
      undefineds = 0;
      if (A._arrayInstanceType(receiver)._precomputed1._is(null))
        for (i = 0; i < receiver.length; ++i)
          if (receiver[i] === void 0) {
            receiver[i] = null;
            ++undefineds;
          }
      receiver.sort(A.convertDartClosureToJS(compare, 2));
      if (undefineds > 0)
        this._replaceSomeNullsWithUndefined$1(receiver, undefineds);
    },
    sort$0(receiver) {
      return this.sort$1(receiver, null);
    },
    _replaceSomeNullsWithUndefined$1(receiver, count) {
      var i0,
        i = receiver.length;
      for (; i0 = i - 1, i > 0; i = i0)
        if (receiver[i0] === null) {
          receiver[i0] = void 0;
          --count;
          if (count === 0)
            break;
        }
    },
    indexOf$1(receiver, element) {
      var i,
        $length = receiver.length;
      if (0 >= $length)
        return -1;
      for (i = 0; i < $length; ++i)
        if (J.$eq$(receiver[i], element))
          return i;
      return -1;
    },
    contains$1(receiver, other) {
      var i;
      for (i = 0; i < receiver.length; ++i)
        if (J.$eq$(receiver[i], other))
          return true;
      return false;
    },
    get$isEmpty(receiver) {
      return receiver.length === 0;
    },
    get$isNotEmpty(receiver) {
      return receiver.length !== 0;
    },
    toString$0(receiver) {
      return A.Iterable_iterableToFullString(receiver, "[", "]");
    },
    toList$1$growable(receiver, growable) {
      var t1 = A._arrayInstanceType(receiver);
      return growable ? A._setArrayType(receiver.slice(0), t1) : J.JSArray_JSArray$markFixed(receiver.slice(0), t1._precomputed1);
    },
    toList$0(receiver) {
      return this.toList$1$growable(receiver, true);
    },
    get$iterator(receiver) {
      return new J.ArrayIterator(receiver, receiver.length, A._arrayInstanceType(receiver)._eval$1("ArrayIterator<1>"));
    },
    get$hashCode(receiver) {
      return A.Primitives_objectHashCode(receiver);
    },
    get$length(receiver) {
      return receiver.length;
    },
    set$length(receiver, newLength) {
      receiver.$flags & 1 && A.throwUnsupportedOperation(receiver, "set length", "change the length of");
      if (newLength < 0)
        throw A.wrapException(A.RangeError$range(newLength, 0, null, "newLength", null));
      if (newLength > receiver.length)
        A._arrayInstanceType(receiver)._precomputed1._as(null);
      receiver.length = newLength;
    },
    $index(receiver, index) {
      if (!(index >= 0 && index < receiver.length))
        throw A.wrapException(A.diagnoseIndexError(receiver, index));
      return receiver[index];
    },
    $indexSet(receiver, index, value) {
      receiver.$flags & 2 && A.throwUnsupportedOperation(receiver);
      if (!(index >= 0 && index < receiver.length))
        throw A.wrapException(A.diagnoseIndexError(receiver, index));
      receiver[index] = value;
    },
    followedBy$1(receiver, other) {
      return A.FollowedByIterable_FollowedByIterable$firstEfficient(receiver, other, A._arrayInstanceType(receiver)._precomputed1);
    },
    $add(receiver, other) {
      var t1 = A.List_List$_of(receiver, A._arrayInstanceType(receiver)._precomputed1);
      this.addAll$1(t1, other);
      return t1;
    },
    indexWhere$1(receiver, test) {
      var i;
      if (0 >= receiver.length)
        return -1;
      for (i = 0; i < receiver.length; ++i)
        if (test.call$1(receiver[i]))
          return i;
      return -1;
    },
    get$runtimeType(receiver) {
      return A.createRuntimeType(A._arrayInstanceType(receiver));
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  J.JSArraySafeToStringHook.prototype = {
    tryFormat$1(array) {
      var flags, info, base;
      if (!Array.isArray(array))
        return null;
      flags = array.$flags | 0;
      if ((flags & 4) !== 0)
        info = "const, ";
      else if ((flags & 2) !== 0)
        info = "unmodifiable, ";
      else
        info = (flags & 1) !== 0 ? "fixed, " : "";
      base = "Instance of '" + A.Primitives_objectTypeName(array) + "'";
      if (info === "")
        return base;
      return base + " (" + info + "length: " + array.length + ")";
    }
  };
  J.JSUnmodifiableArray.prototype = {};
  J.ArrayIterator.prototype = {
    get$current() {
      var t1 = this.__interceptors$_current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var t2, _this = this,
        t1 = _this._iterable,
        $length = t1.length;
      if (_this._length !== $length)
        throw A.wrapException(A.throwConcurrentModificationError(t1));
      t2 = _this._index;
      if (t2 >= $length) {
        _this.__interceptors$_current = null;
        return false;
      }
      _this.__interceptors$_current = t1[t2];
      _this._index = t2 + 1;
      return true;
    }
  };
  J.JSNumber.prototype = {
    compareTo$1(receiver, b) {
      var bIsNegative;
      if (receiver < b)
        return -1;
      else if (receiver > b)
        return 1;
      else if (receiver === b) {
        if (receiver === 0) {
          bIsNegative = this.get$isNegative(b);
          if (this.get$isNegative(receiver) === bIsNegative)
            return 0;
          if (this.get$isNegative(receiver))
            return -1;
          return 1;
        }
        return 0;
      } else if (isNaN(receiver)) {
        if (isNaN(b))
          return 0;
        return 1;
      } else
        return -1;
    },
    get$isNegative(receiver) {
      return receiver === 0 ? 1 / receiver < 0 : receiver < 0;
    },
    get$sign(receiver) {
      var t1;
      if (receiver > 0)
        t1 = 1;
      else
        t1 = receiver < 0 ? -1 : receiver;
      return t1;
    },
    toInt$0(receiver) {
      var t1;
      if (receiver >= -2147483648 && receiver <= 2147483647)
        return receiver | 0;
      if (isFinite(receiver)) {
        t1 = receiver < 0 ? Math.ceil(receiver) : Math.floor(receiver);
        return t1 + 0;
      }
      throw A.wrapException(A.UnsupportedError$("" + receiver + ".toInt()"));
    },
    floor$0(receiver) {
      var truncated, d;
      if (receiver >= 0) {
        if (receiver <= 2147483647)
          return receiver | 0;
      } else if (receiver >= -2147483648) {
        truncated = receiver | 0;
        return receiver === truncated ? truncated : truncated - 1;
      }
      d = Math.floor(receiver);
      if (isFinite(d))
        return d;
      throw A.wrapException(A.UnsupportedError$("" + receiver + ".floor()"));
    },
    round$0(receiver) {
      if (receiver > 0) {
        if (receiver !== 1 / 0)
          return Math.round(receiver);
      } else if (receiver > -1 / 0)
        return 0 - Math.round(0 - receiver);
      throw A.wrapException(A.UnsupportedError$("" + receiver + ".round()"));
    },
    clamp$2(receiver, lowerLimit, upperLimit) {
      if (B.JSInt_methods.compareTo$1(lowerLimit, upperLimit) > 0)
        throw A.wrapException(A.argumentErrorValue(lowerLimit));
      if (this.compareTo$1(receiver, lowerLimit) < 0)
        return lowerLimit;
      if (this.compareTo$1(receiver, upperLimit) > 0)
        return upperLimit;
      return receiver;
    },
    toStringAsFixed$1(receiver, fractionDigits) {
      var result;
      if (fractionDigits > 20)
        throw A.wrapException(A.RangeError$range(fractionDigits, 0, 20, "fractionDigits", null));
      result = receiver.toFixed(fractionDigits);
      if (receiver === 0 && this.get$isNegative(receiver))
        return "-" + result;
      return result;
    },
    toRadixString$1(receiver, radix) {
      var result, match, exponent, t1;
      if (radix < 2 || radix > 36)
        throw A.wrapException(A.RangeError$range(radix, 2, 36, "radix", null));
      result = receiver.toString(radix);
      if (result.charCodeAt(result.length - 1) !== 41)
        return result;
      match = /^([\da-z]+)(?:\.([\da-z]+))?\(e\+(\d+)\)$/.exec(result);
      if (match == null)
        A.throwExpression(A.UnsupportedError$("Unexpected toString result: " + result));
      result = match[1];
      exponent = +match[3];
      t1 = match[2];
      if (t1 != null) {
        result += t1;
        exponent -= t1.length;
      }
      return result + B.JSString_methods.$mul("0", exponent);
    },
    toString$0(receiver) {
      if (receiver === 0 && 1 / receiver < 0)
        return "-0.0";
      else
        return "" + receiver;
    },
    get$hashCode(receiver) {
      var absolute, floorLog2, factor, scaled,
        intValue = receiver | 0;
      if (receiver === intValue)
        return intValue & 536870911;
      absolute = Math.abs(receiver);
      floorLog2 = Math.log(absolute) / 0.6931471805599453 | 0;
      factor = Math.pow(2, floorLog2);
      scaled = absolute < 1 ? absolute / factor : factor / absolute;
      return ((scaled * 9007199254740992 | 0) + (scaled * 3542243181176521 | 0)) * 599197 + floorLog2 * 1259 & 536870911;
    },
    $add(receiver, other) {
      return receiver + other;
    },
    $sub(receiver, other) {
      return receiver - other;
    },
    $mul(receiver, other) {
      return receiver * other;
    },
    $mod(receiver, other) {
      var result = receiver % other;
      if (result === 0)
        return 0;
      if (result > 0)
        return result;
      if (other < 0)
        return result - other;
      else
        return result + other;
    },
    $tdiv(receiver, other) {
      if ((receiver | 0) === receiver)
        if (other >= 1 || other < -1)
          return receiver / other | 0;
      return this._tdivSlow$1(receiver, other);
    },
    _tdivFast$1(receiver, other) {
      return (receiver | 0) === receiver ? receiver / other | 0 : this._tdivSlow$1(receiver, other);
    },
    _tdivSlow$1(receiver, other) {
      var quotient = receiver / other;
      if (quotient >= -2147483648 && quotient <= 2147483647)
        return quotient | 0;
      if (quotient > 0) {
        if (quotient !== 1 / 0)
          return Math.floor(quotient);
      } else if (quotient > -1 / 0)
        return Math.ceil(quotient);
      throw A.wrapException(A.UnsupportedError$("Result of truncating division is " + A.S(quotient) + ": " + A.S(receiver) + " ~/ " + A.S(other)));
    },
    _shrOtherPositive$1(receiver, other) {
      var t1;
      if (receiver > 0)
        t1 = this._shrBothPositive$1(receiver, other);
      else {
        t1 = other > 31 ? 31 : other;
        t1 = receiver >> t1 >>> 0;
      }
      return t1;
    },
    _shrReceiverPositive$1(receiver, other) {
      if (0 > other)
        throw A.wrapException(A.argumentErrorValue(other));
      return this._shrBothPositive$1(receiver, other);
    },
    _shrBothPositive$1(receiver, other) {
      return other > 31 ? 0 : receiver >>> other;
    },
    _shruOtherPositive$1(receiver, other) {
      if (other > 31)
        return 0;
      return receiver >>> other;
    },
    get$runtimeType(receiver) {
      return A.createRuntimeType(type$.num);
    },
    $isComparable: 1,
    $isdouble: 1,
    $isnum: 1
  };
  J.JSInt.prototype = {
    get$sign(receiver) {
      var t1;
      if (receiver > 0)
        t1 = 1;
      else
        t1 = receiver < 0 ? -1 : receiver;
      return t1;
    },
    get$runtimeType(receiver) {
      return A.createRuntimeType(type$.int);
    },
    $isTrustedGetRuntimeType: 1,
    $isint: 1
  };
  J.JSNumNotInt.prototype = {
    get$runtimeType(receiver) {
      return A.createRuntimeType(type$.double);
    },
    $isTrustedGetRuntimeType: 1
  };
  J.JSString.prototype = {
    codeUnitAt$1(receiver, index) {
      if (index < 0)
        throw A.wrapException(A.diagnoseIndexError(receiver, index));
      if (index >= receiver.length)
        A.throwExpression(A.diagnoseIndexError(receiver, index));
      return receiver.charCodeAt(index);
    },
    allMatches$2(receiver, string, start) {
      var t1 = string.length;
      if (start > t1)
        throw A.wrapException(A.RangeError$range(start, 0, t1, null, null));
      return new A._StringAllMatchesIterable(string, receiver, start);
    },
    allMatches$1(receiver, string) {
      return this.allMatches$2(receiver, string, 0);
    },
    $add(receiver, other) {
      return receiver + other;
    },
    endsWith$1(receiver, other) {
      var otherLength = other.length,
        t1 = receiver.length;
      if (otherLength > t1)
        return false;
      return other === this.substring$1(receiver, t1 - otherLength);
    },
    split$1(receiver, pattern) {
      var t1;
      if (typeof pattern == "string")
        return A._setArrayType(receiver.split(pattern), type$.JSArray_String);
      else {
        if (pattern instanceof A.JSSyntaxRegExp) {
          t1 = pattern._hasCapturesCache;
          t1 = !(t1 == null ? pattern._hasCapturesCache = pattern._computeHasCaptures$0() : t1);
        } else
          t1 = false;
        if (t1)
          return A._setArrayType(receiver.split(pattern._nativeRegExp), type$.JSArray_String);
        else
          return this._defaultSplit$1(receiver, pattern);
      }
    },
    replaceRange$3(receiver, start, end, replacement) {
      var e = A.RangeError_checkValidRange(start, end, receiver.length, null, null);
      return A.stringReplaceRangeUnchecked(receiver, start, e, replacement);
    },
    _defaultSplit$1(receiver, pattern) {
      var t1, start, $length, match, matchStart, matchEnd,
        result = A._setArrayType([], type$.JSArray_String);
      for (t1 = J.allMatches$1$s(pattern, receiver), t1 = t1.get$iterator(t1), start = 0, $length = 1; t1.moveNext$0();) {
        match = t1.get$current();
        matchStart = match.get$start();
        matchEnd = match.get$end();
        $length = matchEnd - matchStart;
        if ($length === 0 && start === matchStart)
          continue;
        result.push(this.substring$2(receiver, start, matchStart));
        start = matchEnd;
      }
      if (start < receiver.length || $length > 0)
        result.push(this.substring$1(receiver, start));
      return result;
    },
    startsWith$2(receiver, pattern, index) {
      var endIndex;
      if (index < 0 || index > receiver.length)
        throw A.wrapException(A.RangeError$range(index, 0, receiver.length, null, null));
      endIndex = index + pattern.length;
      if (endIndex > receiver.length)
        return false;
      return pattern === receiver.substring(index, endIndex);
    },
    startsWith$1(receiver, pattern) {
      return this.startsWith$2(receiver, pattern, 0);
    },
    substring$2(receiver, start, end) {
      return receiver.substring(start, A.RangeError_checkValidRange(start, end, receiver.length, null, null));
    },
    substring$1(receiver, start) {
      return this.substring$2(receiver, start, null);
    },
    trim$0(receiver) {
      var startIndex, t1, endIndex0,
        result = receiver.trim(),
        endIndex = result.length;
      if (endIndex === 0)
        return result;
      if (result.charCodeAt(0) === 133) {
        startIndex = J.JSString__skipLeadingWhitespace(result, 1);
        if (startIndex === endIndex)
          return "";
      } else
        startIndex = 0;
      t1 = endIndex - 1;
      endIndex0 = result.charCodeAt(t1) === 133 ? J.JSString__skipTrailingWhitespace(result, t1) : endIndex;
      if (startIndex === 0 && endIndex0 === endIndex)
        return result;
      return result.substring(startIndex, endIndex0);
    },
    trimLeft$0(receiver) {
      var result = receiver.trimStart();
      if (result.length === 0)
        return result;
      if (result.charCodeAt(0) !== 133)
        return result;
      return result.substring(J.JSString__skipLeadingWhitespace(result, 1));
    },
    trimRight$0(receiver) {
      var t1,
        result = receiver.trimEnd(),
        endIndex = result.length;
      if (endIndex === 0)
        return result;
      t1 = endIndex - 1;
      if (result.charCodeAt(t1) !== 133)
        return result;
      return result.substring(0, J.JSString__skipTrailingWhitespace(result, t1));
    },
    $mul(receiver, times) {
      var s, result;
      if (0 >= times)
        return "";
      if (times === 1 || receiver.length === 0)
        return receiver;
      if (times !== times >>> 0)
        throw A.wrapException(B.C_OutOfMemoryError);
      for (s = receiver, result = ""; true;) {
        if ((times & 1) === 1)
          result = s + result;
        times = times >>> 1;
        if (times === 0)
          break;
        s += s;
      }
      return result;
    },
    padLeft$2(receiver, width, padding) {
      var delta = width - receiver.length;
      if (delta <= 0)
        return receiver;
      return this.$mul(padding, delta) + receiver;
    },
    indexOf$2(receiver, pattern, start) {
      var t1;
      if (start < 0 || start > receiver.length)
        throw A.wrapException(A.RangeError$range(start, 0, receiver.length, null, null));
      t1 = receiver.indexOf(pattern, start);
      return t1;
    },
    indexOf$1(receiver, pattern) {
      return this.indexOf$2(receiver, pattern, 0);
    },
    lastIndexOf$1(receiver, pattern) {
      var start = receiver.length,
        t1 = pattern.length;
      if (start + t1 > start)
        start -= t1;
      return receiver.lastIndexOf(pattern, start);
    },
    contains$1(receiver, other) {
      return A.stringContainsUnchecked(receiver, other, 0);
    },
    compareTo$1(receiver, other) {
      var t1;
      if (receiver === other)
        t1 = 0;
      else
        t1 = receiver < other ? -1 : 1;
      return t1;
    },
    toString$0(receiver) {
      return receiver;
    },
    get$hashCode(receiver) {
      var t1, hash, i;
      for (t1 = receiver.length, hash = 0, i = 0; i < t1; ++i) {
        hash = hash + receiver.charCodeAt(i) & 536870911;
        hash = hash + ((hash & 524287) << 10) & 536870911;
        hash ^= hash >> 6;
      }
      hash = hash + ((hash & 67108863) << 3) & 536870911;
      hash ^= hash >> 11;
      return hash + ((hash & 16383) << 15) & 536870911;
    },
    get$runtimeType(receiver) {
      return A.createRuntimeType(type$.String);
    },
    get$length(receiver) {
      return receiver.length;
    },
    $isTrustedGetRuntimeType: 1,
    $isComparable: 1,
    $isString: 1
  };
  A._CastIterableBase.prototype = {
    get$iterator(_) {
      return new A.CastIterator(J.get$iterator$ax(this.get$_source()), A._instanceType(this)._eval$1("CastIterator<1,2>"));
    },
    get$length(_) {
      return J.get$length$asx(this.get$_source());
    },
    get$isEmpty(_) {
      return J.get$isEmpty$asx(this.get$_source());
    },
    get$isNotEmpty(_) {
      return J.get$isNotEmpty$asx(this.get$_source());
    },
    skip$1(_, count) {
      var t1 = A._instanceType(this);
      return A.CastIterable_CastIterable(J.skip$1$ax(this.get$_source(), count), t1._precomputed1, t1._rest[1]);
    },
    elementAt$1(_, index) {
      return A._instanceType(this)._rest[1]._as(J.elementAt$1$ax(this.get$_source(), index));
    },
    get$first(_) {
      return A._instanceType(this)._rest[1]._as(J.get$first$ax(this.get$_source()));
    },
    get$last(_) {
      return A._instanceType(this)._rest[1]._as(J.get$last$ax(this.get$_source()));
    },
    contains$1(_, other) {
      return J.contains$1$asx(this.get$_source(), other);
    },
    toString$0(_) {
      return J.toString$0$(this.get$_source());
    }
  };
  A.CastIterator.prototype = {
    moveNext$0() {
      return this._source.moveNext$0();
    },
    get$current() {
      return this.$ti._rest[1]._as(this._source.get$current());
    }
  };
  A.CastIterable.prototype = {
    get$_source() {
      return this._source;
    }
  };
  A._EfficientLengthCastIterable.prototype = {$isEfficientLengthIterable: 1};
  A._CastListBase.prototype = {
    $index(_, index) {
      return this.$ti._rest[1]._as(J.$index$asx(this._source, index));
    },
    $indexSet(_, index, value) {
      J.$indexSet$ax(this._source, index, this.$ti._precomputed1._as(value));
    },
    set$length(_, $length) {
      J.set$length$asx(this._source, $length);
    },
    add$1(_, value) {
      J.add$1$ax(this._source, this.$ti._precomputed1._as(value));
    },
    remove$1(_, value) {
      return J.remove$1$ax(this._source, value);
    },
    removeLast$0(_) {
      return this.$ti._rest[1]._as(J.removeLast$0$ax(this._source));
    },
    getRange$2(_, start, end) {
      var t1 = this.$ti;
      return A.CastIterable_CastIterable(J.getRange$2$ax(this._source, start, end), t1._precomputed1, t1._rest[1]);
    },
    setRange$4(_, start, end, iterable, skipCount) {
      var t1 = this.$ti;
      J.setRange$4$ax(this._source, start, end, A.CastIterable_CastIterable(iterable, t1._rest[1], t1._precomputed1), skipCount);
    },
    setRange$3(_, start, end, iterable) {
      return this.setRange$4(0, start, end, iterable, 0);
    },
    $isEfficientLengthIterable: 1,
    $isList: 1
  };
  A.CastList.prototype = {
    cast$1$0(_, $R) {
      return new A.CastList(this._source, this.$ti._eval$1("@<1>")._bind$1($R)._eval$1("CastList<1,2>"));
    },
    get$_source() {
      return this._source;
    }
  };
  A.CastSet.prototype = {
    add$1(_, value) {
      return this._source.add$1(0, this.$ti._precomputed1._as(value));
    },
    addAll$1(_, elements) {
      var t1 = this.$ti;
      this._source.addAll$1(0, A.CastIterable_CastIterable(elements, t1._rest[1], t1._precomputed1));
    },
    remove$1(_, object) {
      return this._source.remove$1(0, object);
    },
    intersection$1(other) {
      var _this = this;
      if (_this._emptySet != null)
        return _this._conditionalAdd$2(other, true);
      return new A.CastSet(_this._source.intersection$1(other), null, _this.$ti);
    },
    _conditionalAdd$2(other, otherContains) {
      var castElement,
        emptySet = this._emptySet,
        t1 = this.$ti,
        t2 = t1._rest[1],
        result = emptySet == null ? A.LinkedHashSet_LinkedHashSet(t2) : emptySet.call$1$0(t2);
      for (t2 = this._source, t2 = t2.get$iterator(t2), t1 = t1._rest[1]; t2.moveNext$0();) {
        castElement = t1._as(t2.get$current());
        if (otherContains === other.contains$1(0, castElement))
          result.add$1(0, castElement);
      }
      return result;
    },
    _clone$0() {
      var emptySet = this._emptySet,
        t1 = this.$ti._rest[1],
        result = emptySet == null ? A.LinkedHashSet_LinkedHashSet(t1) : emptySet.call$1$0(t1);
      result.addAll$1(0, this);
      return result;
    },
    toSet$0(_) {
      var emptySet = this._emptySet,
        t1 = this.$ti._rest[1],
        result = emptySet == null ? A.LinkedHashSet_LinkedHashSet(t1) : emptySet.call$1$0(t1);
      result.addAll$1(0, this);
      return result;
    },
    $isEfficientLengthIterable: 1,
    $isSet: 1,
    get$_source() {
      return this._source;
    }
  };
  A.CastMap.prototype = {
    cast$2$0(_, $RK, $RV) {
      return new A.CastMap(this._source, this.$ti._eval$1("@<1,2>")._bind$1($RK)._bind$1($RV)._eval$1("CastMap<1,2,3,4>"));
    },
    containsKey$1(key) {
      return this._source.containsKey$1(key);
    },
    $index(_, key) {
      return this.$ti._eval$1("4?")._as(this._source.$index(0, key));
    },
    $indexSet(_, key, value) {
      var t1 = this.$ti;
      this._source.$indexSet(0, t1._precomputed1._as(key), t1._rest[1]._as(value));
    },
    putIfAbsent$2(key, ifAbsent) {
      var t1 = this.$ti;
      return t1._rest[3]._as(this._source.putIfAbsent$2(t1._precomputed1._as(key), new A.CastMap_putIfAbsent_closure(this, ifAbsent)));
    },
    remove$1(_, key) {
      return this.$ti._eval$1("4?")._as(this._source.remove$1(0, key));
    },
    forEach$1(_, f) {
      this._source.forEach$1(0, new A.CastMap_forEach_closure(this, f));
    },
    get$keys() {
      var t1 = this.$ti;
      return A.CastIterable_CastIterable(this._source.get$keys(), t1._precomputed1, t1._rest[2]);
    },
    get$values() {
      var t1 = this.$ti;
      return A.CastIterable_CastIterable(this._source.get$values(), t1._rest[1], t1._rest[3]);
    },
    get$length(_) {
      var t1 = this._source;
      return t1.get$length(t1);
    },
    get$isEmpty(_) {
      var t1 = this._source;
      return t1.get$isEmpty(t1);
    },
    get$isNotEmpty(_) {
      var t1 = this._source;
      return t1.get$isNotEmpty(t1);
    },
    get$entries() {
      var t1 = this._source.get$entries();
      return t1.map$1$1(t1, new A.CastMap_entries_closure(this), this.$ti._eval$1("MapEntry<3,4>"));
    }
  };
  A.CastMap_putIfAbsent_closure.prototype = {
    call$0() {
      return this.$this.$ti._rest[1]._as(this.ifAbsent.call$0());
    },
    $signature() {
      return this.$this.$ti._eval$1("2()");
    }
  };
  A.CastMap_forEach_closure.prototype = {
    call$2(key, value) {
      var t1 = this.$this.$ti;
      this.f.call$2(t1._rest[2]._as(key), t1._rest[3]._as(value));
    },
    $signature() {
      return this.$this.$ti._eval$1("~(1,2)");
    }
  };
  A.CastMap_entries_closure.prototype = {
    call$1(e) {
      var t1 = this.$this.$ti;
      return new A.MapEntry(t1._rest[2]._as(e.key), t1._rest[3]._as(e.value), t1._eval$1("MapEntry<3,4>"));
    },
    $signature() {
      return this.$this.$ti._eval$1("MapEntry<3,4>(MapEntry<1,2>)");
    }
  };
  A.LateError.prototype = {
    toString$0(_) {
      return "LateInitializationError: " + this._message;
    }
  };
  A.CodeUnits.prototype = {
    get$length(_) {
      return this._string.length;
    },
    $index(_, i) {
      return this._string.charCodeAt(i);
    }
  };
  A.nullFuture_closure.prototype = {
    call$0() {
      return A.Future_Future$value(null, type$.void);
    },
    $signature: 43
  };
  A.SentinelValue.prototype = {};
  A.EfficientLengthIterable.prototype = {};
  A.ListIterable.prototype = {
    get$iterator(_) {
      var _this = this;
      return new A.ListIterator(_this, _this.get$length(_this), A._instanceType(_this)._eval$1("ListIterator<ListIterable.E>"));
    },
    forEach$1(_, action) {
      var i, _this = this,
        $length = _this.get$length(_this);
      for (i = 0; i < $length; ++i) {
        action.call$1(_this.elementAt$1(0, i));
        if ($length !== _this.get$length(_this))
          throw A.wrapException(A.ConcurrentModificationError$(_this));
      }
    },
    get$isEmpty(_) {
      return this.get$length(this) === 0;
    },
    get$first(_) {
      if (this.get$length(this) === 0)
        throw A.wrapException(A.IterableElementError_noElement());
      return this.elementAt$1(0, 0);
    },
    get$last(_) {
      var _this = this;
      if (_this.get$length(_this) === 0)
        throw A.wrapException(A.IterableElementError_noElement());
      return _this.elementAt$1(0, _this.get$length(_this) - 1);
    },
    contains$1(_, element) {
      var i, _this = this,
        $length = _this.get$length(_this);
      for (i = 0; i < $length; ++i) {
        if (J.$eq$(_this.elementAt$1(0, i), element))
          return true;
        if ($length !== _this.get$length(_this))
          throw A.wrapException(A.ConcurrentModificationError$(_this));
      }
      return false;
    },
    join$1(_, separator) {
      var first, t1, i, _this = this,
        $length = _this.get$length(_this);
      if (separator.length !== 0) {
        if ($length === 0)
          return "";
        first = A.S(_this.elementAt$1(0, 0));
        if ($length !== _this.get$length(_this))
          throw A.wrapException(A.ConcurrentModificationError$(_this));
        for (t1 = first, i = 1; i < $length; ++i) {
          t1 = t1 + separator + A.S(_this.elementAt$1(0, i));
          if ($length !== _this.get$length(_this))
            throw A.wrapException(A.ConcurrentModificationError$(_this));
        }
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      } else {
        for (i = 0, t1 = ""; i < $length; ++i) {
          t1 += A.S(_this.elementAt$1(0, i));
          if ($length !== _this.get$length(_this))
            throw A.wrapException(A.ConcurrentModificationError$(_this));
        }
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      }
    },
    where$1(_, test) {
      return this.super$Iterable$where(0, test);
    },
    map$1$1(_, toElement, $T) {
      return new A.MappedListIterable(this, toElement, A._instanceType(this)._eval$1("@<ListIterable.E>")._bind$1($T)._eval$1("MappedListIterable<1,2>"));
    },
    reduce$1(_, combine) {
      var value, i, _this = this,
        $length = _this.get$length(_this);
      if ($length === 0)
        throw A.wrapException(A.IterableElementError_noElement());
      value = _this.elementAt$1(0, 0);
      for (i = 1; i < $length; ++i) {
        value = combine.call$2(value, _this.elementAt$1(0, i));
        if ($length !== _this.get$length(_this))
          throw A.wrapException(A.ConcurrentModificationError$(_this));
      }
      return value;
    },
    skip$1(_, count) {
      return A.SubListIterable$(this, count, null, A._instanceType(this)._eval$1("ListIterable.E"));
    },
    toList$1$growable(_, growable) {
      var t1 = A._instanceType(this)._eval$1("ListIterable.E");
      if (growable)
        t1 = A.List_List$_of(this, t1);
      else {
        t1 = A.List_List$_of(this, t1);
        t1.$flags = 1;
        t1 = t1;
      }
      return t1;
    },
    toList$0(_) {
      return this.toList$1$growable(0, true);
    },
    toSet$0(_) {
      var i, _this = this,
        result = A.LinkedHashSet_LinkedHashSet(A._instanceType(_this)._eval$1("ListIterable.E"));
      for (i = 0; i < _this.get$length(_this); ++i)
        result.add$1(0, _this.elementAt$1(0, i));
      return result;
    }
  };
  A.SubListIterable.prototype = {
    SubListIterable$3(_iterable, _start, _endOrLength, $E) {
      var endOrLength,
        t1 = this._start;
      A.RangeError_checkNotNegative(t1, "start");
      endOrLength = this._endOrLength;
      if (endOrLength != null) {
        A.RangeError_checkNotNegative(endOrLength, "end");
        if (t1 > endOrLength)
          throw A.wrapException(A.RangeError$range(t1, 0, endOrLength, "start", null));
      }
    },
    get$_endIndex() {
      var $length = J.get$length$asx(this.__internal$_iterable),
        endOrLength = this._endOrLength;
      if (endOrLength == null || endOrLength > $length)
        return $length;
      return endOrLength;
    },
    get$_startIndex() {
      var $length = J.get$length$asx(this.__internal$_iterable),
        t1 = this._start;
      if (t1 > $length)
        return $length;
      return t1;
    },
    get$length(_) {
      var endOrLength,
        $length = J.get$length$asx(this.__internal$_iterable),
        t1 = this._start;
      if (t1 >= $length)
        return 0;
      endOrLength = this._endOrLength;
      if (endOrLength == null || endOrLength >= $length)
        return $length - t1;
      return endOrLength - t1;
    },
    elementAt$1(_, index) {
      var _this = this,
        realIndex = _this.get$_startIndex() + index;
      if (index < 0 || realIndex >= _this.get$_endIndex())
        throw A.wrapException(A.IndexError$withLength(index, _this.get$length(0), _this, null, "index"));
      return J.elementAt$1$ax(_this.__internal$_iterable, realIndex);
    },
    skip$1(_, count) {
      var newStart, endOrLength, _this = this;
      A.RangeError_checkNotNegative(count, "count");
      newStart = _this._start + count;
      endOrLength = _this._endOrLength;
      if (endOrLength != null && newStart >= endOrLength)
        return new A.EmptyIterable(_this.$ti._eval$1("EmptyIterable<1>"));
      return A.SubListIterable$(_this.__internal$_iterable, newStart, endOrLength, _this.$ti._precomputed1);
    },
    toList$1$growable(_, growable) {
      var $length, result, i, _this = this,
        start = _this._start,
        t1 = _this.__internal$_iterable,
        t2 = J.getInterceptor$asx(t1),
        end = t2.get$length(t1),
        endOrLength = _this._endOrLength;
      if (endOrLength != null && endOrLength < end)
        end = endOrLength;
      $length = end - start;
      if ($length <= 0) {
        t1 = _this.$ti._precomputed1;
        return growable ? J.JSArray_JSArray$growable(0, t1) : J.JSArray_JSArray$fixed(0, t1);
      }
      result = A.List_List$filled($length, t2.elementAt$1(t1, start), growable, _this.$ti._precomputed1);
      for (i = 1; i < $length; ++i) {
        result[i] = t2.elementAt$1(t1, start + i);
        if (t2.get$length(t1) < end)
          throw A.wrapException(A.ConcurrentModificationError$(_this));
      }
      return result;
    },
    toList$0(_) {
      return this.toList$1$growable(0, true);
    }
  };
  A.ListIterator.prototype = {
    get$current() {
      var t1 = this.__internal$_current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var t3, _this = this,
        t1 = _this.__internal$_iterable,
        t2 = J.getInterceptor$asx(t1),
        $length = t2.get$length(t1);
      if (_this.__internal$_length !== $length)
        throw A.wrapException(A.ConcurrentModificationError$(t1));
      t3 = _this.__internal$_index;
      if (t3 >= $length) {
        _this.__internal$_current = null;
        return false;
      }
      _this.__internal$_current = t2.elementAt$1(t1, t3);
      ++_this.__internal$_index;
      return true;
    }
  };
  A.MappedIterable.prototype = {
    get$iterator(_) {
      return new A.MappedIterator(J.get$iterator$ax(this.__internal$_iterable), this._f, A._instanceType(this)._eval$1("MappedIterator<1,2>"));
    },
    get$length(_) {
      return J.get$length$asx(this.__internal$_iterable);
    },
    get$isEmpty(_) {
      return J.get$isEmpty$asx(this.__internal$_iterable);
    },
    get$first(_) {
      return this._f.call$1(J.get$first$ax(this.__internal$_iterable));
    },
    get$last(_) {
      return this._f.call$1(J.get$last$ax(this.__internal$_iterable));
    },
    elementAt$1(_, index) {
      return this._f.call$1(J.elementAt$1$ax(this.__internal$_iterable, index));
    }
  };
  A.EfficientLengthMappedIterable.prototype = {$isEfficientLengthIterable: 1};
  A.MappedIterator.prototype = {
    moveNext$0() {
      var _this = this,
        t1 = _this._iterator;
      if (t1.moveNext$0()) {
        _this.__internal$_current = _this._f.call$1(t1.get$current());
        return true;
      }
      _this.__internal$_current = null;
      return false;
    },
    get$current() {
      var t1 = this.__internal$_current;
      return t1 == null ? this.$ti._rest[1]._as(t1) : t1;
    }
  };
  A.MappedListIterable.prototype = {
    get$length(_) {
      return J.get$length$asx(this._source);
    },
    elementAt$1(_, index) {
      return this._f.call$1(J.elementAt$1$ax(this._source, index));
    }
  };
  A.WhereIterable.prototype = {
    get$iterator(_) {
      return new A.WhereIterator(J.get$iterator$ax(this.__internal$_iterable), this._f);
    },
    map$1$1(_, toElement, $T) {
      return new A.MappedIterable(this, toElement, this.$ti._eval$1("@<1>")._bind$1($T)._eval$1("MappedIterable<1,2>"));
    }
  };
  A.WhereIterator.prototype = {
    moveNext$0() {
      var t1, t2;
      for (t1 = this._iterator, t2 = this._f; t1.moveNext$0();)
        if (t2.call$1(t1.get$current()))
          return true;
      return false;
    },
    get$current() {
      return this._iterator.get$current();
    }
  };
  A.ExpandIterable.prototype = {
    get$iterator(_) {
      return new A.ExpandIterator(J.get$iterator$ax(this.__internal$_iterable), this._f, B.C_EmptyIterator, this.$ti._eval$1("ExpandIterator<1,2>"));
    }
  };
  A.ExpandIterator.prototype = {
    get$current() {
      var t1 = this.__internal$_current;
      return t1 == null ? this.$ti._rest[1]._as(t1) : t1;
    },
    moveNext$0() {
      var t2, t3, _this = this,
        t1 = _this._currentExpansion;
      if (t1 == null)
        return false;
      for (t2 = _this._iterator, t3 = _this._f; !t1.moveNext$0();) {
        _this.__internal$_current = null;
        if (t2.moveNext$0()) {
          _this._currentExpansion = null;
          t1 = J.get$iterator$ax(t3.call$1(t2.get$current()));
          _this._currentExpansion = t1;
        } else
          return false;
      }
      _this.__internal$_current = _this._currentExpansion.get$current();
      return true;
    }
  };
  A.TakeIterable.prototype = {
    get$iterator(_) {
      return new A.TakeIterator(J.get$iterator$ax(this.__internal$_iterable), this._takeCount, A._instanceType(this)._eval$1("TakeIterator<1>"));
    }
  };
  A.EfficientLengthTakeIterable.prototype = {
    get$length(_) {
      var iterableLength = J.get$length$asx(this.__internal$_iterable),
        t1 = this._takeCount;
      if (iterableLength > t1)
        return t1;
      return iterableLength;
    },
    $isEfficientLengthIterable: 1
  };
  A.TakeIterator.prototype = {
    moveNext$0() {
      if (--this._remaining >= 0)
        return this._iterator.moveNext$0();
      this._remaining = -1;
      return false;
    },
    get$current() {
      if (this._remaining < 0) {
        this.$ti._precomputed1._as(null);
        return null;
      }
      return this._iterator.get$current();
    }
  };
  A.SkipIterable.prototype = {
    skip$1(_, count) {
      A.ArgumentError_checkNotNull(count, "count");
      A.RangeError_checkNotNegative(count, "count");
      return new A.SkipIterable(this.__internal$_iterable, this._skipCount + count, A._instanceType(this)._eval$1("SkipIterable<1>"));
    },
    get$iterator(_) {
      return new A.SkipIterator(J.get$iterator$ax(this.__internal$_iterable), this._skipCount);
    }
  };
  A.EfficientLengthSkipIterable.prototype = {
    get$length(_) {
      var $length = J.get$length$asx(this.__internal$_iterable) - this._skipCount;
      if ($length >= 0)
        return $length;
      return 0;
    },
    skip$1(_, count) {
      A.ArgumentError_checkNotNull(count, "count");
      A.RangeError_checkNotNegative(count, "count");
      return new A.EfficientLengthSkipIterable(this.__internal$_iterable, this._skipCount + count, this.$ti);
    },
    $isEfficientLengthIterable: 1
  };
  A.SkipIterator.prototype = {
    moveNext$0() {
      var t1, i;
      for (t1 = this._iterator, i = 0; i < this._skipCount; ++i)
        t1.moveNext$0();
      this._skipCount = 0;
      return t1.moveNext$0();
    },
    get$current() {
      return this._iterator.get$current();
    }
  };
  A.SkipWhileIterable.prototype = {
    get$iterator(_) {
      return new A.SkipWhileIterator(J.get$iterator$ax(this.__internal$_iterable), this._f);
    }
  };
  A.SkipWhileIterator.prototype = {
    moveNext$0() {
      var t1, t2, _this = this;
      if (!_this._hasSkipped) {
        _this._hasSkipped = true;
        for (t1 = _this._iterator, t2 = _this._f; t1.moveNext$0();)
          if (!t2.call$1(t1.get$current()))
            return true;
      }
      return _this._iterator.moveNext$0();
    },
    get$current() {
      return this._iterator.get$current();
    }
  };
  A.EmptyIterable.prototype = {
    get$iterator(_) {
      return B.C_EmptyIterator;
    },
    get$isEmpty(_) {
      return true;
    },
    get$length(_) {
      return 0;
    },
    get$first(_) {
      throw A.wrapException(A.IterableElementError_noElement());
    },
    get$last(_) {
      throw A.wrapException(A.IterableElementError_noElement());
    },
    elementAt$1(_, index) {
      throw A.wrapException(A.RangeError$range(index, 0, 0, "index", null));
    },
    contains$1(_, element) {
      return false;
    },
    where$1(_, test) {
      return this;
    },
    map$1$1(_, toElement, $T) {
      return new A.EmptyIterable($T._eval$1("EmptyIterable<0>"));
    },
    skip$1(_, count) {
      A.RangeError_checkNotNegative(count, "count");
      return this;
    },
    toList$1$growable(_, growable) {
      var t1 = this.$ti._precomputed1;
      return growable ? J.JSArray_JSArray$growable(0, t1) : J.JSArray_JSArray$fixed(0, t1);
    },
    toList$0(_) {
      return this.toList$1$growable(0, true);
    },
    toSet$0(_) {
      return A.LinkedHashSet_LinkedHashSet(this.$ti._precomputed1);
    }
  };
  A.EmptyIterator.prototype = {
    moveNext$0() {
      return false;
    },
    get$current() {
      throw A.wrapException(A.IterableElementError_noElement());
    }
  };
  A.FollowedByIterable.prototype = {
    get$iterator(_) {
      return new A.FollowedByIterator(J.get$iterator$ax(this.__internal$_first), this._second);
    },
    get$length(_) {
      return J.get$length$asx(this.__internal$_first) + J.get$length$asx(this._second);
    },
    get$isEmpty(_) {
      return J.get$isEmpty$asx(this.__internal$_first) && J.get$isEmpty$asx(this._second);
    },
    get$isNotEmpty(_) {
      return J.get$isNotEmpty$asx(this.__internal$_first) || J.get$isNotEmpty$asx(this._second);
    },
    contains$1(_, value) {
      return J.contains$1$asx(this.__internal$_first, value) || J.contains$1$asx(this._second, value);
    },
    get$first(_) {
      var iterator = J.get$iterator$ax(this.__internal$_first);
      if (iterator.moveNext$0())
        return iterator.get$current();
      return J.get$first$ax(this._second);
    },
    get$last(_) {
      var last,
        iterator = J.get$iterator$ax(this._second);
      if (iterator.moveNext$0()) {
        last = iterator.get$current();
        for (; iterator.moveNext$0();)
          last = iterator.get$current();
        return last;
      }
      return J.get$last$ax(this.__internal$_first);
    }
  };
  A.EfficientLengthFollowedByIterable.prototype = {
    elementAt$1(_, index) {
      var t1 = this.__internal$_first,
        t2 = J.getInterceptor$asx(t1),
        firstLength = t2.get$length(t1);
      if (index < firstLength)
        return t2.elementAt$1(t1, index);
      return J.elementAt$1$ax(this._second, index - firstLength);
    },
    get$first(_) {
      var t1 = this.__internal$_first,
        t2 = J.getInterceptor$asx(t1);
      if (t2.get$isNotEmpty(t1))
        return t2.get$first(t1);
      return J.get$first$ax(this._second);
    },
    get$last(_) {
      var t1 = this._second,
        t2 = J.getInterceptor$asx(t1);
      if (t2.get$isNotEmpty(t1))
        return t2.get$last(t1);
      return J.get$last$ax(this.__internal$_first);
    },
    $isEfficientLengthIterable: 1
  };
  A.FollowedByIterator.prototype = {
    moveNext$0() {
      var t1, _this = this;
      if (_this._currentIterator.moveNext$0())
        return true;
      t1 = _this._nextIterable;
      if (t1 != null) {
        t1 = J.get$iterator$ax(t1);
        _this._currentIterator = t1;
        _this._nextIterable = null;
        return t1.moveNext$0();
      }
      return false;
    },
    get$current() {
      return this._currentIterator.get$current();
    }
  };
  A.WhereTypeIterable.prototype = {
    get$iterator(_) {
      return new A.WhereTypeIterator(J.get$iterator$ax(this._source), this.$ti._eval$1("WhereTypeIterator<1>"));
    }
  };
  A.WhereTypeIterator.prototype = {
    moveNext$0() {
      var t1, t2;
      for (t1 = this._source, t2 = this.$ti._precomputed1; t1.moveNext$0();)
        if (t2._is(t1.get$current()))
          return true;
      return false;
    },
    get$current() {
      return this.$ti._precomputed1._as(this._source.get$current());
    }
  };
  A.FixedLengthListMixin.prototype = {
    set$length(receiver, newLength) {
      throw A.wrapException(A.UnsupportedError$("Cannot change the length of a fixed-length list"));
    },
    add$1(receiver, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot add to a fixed-length list"));
    },
    remove$1(receiver, element) {
      throw A.wrapException(A.UnsupportedError$("Cannot remove from a fixed-length list"));
    },
    removeLast$0(receiver) {
      throw A.wrapException(A.UnsupportedError$("Cannot remove from a fixed-length list"));
    }
  };
  A.UnmodifiableListMixin.prototype = {
    $indexSet(_, index, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot modify an unmodifiable list"));
    },
    set$length(_, newLength) {
      throw A.wrapException(A.UnsupportedError$("Cannot change the length of an unmodifiable list"));
    },
    add$1(_, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot add to an unmodifiable list"));
    },
    remove$1(_, element) {
      throw A.wrapException(A.UnsupportedError$("Cannot remove from an unmodifiable list"));
    },
    removeLast$0(_) {
      throw A.wrapException(A.UnsupportedError$("Cannot remove from an unmodifiable list"));
    },
    setRange$4(_, start, end, iterable, skipCount) {
      throw A.wrapException(A.UnsupportedError$("Cannot modify an unmodifiable list"));
    },
    setRange$3(_, start, end, iterable) {
      return this.setRange$4(0, start, end, iterable, 0);
    }
  };
  A.UnmodifiableListBase.prototype = {};
  A.ReversedListIterable.prototype = {
    get$length(_) {
      return J.get$length$asx(this._source);
    },
    elementAt$1(_, index) {
      var t1 = this._source,
        t2 = J.getInterceptor$asx(t1);
      return t2.elementAt$1(t1, t2.get$length(t1) - 1 - index);
    }
  };
  A.Symbol.prototype = {
    get$hashCode(_) {
      var hash = this._hashCode;
      if (hash != null)
        return hash;
      hash = 664597 * B.JSString_methods.get$hashCode(this.__internal$_name) & 536870911;
      this._hashCode = hash;
      return hash;
    },
    toString$0(_) {
      return 'Symbol("' + this.__internal$_name + '")';
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.Symbol && this.__internal$_name === other.__internal$_name;
    },
    $isSymbol0: 1
  };
  A.__CastListBase__CastIterableBase_ListMixin.prototype = {};
  A.ConstantMapView.prototype = {};
  A.ConstantMap.prototype = {
    cast$2$0(_, $RK, $RV) {
      var t1 = A._instanceType(this);
      return A.Map_castFrom(this, t1._precomputed1, t1._rest[1], $RK, $RV);
    },
    get$isEmpty(_) {
      return this.get$length(this) === 0;
    },
    get$isNotEmpty(_) {
      return this.get$length(this) !== 0;
    },
    toString$0(_) {
      return A.MapBase_mapToString(this);
    },
    $indexSet(_, key, value) {
      A.ConstantMap__throwUnmodifiable();
    },
    putIfAbsent$2(key, ifAbsent) {
      A.ConstantMap__throwUnmodifiable();
    },
    remove$1(_, key) {
      A.ConstantMap__throwUnmodifiable();
    },
    get$entries() {
      return new A._SyncStarIterable(this.entries$body$ConstantMap(), A._instanceType(this)._eval$1("_SyncStarIterable<MapEntry<1,2>>"));
    },
    entries$body$ConstantMap() {
      var $async$self = this;
      return function() {
        var $async$goto = 0, $async$handler = 1, $async$errorStack = [], t1, t2, key;
        return function $async$get$entries($async$iterator, $async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$errorStack.push($async$result);
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = $async$self.get$keys(), t1 = t1.get$iterator(t1), t2 = A._instanceType($async$self)._eval$1("MapEntry<1,2>");
              case 2:
                // for condition
                if (!t1.moveNext$0()) {
                  // goto after for
                  $async$goto = 3;
                  break;
                }
                key = t1.get$current();
                $async$goto = 4;
                return $async$iterator._async$_current = new A.MapEntry(key, $async$self.$index(0, key), t2), 1;
              case 4:
                // after yield
                // goto for condition
                $async$goto = 2;
                break;
              case 3:
                // after for
                // implicit return
                return 0;
              case 1:
                // rethrow
                return $async$iterator._datum = $async$errorStack.at(-1), 3;
            }
        };
      };
    },
    map$2$1(_, transform, $K2, $V2) {
      var result = A.LinkedHashMap_LinkedHashMap$_empty($K2, $V2);
      this.forEach$1(0, new A.ConstantMap_map_closure(this, transform, result));
      return result;
    },
    $isMap: 1
  };
  A.ConstantMap_map_closure.prototype = {
    call$2(key, value) {
      var entry = this.transform.call$2(key, value);
      this.result.$indexSet(0, entry.key, entry.value);
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("~(1,2)");
    }
  };
  A.ConstantStringMap.prototype = {
    get$length(_) {
      return this._values.length;
    },
    get$__js_helper$_keys() {
      var keys = this.$keys;
      if (keys == null) {
        keys = Object.keys(this._jsIndex);
        this.$keys = keys;
      }
      return keys;
    },
    containsKey$1(key) {
      if (typeof key != "string")
        return false;
      if ("__proto__" === key)
        return false;
      return this._jsIndex.hasOwnProperty(key);
    },
    $index(_, key) {
      if (!this.containsKey$1(key))
        return null;
      return this._values[this._jsIndex[key]];
    },
    forEach$1(_, f) {
      var t1, i,
        keys = this.get$__js_helper$_keys(),
        values = this._values;
      for (t1 = keys.length, i = 0; i < t1; ++i)
        f.call$2(keys[i], values[i]);
    },
    get$keys() {
      return new A._KeysOrValues(this.get$__js_helper$_keys(), this.$ti._eval$1("_KeysOrValues<1>"));
    },
    get$values() {
      return new A._KeysOrValues(this._values, this.$ti._eval$1("_KeysOrValues<2>"));
    }
  };
  A._KeysOrValues.prototype = {
    get$length(_) {
      return this.__js_helper$_elements.length;
    },
    get$isEmpty(_) {
      return 0 === this.__js_helper$_elements.length;
    },
    get$isNotEmpty(_) {
      return 0 !== this.__js_helper$_elements.length;
    },
    get$iterator(_) {
      var t1 = this.__js_helper$_elements;
      return new A._KeysOrValuesOrElementsIterator(t1, t1.length, this.$ti._eval$1("_KeysOrValuesOrElementsIterator<1>"));
    }
  };
  A._KeysOrValuesOrElementsIterator.prototype = {
    get$current() {
      var t1 = this.__js_helper$_current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var _this = this,
        t1 = _this.__js_helper$_index;
      if (t1 >= _this.__js_helper$_length) {
        _this.__js_helper$_current = null;
        return false;
      }
      _this.__js_helper$_current = _this.__js_helper$_elements[t1];
      _this.__js_helper$_index = t1 + 1;
      return true;
    }
  };
  A.GeneralConstantMap.prototype = {
    _getMap$0() {
      var _this = this,
        backingMap = _this.$map;
      if (backingMap == null) {
        backingMap = new A.JsConstantLinkedHashMap(_this.$ti._eval$1("JsConstantLinkedHashMap<1,2>"));
        A.fillLiteralMap(_this._jsData, backingMap);
        _this.$map = backingMap;
      }
      return backingMap;
    },
    containsKey$1(key) {
      return this._getMap$0().containsKey$1(key);
    },
    $index(_, key) {
      return this._getMap$0().$index(0, key);
    },
    forEach$1(_, f) {
      this._getMap$0().forEach$1(0, f);
    },
    get$keys() {
      var t1 = this._getMap$0();
      return new A.LinkedHashMapKeysIterable(t1, A._instanceType(t1)._eval$1("LinkedHashMapKeysIterable<1>"));
    },
    get$values() {
      var t1 = this._getMap$0();
      return new A.LinkedHashMapValuesIterable(t1, A._instanceType(t1)._eval$1("LinkedHashMapValuesIterable<2>"));
    },
    get$length(_) {
      return this._getMap$0().__js_helper$_length;
    }
  };
  A.ConstantSet.prototype = {
    add$1(_, value) {
      A.ConstantSet__throwUnmodifiable();
    },
    addAll$1(_, elements) {
      A.ConstantSet__throwUnmodifiable();
    },
    remove$1(_, value) {
      A.ConstantSet__throwUnmodifiable();
    }
  };
  A.GeneralConstantSet.prototype = {
    get$length(_) {
      return this.__js_helper$_elements.length;
    },
    get$isEmpty(_) {
      return this.__js_helper$_elements.length === 0;
    },
    get$isNotEmpty(_) {
      return this.__js_helper$_elements.length !== 0;
    },
    get$iterator(_) {
      var t1 = this.__js_helper$_elements;
      return new A._KeysOrValuesOrElementsIterator(t1, t1.length, this.$ti._eval$1("_KeysOrValuesOrElementsIterator<1>"));
    },
    _getMap$0() {
      var t1, t2, _i, key, _this = this,
        backingMap = _this.$map;
      if (backingMap == null) {
        backingMap = new A.JsConstantLinkedHashMap(_this.$ti._eval$1("JsConstantLinkedHashMap<1,1>"));
        for (t1 = _this.__js_helper$_elements, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
          key = t1[_i];
          backingMap.$indexSet(0, key, key);
        }
        _this.$map = backingMap;
      }
      return backingMap;
    },
    contains$1(_, key) {
      return this._getMap$0().containsKey$1(key);
    },
    toSet$0(_) {
      return A.LinkedHashSet_LinkedHashSet$of(this, this.$ti._precomputed1);
    }
  };
  A.Instantiation.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.Instantiation1 && this._genericClosure.$eq(0, other._genericClosure) && A.getRuntimeTypeOfClosure(this) === A.getRuntimeTypeOfClosure(other);
    },
    get$hashCode(_) {
      return A.Object_hash(this._genericClosure, A.getRuntimeTypeOfClosure(this), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var t1 = B.JSArray_methods.join$1([A.createRuntimeType(this.$ti._precomputed1)], ", ");
      return this._genericClosure.toString$0(0) + " with " + ("<" + t1 + ">");
    }
  };
  A.Instantiation1.prototype = {
    call$1(a0) {
      return this._genericClosure.call$1$1(a0, this.$ti._rest[0]);
    },
    call$0() {
      return this._genericClosure.call$1$0(this.$ti._rest[0]);
    },
    call$2(a0, a1) {
      return this._genericClosure.call$1$2(a0, a1, this.$ti._rest[0]);
    },
    $signature() {
      return A.instantiatedGenericFunctionType(A.closureFunctionType(this._genericClosure), this.$ti);
    }
  };
  A.JSInvocationMirror.prototype = {
    get$memberName() {
      var t1 = this.__js_helper$_memberName;
      if (t1 instanceof A.Symbol)
        return t1;
      return this.__js_helper$_memberName = new A.Symbol(t1);
    },
    get$positionalArguments() {
      var t1, t2, argumentCount, list, index, _this = this;
      if (_this.__js_helper$_kind === 1)
        return B.List_empty5;
      t1 = _this._arguments;
      t2 = J.getInterceptor$asx(t1);
      argumentCount = t2.get$length(t1) - J.get$length$asx(_this._namedArgumentNames) - _this._typeArgumentCount;
      if (argumentCount === 0)
        return B.List_empty5;
      list = [];
      for (index = 0; index < argumentCount; ++index)
        list.push(t2.$index(t1, index));
      list.$flags = 3;
      return list;
    },
    get$namedArguments() {
      var t1, t2, namedArgumentCount, t3, t4, namedArgumentsStartIndex, map, i, _this = this;
      if (_this.__js_helper$_kind !== 0)
        return B.Map_empty5;
      t1 = _this._namedArgumentNames;
      t2 = J.getInterceptor$asx(t1);
      namedArgumentCount = t2.get$length(t1);
      t3 = _this._arguments;
      t4 = J.getInterceptor$asx(t3);
      namedArgumentsStartIndex = t4.get$length(t3) - namedArgumentCount - _this._typeArgumentCount;
      if (namedArgumentCount === 0)
        return B.Map_empty5;
      map = new A.JsLinkedHashMap(type$.JsLinkedHashMap_Symbol_dynamic);
      for (i = 0; i < namedArgumentCount; ++i)
        map.$indexSet(0, new A.Symbol(t2.$index(t1, i)), t4.$index(t3, namedArgumentsStartIndex + i));
      return new A.ConstantMapView(map, type$.ConstantMapView_Symbol_dynamic);
    }
  };
  A.Primitives_initTicker_closure.prototype = {
    call$0() {
      return B.JSNumber_methods.floor$0(1000 * this.performance.now());
    },
    $signature: 90
  };
  A.SafeToStringHook.prototype = {};
  A.TypeErrorDecoder.prototype = {
    matchTypeError$1(message) {
      var result, t1, _this = this,
        match = new RegExp(_this._pattern).exec(message);
      if (match == null)
        return null;
      result = Object.create(null);
      t1 = _this._arguments;
      if (t1 !== -1)
        result.arguments = match[t1 + 1];
      t1 = _this._argumentsExpr;
      if (t1 !== -1)
        result.argumentsExpr = match[t1 + 1];
      t1 = _this._expr;
      if (t1 !== -1)
        result.expr = match[t1 + 1];
      t1 = _this._method;
      if (t1 !== -1)
        result.method = match[t1 + 1];
      t1 = _this._receiver;
      if (t1 !== -1)
        result.receiver = match[t1 + 1];
      return result;
    }
  };
  A.NullError.prototype = {
    toString$0(_) {
      return "Null check operator used on a null value";
    }
  };
  A.JsNoSuchMethodError.prototype = {
    toString$0(_) {
      var t2, _this = this,
        _s38_ = "NoSuchMethodError: method not found: '",
        t1 = _this._method;
      if (t1 == null)
        return "NoSuchMethodError: " + _this.__js_helper$_message;
      t2 = _this._receiver;
      if (t2 == null)
        return _s38_ + t1 + "' (" + _this.__js_helper$_message + ")";
      return _s38_ + t1 + "' on '" + t2 + "' (" + _this.__js_helper$_message + ")";
    }
  };
  A.UnknownJsTypeError.prototype = {
    toString$0(_) {
      var t1 = this.__js_helper$_message;
      return t1.length === 0 ? "Error" : "Error: " + t1;
    }
  };
  A.NullThrownFromJavaScriptException.prototype = {
    toString$0(_) {
      return "Throw of null ('" + (this._irritant === null ? "null" : "undefined") + "' from JavaScript)";
    },
    $isException: 1
  };
  A.ExceptionAndStackTrace.prototype = {};
  A._StackTrace.prototype = {
    toString$0(_) {
      var trace,
        t1 = this._trace;
      if (t1 != null)
        return t1;
      t1 = this._exception;
      trace = t1 !== null && typeof t1 === "object" ? t1.stack : null;
      return this._trace = trace == null ? "" : trace;
    },
    $isStackTrace: 1
  };
  A.Closure.prototype = {
    toString$0(_) {
      var $constructor = this.constructor,
        $name = $constructor == null ? null : $constructor.name;
      return "Closure '" + A.unminifyOrTag($name == null ? "unknown" : $name) + "'";
    },
    get$runtimeType(_) {
      var rti = A.closureFunctionType(this);
      return A.createRuntimeType(rti == null ? A.instanceType(this) : rti);
    },
    $isFunction: 1,
    get$$call() {
      return this;
    },
    "call*": "call$1",
    $requiredArgCount: 1,
    $defaultValues: null
  };
  A.Closure0Args.prototype = {"call*": "call$0", $requiredArgCount: 0};
  A.Closure2Args.prototype = {"call*": "call$2", $requiredArgCount: 2};
  A.TearOffClosure.prototype = {};
  A.StaticClosure.prototype = {
    toString$0(_) {
      var $name = this.$static_name;
      if ($name == null)
        return "Closure of unknown static method";
      return "Closure '" + A.unminifyOrTag($name) + "'";
    }
  };
  A.BoundClosure.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (!(other instanceof A.BoundClosure))
        return false;
      return this.$_target === other.$_target && this._receiver === other._receiver;
    },
    get$hashCode(_) {
      return (A.objectHashCode(this._receiver) ^ A.Primitives_objectHashCode(this.$_target)) >>> 0;
    },
    toString$0(_) {
      return "Closure '" + this.$_name + "' of " + ("Instance of '" + A.Primitives_objectTypeName(this._receiver) + "'");
    }
  };
  A.RuntimeError.prototype = {
    toString$0(_) {
      return "RuntimeError: " + this.message;
    }
  };
  A.JsLinkedHashMap.prototype = {
    get$length(_) {
      return this.__js_helper$_length;
    },
    get$isEmpty(_) {
      return this.__js_helper$_length === 0;
    },
    get$isNotEmpty(_) {
      return this.__js_helper$_length !== 0;
    },
    get$keys() {
      return new A.LinkedHashMapKeysIterable(this, A._instanceType(this)._eval$1("LinkedHashMapKeysIterable<1>"));
    },
    get$values() {
      return new A.LinkedHashMapValuesIterable(this, A._instanceType(this)._eval$1("LinkedHashMapValuesIterable<2>"));
    },
    get$entries() {
      return new A.LinkedHashMapEntriesIterable(this, A._instanceType(this)._eval$1("LinkedHashMapEntriesIterable<1,2>"));
    },
    containsKey$1(key) {
      var strings, nums;
      if (typeof key == "string") {
        strings = this._strings;
        if (strings == null)
          return false;
        return strings[key] != null;
      } else if (typeof key == "number" && (key & 0x3fffffff) === key) {
        nums = this._nums;
        if (nums == null)
          return false;
        return nums[key] != null;
      } else
        return this.internalContainsKey$1(key);
    },
    internalContainsKey$1(key) {
      var rest = this.__js_helper$_rest;
      if (rest == null)
        return false;
      return this.internalFindBucketIndex$2(rest[this.internalComputeHashCode$1(key)], key) >= 0;
    },
    addAll$1(_, other) {
      other.forEach$1(0, new A.JsLinkedHashMap_addAll_closure(this));
    },
    $index(_, key) {
      var strings, cell, t1, nums, _null = null;
      if (typeof key == "string") {
        strings = this._strings;
        if (strings == null)
          return _null;
        cell = strings[key];
        t1 = cell == null ? _null : cell.hashMapCellValue;
        return t1;
      } else if (typeof key == "number" && (key & 0x3fffffff) === key) {
        nums = this._nums;
        if (nums == null)
          return _null;
        cell = nums[key];
        t1 = cell == null ? _null : cell.hashMapCellValue;
        return t1;
      } else
        return this.internalGet$1(key);
    },
    internalGet$1(key) {
      var bucket, index,
        rest = this.__js_helper$_rest;
      if (rest == null)
        return null;
      bucket = rest[this.internalComputeHashCode$1(key)];
      index = this.internalFindBucketIndex$2(bucket, key);
      if (index < 0)
        return null;
      return bucket[index].hashMapCellValue;
    },
    $indexSet(_, key, value) {
      var strings, nums, _this = this;
      if (typeof key == "string") {
        strings = _this._strings;
        _this._addHashTableEntry$3(strings == null ? _this._strings = _this._newHashTable$0() : strings, key, value);
      } else if (typeof key == "number" && (key & 0x3fffffff) === key) {
        nums = _this._nums;
        _this._addHashTableEntry$3(nums == null ? _this._nums = _this._newHashTable$0() : nums, key, value);
      } else
        _this.internalSet$2(key, value);
    },
    internalSet$2(key, value) {
      var hash, bucket, index, _this = this,
        rest = _this.__js_helper$_rest;
      if (rest == null)
        rest = _this.__js_helper$_rest = _this._newHashTable$0();
      hash = _this.internalComputeHashCode$1(key);
      bucket = rest[hash];
      if (bucket == null)
        rest[hash] = [_this._newLinkedCell$2(key, value)];
      else {
        index = _this.internalFindBucketIndex$2(bucket, key);
        if (index >= 0)
          bucket[index].hashMapCellValue = value;
        else
          bucket.push(_this._newLinkedCell$2(key, value));
      }
    },
    putIfAbsent$2(key, ifAbsent) {
      var t1, value, _this = this;
      if (_this.containsKey$1(key)) {
        t1 = _this.$index(0, key);
        return t1 == null ? A._instanceType(_this)._rest[1]._as(t1) : t1;
      }
      value = ifAbsent.call$0();
      _this.$indexSet(0, key, value);
      return value;
    },
    remove$1(_, key) {
      var _this = this;
      if (typeof key == "string")
        return _this._removeHashTableEntry$2(_this._strings, key);
      else if (typeof key == "number" && (key & 0x3fffffff) === key)
        return _this._removeHashTableEntry$2(_this._nums, key);
      else
        return _this.internalRemove$1(key);
    },
    internalRemove$1(key) {
      var hash, bucket, index, cell, _this = this,
        rest = _this.__js_helper$_rest;
      if (rest == null)
        return null;
      hash = _this.internalComputeHashCode$1(key);
      bucket = rest[hash];
      index = _this.internalFindBucketIndex$2(bucket, key);
      if (index < 0)
        return null;
      cell = bucket.splice(index, 1)[0];
      _this._unlinkCell$1(cell);
      if (bucket.length === 0)
        delete rest[hash];
      return cell.hashMapCellValue;
    },
    clear$0(_) {
      var _this = this;
      if (_this.__js_helper$_length > 0) {
        _this._strings = _this._nums = _this.__js_helper$_rest = _this._first = _this._last = null;
        _this.__js_helper$_length = 0;
        _this._modified$0();
      }
    },
    forEach$1(_, action) {
      var _this = this,
        cell = _this._first,
        modifications = _this._modifications;
      for (; cell != null;) {
        action.call$2(cell.hashMapCellKey, cell.hashMapCellValue);
        if (modifications !== _this._modifications)
          throw A.wrapException(A.ConcurrentModificationError$(_this));
        cell = cell._next;
      }
    },
    _addHashTableEntry$3(table, key, value) {
      var cell = table[key];
      if (cell == null)
        table[key] = this._newLinkedCell$2(key, value);
      else
        cell.hashMapCellValue = value;
    },
    _removeHashTableEntry$2(table, key) {
      var cell;
      if (table == null)
        return null;
      cell = table[key];
      if (cell == null)
        return null;
      this._unlinkCell$1(cell);
      delete table[key];
      return cell.hashMapCellValue;
    },
    _modified$0() {
      this._modifications = this._modifications + 1 & 1073741823;
    },
    _newLinkedCell$2(key, value) {
      var t1, _this = this,
        cell = new A.LinkedHashMapCell(key, value);
      if (_this._first == null)
        _this._first = _this._last = cell;
      else {
        t1 = _this._last;
        t1.toString;
        cell._previous = t1;
        _this._last = t1._next = cell;
      }
      ++_this.__js_helper$_length;
      _this._modified$0();
      return cell;
    },
    _unlinkCell$1(cell) {
      var _this = this,
        previous = cell._previous,
        next = cell._next;
      if (previous == null)
        _this._first = next;
      else
        previous._next = next;
      if (next == null)
        _this._last = previous;
      else
        next._previous = previous;
      --_this.__js_helper$_length;
      _this._modified$0();
    },
    internalComputeHashCode$1(key) {
      return J.get$hashCode$(key) & 1073741823;
    },
    internalFindBucketIndex$2(bucket, key) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i)
        if (J.$eq$(bucket[i].hashMapCellKey, key))
          return i;
      return -1;
    },
    toString$0(_) {
      return A.MapBase_mapToString(this);
    },
    _newHashTable$0() {
      var table = Object.create(null);
      table["<non-identifier-key>"] = table;
      delete table["<non-identifier-key>"];
      return table;
    }
  };
  A.JsLinkedHashMap_addAll_closure.prototype = {
    call$2(key, value) {
      this.$this.$indexSet(0, key, value);
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("~(1,2)");
    }
  };
  A.LinkedHashMapCell.prototype = {};
  A.LinkedHashMapKeysIterable.prototype = {
    get$length(_) {
      return this._map.__js_helper$_length;
    },
    get$isEmpty(_) {
      return this._map.__js_helper$_length === 0;
    },
    get$iterator(_) {
      var t1 = this._map;
      return new A.LinkedHashMapKeyIterator(t1, t1._modifications, t1._first);
    },
    contains$1(_, element) {
      return this._map.containsKey$1(element);
    },
    forEach$1(_, f) {
      var t1 = this._map,
        cell = t1._first,
        modifications = t1._modifications;
      for (; cell != null;) {
        f.call$1(cell.hashMapCellKey);
        if (modifications !== t1._modifications)
          throw A.wrapException(A.ConcurrentModificationError$(t1));
        cell = cell._next;
      }
    }
  };
  A.LinkedHashMapKeyIterator.prototype = {
    get$current() {
      return this.__js_helper$_current;
    },
    moveNext$0() {
      var cell, _this = this,
        t1 = _this._map;
      if (_this._modifications !== t1._modifications)
        throw A.wrapException(A.ConcurrentModificationError$(t1));
      cell = _this._cell;
      if (cell == null) {
        _this.__js_helper$_current = null;
        return false;
      } else {
        _this.__js_helper$_current = cell.hashMapCellKey;
        _this._cell = cell._next;
        return true;
      }
    }
  };
  A.LinkedHashMapValuesIterable.prototype = {
    get$length(_) {
      return this._map.__js_helper$_length;
    },
    get$isEmpty(_) {
      return this._map.__js_helper$_length === 0;
    },
    get$iterator(_) {
      var t1 = this._map;
      return new A.LinkedHashMapValueIterator(t1, t1._modifications, t1._first);
    }
  };
  A.LinkedHashMapValueIterator.prototype = {
    get$current() {
      return this.__js_helper$_current;
    },
    moveNext$0() {
      var cell, _this = this,
        t1 = _this._map;
      if (_this._modifications !== t1._modifications)
        throw A.wrapException(A.ConcurrentModificationError$(t1));
      cell = _this._cell;
      if (cell == null) {
        _this.__js_helper$_current = null;
        return false;
      } else {
        _this.__js_helper$_current = cell.hashMapCellValue;
        _this._cell = cell._next;
        return true;
      }
    }
  };
  A.LinkedHashMapEntriesIterable.prototype = {
    get$length(_) {
      return this._map.__js_helper$_length;
    },
    get$isEmpty(_) {
      return this._map.__js_helper$_length === 0;
    },
    get$iterator(_) {
      var t1 = this._map;
      return new A.LinkedHashMapEntryIterator(t1, t1._modifications, t1._first, this.$ti._eval$1("LinkedHashMapEntryIterator<1,2>"));
    }
  };
  A.LinkedHashMapEntryIterator.prototype = {
    get$current() {
      var t1 = this.__js_helper$_current;
      t1.toString;
      return t1;
    },
    moveNext$0() {
      var cell, _this = this,
        t1 = _this._map;
      if (_this._modifications !== t1._modifications)
        throw A.wrapException(A.ConcurrentModificationError$(t1));
      cell = _this._cell;
      if (cell == null) {
        _this.__js_helper$_current = null;
        return false;
      } else {
        _this.__js_helper$_current = new A.MapEntry(cell.hashMapCellKey, cell.hashMapCellValue, _this.$ti._eval$1("MapEntry<1,2>"));
        _this._cell = cell._next;
        return true;
      }
    }
  };
  A.JsConstantLinkedHashMap.prototype = {
    internalComputeHashCode$1(key) {
      return A.constantHashCode(key) & 1073741823;
    },
    internalFindBucketIndex$2(bucket, key) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i)
        if (J.$eq$(bucket[i].hashMapCellKey, key))
          return i;
      return -1;
    }
  };
  A.initHooks_closure.prototype = {
    call$1(o) {
      return this.getTag(o);
    },
    $signature: 57
  };
  A.initHooks_closure0.prototype = {
    call$2(o, tag) {
      return this.getUnknownTag(o, tag);
    },
    $signature: 266
  };
  A.initHooks_closure1.prototype = {
    call$1(tag) {
      return this.prototypeForTag(tag);
    },
    $signature: 63
  };
  A.JSSyntaxRegExp.prototype = {
    toString$0(_) {
      return "RegExp/" + this.pattern + "/" + this._nativeRegExp.flags;
    },
    get$_nativeGlobalVersion() {
      var _this = this,
        t1 = _this._nativeGlobalRegExp;
      if (t1 != null)
        return t1;
      t1 = _this._nativeRegExp;
      return _this._nativeGlobalRegExp = A.JSSyntaxRegExp_makeNative(_this.pattern, t1.multiline, !t1.ignoreCase, t1.unicode, t1.dotAll, "g");
    },
    _computeHasCaptures$0() {
      var t2,
        t1 = this.pattern;
      if (!B.JSString_methods.contains$1(t1, "("))
        return false;
      t2 = this._nativeRegExp.unicode ? "u" : "";
      return new RegExp("(?:)|" + t1, t2).exec("").length > 1;
    },
    firstMatch$1(string) {
      var m = this._nativeRegExp.exec(string);
      if (m == null)
        return null;
      return new A._MatchImplementation(m);
    },
    allMatches$2(_, string, start) {
      var t1 = string.length;
      if (start > t1)
        throw A.wrapException(A.RangeError$range(start, 0, t1, null, null));
      return new A._AllMatchesIterable(this, string, start);
    },
    allMatches$1(_, string) {
      return this.allMatches$2(0, string, 0);
    },
    _execGlobal$2(string, start) {
      var match,
        regexp = this.get$_nativeGlobalVersion();
      regexp.lastIndex = start;
      match = regexp.exec(string);
      if (match == null)
        return null;
      return new A._MatchImplementation(match);
    }
  };
  A._MatchImplementation.prototype = {
    get$start() {
      return this._match.index;
    },
    get$end() {
      var t1 = this._match;
      return t1.index + t1[0].length;
    },
    $isMatch: 1,
    $isRegExpMatch: 1
  };
  A._AllMatchesIterable.prototype = {
    get$iterator(_) {
      return new A._AllMatchesIterator(this._re, this.__js_helper$_string, this.__js_helper$_start);
    }
  };
  A._AllMatchesIterator.prototype = {
    get$current() {
      var t1 = this.__js_helper$_current;
      return t1 == null ? type$.RegExpMatch._as(t1) : t1;
    },
    moveNext$0() {
      var t1, t2, t3, match, nextIndex, t4, _this = this,
        string = _this.__js_helper$_string;
      if (string == null)
        return false;
      t1 = _this._nextIndex;
      t2 = string.length;
      if (t1 <= t2) {
        t3 = _this._regExp;
        match = t3._execGlobal$2(string, t1);
        if (match != null) {
          _this.__js_helper$_current = match;
          nextIndex = match.get$end();
          if (match._match.index === nextIndex) {
            t1 = false;
            if (t3._nativeRegExp.unicode) {
              t3 = _this._nextIndex;
              t4 = t3 + 1;
              if (t4 < t2) {
                t2 = string.charCodeAt(t3);
                if (t2 >= 55296 && t2 <= 56319) {
                  t1 = string.charCodeAt(t4);
                  t1 = t1 >= 56320 && t1 <= 57343;
                }
              }
            }
            nextIndex = (t1 ? nextIndex + 1 : nextIndex) + 1;
          }
          _this._nextIndex = nextIndex;
          return true;
        }
      }
      _this.__js_helper$_string = _this.__js_helper$_current = null;
      return false;
    }
  };
  A.StringMatch.prototype = {
    get$end() {
      return this.start + this.pattern.length;
    },
    $isMatch: 1,
    get$start() {
      return this.start;
    }
  };
  A._StringAllMatchesIterable.prototype = {
    get$iterator(_) {
      return new A._StringAllMatchesIterator(this._input, this._pattern, this.__js_helper$_index);
    },
    get$first(_) {
      var t1 = this._pattern,
        index = this._input.indexOf(t1, this.__js_helper$_index);
      if (index >= 0)
        return new A.StringMatch(index, t1);
      throw A.wrapException(A.IterableElementError_noElement());
    }
  };
  A._StringAllMatchesIterator.prototype = {
    moveNext$0() {
      var index, end, _this = this,
        t1 = _this.__js_helper$_index,
        t2 = _this._pattern,
        t3 = t2.length,
        t4 = _this._input,
        t5 = t4.length;
      if (t1 + t3 > t5) {
        _this.__js_helper$_current = null;
        return false;
      }
      index = t4.indexOf(t2, t1);
      if (index < 0) {
        _this.__js_helper$_index = t5 + 1;
        _this.__js_helper$_current = null;
        return false;
      }
      end = index + t3;
      _this.__js_helper$_current = new A.StringMatch(index, t2);
      _this.__js_helper$_index = end === _this.__js_helper$_index ? end + 1 : end;
      return true;
    },
    get$current() {
      var t1 = this.__js_helper$_current;
      t1.toString;
      return t1;
    }
  };
  A._Cell.prototype = {
    _readLocal$0() {
      var t1 = this.__late_helper$_value;
      if (t1 === this)
        throw A.wrapException(new A.LateError("Local '' has not been initialized."));
      return t1;
    },
    set$finalLocalValue(v) {
      if (this.__late_helper$_value !== this)
        throw A.wrapException(new A.LateError("Local '' has already been initialized."));
      this.__late_helper$_value = v;
    }
  };
  A.NativeByteBuffer.prototype = {
    get$runtimeType(receiver) {
      return B.Type_ByteBuffer_rqD;
    },
    asUint8List$2(receiver, offsetInBytes, $length) {
      A._checkViewArguments(receiver, offsetInBytes, $length);
      return $length == null ? new Uint8Array(receiver, offsetInBytes) : new Uint8Array(receiver, offsetInBytes, $length);
    },
    asUint8List$0(receiver) {
      return this.asUint8List$2(receiver, 0, null);
    },
    asInt32List$2(receiver, offsetInBytes, $length) {
      A._checkViewArguments(receiver, offsetInBytes, $length);
      return new Int32Array(receiver, offsetInBytes, $length);
    },
    asInt64List$2(receiver, offsetInBytes, $length) {
      throw A.wrapException(A.UnsupportedError$("Int64List not supported by dart2js."));
    },
    asFloat32List$2(receiver, offsetInBytes, $length) {
      A._checkViewArguments(receiver, offsetInBytes, $length);
      return new Float32Array(receiver, offsetInBytes, $length);
    },
    asFloat64List$2(receiver, offsetInBytes, $length) {
      A._checkViewArguments(receiver, offsetInBytes, $length);
      return new Float64Array(receiver, offsetInBytes, $length);
    },
    asByteData$2(receiver, offsetInBytes, $length) {
      A._checkViewArguments(receiver, offsetInBytes, $length);
      return $length == null ? new DataView(receiver, offsetInBytes) : new DataView(receiver, offsetInBytes, $length);
    },
    asByteData$0(receiver) {
      return this.asByteData$2(receiver, 0, null);
    },
    $isTrustedGetRuntimeType: 1
  };
  A.NativeTypedData.prototype = {
    get$buffer(receiver) {
      if (((receiver.$flags | 0) & 2) !== 0)
        return new A._UnmodifiableNativeByteBufferView(receiver.buffer);
      else
        return receiver.buffer;
    },
    _invalidPosition$3(receiver, position, $length, $name) {
      var t1 = A.RangeError$range(position, 0, $length, $name, null);
      throw A.wrapException(t1);
    },
    _checkPosition$3(receiver, position, $length, $name) {
      if (position >>> 0 !== position || position > $length)
        this._invalidPosition$3(receiver, position, $length, $name);
    }
  };
  A._UnmodifiableNativeByteBufferView.prototype = {
    asUint8List$2(_, offsetInBytes, $length) {
      var result = A.NativeUint8List_NativeUint8List$view(this._data, offsetInBytes, $length);
      result.$flags = 3;
      return result;
    },
    asUint8List$0(_) {
      return this.asUint8List$2(0, 0, null);
    },
    asInt32List$2(_, offsetInBytes, $length) {
      var result = A.NativeInt32List_NativeInt32List$view(this._data, offsetInBytes, $length);
      result.$flags = 3;
      return result;
    },
    asInt64List$2(_, offsetInBytes, $length) {
      J.asInt64List$2$x(this._data, offsetInBytes, $length);
    },
    asFloat32List$2(_, offsetInBytes, $length) {
      var result = A.NativeFloat32List_NativeFloat32List$view(this._data, offsetInBytes, $length);
      result.$flags = 3;
      return result;
    },
    asFloat64List$2(_, offsetInBytes, $length) {
      var result = A.NativeFloat64List_NativeFloat64List$view(this._data, offsetInBytes, $length);
      result.$flags = 3;
      return result;
    },
    asByteData$2(_, offsetInBytes, $length) {
      var result = A.NativeByteData_NativeByteData$view(this._data, offsetInBytes, $length);
      result.$flags = 3;
      return result;
    },
    asByteData$0(_) {
      return this.asByteData$2(0, 0, null);
    }
  };
  A.NativeByteData.prototype = {
    get$runtimeType(receiver) {
      return B.Type_ByteData_9dB;
    },
    getInt64$2(receiver, byteOffset, endian) {
      throw A.wrapException(A.UnsupportedError$("Int64 accessor not supported by dart2js."));
    },
    setInt64$3(receiver, byteOffset, value, endian) {
      throw A.wrapException(A.UnsupportedError$("Int64 accessor not supported by dart2js."));
    },
    $isTrustedGetRuntimeType: 1,
    $isByteData: 1
  };
  A.NativeTypedArray.prototype = {
    get$length(receiver) {
      return receiver.length;
    },
    _setRangeFast$4(receiver, start, end, source, skipCount) {
      var count, sourceLength,
        targetLength = receiver.length;
      this._checkPosition$3(receiver, start, targetLength, "start");
      this._checkPosition$3(receiver, end, targetLength, "end");
      if (start > end)
        throw A.wrapException(A.RangeError$range(start, 0, end, null, null));
      count = end - start;
      sourceLength = source.length;
      if (sourceLength - skipCount < count)
        throw A.wrapException(A.StateError$("Not enough elements"));
      if (skipCount !== 0 || sourceLength !== count)
        source = source.subarray(skipCount, skipCount + count);
      receiver.set(source, start);
    },
    $isJavaScriptIndexingBehavior: 1
  };
  A.NativeTypedArrayOfDouble.prototype = {
    $index(receiver, index) {
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    $indexSet(receiver, index, value) {
      receiver.$flags & 2 && A.throwUnsupportedOperation(receiver);
      A._checkValidIndex(index, receiver, receiver.length);
      receiver[index] = value;
    },
    setRange$4(receiver, start, end, iterable, skipCount) {
      receiver.$flags & 2 && A.throwUnsupportedOperation(receiver, 5);
      if (type$.NativeTypedArrayOfDouble._is(iterable)) {
        this._setRangeFast$4(receiver, start, end, iterable, skipCount);
        return;
      }
      this.super$ListBase$setRange(receiver, start, end, iterable, skipCount);
    },
    setRange$3(receiver, start, end, iterable) {
      return this.setRange$4(receiver, start, end, iterable, 0);
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.NativeTypedArrayOfInt.prototype = {
    $indexSet(receiver, index, value) {
      receiver.$flags & 2 && A.throwUnsupportedOperation(receiver);
      A._checkValidIndex(index, receiver, receiver.length);
      receiver[index] = value;
    },
    setRange$4(receiver, start, end, iterable, skipCount) {
      receiver.$flags & 2 && A.throwUnsupportedOperation(receiver, 5);
      if (type$.NativeTypedArrayOfInt._is(iterable)) {
        this._setRangeFast$4(receiver, start, end, iterable, skipCount);
        return;
      }
      this.super$ListBase$setRange(receiver, start, end, iterable, skipCount);
    },
    setRange$3(receiver, start, end, iterable) {
      return this.setRange$4(receiver, start, end, iterable, 0);
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.NativeFloat32List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Float32List_9Kz;
    },
    sublist$1(receiver, start) {
      return new Float32Array(receiver.subarray(start, A._checkValidRange(start, null, receiver.length)));
    },
    $isTrustedGetRuntimeType: 1,
    $isFloat32List: 1
  };
  A.NativeFloat64List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Float64List_9Kz;
    },
    sublist$1(receiver, start) {
      return new Float64Array(receiver.subarray(start, A._checkValidRange(start, null, receiver.length)));
    },
    $isTrustedGetRuntimeType: 1,
    $isFloat64List: 1
  };
  A.NativeInt16List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Int16List_s5h;
    },
    $index(receiver, index) {
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    sublist$1(receiver, start) {
      return new Int16Array(receiver.subarray(start, A._checkValidRange(start, null, receiver.length)));
    },
    $isTrustedGetRuntimeType: 1
  };
  A.NativeInt32List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Int32List_O8Z;
    },
    $index(receiver, index) {
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    sublist$1(receiver, start) {
      return new Int32Array(receiver.subarray(start, A._checkValidRange(start, null, receiver.length)));
    },
    $isTrustedGetRuntimeType: 1,
    $isInt32List: 1
  };
  A.NativeInt8List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Int8List_rFV;
    },
    $index(receiver, index) {
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    sublist$1(receiver, start) {
      return new Int8Array(receiver.subarray(start, A._checkValidRange(start, null, receiver.length)));
    },
    $isTrustedGetRuntimeType: 1
  };
  A.NativeUint16List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Uint16List_kmP;
    },
    $index(receiver, index) {
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    sublist$1(receiver, start) {
      return new Uint16Array(receiver.subarray(start, A._checkValidRange(start, null, receiver.length)));
    },
    $isTrustedGetRuntimeType: 1
  };
  A.NativeUint32List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Uint32List_kmP;
    },
    $index(receiver, index) {
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    sublist$1(receiver, start) {
      return new Uint32Array(receiver.subarray(start, A._checkValidRange(start, null, receiver.length)));
    },
    $isTrustedGetRuntimeType: 1
  };
  A.NativeUint8ClampedList.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Uint8ClampedList_04U;
    },
    get$length(receiver) {
      return receiver.length;
    },
    $index(receiver, index) {
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    sublist$1(receiver, start) {
      return new Uint8ClampedArray(receiver.subarray(start, A._checkValidRange(start, null, receiver.length)));
    },
    $isTrustedGetRuntimeType: 1
  };
  A.NativeUint8List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Uint8List_8Eb;
    },
    get$length(receiver) {
      return receiver.length;
    },
    $index(receiver, index) {
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    sublist$2(receiver, start, end) {
      return new Uint8Array(receiver.subarray(start, A._checkValidRange(start, end, receiver.length)));
    },
    sublist$1(receiver, start) {
      return this.sublist$2(receiver, start, null);
    },
    $isTrustedGetRuntimeType: 1,
    $isUint8List: 1
  };
  A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin.prototype = {};
  A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin.prototype = {};
  A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin.prototype = {};
  A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin.prototype = {};
  A.Rti.prototype = {
    _eval$1(recipe) {
      return A._Universe_evalInEnvironment(init.typeUniverse, this, recipe);
    },
    _bind$1(typeOrTuple) {
      return A._Universe_bind(init.typeUniverse, this, typeOrTuple);
    }
  };
  A._FunctionParameters.prototype = {};
  A._Type.prototype = {
    toString$0(_) {
      return A._rtiToString(this._rti, null);
    },
    $isType: 1
  };
  A._Error.prototype = {
    toString$0(_) {
      return this.__rti$_message;
    }
  };
  A._TypeError.prototype = {$isTypeError: 1};
  A._AsyncRun__initializeScheduleImmediate_internalCallback.prototype = {
    call$1(__wc0_formal) {
      var t1 = this._box_0,
        f = t1.storedCallback;
      t1.storedCallback = null;
      f.call$0();
    },
    $signature: 28
  };
  A._AsyncRun__initializeScheduleImmediate_closure.prototype = {
    call$1(callback) {
      var t1, t2;
      this._box_0.storedCallback = callback;
      t1 = this.div;
      t2 = this.span;
      t1.firstChild ? t1.removeChild(t2) : t1.appendChild(t2);
    },
    $signature: 206
  };
  A._AsyncRun__scheduleImmediateJsOverride_internalCallback.prototype = {
    call$0() {
      this.callback.call$0();
    },
    $signature: 9
  };
  A._AsyncRun__scheduleImmediateWithSetImmediate_internalCallback.prototype = {
    call$0() {
      this.callback.call$0();
    },
    $signature: 9
  };
  A._TimerImpl.prototype = {
    _TimerImpl$2(milliseconds, callback) {
      if (self.setTimeout != null)
        this._handle = self.setTimeout(A.convertDartClosureToJS(new A._TimerImpl_internalCallback(this, callback), 0), milliseconds);
      else
        throw A.wrapException(A.UnsupportedError$("`setTimeout()` not found."));
    },
    cancel$0() {
      if (self.setTimeout != null) {
        var t1 = this._handle;
        if (t1 == null)
          return;
        if (this._once)
          self.clearTimeout(t1);
        else
          self.clearInterval(t1);
        this._handle = null;
      } else
        throw A.wrapException(A.UnsupportedError$("Canceling a timer."));
    }
  };
  A._TimerImpl_internalCallback.prototype = {
    call$0() {
      var t1 = this.$this;
      t1._handle = null;
      t1._tick = 1;
      this.callback.call$0();
    },
    $signature: 0
  };
  A._AsyncAwaitCompleter.prototype = {
    complete$1(value) {
      var t1, _this = this;
      if (value == null)
        value = _this.$ti._precomputed1._as(value);
      if (!_this.isSync)
        _this._future._asyncComplete$1(value);
      else {
        t1 = _this._future;
        if (_this.$ti._eval$1("Future<1>")._is(value))
          t1._chainFuture$1(value);
        else
          t1._completeWithValue$1(value);
      }
    },
    completeError$2(e, st) {
      var t1 = this._future;
      if (this.isSync)
        t1._completeErrorObject$1(new A.AsyncError(e, st));
      else
        t1._asyncCompleteErrorObject$1(new A.AsyncError(e, st));
    }
  };
  A._awaitOnObject_closure.prototype = {
    call$1(result) {
      return this.bodyFunction.call$2(0, result);
    },
    $signature: 29
  };
  A._awaitOnObject_closure0.prototype = {
    call$2(error, stackTrace) {
      this.bodyFunction.call$2(1, new A.ExceptionAndStackTrace(error, stackTrace));
    },
    $signature: 131
  };
  A._wrapJsFunctionForAsync_closure.prototype = {
    call$2(errorCode, result) {
      this.$protected(errorCode, result);
    },
    $signature: 142
  };
  A._SyncStarIterator.prototype = {
    get$current() {
      return this._async$_current;
    },
    _resumeBody$2(errorCode, errorValue) {
      var body, t1, exception;
      errorCode = errorCode;
      errorValue = errorValue;
      body = this._body;
      for (; true;)
        try {
          t1 = body(this, errorCode, errorValue);
          return t1;
        } catch (exception) {
          errorValue = exception;
          errorCode = 1;
        }
    },
    moveNext$0() {
      var nestedIterator, exception, value, suspendedBodies, _this = this, errorValue = null, errorCode = 0;
      for (; true;) {
        nestedIterator = _this._nestedIterator;
        if (nestedIterator != null)
          try {
            if (nestedIterator.moveNext$0()) {
              _this._async$_current = nestedIterator.get$current();
              return true;
            } else
              _this._nestedIterator = null;
          } catch (exception) {
            errorValue = exception;
            errorCode = 1;
            _this._nestedIterator = null;
          }
        value = _this._resumeBody$2(errorCode, errorValue);
        if (1 === value)
          return true;
        if (0 === value) {
          _this._async$_current = null;
          suspendedBodies = _this._suspendedBodies;
          if (suspendedBodies == null || suspendedBodies.length === 0) {
            _this._body = A._SyncStarIterator__terminatedBody;
            return false;
          }
          _this._body = suspendedBodies.pop();
          errorCode = 0;
          errorValue = null;
          continue;
        }
        if (2 === value) {
          errorCode = 0;
          errorValue = null;
          continue;
        }
        if (3 === value) {
          errorValue = _this._datum;
          _this._datum = null;
          suspendedBodies = _this._suspendedBodies;
          if (suspendedBodies == null || suspendedBodies.length === 0) {
            _this._async$_current = null;
            _this._body = A._SyncStarIterator__terminatedBody;
            throw errorValue;
            return false;
          }
          _this._body = suspendedBodies.pop();
          errorCode = 1;
          continue;
        }
        throw A.wrapException(A.StateError$("sync*"));
      }
      return false;
    },
    _yieldStar$1(iterable) {
      var t1, t2, _this = this;
      if (iterable instanceof A._SyncStarIterable) {
        t1 = iterable._outerHelper();
        t2 = _this._suspendedBodies;
        if (t2 == null)
          t2 = _this._suspendedBodies = [];
        t2.push(_this._body);
        _this._body = t1;
        return 2;
      } else {
        _this._nestedIterator = J.get$iterator$ax(iterable);
        return 2;
      }
    }
  };
  A._SyncStarIterable.prototype = {
    get$iterator(_) {
      return new A._SyncStarIterator(this._outerHelper());
    }
  };
  A.AsyncError.prototype = {
    toString$0(_) {
      return A.S(this.error);
    },
    $isError: 1,
    get$stackTrace() {
      return this.stackTrace;
    }
  };
  A.Future_wait_handleError.prototype = {
    call$2(theError, theStackTrace) {
      var _this = this,
        t1 = _this._box_0,
        t2 = --t1.remaining;
      if (t1.values != null) {
        t1.values = null;
        t1.error = theError;
        t1.stackTrace = theStackTrace;
        if (t2 === 0 || _this.eagerError)
          _this._future._completeErrorObject$1(new A.AsyncError(theError, theStackTrace));
      } else if (t2 === 0 && !_this.eagerError) {
        t2 = t1.error;
        t2.toString;
        t1 = t1.stackTrace;
        t1.toString;
        _this._future._completeErrorObject$1(new A.AsyncError(t2, t1));
      }
    },
    $signature: 59
  };
  A.Future_wait_closure.prototype = {
    call$1(value) {
      var t1, value0, t3, t4, _i, t5, _this = this,
        t2 = _this._box_0,
        remainingResults = --t2.remaining,
        valueList = t2.values;
      if (valueList != null) {
        J.$indexSet$ax(valueList, _this.pos, value);
        if (J.$eq$(remainingResults, 0)) {
          t2 = _this.T;
          t1 = A._setArrayType([], t2._eval$1("JSArray<0>"));
          for (t3 = valueList, t4 = t3.length, _i = 0; _i < t3.length; t3.length === t4 || (0, A.throwConcurrentModificationError)(t3), ++_i) {
            value0 = t3[_i];
            t5 = value0;
            if (t5 == null)
              t5 = t2._as(t5);
            J.add$1$ax(t1, t5);
          }
          _this._future._completeWithValue$1(t1);
        }
      } else if (J.$eq$(remainingResults, 0) && !_this.eagerError) {
        t1 = t2.error;
        t1.toString;
        t2 = t2.stackTrace;
        t2.toString;
        _this._future._completeErrorObject$1(new A.AsyncError(t1, t2));
      }
    },
    $signature() {
      return this.T._eval$1("Null(0)");
    }
  };
  A._Completer.prototype = {
    completeError$2(error, stackTrace) {
      var t1 = this.future;
      if ((t1._state & 30) !== 0)
        throw A.wrapException(A.StateError$("Future already completed"));
      t1._asyncCompleteErrorObject$1(A._interceptUserError(error, stackTrace));
    },
    completeError$1(error) {
      return this.completeError$2(error, null);
    }
  };
  A._AsyncCompleter.prototype = {
    complete$1(value) {
      var t1 = this.future;
      if ((t1._state & 30) !== 0)
        throw A.wrapException(A.StateError$("Future already completed"));
      t1._asyncComplete$1(value);
    },
    complete$0() {
      return this.complete$1(null);
    }
  };
  A._FutureListener.prototype = {
    matchesErrorTest$1(asyncError) {
      if ((this.state & 15) !== 6)
        return true;
      return this.result._zone.runUnary$2(this.callback, asyncError.error);
    },
    handleError$1(asyncError) {
      var exception,
        errorCallback = this.errorCallback,
        result = null,
        t1 = asyncError.error,
        t2 = this.result._zone;
      if (type$.dynamic_Function_Object_StackTrace._is(errorCallback))
        result = t2.runBinary$3(errorCallback, t1, asyncError.stackTrace);
      else
        result = t2.runUnary$2(errorCallback, t1);
      try {
        t1 = result;
        return t1;
      } catch (exception) {
        if (type$.TypeError._is(A.unwrapException(exception))) {
          if ((this.state & 1) !== 0)
            throw A.wrapException(A.ArgumentError$("The error handler of Future.then must return a value of the returned future's type", "onError"));
          throw A.wrapException(A.ArgumentError$("The error handler of Future.catchError must return a value of the future's type", "onError"));
        } else
          throw exception;
      }
    }
  };
  A._Future.prototype = {
    then$1$2$onError(f, onError, $R) {
      var result, t1,
        currentZone = $.Zone__current;
      if (currentZone === B.C__RootZone) {
        if (onError != null && !type$.dynamic_Function_Object_StackTrace._is(onError) && !type$.dynamic_Function_Object._is(onError))
          throw A.wrapException(A.ArgumentError$value(onError, "onError", string$.Error_));
      } else if (onError != null)
        onError = A._registerErrorHandler(onError, currentZone);
      result = new A._Future(currentZone, $R._eval$1("_Future<0>"));
      t1 = onError == null ? 1 : 3;
      this._addListener$1(new A._FutureListener(result, t1, f, onError, this.$ti._eval$1("@<1>")._bind$1($R)._eval$1("_FutureListener<1,2>")));
      return result;
    },
    then$1$1(f, $R) {
      return this.then$1$2$onError(f, null, $R);
    },
    _thenAwait$1$2(f, onError, $E) {
      var result = new A._Future($.Zone__current, $E._eval$1("_Future<0>"));
      this._addListener$1(new A._FutureListener(result, 19, f, onError, this.$ti._eval$1("@<1>")._bind$1($E)._eval$1("_FutureListener<1,2>")));
      return result;
    },
    whenComplete$1(action) {
      var t1 = this.$ti,
        result = new A._Future($.Zone__current, t1);
      this._addListener$1(new A._FutureListener(result, 8, action, null, t1._eval$1("_FutureListener<1,1>")));
      return result;
    },
    _setErrorObject$1(error) {
      this._state = this._state & 1 | 16;
      this._resultOrListeners = error;
    },
    _cloneResult$1(source) {
      this._state = source._state & 30 | this._state & 1;
      this._resultOrListeners = source._resultOrListeners;
    },
    _addListener$1(listener) {
      var _this = this,
        t1 = _this._state;
      if (t1 <= 3) {
        listener._nextListener = _this._resultOrListeners;
        _this._resultOrListeners = listener;
      } else {
        if ((t1 & 4) !== 0) {
          t1 = _this._resultOrListeners;
          if ((t1._state & 24) === 0) {
            t1._addListener$1(listener);
            return;
          }
          _this._cloneResult$1(t1);
        }
        A._rootScheduleMicrotask(null, null, _this._zone, new A._Future__addListener_closure(_this, listener));
      }
    },
    _prependListeners$1(listeners) {
      var t1, existingListeners, next, cursor, next0, _this = this, _box_0 = {};
      _box_0.listeners = listeners;
      if (listeners == null)
        return;
      t1 = _this._state;
      if (t1 <= 3) {
        existingListeners = _this._resultOrListeners;
        _this._resultOrListeners = listeners;
        if (existingListeners != null) {
          next = listeners._nextListener;
          for (cursor = listeners; next != null; cursor = next, next = next0)
            next0 = next._nextListener;
          cursor._nextListener = existingListeners;
        }
      } else {
        if ((t1 & 4) !== 0) {
          t1 = _this._resultOrListeners;
          if ((t1._state & 24) === 0) {
            t1._prependListeners$1(listeners);
            return;
          }
          _this._cloneResult$1(t1);
        }
        _box_0.listeners = _this._reverseListeners$1(listeners);
        A._rootScheduleMicrotask(null, null, _this._zone, new A._Future__prependListeners_closure(_box_0, _this));
      }
    },
    _removeListeners$0() {
      var current = this._resultOrListeners;
      this._resultOrListeners = null;
      return this._reverseListeners$1(current);
    },
    _reverseListeners$1(listeners) {
      var current, prev, next;
      for (current = listeners, prev = null; current != null; prev = current, current = next) {
        next = current._nextListener;
        current._nextListener = prev;
      }
      return prev;
    },
    _chainForeignFuture$1(source) {
      var e, s, exception, _this = this;
      _this._state ^= 2;
      try {
        source.then$1$2$onError(new A._Future__chainForeignFuture_closure(_this), new A._Future__chainForeignFuture_closure0(_this), type$.Null);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        A.scheduleMicrotask(new A._Future__chainForeignFuture_closure1(_this, e, s));
      }
    },
    _async$_complete$1(value) {
      var listeners, _this = this;
      if (_this.$ti._eval$1("Future<1>")._is(value))
        if (value instanceof A._Future)
          A._Future__chainCoreFuture(value, _this, true);
        else
          _this._chainForeignFuture$1(value);
      else {
        listeners = _this._removeListeners$0();
        _this._state = 8;
        _this._resultOrListeners = value;
        A._Future__propagateToListeners(_this, listeners);
      }
    },
    _completeWithValue$1(value) {
      var _this = this,
        listeners = _this._removeListeners$0();
      _this._state = 8;
      _this._resultOrListeners = value;
      A._Future__propagateToListeners(_this, listeners);
    },
    _completeWithResultOf$1(source) {
      var t1, listeners, _this = this;
      if ((source._state & 16) !== 0) {
        t1 = _this._zone === source._zone;
        t1 = !(t1 || t1);
      } else
        t1 = false;
      if (t1)
        return;
      listeners = _this._removeListeners$0();
      _this._cloneResult$1(source);
      A._Future__propagateToListeners(_this, listeners);
    },
    _completeErrorObject$1(error) {
      var listeners = this._removeListeners$0();
      this._setErrorObject$1(error);
      A._Future__propagateToListeners(this, listeners);
    },
    _completeError$2(error, stackTrace) {
      this._completeErrorObject$1(new A.AsyncError(error, stackTrace));
    },
    _asyncComplete$1(value) {
      if (this.$ti._eval$1("Future<1>")._is(value)) {
        this._chainFuture$1(value);
        return;
      }
      this._asyncCompleteWithValue$1(value);
    },
    _asyncCompleteWithValue$1(value) {
      this._state ^= 2;
      A._rootScheduleMicrotask(null, null, this._zone, new A._Future__asyncCompleteWithValue_closure(this, value));
    },
    _chainFuture$1(value) {
      if (value instanceof A._Future) {
        A._Future__chainCoreFuture(value, this, false);
        return;
      }
      this._chainForeignFuture$1(value);
    },
    _asyncCompleteErrorObject$1(error) {
      this._state ^= 2;
      A._rootScheduleMicrotask(null, null, this._zone, new A._Future__asyncCompleteErrorObject_closure(this, error));
    },
    $isFuture: 1
  };
  A._Future__addListener_closure.prototype = {
    call$0() {
      A._Future__propagateToListeners(this.$this, this.listener);
    },
    $signature: 0
  };
  A._Future__prependListeners_closure.prototype = {
    call$0() {
      A._Future__propagateToListeners(this.$this, this._box_0.listeners);
    },
    $signature: 0
  };
  A._Future__chainForeignFuture_closure.prototype = {
    call$1(value) {
      var error, stackTrace, exception,
        t1 = this.$this;
      t1._state ^= 2;
      try {
        t1._completeWithValue$1(t1.$ti._precomputed1._as(value));
      } catch (exception) {
        error = A.unwrapException(exception);
        stackTrace = A.getTraceFromException(exception);
        t1._completeErrorObject$1(new A.AsyncError(error, stackTrace));
      }
    },
    $signature: 28
  };
  A._Future__chainForeignFuture_closure0.prototype = {
    call$2(error, stackTrace) {
      this.$this._completeErrorObject$1(new A.AsyncError(error, stackTrace));
    },
    $signature: 70
  };
  A._Future__chainForeignFuture_closure1.prototype = {
    call$0() {
      this.$this._completeErrorObject$1(new A.AsyncError(this.e, this.s));
    },
    $signature: 0
  };
  A._Future__chainCoreFuture_closure.prototype = {
    call$0() {
      A._Future__chainCoreFuture(this._box_0.source, this.target, true);
    },
    $signature: 0
  };
  A._Future__asyncCompleteWithValue_closure.prototype = {
    call$0() {
      this.$this._completeWithValue$1(this.value);
    },
    $signature: 0
  };
  A._Future__asyncCompleteErrorObject_closure.prototype = {
    call$0() {
      this.$this._completeErrorObject$1(this.error);
    },
    $signature: 0
  };
  A._Future__propagateToListeners_handleWhenCompleteCallback.prototype = {
    call$0() {
      var e, s, t1, exception, t2, t3, originalSource, joinedResult, _this = this, completeResult = null;
      try {
        t1 = _this._box_0.listener;
        completeResult = t1.result._zone.run$1(t1.callback);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        if (_this.hasError && _this._box_1.source._resultOrListeners.error === e) {
          t1 = _this._box_0;
          t1.listenerValueOrError = _this._box_1.source._resultOrListeners;
        } else {
          t1 = e;
          t2 = s;
          if (t2 == null)
            t2 = A.AsyncError_defaultStackTrace(t1);
          t3 = _this._box_0;
          t3.listenerValueOrError = new A.AsyncError(t1, t2);
          t1 = t3;
        }
        t1.listenerHasError = true;
        return;
      }
      if (completeResult instanceof A._Future && (completeResult._state & 24) !== 0) {
        if ((completeResult._state & 16) !== 0) {
          t1 = _this._box_0;
          t1.listenerValueOrError = completeResult._resultOrListeners;
          t1.listenerHasError = true;
        }
        return;
      }
      if (type$.Future_dynamic._is(completeResult)) {
        originalSource = _this._box_1.source;
        joinedResult = new A._Future(originalSource._zone, originalSource.$ti);
        completeResult.then$1$2$onError(new A._Future__propagateToListeners_handleWhenCompleteCallback_closure(joinedResult, originalSource), new A._Future__propagateToListeners_handleWhenCompleteCallback_closure0(joinedResult), type$.void);
        t1 = _this._box_0;
        t1.listenerValueOrError = joinedResult;
        t1.listenerHasError = false;
      }
    },
    $signature: 0
  };
  A._Future__propagateToListeners_handleWhenCompleteCallback_closure.prototype = {
    call$1(__wc0_formal) {
      this.joinedResult._completeWithResultOf$1(this.originalSource);
    },
    $signature: 28
  };
  A._Future__propagateToListeners_handleWhenCompleteCallback_closure0.prototype = {
    call$2(e, s) {
      this.joinedResult._completeErrorObject$1(new A.AsyncError(e, s));
    },
    $signature: 70
  };
  A._Future__propagateToListeners_handleValueCallback.prototype = {
    call$0() {
      var e, s, t1, t2, exception, t3;
      try {
        t1 = this._box_0;
        t2 = t1.listener;
        t1.listenerValueOrError = t2.result._zone.runUnary$2(t2.callback, this.sourceResult);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        t1 = e;
        t2 = s;
        if (t2 == null)
          t2 = A.AsyncError_defaultStackTrace(t1);
        t3 = this._box_0;
        t3.listenerValueOrError = new A.AsyncError(t1, t2);
        t3.listenerHasError = true;
      }
    },
    $signature: 0
  };
  A._Future__propagateToListeners_handleError.prototype = {
    call$0() {
      var asyncError, e, s, t1, exception, t2, t3, _this = this;
      try {
        asyncError = _this._box_1.source._resultOrListeners;
        t1 = _this._box_0;
        if (t1.listener.matchesErrorTest$1(asyncError) && t1.listener.errorCallback != null) {
          t1.listenerValueOrError = t1.listener.handleError$1(asyncError);
          t1.listenerHasError = false;
        }
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        t1 = _this._box_1.source._resultOrListeners;
        if (t1.error === e) {
          t2 = _this._box_0;
          t2.listenerValueOrError = t1;
          t1 = t2;
        } else {
          t1 = e;
          t2 = s;
          if (t2 == null)
            t2 = A.AsyncError_defaultStackTrace(t1);
          t3 = _this._box_0;
          t3.listenerValueOrError = new A.AsyncError(t1, t2);
          t1 = t3;
        }
        t1.listenerHasError = true;
      }
    },
    $signature: 0
  };
  A._AsyncCallbackEntry.prototype = {};
  A.Stream.prototype = {
    get$length(_) {
      var t1 = {},
        future = new A._Future($.Zone__current, type$._Future_int);
      t1.count = 0;
      this._async$_controller._subscribe$4(new A.Stream_length_closure(t1, this), future.get$_completeError(), new A.Stream_length_closure0(t1, future), true);
      return future;
    }
  };
  A.Stream_length_closure.prototype = {
    call$1(__wc0_formal) {
      ++this._box_0.count;
    },
    $signature() {
      return this.$this.$ti._eval$1("~(1)");
    }
  };
  A.Stream_length_closure0.prototype = {
    call$0() {
      this.future._async$_complete$1(this._box_0.count);
    },
    $signature: 0
  };
  A._StreamController.prototype = {
    get$_pendingEvents() {
      if ((this._state & 8) === 0)
        return this._varData;
      return this._varData.get$_varData();
    },
    _ensurePendingEvents$0() {
      var events, _this = this;
      if ((_this._state & 8) === 0) {
        events = _this._varData;
        return events == null ? _this._varData = new A._PendingEvents() : events;
      }
      events = _this._varData.get$_varData();
      return events;
    },
    get$_subscription() {
      var varData = this._varData;
      return (this._state & 8) !== 0 ? varData.get$_varData() : varData;
    },
    _badEventState$0() {
      if ((this._state & 4) !== 0)
        return new A.StateError("Cannot add event after closing");
      return new A.StateError("Cannot add event while adding a stream");
    },
    _ensureDoneFuture$0() {
      var t1 = this._doneFuture;
      if (t1 == null)
        t1 = this._doneFuture = (this._state & 2) !== 0 ? $.$get$Future__nullFuture() : new A._Future($.Zone__current, type$._Future_void);
      return t1;
    },
    add$1(_, value) {
      var _this = this,
        t1 = _this._state;
      if (t1 >= 4)
        throw A.wrapException(_this._badEventState$0());
      if ((t1 & 1) !== 0)
        _this._sendData$1(value);
      else if ((t1 & 3) === 0)
        _this._ensurePendingEvents$0().add$1(0, new A._DelayedData(value));
    },
    close$0() {
      var _this = this,
        t1 = _this._state;
      if ((t1 & 4) !== 0)
        return _this._ensureDoneFuture$0();
      if (t1 >= 4)
        throw A.wrapException(_this._badEventState$0());
      t1 = _this._state = t1 | 4;
      if ((t1 & 1) !== 0)
        _this._sendDone$0();
      else if ((t1 & 3) === 0)
        _this._ensurePendingEvents$0().add$1(0, B.C__DelayedDone);
      return _this._ensureDoneFuture$0();
    },
    _subscribe$4(onData, onError, onDone, cancelOnError) {
      var t1, t2, subscription, pendingEvents, addState, _this = this;
      if ((_this._state & 3) !== 0)
        throw A.wrapException(A.StateError$("Stream has already been listened to."));
      t1 = $.Zone__current;
      t2 = cancelOnError ? 1 : 0;
      A._BufferingStreamSubscription__registerErrorHandler(t1, onError);
      subscription = new A._ControllerSubscription(_this, onData, onDone, t1, t2 | 32);
      pendingEvents = _this.get$_pendingEvents();
      if (((_this._state |= 1) & 8) !== 0) {
        addState = _this._varData;
        addState.set$_varData(subscription);
        addState.resume$0();
      } else
        _this._varData = subscription;
      subscription._setPendingEvents$1(pendingEvents);
      t1 = subscription._state;
      subscription._state = t1 | 64;
      new A._StreamController__subscribe_closure(_this).call$0();
      subscription._state &= 4294967231;
      subscription._checkState$1((t1 & 4) !== 0);
      return subscription;
    },
    _recordCancel$1(subscription) {
      var onCancel, cancelResult, e, s, exception, result0, t1, _this = this, result = null;
      if ((_this._state & 8) !== 0)
        result = _this._varData.cancel$0();
      _this._varData = null;
      _this._state = _this._state & 4294967286 | 2;
      onCancel = _this.onCancel;
      if (onCancel != null)
        if (result == null)
          try {
            cancelResult = onCancel.call$0();
            if (type$.Future_void._is(cancelResult))
              result = cancelResult;
          } catch (exception) {
            e = A.unwrapException(exception);
            s = A.getTraceFromException(exception);
            result0 = new A._Future($.Zone__current, type$._Future_void);
            result0._asyncCompleteErrorObject$1(new A.AsyncError(e, s));
            result = result0;
          }
        else
          result = result.whenComplete$1(onCancel);
      t1 = new A._StreamController__recordCancel_complete(_this);
      if (result != null)
        result = result.whenComplete$1(t1);
      else
        t1.call$0();
      return result;
    }
  };
  A._StreamController__subscribe_closure.prototype = {
    call$0() {
      A._runGuarded(this.$this.onListen);
    },
    $signature: 0
  };
  A._StreamController__recordCancel_complete.prototype = {
    call$0() {
      var doneFuture = this.$this._doneFuture;
      if (doneFuture != null && (doneFuture._state & 30) === 0)
        doneFuture._asyncComplete$1(null);
    },
    $signature: 0
  };
  A._AsyncStreamControllerDispatch.prototype = {
    _sendData$1(data) {
      this.get$_subscription()._addPending$1(new A._DelayedData(data));
    },
    _sendDone$0() {
      this.get$_subscription()._addPending$1(B.C__DelayedDone);
    }
  };
  A._AsyncStreamController.prototype = {};
  A._ControllerStream.prototype = {
    get$hashCode(_) {
      return (A.Primitives_objectHashCode(this._async$_controller) ^ 892482866) >>> 0;
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      return other instanceof A._ControllerStream && other._async$_controller === this._async$_controller;
    }
  };
  A._ControllerSubscription.prototype = {
    _onCancel$0() {
      return this._async$_controller._recordCancel$1(this);
    },
    _onPause$0() {
      var t1 = this._async$_controller;
      if ((t1._state & 8) !== 0)
        t1._varData.pause$0();
      A._runGuarded(t1.onPause);
    },
    _onResume$0() {
      var t1 = this._async$_controller;
      if ((t1._state & 8) !== 0)
        t1._varData.resume$0();
      A._runGuarded(t1.onResume);
    }
  };
  A._BufferingStreamSubscription.prototype = {
    _setPendingEvents$1(pendingEvents) {
      if (pendingEvents == null)
        return;
      this._pending = pendingEvents;
      if (pendingEvents.lastPendingEvent != null) {
        this._state |= 128;
        pendingEvents.schedule$1(this);
      }
    },
    _onPause$0() {
    },
    _onResume$0() {
    },
    _onCancel$0() {
      return null;
    },
    _addPending$1($event) {
      var t1, _this = this,
        pending = _this._pending;
      if (pending == null)
        pending = _this._pending = new A._PendingEvents();
      pending.add$1(0, $event);
      t1 = _this._state;
      if ((t1 & 128) === 0) {
        t1 |= 128;
        _this._state = t1;
        if (t1 < 256)
          pending.schedule$1(_this);
      }
    },
    _sendData$1(data) {
      var _this = this,
        t1 = _this._state;
      _this._state = t1 | 64;
      _this._zone.runUnaryGuarded$2(_this._onData, data);
      _this._state &= 4294967231;
      _this._checkState$1((t1 & 4) !== 0);
    },
    _sendDone$0() {
      var t3, _this = this,
        t1 = new A._BufferingStreamSubscription__sendDone_sendDone(_this),
        t2 = _this._state |= 8;
      if ((t2 & 128) !== 0) {
        t3 = _this._pending;
        if (t3._state === 1)
          t3._state = 3;
      }
      if ((t2 & 64) === 0)
        _this._pending = null;
      t2 = _this._cancelFuture = _this._onCancel$0();
      _this._state |= 16;
      if (t2 != null && t2 !== $.$get$Future__nullFuture())
        t2.whenComplete$1(t1);
      else
        t1.call$0();
    },
    _checkState$1(wasInputPaused) {
      var t2, isInputPaused, _this = this,
        t1 = _this._state;
      if ((t1 & 128) !== 0 && _this._pending.lastPendingEvent == null) {
        t1 = _this._state = t1 & 4294967167;
        t2 = false;
        if ((t1 & 4) !== 0)
          if (t1 < 256) {
            t2 = _this._pending;
            t2 = t2 == null ? null : t2.lastPendingEvent == null;
            t2 = t2 !== false;
          }
        if (t2) {
          t1 &= 4294967291;
          _this._state = t1;
        }
      }
      for (; true; wasInputPaused = isInputPaused) {
        if ((t1 & 8) !== 0) {
          _this._pending = null;
          return;
        }
        isInputPaused = (t1 & 4) !== 0;
        if (wasInputPaused === isInputPaused)
          break;
        _this._state = t1 ^ 64;
        if (isInputPaused)
          _this._onPause$0();
        else
          _this._onResume$0();
        t1 = _this._state &= 4294967231;
      }
      if ((t1 & 128) !== 0 && t1 < 256)
        _this._pending.schedule$1(_this);
    }
  };
  A._BufferingStreamSubscription__sendDone_sendDone.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = t1._state;
      if ((t2 & 16) === 0)
        return;
      t1._state = t2 | 74;
      t1._zone.runGuarded$1(t1._onDone);
      t1._state &= 4294967231;
    },
    $signature: 0
  };
  A._StreamImpl.prototype = {};
  A._DelayedEvent.prototype = {
    get$next() {
      return this.next;
    },
    set$next(val) {
      return this.next = val;
    }
  };
  A._DelayedData.prototype = {
    perform$1(dispatch) {
      dispatch._sendData$1(this.value);
    }
  };
  A._DelayedDone.prototype = {
    perform$1(dispatch) {
      dispatch._sendDone$0();
    },
    get$next() {
      return null;
    },
    set$next(__wc0_formal) {
      throw A.wrapException(A.StateError$("No events after a done."));
    }
  };
  A._PendingEvents.prototype = {
    schedule$1(dispatch) {
      var _this = this,
        t1 = _this._state;
      if (t1 === 1)
        return;
      if (t1 >= 1) {
        _this._state = 1;
        return;
      }
      A.scheduleMicrotask(new A._PendingEvents_schedule_closure(_this, dispatch));
      _this._state = 1;
    },
    add$1(_, $event) {
      var _this = this,
        lastEvent = _this.lastPendingEvent;
      if (lastEvent == null)
        _this.firstPendingEvent = _this.lastPendingEvent = $event;
      else {
        lastEvent.set$next($event);
        _this.lastPendingEvent = $event;
      }
    }
  };
  A._PendingEvents_schedule_closure.prototype = {
    call$0() {
      var $event, nextEvent,
        t1 = this.$this,
        oldState = t1._state;
      t1._state = 0;
      if (oldState === 3)
        return;
      $event = t1.firstPendingEvent;
      nextEvent = $event.get$next();
      t1.firstPendingEvent = nextEvent;
      if (nextEvent == null)
        t1.lastPendingEvent = null;
      $event.perform$1(this.dispatch);
    },
    $signature: 0
  };
  A._StreamIterator.prototype = {};
  A._Zone.prototype = {};
  A._rootHandleError_closure.prototype = {
    call$0() {
      A.Error_throwWithStackTrace(this.error, this.stackTrace);
    },
    $signature: 0
  };
  A._RootZone.prototype = {
    runGuarded$1(f) {
      var e, s, exception;
      try {
        if (B.C__RootZone === $.Zone__current) {
          f.call$0();
          return;
        }
        A._rootRun(null, null, this, f);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        A._rootHandleError(e, s);
      }
    },
    runUnaryGuarded$1$2(f, arg) {
      var e, s, exception;
      try {
        if (B.C__RootZone === $.Zone__current) {
          f.call$1(arg);
          return;
        }
        A._rootRunUnary(null, null, this, f, arg);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        A._rootHandleError(e, s);
      }
    },
    runUnaryGuarded$2(f, arg) {
      return this.runUnaryGuarded$1$2(f, arg, type$.dynamic);
    },
    bindCallbackGuarded$1(f) {
      return new A._RootZone_bindCallbackGuarded_closure(this, f);
    },
    run$1$1(f) {
      if ($.Zone__current === B.C__RootZone)
        return f.call$0();
      return A._rootRun(null, null, this, f);
    },
    run$1(f) {
      return this.run$1$1(f, type$.dynamic);
    },
    runUnary$2$2(f, arg) {
      if ($.Zone__current === B.C__RootZone)
        return f.call$1(arg);
      return A._rootRunUnary(null, null, this, f, arg);
    },
    runUnary$2(f, arg) {
      var t1 = type$.dynamic;
      return this.runUnary$2$2(f, arg, t1, t1);
    },
    runBinary$3$3(f, arg1, arg2) {
      if ($.Zone__current === B.C__RootZone)
        return f.call$2(arg1, arg2);
      return A._rootRunBinary(null, null, this, f, arg1, arg2);
    },
    runBinary$3(f, arg1, arg2) {
      var t1 = type$.dynamic;
      return this.runBinary$3$3(f, arg1, arg2, t1, t1, t1);
    },
    registerBinaryCallback$3$1(f) {
      return f;
    },
    registerBinaryCallback$1(f) {
      var t1 = type$.dynamic;
      return this.registerBinaryCallback$3$1(f, t1, t1, t1);
    }
  };
  A._RootZone_bindCallbackGuarded_closure.prototype = {
    call$0() {
      return this.$this.runGuarded$1(this.f);
    },
    $signature: 0
  };
  A._HashMap.prototype = {
    get$length(_) {
      return this._collection$_length;
    },
    get$isEmpty(_) {
      return this._collection$_length === 0;
    },
    get$isNotEmpty(_) {
      return this._collection$_length !== 0;
    },
    get$keys() {
      return new A._HashMapKeyIterable(this, A._instanceType(this)._eval$1("_HashMapKeyIterable<1>"));
    },
    get$values() {
      var t1 = A._instanceType(this);
      return A.MappedIterable_MappedIterable(new A._HashMapKeyIterable(this, t1._eval$1("_HashMapKeyIterable<1>")), new A._HashMap_values_closure(this), t1._precomputed1, t1._rest[1]);
    },
    containsKey$1(key) {
      var strings, nums;
      if (typeof key == "string" && key !== "__proto__") {
        strings = this._collection$_strings;
        return strings == null ? false : strings[key] != null;
      } else if (typeof key == "number" && (key & 1073741823) === key) {
        nums = this._collection$_nums;
        return nums == null ? false : nums[key] != null;
      } else
        return this._containsKey$1(key);
    },
    _containsKey$1(key) {
      var rest = this._collection$_rest;
      if (rest == null)
        return false;
      return this._findBucketIndex$2(this._getBucket$2(rest, key), key) >= 0;
    },
    $index(_, key) {
      var strings, t1, nums;
      if (typeof key == "string" && key !== "__proto__") {
        strings = this._collection$_strings;
        t1 = strings == null ? null : A._HashMap__getTableEntry(strings, key);
        return t1;
      } else if (typeof key == "number" && (key & 1073741823) === key) {
        nums = this._collection$_nums;
        t1 = nums == null ? null : A._HashMap__getTableEntry(nums, key);
        return t1;
      } else
        return this._get$1(key);
    },
    _get$1(key) {
      var bucket, index,
        rest = this._collection$_rest;
      if (rest == null)
        return null;
      bucket = this._getBucket$2(rest, key);
      index = this._findBucketIndex$2(bucket, key);
      return index < 0 ? null : bucket[index + 1];
    },
    $indexSet(_, key, value) {
      var strings, nums, _this = this;
      if (typeof key == "string" && key !== "__proto__") {
        strings = _this._collection$_strings;
        _this._collection$_addHashTableEntry$3(strings == null ? _this._collection$_strings = A._HashMap__newHashTable() : strings, key, value);
      } else if (typeof key == "number" && (key & 1073741823) === key) {
        nums = _this._collection$_nums;
        _this._collection$_addHashTableEntry$3(nums == null ? _this._collection$_nums = A._HashMap__newHashTable() : nums, key, value);
      } else
        _this._set$2(key, value);
    },
    _set$2(key, value) {
      var hash, bucket, index, _this = this,
        rest = _this._collection$_rest;
      if (rest == null)
        rest = _this._collection$_rest = A._HashMap__newHashTable();
      hash = _this._computeHashCode$1(key);
      bucket = rest[hash];
      if (bucket == null) {
        A._HashMap__setTableEntry(rest, hash, [key, value]);
        ++_this._collection$_length;
        _this._keys = null;
      } else {
        index = _this._findBucketIndex$2(bucket, key);
        if (index >= 0)
          bucket[index + 1] = value;
        else {
          bucket.push(key, value);
          ++_this._collection$_length;
          _this._keys = null;
        }
      }
    },
    putIfAbsent$2(key, ifAbsent) {
      var t1, value, _this = this;
      if (_this.containsKey$1(key)) {
        t1 = _this.$index(0, key);
        return t1 == null ? A._instanceType(_this)._rest[1]._as(t1) : t1;
      }
      value = ifAbsent.call$0();
      _this.$indexSet(0, key, value);
      return value;
    },
    remove$1(_, key) {
      var _this = this;
      if (typeof key == "string" && key !== "__proto__")
        return _this._collection$_removeHashTableEntry$2(_this._collection$_strings, key);
      else if (typeof key == "number" && (key & 1073741823) === key)
        return _this._collection$_removeHashTableEntry$2(_this._collection$_nums, key);
      else
        return _this._remove$1(key);
    },
    _remove$1(key) {
      var hash, bucket, index, result, _this = this,
        rest = _this._collection$_rest;
      if (rest == null)
        return null;
      hash = _this._computeHashCode$1(key);
      bucket = rest[hash];
      index = _this._findBucketIndex$2(bucket, key);
      if (index < 0)
        return null;
      --_this._collection$_length;
      _this._keys = null;
      result = bucket.splice(index, 2)[1];
      if (0 === bucket.length)
        delete rest[hash];
      return result;
    },
    clear$0(_) {
      var _this = this;
      if (_this._collection$_length > 0) {
        _this._collection$_strings = _this._collection$_nums = _this._collection$_rest = _this._keys = null;
        _this._collection$_length = 0;
      }
    },
    forEach$1(_, action) {
      var $length, t1, i, key, t2, _this = this,
        keys = _this._computeKeys$0();
      for ($length = keys.length, t1 = A._instanceType(_this)._rest[1], i = 0; i < $length; ++i) {
        key = keys[i];
        t2 = _this.$index(0, key);
        action.call$2(key, t2 == null ? t1._as(t2) : t2);
        if (keys !== _this._keys)
          throw A.wrapException(A.ConcurrentModificationError$(_this));
      }
    },
    _computeKeys$0() {
      var strings, index, names, entries, i, nums, rest, bucket, $length, i0, _this = this,
        result = _this._keys;
      if (result != null)
        return result;
      result = A.List_List$filled(_this._collection$_length, null, false, type$.dynamic);
      strings = _this._collection$_strings;
      index = 0;
      if (strings != null) {
        names = Object.getOwnPropertyNames(strings);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          result[index] = names[i];
          ++index;
        }
      }
      nums = _this._collection$_nums;
      if (nums != null) {
        names = Object.getOwnPropertyNames(nums);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          result[index] = +names[i];
          ++index;
        }
      }
      rest = _this._collection$_rest;
      if (rest != null) {
        names = Object.getOwnPropertyNames(rest);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          bucket = rest[names[i]];
          $length = bucket.length;
          for (i0 = 0; i0 < $length; i0 += 2) {
            result[index] = bucket[i0];
            ++index;
          }
        }
      }
      return _this._keys = result;
    },
    _collection$_addHashTableEntry$3(table, key, value) {
      if (table[key] == null) {
        ++this._collection$_length;
        this._keys = null;
      }
      A._HashMap__setTableEntry(table, key, value);
    },
    _collection$_removeHashTableEntry$2(table, key) {
      var value;
      if (table != null && table[key] != null) {
        value = A._HashMap__getTableEntry(table, key);
        delete table[key];
        --this._collection$_length;
        this._keys = null;
        return value;
      } else
        return null;
    },
    _computeHashCode$1(key) {
      return J.get$hashCode$(key) & 1073741823;
    },
    _getBucket$2(table, key) {
      return table[this._computeHashCode$1(key)];
    },
    _findBucketIndex$2(bucket, key) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; i += 2)
        if (J.$eq$(bucket[i], key))
          return i;
      return -1;
    }
  };
  A._HashMap_values_closure.prototype = {
    call$1(each) {
      var t1 = this.$this,
        t2 = t1.$index(0, each);
      return t2 == null ? A._instanceType(t1)._rest[1]._as(t2) : t2;
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("2(1)");
    }
  };
  A._HashMapKeyIterable.prototype = {
    get$length(_) {
      return this._collection$_map._collection$_length;
    },
    get$isEmpty(_) {
      return this._collection$_map._collection$_length === 0;
    },
    get$isNotEmpty(_) {
      return this._collection$_map._collection$_length !== 0;
    },
    get$iterator(_) {
      var t1 = this._collection$_map;
      return new A._HashMapKeyIterator(t1, t1._computeKeys$0(), this.$ti._eval$1("_HashMapKeyIterator<1>"));
    },
    contains$1(_, element) {
      return this._collection$_map.containsKey$1(element);
    }
  };
  A._HashMapKeyIterator.prototype = {
    get$current() {
      var t1 = this._current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var _this = this,
        keys = _this._keys,
        offset = _this._offset,
        t1 = _this._collection$_map;
      if (keys !== t1._keys)
        throw A.wrapException(A.ConcurrentModificationError$(t1));
      else if (offset >= keys.length) {
        _this._current = null;
        return false;
      } else {
        _this._current = keys[offset];
        _this._offset = offset + 1;
        return true;
      }
    }
  };
  A._HashSet.prototype = {
    _newSet$0() {
      return new A._HashSet(A._instanceType(this)._eval$1("_HashSet<1>"));
    },
    get$iterator(_) {
      return new A._HashSetIterator(this, this._computeElements$0(), A._instanceType(this)._eval$1("_HashSetIterator<1>"));
    },
    get$length(_) {
      return this._collection$_length;
    },
    get$isEmpty(_) {
      return this._collection$_length === 0;
    },
    get$isNotEmpty(_) {
      return this._collection$_length !== 0;
    },
    contains$1(_, object) {
      var strings, nums;
      if (typeof object == "string" && object !== "__proto__") {
        strings = this._collection$_strings;
        return strings == null ? false : strings[object] != null;
      } else if (typeof object == "number" && (object & 1073741823) === object) {
        nums = this._collection$_nums;
        return nums == null ? false : nums[object] != null;
      } else
        return this._contains$1(object);
    },
    _contains$1(object) {
      var rest = this._collection$_rest;
      if (rest == null)
        return false;
      return this._findBucketIndex$2(rest[this._computeHashCode$1(object)], object) >= 0;
    },
    add$1(_, element) {
      var strings, nums, _this = this;
      if (typeof element == "string" && element !== "__proto__") {
        strings = _this._collection$_strings;
        return _this._collection$_addHashTableEntry$2(strings == null ? _this._collection$_strings = A._HashSet__newHashTable() : strings, element);
      } else if (typeof element == "number" && (element & 1073741823) === element) {
        nums = _this._collection$_nums;
        return _this._collection$_addHashTableEntry$2(nums == null ? _this._collection$_nums = A._HashSet__newHashTable() : nums, element);
      } else
        return _this._add$1(element);
    },
    _add$1(element) {
      var hash, bucket, _this = this,
        rest = _this._collection$_rest;
      if (rest == null)
        rest = _this._collection$_rest = A._HashSet__newHashTable();
      hash = _this._computeHashCode$1(element);
      bucket = rest[hash];
      if (bucket == null)
        rest[hash] = [element];
      else {
        if (_this._findBucketIndex$2(bucket, element) >= 0)
          return false;
        bucket.push(element);
      }
      ++_this._collection$_length;
      _this._elements = null;
      return true;
    },
    addAll$1(_, objects) {
      var t1;
      for (t1 = J.get$iterator$ax(objects); t1.moveNext$0();)
        this.add$1(0, t1.get$current());
    },
    remove$1(_, object) {
      var _this = this;
      if (typeof object == "string" && object !== "__proto__")
        return _this._collection$_removeHashTableEntry$2(_this._collection$_strings, object);
      else if (typeof object == "number" && (object & 1073741823) === object)
        return _this._collection$_removeHashTableEntry$2(_this._collection$_nums, object);
      else
        return _this._remove$1(object);
    },
    _remove$1(object) {
      var hash, bucket, index, _this = this,
        rest = _this._collection$_rest;
      if (rest == null)
        return false;
      hash = _this._computeHashCode$1(object);
      bucket = rest[hash];
      index = _this._findBucketIndex$2(bucket, object);
      if (index < 0)
        return false;
      --_this._collection$_length;
      _this._elements = null;
      bucket.splice(index, 1);
      if (0 === bucket.length)
        delete rest[hash];
      return true;
    },
    clear$0(_) {
      var _this = this;
      if (_this._collection$_length > 0) {
        _this._collection$_strings = _this._collection$_nums = _this._collection$_rest = _this._elements = null;
        _this._collection$_length = 0;
      }
    },
    _computeElements$0() {
      var strings, index, names, entries, i, nums, rest, bucket, $length, i0, _this = this,
        result = _this._elements;
      if (result != null)
        return result;
      result = A.List_List$filled(_this._collection$_length, null, false, type$.dynamic);
      strings = _this._collection$_strings;
      index = 0;
      if (strings != null) {
        names = Object.getOwnPropertyNames(strings);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          result[index] = names[i];
          ++index;
        }
      }
      nums = _this._collection$_nums;
      if (nums != null) {
        names = Object.getOwnPropertyNames(nums);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          result[index] = +names[i];
          ++index;
        }
      }
      rest = _this._collection$_rest;
      if (rest != null) {
        names = Object.getOwnPropertyNames(rest);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          bucket = rest[names[i]];
          $length = bucket.length;
          for (i0 = 0; i0 < $length; ++i0) {
            result[index] = bucket[i0];
            ++index;
          }
        }
      }
      return _this._elements = result;
    },
    _collection$_addHashTableEntry$2(table, element) {
      if (table[element] != null)
        return false;
      table[element] = 0;
      ++this._collection$_length;
      this._elements = null;
      return true;
    },
    _collection$_removeHashTableEntry$2(table, element) {
      if (table != null && table[element] != null) {
        delete table[element];
        --this._collection$_length;
        this._elements = null;
        return true;
      } else
        return false;
    },
    _computeHashCode$1(element) {
      return J.get$hashCode$(element) & 1073741823;
    },
    _findBucketIndex$2(bucket, element) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i)
        if (J.$eq$(bucket[i], element))
          return i;
      return -1;
    }
  };
  A._HashSetIterator.prototype = {
    get$current() {
      var t1 = this._current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var _this = this,
        elements = _this._elements,
        offset = _this._offset,
        t1 = _this._set;
      if (elements !== t1._elements)
        throw A.wrapException(A.ConcurrentModificationError$(t1));
      else if (offset >= elements.length) {
        _this._current = null;
        return false;
      } else {
        _this._current = elements[offset];
        _this._offset = offset + 1;
        return true;
      }
    }
  };
  A._LinkedHashSet.prototype = {
    _newSet$0() {
      return new A._LinkedHashSet(A._instanceType(this)._eval$1("_LinkedHashSet<1>"));
    },
    _newSimilarSet$1$0($R) {
      return new A._LinkedHashSet($R._eval$1("_LinkedHashSet<0>"));
    },
    _newSimilarSet$0() {
      return this._newSimilarSet$1$0(type$.dynamic);
    },
    get$iterator(_) {
      var _this = this,
        t1 = new A._LinkedHashSetIterator(_this, _this._collection$_modifications, A._instanceType(_this)._eval$1("_LinkedHashSetIterator<1>"));
      t1._collection$_cell = _this._collection$_first;
      return t1;
    },
    get$length(_) {
      return this._collection$_length;
    },
    get$isEmpty(_) {
      return this._collection$_length === 0;
    },
    get$isNotEmpty(_) {
      return this._collection$_length !== 0;
    },
    contains$1(_, object) {
      var strings, nums;
      if (typeof object == "string" && object !== "__proto__") {
        strings = this._collection$_strings;
        if (strings == null)
          return false;
        return strings[object] != null;
      } else if (typeof object == "number" && (object & 1073741823) === object) {
        nums = this._collection$_nums;
        if (nums == null)
          return false;
        return nums[object] != null;
      } else
        return this._contains$1(object);
    },
    _contains$1(object) {
      var rest = this._collection$_rest;
      if (rest == null)
        return false;
      return this._findBucketIndex$2(rest[this._computeHashCode$1(object)], object) >= 0;
    },
    forEach$1(_, action) {
      var _this = this,
        cell = _this._collection$_first,
        modifications = _this._collection$_modifications;
      for (; cell != null;) {
        action.call$1(cell._collection$_element);
        if (modifications !== _this._collection$_modifications)
          throw A.wrapException(A.ConcurrentModificationError$(_this));
        cell = cell._collection$_next;
      }
    },
    get$first(_) {
      var first = this._collection$_first;
      if (first == null)
        throw A.wrapException(A.StateError$("No elements"));
      return first._collection$_element;
    },
    get$last(_) {
      var last = this._collection$_last;
      if (last == null)
        throw A.wrapException(A.StateError$("No elements"));
      return last._collection$_element;
    },
    add$1(_, element) {
      var strings, nums, _this = this;
      if (typeof element == "string" && element !== "__proto__") {
        strings = _this._collection$_strings;
        return _this._collection$_addHashTableEntry$2(strings == null ? _this._collection$_strings = A._LinkedHashSet__newHashTable() : strings, element);
      } else if (typeof element == "number" && (element & 1073741823) === element) {
        nums = _this._collection$_nums;
        return _this._collection$_addHashTableEntry$2(nums == null ? _this._collection$_nums = A._LinkedHashSet__newHashTable() : nums, element);
      } else
        return _this._add$1(element);
    },
    _add$1(element) {
      var hash, bucket, _this = this,
        rest = _this._collection$_rest;
      if (rest == null)
        rest = _this._collection$_rest = A._LinkedHashSet__newHashTable();
      hash = _this._computeHashCode$1(element);
      bucket = rest[hash];
      if (bucket == null)
        rest[hash] = [_this._collection$_newLinkedCell$1(element)];
      else {
        if (_this._findBucketIndex$2(bucket, element) >= 0)
          return false;
        bucket.push(_this._collection$_newLinkedCell$1(element));
      }
      return true;
    },
    remove$1(_, object) {
      var _this = this;
      if (typeof object == "string" && object !== "__proto__")
        return _this._collection$_removeHashTableEntry$2(_this._collection$_strings, object);
      else if (typeof object == "number" && (object & 1073741823) === object)
        return _this._collection$_removeHashTableEntry$2(_this._collection$_nums, object);
      else
        return _this._remove$1(object);
    },
    _remove$1(object) {
      var hash, bucket, index, cell, _this = this,
        rest = _this._collection$_rest;
      if (rest == null)
        return false;
      hash = _this._computeHashCode$1(object);
      bucket = rest[hash];
      index = _this._findBucketIndex$2(bucket, object);
      if (index < 0)
        return false;
      cell = bucket.splice(index, 1)[0];
      if (0 === bucket.length)
        delete rest[hash];
      _this._collection$_unlinkCell$1(cell);
      return true;
    },
    clear$0(_) {
      var _this = this;
      if (_this._collection$_length > 0) {
        _this._collection$_strings = _this._collection$_nums = _this._collection$_rest = _this._collection$_first = _this._collection$_last = null;
        _this._collection$_length = 0;
        _this._collection$_modified$0();
      }
    },
    _collection$_addHashTableEntry$2(table, element) {
      if (table[element] != null)
        return false;
      table[element] = this._collection$_newLinkedCell$1(element);
      return true;
    },
    _collection$_removeHashTableEntry$2(table, element) {
      var cell;
      if (table == null)
        return false;
      cell = table[element];
      if (cell == null)
        return false;
      this._collection$_unlinkCell$1(cell);
      delete table[element];
      return true;
    },
    _collection$_modified$0() {
      this._collection$_modifications = this._collection$_modifications + 1 & 1073741823;
    },
    _collection$_newLinkedCell$1(element) {
      var t1, _this = this,
        cell = new A._LinkedHashSetCell(element);
      if (_this._collection$_first == null)
        _this._collection$_first = _this._collection$_last = cell;
      else {
        t1 = _this._collection$_last;
        t1.toString;
        cell._collection$_previous = t1;
        _this._collection$_last = t1._collection$_next = cell;
      }
      ++_this._collection$_length;
      _this._collection$_modified$0();
      return cell;
    },
    _collection$_unlinkCell$1(cell) {
      var _this = this,
        previous = cell._collection$_previous,
        next = cell._collection$_next;
      if (previous == null)
        _this._collection$_first = next;
      else
        previous._collection$_next = next;
      if (next == null)
        _this._collection$_last = previous;
      else
        next._collection$_previous = previous;
      --_this._collection$_length;
      _this._collection$_modified$0();
    },
    _computeHashCode$1(element) {
      return J.get$hashCode$(element) & 1073741823;
    },
    _findBucketIndex$2(bucket, element) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i)
        if (J.$eq$(bucket[i]._collection$_element, element))
          return i;
      return -1;
    },
    $isLinkedHashSet: 1
  };
  A._LinkedHashSetCell.prototype = {};
  A._LinkedHashSetIterator.prototype = {
    get$current() {
      var t1 = this._current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var _this = this,
        cell = _this._collection$_cell,
        t1 = _this._set;
      if (_this._collection$_modifications !== t1._collection$_modifications)
        throw A.wrapException(A.ConcurrentModificationError$(t1));
      else if (cell == null) {
        _this._current = null;
        return false;
      } else {
        _this._current = cell._collection$_element;
        _this._collection$_cell = cell._collection$_next;
        return true;
      }
    }
  };
  A.LinkedHashMap_LinkedHashMap$from_closure.prototype = {
    call$2(k, v) {
      this.result.$indexSet(0, this.K._as(k), this.V._as(v));
    },
    $signature: 117
  };
  A.LinkedList.prototype = {
    contains$1(_, entry) {
      return entry instanceof A._ListenerEntry && this === entry._list;
    },
    get$iterator(_) {
      var _this = this;
      return new A._LinkedListIterator(_this, _this._modificationCount, _this._collection$_first, _this.$ti._eval$1("_LinkedListIterator<1>"));
    },
    get$length(_) {
      return this._collection$_length;
    },
    get$first(_) {
      var t1;
      if (this._collection$_length === 0)
        throw A.wrapException(A.StateError$("No such element"));
      t1 = this._collection$_first;
      t1.toString;
      return t1;
    },
    get$last(_) {
      var t1;
      if (this._collection$_length === 0)
        throw A.wrapException(A.StateError$("No such element"));
      t1 = this._collection$_first._collection$_previous;
      t1.toString;
      return t1;
    },
    get$isEmpty(_) {
      return this._collection$_length === 0;
    },
    _insertBefore$3$updateFirst(entry, newEntry, updateFirst) {
      var t1, t2, _this = this;
      if (newEntry._list != null)
        throw A.wrapException(A.StateError$("LinkedListEntry is already in a LinkedList"));
      ++_this._modificationCount;
      newEntry._list = _this;
      t1 = _this._collection$_length;
      if (t1 === 0) {
        newEntry._collection$_next = newEntry;
        _this._collection$_first = newEntry._collection$_previous = newEntry;
        _this._collection$_length = t1 + 1;
        return;
      }
      t2 = entry._collection$_previous;
      t2.toString;
      newEntry._collection$_previous = t2;
      newEntry._collection$_next = entry;
      entry._collection$_previous = t2._collection$_next = newEntry;
      _this._collection$_length = t1 + 1;
    }
  };
  A._LinkedListIterator.prototype = {
    get$current() {
      var t1 = this._current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var _this = this,
        t1 = _this._list;
      if (_this._modificationCount !== t1._modificationCount)
        throw A.wrapException(A.ConcurrentModificationError$(_this));
      if (t1._collection$_length !== 0)
        t1 = _this._visitedFirst && _this._collection$_next === t1.get$first(0);
      else
        t1 = true;
      if (t1) {
        _this._current = null;
        return false;
      }
      _this._visitedFirst = true;
      t1 = _this._collection$_next;
      _this._current = t1;
      _this._collection$_next = t1._collection$_next;
      return true;
    }
  };
  A.LinkedListEntry.prototype = {};
  A.ListBase.prototype = {
    get$iterator(receiver) {
      return new A.ListIterator(receiver, this.get$length(receiver), A.instanceType(receiver)._eval$1("ListIterator<ListBase.E>"));
    },
    elementAt$1(receiver, index) {
      return this.$index(receiver, index);
    },
    forEach$1(receiver, action) {
      var i,
        $length = this.get$length(receiver);
      for (i = 0; i < $length; ++i) {
        action.call$1(this.$index(receiver, i));
        if ($length !== this.get$length(receiver))
          throw A.wrapException(A.ConcurrentModificationError$(receiver));
      }
    },
    get$isEmpty(receiver) {
      return this.get$length(receiver) === 0;
    },
    get$isNotEmpty(receiver) {
      return !this.get$isEmpty(receiver);
    },
    get$first(receiver) {
      if (this.get$length(receiver) === 0)
        throw A.wrapException(A.IterableElementError_noElement());
      return this.$index(receiver, 0);
    },
    get$last(receiver) {
      if (this.get$length(receiver) === 0)
        throw A.wrapException(A.IterableElementError_noElement());
      return this.$index(receiver, this.get$length(receiver) - 1);
    },
    contains$1(receiver, element) {
      var i,
        $length = this.get$length(receiver);
      for (i = 0; i < $length; ++i) {
        if (J.$eq$(this.$index(receiver, i), element))
          return true;
        if ($length !== this.get$length(receiver))
          throw A.wrapException(A.ConcurrentModificationError$(receiver));
      }
      return false;
    },
    firstWhere$2$orElse(receiver, test, orElse) {
      var i, element, t1,
        $length = this.get$length(receiver);
      for (i = 0; i < $length; ++i) {
        element = this.$index(receiver, i);
        if (test.call$1(element))
          return element;
        if ($length !== this.get$length(receiver))
          throw A.wrapException(A.ConcurrentModificationError$(receiver));
      }
      t1 = orElse.call$0();
      return t1;
    },
    lastWhere$2$orElse(receiver, test, orElse) {
      var i, element,
        $length = this.get$length(receiver);
      for (i = $length - 1; i >= 0; --i) {
        element = this.$index(receiver, i);
        if (test.call$1(element))
          return element;
        if ($length !== this.get$length(receiver))
          throw A.wrapException(A.ConcurrentModificationError$(receiver));
      }
      if (orElse != null)
        return orElse.call$0();
      throw A.wrapException(A.IterableElementError_noElement());
    },
    join$1(receiver, separator) {
      var t1;
      if (this.get$length(receiver) === 0)
        return "";
      t1 = A.StringBuffer__writeAll("", receiver, separator);
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    join$0(receiver) {
      return this.join$1(receiver, "");
    },
    where$1(receiver, test) {
      return new A.WhereIterable(receiver, test, A.instanceType(receiver)._eval$1("WhereIterable<ListBase.E>"));
    },
    map$1$1(receiver, f, $T) {
      return new A.MappedListIterable(receiver, f, A.instanceType(receiver)._eval$1("@<ListBase.E>")._bind$1($T)._eval$1("MappedListIterable<1,2>"));
    },
    skip$1(receiver, count) {
      return A.SubListIterable$(receiver, count, null, A.instanceType(receiver)._eval$1("ListBase.E"));
    },
    toList$1$growable(receiver, growable) {
      var t1, first, result, i, _this = this;
      if (_this.get$isEmpty(receiver)) {
        t1 = J.JSArray_JSArray$growable(0, A.instanceType(receiver)._eval$1("ListBase.E"));
        return t1;
      }
      first = _this.$index(receiver, 0);
      result = A.List_List$filled(_this.get$length(receiver), first, true, A.instanceType(receiver)._eval$1("ListBase.E"));
      for (i = 1; i < _this.get$length(receiver); ++i)
        result[i] = _this.$index(receiver, i);
      return result;
    },
    toList$0(receiver) {
      return this.toList$1$growable(receiver, true);
    },
    toSet$0(receiver) {
      var i,
        result = A.LinkedHashSet_LinkedHashSet(A.instanceType(receiver)._eval$1("ListBase.E"));
      for (i = 0; i < this.get$length(receiver); ++i)
        result.add$1(0, this.$index(receiver, i));
      return result;
    },
    add$1(receiver, element) {
      var t1 = this.get$length(receiver);
      this.set$length(receiver, t1 + 1);
      this.$indexSet(receiver, t1, element);
    },
    remove$1(receiver, element) {
      var i;
      for (i = 0; i < this.get$length(receiver); ++i)
        if (J.$eq$(this.$index(receiver, i), element)) {
          this._closeGap$2(receiver, i, i + 1);
          return true;
        }
      return false;
    },
    _closeGap$2(receiver, start, end) {
      var i, _this = this,
        $length = _this.get$length(receiver),
        size = end - start;
      for (i = end; i < $length; ++i)
        _this.$indexSet(receiver, i - size, _this.$index(receiver, i));
      _this.set$length(receiver, $length - size);
    },
    cast$1$0(receiver, $R) {
      return new A.CastList(receiver, A.instanceType(receiver)._eval$1("@<ListBase.E>")._bind$1($R)._eval$1("CastList<1,2>"));
    },
    removeLast$0(receiver) {
      var result, _this = this;
      if (_this.get$length(receiver) === 0)
        throw A.wrapException(A.IterableElementError_noElement());
      result = _this.$index(receiver, _this.get$length(receiver) - 1);
      _this.set$length(receiver, _this.get$length(receiver) - 1);
      return result;
    },
    $add(receiver, other) {
      var t1 = A.List_List$_of(receiver, A.instanceType(receiver)._eval$1("ListBase.E"));
      B.JSArray_methods.addAll$1(t1, other);
      return t1;
    },
    sublist$2(receiver, start, end) {
      var t1,
        listLength = this.get$length(receiver);
      A.RangeError_checkValidRange(start, listLength, listLength, null, null);
      t1 = A.List_List$_of(this.getRange$2(receiver, start, listLength), A.instanceType(receiver)._eval$1("ListBase.E"));
      return t1;
    },
    sublist$1(receiver, start) {
      return this.sublist$2(receiver, start, null);
    },
    getRange$2(receiver, start, end) {
      A.RangeError_checkValidRange(start, end, this.get$length(receiver), null, null);
      return A.SubListIterable$(receiver, start, end, A.instanceType(receiver)._eval$1("ListBase.E"));
    },
    setRange$4(receiver, start, end, iterable, skipCount) {
      var $length, otherStart, otherList, t1, i;
      A.RangeError_checkValidRange(start, end, this.get$length(receiver), null, null);
      $length = end - start;
      if ($length === 0)
        return;
      A.RangeError_checkNotNegative(skipCount, "skipCount");
      if (type$.List_dynamic._is(iterable)) {
        otherStart = skipCount;
        otherList = iterable;
      } else {
        otherList = J.skip$1$ax(iterable, skipCount).toList$1$growable(0, false);
        otherStart = 0;
      }
      t1 = J.getInterceptor$asx(otherList);
      if (otherStart + $length > t1.get$length(otherList))
        throw A.wrapException(A.IterableElementError_tooFew());
      if (otherStart < start)
        for (i = $length - 1; i >= 0; --i)
          this.$indexSet(receiver, start + i, t1.$index(otherList, otherStart + i));
      else
        for (i = 0; i < $length; ++i)
          this.$indexSet(receiver, start + i, t1.$index(otherList, otherStart + i));
    },
    setRange$3(receiver, start, end, iterable) {
      return this.setRange$4(receiver, start, end, iterable, 0);
    },
    setAll$2(receiver, index, iterable) {
      var t1, index0;
      if (type$.List_dynamic._is(iterable))
        this.setRange$3(receiver, index, index + iterable.length, iterable);
      else
        for (t1 = J.get$iterator$ax(iterable); t1.moveNext$0(); index = index0) {
          index0 = index + 1;
          this.$indexSet(receiver, index, t1.get$current());
        }
    },
    toString$0(receiver) {
      return A.Iterable_iterableToFullString(receiver, "[", "]");
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.MapBase.prototype = {
    cast$2$0(_, $RK, $RV) {
      var t1 = A._instanceType(this);
      return A.Map_castFrom(this, t1._eval$1("MapBase.K"), t1._eval$1("MapBase.V"), $RK, $RV);
    },
    forEach$1(_, action) {
      var t1, t2, key, t3;
      for (t1 = this.get$keys(), t1 = t1.get$iterator(t1), t2 = A._instanceType(this)._eval$1("MapBase.V"); t1.moveNext$0();) {
        key = t1.get$current();
        t3 = this.$index(0, key);
        action.call$2(key, t3 == null ? t2._as(t3) : t3);
      }
    },
    putIfAbsent$2(key, ifAbsent) {
      var t1, _this = this;
      if (_this.containsKey$1(key)) {
        t1 = _this.$index(0, key);
        return t1 == null ? A._instanceType(_this)._eval$1("MapBase.V")._as(t1) : t1;
      }
      t1 = ifAbsent.call$0();
      _this.$indexSet(0, key, t1);
      return t1;
    },
    update$3$ifAbsent(key, update, ifAbsent) {
      var t1, _this = this;
      if (_this.containsKey$1(key)) {
        t1 = _this.$index(0, key);
        t1 = update.call$1(t1 == null ? A._instanceType(_this)._eval$1("MapBase.V")._as(t1) : t1);
        _this.$indexSet(0, key, t1);
        return t1;
      }
      if (ifAbsent != null) {
        t1 = ifAbsent.call$0();
        _this.$indexSet(0, key, t1);
        return t1;
      }
      throw A.wrapException(A.ArgumentError$value(key, "key", "Key not in map."));
    },
    update$2(key, update) {
      return this.update$3$ifAbsent(key, update, null);
    },
    get$entries() {
      var t1 = this.get$keys();
      return t1.map$1$1(t1, new A.MapBase_entries_closure(this), A._instanceType(this)._eval$1("MapEntry<MapBase.K,MapBase.V>"));
    },
    map$2$1(_, transform, $K2, $V2) {
      var t1, t2, key, t3, entry,
        result = A.LinkedHashMap_LinkedHashMap$_empty($K2, $V2);
      for (t1 = this.get$keys(), t1 = t1.get$iterator(t1), t2 = A._instanceType(this)._eval$1("MapBase.V"); t1.moveNext$0();) {
        key = t1.get$current();
        t3 = this.$index(0, key);
        entry = transform.call$2(key, t3 == null ? t2._as(t3) : t3);
        result.$indexSet(0, entry.key, entry.value);
      }
      return result;
    },
    addEntries$1(newEntries) {
      var t1, t2;
      for (t1 = newEntries.get$iterator(newEntries); t1.moveNext$0();) {
        t2 = t1.get$current();
        this.$indexSet(0, t2.key, t2.value);
      }
    },
    removeWhere$1(_, test) {
      var t2, key, t3, _i, _this = this,
        t1 = A._instanceType(_this),
        keysToRemove = A._setArrayType([], t1._eval$1("JSArray<MapBase.K>"));
      for (t2 = _this.get$keys(), t2 = t2.get$iterator(t2), t1 = t1._eval$1("MapBase.V"); t2.moveNext$0();) {
        key = t2.get$current();
        t3 = _this.$index(0, key);
        if (test.call$2(key, t3 == null ? t1._as(t3) : t3))
          keysToRemove.push(key);
      }
      for (t1 = keysToRemove.length, _i = 0; _i < keysToRemove.length; keysToRemove.length === t1 || (0, A.throwConcurrentModificationError)(keysToRemove), ++_i)
        _this.remove$1(0, keysToRemove[_i]);
    },
    containsKey$1(key) {
      var t1 = this.get$keys();
      return t1.contains$1(t1, key);
    },
    get$length(_) {
      var t1 = this.get$keys();
      return t1.get$length(t1);
    },
    get$isEmpty(_) {
      var t1 = this.get$keys();
      return t1.get$isEmpty(t1);
    },
    get$isNotEmpty(_) {
      var t1 = this.get$keys();
      return t1.get$isNotEmpty(t1);
    },
    get$values() {
      return new A._MapBaseValueIterable(this, A._instanceType(this)._eval$1("_MapBaseValueIterable<MapBase.K,MapBase.V>"));
    },
    toString$0(_) {
      return A.MapBase_mapToString(this);
    },
    $isMap: 1
  };
  A.MapBase_entries_closure.prototype = {
    call$1(key) {
      var t1 = this.$this,
        t2 = t1.$index(0, key);
      if (t2 == null)
        t2 = A._instanceType(t1)._eval$1("MapBase.V")._as(t2);
      return new A.MapEntry(key, t2, A._instanceType(t1)._eval$1("MapEntry<MapBase.K,MapBase.V>"));
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("MapEntry<MapBase.K,MapBase.V>(MapBase.K)");
    }
  };
  A.MapBase_mapToString_closure.prototype = {
    call$2(k, v) {
      var t2,
        t1 = this._box_0;
      if (!t1.first)
        this.result._contents += ", ";
      t1.first = false;
      t1 = this.result;
      t2 = A.S(k);
      t1._contents = (t1._contents += t2) + ": ";
      t2 = A.S(v);
      t1._contents += t2;
    },
    $signature: 58
  };
  A._MapBaseValueIterable.prototype = {
    get$length(_) {
      var t1 = this._collection$_map;
      return t1.get$length(t1);
    },
    get$isEmpty(_) {
      var t1 = this._collection$_map;
      return t1.get$isEmpty(t1);
    },
    get$isNotEmpty(_) {
      var t1 = this._collection$_map;
      return t1.get$isNotEmpty(t1);
    },
    get$first(_) {
      var t1 = this._collection$_map,
        t2 = t1.get$keys();
      t2 = t1.$index(0, t2.get$first(t2));
      return t2 == null ? this.$ti._rest[1]._as(t2) : t2;
    },
    get$last(_) {
      var t1 = this._collection$_map,
        t2 = t1.get$keys();
      t2 = t1.$index(0, t2.get$last(t2));
      return t2 == null ? this.$ti._rest[1]._as(t2) : t2;
    },
    get$iterator(_) {
      var t1 = this._collection$_map,
        t2 = t1.get$keys();
      return new A._MapBaseValueIterator(t2.get$iterator(t2), t1, this.$ti._eval$1("_MapBaseValueIterator<1,2>"));
    }
  };
  A._MapBaseValueIterator.prototype = {
    moveNext$0() {
      var _this = this,
        t1 = _this._keys;
      if (t1.moveNext$0()) {
        _this._current = _this._collection$_map.$index(0, t1.get$current());
        return true;
      }
      _this._current = null;
      return false;
    },
    get$current() {
      var t1 = this._current;
      return t1 == null ? this.$ti._rest[1]._as(t1) : t1;
    }
  };
  A._UnmodifiableMapMixin.prototype = {
    $indexSet(_, key, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot modify unmodifiable map"));
    },
    remove$1(_, key) {
      throw A.wrapException(A.UnsupportedError$("Cannot modify unmodifiable map"));
    },
    putIfAbsent$2(key, ifAbsent) {
      throw A.wrapException(A.UnsupportedError$("Cannot modify unmodifiable map"));
    }
  };
  A.MapView.prototype = {
    cast$2$0(_, $RK, $RV) {
      return this._collection$_map.cast$2$0(0, $RK, $RV);
    },
    $index(_, key) {
      return this._collection$_map.$index(0, key);
    },
    $indexSet(_, key, value) {
      this._collection$_map.$indexSet(0, key, value);
    },
    putIfAbsent$2(key, ifAbsent) {
      return this._collection$_map.putIfAbsent$2(key, ifAbsent);
    },
    containsKey$1(key) {
      return this._collection$_map.containsKey$1(key);
    },
    forEach$1(_, action) {
      this._collection$_map.forEach$1(0, action);
    },
    get$isEmpty(_) {
      var t1 = this._collection$_map;
      return t1.get$isEmpty(t1);
    },
    get$isNotEmpty(_) {
      var t1 = this._collection$_map;
      return t1.get$isNotEmpty(t1);
    },
    get$length(_) {
      var t1 = this._collection$_map;
      return t1.get$length(t1);
    },
    get$keys() {
      return this._collection$_map.get$keys();
    },
    remove$1(_, key) {
      return this._collection$_map.remove$1(0, key);
    },
    toString$0(_) {
      return this._collection$_map.toString$0(0);
    },
    get$values() {
      return this._collection$_map.get$values();
    },
    get$entries() {
      return this._collection$_map.get$entries();
    },
    map$2$1(_, transform, $K2, $V2) {
      return this._collection$_map.map$2$1(0, transform, $K2, $V2);
    },
    $isMap: 1
  };
  A.UnmodifiableMapView.prototype = {
    cast$2$0(_, $RK, $RV) {
      return new A.UnmodifiableMapView(this._collection$_map.cast$2$0(0, $RK, $RV), $RK._eval$1("@<0>")._bind$1($RV)._eval$1("UnmodifiableMapView<1,2>"));
    }
  };
  A.ListQueue.prototype = {
    get$iterator(_) {
      var _this = this;
      return new A._ListQueueIterator(_this, _this._tail, _this._modificationCount, _this._head, _this.$ti._eval$1("_ListQueueIterator<1>"));
    },
    get$isEmpty(_) {
      return this._head === this._tail;
    },
    get$length(_) {
      return (this._tail - this._head & this._table.length - 1) >>> 0;
    },
    get$first(_) {
      var _this = this,
        t1 = _this._head;
      if (t1 === _this._tail)
        throw A.wrapException(A.IterableElementError_noElement());
      t1 = _this._table[t1];
      return t1 == null ? _this.$ti._precomputed1._as(t1) : t1;
    },
    get$last(_) {
      var _this = this,
        t1 = _this._head,
        t2 = _this._tail;
      if (t1 === t2)
        throw A.wrapException(A.IterableElementError_noElement());
      t1 = _this._table;
      t1 = t1[(t2 - 1 & t1.length - 1) >>> 0];
      return t1 == null ? _this.$ti._precomputed1._as(t1) : t1;
    },
    elementAt$1(_, index) {
      var _this = this,
        t1 = _this.get$length(0);
      if (0 > index || index >= t1)
        A.throwExpression(A.IndexError$withLength(index, t1, _this, null, "index"));
      t1 = _this._table;
      t1 = t1[(_this._head + index & t1.length - 1) >>> 0];
      return t1 == null ? _this.$ti._precomputed1._as(t1) : t1;
    },
    toList$1$growable(_, growable) {
      var t1, list, t2, t3, i, t4, _this = this,
        mask = _this._table.length - 1,
        $length = (_this._tail - _this._head & mask) >>> 0;
      if ($length === 0) {
        t1 = J.JSArray_JSArray$growable(0, _this.$ti._precomputed1);
        return t1;
      }
      t1 = _this.$ti._precomputed1;
      list = A.List_List$filled($length, _this.get$first(0), true, t1);
      for (t2 = _this._table, t3 = _this._head, i = 0; i < $length; ++i) {
        t4 = t2[(t3 + i & mask) >>> 0];
        list[i] = t4 == null ? t1._as(t4) : t4;
      }
      return list;
    },
    toList$0(_) {
      return this.toList$1$growable(0, true);
    },
    addAll$1(_, elements) {
      var addCount, $length, t1, t2, t3, newTable, endSpace, preSpace, _this = this;
      if (type$.List_dynamic._is(elements)) {
        addCount = elements.length;
        $length = _this.get$length(0);
        t1 = $length + addCount;
        t2 = _this._table;
        t3 = t2.length;
        if (t1 >= t3) {
          newTable = A.List_List$filled(A.ListQueue__nextPowerOf2(t1 + (t1 >>> 1)), null, false, _this.$ti._eval$1("1?"));
          _this._tail = _this._writeToList$1(newTable);
          _this._table = newTable;
          _this._head = 0;
          B.JSArray_methods.setRange$4(newTable, $length, t1, elements, 0);
          _this._tail += addCount;
        } else {
          t1 = _this._tail;
          endSpace = t3 - t1;
          if (addCount < endSpace) {
            B.JSArray_methods.setRange$4(t2, t1, t1 + addCount, elements, 0);
            _this._tail += addCount;
          } else {
            preSpace = addCount - endSpace;
            B.JSArray_methods.setRange$4(t2, t1, t1 + endSpace, elements, 0);
            B.JSArray_methods.setRange$4(_this._table, 0, preSpace, elements, endSpace);
            _this._tail = preSpace;
          }
        }
        ++_this._modificationCount;
      } else
        for (t1 = J.get$iterator$ax(elements); t1.moveNext$0();)
          _this._add$1(t1.get$current());
    },
    clear$0(_) {
      var t2, t3, _this = this,
        i = _this._head,
        t1 = _this._tail;
      if (i !== t1) {
        for (t2 = _this._table, t3 = t2.length - 1; i !== t1; i = (i + 1 & t3) >>> 0)
          t2[i] = null;
        _this._head = _this._tail = 0;
        ++_this._modificationCount;
      }
    },
    toString$0(_) {
      return A.Iterable_iterableToFullString(this, "{", "}");
    },
    addFirst$1(value) {
      var _this = this,
        t1 = _this._head,
        t2 = _this._table;
      t1 = _this._head = (t1 - 1 & t2.length - 1) >>> 0;
      t2[t1] = value;
      if (t1 === _this._tail)
        _this._grow$0();
      ++_this._modificationCount;
    },
    removeFirst$0() {
      var t2, result, _this = this,
        t1 = _this._head;
      if (t1 === _this._tail)
        throw A.wrapException(A.IterableElementError_noElement());
      ++_this._modificationCount;
      t2 = _this._table;
      result = t2[t1];
      if (result == null)
        result = _this.$ti._precomputed1._as(result);
      t2[t1] = null;
      _this._head = (t1 + 1 & t2.length - 1) >>> 0;
      return result;
    },
    removeLast$0(_) {
      var result, _this = this,
        t1 = _this._head,
        t2 = _this._tail;
      if (t1 === t2)
        throw A.wrapException(A.IterableElementError_noElement());
      ++_this._modificationCount;
      t1 = _this._table;
      t2 = _this._tail = (t2 - 1 & t1.length - 1) >>> 0;
      result = t1[t2];
      if (result == null)
        result = _this.$ti._precomputed1._as(result);
      t1[t2] = null;
      return result;
    },
    _add$1(element) {
      var _this = this,
        t1 = _this._table,
        t2 = _this._tail;
      t1[t2] = element;
      t1 = (t2 + 1 & t1.length - 1) >>> 0;
      _this._tail = t1;
      if (_this._head === t1)
        _this._grow$0();
      ++_this._modificationCount;
    },
    _grow$0() {
      var _this = this,
        newTable = A.List_List$filled(_this._table.length * 2, null, false, _this.$ti._eval$1("1?")),
        t1 = _this._table,
        t2 = _this._head,
        split = t1.length - t2;
      B.JSArray_methods.setRange$4(newTable, 0, split, t1, t2);
      B.JSArray_methods.setRange$4(newTable, split, split + _this._head, _this._table, 0);
      _this._head = 0;
      _this._tail = _this._table.length;
      _this._table = newTable;
    },
    _writeToList$1(target) {
      var $length, firstPartSize, _this = this,
        t1 = _this._head,
        t2 = _this._tail,
        t3 = _this._table;
      if (t1 <= t2) {
        $length = t2 - t1;
        B.JSArray_methods.setRange$4(target, 0, $length, t3, t1);
        return $length;
      } else {
        firstPartSize = t3.length - t1;
        B.JSArray_methods.setRange$4(target, 0, firstPartSize, t3, t1);
        B.JSArray_methods.setRange$4(target, firstPartSize, firstPartSize + _this._tail, _this._table, 0);
        return _this._tail + firstPartSize;
      }
    }
  };
  A._ListQueueIterator.prototype = {
    get$current() {
      var t1 = this._current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var t2, _this = this,
        t1 = _this._queue;
      if (_this._modificationCount !== t1._modificationCount)
        A.throwExpression(A.ConcurrentModificationError$(t1));
      t2 = _this._position;
      if (t2 === _this._end) {
        _this._current = null;
        return false;
      }
      t1 = t1._table;
      _this._current = t1[t2];
      _this._position = (t2 + 1 & t1.length - 1) >>> 0;
      return true;
    }
  };
  A.SetBase.prototype = {
    get$isEmpty(_) {
      return this.get$length(this) === 0;
    },
    get$isNotEmpty(_) {
      return this.get$length(this) !== 0;
    },
    addAll$1(_, elements) {
      var t1;
      for (t1 = J.get$iterator$ax(elements); t1.moveNext$0();)
        this.add$1(0, t1.get$current());
    },
    removeAll$1(elements) {
      var t1, _i;
      for (t1 = elements.length, _i = 0; _i < elements.length; elements.length === t1 || (0, A.throwConcurrentModificationError)(elements), ++_i)
        this.remove$1(0, elements[_i]);
    },
    intersection$1(other) {
      var t1, element,
        result = this.toSet$0(0);
      for (t1 = this.get$iterator(this); t1.moveNext$0();) {
        element = t1.get$current();
        if (!other.contains$1(0, element))
          result.remove$1(0, element);
      }
      return result;
    },
    toList$1$growable(_, growable) {
      var t1 = A.List_List$_of(this, A._instanceType(this)._precomputed1);
      return t1;
    },
    toList$0(_) {
      return this.toList$1$growable(0, true);
    },
    map$1$1(_, f, $T) {
      return new A.EfficientLengthMappedIterable(this, f, A._instanceType(this)._eval$1("@<1>")._bind$1($T)._eval$1("EfficientLengthMappedIterable<1,2>"));
    },
    toString$0(_) {
      return A.Iterable_iterableToFullString(this, "{", "}");
    },
    any$1(_, test) {
      var t1;
      for (t1 = this.get$iterator(this); t1.moveNext$0();)
        if (test.call$1(t1.get$current()))
          return true;
      return false;
    },
    skip$1(_, n) {
      return A.SkipIterable_SkipIterable(this, n, A._instanceType(this)._precomputed1);
    },
    get$first(_) {
      var it = this.get$iterator(this);
      if (!it.moveNext$0())
        throw A.wrapException(A.IterableElementError_noElement());
      return it.get$current();
    },
    get$last(_) {
      var result,
        it = this.get$iterator(this);
      if (!it.moveNext$0())
        throw A.wrapException(A.IterableElementError_noElement());
      do
        result = it.get$current();
      while (it.moveNext$0());
      return result;
    },
    elementAt$1(_, index) {
      var iterator, skipCount;
      A.RangeError_checkNotNegative(index, "index");
      iterator = this.get$iterator(this);
      for (skipCount = index; iterator.moveNext$0();) {
        if (skipCount === 0)
          return iterator.get$current();
        --skipCount;
      }
      throw A.wrapException(A.IndexError$withLength(index, index - skipCount, this, null, "index"));
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isSet: 1
  };
  A._SetBase.prototype = {
    difference$1(other) {
      var t1, element,
        result = this._newSet$0();
      for (t1 = this.get$iterator(this); t1.moveNext$0();) {
        element = t1.get$current();
        if (!other.contains$1(0, element))
          result.add$1(0, element);
      }
      return result;
    },
    intersection$1(other) {
      var t1, element,
        result = this._newSet$0();
      for (t1 = this.get$iterator(this); t1.moveNext$0();) {
        element = t1.get$current();
        if (other.contains$1(0, element))
          result.add$1(0, element);
      }
      return result;
    },
    toSet$0(_) {
      var t1 = this._newSet$0();
      t1.addAll$1(0, this);
      return t1;
    }
  };
  A._SplayTreeNode.prototype = {};
  A._SplayTreeSetNode.prototype = {};
  A._SplayTreeMapNode.prototype = {};
  A._SplayTree.prototype = {
    _splay$1(key) {
      var compare, comparison, current, newTreeLeft, left, newTreeRight, right, currentLeft, currentLeft0, currentRight, currentRight0, _this = this, _null = null,
        root = _this.get$_collection$_root();
      if (root == null) {
        _this._compare$2(key, key);
        return -1;
      }
      compare = _this.get$_compare();
      for (comparison = _null, current = root, newTreeLeft = comparison, left = newTreeLeft, newTreeRight = left, right = newTreeRight; true;) {
        comparison = compare.call$2(current.key, key);
        if (comparison > 0) {
          currentLeft = current._collection$_left;
          if (currentLeft == null)
            break;
          comparison = compare.call$2(currentLeft.key, key);
          if (comparison > 0) {
            current._collection$_left = currentLeft._collection$_right;
            currentLeft._collection$_right = current;
            currentLeft0 = currentLeft._collection$_left;
            if (currentLeft0 == null) {
              current = currentLeft;
              break;
            }
            current = currentLeft;
            currentLeft = currentLeft0;
          }
          if (right == null)
            newTreeRight = current;
          else
            right._collection$_left = current;
          right = current;
          current = currentLeft;
        } else {
          if (comparison < 0) {
            currentRight = current._collection$_right;
            if (currentRight == null)
              break;
            comparison = compare.call$2(currentRight.key, key);
            if (comparison < 0) {
              current._collection$_right = currentRight._collection$_left;
              currentRight._collection$_left = current;
              currentRight0 = currentRight._collection$_right;
              if (currentRight0 == null) {
                current = currentRight;
                break;
              }
              current = currentRight;
              currentRight = currentRight0;
            }
            if (left == null)
              newTreeLeft = current;
            else
              left._collection$_right = current;
          } else
            break;
          left = current;
          current = currentRight;
        }
      }
      if (left != null) {
        left._collection$_right = current._collection$_left;
        current._collection$_left = newTreeLeft;
      }
      if (right != null) {
        right._collection$_left = current._collection$_right;
        current._collection$_right = newTreeRight;
      }
      if (_this.get$_collection$_root() !== current) {
        _this.set$_collection$_root(current);
        ++_this._splayCount;
      }
      return comparison;
    },
    _splayMin$1(node) {
      var current, modified, left;
      for (current = node, modified = 0; true; current = left, modified = 1) {
        left = current._collection$_left;
        if (left != null) {
          current._collection$_left = left._collection$_right;
          left._collection$_right = current;
        } else
          break;
      }
      this._splayCount += modified;
      return current;
    },
    _splayMax$1(node) {
      var current, modified, right;
      for (current = node, modified = 0; true; current = right, modified = 1) {
        right = current._collection$_right;
        if (right != null) {
          current._collection$_right = right._collection$_left;
          right._collection$_left = current;
        } else
          break;
      }
      this._splayCount += modified;
      return current;
    },
    _removeRoot$0() {
      var t1, _this = this,
        root = _this.get$_collection$_root(),
        left = root._collection$_left,
        right = root._collection$_right;
      if (left == null)
        _this.set$_collection$_root(right);
      else if (right == null)
        _this.set$_collection$_root(left);
      else {
        t1 = _this._splayMax$1(left);
        t1._collection$_right = right;
        _this.set$_collection$_root(t1);
      }
      --_this._collection$_count;
      ++_this._modificationCount;
    },
    _addNewRoot$2(node, comparison) {
      var _this = this,
        root = _this.get$_collection$_root();
      if (root != null)
        if (comparison < 0) {
          node._collection$_left = root;
          node._collection$_right = root._collection$_right;
          root._collection$_right = null;
        } else {
          node._collection$_right = root;
          node._collection$_left = root._collection$_left;
          root._collection$_left = null;
        }
      ++_this._modificationCount;
      ++_this._collection$_count;
      _this.set$_collection$_root(node);
    },
    _untypedLookup$1(key) {
      var _this = this;
      _this.get$_validKey();
      if (!A._instanceType(_this)._eval$1("_SplayTree.K")._is(key))
        return null;
      if (_this._splay$1(key) === 0)
        return _this.get$_collection$_root();
      return null;
    },
    _compare$2(arg0, arg1) {
      return this.get$_compare().call$2(arg0, arg1);
    }
  };
  A.SplayTreeMap.prototype = {
    $index(_, key) {
      var t1 = this._untypedLookup$1(key);
      return t1 == null ? null : t1.value;
    },
    remove$1(_, key) {
      var root = this._untypedLookup$1(key);
      if (root == null)
        return null;
      this._removeRoot$0();
      return root.value;
    },
    $indexSet(_, key, value) {
      var _this = this,
        comparison = _this._splay$1(key);
      if (comparison === 0) {
        _this._collection$_root.value = value;
        return;
      }
      _this._addNewRoot$2(new A._SplayTreeMapNode(value, key, _this.$ti._eval$1("_SplayTreeMapNode<1,2>")), comparison);
    },
    putIfAbsent$2(key, ifAbsent) {
      var originalModificationCount, originalSplayCount, value, _this = this,
        comparison = _this._splay$1(key);
      if (comparison === 0)
        return _this._collection$_root.value;
      originalModificationCount = _this._modificationCount;
      originalSplayCount = _this._splayCount;
      value = ifAbsent.call$0();
      if (originalModificationCount !== _this._modificationCount || originalSplayCount !== _this._splayCount) {
        comparison = _this._splay$1(key);
        if (comparison === 0)
          return _this._collection$_root.value = value;
      }
      _this._addNewRoot$2(new A._SplayTreeMapNode(value, key, _this.$ti._eval$1("_SplayTreeMapNode<1,2>")), comparison);
      return value;
    },
    get$isEmpty(_) {
      return this._collection$_root == null;
    },
    get$isNotEmpty(_) {
      return this._collection$_root != null;
    },
    forEach$1(_, f) {
      var node,
        t1 = this.$ti,
        nodes = new A._SplayTreeMapEntryIterator(this, A._setArrayType([], t1._eval$1("JSArray<_SplayTreeMapNode<1,2>>")), this._splayCount, t1._eval$1("_SplayTreeMapEntryIterator<1,2>"));
      for (; nodes._current = null, nodes.super$_SplayTreeIterator$moveNext();) {
        node = nodes.get$current();
        f.call$2(node.key, node.value);
      }
    },
    get$length(_) {
      return this._collection$_count;
    },
    containsKey$1(key) {
      return this._untypedLookup$1(key) != null;
    },
    get$keys() {
      return new A._SplayTreeKeyIterable(this, this.$ti._eval$1("_SplayTreeKeyIterable<1,_SplayTreeMapNode<1,2>>"));
    },
    get$values() {
      return new A._SplayTreeValueIterable(this, this.$ti._eval$1("_SplayTreeValueIterable<1,2>"));
    },
    get$entries() {
      return new A._SplayTreeMapEntryIterable(this, this.$ti._eval$1("_SplayTreeMapEntryIterable<1,2>"));
    },
    firstKey$0() {
      var t1,
        root = this._collection$_root;
      if (root == null)
        return null;
      t1 = this._splayMin$1(root);
      this._collection$_root = t1;
      return t1.key;
    },
    lastKey$0() {
      var t1,
        root = this._collection$_root;
      if (root == null)
        return null;
      t1 = this._splayMax$1(root);
      this._collection$_root = t1;
      return t1.key;
    },
    $isMap: 1,
    _compare$2(arg0, arg1) {
      return this._compare.call$2(arg0, arg1);
    },
    get$_collection$_root() {
      return this._collection$_root;
    },
    get$_compare() {
      return this._compare;
    },
    get$_validKey() {
      return null;
    },
    set$_collection$_root(val) {
      return this._collection$_root = val;
    }
  };
  A._SplayTreeIterator.prototype = {
    get$current() {
      var t1 = this._collection$_path;
      if (t1.length === 0) {
        A._instanceType(this)._eval$1("_SplayTreeIterator.T")._as(null);
        return null;
      }
      return this._getValue$1(B.JSArray_methods.get$last(t1));
    },
    _rebuildPath$1(key) {
      var t2, t3, _this = this,
        t1 = _this._collection$_path;
      B.JSArray_methods.clear$0(t1);
      t2 = _this._tree;
      if (t2._splay$1(key) === 0) {
        t3 = t2.get$_collection$_root();
        t3.toString;
        t1.push(t3);
        _this._splayCount = t2._splayCount;
        return;
      }
      throw A.wrapException(A.ConcurrentModificationError$(_this));
    },
    moveNext$0() {
      var node, next, _this = this,
        t1 = _this._modificationCount,
        t2 = _this._tree,
        t3 = t2._modificationCount;
      if (t1 !== t3) {
        if (t1 == null) {
          _this._modificationCount = t3;
          node = t2.get$_collection$_root();
          for (t1 = _this._collection$_path; node != null;) {
            t1.push(node);
            node = node._collection$_left;
          }
          return t1.length !== 0;
        }
        throw A.wrapException(A.ConcurrentModificationError$(t2));
      }
      t1 = _this._collection$_path;
      if (t1.length === 0)
        return false;
      if (_this._splayCount !== t2._splayCount)
        _this._rebuildPath$1(B.JSArray_methods.get$last(t1).key);
      node = B.JSArray_methods.get$last(t1);
      next = node._collection$_right;
      if (next != null) {
        for (; next != null;) {
          t1.push(next);
          next = next._collection$_left;
        }
        return true;
      }
      t1.pop();
      while (true) {
        if (!(t1.length !== 0 && B.JSArray_methods.get$last(t1)._collection$_right === node))
          break;
        node = t1.pop();
      }
      return t1.length !== 0;
    }
  };
  A._SplayTreeKeyIterable.prototype = {
    get$length(_) {
      return this._tree._collection$_count;
    },
    get$isEmpty(_) {
      return this._tree._collection$_count === 0;
    },
    get$iterator(_) {
      var t1 = this._tree,
        t2 = this.$ti;
      return new A._SplayTreeKeyIterator(t1, A._setArrayType([], t2._eval$1("JSArray<2>")), t1._splayCount, t2._eval$1("_SplayTreeKeyIterator<1,2>"));
    },
    contains$1(_, element) {
      return this._tree._untypedLookup$1(element) != null;
    },
    toSet$0(_) {
      var t1 = this._tree,
        set = A.SplayTreeSet$(t1._compare, null, this.$ti._precomputed1),
        root = t1._collection$_root;
      if (root != null) {
        set._collection$_root = set._copyNode$1(root);
        set._collection$_count = t1._collection$_count;
      }
      return set;
    }
  };
  A._SplayTreeValueIterable.prototype = {
    get$length(_) {
      return this._collection$_map._collection$_count;
    },
    get$isEmpty(_) {
      return this._collection$_map._collection$_count === 0;
    },
    get$iterator(_) {
      var t1 = this._collection$_map,
        t2 = this.$ti;
      return new A._SplayTreeValueIterator(t1, A._setArrayType([], t2._eval$1("JSArray<_SplayTreeMapNode<1,2>>")), t1._splayCount, t2._eval$1("_SplayTreeValueIterator<1,2>"));
    }
  };
  A._SplayTreeMapEntryIterable.prototype = {
    get$length(_) {
      return this._collection$_map._collection$_count;
    },
    get$isEmpty(_) {
      return this._collection$_map._collection$_count === 0;
    },
    get$iterator(_) {
      var t1 = this._collection$_map,
        t2 = this.$ti;
      return new A._SplayTreeMapEntryIterator(t1, A._setArrayType([], t2._eval$1("JSArray<_SplayTreeMapNode<1,2>>")), t1._splayCount, t2._eval$1("_SplayTreeMapEntryIterator<1,2>"));
    }
  };
  A._SplayTreeKeyIterator.prototype = {
    _getValue$1(node) {
      return node.key;
    }
  };
  A._SplayTreeValueIterator.prototype = {
    moveNext$0() {
      var result = this.super$_SplayTreeIterator$moveNext();
      this._current = result ? B.JSArray_methods.get$last(this._collection$_path).value : null;
      return result;
    },
    _getValue$1(node) {
      var t1 = this._current;
      return t1 == null ? this.$ti._rest[1]._as(t1) : t1;
    }
  };
  A._SplayTreeMapEntryIterator.prototype = {
    _getValue$1(node) {
      var t1 = this._current;
      return t1 == null ? this._current = new A.MapEntry(node.key, node.value, this.$ti._eval$1("MapEntry<1,2>")) : t1;
    },
    moveNext$0() {
      this._current = null;
      return this.super$_SplayTreeIterator$moveNext();
    }
  };
  A.SplayTreeSet.prototype = {
    get$iterator(_) {
      var t1 = this.$ti;
      return new A._SplayTreeKeyIterator(this, A._setArrayType([], t1._eval$1("JSArray<_SplayTreeSetNode<1>>")), this._splayCount, t1._eval$1("_SplayTreeKeyIterator<1,_SplayTreeSetNode<1>>"));
    },
    get$length(_) {
      return this._collection$_count;
    },
    get$isEmpty(_) {
      return this._collection$_root == null;
    },
    get$isNotEmpty(_) {
      return this._collection$_root != null;
    },
    get$first(_) {
      var t1,
        root = this._collection$_root;
      if (root == null)
        throw A.wrapException(A.IterableElementError_noElement());
      t1 = this._splayMin$1(root);
      this._collection$_root = t1;
      return t1.key;
    },
    get$last(_) {
      var t1,
        root = this._collection$_root;
      if (root == null)
        throw A.wrapException(A.IterableElementError_noElement());
      t1 = this._splayMax$1(root);
      this._collection$_root = t1;
      return t1.key;
    },
    contains$1(_, element) {
      return this._untypedLookup$1(element) != null;
    },
    add$1(_, element) {
      return this._add$1(element);
    },
    _add$1(element) {
      var compare = this._splay$1(element);
      if (compare === 0)
        return false;
      this._addNewRoot$2(new A._SplayTreeSetNode(element, this.$ti._eval$1("_SplayTreeSetNode<1>")), compare);
      return true;
    },
    remove$1(_, object) {
      if (this._untypedLookup$1(object) == null)
        return false;
      this._removeRoot$0();
      return true;
    },
    addAll$1(_, elements) {
      var t1, t2;
      for (t1 = J.get$iterator$ax(elements.get$_source()), t2 = A._instanceType(elements)._rest[1]; t1.moveNext$0();)
        this._add$1(t2._as(t1.get$current()));
    },
    intersection$1(other) {
      return this._filter$2(0, other, true);
    },
    _filter$2(_, other, include) {
      var t1, t2, t3, root, count, element, root0, _this = this;
      for (t1 = _this.$ti, t2 = t1._eval$1("_SplayTreeSetNode<1>"), t3 = new A._SplayTreeKeyIterator(_this, A._setArrayType([], t1._eval$1("JSArray<_SplayTreeSetNode<1>>")), _this._splayCount, t1._eval$1("_SplayTreeKeyIterator<1,_SplayTreeSetNode<1>>")), root = null, count = 0; t3.moveNext$0();) {
        element = t3.get$current();
        if (other.contains$1(0, element) === include) {
          root0 = new A._SplayTreeSetNode(element, t2);
          root0._collection$_left = root;
          ++count;
          root = root0;
        }
      }
      t1 = A.SplayTreeSet$(_this._compare, _this._validKey, t1._precomputed1);
      t1._collection$_root = root;
      t1._collection$_count = count;
      return t1;
    },
    _copyNode$1$1(source) {
      var target, sourceLeft, sourceRight, target0,
        t1 = this.$ti._eval$1("_SplayTreeSetNode<1>"),
        result = new A._SplayTreeSetNode(source.key, t1);
      for (target = result; true;) {
        sourceLeft = source._collection$_left;
        sourceRight = source._collection$_right;
        if (sourceLeft != null)
          if (sourceRight != null)
            target._collection$_left = this._copyNode$1(sourceLeft);
          else {
            target0 = new A._SplayTreeSetNode(sourceLeft.key, t1);
            target._collection$_left = target0;
            target = target0;
            source = sourceLeft;
            continue;
          }
        else if (sourceRight == null)
          break;
        target0 = new A._SplayTreeSetNode(sourceRight.key, t1);
        target._collection$_right = target0;
        target = target0;
        source = sourceRight;
      }
      return result;
    },
    _copyNode$1(source) {
      return this._copyNode$1$1(source, this.$ti._eval$1("_SplayTreeNode<1,@>"));
    },
    toSet$0(_) {
      var _this = this,
        set = A.SplayTreeSet$(_this._compare, _this._validKey, _this.$ti._precomputed1),
        root = _this._collection$_root;
      if (root != null) {
        set._collection$_root = _this._copyNode$1(root);
        set._collection$_count = _this._collection$_count;
      }
      return set;
    },
    toString$0(_) {
      return A.Iterable_iterableToFullString(this, "{", "}");
    },
    $isEfficientLengthIterable: 1,
    $isSet: 1,
    _compare$2(arg0, arg1) {
      return this._compare.call$2(arg0, arg1);
    },
    get$_collection$_root() {
      return this._collection$_root;
    },
    get$_compare() {
      return this._compare;
    },
    get$_validKey() {
      return this._validKey;
    },
    set$_collection$_root(val) {
      return this._collection$_root = val;
    }
  };
  A._SplayTreeMap__SplayTree_MapMixin.prototype = {};
  A._SplayTreeSet__SplayTree_Iterable.prototype = {};
  A._SplayTreeSet__SplayTree_Iterable_SetMixin.prototype = {};
  A._UnmodifiableMapView_MapView__UnmodifiableMapMixin.prototype = {};
  A._JsonMap.prototype = {
    $index(_, key) {
      var result,
        t1 = this._processed;
      if (t1 == null)
        return this._convert$_data.$index(0, key);
      else if (typeof key != "string")
        return null;
      else {
        result = t1[key];
        return typeof result == "undefined" ? this._process$1(key) : result;
      }
    },
    get$length(_) {
      return this._processed == null ? this._convert$_data.__js_helper$_length : this._convert$_computeKeys$0().length;
    },
    get$isEmpty(_) {
      return this.get$length(0) === 0;
    },
    get$isNotEmpty(_) {
      return this.get$length(0) > 0;
    },
    get$keys() {
      if (this._processed == null) {
        var t1 = this._convert$_data;
        return new A.LinkedHashMapKeysIterable(t1, A._instanceType(t1)._eval$1("LinkedHashMapKeysIterable<1>"));
      }
      return new A._JsonMapKeyIterable(this);
    },
    get$values() {
      var t1, _this = this;
      if (_this._processed == null) {
        t1 = _this._convert$_data;
        return new A.LinkedHashMapValuesIterable(t1, A._instanceType(t1)._eval$1("LinkedHashMapValuesIterable<2>"));
      }
      return A.MappedIterable_MappedIterable(_this._convert$_computeKeys$0(), new A._JsonMap_values_closure(_this), type$.String, type$.dynamic);
    },
    $indexSet(_, key, value) {
      var processed, original, _this = this;
      if (_this._processed == null)
        _this._convert$_data.$indexSet(0, key, value);
      else if (_this.containsKey$1(key)) {
        processed = _this._processed;
        processed[key] = value;
        original = _this._original;
        if (original == null ? processed != null : original !== processed)
          original[key] = null;
      } else
        _this._upgrade$0().$indexSet(0, key, value);
    },
    containsKey$1(key) {
      if (this._processed == null)
        return this._convert$_data.containsKey$1(key);
      if (typeof key != "string")
        return false;
      return Object.prototype.hasOwnProperty.call(this._original, key);
    },
    putIfAbsent$2(key, ifAbsent) {
      var value;
      if (this.containsKey$1(key))
        return this.$index(0, key);
      value = ifAbsent.call$0();
      this.$indexSet(0, key, value);
      return value;
    },
    remove$1(_, key) {
      if (this._processed != null && !this.containsKey$1(key))
        return null;
      return this._upgrade$0().remove$1(0, key);
    },
    forEach$1(_, f) {
      var keys, i, key, value, _this = this;
      if (_this._processed == null)
        return _this._convert$_data.forEach$1(0, f);
      keys = _this._convert$_computeKeys$0();
      for (i = 0; i < keys.length; ++i) {
        key = keys[i];
        value = _this._processed[key];
        if (typeof value == "undefined") {
          value = A._convertJsonToDartLazy(_this._original[key]);
          _this._processed[key] = value;
        }
        f.call$2(key, value);
        if (keys !== _this._convert$_data)
          throw A.wrapException(A.ConcurrentModificationError$(_this));
      }
    },
    _convert$_computeKeys$0() {
      var keys = this._convert$_data;
      if (keys == null)
        keys = this._convert$_data = A._setArrayType(Object.keys(this._original), type$.JSArray_String);
      return keys;
    },
    _upgrade$0() {
      var result, keys, i, t1, key, _this = this;
      if (_this._processed == null)
        return _this._convert$_data;
      result = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic);
      keys = _this._convert$_computeKeys$0();
      for (i = 0; t1 = keys.length, i < t1; ++i) {
        key = keys[i];
        result.$indexSet(0, key, _this.$index(0, key));
      }
      if (t1 === 0)
        keys.push("");
      else
        B.JSArray_methods.clear$0(keys);
      _this._original = _this._processed = null;
      return _this._convert$_data = result;
    },
    _process$1(key) {
      var result;
      if (!Object.prototype.hasOwnProperty.call(this._original, key))
        return null;
      result = A._convertJsonToDartLazy(this._original[key]);
      return this._processed[key] = result;
    }
  };
  A._JsonMap_values_closure.prototype = {
    call$1(each) {
      return this.$this.$index(0, each);
    },
    $signature: 63
  };
  A._JsonMapKeyIterable.prototype = {
    get$length(_) {
      return this._convert$_parent.get$length(0);
    },
    elementAt$1(_, index) {
      var t1 = this._convert$_parent;
      return t1._processed == null ? t1.get$keys().elementAt$1(0, index) : t1._convert$_computeKeys$0()[index];
    },
    get$iterator(_) {
      var t1 = this._convert$_parent;
      if (t1._processed == null) {
        t1 = t1.get$keys();
        t1 = t1.get$iterator(t1);
      } else {
        t1 = t1._convert$_computeKeys$0();
        t1 = new J.ArrayIterator(t1, t1.length, A._arrayInstanceType(t1)._eval$1("ArrayIterator<1>"));
      }
      return t1;
    },
    contains$1(_, key) {
      return this._convert$_parent.containsKey$1(key);
    }
  };
  A._Utf8Decoder__decoder_closure.prototype = {
    call$0() {
      var t1, exception;
      try {
        t1 = new TextDecoder("utf-8", {fatal: true});
        return t1;
      } catch (exception) {
      }
      return null;
    },
    $signature: 79
  };
  A._Utf8Decoder__decoderNonfatal_closure.prototype = {
    call$0() {
      var t1, exception;
      try {
        t1 = new TextDecoder("utf-8", {fatal: false});
        return t1;
      } catch (exception) {
      }
      return null;
    },
    $signature: 79
  };
  A.Base64Codec.prototype = {
    normalize$3(source, start, end) {
      var inverseAlphabet, i, sliceStart, buffer, firstPadding, firstPaddingSourceIndex, paddingCount, i0, char, i1, digit1, digit2, char0, value, t1, t2, endLength, $length, _null = null,
        _s31_ = "Invalid base64 encoding length ";
      end = A.RangeError_checkValidRange(start, end, source.length, _null, _null);
      inverseAlphabet = $.$get$_Base64Decoder__inverseAlphabet();
      for (i = start, sliceStart = i, buffer = _null, firstPadding = -1, firstPaddingSourceIndex = -1, paddingCount = 0; i < end; i = i0) {
        i0 = i + 1;
        char = source.charCodeAt(i);
        if (char === 37) {
          i1 = i0 + 2;
          if (i1 <= end) {
            digit1 = A.hexDigitValue(source.charCodeAt(i0));
            digit2 = A.hexDigitValue(source.charCodeAt(i0 + 1));
            char0 = digit1 * 16 + digit2 - (digit2 & 256);
            if (char0 === 37)
              char0 = -1;
            i0 = i1;
          } else
            char0 = -1;
        } else
          char0 = char;
        if (0 <= char0 && char0 <= 127) {
          value = inverseAlphabet[char0];
          if (value >= 0) {
            char0 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charCodeAt(value);
            if (char0 === char)
              continue;
            char = char0;
          } else {
            if (value === -1) {
              if (firstPadding < 0) {
                t1 = buffer == null ? _null : buffer._contents.length;
                if (t1 == null)
                  t1 = 0;
                firstPadding = t1 + (i - sliceStart);
                firstPaddingSourceIndex = i;
              }
              ++paddingCount;
              if (char === 61)
                continue;
            }
            char = char0;
          }
          if (value !== -2) {
            if (buffer == null) {
              buffer = new A.StringBuffer("");
              t1 = buffer;
            } else
              t1 = buffer;
            t1._contents += B.JSString_methods.substring$2(source, sliceStart, i);
            t2 = A.Primitives_stringFromCharCode(char);
            t1._contents += t2;
            sliceStart = i0;
            continue;
          }
        }
        throw A.wrapException(A.FormatException$("Invalid base64 data", source, i));
      }
      if (buffer != null) {
        t1 = B.JSString_methods.substring$2(source, sliceStart, end);
        t1 = buffer._contents += t1;
        t2 = t1.length;
        if (firstPadding >= 0)
          A.Base64Codec__checkPadding(source, firstPaddingSourceIndex, end, firstPadding, paddingCount, t2);
        else {
          endLength = B.JSInt_methods.$mod(t2 - 1, 4) + 1;
          if (endLength === 1)
            throw A.wrapException(A.FormatException$(_s31_, source, end));
          for (; endLength < 4;) {
            t1 += "=";
            buffer._contents = t1;
            ++endLength;
          }
        }
        t1 = buffer._contents;
        return B.JSString_methods.replaceRange$3(source, start, end, t1.charCodeAt(0) == 0 ? t1 : t1);
      }
      $length = end - start;
      if (firstPadding >= 0)
        A.Base64Codec__checkPadding(source, firstPaddingSourceIndex, end, firstPadding, paddingCount, $length);
      else {
        endLength = B.JSInt_methods.$mod($length, 4);
        if (endLength === 1)
          throw A.wrapException(A.FormatException$(_s31_, source, end));
        if (endLength > 1)
          source = B.JSString_methods.replaceRange$3(source, end, end, endLength === 2 ? "==" : "=");
      }
      return source;
    }
  };
  A.Base64Encoder.prototype = {};
  A.Codec.prototype = {};
  A.Converter.prototype = {};
  A.Encoding.prototype = {};
  A.JsonUnsupportedObjectError.prototype = {
    toString$0(_) {
      var safeString = A.Error_safeToString(this.unsupportedObject);
      return (this.cause != null ? "Converting object to an encodable object failed:" : "Converting object did not return an encodable object:") + " " + safeString;
    }
  };
  A.JsonCyclicError.prototype = {
    toString$0(_) {
      return "Cyclic error in JSON stringify";
    }
  };
  A.JsonCodec.prototype = {
    decode$1(source) {
      var t1 = A._parseJson(source, this.get$decoder()._reviver);
      return t1;
    },
    encode$1(value) {
      var t1 = A._JsonStringStringifier_stringify(value, this.get$encoder()._toEncodable, null);
      return t1;
    },
    get$encoder() {
      return B.JsonEncoder_null;
    },
    get$decoder() {
      return B.JsonDecoder_null;
    }
  };
  A.JsonEncoder.prototype = {};
  A.JsonDecoder.prototype = {};
  A._JsonStringifier.prototype = {
    writeStringContent$1(s) {
      var t1, offset, i, charCode, t2, t3,
        $length = s.length;
      for (t1 = this._sink, offset = 0, i = 0; i < $length; ++i) {
        charCode = s.charCodeAt(i);
        if (charCode > 92) {
          if (charCode >= 55296) {
            t2 = charCode & 64512;
            if (t2 === 55296) {
              t3 = i + 1;
              t3 = !(t3 < $length && (s.charCodeAt(t3) & 64512) === 56320);
            } else
              t3 = false;
            if (!t3)
              if (t2 === 56320) {
                t2 = i - 1;
                t2 = !(t2 >= 0 && (s.charCodeAt(t2) & 64512) === 55296);
              } else
                t2 = false;
            else
              t2 = true;
            if (t2) {
              if (i > offset)
                t1._contents += B.JSString_methods.substring$2(s, offset, i);
              offset = i + 1;
              t2 = A.Primitives_stringFromCharCode(92);
              t1._contents += t2;
              t2 = A.Primitives_stringFromCharCode(117);
              t1._contents += t2;
              t2 = A.Primitives_stringFromCharCode(100);
              t1._contents += t2;
              t2 = charCode >>> 8 & 15;
              t2 = A.Primitives_stringFromCharCode(t2 < 10 ? 48 + t2 : 87 + t2);
              t1._contents += t2;
              t2 = charCode >>> 4 & 15;
              t2 = A.Primitives_stringFromCharCode(t2 < 10 ? 48 + t2 : 87 + t2);
              t1._contents += t2;
              t2 = charCode & 15;
              t2 = A.Primitives_stringFromCharCode(t2 < 10 ? 48 + t2 : 87 + t2);
              t1._contents += t2;
            }
          }
          continue;
        }
        if (charCode < 32) {
          if (i > offset)
            t1._contents += B.JSString_methods.substring$2(s, offset, i);
          offset = i + 1;
          t2 = A.Primitives_stringFromCharCode(92);
          t1._contents += t2;
          switch (charCode) {
            case 8:
              t2 = A.Primitives_stringFromCharCode(98);
              t1._contents += t2;
              break;
            case 9:
              t2 = A.Primitives_stringFromCharCode(116);
              t1._contents += t2;
              break;
            case 10:
              t2 = A.Primitives_stringFromCharCode(110);
              t1._contents += t2;
              break;
            case 12:
              t2 = A.Primitives_stringFromCharCode(102);
              t1._contents += t2;
              break;
            case 13:
              t2 = A.Primitives_stringFromCharCode(114);
              t1._contents += t2;
              break;
            default:
              t2 = A.Primitives_stringFromCharCode(117);
              t1._contents += t2;
              t2 = A.Primitives_stringFromCharCode(48);
              t1._contents = (t1._contents += t2) + t2;
              t2 = charCode >>> 4 & 15;
              t2 = A.Primitives_stringFromCharCode(t2 < 10 ? 48 + t2 : 87 + t2);
              t1._contents += t2;
              t2 = charCode & 15;
              t2 = A.Primitives_stringFromCharCode(t2 < 10 ? 48 + t2 : 87 + t2);
              t1._contents += t2;
              break;
          }
        } else if (charCode === 34 || charCode === 92) {
          if (i > offset)
            t1._contents += B.JSString_methods.substring$2(s, offset, i);
          offset = i + 1;
          t2 = A.Primitives_stringFromCharCode(92);
          t1._contents += t2;
          t2 = A.Primitives_stringFromCharCode(charCode);
          t1._contents += t2;
        }
      }
      if (offset === 0)
        t1._contents += s;
      else if (offset < $length)
        t1._contents += B.JSString_methods.substring$2(s, offset, $length);
    },
    _checkCycle$1(object) {
      var t1, t2, i, t3;
      for (t1 = this._seen, t2 = t1.length, i = 0; i < t2; ++i) {
        t3 = t1[i];
        if (object == null ? t3 == null : object === t3)
          throw A.wrapException(new A.JsonCyclicError(object, null));
      }
      t1.push(object);
    },
    writeObject$1(object) {
      var customJson, e, t1, exception, _this = this;
      if (_this.writeJsonValue$1(object))
        return;
      _this._checkCycle$1(object);
      try {
        customJson = _this._toEncodable.call$1(object);
        if (!_this.writeJsonValue$1(customJson)) {
          t1 = A.JsonUnsupportedObjectError$(object, null, _this.get$_partialResult());
          throw A.wrapException(t1);
        }
        _this._seen.pop();
      } catch (exception) {
        e = A.unwrapException(exception);
        t1 = A.JsonUnsupportedObjectError$(object, e, _this.get$_partialResult());
        throw A.wrapException(t1);
      }
    },
    writeJsonValue$1(object) {
      var t1, success, _this = this;
      if (typeof object == "number") {
        if (!isFinite(object))
          return false;
        _this._sink._contents += B.JSNumber_methods.toString$0(object);
        return true;
      } else if (object === true) {
        _this._sink._contents += "true";
        return true;
      } else if (object === false) {
        _this._sink._contents += "false";
        return true;
      } else if (object == null) {
        _this._sink._contents += "null";
        return true;
      } else if (typeof object == "string") {
        t1 = _this._sink;
        t1._contents += '"';
        _this.writeStringContent$1(object);
        t1._contents += '"';
        return true;
      } else if (type$.List_dynamic._is(object)) {
        _this._checkCycle$1(object);
        _this.writeList$1(object);
        _this._seen.pop();
        return true;
      } else if (type$.Map_dynamic_dynamic._is(object)) {
        _this._checkCycle$1(object);
        success = _this.writeMap$1(object);
        _this._seen.pop();
        return success;
      } else
        return false;
    },
    writeList$1(list) {
      var t2, i,
        t1 = this._sink;
      t1._contents += "[";
      t2 = J.getInterceptor$asx(list);
      if (t2.get$isNotEmpty(list)) {
        this.writeObject$1(t2.$index(list, 0));
        for (i = 1; i < t2.get$length(list); ++i) {
          t1._contents += ",";
          this.writeObject$1(t2.$index(list, i));
        }
      }
      t1._contents += "]";
    },
    writeMap$1(map) {
      var t1, keyValueList, i, t2, separator, _this = this, _box_0 = {};
      if (map.get$isEmpty(map)) {
        _this._sink._contents += "{}";
        return true;
      }
      t1 = map.get$length(map) * 2;
      keyValueList = A.List_List$filled(t1, null, false, type$.nullable_Object);
      i = _box_0.i = 0;
      _box_0.allStringKeys = true;
      map.forEach$1(0, new A._JsonStringifier_writeMap_closure(_box_0, keyValueList));
      if (!_box_0.allStringKeys)
        return false;
      t2 = _this._sink;
      t2._contents += "{";
      for (separator = '"'; i < t1; i += 2, separator = ',"') {
        t2._contents += separator;
        _this.writeStringContent$1(A._asString(keyValueList[i]));
        t2._contents += '":';
        _this.writeObject$1(keyValueList[i + 1]);
      }
      t2._contents += "}";
      return true;
    }
  };
  A._JsonStringifier_writeMap_closure.prototype = {
    call$2(key, value) {
      var t1, t2, t3, i;
      if (typeof key != "string")
        this._box_0.allStringKeys = false;
      t1 = this.keyValueList;
      t2 = this._box_0;
      t3 = t2.i;
      i = t2.i = t3 + 1;
      t1[t3] = key;
      t2.i = i + 1;
      t1[i] = value;
    },
    $signature: 58
  };
  A._JsonStringStringifier.prototype = {
    get$_partialResult() {
      var t1 = this._sink._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  A.Utf8Codec.prototype = {
    decode$1(codeUnits) {
      return B.Utf8Decoder_false.convert$1(codeUnits);
    }
  };
  A.Utf8Encoder.prototype = {
    convert$1(string) {
      var t1, encoder,
        end = A.RangeError_checkValidRange(0, null, string.length, null, null);
      if (end === 0)
        return new Uint8Array(0);
      t1 = new Uint8Array(end * 3);
      encoder = new A._Utf8Encoder(t1);
      if (encoder._fillBuffer$3(string, 0, end) !== end)
        encoder._writeReplacementCharacter$0();
      return B.NativeUint8List_methods.sublist$2(t1, 0, encoder._bufferIndex);
    }
  };
  A._Utf8Encoder.prototype = {
    _writeReplacementCharacter$0() {
      var _this = this,
        t1 = _this._convert$_buffer,
        t2 = _this._bufferIndex,
        t3 = _this._bufferIndex = t2 + 1;
      t1.$flags & 2 && A.throwUnsupportedOperation(t1);
      t1[t2] = 239;
      t2 = _this._bufferIndex = t3 + 1;
      t1[t3] = 191;
      _this._bufferIndex = t2 + 1;
      t1[t2] = 189;
    },
    _writeSurrogate$2(leadingSurrogate, nextCodeUnit) {
      var rune, t1, t2, t3, _this = this;
      if ((nextCodeUnit & 64512) === 56320) {
        rune = 65536 + ((leadingSurrogate & 1023) << 10) | nextCodeUnit & 1023;
        t1 = _this._convert$_buffer;
        t2 = _this._bufferIndex;
        t3 = _this._bufferIndex = t2 + 1;
        t1.$flags & 2 && A.throwUnsupportedOperation(t1);
        t1[t2] = rune >>> 18 | 240;
        t2 = _this._bufferIndex = t3 + 1;
        t1[t3] = rune >>> 12 & 63 | 128;
        t3 = _this._bufferIndex = t2 + 1;
        t1[t2] = rune >>> 6 & 63 | 128;
        _this._bufferIndex = t3 + 1;
        t1[t3] = rune & 63 | 128;
        return true;
      } else {
        _this._writeReplacementCharacter$0();
        return false;
      }
    },
    _fillBuffer$3(str, start, end) {
      var t1, t2, t3, stringIndex, codeUnit, t4, stringIndex0, t5, _this = this;
      if (start !== end && (str.charCodeAt(end - 1) & 64512) === 55296)
        --end;
      for (t1 = _this._convert$_buffer, t2 = t1.$flags | 0, t3 = t1.length, stringIndex = start; stringIndex < end; ++stringIndex) {
        codeUnit = str.charCodeAt(stringIndex);
        if (codeUnit <= 127) {
          t4 = _this._bufferIndex;
          if (t4 >= t3)
            break;
          _this._bufferIndex = t4 + 1;
          t2 & 2 && A.throwUnsupportedOperation(t1);
          t1[t4] = codeUnit;
        } else {
          t4 = codeUnit & 64512;
          if (t4 === 55296) {
            if (_this._bufferIndex + 4 > t3)
              break;
            stringIndex0 = stringIndex + 1;
            if (_this._writeSurrogate$2(codeUnit, str.charCodeAt(stringIndex0)))
              stringIndex = stringIndex0;
          } else if (t4 === 56320) {
            if (_this._bufferIndex + 3 > t3)
              break;
            _this._writeReplacementCharacter$0();
          } else if (codeUnit <= 2047) {
            t4 = _this._bufferIndex;
            t5 = t4 + 1;
            if (t5 >= t3)
              break;
            _this._bufferIndex = t5;
            t2 & 2 && A.throwUnsupportedOperation(t1);
            t1[t4] = codeUnit >>> 6 | 192;
            _this._bufferIndex = t5 + 1;
            t1[t5] = codeUnit & 63 | 128;
          } else {
            t4 = _this._bufferIndex;
            if (t4 + 2 >= t3)
              break;
            t5 = _this._bufferIndex = t4 + 1;
            t2 & 2 && A.throwUnsupportedOperation(t1);
            t1[t4] = codeUnit >>> 12 | 224;
            t4 = _this._bufferIndex = t5 + 1;
            t1[t5] = codeUnit >>> 6 & 63 | 128;
            _this._bufferIndex = t4 + 1;
            t1[t4] = codeUnit & 63 | 128;
          }
        }
      }
      return stringIndex;
    }
  };
  A.Utf8Decoder.prototype = {
    convert$1(codeUnits) {
      return new A._Utf8Decoder(this._allowMalformed)._convertGeneral$4(codeUnits, 0, null, true);
    }
  };
  A._Utf8Decoder.prototype = {
    _convertGeneral$4(codeUnits, start, maybeEnd, single) {
      var casted, bytes, errorOffset, t1, result, message, _this = this,
        end = A.RangeError_checkValidRange(start, maybeEnd, J.get$length$asx(codeUnits), null, null);
      if (start === end)
        return "";
      if (codeUnits instanceof Uint8Array) {
        casted = codeUnits;
        bytes = casted;
        errorOffset = 0;
      } else {
        bytes = A._Utf8Decoder__makeNativeUint8List(codeUnits, start, end);
        end -= start;
        errorOffset = start;
        start = 0;
      }
      if (end - start >= 15) {
        t1 = _this.allowMalformed;
        result = A._Utf8Decoder__convertInterceptedUint8List(t1, bytes, start, end);
        if (result != null) {
          if (!t1)
            return result;
          if (result.indexOf("\ufffd") < 0)
            return result;
        }
      }
      result = _this._decodeRecursive$4(bytes, start, end, true);
      t1 = _this._convert$_state;
      if ((t1 & 1) !== 0) {
        message = A._Utf8Decoder_errorDescription(t1);
        _this._convert$_state = 0;
        throw A.wrapException(A.FormatException$(message, codeUnits, errorOffset + _this._charOrIndex));
      }
      return result;
    },
    _decodeRecursive$4(bytes, start, end, single) {
      var mid, s1, _this = this;
      if (end - start > 1000) {
        mid = B.JSInt_methods._tdivFast$1(start + end, 2);
        s1 = _this._decodeRecursive$4(bytes, start, mid, false);
        if ((_this._convert$_state & 1) !== 0)
          return s1;
        return s1 + _this._decodeRecursive$4(bytes, mid, end, single);
      }
      return _this.decodeGeneral$4(bytes, start, end, single);
    },
    decodeGeneral$4(bytes, start, end, single) {
      var t1, type, t2, i0, markEnd, i1, m, _this = this, _65533 = 65533,
        state = _this._convert$_state,
        char = _this._charOrIndex,
        buffer = new A.StringBuffer(""),
        i = start + 1,
        byte = bytes[start];
      $label0$0:
        for (t1 = _this.allowMalformed; true;) {
          for (; true; i = i0) {
            type = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFFFFFFFFFFFFFFFFGGGGGGGGGGGGGGGGHHHHHHHHHHHHHHHHHHHHHHHHHHHIHHHJEEBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBKCCCCCCCCCCCCDCLONNNMEEEEEEEEEEE".charCodeAt(byte) & 31;
            char = state <= 32 ? byte & 61694 >>> type : (byte & 63 | char << 6) >>> 0;
            state = " \x000:XECCCCCN:lDb \x000:XECCCCCNvlDb \x000:XECCCCCN:lDb AAAAA\x00\x00\x00\x00\x00AAAAA00000AAAAA:::::AAAAAGG000AAAAA00KKKAAAAAG::::AAAAA:IIIIAAAAA000\x800AAAAA\x00\x00\x00\x00 AAAAA".charCodeAt(state + type);
            if (state === 0) {
              t2 = A.Primitives_stringFromCharCode(char);
              buffer._contents += t2;
              if (i === end)
                break $label0$0;
              break;
            } else if ((state & 1) !== 0) {
              if (t1)
                switch (state) {
                  case 69:
                  case 67:
                    t2 = A.Primitives_stringFromCharCode(_65533);
                    buffer._contents += t2;
                    break;
                  case 65:
                    t2 = A.Primitives_stringFromCharCode(_65533);
                    buffer._contents += t2;
                    --i;
                    break;
                  default:
                    t2 = A.Primitives_stringFromCharCode(_65533);
                    buffer._contents = (buffer._contents += t2) + t2;
                    break;
                }
              else {
                _this._convert$_state = state;
                _this._charOrIndex = i - 1;
                return "";
              }
              state = 0;
            }
            if (i === end)
              break $label0$0;
            i0 = i + 1;
            byte = bytes[i];
          }
          i0 = i + 1;
          byte = bytes[i];
          if (byte < 128) {
            while (true) {
              if (!(i0 < end)) {
                markEnd = end;
                break;
              }
              i1 = i0 + 1;
              byte = bytes[i0];
              if (byte >= 128) {
                markEnd = i1 - 1;
                i0 = i1;
                break;
              }
              i0 = i1;
            }
            if (markEnd - i < 20)
              for (m = i; m < markEnd; ++m) {
                t2 = A.Primitives_stringFromCharCode(bytes[m]);
                buffer._contents += t2;
              }
            else {
              t2 = A.String_String$fromCharCodes(bytes, i, markEnd);
              buffer._contents += t2;
            }
            if (markEnd === end)
              break $label0$0;
            i = i0;
          } else
            i = i0;
        }
      if (single && state > 32)
        if (t1) {
          t1 = A.Primitives_stringFromCharCode(_65533);
          buffer._contents += t1;
        } else {
          _this._convert$_state = 77;
          _this._charOrIndex = end;
          return "";
        }
      _this._convert$_state = state;
      _this._charOrIndex = char;
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  A.NoSuchMethodError_toString_closure.prototype = {
    call$2(key, value) {
      var t1 = this.sb,
        t2 = this._box_0,
        t3 = (t1._contents += t2.comma) + key.__internal$_name;
      t1._contents = t3;
      t1._contents = t3 + ": ";
      t3 = A.Error_safeToString(value);
      t1._contents += t3;
      t2.comma = ", ";
    },
    $signature: 135
  };
  A.Duration.prototype = {
    $add(_, other) {
      return new A.Duration(this._duration + other._duration);
    },
    $sub(_, other) {
      return new A.Duration(this._duration - other._duration);
    },
    $mul(_, factor) {
      return new A.Duration(B.JSNumber_methods.round$0(this._duration * factor));
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.Duration && this._duration === other._duration;
    },
    get$hashCode(_) {
      return B.JSInt_methods.get$hashCode(this._duration);
    },
    compareTo$1(_, other) {
      return B.JSInt_methods.compareTo$1(this._duration, other._duration);
    },
    toString$0(_) {
      var sign, minutes, minutesPadding, seconds, secondsPadding,
        microseconds = this._duration,
        hours = B.JSInt_methods._tdivFast$1(microseconds, 3600000000),
        microseconds0 = microseconds % 3600000000;
      if (microseconds < 0) {
        hours = 0 - hours;
        microseconds = 0 - microseconds0;
        sign = "-";
      } else {
        microseconds = microseconds0;
        sign = "";
      }
      minutes = B.JSInt_methods._tdivFast$1(microseconds, 60000000);
      microseconds %= 60000000;
      minutesPadding = minutes < 10 ? "0" : "";
      seconds = B.JSInt_methods._tdivFast$1(microseconds, 1000000);
      secondsPadding = seconds < 10 ? "0" : "";
      return sign + hours + ":" + minutesPadding + minutes + ":" + secondsPadding + seconds + "." + B.JSString_methods.padLeft$2(B.JSInt_methods.toString$0(microseconds % 1000000), 6, "0");
    },
    $isComparable: 1
  };
  A._Enum.prototype = {
    toString$0(_) {
      return this._enumToString$0();
    }
  };
  A.Error.prototype = {
    get$stackTrace() {
      return A.Primitives_extractStackTrace(this);
    }
  };
  A.AssertionError.prototype = {
    toString$0(_) {
      var t1 = this.message;
      if (t1 != null)
        return "Assertion failed: " + A.Error_safeToString(t1);
      return "Assertion failed";
    },
    get$message() {
      return this.message;
    }
  };
  A.TypeError.prototype = {};
  A.ArgumentError.prototype = {
    get$_errorName() {
      return "Invalid argument" + (!this._hasValue ? "(s)" : "");
    },
    get$_errorExplanation() {
      return "";
    },
    toString$0(_) {
      var _this = this,
        $name = _this.name,
        nameString = $name == null ? "" : " (" + $name + ")",
        message = _this.message,
        messageString = message == null ? "" : ": " + A.S(message),
        prefix = _this.get$_errorName() + nameString + messageString;
      if (!_this._hasValue)
        return prefix;
      return prefix + _this.get$_errorExplanation() + ": " + A.Error_safeToString(_this.get$invalidValue());
    },
    get$invalidValue() {
      return this.invalidValue;
    }
  };
  A.RangeError.prototype = {
    get$invalidValue() {
      return this.invalidValue;
    },
    get$_errorName() {
      return "RangeError";
    },
    get$_errorExplanation() {
      var explanation,
        start = this.start,
        end = this.end;
      if (start == null)
        explanation = end != null ? ": Not less than or equal to " + A.S(end) : "";
      else if (end == null)
        explanation = ": Not greater than or equal to " + A.S(start);
      else if (end > start)
        explanation = ": Not in inclusive range " + A.S(start) + ".." + A.S(end);
      else
        explanation = end < start ? ": Valid value range is empty" : ": Only valid value is " + A.S(start);
      return explanation;
    }
  };
  A.IndexError.prototype = {
    get$invalidValue() {
      return this.invalidValue;
    },
    get$_errorName() {
      return "RangeError";
    },
    get$_errorExplanation() {
      if (this.invalidValue < 0)
        return ": index must not be negative";
      var t1 = this.length;
      if (t1 === 0)
        return ": no indices are valid";
      return ": index should be less than " + t1;
    },
    get$length(receiver) {
      return this.length;
    }
  };
  A.NoSuchMethodError.prototype = {
    toString$0(_) {
      var $arguments, t1, _i, t2, t3, argument, receiverText, actualParameters, _this = this, _box_0 = {},
        sb = new A.StringBuffer("");
      _box_0.comma = "";
      $arguments = _this._core$_arguments;
      for (t1 = $arguments.length, _i = 0, t2 = "", t3 = ""; _i < t1; ++_i, t3 = ", ") {
        argument = $arguments[_i];
        sb._contents = t2 + t3;
        t2 = A.Error_safeToString(argument);
        t2 = sb._contents += t2;
        _box_0.comma = ", ";
      }
      _this._namedArguments.forEach$1(0, new A.NoSuchMethodError_toString_closure(_box_0, sb));
      receiverText = A.Error_safeToString(_this._core$_receiver);
      actualParameters = sb.toString$0(0);
      return "NoSuchMethodError: method not found: '" + _this._memberName.__internal$_name + "'\nReceiver: " + receiverText + "\nArguments: [" + actualParameters + "]";
    }
  };
  A.UnsupportedError.prototype = {
    toString$0(_) {
      return "Unsupported operation: " + this.message;
    }
  };
  A.UnimplementedError.prototype = {
    toString$0(_) {
      var message = this.message;
      return message != null ? "UnimplementedError: " + message : "UnimplementedError";
    }
  };
  A.StateError.prototype = {
    toString$0(_) {
      return "Bad state: " + this.message;
    }
  };
  A.ConcurrentModificationError.prototype = {
    toString$0(_) {
      var t1 = this.modifiedObject;
      if (t1 == null)
        return "Concurrent modification during iteration.";
      return "Concurrent modification during iteration: " + A.Error_safeToString(t1) + ".";
    }
  };
  A.OutOfMemoryError.prototype = {
    toString$0(_) {
      return "Out of Memory";
    },
    get$stackTrace() {
      return null;
    },
    $isError: 1
  };
  A.StackOverflowError.prototype = {
    toString$0(_) {
      return "Stack Overflow";
    },
    get$stackTrace() {
      return null;
    },
    $isError: 1
  };
  A._Exception.prototype = {
    toString$0(_) {
      return "Exception: " + this.message;
    },
    $isException: 1
  };
  A.FormatException.prototype = {
    toString$0(_) {
      var t1, lineNum, lineStart, previousCharWasCR, i, char, lineEnd, prefix, postfix, end, start,
        message = this.message,
        report = "" !== message ? "FormatException: " + message : "FormatException",
        offset = this.offset,
        source = this.source;
      if (typeof source == "string") {
        if (offset != null)
          t1 = offset < 0 || offset > source.length;
        else
          t1 = false;
        if (t1)
          offset = null;
        if (offset == null) {
          if (source.length > 78)
            source = B.JSString_methods.substring$2(source, 0, 75) + "...";
          return report + "\n" + source;
        }
        for (lineNum = 1, lineStart = 0, previousCharWasCR = false, i = 0; i < offset; ++i) {
          char = source.charCodeAt(i);
          if (char === 10) {
            if (lineStart !== i || !previousCharWasCR)
              ++lineNum;
            lineStart = i + 1;
            previousCharWasCR = false;
          } else if (char === 13) {
            ++lineNum;
            lineStart = i + 1;
            previousCharWasCR = true;
          }
        }
        report = lineNum > 1 ? report + (" (at line " + lineNum + ", character " + (offset - lineStart + 1) + ")\n") : report + (" (at character " + (offset + 1) + ")\n");
        lineEnd = source.length;
        for (i = offset; i < lineEnd; ++i) {
          char = source.charCodeAt(i);
          if (char === 10 || char === 13) {
            lineEnd = i;
            break;
          }
        }
        prefix = "";
        if (lineEnd - lineStart > 78) {
          postfix = "...";
          if (offset - lineStart < 75) {
            end = lineStart + 75;
            start = lineStart;
          } else {
            if (lineEnd - offset < 75) {
              start = lineEnd - 75;
              end = lineEnd;
              postfix = "";
            } else {
              start = offset - 36;
              end = offset + 36;
            }
            prefix = "...";
          }
        } else {
          end = lineEnd;
          start = lineStart;
          postfix = "";
        }
        return report + prefix + B.JSString_methods.substring$2(source, start, end) + postfix + "\n" + B.JSString_methods.$mul(" ", offset - start + prefix.length) + "^\n";
      } else
        return offset != null ? report + (" (at offset " + A.S(offset) + ")") : report;
    },
    $isException: 1
  };
  A.Iterable.prototype = {
    cast$1$0(_, $R) {
      return A.CastIterable_CastIterable(this, A.instanceType(this)._eval$1("Iterable.E"), $R);
    },
    followedBy$1(_, other) {
      var _this = this;
      if (type$.EfficientLengthIterable_dynamic._is(_this))
        return A.FollowedByIterable_FollowedByIterable$firstEfficient(_this, other, A.instanceType(_this)._eval$1("Iterable.E"));
      return new A.FollowedByIterable(_this, other, A.instanceType(_this)._eval$1("FollowedByIterable<Iterable.E>"));
    },
    map$1$1(_, toElement, $T) {
      return A.MappedIterable_MappedIterable(this, toElement, A.instanceType(this)._eval$1("Iterable.E"), $T);
    },
    where$1(_, test) {
      return new A.WhereIterable(this, test, A.instanceType(this)._eval$1("WhereIterable<Iterable.E>"));
    },
    contains$1(_, element) {
      var t1;
      for (t1 = this.get$iterator(this); t1.moveNext$0();)
        if (J.$eq$(t1.get$current(), element))
          return true;
      return false;
    },
    forEach$1(_, action) {
      var t1;
      for (t1 = this.get$iterator(this); t1.moveNext$0();)
        action.call$1(t1.get$current());
    },
    join$1(_, separator) {
      var first, t1,
        iterator = this.get$iterator(this);
      if (!iterator.moveNext$0())
        return "";
      first = J.toString$0$(iterator.get$current());
      if (!iterator.moveNext$0())
        return first;
      if (separator.length === 0) {
        t1 = first;
        do
          t1 += J.toString$0$(iterator.get$current());
        while (iterator.moveNext$0());
      } else {
        t1 = first;
        do
          t1 = t1 + separator + J.toString$0$(iterator.get$current());
        while (iterator.moveNext$0());
      }
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    join$0(_) {
      return this.join$1(0, "");
    },
    toList$1$growable(_, growable) {
      var t1 = A.instanceType(this)._eval$1("Iterable.E");
      if (growable)
        t1 = A.List_List$_of(this, t1);
      else {
        t1 = A.List_List$_of(this, t1);
        t1.$flags = 1;
        t1 = t1;
      }
      return t1;
    },
    toList$0(_) {
      return this.toList$1$growable(0, true);
    },
    toSet$0(_) {
      return A.LinkedHashSet_LinkedHashSet$of(this, A.instanceType(this)._eval$1("Iterable.E"));
    },
    get$length(_) {
      var count,
        it = this.get$iterator(this);
      for (count = 0; it.moveNext$0();)
        ++count;
      return count;
    },
    get$isEmpty(_) {
      return !this.get$iterator(this).moveNext$0();
    },
    get$isNotEmpty(_) {
      return !this.get$isEmpty(this);
    },
    take$1(_, count) {
      return A.TakeIterable_TakeIterable(this, count, A.instanceType(this)._eval$1("Iterable.E"));
    },
    skip$1(_, count) {
      return A.SkipIterable_SkipIterable(this, count, A.instanceType(this)._eval$1("Iterable.E"));
    },
    get$first(_) {
      var it = this.get$iterator(this);
      if (!it.moveNext$0())
        throw A.wrapException(A.IterableElementError_noElement());
      return it.get$current();
    },
    get$last(_) {
      var result,
        it = this.get$iterator(this);
      if (!it.moveNext$0())
        throw A.wrapException(A.IterableElementError_noElement());
      do
        result = it.get$current();
      while (it.moveNext$0());
      return result;
    },
    elementAt$1(_, index) {
      var iterator, skipCount;
      A.RangeError_checkNotNegative(index, "index");
      iterator = this.get$iterator(this);
      for (skipCount = index; iterator.moveNext$0();) {
        if (skipCount === 0)
          return iterator.get$current();
        --skipCount;
      }
      throw A.wrapException(A.IndexError$withLength(index, index - skipCount, this, null, "index"));
    },
    toString$0(_) {
      return A.Iterable_iterableToShortString(this, "(", ")");
    }
  };
  A.MapEntry.prototype = {
    toString$0(_) {
      return "MapEntry(" + A.S(this.key) + ": " + A.S(this.value) + ")";
    }
  };
  A.Null.prototype = {
    get$hashCode(_) {
      return A.Object.prototype.get$hashCode.call(this, 0);
    },
    toString$0(_) {
      return "null";
    }
  };
  A.Object.prototype = {$isObject: 1,
    $eq(_, other) {
      return this === other;
    },
    get$hashCode(_) {
      return A.Primitives_objectHashCode(this);
    },
    toString$0(_) {
      return "Instance of '" + A.Primitives_objectTypeName(this) + "'";
    },
    get$runtimeType(_) {
      return A.getRuntimeTypeOfDartObject(this);
    },
    toString() {
      return this.toString$0(this);
    }
  };
  A._StringStackTrace.prototype = {
    toString$0(_) {
      return this._stackTrace;
    },
    $isStackTrace: 1
  };
  A.Stopwatch.prototype = {
    get$elapsedMicroseconds() {
      var ticks,
        t1 = this._stop;
      if (t1 == null)
        t1 = $.Primitives_timerTicks.call$0();
      ticks = t1 - this._core$_start;
      if ($.$get$Stopwatch__frequency() === 1000000)
        return ticks;
      return ticks * 1000;
    },
    start$0() {
      var _this = this,
        $stop = _this._stop;
      if ($stop != null) {
        _this._core$_start = _this._core$_start + ($.Primitives_timerTicks.call$0() - $stop);
        _this._stop = null;
      }
    },
    reset$0() {
      var t1 = this._stop;
      this._core$_start = t1 == null ? $.Primitives_timerTicks.call$0() : t1;
    }
  };
  A.StringBuffer.prototype = {
    get$length(_) {
      return this._contents.length;
    },
    toString$0(_) {
      var t1 = this._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  A.Uri__parseIPv4Address_error.prototype = {
    call$2(msg, position) {
      throw A.wrapException(A.FormatException$("Illegal IPv4 address, " + msg, this.host, position));
    },
    $signature: 137
  };
  A.Uri_parseIPv6Address_error.prototype = {
    call$2(msg, position) {
      throw A.wrapException(A.FormatException$("Illegal IPv6 address, " + msg, this.host, position));
    },
    $signature: 148
  };
  A.Uri_parseIPv6Address_parseHex.prototype = {
    call$2(start, end) {
      var value;
      if (end - start > 4)
        this.error.call$2("an IPv6 part can only contain a maximum of 4 hex digits", start);
      value = A.int_parse(B.JSString_methods.substring$2(this.host, start, end), 16);
      if (value < 0 || value > 65535)
        this.error.call$2("each part must be in the range of `0x0..0xFFFF`", start);
      return value;
    },
    $signature: 174
  };
  A._Uri.prototype = {
    get$_text() {
      var t1, t2, t3, t4, _this = this,
        value = _this.___Uri__text_FI;
      if (value === $) {
        t1 = _this.scheme;
        t2 = t1.length !== 0 ? t1 + ":" : "";
        t3 = _this._host;
        t4 = t3 == null;
        if (!t4 || t1 === "file") {
          t1 = t2 + "//";
          t2 = _this._userInfo;
          if (t2.length !== 0)
            t1 = t1 + t2 + "@";
          if (!t4)
            t1 += t3;
          t2 = _this._port;
          if (t2 != null)
            t1 = t1 + ":" + A.S(t2);
        } else
          t1 = t2;
        t1 += _this.path;
        t2 = _this._query;
        if (t2 != null)
          t1 = t1 + "?" + t2;
        t2 = _this._fragment;
        if (t2 != null)
          t1 = t1 + "#" + t2;
        value = _this.___Uri__text_FI = t1.charCodeAt(0) == 0 ? t1 : t1;
      }
      return value;
    },
    get$pathSegments() {
      var pathToSplit, result, _this = this,
        value = _this.___Uri_pathSegments_FI;
      if (value === $) {
        pathToSplit = _this.path;
        if (pathToSplit.length !== 0 && pathToSplit.charCodeAt(0) === 47)
          pathToSplit = B.JSString_methods.substring$1(pathToSplit, 1);
        result = pathToSplit.length === 0 ? B.List_empty : A.List_List$unmodifiable(new A.MappedListIterable(A._setArrayType(pathToSplit.split("/"), type$.JSArray_String), A.core_Uri_decodeComponent$closure(), type$.MappedListIterable_String_dynamic), type$.String);
        _this.___Uri_pathSegments_FI !== $ && A.throwUnnamedLateFieldADI();
        value = _this.___Uri_pathSegments_FI = result;
      }
      return value;
    },
    get$hashCode(_) {
      var result, _this = this,
        value = _this.___Uri_hashCode_FI;
      if (value === $) {
        result = B.JSString_methods.get$hashCode(_this.get$_text());
        _this.___Uri_hashCode_FI !== $ && A.throwUnnamedLateFieldADI();
        _this.___Uri_hashCode_FI = result;
        value = result;
      }
      return value;
    },
    get$userInfo() {
      return this._userInfo;
    },
    get$host() {
      var host = this._host;
      if (host == null)
        return "";
      if (B.JSString_methods.startsWith$1(host, "[") && !B.JSString_methods.startsWith$2(host, "v", 1))
        return B.JSString_methods.substring$2(host, 1, host.length - 1);
      return host;
    },
    get$port() {
      var t1 = this._port;
      return t1 == null ? A._Uri__defaultPort(this.scheme) : t1;
    },
    get$query() {
      var t1 = this._query;
      return t1 == null ? "" : t1;
    },
    get$fragment() {
      var t1 = this._fragment;
      return t1 == null ? "" : t1;
    },
    get$hasAuthority() {
      return this._host != null;
    },
    get$hasQuery() {
      return this._query != null;
    },
    get$hasFragment() {
      return this._fragment != null;
    },
    toString$0(_) {
      return this.get$_text();
    },
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      t1 = false;
      if (type$.Uri._is(other))
        if (_this.scheme === other.get$scheme())
          if (_this._host != null === other.get$hasAuthority())
            if (_this._userInfo === other.get$userInfo())
              if (_this.get$host() === other.get$host())
                if (_this.get$port() === other.get$port())
                  if (_this.path === other.get$path()) {
                    t2 = _this._query;
                    t3 = t2 == null;
                    if (!t3 === other.get$hasQuery()) {
                      if (t3)
                        t2 = "";
                      if (t2 === other.get$query()) {
                        t2 = _this._fragment;
                        t3 = t2 == null;
                        if (!t3 === other.get$hasFragment()) {
                          t1 = t3 ? "" : t2;
                          t1 = t1 === other.get$fragment();
                        }
                      }
                    }
                  }
      return t1;
    },
    $isUri: 1,
    get$scheme() {
      return this.scheme;
    },
    get$path() {
      return this.path;
    }
  };
  A.UriData.prototype = {
    get$uri() {
      var t2, queryIndex, end, query, _this = this, _null = null,
        t1 = _this._uriCache;
      if (t1 == null) {
        t1 = _this._text;
        t2 = _this._separatorIndices[0] + 1;
        queryIndex = B.JSString_methods.indexOf$2(t1, "?", t2);
        end = t1.length;
        if (queryIndex >= 0) {
          query = A._Uri__normalizeOrSubstring(t1, queryIndex + 1, end, 256, false, false);
          end = queryIndex;
        } else
          query = _null;
        t1 = _this._uriCache = new A._DataUri("data", "", _null, _null, A._Uri__normalizeOrSubstring(t1, t2, end, 128, false, false), query, _null);
      }
      return t1;
    },
    toString$0(_) {
      var t1 = this._text;
      return this._separatorIndices[0] === -1 ? "data:" + t1 : t1;
    }
  };
  A._SimpleUri.prototype = {
    get$hasAuthority() {
      return this._hostStart > 0;
    },
    get$hasQuery() {
      return this._queryStart < this._fragmentStart;
    },
    get$hasFragment() {
      return this._fragmentStart < this._uri.length;
    },
    get$scheme() {
      var t1 = this._schemeCache;
      return t1 == null ? this._schemeCache = this._computeScheme$0() : t1;
    },
    _computeScheme$0() {
      var t2, _this = this,
        t1 = _this._schemeEnd;
      if (t1 <= 0)
        return "";
      t2 = t1 === 4;
      if (t2 && B.JSString_methods.startsWith$1(_this._uri, "http"))
        return "http";
      if (t1 === 5 && B.JSString_methods.startsWith$1(_this._uri, "https"))
        return "https";
      if (t2 && B.JSString_methods.startsWith$1(_this._uri, "file"))
        return "file";
      if (t1 === 7 && B.JSString_methods.startsWith$1(_this._uri, "package"))
        return "package";
      return B.JSString_methods.substring$2(_this._uri, 0, t1);
    },
    get$userInfo() {
      var t1 = this._hostStart,
        t2 = this._schemeEnd + 3;
      return t1 > t2 ? B.JSString_methods.substring$2(this._uri, t2, t1 - 1) : "";
    },
    get$host() {
      var t1 = this._hostStart;
      return t1 > 0 ? B.JSString_methods.substring$2(this._uri, t1, this._portStart) : "";
    },
    get$port() {
      var t1, _this = this;
      if (_this._hostStart > 0 && _this._portStart + 1 < _this._pathStart)
        return A.int_parse(B.JSString_methods.substring$2(_this._uri, _this._portStart + 1, _this._pathStart), null);
      t1 = _this._schemeEnd;
      if (t1 === 4 && B.JSString_methods.startsWith$1(_this._uri, "http"))
        return 80;
      if (t1 === 5 && B.JSString_methods.startsWith$1(_this._uri, "https"))
        return 443;
      return 0;
    },
    get$path() {
      return B.JSString_methods.substring$2(this._uri, this._pathStart, this._queryStart);
    },
    get$query() {
      var t1 = this._queryStart,
        t2 = this._fragmentStart;
      return t1 < t2 ? B.JSString_methods.substring$2(this._uri, t1 + 1, t2) : "";
    },
    get$fragment() {
      var t1 = this._fragmentStart,
        t2 = this._uri;
      return t1 < t2.length ? B.JSString_methods.substring$1(t2, t1 + 1) : "";
    },
    get$pathSegments() {
      var parts, i,
        start = this._pathStart,
        end = this._queryStart,
        t1 = this._uri;
      if (B.JSString_methods.startsWith$2(t1, "/", start))
        ++start;
      if (start === end)
        return B.List_empty;
      parts = A._setArrayType([], type$.JSArray_String);
      for (i = start; i < end; ++i)
        if (t1.charCodeAt(i) === 47) {
          parts.push(B.JSString_methods.substring$2(t1, start, i));
          start = i + 1;
        }
      parts.push(B.JSString_methods.substring$2(t1, start, end));
      return A.List_List$unmodifiable(parts, type$.String);
    },
    get$hashCode(_) {
      var t1 = this._hashCodeCache;
      return t1 == null ? this._hashCodeCache = B.JSString_methods.get$hashCode(this._uri) : t1;
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      return type$.Uri._is(other) && this._uri === other.toString$0(0);
    },
    toString$0(_) {
      return this._uri;
    },
    $isUri: 1
  };
  A._DataUri.prototype = {};
  A.Expando.prototype = {
    $indexSet(_, object, value) {
      this._jsWeakMap.set(object, value);
    },
    toString$0(_) {
      return "Expando:null";
    }
  };
  A._JSRandom.prototype = {
    nextInt$1(max) {
      if (max <= 0 || max > 4294967296)
        throw A.wrapException(A.RangeError$(string$.max_mu + max));
      return Math.random() * max >>> 0;
    },
    nextBool$0() {
      return Math.random() < 0.5;
    }
  };
  A._Random.prototype = {
    _Random$1(seed) {
      var low, high, tmplow, low0, t1, t2, t3, _this = this, _4294967296 = 4294967296;
      do {
        low = seed >>> 0;
        seed = B.JSInt_methods._tdivFast$1(seed - low, _4294967296);
        high = seed >>> 0;
        seed = B.JSInt_methods._tdivFast$1(seed - high, _4294967296);
        tmplow = (~low >>> 0) + (low << 21 >>> 0);
        low0 = tmplow >>> 0;
        high = (~high >>> 0) + ((high << 21 | low >>> 11) >>> 0) + B.JSInt_methods._tdivFast$1(tmplow - low0, _4294967296) >>> 0;
        tmplow = ((low0 ^ (low0 >>> 24 | high << 8)) >>> 0) * 265;
        low = tmplow >>> 0;
        high = ((high ^ high >>> 24) >>> 0) * 265 + B.JSInt_methods._tdivFast$1(tmplow - low, _4294967296) >>> 0;
        tmplow = ((low ^ (low >>> 14 | high << 18)) >>> 0) * 21;
        low = tmplow >>> 0;
        high = ((high ^ high >>> 14) >>> 0) * 21 + B.JSInt_methods._tdivFast$1(tmplow - low, _4294967296) >>> 0;
        low = (low ^ (low >>> 28 | high << 4)) >>> 0;
        high = (high ^ high >>> 28) >>> 0;
        tmplow = (low << 31 >>> 0) + low;
        low0 = tmplow >>> 0;
        t1 = B.JSInt_methods._tdivFast$1(tmplow - low0, _4294967296);
        tmplow = _this._lo * 1037;
        t2 = _this._lo = tmplow >>> 0;
        t3 = _this._hi * 1037 + B.JSInt_methods._tdivFast$1(tmplow - t2, _4294967296) >>> 0;
        _this._hi = t3;
        t2 = (t2 ^ low0) >>> 0;
        _this._lo = t2;
        t1 = (t3 ^ high + ((high << 31 | low >>> 1) >>> 0) + t1 >>> 0) >>> 0;
        _this._hi = t1;
      } while (seed !== 0);
      if (t1 === 0 && t2 === 0)
        _this._lo = 23063;
      _this._nextState$0();
      _this._nextState$0();
      _this._nextState$0();
      _this._nextState$0();
    },
    _nextState$0() {
      var _this = this,
        t1 = _this._lo,
        tmpHi = 4294901760 * t1,
        tmpHiLo = tmpHi >>> 0,
        tmpLo = 55905 * t1,
        tmpLoLo = tmpLo >>> 0,
        newLo = tmpLoLo + tmpHiLo + _this._hi;
      t1 = newLo >>> 0;
      _this._lo = t1;
      _this._hi = B.JSInt_methods._tdivFast$1(tmpLo - tmpLoLo + (tmpHi - tmpHiLo) + (newLo - t1), 4294967296) >>> 0;
    },
    nextInt$1(max) {
      var t1, rnd32, result, _this = this;
      if (max <= 0 || max > 4294967296)
        throw A.wrapException(A.RangeError$(string$.max_mu + max));
      t1 = max - 1;
      if ((max & t1) >>> 0 === 0) {
        _this._nextState$0();
        return (_this._lo & t1) >>> 0;
      }
      do {
        _this._nextState$0();
        rnd32 = _this._lo;
        result = rnd32 % max;
      } while (rnd32 - result + max >= 4294967296);
      return result;
    },
    nextBool$0() {
      this._nextState$0();
      return (this._lo & 1) === 0;
    }
  };
  A.Endian.prototype = {};
  A.StringCharacterRange.prototype = {
    get$current() {
      var _this = this,
        t1 = _this._currentCache;
      return t1 == null ? _this._currentCache = B.JSString_methods.substring$2(_this._characters_impl$_string, _this._characters_impl$_start, _this._characters_impl$_end) : t1;
    },
    moveNext$0() {
      return this._advanceEnd$2(1, this._characters_impl$_end);
    },
    _advanceEnd$2(count, newStart) {
      var index, t1, t2, state, char, nextIndex, category, nextChar, t3, _this = this;
      if (count > 0) {
        index = _this._characters_impl$_end;
        for (t1 = _this._characters_impl$_string, t2 = t1.length, state = 176; index < t2; index = nextIndex) {
          char = t1.charCodeAt(index);
          nextIndex = index + 1;
          if ((char & 64512) !== 55296)
            category = A.low(char);
          else {
            category = 2;
            if (nextIndex < t2) {
              nextChar = t1.charCodeAt(nextIndex);
              if ((nextChar & 64512) === 56320) {
                ++nextIndex;
                category = A.high(char, nextChar);
              }
            }
          }
          state = string$.x200_000.charCodeAt(state & 240 | category);
          if ((state & 1) === 0) {
            --count;
            t3 = count === 0;
          } else
            t3 = false;
          if (t3) {
            _this._characters_impl$_start = newStart;
            _this._characters_impl$_end = index;
            _this._currentCache = null;
            return true;
          }
        }
        _this._characters_impl$_start = newStart;
        _this._characters_impl$_end = t2;
        _this._currentCache = null;
        return count === 1 && state !== 176;
      } else {
        _this._characters_impl$_start = newStart;
        _this._currentCache = null;
        return true;
      }
    }
  };
  A.Breaks.prototype = {
    nextBreak$0() {
      var t1, t2, t3, t4, char, category, nextChar, _this = this,
        _s192_ = string$.x200_000;
      for (t1 = _this.end, t2 = _this.base; t3 = _this.cursor, t3 < t1;) {
        t4 = _this.cursor = t3 + 1;
        char = t2.charCodeAt(t3);
        if ((char & 64512) !== 55296) {
          t4 = _s192_.charCodeAt(_this.state & 240 | A.low(char));
          _this.state = t4;
          if ((t4 & 1) === 0)
            return t3;
          continue;
        }
        category = 2;
        if (t4 < t1) {
          nextChar = t2.charCodeAt(t4);
          if ((nextChar & 64512) === 56320) {
            category = A.high(char, nextChar);
            ++_this.cursor;
          }
        }
        t4 = _s192_.charCodeAt(_this.state & 240 | category);
        _this.state = t4;
        if ((t4 & 1) === 0)
          return t3;
      }
      t1 = _s192_.charCodeAt(_this.state & 240 | 15);
      _this.state = t1;
      if ((t1 & 1) === 0)
        return t3;
      return -1;
    }
  };
  A.BackBreaks.prototype = {
    nextBreak$0() {
      var t1, t2, t3, t4, char, category, prevChar, t5, _this = this,
        _s208_ = string$.x10__0__;
      for (t1 = _this.start, t2 = _this.base; t3 = _this.cursor, t3 > t1;) {
        t4 = _this.cursor = t3 - 1;
        char = t2.charCodeAt(t4);
        if ((char & 64512) !== 56320) {
          t4 = _this.state = _s208_.charCodeAt(_this.state & 240 | A.low(char));
          if (((t4 >= 208 ? _this.state = A.lookAhead(t2, t1, _this.cursor, t4) : t4) & 1) === 0)
            return t3;
          continue;
        }
        category = 2;
        if (t4 >= t1) {
          prevChar = t2.charCodeAt(t4 - 1);
          if ((prevChar & 64512) === 55296) {
            category = A.high(prevChar, char);
            t4 = --_this.cursor;
          }
        }
        t5 = _this.state = _s208_.charCodeAt(_this.state & 240 | category);
        if (((t5 >= 208 ? _this.state = A.lookAhead(t2, t1, t4, t5) : t5) & 1) === 0)
          return t3;
      }
      t4 = _this.state = _s208_.charCodeAt(_this.state & 240 | 15);
      if (((t4 >= 208 ? _this.state = A.lookAhead(t2, t1, t3, t4) : t4) & 1) === 0)
        return _this.cursor;
      return -1;
    }
  };
  A.HeapPriorityQueue.prototype = {
    _elementAt$1(index) {
      var t1 = this._priority_queue$_queue[index];
      this.$ti._precomputed1._as(null);
      t1 = null;
      return t1;
    },
    get$length(_) {
      return this._priority_queue$_length;
    },
    toString$0(_) {
      var t1 = this._priority_queue$_queue;
      return A.Iterable_iterableToShortString(A.SubListIterable$(t1, 0, A.checkNotNullable(this._priority_queue$_length, "count", type$.int), A._arrayInstanceType(t1)._precomputed1), "(", ")");
    },
    _bubbleDown$2(element, index) {
      var t1, t2, t3, t4, leftChildIndex, leftChild, rightChild, minChild, minChildIndex, child, _this = this,
        rightChildIndex = index * 2 + 2;
      for (t1 = _this._priority_queue$_queue, t2 = _this.comparison, t3 = _this.$ti._precomputed1; t4 = _this._priority_queue$_length, rightChildIndex < t4; index = minChildIndex) {
        leftChildIndex = rightChildIndex - 1;
        leftChild = t1[leftChildIndex];
        t3._as(null);
        leftChild = null;
        rightChild = t1[rightChildIndex];
        t3._as(null);
        rightChild = null;
        if (t2.call$2(leftChild, rightChild) < 0) {
          minChild = leftChild;
          minChildIndex = leftChildIndex;
        } else {
          minChild = rightChild;
          minChildIndex = rightChildIndex;
        }
        if (t2.call$2(element, minChild) <= 0) {
          t1[index] = element;
          return;
        }
        t1[index] = minChild;
        rightChildIndex = minChildIndex * 2 + 2;
      }
      leftChildIndex = rightChildIndex - 1;
      if (leftChildIndex < t4) {
        child = _this._elementAt$1(leftChildIndex);
        if (t2.call$2(element, child) > 0) {
          t1[index] = child;
          index = leftChildIndex;
        }
      }
      t1[index] = element;
    }
  };
  A._ChannelCallbackRecord.prototype = {};
  A._Channel.prototype = {
    get$length(_) {
      return this._ui$_queue.get$length(0);
    },
    pop$0() {
      return this._ui$_queue.removeFirst$0();
    },
    _drainStep$0() {
      var _this = this;
      if (!_this._ui$_queue.get$isEmpty(0) && _this._channelCallbackRecord != null)
        _this.pop$0();
      else
        _this._draining = false;
    }
  };
  A.ChannelBuffers.prototype = {
    setListener$2($name, callback) {
      var channel = this._channels.putIfAbsent$2($name, new A.ChannelBuffers_setListener_closure()),
        t1 = channel._channelCallbackRecord;
      channel._channelCallbackRecord = new A._ChannelCallbackRecord(callback, $.Zone__current);
      if (t1 == null && !channel._draining) {
        channel._draining = true;
        A.scheduleMicrotask(channel.get$_drainStep());
      }
    }
  };
  A.ChannelBuffers_setListener_closure.prototype = {
    call$0() {
      return new A._Channel(A.ListQueue$(1, type$._StoredMessage));
    },
    $signature: 182
  };
  A.Scene.prototype = {};
  A._EngineLayerWrapper.prototype = {$isEngineLayer: 1};
  A._PictureLayer.prototype = {};
  A.TransformEngineLayer.prototype = {};
  A.OffsetEngineLayer.prototype = {};
  A.ClipRectEngineLayer.prototype = {};
  A.ClipRRectEngineLayer.prototype = {};
  A.ClipPathEngineLayer.prototype = {};
  A.OpacityEngineLayer.prototype = {};
  A.SceneBuilder.prototype = {
    _pushLayer$1(layer) {
      var t1, currentLayer, t2;
      if (this._rootLayer == null)
        this._rootLayer = layer;
      t1 = this._layerStack;
      if (t1.length !== 0) {
        currentLayer = B.JSArray_methods.get$last(t1);
        t2 = currentLayer._ui$_children;
        (t2 == null ? currentLayer._ui$_children = A._setArrayType([], type$.JSArray__EngineLayerWrapper) : t2).push(layer);
      }
      t1.push(layer);
    }
  };
  A.OffsetBase.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.OffsetBase && other._dx === this._dx && other._dy === this._dy;
    },
    get$hashCode(_) {
      return A.hashValues(this._dx, this._dy, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd);
    },
    toString$0(_) {
      return "OffsetBase(" + B.JSNumber_methods.toStringAsFixed$1(this._dx, 1) + ", " + B.JSNumber_methods.toStringAsFixed$1(this._dy, 1) + ")";
    }
  };
  A.Offset.prototype = {
    get$distance() {
      var t1 = this._dx,
        t2 = this._dy;
      return Math.sqrt(t1 * t1 + t2 * t2);
    },
    get$distanceSquared() {
      var t1 = this._dx,
        t2 = this._dy;
      return t1 * t1 + t2 * t2;
    },
    $sub(_, other) {
      return new A.Offset(this._dx - other._dx, this._dy - other._dy);
    },
    $add(_, other) {
      return new A.Offset(this._dx + other._dx, this._dy + other._dy);
    },
    $mul(_, operand) {
      return new A.Offset(this._dx * operand, this._dy * operand);
    },
    $div(_, operand) {
      return new A.Offset(this._dx / operand, this._dy / operand);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.Offset && other._dx === this._dx && other._dy === this._dy;
    },
    get$hashCode(_) {
      return A.hashValues(this._dx, this._dy, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd);
    },
    toString$0(_) {
      return "Offset(" + B.JSNumber_methods.toStringAsFixed$1(this._dx, 1) + ", " + B.JSNumber_methods.toStringAsFixed$1(this._dy, 1) + ")";
    }
  };
  A.Size.prototype = {
    get$isEmpty(_) {
      return this._dx <= 0 || this._dy <= 0;
    },
    $sub(_, other) {
      var _this = this;
      if (other instanceof A.Size)
        return new A.Offset(_this._dx - other._dx, _this._dy - other._dy);
      if (other instanceof A.Offset)
        return new A.Size(_this._dx - other._dx, _this._dy - other._dy);
      throw A.wrapException(A.ArgumentError$(other, null));
    },
    $add(_, other) {
      return new A.Size(this._dx + other._dx, this._dy + other._dy);
    },
    $mul(_, operand) {
      return new A.Size(this._dx * operand, this._dy * operand);
    },
    $div(_, operand) {
      return new A.Size(this._dx / operand, this._dy / operand);
    },
    center$1(origin) {
      return new A.Offset(origin._dx + this._dx / 2, origin._dy + this._dy / 2);
    },
    bottomRight$1(origin) {
      return new A.Offset(origin._dx + this._dx, origin._dy + this._dy);
    },
    contains$1(_, offset) {
      var t1 = offset._dx,
        t2 = false;
      if (t1 >= 0)
        if (t1 < this._dx) {
          t1 = offset._dy;
          t1 = t1 >= 0 && t1 < this._dy;
        } else
          t1 = t2;
      else
        t1 = t2;
      return t1;
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.Size && other._dx === this._dx && other._dy === this._dy;
    },
    get$hashCode(_) {
      return A.hashValues(this._dx, this._dy, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd);
    },
    toString$0(_) {
      return "Size(" + B.JSNumber_methods.toStringAsFixed$1(this._dx, 1) + ", " + B.JSNumber_methods.toStringAsFixed$1(this._dy, 1) + ")";
    }
  };
  A.Rect.prototype = {
    get$isFinite(_) {
      var _this = this;
      return isFinite(_this.left) && isFinite(_this.top) && isFinite(_this.right) && isFinite(_this.bottom);
    },
    get$isEmpty(_) {
      var _this = this;
      return _this.left >= _this.right || _this.top >= _this.bottom;
    },
    shift$1(offset) {
      var _this = this,
        t1 = offset._dx,
        t2 = offset._dy;
      return new A.Rect(_this.left + t1, _this.top + t2, _this.right + t1, _this.bottom + t2);
    },
    translate$2(translateX, translateY) {
      var _this = this;
      return new A.Rect(_this.left + translateX, _this.top + translateY, _this.right + translateX, _this.bottom + translateY);
    },
    inflate$1(delta) {
      var _this = this;
      return new A.Rect(_this.left - delta, _this.top - delta, _this.right + delta, _this.bottom + delta);
    },
    intersect$1(other) {
      var _this = this;
      return new A.Rect(Math.max(_this.left, other.left), Math.max(_this.top, other.top), Math.min(_this.right, other.right), Math.min(_this.bottom, other.bottom));
    },
    expandToInclude$1(other) {
      var _this = this;
      return new A.Rect(Math.min(_this.left, other.left), Math.min(_this.top, other.top), Math.max(_this.right, other.right), Math.max(_this.bottom, other.bottom));
    },
    get$shortestSide() {
      var _this = this;
      return Math.min(Math.abs(_this.right - _this.left), Math.abs(_this.bottom - _this.top));
    },
    get$center() {
      var _this = this,
        t1 = _this.left,
        t2 = _this.top;
      return new A.Offset(t1 + (_this.right - t1) / 2, t2 + (_this.bottom - t2) / 2);
    },
    contains$1(_, offset) {
      var _this = this,
        t1 = offset._dx,
        t2 = false;
      if (t1 >= _this.left)
        if (t1 < _this.right) {
          t1 = offset._dy;
          t1 = t1 >= _this.top && t1 < _this.bottom;
        } else
          t1 = t2;
      else
        t1 = t2;
      return t1;
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (A.getRuntimeTypeOfDartObject(_this) !== J.get$runtimeType$(other))
        return false;
      return other instanceof A.Rect && other.left === _this.left && other.top === _this.top && other.right === _this.right && other.bottom === _this.bottom;
    },
    get$hashCode(_) {
      var _this = this;
      return A.hashValues(_this.left, _this.top, _this.right, _this.bottom, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd);
    },
    toString$0(_) {
      var _this = this;
      return "Rect.fromLTRB(" + B.JSNumber_methods.toStringAsFixed$1(_this.left, 1) + ", " + B.JSNumber_methods.toStringAsFixed$1(_this.top, 1) + ", " + B.JSNumber_methods.toStringAsFixed$1(_this.right, 1) + ", " + B.JSNumber_methods.toStringAsFixed$1(_this.bottom, 1) + ")";
    }
  };
  A.Radius.prototype = {
    $sub(_, other) {
      return new A.Radius(this.x - other.x, this.y - other.y);
    },
    $add(_, other) {
      return new A.Radius(this.x + other.x, this.y + other.y);
    },
    $mul(_, operand) {
      return new A.Radius(this.x * operand, this.y * operand);
    },
    clamp$1$minimum(_, minimum) {
      return new A.Radius(A._clampDouble(this.x, minimum.x, 1 / 0), A._clampDouble(this.y, minimum.y, 1 / 0));
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (A.getRuntimeTypeOfDartObject(_this) !== J.get$runtimeType$(other))
        return false;
      return other instanceof A.Radius && other.x === _this.x && other.y === _this.y;
    },
    get$hashCode(_) {
      return A.hashValues(this.x, this.y, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd);
    },
    toString$0(_) {
      var t1 = this.x,
        t2 = this.y;
      return t1 === t2 ? "Radius.circular(" + B.JSNumber_methods.toStringAsFixed$1(t1, 1) + ")" : "Radius.elliptical(" + B.JSNumber_methods.toStringAsFixed$1(t1, 1) + ", " + B.JSNumber_methods.toStringAsFixed$1(t2, 1) + ")";
    }
  };
  A.RRect.prototype = {
    shift$1(offset) {
      var _this = this,
        t1 = offset._dx,
        t2 = offset._dy;
      return new A.RRect(_this.left + t1, _this.top + t2, _this.right + t1, _this.bottom + t2, _this.tlRadiusX, _this.tlRadiusY, _this.trRadiusX, _this.trRadiusY, _this.brRadiusX, _this.brRadiusY, _this.blRadiusX, _this.blRadiusY);
    },
    inflate$1(delta) {
      var _this = this;
      return new A.RRect(_this.left - delta, _this.top - delta, _this.right + delta, _this.bottom + delta, _this.tlRadiusX + delta, _this.tlRadiusY + delta, _this.trRadiusX + delta, _this.trRadiusY + delta, _this.brRadiusX + delta, _this.brRadiusY + delta, _this.blRadiusX + delta, _this.blRadiusY + delta);
    },
    _getMin$4(min, radius1, radius2, limit) {
      var sum = radius1 + radius2;
      if (sum > limit && sum !== 0)
        return Math.min(min, limit / sum);
      return min;
    },
    scaleRadii$0() {
      var _this = this,
        t1 = _this.blRadiusY,
        t2 = _this.tlRadiusY,
        t3 = _this.bottom,
        t4 = _this.top,
        t5 = t3 - t4,
        t6 = _this.tlRadiusX,
        t7 = _this.trRadiusX,
        t8 = _this.right,
        t9 = _this.left,
        t10 = t8 - t9,
        t11 = _this.trRadiusY,
        t12 = _this.brRadiusY,
        t13 = _this.brRadiusX,
        t14 = _this.blRadiusX,
        scale = _this._getMin$4(_this._getMin$4(_this._getMin$4(_this._getMin$4(1, t1, t2, t5), t6, t7, t10), t11, t12, t5), t13, t14, t10);
      if (scale < 1)
        return new A.RRect(t9, t4, t8, t3, t6 * scale, t2 * scale, t7 * scale, t11 * scale, t13 * scale, t12 * scale, t14 * scale, t1 * scale);
      return new A.RRect(t9, t4, t8, t3, t6, t2, t7, t11, t13, t12, t14, t1);
    },
    contains$1(_, point) {
      var scaled, radiusX, x, radiusY, y, _this = this,
        t1 = point._dx,
        t2 = _this.left,
        t3 = true;
      if (!(t1 < t2))
        if (!(t1 >= _this.right)) {
          t3 = point._dy;
          t3 = t3 < _this.top || t3 >= _this.bottom;
        }
      if (t3)
        return false;
      scaled = _this.scaleRadii$0();
      radiusX = scaled.tlRadiusX;
      if (t1 < t2 + radiusX && point._dy < _this.top + scaled.tlRadiusY) {
        x = t1 - t2 - radiusX;
        radiusY = scaled.tlRadiusY;
        y = point._dy - _this.top - radiusY;
      } else {
        t3 = _this.right;
        radiusX = scaled.trRadiusX;
        if (t1 > t3 - radiusX && point._dy < _this.top + scaled.trRadiusY) {
          x = t1 - t3 + radiusX;
          radiusY = scaled.trRadiusY;
          y = point._dy - _this.top - radiusY;
        } else {
          radiusX = scaled.brRadiusX;
          if (t1 > t3 - radiusX && point._dy > _this.bottom - scaled.brRadiusY) {
            x = t1 - t3 + radiusX;
            radiusY = scaled.brRadiusY;
            y = point._dy - _this.bottom + radiusY;
          } else {
            radiusX = scaled.blRadiusX;
            if (t1 < t2 + radiusX && point._dy > _this.bottom - scaled.blRadiusY) {
              x = t1 - t2 - radiusX;
              radiusY = scaled.blRadiusY;
              y = point._dy - _this.bottom + radiusY;
            } else
              return true;
          }
        }
      }
      x /= radiusX;
      y /= radiusY;
      if (x * x + y * y > 1)
        return false;
      return true;
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (A.getRuntimeTypeOfDartObject(_this) !== J.get$runtimeType$(other))
        return false;
      return other instanceof A.RRect && other.left === _this.left && other.top === _this.top && other.right === _this.right && other.bottom === _this.bottom && other.tlRadiusX === _this.tlRadiusX && other.tlRadiusY === _this.tlRadiusY && other.trRadiusX === _this.trRadiusX && other.trRadiusY === _this.trRadiusY && other.blRadiusX === _this.blRadiusX && other.blRadiusY === _this.blRadiusY && other.brRadiusX === _this.brRadiusX && other.brRadiusY === _this.brRadiusY;
    },
    get$hashCode(_) {
      var _this = this;
      return A.hashValues(_this.left, _this.top, _this.right, _this.bottom, _this.tlRadiusX, _this.tlRadiusY, _this.trRadiusX, _this.trRadiusY, _this.blRadiusX, _this.blRadiusY, _this.brRadiusX, _this.brRadiusY);
    },
    toString$0(_) {
      var t5, t6, _this = this,
        rect = B.JSNumber_methods.toStringAsFixed$1(_this.left, 1) + ", " + B.JSNumber_methods.toStringAsFixed$1(_this.top, 1) + ", " + B.JSNumber_methods.toStringAsFixed$1(_this.right, 1) + ", " + B.JSNumber_methods.toStringAsFixed$1(_this.bottom, 1),
        t1 = _this.tlRadiusX,
        t2 = _this.tlRadiusY,
        t3 = _this.trRadiusX,
        t4 = _this.trRadiusY;
      if (new A.Radius(t1, t2).$eq(0, new A.Radius(t3, t4))) {
        t5 = _this.brRadiusX;
        t6 = _this.brRadiusY;
        t5 = new A.Radius(t3, t4).$eq(0, new A.Radius(t5, t6)) && new A.Radius(t5, t6).$eq(0, new A.Radius(_this.blRadiusX, _this.blRadiusY));
      } else
        t5 = false;
      if (t5) {
        if (t1 === t2)
          return "RRect.fromLTRBR(" + rect + ", " + B.JSNumber_methods.toStringAsFixed$1(t1, 1) + ")";
        return "RRect.fromLTRBXY(" + rect + ", " + B.JSNumber_methods.toStringAsFixed$1(t1, 1) + ", " + B.JSNumber_methods.toStringAsFixed$1(t2, 1) + ")";
      }
      return "RRect.fromLTRBAndCorners(" + rect + ", topLeft: " + new A.Radius(t1, t2).toString$0(0) + ", topRight: " + new A.Radius(t3, t4).toString$0(0) + ", bottomRight: " + new A.Radius(_this.brRadiusX, _this.brRadiusY).toString$0(0) + ", bottomLeft: " + new A.Radius(_this.blRadiusX, _this.blRadiusY).toString$0(0) + ")";
    }
  };
  A._HashEnd.prototype = {};
  A.Color.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(this))
        return false;
      return other instanceof A.Color && other.get$value() === this.get$value();
    },
    get$hashCode(_) {
      return B.JSInt_methods.get$hashCode(this.get$value());
    },
    toString$0(_) {
      return "Color(0x" + B.JSString_methods.padLeft$2(B.JSInt_methods.toRadixString$1(this.get$value(), 16), 8, "0") + ")";
    },
    get$value() {
      return this.value;
    }
  };
  A.BlendMode.prototype = {
    _enumToString$0() {
      return "BlendMode." + this._name;
    }
  };
  A.Clip.prototype = {
    _enumToString$0() {
      return "Clip." + this._name;
    }
  };
  A.Paint.prototype = {
    _ensureObjectsInitialized$0() {
      var t1 = this._objects;
      return t1 == null ? this._objects = A.List_List$filled(3, null, false, type$.dynamic) : t1;
    },
    set$color(value) {
      var t1 = value.get$value(),
        t2 = this._ui$_data;
      t2.$flags & 2 && A.throwUnsupportedOperation(t2, 8);
      t2.setInt32(4, (t1 ^ 4278190080) >>> 0, true);
    },
    set$blendMode(value) {
      var t1 = $.$get$Paint__kBlendModeDefault(),
        t2 = this._ui$_data;
      t2.$flags & 2 && A.throwUnsupportedOperation(t2, 8);
      t2.setInt32(8, value.index ^ t1, true);
    },
    set$maskFilter(value) {
      var t1 = this._ui$_data;
      t1.$flags & 2 && A.throwUnsupportedOperation(t1, 8);
      t1.setInt32(36, 1, true);
      t1.setInt32(40, value._style.index, true);
      t1.setFloat32(44, value._sigma, true);
    },
    toString$0(_) {
      return this.super$Object$toString(0);
    }
  };
  A.PathFillType.prototype = {
    _enumToString$0() {
      return "PathFillType." + this._name;
    }
  };
  A.BlurStyle.prototype = {
    _enumToString$0() {
      return "BlurStyle." + this._name;
    }
  };
  A.MaskFilter.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.MaskFilter && other._style === this._style && other._sigma === this._sigma;
    },
    get$hashCode(_) {
      return A.hashValues(this._style, this._sigma, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd);
    },
    toString$0(_) {
      return "MaskFilter.blur(" + this._style.toString$0(0) + ", " + B.JSNumber_methods.toStringAsFixed$1(this._sigma, 1) + ")";
    }
  };
  A.Shader.prototype = {};
  A.TileMode.prototype = {
    _enumToString$0() {
      return "TileMode." + this._name;
    }
  };
  A.Gradient.prototype = {};
  A.ClipOp.prototype = {
    _enumToString$0() {
      return "ClipOp." + this._name;
    }
  };
  A.Canvas.prototype = {
    _addMethod$1(methodId) {
      var newList, i, _this = this,
        t1 = _this._methodsLength,
        t2 = _this._methods,
        t3 = t2.length;
      if (t1 >= t3) {
        newList = new Uint8Array(t3 * 2);
        for (i = 0; i < t1; ++i)
          newList[i] = t2[i];
        _this._methods = newList;
        t1 = newList;
      } else
        t1 = t2;
      t2 = _this._methodsLength;
      t1.$flags & 2 && A.throwUnsupportedOperation(t1);
      t1[t2] = methodId;
      _this._methodsLength = t2 + 1;
    },
    _ensureDataLength$1(newLength) {
      var newList, i,
        t1 = this._ui$_data,
        t2 = t1.length;
      if (t2 >= newLength)
        return;
      newList = new Float32Array(t2 * 2);
      for (t2 = this._dataLength, i = 0; i < t2; ++i)
        newList[i] = t1[i];
      this._ui$_data = newList;
    },
    _addData1$1(a) {
      var t1, t2, _this = this;
      _this._ensureDataLength$1(_this._dataLength + 1);
      t1 = _this._ui$_data;
      t2 = _this._dataLength++;
      t1.$flags & 2 && A.throwUnsupportedOperation(t1);
      t1[t2] = a;
    },
    _addData2$2(a, b) {
      var t1, t2, t3, _this = this;
      _this._ensureDataLength$1(_this._dataLength + 2);
      t1 = _this._ui$_data;
      t2 = _this._dataLength;
      t3 = _this._dataLength = t2 + 1;
      t1.$flags & 2 && A.throwUnsupportedOperation(t1);
      t1[t2] = a;
      _this._dataLength = t3 + 1;
      t1[t3] = b;
    },
    _addData4$4(a, b, c, d) {
      var t1, t2, t3, _this = this;
      _this._ensureDataLength$1(_this._dataLength + 4);
      t1 = _this._ui$_data;
      t2 = _this._dataLength;
      t3 = _this._dataLength = t2 + 1;
      t1.$flags & 2 && A.throwUnsupportedOperation(t1);
      t1[t2] = a;
      t2 = _this._dataLength = t3 + 1;
      t1[t3] = b;
      t3 = _this._dataLength = t2 + 1;
      t1[t2] = c;
      _this._dataLength = t3 + 1;
      t1[t3] = d;
    },
    _addData12$12(a, b, c, d, e, f, g, h, i, j, k, l) {
      var t1, t2, t3, _this = this;
      _this._ensureDataLength$1(_this._dataLength + 12);
      t1 = _this._ui$_data;
      t2 = _this._dataLength;
      t3 = _this._dataLength = t2 + 1;
      t1.$flags & 2 && A.throwUnsupportedOperation(t1);
      t1[t2] = a;
      t2 = _this._dataLength = t3 + 1;
      t1[t3] = b;
      t3 = _this._dataLength = t2 + 1;
      t1[t2] = c;
      t2 = _this._dataLength = t3 + 1;
      t1[t3] = d;
      t3 = _this._dataLength = t2 + 1;
      t1[t2] = e;
      t2 = _this._dataLength = t3 + 1;
      t1[t3] = f;
      t3 = _this._dataLength = t2 + 1;
      t1[t2] = g;
      t2 = _this._dataLength = t3 + 1;
      t1[t3] = h;
      t3 = _this._dataLength = t2 + 1;
      t1[t2] = i;
      t2 = _this._dataLength = t3 + 1;
      t1[t3] = j;
      t3 = _this._dataLength = t2 + 1;
      t1[t2] = k;
      _this._dataLength = t3 + 1;
      t1[t3] = l;
    },
    save$0() {
      this._addMethod$1(0);
      ++this._saveCount;
    },
    saveLayer$2(bounds, paint) {
      this._addMethod$1(1);
      this._objects.push(paint);
      this._addData4$4(bounds.left, bounds.top, bounds.right, bounds.bottom);
    },
    restore$0() {
      this._addMethod$1(2);
      --this._saveCount;
    },
    scale$2(sx, sy) {
      this._addMethod$1(4);
      this._addData2$2(sx, sy);
    },
    transform$1(matrix4) {
      this._addMethod$1(7);
      this._objects.push(matrix4);
    },
    clipRect$2$doAntiAlias(rect, doAntiAlias) {
      var t1, t2, t3, t4, _this = this;
      _this._addMethod$1(8);
      t1 = doAntiAlias ? 1 : 0;
      _this._ensureDataLength$1(_this._dataLength + 6);
      t2 = _this._ui$_data;
      t3 = _this._dataLength;
      t4 = _this._dataLength = t3 + 1;
      t2.$flags & 2 && A.throwUnsupportedOperation(t2);
      t2[t3] = rect.left;
      t3 = _this._dataLength = t4 + 1;
      t2[t4] = rect.top;
      t4 = _this._dataLength = t3 + 1;
      t2[t3] = rect.right;
      t3 = _this._dataLength = t4 + 1;
      t2[t4] = rect.bottom;
      t4 = _this._dataLength = t3 + 1;
      t2[t3] = 1;
      _this._dataLength = t4 + 1;
      t2[t4] = t1;
    },
    clipRect$1(rect) {
      return this.clipRect$2$doAntiAlias(rect, true);
    },
    clipRRect$2$doAntiAlias(rrect, doAntiAlias) {
      this._addMethod$1(9);
      this._addData12$12(rrect.left, rrect.top, rrect.right, rrect.bottom, rrect.tlRadiusX, rrect.tlRadiusY, rrect.trRadiusX, rrect.trRadiusY, rrect.brRadiusX, rrect.brRadiusY, rrect.blRadiusX, rrect.blRadiusY);
      this._addData1$1(doAntiAlias ? 1 : 0);
    },
    clipRRect$1(rrect) {
      return this.clipRRect$2$doAntiAlias(rrect, true);
    },
    clipPath$2$doAntiAlias(path, doAntiAlias) {
      this._addMethod$1(10);
      this._objects.push(path);
      this._addData1$1(doAntiAlias ? 1 : 0);
    },
    clipPath$1(path) {
      return this.clipPath$2$doAntiAlias(path, true);
    },
    drawLine$3(p1, p2, paint) {
      this._addMethod$1(12);
      this._objects.push(paint);
      this._addData4$4(p1._dx, p1._dy, p2._dx, p2._dy);
    },
    drawRect$2(rect, paint) {
      this._addMethod$1(14);
      this._objects.push(paint);
      this._addData4$4(rect.left, rect.top, rect.right, rect.bottom);
    },
    drawRRect$2(rrect, paint) {
      this._addMethod$1(15);
      this._objects.push(paint);
      this._addData12$12(rrect.left, rrect.top, rrect.right, rrect.bottom, rrect.tlRadiusX, rrect.tlRadiusY, rrect.trRadiusX, rrect.trRadiusY, rrect.brRadiusX, rrect.brRadiusY, rrect.blRadiusX, rrect.blRadiusY);
    },
    drawDRRect$3(outer, inner, paint) {
      var _this = this;
      _this._addMethod$1(16);
      _this._objects.push(paint);
      _this._addData12$12(outer.left, outer.top, outer.right, outer.bottom, outer.tlRadiusX, outer.tlRadiusY, outer.trRadiusX, outer.trRadiusY, outer.brRadiusX, outer.brRadiusY, outer.blRadiusX, outer.blRadiusY);
      _this._addData12$12(inner.left, inner.top, inner.right, inner.bottom, inner.tlRadiusX, inner.tlRadiusY, inner.trRadiusX, inner.trRadiusY, inner.brRadiusX, inner.brRadiusY, inner.blRadiusX, inner.blRadiusY);
    },
    drawCircle$3(c, radius, paint) {
      var _this = this;
      _this._addMethod$1(18);
      _this._objects.push(paint);
      _this._addData2$2(c._dx, c._dy);
      _this._addData1$1(radius);
    },
    drawArc$5(rect, startAngle, sweepAngle, useCenter, paint) {
      var t1, t2, t3, _this = this;
      _this._addMethod$1(19);
      _this._objects.push(paint);
      _this._ensureDataLength$1(_this._dataLength + 7);
      t1 = _this._ui$_data;
      t2 = _this._dataLength;
      t3 = _this._dataLength = t2 + 1;
      t1.$flags & 2 && A.throwUnsupportedOperation(t1);
      t1[t2] = rect.left;
      t2 = _this._dataLength = t3 + 1;
      t1[t3] = rect.top;
      t3 = _this._dataLength = t2 + 1;
      t1[t2] = rect.right;
      t2 = _this._dataLength = t3 + 1;
      t1[t3] = rect.bottom;
      t3 = _this._dataLength = t2 + 1;
      t1[t2] = startAngle;
      t2 = _this._dataLength = t3 + 1;
      t1[t3] = sweepAngle;
      _this._dataLength = t2 + 1;
      t1[t2] = 0;
    },
    drawPath$2(path, paint) {
      var t1;
      this._addMethod$1(20);
      t1 = this._objects;
      t1.push(paint);
      t1.push(path);
    },
    drawShadow$4(path, color, elevation, transparentOccluder) {
      var _this = this;
      _this._addMethod$1(29);
      _this._objects.push(path);
      _this._addData2$2(color.get$value(), elevation);
      _this._addData1$1(transparentOccluder ? 1 : 0);
    }
  };
  A.Picture.prototype = {};
  A.PictureRecorder.prototype = {};
  A.Shadow.prototype = {
    scale$1(factor) {
      return new A.Shadow(this.color, this.offset.$mul(0, factor), this.blurRadius * factor);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      return other instanceof A.Shadow && other.color.$eq(0, _this.color) && other.offset.$eq(0, _this.offset) && other.blurRadius === _this.blurRadius;
    },
    get$hashCode(_) {
      return A.hashValues(this.color, this.offset, this.blurRadius, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd);
    },
    toString$0(_) {
      return "TextShadow(" + this.color.toString$0(0) + ", " + this.offset.toString$0(0) + ", " + A.S(this.blurRadius) + ")";
    }
  };
  A.Conic.prototype = {
    chopAtYExtrema$1(dst) {
      var _this = this,
        t = _this._findYExtrema$0();
      if (t == null) {
        dst.push(_this);
        return;
      }
      if (!_this._chopAt$3$cleanupMiddle(t, dst, true)) {
        dst.push(_this);
        return;
      }
    },
    _findYExtrema$0() {
      var wP10, quadRoots, _this = this,
        t1 = _this.p2y,
        t2 = _this.p0y,
        p20 = t1 - t2;
      t1 = _this.fW;
      wP10 = t1 * (_this.p1y - t2);
      quadRoots = new A.QuadRoots();
      if (quadRoots.findRoots$3(t1 * p20 - p20, p20 - 2 * wP10, wP10) === 1)
        return quadRoots.root0;
      return null;
    },
    _chopAt$3$cleanupMiddle(t, dst, cleanupMiddle) {
      var chopPointX, chopPointY, t2, t3, t4, _this = this,
        tx0 = _this.p0x,
        ty0 = _this.p0y,
        t1 = _this.fW,
        tx1 = _this.p1x * t1,
        ty1 = _this.p1y * t1,
        ty2 = _this.p2y,
        dx0 = tx0 + (tx1 - tx0) * t,
        dx2 = tx1 + (_this.p2x - tx1) * t,
        dy0 = ty0 + (ty1 - ty0) * t,
        dz0 = 1 + (t1 - 1) * t,
        dz2 = t1 + (1 - t1) * t,
        dz1 = dz0 + (dz2 - dz0) * t,
        root = Math.sqrt(dz1);
      if (Math.abs(root) < 0.000244140625)
        return false;
      if (Math.abs(dz0) < 0.000244140625 || Math.abs(dz1) < 0.000244140625 || Math.abs(dz2) < 0.000244140625)
        return false;
      chopPointX = (dx0 + (dx2 - dx0) * t) / dz1;
      chopPointY = (dy0 + (ty1 + (ty2 - ty1) * t - dy0) * t) / dz1;
      t1 = _this.p0x;
      t2 = _this.p0y;
      t3 = _this.p2x;
      t4 = _this.p2y;
      dst.push(new A.Conic(t1, t2, dx0 / dz0, chopPointY, chopPointX, chopPointY, dz0 / root));
      dst.push(new A.Conic(chopPointX, chopPointY, dx2 / dz2, chopPointY, t3, t4, dz2 / root));
      return true;
    },
    evalTangentAt$1(t) {
      var t1, t2, p20x, t3, p20y, cx, cy, quadC, _this = this;
      if (!(t === 0 && _this.p0x === _this.p1x && _this.p0y === _this.p1y))
        t1 = t === 1 && _this.p1x === _this.p2x && _this.p1y === _this.p2y;
      else
        t1 = true;
      if (t1)
        return new A.Offset(_this.p2x - _this.p0x, _this.p2y - _this.p0y);
      t1 = _this.p2x;
      t2 = _this.p0x;
      p20x = t1 - t2;
      t1 = _this.p2y;
      t3 = _this.p0y;
      p20y = t1 - t3;
      t1 = _this.fW;
      cx = t1 * (_this.p1x - t2);
      cy = t1 * (_this.p1y - t3);
      quadC = A.SkQuadCoefficients$(t1 * p20x - p20x, t1 * p20y - p20y, p20x - cx - cx, p20y - cy - cy, cx, cy);
      return new A.Offset(quadC.evalX$1(t), quadC.evalY$1(t));
    }
  };
  A.QuadBounds.prototype = {};
  A.ConicBounds.prototype = {};
  A.CubicBounds.prototype = {};
  A.SurfacePath.prototype = {
    _resetFields$0() {
      var _this = this;
      _this.fLastMoveToIndex = 0;
      _this._fillType = B.PathFillType_0;
      _this._firstDirection = _this._convexityType = -1;
    },
    reset$0() {
      if (this.pathRef._fVerbsLength !== 0) {
        this.pathRef = A.PathRef$();
        this._resetFields$0();
      }
    },
    moveTo$2(x, y) {
      var _this = this,
        pointIndex = _this.pathRef.growForVerb$2(0, 0);
      _this.fLastMoveToIndex = pointIndex + 1;
      _this.pathRef.setPoint$3(pointIndex, x, y);
      _this._firstDirection = _this._convexityType = -1;
    },
    _injectMoveToIfNeeded$0() {
      var t2, x, y, pointIndex,
        t1 = this.fLastMoveToIndex;
      if (t1 <= 0) {
        t2 = this.pathRef;
        if (t2._fPointsLength === 0) {
          x = 0;
          y = 0;
        } else {
          pointIndex = 2 * (-t1 - 1);
          t1 = t2.fPoints;
          x = t1[pointIndex];
          y = t1[pointIndex + 1];
        }
        this.moveTo$2(x, y);
      }
    },
    lineTo$2(x, y) {
      var pointIndex, _this = this;
      if (_this.fLastMoveToIndex <= 0)
        _this._injectMoveToIfNeeded$0();
      pointIndex = _this.pathRef.growForVerb$2(1, 0);
      _this.pathRef.setPoint$3(pointIndex, x, y);
      _this._firstDirection = _this._convexityType = -1;
    },
    conicTo$5(x1, y1, x2, y2, w) {
      var pointIndex, _this = this;
      _this._injectMoveToIfNeeded$0();
      pointIndex = _this.pathRef.growForVerb$2(3, w);
      _this.pathRef.setPoint$3(pointIndex, x1, y1);
      _this.pathRef.setPoint$3(pointIndex + 1, x2, y2);
      _this._firstDirection = _this._convexityType = -1;
    },
    close$0() {
      var _this = this,
        t1 = _this.pathRef,
        verbCount = t1._fVerbsLength;
      if (verbCount !== 0 && t1._fVerbs[verbCount - 1] !== 5)
        t1.growForVerb$2(5, 0);
      t1 = _this.fLastMoveToIndex;
      if (t1 >= 0)
        _this.fLastMoveToIndex = -t1;
      _this._firstDirection = _this._convexityType = -1;
    },
    _hasOnlyMoveTos$0() {
      var i,
        t1 = this.pathRef,
        verbCount = t1._fVerbsLength;
      for (t1 = t1._fVerbs, i = 0; i < verbCount; ++i)
        switch (t1[i]) {
          case 1:
          case 2:
          case 3:
          case 4:
            return false;
        }
      return true;
    },
    addRectWithDirection$3(rect, direction, startIndex) {
      var pointIndex1, pointIndex2, pointIndex3, t1, t2, t3, t4, t5, _this = this,
        isRect = _this._hasOnlyMoveTos$0(),
        finalDirection = _this._hasOnlyMoveTos$0() ? direction : -1,
        pointIndex0 = _this.pathRef.growForVerb$2(0, 0);
      _this.fLastMoveToIndex = pointIndex0 + 1;
      pointIndex1 = _this.pathRef.growForVerb$2(1, 0);
      pointIndex2 = _this.pathRef.growForVerb$2(1, 0);
      pointIndex3 = _this.pathRef.growForVerb$2(1, 0);
      _this.pathRef.growForVerb$2(5, 0);
      t1 = _this.pathRef;
      t2 = rect.left;
      t3 = rect.top;
      t4 = rect.right;
      t5 = rect.bottom;
      if (direction === 0) {
        t1.setPoint$3(pointIndex0, t2, t3);
        _this.pathRef.setPoint$3(pointIndex1, t4, t3);
        _this.pathRef.setPoint$3(pointIndex2, t4, t5);
        _this.pathRef.setPoint$3(pointIndex3, t2, t5);
      } else {
        t1.setPoint$3(pointIndex3, t2, t5);
        _this.pathRef.setPoint$3(pointIndex2, t4, t5);
        _this.pathRef.setPoint$3(pointIndex1, t4, t3);
        _this.pathRef.setPoint$3(pointIndex0, t2, t3);
      }
      t1 = _this.pathRef;
      t1.fIsRect = isRect;
      t1.fRRectOrOvalIsCCW = direction === 1;
      t1.fRRectOrOvalStartIdx = 0;
      _this._firstDirection = _this._convexityType = -1;
      _this._firstDirection = finalDirection;
    },
    arcTo$4(rect, startAngle, sweepAngle, forceMoveTo) {
      var lonePoint, stopAngle, cosStart, sinStart, cosStop, sinStop, sweep, deltaRad, stopAngle0, dir, radiusX, radiusY, px, py, x, y, quadrant, t2, conics, i, quadPointIndex, p0, p1, p2, lastQuadrantPoint, t3, dot, offCurveX, offCurveY, cosThetaOver2, t4, conicCount, centerX, centerY, _i, conic, _this = this,
        t1 = rect.right - rect.left;
      if (t1 === 0 && rect.bottom - rect.top === 0)
        return;
      lonePoint = A._arcIsLonePoint(rect, startAngle, sweepAngle);
      if (lonePoint != null)
        _this.moveTo$2(lonePoint._dx, lonePoint._dy);
      stopAngle = startAngle + sweepAngle;
      cosStart = Math.cos(startAngle);
      sinStart = Math.sin(startAngle);
      cosStop = Math.cos(stopAngle);
      sinStop = Math.sin(stopAngle);
      if (Math.abs(cosStart - cosStop) < 0.000244140625 && Math.abs(sinStart - sinStop) < 0.000244140625) {
        sweep = Math.abs(sweepAngle) * 180 / 3.141592653589793;
        if (sweep <= 360 && sweep > 359) {
          deltaRad = sweepAngle < 0 ? -0.001953125 : 0.001953125;
          stopAngle0 = stopAngle;
          do {
            stopAngle0 -= deltaRad;
            cosStop = Math.cos(stopAngle0);
            sinStop = Math.sin(stopAngle0);
          } while (cosStart === cosStop && sinStart === sinStop);
        }
      }
      dir = sweepAngle > 0 ? 0 : 1;
      radiusX = t1 / 2;
      radiusY = (rect.bottom - rect.top) / 2;
      px = rect.get$center()._dx + radiusX * Math.cos(stopAngle);
      py = rect.get$center()._dy + radiusY * Math.sin(stopAngle);
      if (cosStart === cosStop && sinStart === sinStop) {
        _this.moveTo$2(px, py);
        return;
      }
      x = cosStart * cosStop + sinStart * sinStop;
      y = cosStart * sinStop - sinStart * cosStop;
      t1 = false;
      if (Math.abs(y) <= 0.000244140625)
        if (x > 0)
          if (!(y >= 0 && dir === 0))
            t1 = y <= 0 && dir === 1;
          else
            t1 = true;
      if (t1) {
        _this.moveTo$2(px, py);
        return;
      }
      t1 = dir === 1;
      if (t1)
        y = -y;
      if (0 === y)
        quadrant = 2;
      else if (0 === x)
        quadrant = y > 0 ? 1 : 3;
      else {
        t2 = y < 0;
        quadrant = t2 ? 2 : 0;
        if (x < 0 !== t2)
          ++quadrant;
      }
      conics = A._setArrayType([], type$.JSArray_Conic);
      for (i = 0; i < quadrant; ++i) {
        quadPointIndex = i * 2;
        p0 = B.List_de5[quadPointIndex];
        p1 = B.List_de5[quadPointIndex + 1];
        p2 = B.List_de5[quadPointIndex + 2];
        conics.push(new A.Conic(p0._dx, p0._dy, p1._dx, p1._dy, p2._dx, p2._dy, 0.707106781));
      }
      lastQuadrantPoint = B.List_de5[quadrant * 2];
      t2 = lastQuadrantPoint._dx;
      t3 = lastQuadrantPoint._dy;
      dot = x * t2 + y * t3;
      if (dot < 1) {
        offCurveX = t2 + x;
        offCurveY = t3 + y;
        cosThetaOver2 = Math.sqrt((1 + dot) / 2);
        t4 = cosThetaOver2 * Math.sqrt(offCurveX * offCurveX + offCurveY * offCurveY);
        offCurveX /= t4;
        offCurveY /= t4;
        if (!(Math.abs(offCurveX - t2) < 0.000244140625) || !(Math.abs(offCurveY - t3) < 0.000244140625)) {
          conics.push(new A.Conic(t2, t3, offCurveX, offCurveY, x, y, cosThetaOver2));
          conicCount = quadrant + 1;
        } else
          conicCount = quadrant;
      } else
        conicCount = quadrant;
      centerX = rect.get$center()._dx;
      centerY = rect.get$center()._dy;
      for (t2 = conics.length, _i = 0; _i < t2; ++_i) {
        conic = conics[_i];
        x = conic.p0x;
        y = conic.p0y;
        if (t1)
          y = -y;
        conic.p0x = (cosStart * x - sinStart * y) * radiusX + centerX;
        conic.p0y = (cosStart * y + sinStart * x) * radiusY + centerY;
        x = conic.p1x;
        y = conic.p1y;
        if (t1)
          y = -y;
        conic.p1x = (cosStart * x - sinStart * y) * radiusX + centerX;
        conic.p1y = (cosStart * y + sinStart * x) * radiusY + centerY;
        x = conic.p2x;
        y = conic.p2y;
        if (t1)
          y = -y;
        conic.p2x = (cosStart * x - sinStart * y) * radiusX + centerX;
        conic.p2y = (cosStart * y + sinStart * x) * radiusY + centerY;
      }
      t1 = conics[0];
      _this.moveTo$2(t1.p0x, t1.p0y);
      for (i = 0; i < conicCount; ++i) {
        conic = conics[i];
        _this.conicTo$5(conic.p1x, conic.p1y, conic.p2x, conic.p2y, conic.fW);
      }
      _this._firstDirection = _this._convexityType = -1;
    },
    _addOval$3(oval, direction, startIndex) {
      var t1, _this = this,
        isOval = _this._hasOnlyMoveTos$0(),
        left = oval.left,
        right = oval.right,
        centerX = (left + right) / 2,
        $top = oval.top,
        bottom = oval.bottom,
        centerY = ($top + bottom) / 2;
      if (direction === 0) {
        _this.moveTo$2(right, centerY);
        _this.conicTo$5(right, bottom, centerX, bottom, 0.707106781);
        _this.conicTo$5(left, bottom, left, centerY, 0.707106781);
        _this.conicTo$5(left, $top, centerX, $top, 0.707106781);
        _this.conicTo$5(right, $top, right, centerY, 0.707106781);
      } else {
        _this.moveTo$2(right, centerY);
        _this.conicTo$5(right, $top, centerX, $top, 0.707106781);
        _this.conicTo$5(left, $top, left, centerY, 0.707106781);
        _this.conicTo$5(left, bottom, centerX, bottom, 0.707106781);
        _this.conicTo$5(right, bottom, right, centerY, 0.707106781);
      }
      _this.close$0();
      t1 = _this.pathRef;
      t1.fIsOval = isOval;
      t1.fRRectOrOvalIsCCW = direction === 1;
      t1.fRRectOrOvalStartIdx = 0;
      _this._firstDirection = _this._convexityType = -1;
      if (isOval)
        _this._firstDirection = direction;
    },
    addArc$3(oval, startAngle, sweepAngle) {
      var startOver90, startOver90I, startIndex, t1;
      if (0 === sweepAngle)
        return;
      if (sweepAngle >= 6.283185307179586 || sweepAngle <= -6.283185307179586) {
        startOver90 = startAngle / 1.5707963267948966;
        startOver90I = Math.floor(startOver90 + 0.5);
        if (Math.abs(startOver90 - startOver90I) < 0.000244140625) {
          startIndex = startOver90I + 1;
          if (startIndex < 0)
            startIndex += 4;
          t1 = sweepAngle > 0 ? 0 : 1;
          this._addOval$3(oval, t1, B.JSNumber_methods.toInt$0(startIndex));
          return;
        }
      }
      this.arcTo$4(oval, startAngle, sweepAngle, true);
    },
    _addRRect$3(rrect, direction, startIndex) {
      var width, height, tlRadiusX, trRadiusX, blRadiusX, brRadiusX, tlRadiusY, trRadiusY, blRadiusY, brRadiusY, scale, _this = this,
        isRRect = _this._hasOnlyMoveTos$0(),
        left = rrect.left,
        $top = rrect.top,
        right = rrect.right,
        bottom = rrect.bottom,
        bounds = new A.Rect(left, $top, right, bottom),
        t1 = rrect.tlRadiusX,
        t2 = false;
      if (t1 === 0 || rrect.tlRadiusY === 0)
        if (rrect.trRadiusX === 0 || rrect.trRadiusY === 0)
          if (rrect.blRadiusX === 0 || rrect.blRadiusY === 0)
            t2 = rrect.brRadiusX === 0 || rrect.brRadiusY === 0;
      if (t2 || left >= right || $top >= bottom)
        _this.addRectWithDirection$3(bounds, direction, (startIndex + 1) / 2 | 0);
      else if (A.isRRectOval(rrect))
        _this._addOval$3(bounds, direction, startIndex / 2 | 0);
      else {
        width = right - left;
        height = bottom - $top;
        tlRadiusX = Math.max(0, t1);
        trRadiusX = Math.max(0, rrect.trRadiusX);
        blRadiusX = Math.max(0, rrect.blRadiusX);
        brRadiusX = Math.max(0, rrect.brRadiusX);
        tlRadiusY = Math.max(0, rrect.tlRadiusY);
        trRadiusY = Math.max(0, rrect.trRadiusY);
        blRadiusY = Math.max(0, rrect.blRadiusY);
        brRadiusY = Math.max(0, rrect.brRadiusY);
        scale = A._computeMinScale(blRadiusY, brRadiusY, height, A._computeMinScale(tlRadiusY, trRadiusY, height, A._computeMinScale(blRadiusX, brRadiusX, width, A._computeMinScale(tlRadiusX, trRadiusX, width, 1))));
        t1 = bottom - scale * blRadiusY;
        _this.moveTo$2(left, t1);
        _this.lineTo$2(left, $top + scale * tlRadiusY);
        _this.conicTo$5(left, $top, left + scale * tlRadiusX, $top, 0.707106781);
        _this.lineTo$2(right - scale * trRadiusX, $top);
        _this.conicTo$5(right, $top, right, $top + scale * trRadiusY, 0.707106781);
        _this.lineTo$2(right, bottom - scale * brRadiusY);
        _this.conicTo$5(right, bottom, right - scale * brRadiusX, bottom, 0.707106781);
        _this.lineTo$2(left + scale * blRadiusX, bottom);
        _this.conicTo$5(left, bottom, left, t1, 0.707106781);
        _this.close$0();
        _this._firstDirection = isRRect ? direction : -1;
        t1 = _this.pathRef;
        t2 = B.JSInt_methods.$mod(startIndex, 8);
        t1.fIsRRect = isRRect;
        t1.fRRectOrOvalIsCCW = direction === 1;
        t1.fRRectOrOvalStartIdx = t2;
      }
    },
    contains$1(_, point) {
      var bounds, x, y, t1, windings, evenOddFill, w, onCurveCount, iter, buffer, tangents, done, oldCount, t2, last, tangent, dx, dy, index, test, t3, t4, offset, _this = this;
      if (_this.pathRef._fVerbsLength === 0)
        return false;
      bounds = _this.getBounds$0();
      x = point._dx;
      y = point._dy;
      if (x < bounds.left || y < bounds.top || x > bounds.right || y > bounds.bottom)
        return false;
      t1 = _this.pathRef;
      windings = new A.PathWinding(t1, x, y, new Float32Array(18));
      windings._walkPath$0();
      evenOddFill = B.PathFillType_1 === _this._fillType;
      w = windings._w;
      if ((evenOddFill ? w & 1 : w) !== 0)
        return true;
      onCurveCount = windings._onCurveCount;
      if (onCurveCount <= 1)
        return onCurveCount !== 0;
      t1 = (onCurveCount & 1) === 0;
      if (!t1 || evenOddFill)
        return !t1;
      iter = A.PathIterator$(_this.pathRef, true);
      buffer = new Float32Array(18);
      tangents = A._setArrayType([], type$.JSArray_Offset);
      t1 = iter.pathRef;
      done = false;
      do {
        oldCount = tangents.length;
        switch (iter.next$1(buffer)) {
          case 0:
          case 5:
            break;
          case 1:
            A.tangentLine(buffer, x, y, tangents);
            break;
          case 2:
            A.tangentQuad(buffer, x, y, tangents);
            break;
          case 3:
            t2 = iter._conicWeightIndex;
            A.tangentConic(buffer, x, y, t1._conicWeights[t2], tangents);
            break;
          case 4:
            A.tangentCubic(buffer, x, y, tangents);
            break;
          case 6:
            done = true;
            break;
        }
        t2 = tangents.length;
        if (t2 > oldCount) {
          last = t2 - 1;
          tangent = tangents[last];
          dx = tangent._dx;
          dy = tangent._dy;
          if (Math.abs(dx * dx + dy * dy) < 0.000244140625)
            B.JSArray_methods.removeAt$1(tangents, last);
          else
            for (index = 0; index < last; ++index) {
              test = tangents[index];
              t2 = test._dx;
              t3 = test._dy;
              t4 = false;
              if (Math.abs(t2 * dy - t3 * dx) < 0.000244140625) {
                t2 = dx * t2;
                if (t2 < 0)
                  t2 = -1;
                else
                  t2 = t2 > 0 ? 1 : 0;
                if (t2 <= 0) {
                  t2 = dy * t3;
                  if (t2 < 0)
                    t2 = -1;
                  else
                    t2 = t2 > 0 ? 1 : 0;
                  t2 = t2 <= 0;
                } else
                  t2 = t4;
              } else
                t2 = t4;
              if (t2) {
                offset = B.JSArray_methods.removeAt$1(tangents, last);
                if (index !== tangents.length)
                  tangents[index] = offset;
                break;
              }
            }
        }
      } while (!done);
      return tangents.length !== 0;
    },
    getBounds$0() {
      var t2, iter, points, ltrbInitialized, left, $top, right, bottom, minX, maxX, minY, maxY, cubicBounds, quadBounds, conicBounds, verb, pIndex, pointIndex, x1, pointIndex0, y1, cpX, cpY, x2, y2, t3, t4, t5, denom, t10, tprime, t6, t7, extremaX, extremaY, t20, tprime2, extrema2X, extrema2Y, roots, p20x, wP10x, $B, src2w, p20y, wP10y, startX, startY, cpX1, cpY1, cpX2, cpY2, endX, endY, a, b, s, t, newBounds, _this = this,
        t1 = _this.pathRef;
      if ((t1.fIsRRect ? t1.fRRectOrOvalStartIdx : -1) === -1)
        t2 = (t1.fIsOval ? t1.fRRectOrOvalStartIdx : -1) !== -1;
      else
        t2 = true;
      if (t2)
        return t1.getBounds$0();
      if (!t1.fBoundsIsDirty && t1.cachedBounds != null) {
        t1 = t1.cachedBounds;
        t1.toString;
        return t1;
      }
      iter = new A.PathRefIterator(t1);
      iter.PathRefIterator$1(t1);
      points = _this.pathRef.fPoints;
      for (ltrbInitialized = false, left = 0, $top = 0, right = 0, bottom = 0, minX = 0, maxX = 0, minY = 0, maxY = 0, cubicBounds = null, quadBounds = null, conicBounds = null; verb = iter.nextIndex$0(), verb !== 6;) {
        pIndex = iter.iterIndex;
        switch (verb) {
          case 0:
            maxX = points[pIndex];
            maxY = points[pIndex + 1];
            minY = maxY;
            minX = maxX;
            break;
          case 1:
            maxX = points[pIndex + 2];
            maxY = points[pIndex + 3];
            minY = maxY;
            minX = maxX;
            break;
          case 2:
            if (quadBounds == null)
              quadBounds = new A.QuadBounds();
            pointIndex = pIndex + 1;
            x1 = points[pIndex];
            pointIndex0 = pointIndex + 1;
            y1 = points[pointIndex];
            pointIndex = pointIndex0 + 1;
            cpX = points[pointIndex0];
            pointIndex0 = pointIndex + 1;
            cpY = points[pointIndex];
            x2 = points[pointIndex0];
            y2 = points[pointIndex0 + 1];
            t2 = quadBounds.minX = Math.min(x1, x2);
            t3 = quadBounds.minY = Math.min(y1, y2);
            t4 = quadBounds.maxX = Math.max(x1, x2);
            t5 = quadBounds.maxY = Math.max(y1, y2);
            denom = x1 - 2 * cpX + x2;
            if (Math.abs(denom) > 0.000244140625) {
              t10 = (x1 - cpX) / denom;
              if (t10 >= 0 && t10 <= 1) {
                tprime = 1 - t10;
                t6 = tprime * tprime;
                t7 = 2 * t10 * tprime;
                t10 *= t10;
                extremaX = t6 * x1 + t7 * cpX + t10 * x2;
                extremaY = t6 * y1 + t7 * cpY + t10 * y2;
                t2 = Math.min(t2, extremaX);
                quadBounds.minX = t2;
                t4 = Math.max(t4, extremaX);
                quadBounds.maxX = t4;
                t3 = Math.min(t3, extremaY);
                quadBounds.minY = t3;
                t5 = Math.max(t5, extremaY);
                quadBounds.maxY = t5;
              }
            }
            denom = y1 - 2 * cpY + y2;
            if (Math.abs(denom) > 0.000244140625) {
              t20 = (y1 - cpY) / denom;
              if (t20 >= 0 && t20 <= 1) {
                tprime2 = 1 - t20;
                t6 = tprime2 * tprime2;
                t7 = 2 * t20 * tprime2;
                t20 *= t20;
                extrema2X = t6 * x1 + t7 * cpX + t20 * x2;
                extrema2Y = t6 * y1 + t7 * cpY + t20 * y2;
                t2 = Math.min(t2, extrema2X);
                quadBounds.minX = t2;
                t4 = Math.max(t4, extrema2X);
                quadBounds.maxX = t4;
                t3 = Math.min(t3, extrema2Y);
                quadBounds.minY = t3;
                t5 = Math.max(t5, extrema2Y);
                quadBounds.maxY = t5;
              }
              maxY = t5;
              maxX = t4;
              minY = t3;
              minX = t2;
            } else {
              maxY = t5;
              maxX = t4;
              minY = t3;
              minX = t2;
            }
            break;
          case 3:
            if (conicBounds == null)
              conicBounds = new A.ConicBounds();
            t2 = t1._conicWeights[iter._conicWeightIndex];
            pointIndex = pIndex + 1;
            x1 = points[pIndex];
            pointIndex0 = pointIndex + 1;
            y1 = points[pointIndex];
            pointIndex = pointIndex0 + 1;
            cpX = points[pointIndex0];
            pointIndex0 = pointIndex + 1;
            cpY = points[pointIndex];
            x2 = points[pointIndex0];
            y2 = points[pointIndex0 + 1];
            conicBounds.minX = Math.min(x1, x2);
            conicBounds.minY = Math.min(y1, y2);
            conicBounds.maxX = Math.max(x1, x2);
            conicBounds.maxY = Math.max(y1, y2);
            roots = new A.QuadRoots();
            p20x = x2 - x1;
            wP10x = t2 * (cpX - x1);
            if (roots.findRoots$3(t2 * p20x - p20x, p20x - 2 * wP10x, wP10x) !== 0) {
              t3 = roots.root0;
              t3.toString;
              if (t3 >= 0 && t3 <= 1) {
                $B = 2 * (t2 - 1);
                denom = (-$B * t3 + $B) * t3 + 1;
                src2w = cpX * t2;
                extremaX = (((x2 - 2 * src2w + x1) * t3 + 2 * (src2w - x1)) * t3 + x1) / denom;
                src2w = cpY * t2;
                extremaY = (((y2 - 2 * src2w + y1) * t3 + 2 * (src2w - y1)) * t3 + y1) / denom;
                conicBounds.minX = Math.min(conicBounds.minX, extremaX);
                conicBounds.maxX = Math.max(conicBounds.maxX, extremaX);
                conicBounds.minY = Math.min(conicBounds.minY, extremaY);
                conicBounds.maxY = Math.max(conicBounds.maxY, extremaY);
              }
            }
            p20y = y2 - y1;
            wP10y = t2 * (cpY - y1);
            if (roots.findRoots$3(t2 * p20y - p20y, p20y - 2 * wP10y, wP10y) !== 0) {
              t3 = roots.root0;
              t3.toString;
              if (t3 >= 0 && t3 <= 1) {
                $B = 2 * (t2 - 1);
                denom = (-$B * t3 + $B) * t3 + 1;
                src2w = cpX * t2;
                extrema2X = (((x2 - 2 * src2w + x1) * t3 + 2 * (src2w - x1)) * t3 + x1) / denom;
                src2w = cpY * t2;
                extrema2Y = (((y2 - 2 * src2w + y1) * t3 + 2 * (src2w - y1)) * t3 + y1) / denom;
                conicBounds.minX = Math.min(conicBounds.minX, extrema2X);
                conicBounds.maxX = Math.max(conicBounds.maxX, extrema2X);
                conicBounds.minY = Math.min(conicBounds.minY, extrema2Y);
                conicBounds.maxY = Math.max(conicBounds.maxY, extrema2Y);
              }
            }
            minX = conicBounds.minX;
            minY = conicBounds.minY;
            maxX = conicBounds.maxX;
            maxY = conicBounds.maxY;
            break;
          case 4:
            if (cubicBounds == null)
              cubicBounds = new A.CubicBounds();
            pointIndex = pIndex + 1;
            startX = points[pIndex];
            pointIndex0 = pointIndex + 1;
            startY = points[pointIndex];
            pointIndex = pointIndex0 + 1;
            cpX1 = points[pointIndex0];
            pointIndex0 = pointIndex + 1;
            cpY1 = points[pointIndex];
            pointIndex = pointIndex0 + 1;
            cpX2 = points[pointIndex0];
            pointIndex0 = pointIndex + 1;
            cpY2 = points[pointIndex];
            endX = points[pointIndex0];
            endY = points[pointIndex0 + 1];
            t2 = Math.min(startX, endX);
            cubicBounds.minX = t2;
            cubicBounds.minY = Math.min(startY, endY);
            t3 = Math.max(startX, endX);
            cubicBounds.maxX = t3;
            cubicBounds.maxY = Math.max(startY, endY);
            if (!(startX < cpX1 && cpX1 < cpX2 && cpX2 < endX))
              t4 = startX > cpX1 && cpX1 > cpX2 && cpX2 > endX;
            else
              t4 = true;
            if (!t4) {
              t4 = -startX;
              a = t4 + 3 * (cpX1 - cpX2) + endX;
              b = 2 * (startX - 2 * cpX1 + cpX2);
              s = b * b - 4 * a * (t4 + cpX1);
              if (s >= 0 && Math.abs(a) > 0.000244140625) {
                t4 = -b;
                t5 = 2 * a;
                if (s === 0) {
                  t = t4 / t5;
                  tprime = 1 - t;
                  if (t >= 0 && t <= 1) {
                    t4 = 3 * tprime;
                    extremaX = tprime * tprime * tprime * startX + t4 * tprime * t * cpX1 + t4 * t * t * cpX2 + t * t * t * endX;
                    cubicBounds.minX = Math.min(extremaX, t2);
                    cubicBounds.maxX = Math.max(extremaX, t3);
                  }
                } else {
                  s = Math.sqrt(s);
                  t = (t4 - s) / t5;
                  tprime = 1 - t;
                  if (t >= 0 && t <= 1) {
                    t2 = 3 * tprime;
                    extremaX = tprime * tprime * tprime * startX + t2 * tprime * t * cpX1 + t2 * t * t * cpX2 + t * t * t * endX;
                    cubicBounds.minX = Math.min(extremaX, cubicBounds.minX);
                    cubicBounds.maxX = Math.max(extremaX, cubicBounds.maxX);
                  }
                  t = (t4 + s) / t5;
                  tprime = 1 - t;
                  if (t >= 0 && t <= 1) {
                    t2 = 3 * tprime;
                    extremaX = tprime * tprime * tprime * startX + t2 * tprime * t * cpX1 + t2 * t * t * cpX2 + t * t * t * endX;
                    cubicBounds.minX = Math.min(extremaX, cubicBounds.minX);
                    cubicBounds.maxX = Math.max(extremaX, cubicBounds.maxX);
                  }
                }
              }
            }
            if (!(startY < cpY1 && cpY1 < cpY2 && cpY2 < endY))
              t2 = startY > cpY1 && cpY1 > cpY2 && cpY2 > endY;
            else
              t2 = true;
            if (!t2) {
              t2 = -startY;
              a = t2 + 3 * (cpY1 - cpY2) + endY;
              b = 2 * (startY - 2 * cpY1 + cpY2);
              s = b * b - 4 * a * (t2 + cpY1);
              if (s >= 0 && Math.abs(a) > 0.000244140625) {
                t2 = -b;
                t3 = 2 * a;
                if (s === 0) {
                  t = t2 / t3;
                  tprime = 1 - t;
                  if (t >= 0 && t <= 1) {
                    t2 = 3 * tprime;
                    extremaY = tprime * tprime * tprime * startY + t2 * tprime * t * cpY1 + t2 * t * t * cpY2 + t * t * t * endY;
                    cubicBounds.minY = Math.min(extremaY, cubicBounds.minY);
                    cubicBounds.maxY = Math.max(extremaY, cubicBounds.maxY);
                  }
                } else {
                  s = Math.sqrt(s);
                  t = (t2 - s) / t3;
                  tprime = 1 - t;
                  if (t >= 0 && t <= 1) {
                    t4 = 3 * tprime;
                    extremaY = tprime * tprime * tprime * startY + t4 * tprime * t * cpY1 + t4 * t * t * cpY2 + t * t * t * endY;
                    cubicBounds.minY = Math.min(extremaY, cubicBounds.minY);
                    cubicBounds.maxY = Math.max(extremaY, cubicBounds.maxY);
                  }
                  t2 = (t2 + s) / t3;
                  tprime2 = 1 - t2;
                  if (t2 >= 0 && t2 <= 1) {
                    t3 = 3 * tprime2;
                    extremaY = tprime2 * tprime2 * tprime2 * startY + t3 * tprime2 * t2 * cpY1 + t3 * t2 * t2 * cpY2 + t2 * t2 * t2 * endY;
                    cubicBounds.minY = Math.min(extremaY, cubicBounds.minY);
                    cubicBounds.maxY = Math.max(extremaY, cubicBounds.maxY);
                  }
                }
              }
            }
            minX = cubicBounds.minX;
            minY = cubicBounds.minY;
            maxX = cubicBounds.maxX;
            maxY = cubicBounds.maxY;
            break;
        }
        if (!ltrbInitialized) {
          bottom = maxY;
          right = maxX;
          $top = minY;
          left = minX;
          ltrbInitialized = true;
        } else {
          left = Math.min(left, minX);
          right = Math.max(right, maxX);
          $top = Math.min($top, minY);
          bottom = Math.max(bottom, maxY);
        }
      }
      newBounds = ltrbInitialized ? new A.Rect(left, $top, right, bottom) : B.Rect_0_0_0_0;
      _this.pathRef.getBounds$0();
      return _this.pathRef.cachedBounds = newBounds;
    },
    toString$0(_) {
      var t1, iter, points, verb, pIndex, t2, t3,
        sb = new A.StringBuffer("");
      sb._contents = "Path(";
      t1 = this.pathRef;
      iter = new A.PathRefIterator(t1);
      iter.PathRefIterator$1(t1);
      points = this.pathRef.fPoints;
      for (; verb = iter.nextIndex$0(), verb !== 6;) {
        pIndex = iter.iterIndex;
        switch (verb) {
          case 0:
            sb._contents += "MoveTo(" + A.S(points[pIndex]) + ", " + A.S(points[pIndex + 1]) + ")";
            break;
          case 1:
            sb._contents += "LineTo(" + A.S(points[pIndex + 2]) + ", " + A.S(points[pIndex + 3]) + ")";
            break;
          case 2:
            t2 = points[pIndex + 2];
            t3 = A.S(points[pIndex + 3]);
            sb._contents += "Quad(" + A.S(t2) + ", " + t3 + ", " + t3 + ", " + A.S(points[pIndex + 4]) + ")";
            break;
          case 3:
            t2 = points[pIndex + 2];
            t3 = A.S(points[pIndex + 3]);
            sb._contents += "Conic(" + A.S(t2) + ", " + t3 + ", " + t3 + ", " + A.S(points[pIndex + 4]) + ", w = " + A.S(t1._conicWeights[iter._conicWeightIndex]) + ")";
            break;
          case 4:
            t2 = points[pIndex + 2];
            t3 = A.S(points[pIndex + 3]);
            sb._contents += "Cubic(" + A.S(t2) + ", " + t3 + ", " + t3 + ", " + A.S(points[pIndex + 4]) + ",  " + A.S(points[pIndex + 5]) + ", " + A.S(points[pIndex + 6]) + ")";
            break;
          case 5:
            sb._contents += "Close()";
            break;
        }
        t2 = iter._verbIndex;
        if ((t2 < t1._fVerbsLength ? t1._fVerbs[t2] : 6) !== 6)
          sb._contents += " ";
      }
      t1 = sb._contents += ")";
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  A.PathIterator.prototype = {
    _autoClose$1(outPts) {
      var _this = this,
        t1 = _this._lastPointX,
        t2 = _this._moveToX;
      if (t1 !== t2 || _this._lastPointY !== _this._moveToY) {
        if (isNaN(t1) || isNaN(_this._lastPointY) || isNaN(t2) || isNaN(_this._moveToY))
          return 5;
        outPts.$flags & 2 && A.throwUnsupportedOperation(outPts);
        outPts[0] = t1;
        outPts[1] = _this._lastPointY;
        outPts[2] = t2;
        t1 = _this._moveToY;
        outPts[3] = t1;
        _this._lastPointX = t2;
        _this._lastPointY = t1;
        return 1;
      } else {
        outPts.$flags & 2 && A.throwUnsupportedOperation(outPts);
        outPts[0] = t2;
        outPts[1] = _this._moveToY;
        return 5;
      }
    },
    _constructMoveTo$0() {
      var t1, t2, _this = this;
      if (_this._segmentState === 1) {
        _this._segmentState = 2;
        return new A.Offset(_this._moveToX, _this._moveToY);
      }
      t1 = _this.pathRef.fPoints;
      t2 = _this._pointIndex;
      return new A.Offset(t1[t2 - 2], t1[t2 - 1]);
    },
    next$1(outPts) {
      var t3, verb, autoVerb, offsetX, offsetY, start, _this = this,
        t1 = _this._verbIndex,
        t2 = _this.pathRef;
      if (t1 === t2._fVerbsLength) {
        if (_this._needClose && _this._segmentState === 2) {
          if (1 === _this._autoClose$1(outPts))
            return 1;
          _this._needClose = false;
          return 5;
        }
        return 6;
      }
      t3 = _this._verbIndex = t1 + 1;
      verb = t2._fVerbs[t1];
      switch (verb) {
        case 0:
          if (_this._needClose) {
            _this._verbIndex = t3 - 1;
            autoVerb = _this._autoClose$1(outPts);
            if (autoVerb === 5)
              _this._needClose = false;
            return autoVerb;
          }
          if (t3 === _this._verbCount)
            return 6;
          t1 = t2.fPoints;
          t2 = _this._pointIndex;
          t3 = _this._pointIndex = t2 + 1;
          offsetX = t1[t2];
          _this._pointIndex = t3 + 1;
          offsetY = t1[t3];
          _this._moveToX = offsetX;
          _this._moveToY = offsetY;
          outPts.$flags & 2 && A.throwUnsupportedOperation(outPts);
          outPts[0] = offsetX;
          outPts[1] = offsetY;
          _this._segmentState = 1;
          _this._lastPointX = offsetX;
          _this._lastPointY = offsetY;
          _this._needClose = true;
          break;
        case 1:
          start = _this._constructMoveTo$0();
          t1 = t2.fPoints;
          t2 = _this._pointIndex;
          t3 = _this._pointIndex = t2 + 1;
          offsetX = t1[t2];
          _this._pointIndex = t3 + 1;
          offsetY = t1[t3];
          outPts.$flags & 2 && A.throwUnsupportedOperation(outPts);
          outPts[0] = start._dx;
          outPts[1] = start._dy;
          outPts[2] = offsetX;
          outPts[3] = offsetY;
          _this._lastPointX = offsetX;
          _this._lastPointY = offsetY;
          break;
        case 3:
          ++_this._conicWeightIndex;
          start = _this._constructMoveTo$0();
          outPts.$flags & 2 && A.throwUnsupportedOperation(outPts);
          outPts[0] = start._dx;
          outPts[1] = start._dy;
          t1 = t2.fPoints;
          t2 = _this._pointIndex;
          t3 = _this._pointIndex = t2 + 1;
          outPts[2] = t1[t2];
          t2 = _this._pointIndex = t3 + 1;
          outPts[3] = t1[t3];
          t3 = _this._pointIndex = t2 + 1;
          t2 = t1[t2];
          outPts[4] = t2;
          _this._lastPointX = t2;
          _this._pointIndex = t3 + 1;
          t3 = t1[t3];
          outPts[5] = t3;
          _this._lastPointY = t3;
          break;
        case 2:
          start = _this._constructMoveTo$0();
          outPts.$flags & 2 && A.throwUnsupportedOperation(outPts);
          outPts[0] = start._dx;
          outPts[1] = start._dy;
          t1 = t2.fPoints;
          t2 = _this._pointIndex;
          t3 = _this._pointIndex = t2 + 1;
          outPts[2] = t1[t2];
          t2 = _this._pointIndex = t3 + 1;
          outPts[3] = t1[t3];
          t3 = _this._pointIndex = t2 + 1;
          t2 = t1[t2];
          outPts[4] = t2;
          _this._lastPointX = t2;
          _this._pointIndex = t3 + 1;
          t3 = t1[t3];
          outPts[5] = t3;
          _this._lastPointY = t3;
          break;
        case 4:
          start = _this._constructMoveTo$0();
          outPts.$flags & 2 && A.throwUnsupportedOperation(outPts);
          outPts[0] = start._dx;
          outPts[1] = start._dy;
          t1 = t2.fPoints;
          t2 = _this._pointIndex;
          t3 = _this._pointIndex = t2 + 1;
          outPts[2] = t1[t2];
          t2 = _this._pointIndex = t3 + 1;
          outPts[3] = t1[t3];
          t3 = _this._pointIndex = t2 + 1;
          outPts[4] = t1[t2];
          t2 = _this._pointIndex = t3 + 1;
          outPts[5] = t1[t3];
          t3 = _this._pointIndex = t2 + 1;
          t2 = t1[t2];
          outPts[6] = t2;
          _this._lastPointX = t2;
          _this._pointIndex = t3 + 1;
          t3 = t1[t3];
          outPts[7] = t3;
          _this._lastPointY = t3;
          break;
        case 5:
          verb = _this._autoClose$1(outPts);
          if (verb === 1)
            --_this._verbIndex;
          else {
            _this._needClose = false;
            _this._segmentState = 0;
          }
          _this._lastPointX = _this._moveToX;
          _this._lastPointY = _this._moveToY;
          break;
        case 6:
          break;
        default:
          throw A.wrapException(A.FormatException$("Unsupport Path verb " + verb, null, null));
      }
      return verb;
    }
  };
  A.PathRef.prototype = {
    setPoint$3(pointIndex, x, y) {
      var index = pointIndex * 2,
        t1 = this.fPoints;
      t1.$flags & 2 && A.throwUnsupportedOperation(t1);
      t1[index] = x;
      t1[index + 1] = y;
    },
    getBounds$0() {
      if (this.fBoundsIsDirty)
        this._computeBounds$0();
      var t1 = this.fBounds;
      t1.toString;
      return t1;
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(this))
        return false;
      return other instanceof A.PathRef && this.equals$1(other);
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(_this.fSegmentMask, _this.fPoints, _this._conicWeights, _this._fVerbs, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    equals$1(ref) {
      var pointCount, len, t1, t2, i, weightCount, verbCount, _this = this;
      if (_this.fSegmentMask !== ref.fSegmentMask)
        return false;
      pointCount = _this._fPointsLength;
      if (pointCount !== ref._fPointsLength)
        return false;
      len = pointCount * 2;
      for (t1 = _this.fPoints, t2 = ref.fPoints, i = 0; i < len; ++i)
        if (t1[i] !== t2[i])
          return false;
      t1 = _this._conicWeights;
      if (t1 == null) {
        if (ref._conicWeights != null)
          return false;
      } else {
        t2 = ref._conicWeights;
        if (t2 == null)
          return false;
        weightCount = t1.length;
        if (t2.length !== weightCount)
          return false;
        for (i = 0; i < weightCount; ++i)
          if (t1[i] !== t2[i])
            return false;
      }
      verbCount = _this._fVerbsLength;
      if (verbCount !== ref._fVerbsLength)
        return false;
      for (t1 = _this._fVerbs, t2 = ref._fVerbs, i = 0; i < verbCount; ++i)
        if (t1[i] !== t2[i])
          return false;
      return true;
    },
    _computeBounds$0() {
      var t1, maxX, maxY, accum, len, minY, minX, i, x, y, _this = this,
        pointCount = _this._fPointsLength;
      _this.fBoundsIsDirty = false;
      _this.cachedBounds = null;
      if (pointCount === 0) {
        _this.fBounds = B.Rect_0_0_0_0;
        _this.fIsFinite = true;
      } else {
        t1 = _this.fPoints;
        maxX = t1[0];
        maxY = t1[1];
        accum = 0 * maxX * maxY;
        len = 2 * pointCount;
        for (minY = maxY, minX = maxX, i = 2; i < len; i += 2) {
          x = t1[i];
          y = t1[i + 1];
          accum = accum * x * y;
          minX = Math.min(minX, x);
          minY = Math.min(minY, y);
          maxX = Math.max(maxX, x);
          maxY = Math.max(maxY, y);
        }
        if (accum * 0 === 0) {
          _this.fBounds = new A.Rect(minX, minY, maxX, maxY);
          _this.fIsFinite = true;
        } else {
          _this.fBounds = B.Rect_0_0_0_0;
          _this.fIsFinite = false;
        }
      }
    },
    growForVerb$2(verb, weight) {
      var verbCount, t1, t2, newVerbs, weightCount, newWeights, ptsIndex, newPoints, _this = this, pCnt = 0, mask = 0;
      switch (verb) {
        case 0:
          pCnt = 1;
          break;
        case 1:
          pCnt = 1;
          mask = 1;
          break;
        case 2:
          pCnt = 2;
          mask = 2;
          break;
        case 3:
          pCnt = 2;
          mask = 4;
          break;
        case 4:
          pCnt = 3;
          mask = 8;
          break;
        case 5:
          break;
        case 6:
          break;
        default:
          break;
      }
      _this.fSegmentMask |= mask;
      _this.fBoundsIsDirty = true;
      _this.fIsRect = _this.fIsRRect = _this.fIsOval = false;
      _this.cachedBounds = null;
      verbCount = _this._fVerbsLength;
      t1 = verbCount + 1;
      if (t1 > _this._fVerbsCapacity) {
        t2 = t1 + 8;
        _this._fVerbsCapacity = t2;
        newVerbs = new Uint8Array(t2);
        B.NativeUint8List_methods.setAll$2(newVerbs, 0, _this._fVerbs);
        _this._fVerbs = newVerbs;
      }
      _this._fVerbsLength = t1;
      t1 = _this._fVerbs;
      t1.$flags & 2 && A.throwUnsupportedOperation(t1);
      t1[verbCount] = verb;
      if (3 === verb) {
        weightCount = _this._conicWeightsLength;
        t1 = weightCount + 1;
        if (t1 > _this._conicWeightsCapacity) {
          t2 = t1 + 4;
          _this._conicWeightsCapacity = t2;
          newWeights = new Float32Array(t2);
          t2 = _this._conicWeights;
          if (t2 != null)
            B.NativeFloat32List_methods.setAll$2(newWeights, 0, t2);
          _this._conicWeights = newWeights;
        }
        _this._conicWeightsLength = t1;
        t1 = _this._conicWeights;
        t1.toString;
        t1.$flags & 2 && A.throwUnsupportedOperation(t1);
        t1[weightCount] = weight;
      }
      ptsIndex = _this._fPointsLength;
      t1 = ptsIndex + pCnt;
      if (t1 > _this._fPointsCapacity) {
        t2 = t1 + 10;
        _this._fPointsCapacity = t2;
        newPoints = new Float32Array(t2 * 2);
        B.NativeFloat32List_methods.setAll$2(newPoints, 0, _this.fPoints);
        _this.fPoints = newPoints;
      }
      _this._fPointsLength = t1;
      return ptsIndex;
    }
  };
  A.PathRefIterator.prototype = {
    PathRefIterator$1(pathRef) {
      var t1;
      this._pointIndex = 0;
      t1 = this.pathRef;
      if (t1.fBoundsIsDirty)
        t1._computeBounds$0();
      if (!t1.fIsFinite)
        this._verbIndex = t1._fVerbsLength;
    },
    nextIndex$0() {
      var verb, _this = this,
        t1 = _this._verbIndex,
        t2 = _this.pathRef;
      if (t1 === t2._fVerbsLength)
        return 6;
      t2 = t2._fVerbs;
      _this._verbIndex = t1 + 1;
      verb = t2[t1];
      switch (verb) {
        case 0:
          t1 = _this._pointIndex;
          _this.iterIndex = t1;
          _this._pointIndex = t1 + 2;
          break;
        case 1:
          t1 = _this._pointIndex;
          _this.iterIndex = t1 - 2;
          _this._pointIndex = t1 + 2;
          break;
        case 3:
          ++_this._conicWeightIndex;
          t1 = _this._pointIndex;
          _this.iterIndex = t1 - 2;
          _this._pointIndex = t1 + 4;
          break;
        case 2:
          t1 = _this._pointIndex;
          _this.iterIndex = t1 - 2;
          _this._pointIndex = t1 + 4;
          break;
        case 4:
          t1 = _this._pointIndex;
          _this.iterIndex = t1 - 2;
          _this._pointIndex = t1 + 6;
          break;
        case 5:
          break;
        case 6:
          break;
        default:
          throw A.wrapException(A.FormatException$("Unsupport Path verb " + verb, null, null));
      }
      return verb;
    }
  };
  A.QuadRoots.prototype = {
    findRoots$3(a, b, c) {
      var t1, dr, q, res, rootCount, rootCount0, t2, _this = this;
      if (a === 0) {
        t1 = A.validUnitDivide(-c, b);
        _this.root0 = t1;
        return t1 == null ? 0 : 1;
      }
      dr = b * b - 4 * a * c;
      if (dr < 0)
        return 0;
      dr = Math.sqrt(dr);
      if (!isFinite(dr))
        return 0;
      q = b < 0 ? -(b - dr) / 2 : -(b + dr) / 2;
      res = A.validUnitDivide(q, a);
      if (res != null) {
        _this.root0 = res;
        rootCount = 1;
      } else
        rootCount = 0;
      res = A.validUnitDivide(c, q);
      if (res != null) {
        rootCount0 = rootCount + 1;
        if (rootCount === 0)
          _this.root0 = res;
        else
          _this.root1 = res;
        rootCount = rootCount0;
      }
      if (rootCount === 2) {
        t1 = _this.root0;
        t1.toString;
        t2 = _this.root1;
        t2.toString;
        if (t1 > t2) {
          _this.root0 = t2;
          _this.root1 = t1;
        } else if (t1 === t2)
          return 1;
      }
      return rootCount;
    }
  };
  A.SkQuadCoefficients.prototype = {
    evalX$1(t) {
      return (this.ax * t + this.bx) * t + this.cx;
    },
    evalY$1(t) {
      return (this.ay * t + this.by) * t + this.cy;
    }
  };
  A.PathWinding.prototype = {
    _walkPath$0() {
      var t2, t3, verb, n, winding, t4, t5, t6, t7, t8, t9, t10, isMono, conics, _this = this,
        t1 = _this.pathRef,
        iter = A.PathIterator$(t1, true);
      for (t2 = _this._ui$_buffer, t3 = type$.JSArray_Conic; verb = iter.next$1(t2), verb !== 6;)
        switch (verb) {
          case 0:
          case 5:
            break;
          case 1:
            _this._computeLineWinding$0();
            break;
          case 2:
            n = !A.PathWinding__isQuadMonotonic(t2) ? A.PathWinding__chopQuadAtExtrema(t2) : 0;
            winding = _this._computeMonoQuadWinding$6(t2[0], t2[1], t2[2], t2[3], t2[4], t2[5]);
            if (n > 0)
              winding += _this._computeMonoQuadWinding$6(t2[4], t2[5], t2[6], t2[7], t2[8], t2[9]);
            _this._w += winding;
            break;
          case 3:
            t4 = t1._conicWeights[iter._conicWeightIndex];
            t5 = t2[0];
            t6 = t2[1];
            t7 = t2[2];
            t8 = t2[3];
            t9 = t2[4];
            t10 = t2[5];
            isMono = A.PathWinding__isQuadMonotonic(t2);
            conics = A._setArrayType([], t3);
            new A.Conic(t5, t6, t7, t8, t9, t10, t4).chopAtYExtrema$1(conics);
            _this._computeMonoConicWinding$1(conics[0]);
            if (!isMono && conics.length === 2)
              _this._computeMonoConicWinding$1(conics[1]);
            break;
          case 4:
            _this._computeCubicWinding$0();
            break;
        }
    },
    _computeLineWinding$0() {
      var y1, y0, dir, t2, crossProduct, _this = this,
        t1 = _this._ui$_buffer,
        x0 = t1[0],
        startY = t1[1],
        x1 = t1[2],
        endY = t1[3];
      if (startY > endY) {
        y1 = startY;
        y0 = endY;
        dir = -1;
      } else {
        y1 = endY;
        y0 = startY;
        dir = 1;
      }
      t1 = _this.y;
      if (t1 < y0 || t1 > y1)
        return;
      t2 = _this.x;
      if (A.PathWinding__checkOnCurve(t2, t1, x0, startY, x1, endY)) {
        ++_this._onCurveCount;
        return;
      }
      if (t1 === y1)
        return;
      crossProduct = (x1 - x0) * (t1 - startY) - (endY - startY) * (t2 - x0);
      if (crossProduct === 0) {
        if (t2 !== x1 || t1 !== endY)
          ++_this._onCurveCount;
        dir = 0;
      } else if (A.SPath_scalarSignedAsInt(crossProduct) === dir)
        dir = 0;
      _this._w += dir;
    },
    _computeMonoQuadWinding$6(x0, y0, x1, y1, x2, y2) {
      var y20, y00, dir, t1, t2, quadRoots, xt, t3, _this = this;
      if (y0 > y2) {
        y20 = y0;
        y00 = y2;
        dir = -1;
      } else {
        y20 = y2;
        y00 = y0;
        dir = 1;
      }
      t1 = _this.y;
      if (t1 < y00 || t1 > y20)
        return 0;
      t2 = _this.x;
      if (A.PathWinding__checkOnCurve(t2, t1, x0, y0, x2, y2)) {
        ++_this._onCurveCount;
        return 0;
      }
      if (t1 === y20)
        return 0;
      quadRoots = new A.QuadRoots();
      if (0 === quadRoots.findRoots$3(y0 - 2 * y1 + y2, 2 * (y1 - y0), y0 - t1))
        xt = dir === 1 ? x0 : x2;
      else {
        t3 = quadRoots.root0;
        t3.toString;
        xt = ((x2 - 2 * x1 + x0) * t3 + 2 * (x1 - x0)) * t3 + x0;
      }
      if (Math.abs(xt - t2) < 0.000244140625)
        if (t2 !== x2 || t1 !== y2) {
          ++_this._onCurveCount;
          return 0;
        }
      return xt < t2 ? dir : 0;
    },
    _computeMonoConicWinding$1(conic) {
      var y20, y00, dir, t1, t2, t3, $B, quadRoots, xt, t4, _this = this,
        y0 = conic.p0y,
        y2 = conic.p2y;
      if (y0 > y2) {
        y20 = y0;
        y00 = y2;
        dir = -1;
      } else {
        y20 = y2;
        y00 = y0;
        dir = 1;
      }
      t1 = _this.y;
      if (t1 < y00 || t1 > y20)
        return;
      t2 = _this.x;
      if (A.PathWinding__checkOnCurve(t2, t1, conic.p0x, y0, conic.p2x, y2)) {
        ++_this._onCurveCount;
        return;
      }
      if (t1 === y20)
        return;
      t3 = conic.fW;
      $B = conic.p1y * t3 - t1 * t3 + t1;
      quadRoots = new A.QuadRoots();
      if (0 === quadRoots.findRoots$3(y2 + (y0 - 2 * $B), 2 * ($B - y0), y0 - t1))
        xt = dir === 1 ? conic.p0x : conic.p2x;
      else {
        t4 = quadRoots.root0;
        t4.toString;
        xt = A.Conic_evalNumerator(conic.p0x, conic.p1x, conic.p2x, t3, t4) / A.Conic_evalDenominator(t3, t4);
      }
      if (Math.abs(xt - t2) < 0.000244140625)
        if (t2 !== conic.p2x || t1 !== conic.p2y) {
          ++_this._onCurveCount;
          return;
        }
      t1 = _this._w;
      _this._w = t1 + (xt < t2 ? dir : 0);
    },
    _computeCubicWinding$0() {
      var i,
        t1 = this._ui$_buffer,
        n = A.chopCubicAtYExtrema(t1, t1);
      for (i = 0; i <= n; ++i)
        this._windingMonoCubic$1(i * 3 * 2);
    },
    _windingMonoCubic$1(bufferIndex) {
      var px2, px3, py3, y3, y0, dir, t2, t3, min, max, t, xt, _this = this,
        t1 = _this._ui$_buffer,
        bufferIndex0 = bufferIndex + 1,
        px0 = t1[bufferIndex],
        bufferIndex1 = bufferIndex0 + 1,
        py0 = t1[bufferIndex0],
        px1 = t1[bufferIndex1];
      bufferIndex0 = bufferIndex1 + 1 + 1;
      px2 = t1[bufferIndex0];
      bufferIndex0 = bufferIndex0 + 1 + 1;
      px3 = t1[bufferIndex0];
      py3 = t1[bufferIndex0 + 1];
      if (py0 > py3) {
        y3 = py0;
        y0 = py3;
        dir = -1;
      } else {
        y3 = py3;
        y0 = py0;
        dir = 1;
      }
      t2 = _this.y;
      if (t2 < y0 || t2 > y3)
        return;
      t3 = _this.x;
      if (A.PathWinding__checkOnCurve(t3, t2, px0, py0, px3, py3)) {
        ++_this._onCurveCount;
        return;
      }
      if (t2 === y3)
        return;
      min = Math.min(px0, Math.min(px1, Math.min(px2, px3)));
      max = Math.max(px0, Math.max(px1, Math.max(px2, px3)));
      if (t3 < min)
        return;
      if (t3 > max) {
        _this._w += dir;
        return;
      }
      t = A.chopMonoAtY(t1, bufferIndex, t2);
      if (t == null)
        return;
      xt = A.evalCubicPts(px0, px1, px2, px3, t);
      if (Math.abs(xt - t3) < 0.000244140625)
        if (t3 !== px3 || t2 !== py3) {
          ++_this._onCurveCount;
          return;
        }
      t1 = _this._w;
      _this._w = t1 + (xt < t3 ? dir : 0);
    }
  };
  A.PlatformDispatcher.prototype = {
    _decodeDisplayFeatures$4$bounds$devicePixelRatio$state$type(bounds, devicePixelRatio, state, type) {
      var i, rectOffset, t1, t2, t3, t4, t5, t6,
        result = A._setArrayType([], type$.JSArray_DisplayFeature);
      for (i = 0; false; ++i) {
        rectOffset = i * 4;
        t1 = bounds[rectOffset].$div(0, devicePixelRatio);
        t2 = bounds[rectOffset + 1].$div(0, devicePixelRatio);
        t3 = bounds[rectOffset + 2].$div(0, devicePixelRatio);
        t4 = bounds[rectOffset + 3].$div(0, devicePixelRatio);
        t5 = B.List_sHJ[type[i]];
        t6 = state[i].$lt(0, 4) ? B.List_pTL[state[i]] : B.DisplayFeatureState_0;
        result.push(new A.DisplayFeature(new A.Rect(t1, t2, t3, t4), t5, t6));
      }
      return result;
    },
    set$onReportTimings(callback) {
      var t1 = callback == null;
      if (t1 !== (this._onReportTimings == null))
        this._setNeedsReportTimings$1(!t1);
      this._onReportTimings = callback;
    },
    get$_setNeedsReportTimings() {
      var t1 = this.__PlatformDispatcher__setNeedsReportTimings_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      return t1;
    },
    _nativeSetNeedsReportTimings$1(value) {
    },
    scheduleFrame$0() {
      if (this._frameTimer == null)
        this._frameTimer = A.Timer_Timer(B.Duration_16000, new A.PlatformDispatcher_scheduleFrame_closure(this));
    },
    updateSemantics$1(update) {
      throw A.wrapException(A.UnimplementedError$(null));
    },
    _setNeedsReportTimings$1(arg0) {
      return this.get$_setNeedsReportTimings().call$1(arg0);
    }
  };
  A.PlatformDispatcher__zonedPlatformMessageResponseCallback_closure.prototype = {
    call$1(data) {
      this.registrationZone.runUnaryGuarded$2(this.callback, data);
    },
    $signature: 98
  };
  A.PlatformDispatcher_frameCallback_closure.prototype = {
    call$3(frameCount, buildTime, drawTime) {
      A.print("Frame #" + frameCount + ": build " + A.S(buildTime) + " ms; draw " + A.S(drawTime) + " ms");
      return true;
    },
    $signature: 100
  };
  A.PlatformDispatcher_scheduleFrame_closure.prototype = {
    call$0() {
      var microseconds,
        t1 = this.$this;
      if (t1._continue)
        t1._frameTimer = null;
      microseconds = t1._ui$_frameTime._duration;
      t1._ui$_frameTime = new A.Duration(microseconds + 16000);
      A.Timer_Timer(B.Duration_0, new A.PlatformDispatcher_scheduleFrame__closure(t1, microseconds));
    },
    $signature: 0
  };
  A.PlatformDispatcher_scheduleFrame__closure.prototype = {
    call$0() {
      var t1,
        beginSw = new A.Stopwatch();
      $.$get$Stopwatch__frequency();
      t1 = this.$this;
      A.Timer_Timer(B.Duration_0, new A.PlatformDispatcher_scheduleFrame___closure(t1, beginSw));
      beginSw.start$0();
      A._invoke1(t1._onBeginFrame, t1._onBeginFrameZone, A.Duration$(0, this.microseconds, 0, 0, 0));
      if (beginSw._stop == null)
        beginSw._stop = $.Primitives_timerTicks.call$0();
    },
    $signature: 0
  };
  A.PlatformDispatcher_scheduleFrame___closure.prototype = {
    call$0() {
      var t1,
        drawSw = new A.Stopwatch();
      $.$get$Stopwatch__frequency();
      drawSw.start$0();
      t1 = this.$this;
      A._invoke(t1._onDrawFrame, t1._onDrawFrameZone);
      if (drawSw._stop == null)
        drawSw._stop = $.Primitives_timerTicks.call$0();
      t1._continue = $.$get$PlatformDispatcher_frameCallback().call$3($.PlatformDispatcher__frameCount, this.beginSw.get$elapsedMicroseconds() / 1000, drawSw.get$elapsedMicroseconds() / 1000);
      $.PlatformDispatcher__frameCount = $.PlatformDispatcher__frameCount + 1;
    },
    $signature: 0
  };
  A.PlatformConfiguration.prototype = {};
  A.ViewConfiguration0.prototype = {
    toString$0(_) {
      return A.getRuntimeTypeOfDartObject(this).toString$0(0) + "[window: " + A.S(this.window) + ", geometry: " + this.geometry.toString$0(0) + "]";
    }
  };
  A.AppLifecycleState.prototype = {
    _enumToString$0() {
      return "AppLifecycleState." + this._name;
    }
  };
  A.ViewPadding.prototype = {
    toString$0(_) {
      var _this = this;
      return "ViewPadding(left: " + A.S(_this.left) + ", top: " + A.S(_this.top) + ", right: " + A.S(_this.right) + ", bottom: " + A.S(_this.bottom) + ")";
    }
  };
  A.Locale.prototype = {
    get$languageCode() {
      return "en";
    },
    get$countryCode() {
      return "US";
    },
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (!(other instanceof A.Locale))
        return false;
      other.get$countryCode();
      t1 = false;
      if (other.get$languageCode() === this.get$languageCode())
        t1 = other.get$countryCode() === "US";
      return t1;
    },
    get$hashCode(_) {
      var t1 = this.get$languageCode();
      return A.hashValues(t1, null, this.get$countryCode() === "" ? null : this.get$countryCode(), B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd);
    },
    toString$0(_) {
      var t1;
      if ($.Locale__cachedLocale !== this) {
        $.Locale__cachedLocale = this;
        $.Locale__cachedLocaleString = this._rawToString$1("_");
      }
      t1 = $.Locale__cachedLocaleString;
      t1.toString;
      return t1;
    },
    _rawToString$1(separator) {
      var t1 = this.get$languageCode();
      t1 += separator + this.get$countryCode();
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  A.DartPerformanceMode.prototype = {
    _enumToString$0() {
      return "DartPerformanceMode." + this._name;
    }
  };
  A.DisplayFeature.prototype = {
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      return other instanceof A.DisplayFeature && _this.bounds.$eq(0, other.bounds) && _this.type === other.type && _this.state === other.state;
    },
    get$hashCode(_) {
      return A.Object_hash(this.bounds, this.type, this.state, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "DisplayFeature(rect: " + this.bounds.toString$0(0) + ", type: " + this.type.toString$0(0) + ", state: " + this.state.toString$0(0) + ")";
    }
  };
  A.DisplayFeatureType.prototype = {
    _enumToString$0() {
      return "DisplayFeatureType." + this._name;
    }
  };
  A.DisplayFeatureState.prototype = {
    _enumToString$0() {
      return "DisplayFeatureState." + this._name;
    }
  };
  A.CallbackHandle.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      if (A.getRuntimeTypeOfDartObject(this) !== J.get$runtimeType$(other))
        return false;
      return other instanceof A.CallbackHandle && other._ui$_handle === this._ui$_handle;
    },
    get$hashCode(_) {
      return B.JSInt_methods.get$hashCode(this._ui$_handle);
    }
  };
  A.PluginUtilities_getCallbackHandle_closure.prototype = {
    call$0() {
      A._getCallbackHandle(this.callback);
    },
    $signature: 123
  };
  A.PluginUtilities_getCallbackFromHandle_closure.prototype = {
    call$0() {
      return A._getCallbackFromHandle(this.handle._ui$_handle);
    },
    $signature: 166
  };
  A.PointerDeviceKind.prototype = {
    _enumToString$0() {
      return "PointerDeviceKind." + this._name;
    }
  };
  A.SemanticsAction.prototype = {
    toString$0(_) {
      switch (this.index) {
        case 1:
          return "SemanticsAction.tap";
        case 2:
          return "SemanticsAction.longPress";
        case 4:
          return "SemanticsAction.scrollLeft";
        case 8:
          return "SemanticsAction.scrollRight";
        case 16:
          return "SemanticsAction.scrollUp";
        case 32:
          return "SemanticsAction.scrollDown";
        case 64:
          return "SemanticsAction.increase";
        case 128:
          return "SemanticsAction.decrease";
        case 256:
          return "SemanticsAction.showOnScreen";
        case 512:
          return "SemanticsAction.moveCursorForwardByCharacter";
        case 1024:
          return "SemanticsAction.moveCursorBackwardByCharacter";
        case 2048:
          return "SemanticsAction.setSelection";
        case 4096:
          return "SemanticsAction.copy";
        case 8192:
          return "SemanticsAction.cut";
        case 16384:
          return "SemanticsAction.paste";
        case 32768:
          return "SemanticsAction.didGainAccessibilityFocus";
        case 65536:
          return "SemanticsAction.didLoseAccessibilityFocus";
        case 131072:
          return "SemanticsAction.customAction";
        case 262144:
          return "SemanticsAction.dismiss";
        case 524288:
          return "SemanticsAction.moveCursorForwardByWord";
        case 1048576:
          return "SemanticsAction.moveCursorBackwardByWord";
        case 2097152:
          return "SemanticsAction.setText";
      }
      return "";
    }
  };
  A.SemanticsFlag.prototype = {
    toString$0(_) {
      switch (this.index) {
        case 1:
          return "SemanticsFlag.hasCheckedState";
        case 2:
          return "SemanticsFlag.isChecked";
        case 4:
          return "SemanticsFlag.isSelected";
        case 8:
          return "SemanticsFlag.isButton";
        case 16:
          return "SemanticsFlag.isTextField";
        case 32:
          return "SemanticsFlag.isFocused";
        case 64:
          return "SemanticsFlag.hasEnabledState";
        case 128:
          return "SemanticsFlag.isEnabled";
        case 256:
          return "SemanticsFlag.isInMutuallyExclusiveGroup";
        case 512:
          return "SemanticsFlag.isHeader";
        case 1024:
          return "SemanticsFlag.isObscured";
        case 2048:
          return "SemanticsFlag.scopesRoute";
        case 4096:
          return "SemanticsFlag.namesRoute";
        case 8192:
          return "SemanticsFlag.isHidden";
        case 16384:
          return "SemanticsFlag.isImage";
        case 32768:
          return "SemanticsFlag.isLiveRegion";
        case 65536:
          return "SemanticsFlag.hasToggledState";
        case 131072:
          return "SemanticsFlag.isToggled";
        case 262144:
          return "SemanticsFlag.hasImplicitScrolling";
        case 524288:
          return "SemanticsFlag.isMultiline";
        case 1048576:
          return "SemanticsFlag.isReadOnly";
        case 2097152:
          return "SemanticsFlag.isFocusable";
        case 4194304:
          return "SemanticsFlag.isLink";
        case 8388608:
          return "SemanticsFlag.isSlider";
        case 16777216:
          return "SemanticsFlag.isKeyboardKey";
        case 33554432:
          return "SemanticsFlag.isCheckStateMixed";
      }
      return "";
    }
  };
  A.SemanticsUpdateBuilder.prototype = {
    _ui$_constructor$0() {
      throw A.wrapException(A.UnimplementedError$(null));
    }
  };
  A.FontStyle.prototype = {
    _enumToString$0() {
      return "FontStyle." + this._name;
    }
  };
  A.FontWeight.prototype = {
    toString$0(_) {
      var t1 = B.Map_IMUVa.$index(0, this.index);
      t1.toString;
      return t1;
    }
  };
  A.FontVariation.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(this))
        return false;
      return other instanceof A.FontVariation && other.axis === this.axis && other.value === this.value;
    },
    get$hashCode(_) {
      return A.Object_hash(this.axis, this.value, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "FontVariation('" + this.axis + "', " + A.S(this.value) + ")";
    }
  };
  A.TextAlign.prototype = {
    _enumToString$0() {
      return "TextAlign." + this._name;
    }
  };
  A.TextBaseline.prototype = {
    _enumToString$0() {
      return "TextBaseline." + this._name;
    }
  };
  A.TextDecoration.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.TextDecoration && other._mask === this._mask;
    },
    get$hashCode(_) {
      return B.JSInt_methods.get$hashCode(this._mask);
    },
    toString$0(_) {
      var values,
        t1 = this._mask;
      if (t1 === 0)
        return "TextDecoration.none";
      values = A._setArrayType([], type$.JSArray_String);
      if ((t1 & 1) !== 0)
        values.push("underline");
      if ((t1 & 2) !== 0)
        values.push("overline");
      if ((t1 & 4) !== 0)
        values.push("lineThrough");
      if (values.length === 1)
        return "TextDecoration." + values[0];
      return "TextDecoration.combine([" + B.JSArray_methods.join$1(values, ", ") + "])";
    }
  };
  A.TextDecorationStyle.prototype = {
    _enumToString$0() {
      return "TextDecorationStyle." + this._name;
    }
  };
  A.TextLeadingDistribution.prototype = {
    _enumToString$0() {
      return "TextLeadingDistribution." + this._name;
    }
  };
  A.TextHeightBehavior.prototype = {
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      return other instanceof A.TextHeightBehavior && other.applyHeightToFirstAscent === _this.applyHeightToFirstAscent && other.applyHeightToLastDescent === _this.applyHeightToLastDescent && other.leadingDistribution === _this.leadingDistribution;
    },
    get$hashCode(_) {
      return A.Object_hash(this.applyHeightToFirstAscent, this.applyHeightToLastDescent, this.leadingDistribution.index, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "TextHeightBehavior(applyHeightToFirstAscent: " + this.applyHeightToFirstAscent + ", applyHeightToLastDescent: " + this.applyHeightToLastDescent + ", leadingDistribution: " + this.leadingDistribution.toString$0(0) + ")";
    }
  };
  A.TextStyle.prototype = {
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      return other instanceof A.TextStyle && other._leadingDistribution == _this._leadingDistribution && other._fontFamily == _this._fontFamily && other._fontSize == _this._fontSize && other._letterSpacing == _this._letterSpacing && other._wordSpacing == _this._wordSpacing && other._height == _this._height && other._decorationThickness == _this._decorationThickness && other._background == _this._background && other._foreground == _this._foreground && A._listEquals(other._encoded, _this._encoded) && A._listEquals(other._shadows, _this._shadows) && A._listEquals(other._fontFamilyFallback, _this._fontFamilyFallback) && A._listEquals(other._fontFeatures, _this._fontFeatures) && A._listEquals(other._fontVariations, _this._fontVariations);
    },
    get$hashCode(_) {
      var t3, t4, _this = this,
        t1 = A.Object_hashAll(_this._encoded),
        t2 = _this._shadows;
      if (t2 == null)
        t2 = null;
      else
        t2 = A.Object_hashAll(t2);
      t3 = _this._fontFeatures;
      if (t3 == null)
        t3 = null;
      else
        t3 = A.Object_hashAll(t3);
      t4 = _this._fontVariations;
      if (t4 == null)
        t4 = null;
      else
        t4 = A.Object_hashAll(t4);
      return A.Object_hash(t1, _this._leadingDistribution, _this._fontFamily, _this._fontFamilyFallback, _this._fontSize, _this._letterSpacing, _this._wordSpacing, _this._height, _this._locale, _this._background, _this._foreground, t2, _this._decorationThickness, t3, t4, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var t13, t14, t15, t16, t17, t18, t19, t20, t21, _this = this,
        _s11_ = "unspecified",
        t1 = _this._encoded,
        t2 = A.S((t1[0] & 2) === 2 ? new A.Color(t1[1] >>> 0) : _s11_),
        t3 = A.S((t1[0] & 4) === 4 ? new A.TextDecoration(t1[2]) : _s11_),
        t4 = A.S((t1[0] & 8) === 8 ? new A.Color(t1[3] >>> 0) : _s11_),
        t5 = A.S((t1[0] & 16) === 16 ? B.List_U9x[t1[4]] : _s11_),
        t6 = A.S((t1[0] & 256) === 256 ? _this._decorationThickness : _s11_),
        t7 = A.S((t1[0] & 32) === 32 ? B.List_gVO[t1[5]] : _s11_),
        t8 = A.S((t1[0] & 64) === 64 ? B.List_FontStyle_0_FontStyle_1[t1[6]] : _s11_),
        t9 = A.S((t1[0] & 128) === 128 ? B.List_TextBaseline_0_TextBaseline_1[t1[7]] : _s11_),
        t10 = (t1[0] & 512) === 512,
        t11 = t10 && _this._fontFamily !== "" ? _this._fontFamily : _s11_,
        t12 = false;
      if (t10) {
        t10 = _this._fontFamilyFallback;
        if (t10 != null)
          t10 = t10.length !== 0;
        else
          t10 = t12;
      } else
        t10 = t12;
      if (t10) {
        t10 = _this._fontFamilyFallback;
        if (t10 == null)
          t10 = type$.List_String._as(t10);
      } else
        t10 = _s11_;
      t10 = A.S(t10);
      t12 = A.S((t1[0] & 1024) === 1024 ? _this._fontSize : _s11_);
      t13 = t1[0];
      t14 = (t13 & 2048) === 2048 ? A.S(_this._letterSpacing) + "x" : _s11_;
      t15 = (t13 & 4096) === 4096 ? A.S(_this._wordSpacing) + "x" : _s11_;
      t13 = (t13 & 8192) === 8192 ? A.S(_this._height) + "x" : _s11_;
      t16 = _this._leadingDistribution;
      t16 = A.S(t16 == null ? _s11_ : t16);
      t17 = t1[0];
      t18 = (t17 & 16384) === 16384 ? _this._locale : _s11_;
      t19 = A.S((t17 & 32768) === 32768 ? _this._background : _s11_);
      t17 = A.S((t1[0] & 65536) === 65536 ? _this._foreground : _s11_);
      t20 = A.S((t1[0] & 131072) === 131072 ? _this._shadows : _s11_);
      t21 = A.S((t1[0] & 262144) === 262144 ? _this._fontFeatures : _s11_);
      return "TextStyle(color: " + t2 + ", decoration: " + t3 + ", decorationColor: " + t4 + ", decorationStyle: " + t5 + ", decorationThickness: " + t6 + ", fontWeight: " + t7 + ", fontStyle: " + t8 + ", textBaseline: " + t9 + ", fontFamily: " + A.S(t11) + ", fontFamilyFallback: " + t10 + ", fontSize: " + t12 + ", letterSpacing: " + t14 + ", wordSpacing: " + t15 + ", height: " + t13 + ", leadingDistribution: " + t16 + ", locale: " + A.S(t18) + ", background: " + t19 + ", foreground: " + t17 + ", shadows: " + t20 + ", fontFeatures: " + t21 + ", fontVariations: " + A.S((t1[0] & 524288) === 524288 ? _this._fontVariations : _s11_) + ")";
    }
  };
  A.ParagraphStyle.prototype = {
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      return other instanceof A.ParagraphStyle && other._fontFamily == _this._fontFamily && other._fontSize == _this._fontSize && other._height == _this._height && J.$eq$(other._strutStyle, _this._strutStyle) && other._ellipsis == _this._ellipsis && J.$eq$(other._locale, _this._locale) && A._listEquals(other._encoded, _this._encoded);
    },
    get$hashCode(_) {
      var _this = this;
      return A.hashValues(A.hashList(_this._encoded), _this._fontFamily, _this._fontSize, _this._height, _this._ellipsis, _this._locale, _this._leadingDistribution, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd);
    },
    toString$0(_) {
      var t7, t8, t9, t10, t11, _this = this,
        _s11_ = "unspecified",
        t1 = _this._encoded,
        t2 = A.S((t1[0] & 2) === 2 ? B.List_9Bh[t1[1]] : _s11_),
        t3 = A.S((t1[0] & 4) === 4 ? B.List_TextDirection_0_TextDirection_1[t1[2]] : _s11_),
        t4 = A.S((t1[0] & 8) === 8 ? B.List_gVO[t1[3]] : _s11_),
        t5 = A.S((t1[0] & 16) === 16 ? B.List_FontStyle_0_FontStyle_1[t1[4]] : _s11_),
        t6 = A.S((t1[0] & 32) === 32 ? t1[5] : _s11_);
      if ((t1[0] & 64) === 64) {
        t7 = t1[6];
        t7 = new A.TextHeightBehavior((t7 & 1) === 0, (t7 & 2) === 0, _this._leadingDistribution).toString$0(0);
      } else
        t7 = _s11_;
      t8 = t1[0];
      t9 = (t8 & 128) === 128 ? _this._fontFamily : _s11_;
      t10 = A.S((t8 & 256) === 256 ? _this._fontSize : _s11_);
      t1 = t1[0];
      t8 = (t1 & 512) === 512 ? A.S(_this._height) + "x" : _s11_;
      t11 = (t1 & 1024) === 1024 ? '"' + A.S(_this._ellipsis) + '"' : _s11_;
      return "ParagraphStyle(textAlign: " + t2 + ", textDirection: " + t3 + ", fontWeight: " + t4 + ", fontStyle: " + t5 + ", maxLines: " + t6 + ", textHeightBehavior: " + t7 + ", fontFamily: " + A.S(t9) + ", fontSize: " + t10 + ", height: " + t8 + ", ellipsis: " + t11 + ", locale: " + A.S((t1 & 2048) === 2048 ? _this._locale : _s11_) + ")";
    }
  };
  A.TextDirection.prototype = {
    _enumToString$0() {
      return "TextDirection." + this._name;
    }
  };
  A.TextAffinity.prototype = {
    _enumToString$0() {
      return "TextAffinity." + this._name;
    }
  };
  A.TextPosition.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(this))
        return false;
      return other instanceof A.TextPosition && other.offset === this.offset && other.affinity === this.affinity;
    },
    get$hashCode(_) {
      return A.hashValues(this.offset, this.affinity, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd);
    },
    toString$0(_) {
      return "TextPosition(offset: " + this.offset + ", affinity: " + this.affinity.toString$0(0) + ")";
    }
  };
  A.TextRange.prototype = {
    get$isValid() {
      return this.start >= 0 && this.end >= 0;
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      return other instanceof A.TextRange && other.start === this.start && other.end === this.end;
    },
    get$hashCode(_) {
      return A.hashValues(B.JSInt_methods.get$hashCode(this.start), B.JSInt_methods.get$hashCode(this.end), B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd);
    },
    toString$0(_) {
      return "TextRange(start: " + this.start + ", end: " + this.end + ")";
    }
  };
  A.ParagraphConstraints.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(this))
        return false;
      return other instanceof A.ParagraphConstraints && other.width === this.width;
    },
    get$hashCode(_) {
      return B.JSNumber_methods.get$hashCode(this.width);
    },
    toString$0(_) {
      return "ParagraphConstraints(width: " + A.S(this.width) + ")";
    }
  };
  A.BoxHeightStyle.prototype = {
    _enumToString$0() {
      return "BoxHeightStyle." + this._name;
    }
  };
  A.BoxWidthStyle.prototype = {
    _enumToString$0() {
      return "BoxWidthStyle." + this._name;
    }
  };
  A.PlaceholderAlignment.prototype = {
    _enumToString$0() {
      return "PlaceholderAlignment." + this._name;
    }
  };
  A.Paragraph.prototype = {
    layout$1(constraints) {
      var t1, t2, t3, t4, paragraphRight, minIntrinsicWidth, maxIntrinsicWidth, currentLineTop, currentLineWidth, currentLineHeight, currentLine, _i, span, t5, t6, t7, spanWidth, currentLineWidth0, t8, maxLines, _this = this;
      _this.__Paragraph__boxes_A = A._setArrayType([], type$.JSArray_List__SpanBox);
      for (t1 = _this._spans, t2 = t1.length, t3 = constraints.width, t4 = type$.JSArray__SpanBox, paragraphRight = 0, minIntrinsicWidth = 0, maxIntrinsicWidth = 0, currentLineTop = 0, currentLineWidth = 0, currentLineHeight = 0, currentLine = null, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i, currentLineWidth = currentLineWidth0) {
        span = t1[_i];
        t5 = span._style;
        t6 = t5._fontSize;
        t7 = t6 == null ? 10 : t6;
        spanWidth = span._ui$_text.length * t7;
        minIntrinsicWidth = Math.max(minIntrinsicWidth, spanWidth);
        maxIntrinsicWidth += spanWidth;
        if (currentLine == null || spanWidth > t3 - currentLineWidth) {
          t7 = _this.__Paragraph__boxes_A;
          currentLine = A._setArrayType([], t4);
          t7.push(currentLine);
          currentLineTop += currentLineHeight;
          currentLineWidth = 0;
          currentLineHeight = 0;
        }
        currentLineWidth0 = currentLineWidth + spanWidth;
        t5 = t5._height;
        t7 = t5 == null;
        t8 = t7 ? t6 : t5;
        currentLine.push(new A._SpanBox(currentLineWidth, currentLineTop, currentLineWidth0, currentLineTop + (t8 == null ? 10 : t8), span));
        if (t7)
          t5 = t6;
        if (t5 == null)
          t5 = 10;
        currentLineHeight = Math.max(currentLineHeight, t5);
        paragraphRight = Math.max(paragraphRight, currentLineWidth0);
      }
      _this._minIntrinsicWidth = Math.min(minIntrinsicWidth, maxIntrinsicWidth);
      _this._maxIntrinsicWidth = maxIntrinsicWidth;
      _this._width = paragraphRight;
      _this._height = currentLineTop + currentLineHeight;
      maxLines = _this._paragraphStyle._maxLines;
      _this._didExceedMaxLines = maxLines != null && _this.__Paragraph__boxes_A.length > maxLines;
    },
    getBoxesForRange$4$boxHeightStyle$boxWidthStyle(start, end, boxHeightStyle, boxWidthStyle) {
      throw A.wrapException(A.UnimplementedError$(null));
    },
    getBoxesForRange$3$boxHeightStyle(start, end, boxHeightStyle) {
      return this.getBoxesForRange$4$boxHeightStyle$boxWidthStyle(start, end, boxHeightStyle, B.BoxWidthStyle_0);
    },
    getBoxesForPlaceholders$0() {
      var t2, _i, t3,
        result = A._setArrayType([], type$.JSArray_TextBox),
        t1 = this.__Paragraph__boxes_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t2 = t1.length;
      _i = 0;
      for (; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i)
        for (t3 = B.JSArray_methods.get$iterator(t1[_i]); t3.moveNext$0();)
          t3.get$current();
      return result;
    },
    getPositionForOffset$1(offset) {
      throw A.wrapException(A.UnimplementedError$(null));
    },
    getWordBoundary$1(position) {
      throw A.wrapException(A.UnimplementedError$(null));
    },
    getLineBoundary$1(position) {
      throw A.wrapException(A.UnimplementedError$(null));
    },
    computeLineMetrics$0() {
      this._computeLineMetrics$0();
    },
    _computeLineMetrics$0() {
      throw A.wrapException(A.UnimplementedError$(null));
    }
  };
  A._Span.prototype = {};
  A._SpanBox.prototype = {};
  A._TextSpan.prototype = {};
  A.ParagraphBuilder.prototype = {
    pushStyle$1(style) {
      var t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, fullFontFamilies, encodedFontFeatures, byteOffset, _i,
        t1 = this._currentStyle,
        t2 = style._color;
      if (t2 == null)
        t2 = t1._color;
      t3 = style._decoration;
      if (t3 == null)
        t3 = t1._decoration;
      t4 = style._decorationColor;
      if (t4 == null)
        t4 = t1._decorationColor;
      t5 = style._decorationStyle;
      if (t5 == null)
        t5 = t1._decorationStyle;
      t6 = style._decorationThickness;
      if (t6 == null)
        t6 = t1._decorationThickness;
      t7 = style._fontWeight;
      if (t7 == null)
        t7 = t1._fontWeight;
      t8 = style._fontStyle;
      if (t8 == null)
        t8 = t1._fontStyle;
      t9 = style._textBaseline;
      if (t9 == null)
        t9 = t1._textBaseline;
      t10 = style._fontFamily;
      t11 = t10 == null;
      t12 = t11 ? t1._fontFamily : t10;
      t13 = style._fontFamilyFallback;
      t14 = t13 == null;
      t15 = t14 ? t1._fontFamilyFallback : t13;
      t16 = style._fontSize;
      if (t16 == null)
        t16 = t1._fontSize;
      t17 = style._letterSpacing;
      if (t17 == null)
        t17 = t1._letterSpacing;
      t18 = style._wordSpacing;
      if (t18 == null)
        t18 = t1._wordSpacing;
      t19 = style._height;
      if (t19 == null)
        t19 = t1._height;
      t20 = style._background;
      if (t20 == null)
        t20 = t1._background;
      t21 = style._foreground;
      if (t21 == null)
        t21 = t1._foreground;
      t22 = style._shadows;
      if (t22 == null)
        t22 = t1._shadows;
      else {
        t23 = t1._shadows;
        if (!(t23 == null)) {
          t22 = A.List_List$_of(t22, type$.Shadow);
          B.JSArray_methods.addAll$1(t22, t23);
        }
      }
      t23 = style._fontFeatures;
      t24 = t23 == null;
      if (t24)
        t25 = t1._fontFeatures;
      else {
        t25 = t1._fontFeatures;
        if (t25 == null)
          t25 = t23;
        else {
          t26 = A.List_List$_of(t23, type$.FontFeature);
          B.JSArray_methods.addAll$1(t26, t25);
          t25 = t26;
        }
      }
      t18 = A.TextStyle$(t20, t2, t3, t4, t5, t6, t12, t15, t25, t16, t8, null, t7, t21, t19, null, t17, t1._locale, t22, t9, t18);
      this._currentStyle = t18;
      this._styleStack.push(t18);
      fullFontFamilies = A._setArrayType([], type$.JSArray_String);
      fullFontFamilies.push(t11 ? "" : t10);
      if (!t14)
        B.JSArray_methods.addAll$1(fullFontFamilies, t13);
      if (!t24) {
        t1 = t23.length;
        encodedFontFeatures = new DataView(new ArrayBuffer(t1 * 8));
        for (byteOffset = 0, _i = 0; _i < t23.length; t23.length === t1 || (0, A.throwConcurrentModificationError)(t23), ++_i) {
          t23[_i]._encode$1(J.asByteData$2$x(B.NativeByteData_methods.get$buffer(encodedFontFeatures), byteOffset, 8));
          byteOffset += 8;
        }
      }
    },
    addText$1(text) {
      var t1, t2, _i, span;
      for (t1 = B.JSString_methods.split$1(text, $.$get$ParagraphBuilder__whitespace()), t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
        span = t1[_i];
        this._spans.push(new A._TextSpan(this._currentStyle, span));
      }
    },
    build$0() {
      var t1 = this._spans;
      this._spans = A._setArrayType([], type$.JSArray__Span);
      return new A.Paragraph(this._style, t1);
    }
  };
  A.FlutterView.prototype = {
    get$_viewConfiguration() {
      var t1 = this.platformDispatcher._windowConfigurations.$index(0, this.viewId);
      return t1 == null ? B.ViewConfiguration_UWa : t1;
    }
  };
  A.SingletonFlutterWindow.prototype = {
    updateSemantics$1(update) {
      return this.platformDispatcher.updateSemantics$1(update);
    }
  };
  A.AccessibilityFeatures.prototype = {
    toString$0(_) {
      var features = A._setArrayType([], type$.JSArray_String);
      return "AccessibilityFeatures" + A.S(features);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(this))
        return false;
      return other instanceof A.AccessibilityFeatures;
    },
    get$hashCode(_) {
      return B.JSInt_methods.get$hashCode(0);
    }
  };
  A.Brightness.prototype = {
    _enumToString$0() {
      return "Brightness." + this._name;
    }
  };
  A.GestureSettings.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(this))
        return false;
      if (other instanceof A.GestureSettings)
        t1 = other.physicalTouchSlop == this.physicalTouchSlop;
      else
        t1 = false;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(this.physicalTouchSlop, null, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "GestureSettings(physicalTouchSlop: " + A.S(this.physicalTouchSlop) + ", physicalDoubleTapSlop: null)";
    }
  };
  A.AnimationStatus.prototype = {
    _enumToString$0() {
      return "AnimationStatus." + this._name;
    }
  };
  A.Animation.prototype = {
    toString$0(_) {
      return "<optimized out>#" + A.shortHash(this) + "(" + this.toStringDetails$0() + ")";
    },
    toStringDetails$0() {
      switch (this.get$status().index) {
        case 1:
          return "\u25b6";
        case 2:
          return "\u25c0";
        case 3:
          return "\u23ed";
        case 0:
          return "\u23ee";
      }
    }
  };
  A._AnimationDirection.prototype = {
    _enumToString$0() {
      return "_AnimationDirection." + this._name;
    }
  };
  A.AnimationBehavior.prototype = {
    _enumToString$0() {
      return "AnimationBehavior." + this._name;
    }
  };
  A.AnimationController.prototype = {
    get$value() {
      var t1 = this.__AnimationController__value_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      return t1;
    },
    set$value(newValue) {
      var _this = this;
      _this.stop$0();
      _this._internalSetValue$1(newValue);
      _this.notifyListeners$0();
      _this._checkStatusChanged$0();
    },
    get$velocity() {
      var t1 = this._ticker;
      if (!(t1 != null && t1._ticker$_future != null))
        return 0;
      t1 = this._simulation;
      t1.toString;
      return t1.dx$1(this._lastElapsedDuration._duration / 1000000);
    },
    _internalSetValue$1(newValue) {
      var _this = this,
        t1 = _this.lowerBound,
        t2 = _this.upperBound,
        t3 = _this.__AnimationController__value_A = A.clampDouble(newValue, t1, t2);
      if (t3 === t1)
        _this.__AnimationController__status_A = B.AnimationStatus_0;
      else if (t3 === t2)
        _this.__AnimationController__status_A = B.AnimationStatus_3;
      else
        _this.__AnimationController__status_A = _this._direction === B._AnimationDirection_0 ? B.AnimationStatus_1 : B.AnimationStatus_2;
    },
    get$status() {
      var t1 = this.__AnimationController__status_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      return t1;
    },
    forward$1$from(from) {
      var _this = this;
      _this._direction = B._AnimationDirection_0;
      if (from != null)
        _this.set$value(from);
      return _this._animateToInternal$1(_this.upperBound);
    },
    forward$0() {
      return this.forward$1$from(null);
    },
    reverse$1$from(from) {
      this._direction = B._AnimationDirection_1;
      return this._animateToInternal$1(this.lowerBound);
    },
    reverse$0() {
      return this.reverse$1$from(null);
    },
    _animateToInternal$3$curve$duration(target, curve, duration) {
      var range, t1, remainingFraction, directionDuration, simulationDuration, t2, _this = this;
      $.SemanticsBinding__instance.SemanticsBinding___SemanticsBinding__accessibilityFeatures_A === $ && A.throwUnnamedLateFieldNI();
      if (duration == null) {
        range = _this.upperBound - _this.lowerBound;
        if (isFinite(range)) {
          t1 = _this.__AnimationController__value_A;
          t1 === $ && A.throwUnnamedLateFieldNI();
          remainingFraction = Math.abs(target - t1) / range;
        } else
          remainingFraction = 1;
        if (_this._direction === B._AnimationDirection_1 && _this.reverseDuration != null) {
          t1 = _this.reverseDuration;
          t1.toString;
          directionDuration = t1;
        } else {
          t1 = _this.duration;
          t1.toString;
          directionDuration = t1;
        }
        simulationDuration = new A.Duration(B.JSNumber_methods.round$0(directionDuration._duration * remainingFraction));
      } else {
        t1 = _this.__AnimationController__value_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
        simulationDuration = target === t1 ? B.Duration_0 : duration;
      }
      _this.stop$0();
      t1 = simulationDuration._duration;
      if (t1 === 0) {
        t1 = _this.__AnimationController__value_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
        if (t1 !== target) {
          _this.__AnimationController__value_A = A.clampDouble(target, _this.lowerBound, _this.upperBound);
          _this.notifyListeners$0();
        }
        _this.__AnimationController__status_A = _this._direction === B._AnimationDirection_0 ? B.AnimationStatus_3 : B.AnimationStatus_0;
        _this._checkStatusChanged$0();
        return A.TickerFuture$complete();
      }
      t2 = _this.__AnimationController__value_A;
      t2 === $ && A.throwUnnamedLateFieldNI();
      return _this._startSimulation$1(new A._InterpolationSimulation(t1 / 1000000, t2, target, curve, B.Tolerance_YtJ));
    },
    _animateToInternal$1(target) {
      return this._animateToInternal$3$curve$duration(target, B.C__Linear, null);
    },
    repeat$0() {
      var t1, t2, _this = this,
        min = _this.lowerBound,
        max = _this.upperBound,
        period = _this.duration;
      _this.stop$0();
      t1 = _this.__AnimationController__value_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t2 = period._duration / 1000000;
      t1 = max === min ? 0 : t1 / (max - min) * t2;
      return _this._startSimulation$1(new A._RepeatingSimulation(min, max, false, _this.get$_directionSetter(), t2, t1, B.Tolerance_YtJ));
    },
    _directionSetter$1(direction) {
      this._direction = direction;
      this.__AnimationController__status_A = direction === B._AnimationDirection_0 ? B.AnimationStatus_1 : B.AnimationStatus_2;
      this._checkStatusChanged$0();
    },
    fling$1$velocity(velocity) {
      var target, simulation, _this = this,
        springDescription = $.$get$_kFlingSpringDescription(),
        t1 = velocity < 0;
      _this._direction = t1 ? B._AnimationDirection_1 : B._AnimationDirection_0;
      target = t1 ? _this.lowerBound - 0.01 : _this.upperBound + 0.01;
      $.SemanticsBinding__instance.SemanticsBinding___SemanticsBinding__accessibilityFeatures_A === $ && A.throwUnnamedLateFieldNI();
      t1 = _this.__AnimationController__value_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      simulation = new A.SpringSimulation(target, A._SpringSolution__SpringSolution(springDescription, t1 - target, velocity), B.Tolerance_YtJ);
      simulation.tolerance = B.Tolerance_C3A;
      _this.stop$0();
      return _this._startSimulation$1(simulation);
    },
    fling$0() {
      return this.fling$1$velocity(1);
    },
    _startSimulation$1(simulation) {
      var result, _this = this;
      _this._simulation = simulation;
      _this._lastElapsedDuration = B.Duration_0;
      _this.__AnimationController__value_A = A.clampDouble(simulation.x$1(0), _this.lowerBound, _this.upperBound);
      result = _this._ticker.start$0();
      _this.__AnimationController__status_A = _this._direction === B._AnimationDirection_0 ? B.AnimationStatus_1 : B.AnimationStatus_2;
      _this._checkStatusChanged$0();
      return result;
    },
    stop$1$canceled(canceled) {
      this._lastElapsedDuration = this._simulation = null;
      this._ticker.stop$1$canceled(canceled);
    },
    stop$0() {
      return this.stop$1$canceled(true);
    },
    dispose$0() {
      var _this = this;
      _this._ticker.dispose$0();
      _this._ticker = null;
      _this.AnimationLocalStatusListenersMixin__statusListeners.clear$0(0);
      _this.AnimationLocalListenersMixin__listeners.clear$0(0);
      _this.super$AnimationEagerListenerMixin$dispose();
    },
    _checkStatusChanged$0() {
      var _this = this,
        t1 = _this.__AnimationController__status_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      if (_this._lastReportedStatus !== t1) {
        _this._lastReportedStatus = t1;
        _this.notifyStatusListeners$1(t1);
      }
    },
    _animation_controller$_tick$1(elapsed) {
      var elapsedInSeconds, _this = this;
      _this._lastElapsedDuration = elapsed;
      elapsedInSeconds = elapsed._duration / 1000000;
      _this.__AnimationController__value_A = A.clampDouble(_this._simulation.x$1(elapsedInSeconds), _this.lowerBound, _this.upperBound);
      if (_this._simulation.isDone$1(elapsedInSeconds)) {
        _this.__AnimationController__status_A = _this._direction === B._AnimationDirection_0 ? B.AnimationStatus_3 : B.AnimationStatus_0;
        _this.stop$1$canceled(false);
      }
      _this.notifyListeners$0();
      _this._checkStatusChanged$0();
    },
    toStringDetails$0() {
      var ticker,
        t1 = this._ticker,
        t2 = t1 == null,
        paused = !t2 && t1._ticker$_future != null ? "" : "; paused";
      if (t2)
        ticker = "; DISPOSED";
      else
        ticker = t1._muted ? "; silenced" : "";
      t1 = this.super$Animation$toStringDetails();
      t2 = this.__AnimationController__value_A;
      t2 === $ && A.throwUnnamedLateFieldNI();
      return t1 + " " + B.JSNumber_methods.toStringAsFixed$1(t2, 3) + paused + ticker;
    }
  };
  A._InterpolationSimulation.prototype = {
    x$1(timeInSeconds) {
      var t1, t2, _this = this,
        t = A.clampDouble(timeInSeconds / _this._durationInSeconds, 0, 1);
      if (t === 0)
        return _this._begin;
      else {
        t1 = _this._animation_controller$_end;
        if (t === 1)
          return t1;
        else {
          t2 = _this._begin;
          return t2 + (t1 - t2) * _this._curve.transform$1(t);
        }
      }
    },
    dx$1(timeInSeconds) {
      return (this.x$1(timeInSeconds + 0.001) - this.x$1(timeInSeconds - 0.001)) / 0.002;
    },
    isDone$1(timeInSeconds) {
      return timeInSeconds > this._durationInSeconds;
    }
  };
  A._RepeatingSimulation.prototype = {
    x$1(timeInSeconds) {
      var _this = this,
        totalTimeInSeconds = timeInSeconds + _this._initialT,
        t1 = _this._periodInSeconds,
        t = B.JSNumber_methods.$mod(totalTimeInSeconds / t1, 1);
      B.JSNumber_methods.$tdiv(totalTimeInSeconds, t1);
      _this.directionSetter.call$1(B._AnimationDirection_0);
      t1 = A.lerpDouble(_this.min, _this.max, t);
      t1.toString;
      return t1;
    },
    dx$1(timeInSeconds) {
      return (this.max - this.min) / this._periodInSeconds;
    },
    isDone$1(timeInSeconds) {
      return false;
    }
  };
  A._AnimationController_Animation_AnimationEagerListenerMixin.prototype = {};
  A._AnimationController_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin.prototype = {};
  A._AnimationController_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin.prototype = {};
  A._AlwaysCompleteAnimation.prototype = {
    addListener$1(listener) {
    },
    removeListener$1(listener) {
    },
    addStatusListener$1(listener) {
    },
    removeStatusListener$1(listener) {
    },
    get$status() {
      return B.AnimationStatus_3;
    },
    get$value() {
      return 1;
    },
    toString$0(_) {
      return "kAlwaysCompleteAnimation";
    }
  };
  A._AlwaysDismissedAnimation.prototype = {
    addListener$1(listener) {
    },
    removeListener$1(listener) {
    },
    addStatusListener$1(listener) {
    },
    removeStatusListener$1(listener) {
    },
    get$status() {
      return B.AnimationStatus_0;
    },
    get$value() {
      return 0;
    },
    toString$0(_) {
      return "kAlwaysDismissedAnimation";
    }
  };
  A.AnimationWithParentMixin.prototype = {
    addListener$1(listener) {
      return this.get$parent().addListener$1(listener);
    },
    removeListener$1(listener) {
      return this.get$parent().removeListener$1(listener);
    },
    addStatusListener$1(listener) {
      return this.get$parent().addStatusListener$1(listener);
    },
    removeStatusListener$1(listener) {
      return this.get$parent().removeStatusListener$1(listener);
    },
    get$status() {
      return this.get$parent().get$status();
    }
  };
  A.ProxyAnimation.prototype = {
    set$parent(value) {
      var _this = this,
        t1 = _this._animations$_parent;
      if (value == t1)
        return;
      if (t1 != null) {
        _this._status = t1.get$status();
        _this._animations$_value = _this._animations$_parent.get$value();
        if (_this.AnimationLazyListenerMixin__listenerCounter > 0)
          _this.didStopListening$0();
      }
      _this._animations$_parent = value;
      if (value != null) {
        if (_this.AnimationLazyListenerMixin__listenerCounter > 0)
          _this.didStartListening$0();
        if (_this._animations$_value !== _this._animations$_parent.get$value())
          _this.notifyListeners$0();
        if (_this._status !== _this._animations$_parent.get$status())
          _this.notifyStatusListeners$1(_this._animations$_parent.get$status());
        _this._animations$_value = _this._status = null;
      }
    },
    didStartListening$0() {
      var _this = this,
        t1 = _this._animations$_parent;
      if (t1 != null) {
        t1.addListener$1(_this.get$notifyListeners());
        _this._animations$_parent.addStatusListener$1(_this.get$notifyStatusListeners());
      }
    },
    didStopListening$0() {
      var _this = this,
        t1 = _this._animations$_parent;
      if (t1 != null) {
        t1.removeListener$1(_this.get$notifyListeners());
        _this._animations$_parent.removeStatusListener$1(_this.get$notifyStatusListeners());
      }
    },
    get$status() {
      var t1 = this._animations$_parent;
      if (t1 != null)
        t1 = t1.get$status();
      else {
        t1 = this._status;
        t1.toString;
      }
      return t1;
    },
    get$value() {
      var t1 = this._animations$_parent;
      if (t1 != null)
        t1 = t1.get$value();
      else {
        t1 = this._animations$_value;
        t1.toString;
      }
      return t1;
    },
    toString$0(_) {
      var t1 = this._animations$_parent;
      if (t1 == null)
        return "ProxyAnimation(null; " + this.super$Animation$toStringDetails() + " " + B.JSNumber_methods.toStringAsFixed$1(this.get$value(), 3) + ")";
      return t1.toString$0(0) + "\u27a9ProxyAnimation";
    }
  };
  A.ReverseAnimation.prototype = {
    addListener$1(listener) {
      this.didRegisterListener$0();
      this.parent.addListener$1(listener);
    },
    removeListener$1(listener) {
      this.parent.removeListener$1(listener);
      this.didUnregisterListener$0();
    },
    didStartListening$0() {
      this.parent.addStatusListener$1(this.get$_statusChangeHandler());
    },
    didStopListening$0() {
      this.parent.removeStatusListener$1(this.get$_statusChangeHandler());
    },
    _statusChangeHandler$1($status) {
      this.notifyStatusListeners$1(this._reverseStatus$1($status));
    },
    get$status() {
      return this._reverseStatus$1(this.parent.get$status());
    },
    get$value() {
      return 1 - this.parent.get$value();
    },
    _reverseStatus$1($status) {
      switch ($status.index) {
        case 1:
          return B.AnimationStatus_2;
        case 2:
          return B.AnimationStatus_1;
        case 3:
          return B.AnimationStatus_0;
        case 0:
          return B.AnimationStatus_3;
      }
    },
    toString$0(_) {
      return this.parent.toString$0(0) + "\u27aaReverseAnimation";
    }
  };
  A.CurvedAnimation.prototype = {
    _updateCurveDirection$1($status) {
      var _this = this;
      switch ($status.index) {
        case 0:
        case 3:
          _this._curveDirection = null;
          break;
        case 1:
          if (_this._curveDirection == null)
            _this._curveDirection = B.AnimationStatus_1;
          break;
        case 2:
          if (_this._curveDirection == null)
            _this._curveDirection = B.AnimationStatus_2;
          break;
      }
    },
    get$_useForwardCurve() {
      if (this.reverseCurve != null) {
        var t1 = this._curveDirection;
        t1 = (t1 == null ? this.parent.get$status() : t1) !== B.AnimationStatus_2;
      } else
        t1 = true;
      return t1;
    },
    dispose$0() {
      this.parent.removeStatusListener$1(this.get$_updateCurveDirection());
    },
    get$value() {
      var _this = this,
        activeCurve = _this.get$_useForwardCurve() ? _this.curve : _this.reverseCurve,
        t = _this.parent.get$value();
      if (activeCurve == null)
        return t;
      if (t === 0 || t === 1)
        return t;
      return activeCurve.transform$1(t);
    },
    toString$0(_) {
      var _this = this,
        t1 = _this.reverseCurve;
      if (t1 == null)
        return _this.parent.toString$0(0) + "\u27a9" + _this.curve.toString$0(0);
      if (_this.get$_useForwardCurve())
        return _this.parent.toString$0(0) + "\u27a9" + _this.curve.toString$0(0) + "\u2092\u2099/" + t1.toString$0(0);
      return _this.parent.toString$0(0) + "\u27a9" + _this.curve.toString$0(0) + "/" + t1.toString$0(0) + "\u2092\u2099";
    },
    get$parent() {
      return this.parent;
    }
  };
  A._TrainHoppingMode.prototype = {
    _enumToString$0() {
      return "_TrainHoppingMode." + this._name;
    }
  };
  A.TrainHoppingAnimation.prototype = {
    _statusChangeHandler$1($status) {
      if ($status !== this._lastStatus) {
        this.notifyListeners$0();
        this._lastStatus = $status;
      }
    },
    get$status() {
      return this._currentTrain.get$status();
    },
    _valueChangeHandler$0() {
      var t2, newValue, _this = this,
        t1 = _this._nextTrain,
        hop = false;
      if (t1 != null) {
        switch (_this._mode.index) {
          case 0:
            hop = t1.get$value() <= _this._currentTrain.get$value();
            break;
          case 1:
            hop = t1.get$value() >= _this._currentTrain.get$value();
            break;
        }
        if (hop) {
          t1 = _this._currentTrain;
          t2 = _this.get$_statusChangeHandler();
          t1.removeStatusListener$1(t2);
          t1.removeListener$1(_this.get$_valueChangeHandler());
          t1 = _this._nextTrain;
          _this._currentTrain = t1;
          _this._nextTrain = null;
          t1.addStatusListener$1(t2);
          _this._statusChangeHandler$1(_this._currentTrain.get$status());
        }
      }
      newValue = _this._currentTrain.get$value();
      if (newValue !== _this._lastValue) {
        _this.notifyListeners$0();
        _this._lastValue = newValue;
      }
      if (hop && _this.onSwitchedTrain != null)
        _this.onSwitchedTrain.call$0();
    },
    get$value() {
      return this._currentTrain.get$value();
    },
    dispose$0() {
      var t1, t2, _this = this;
      _this._currentTrain.removeStatusListener$1(_this.get$_statusChangeHandler());
      t1 = _this.get$_valueChangeHandler();
      _this._currentTrain.removeListener$1(t1);
      _this._currentTrain = null;
      t2 = _this._nextTrain;
      if (t2 != null)
        t2.removeListener$1(t1);
      _this._nextTrain = null;
      _this.AnimationLocalListenersMixin__listeners.clear$0(0);
      _this.AnimationLocalStatusListenersMixin__statusListeners.clear$0(0);
      _this.super$AnimationEagerListenerMixin$dispose();
    },
    toString$0(_) {
      var _this = this;
      if (_this._nextTrain != null)
        return A.S(_this._currentTrain) + "\u27a9TrainHoppingAnimation(next: " + A.S(_this._nextTrain) + ")";
      return A.S(_this._currentTrain) + "\u27a9TrainHoppingAnimation(no next)";
    }
  };
  A.CompoundAnimation.prototype = {
    didStartListening$0() {
      var t3, _this = this,
        t1 = _this.first,
        t2 = _this.get$_maybeNotifyListeners();
      t1.addListener$1(t2);
      t3 = _this.get$_maybeNotifyStatusListeners();
      t1.addStatusListener$1(t3);
      t1 = _this.next;
      t1.addListener$1(t2);
      t1.addStatusListener$1(t3);
    },
    didStopListening$0() {
      var t3, _this = this,
        t1 = _this.first,
        t2 = _this.get$_maybeNotifyListeners();
      t1.removeListener$1(t2);
      t3 = _this.get$_maybeNotifyStatusListeners();
      t1.removeStatusListener$1(t3);
      t1 = _this.next;
      t1.removeListener$1(t2);
      t1.removeStatusListener$1(t3);
    },
    get$status() {
      var t1 = this.next;
      if (t1.get$status() === B.AnimationStatus_1 || t1.get$status() === B.AnimationStatus_2)
        return t1.get$status();
      return this.first.get$status();
    },
    toString$0(_) {
      return "CompoundAnimation(" + this.first.toString$0(0) + ", " + this.next.toString$0(0) + ")";
    },
    _maybeNotifyStatusListeners$1(_) {
      var _this = this;
      if (_this.get$status() !== _this._lastStatus) {
        _this._lastStatus = _this.get$status();
        _this.notifyStatusListeners$1(_this.get$status());
      }
    },
    _maybeNotifyListeners$0() {
      var _this = this;
      if (!J.$eq$(_this.get$value(), _this._lastValue)) {
        _this._lastValue = _this.get$value();
        _this.notifyListeners$0();
      }
    }
  };
  A.AnimationMin.prototype = {
    get$value() {
      return Math.min(this.first.get$value(), this.next.get$value());
    }
  };
  A._CompoundAnimation_Animation_AnimationLazyListenerMixin.prototype = {};
  A._CompoundAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin.prototype = {};
  A._CompoundAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin.prototype = {};
  A._CurvedAnimation_Animation_AnimationWithParentMixin.prototype = {};
  A._ProxyAnimation_Animation_AnimationLazyListenerMixin.prototype = {};
  A._ProxyAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin.prototype = {};
  A._ProxyAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin.prototype = {};
  A._ReverseAnimation_Animation_AnimationLazyListenerMixin.prototype = {};
  A._ReverseAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalStatusListenersMixin.prototype = {};
  A._TrainHoppingAnimation_Animation_AnimationEagerListenerMixin.prototype = {};
  A._TrainHoppingAnimation_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin.prototype = {};
  A._TrainHoppingAnimation_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin.prototype = {};
  A.ParametricCurve.prototype = {
    transform$1(t) {
      return this.transformInternal$1(t);
    },
    transformInternal$1(t) {
      throw A.wrapException(A.UnimplementedError$(null));
    },
    toString$0(_) {
      return "ParametricCurve";
    }
  };
  A.Curve.prototype = {
    transform$1(t) {
      if (t === 0 || t === 1)
        return t;
      return this.super$ParametricCurve$transform(t);
    }
  };
  A._Linear.prototype = {
    transformInternal$1(t) {
      return t;
    }
  };
  A.SawTooth.prototype = {
    transformInternal$1(t) {
      t *= this.count;
      return t - (t < 0 ? Math.ceil(t) : Math.floor(t));
    },
    toString$0(_) {
      return "SawTooth(" + this.count + ")";
    }
  };
  A.Interval.prototype = {
    transformInternal$1(t) {
      var t1 = this.begin;
      t = A.clampDouble((t - t1) / (this.end - t1), 0, 1);
      if (t === 0 || t === 1)
        return t;
      return this.curve.transform$1(t);
    },
    toString$0(_) {
      var _this = this,
        t1 = _this.curve;
      if (!(t1 instanceof A._Linear))
        return "Interval(" + A.S(_this.begin) + "\u22ef" + A.S(_this.end) + ")\u27a9" + t1.toString$0(0);
      return "Interval(" + A.S(_this.begin) + "\u22ef" + A.S(_this.end) + ")";
    }
  };
  A.Threshold.prototype = {
    transformInternal$1(t) {
      return t < 0.5 ? 0 : 1;
    }
  };
  A.Cubic.prototype = {
    _evaluateCubic$3(a, b, m) {
      var t1 = 1 - m;
      return 3 * a * t1 * t1 * m + 3 * b * t1 * m * m + m * m * m;
    },
    transformInternal$1(t) {
      var t1, t2, start, end, midpoint, estimate, _this = this;
      for (t1 = _this.a, t2 = _this.c, start = 0, end = 1; true;) {
        midpoint = (start + end) / 2;
        estimate = _this._evaluateCubic$3(t1, t2, midpoint);
        if (Math.abs(t - estimate) < 0.001)
          return _this._evaluateCubic$3(_this.b, _this.d, midpoint);
        if (estimate < t)
          start = midpoint;
        else
          end = midpoint;
      }
    },
    toString$0(_) {
      var _this = this;
      return "Cubic(" + B.JSNumber_methods.toStringAsFixed$1(_this.a, 2) + ", " + B.JSNumber_methods.toStringAsFixed$1(_this.b, 2) + ", " + B.JSNumber_methods.toStringAsFixed$1(_this.c, 2) + ", " + B.JSNumber_methods.toStringAsFixed$1(_this.d, 2) + ")";
    }
  };
  A.FlippedCurve.prototype = {
    transformInternal$1(t) {
      return 1 - this.curve.transform$1(1 - t);
    },
    toString$0(_) {
      return "FlippedCurve(" + this.curve.toString$0(0) + ")";
    }
  };
  A._DecelerateCurve.prototype = {
    transformInternal$1(t) {
      t = 1 - t;
      return 1 - t * t;
    }
  };
  A.AnimationLazyListenerMixin.prototype = {
    didRegisterListener$0() {
      if (this.AnimationLazyListenerMixin__listenerCounter === 0)
        this.didStartListening$0();
      ++this.AnimationLazyListenerMixin__listenerCounter;
    },
    didUnregisterListener$0() {
      if (--this.AnimationLazyListenerMixin__listenerCounter === 0)
        this.didStopListening$0();
    }
  };
  A.AnimationEagerListenerMixin.prototype = {
    didRegisterListener$0() {
    },
    didUnregisterListener$0() {
    },
    dispose$0() {
    }
  };
  A.AnimationLocalListenersMixin.prototype = {
    addListener$1(listener) {
      var t1;
      this.didRegisterListener$0();
      t1 = this.AnimationLocalListenersMixin__listeners;
      t1._isDirty = true;
      t1._observer_list$_list.push(listener);
    },
    removeListener$1(listener) {
      if (this.AnimationLocalListenersMixin__listeners.remove$1(0, listener))
        this.didUnregisterListener$0();
    },
    notifyListeners$0() {
      var listener, collector, exception, stack, _i, exception0, t3, t4,
        t1 = this.AnimationLocalListenersMixin__listeners,
        t2 = t1._observer_list$_list,
        localListeners = J.JSArray_JSArray$markFixed(t2.slice(0), A._arrayInstanceType(t2)._precomputed1);
      for (t2 = localListeners.length, _i = 0; _i < localListeners.length; localListeners.length === t2 || (0, A.throwConcurrentModificationError)(localListeners), ++_i) {
        listener = localListeners[_i];
        collector = null;
        try {
          if (t1.contains$1(0, listener))
            listener.call$0();
        } catch (exception0) {
          exception = A.unwrapException(exception0);
          stack = A.getTraceFromException(exception0);
          t3 = A.ErrorDescription$("while notifying listeners for " + A.getRuntimeTypeOfDartObject(this).toString$0(0));
          t4 = $.FlutterError_onError;
          if (t4 != null)
            t4.call$1(new A.FlutterErrorDetails(exception, stack, "animation library", t3, collector, false));
        }
      }
    }
  };
  A.AnimationLocalStatusListenersMixin.prototype = {
    addStatusListener$1(listener) {
      var t1;
      this.didRegisterListener$0();
      t1 = this.AnimationLocalStatusListenersMixin__statusListeners;
      t1._isDirty = true;
      t1._observer_list$_list.push(listener);
    },
    removeStatusListener$1(listener) {
      if (this.AnimationLocalStatusListenersMixin__statusListeners.remove$1(0, listener))
        this.didUnregisterListener$0();
    },
    notifyStatusListeners$1($status) {
      var listener, exception, stack, collector, _i, exception0, t3, t4,
        t1 = this.AnimationLocalStatusListenersMixin__statusListeners,
        t2 = t1._observer_list$_list,
        localListeners = J.JSArray_JSArray$markFixed(t2.slice(0), A._arrayInstanceType(t2)._precomputed1);
      for (t2 = localListeners.length, _i = 0; _i < localListeners.length; localListeners.length === t2 || (0, A.throwConcurrentModificationError)(localListeners), ++_i) {
        listener = localListeners[_i];
        try {
          if (t1.contains$1(0, listener))
            listener.call$1($status);
        } catch (exception0) {
          exception = A.unwrapException(exception0);
          stack = A.getTraceFromException(exception0);
          collector = null;
          t3 = A.ErrorDescription$("while notifying status listeners for " + A.getRuntimeTypeOfDartObject(this).toString$0(0));
          t4 = $.FlutterError_onError;
          if (t4 != null)
            t4.call$1(new A.FlutterErrorDetails(exception, stack, "animation library", t3, collector, false));
        }
      }
    }
  };
  A.Animatable.prototype = {
    chain$1($parent) {
      return new A._ChainedEvaluation($parent, this, A._instanceType(this)._eval$1("_ChainedEvaluation<Animatable.T>"));
    }
  };
  A._AnimatedEvaluation.prototype = {
    get$value() {
      return this._evaluatable.transform$1(this.parent.get$value());
    },
    toString$0(_) {
      var t1 = this.parent,
        t2 = this._evaluatable;
      return t1.toString$0(0) + "\u27a9" + t2.toString$0(0) + "\u27a9" + A.S(t2.transform$1(t1.get$value()));
    },
    toStringDetails$0() {
      return this.super$Animation$toStringDetails() + " " + this._evaluatable.toString$0(0);
    },
    get$parent() {
      return this.parent;
    }
  };
  A._ChainedEvaluation.prototype = {
    transform$1(t) {
      return this._evaluatable.transform$1(this._tween$_parent.transform$1(t));
    },
    toString$0(_) {
      return this._tween$_parent.toString$0(0) + "\u27a9" + this._evaluatable.toString$0(0);
    }
  };
  A.Tween.prototype = {
    lerp$1(t) {
      var t1 = this.begin;
      return A._instanceType(this)._eval$1("Tween.T")._as(J.$add$ansx(t1, J.$mul$ns(J.$sub$n(this.end, t1), t)));
    },
    transform$1(t) {
      var t1, _this = this;
      if (t === 0) {
        t1 = _this.begin;
        return t1 == null ? A._instanceType(_this)._eval$1("Tween.T")._as(t1) : t1;
      }
      if (t === 1) {
        t1 = _this.end;
        return t1 == null ? A._instanceType(_this)._eval$1("Tween.T")._as(t1) : t1;
      }
      return _this.lerp$1(t);
    },
    toString$0(_) {
      return "Animatable(" + A.S(this.begin) + " \u2192 " + A.S(this.end) + ")";
    },
    set$begin(val) {
      return this.begin = val;
    },
    set$end(val) {
      return this.end = val;
    }
  };
  A.ReverseTween.prototype = {
    lerp$1(t) {
      return this.parent.lerp$1(1 - t);
    }
  };
  A.ColorTween.prototype = {
    lerp$1(t) {
      return A.Color_lerp(this.begin, this.end, t);
    }
  };
  A.RectTween.prototype = {
    lerp$1(t) {
      return A.Rect_lerp(this.begin, this.end, t);
    }
  };
  A.IntTween.prototype = {
    lerp$1(t) {
      var t2,
        t1 = this.begin;
      t1.toString;
      t2 = this.end;
      t2.toString;
      return B.JSNumber_methods.round$0(t1 + (t2 - t1) * t);
    }
  };
  A.CurveTween.prototype = {
    transform$1(t) {
      if (t === 0 || t === 1)
        return t;
      return this.curve.transform$1(t);
    },
    toString$0(_) {
      return "CurveTween(curve: " + this.curve.toString$0(0) + ")";
    }
  };
  A.__AnimatedEvaluation_Animation_AnimationWithParentMixin.prototype = {};
  A.TweenSequence.prototype = {
    TweenSequence$1(items, $T) {
      var t2, totalWeight, _i, start, i, t3, end,
        t1 = this._items;
      B.JSArray_methods.addAll$1(t1, items);
      for (t2 = t1.length, totalWeight = 0, _i = 0; _i < t2; ++_i)
        totalWeight += t1[_i].weight;
      for (t2 = this._intervals, start = 0, i = 0; t3 = t1.length, i < t3; ++i, start = end) {
        end = i === t3 - 1 ? 1 : start + t1[i].weight / totalWeight;
        t2.push(new A._Interval(start, end));
      }
    },
    _evaluateAt$2(t, index) {
      var element = this._items[index],
        t1 = this._intervals[index],
        t2 = t1.start;
      return element.tween.transform$1((t - t2) / (t1.end - t2));
    },
    transform$1(t) {
      var t1, t2, t3, index, t4, t5, _this = this;
      if (t === 1)
        return _this._evaluateAt$2(t, _this._items.length - 1);
      for (t1 = _this._items, t2 = t1.length, t3 = _this._intervals, index = 0; index < t2; ++index) {
        t4 = t3[index];
        t5 = t4.start;
        if (t >= t5 && t < t4.end)
          return t1[index].tween.transform$1((t - t5) / (t4.end - t5));
      }
      throw A.wrapException(A.StateError$("TweenSequence.evaluate() could not find an interval for " + A.S(t)));
    },
    toString$0(_) {
      return "TweenSequence(" + this._items.length + " items)";
    }
  };
  A.TweenSequenceItem.prototype = {};
  A._Interval.prototype = {
    toString$0(_) {
      return "<" + A.S(this.start) + ", " + A.S(this.end) + ">";
    }
  };
  A.CupertinoDynamicColor.prototype = {
    get$value() {
      return this._effectiveColor.value;
    },
    get$_isPlatformBrightnessDependent() {
      var _this = this;
      return !_this.color.$eq(0, _this.darkColor) || !_this.elevatedColor.$eq(0, _this.darkElevatedColor) || !_this.highContrastColor.$eq(0, _this.darkHighContrastColor) || !_this.highContrastElevatedColor.$eq(0, _this.darkHighContrastElevatedColor);
    },
    get$_isHighContrastDependent() {
      var _this = this;
      return !_this.color.$eq(0, _this.highContrastColor) || !_this.darkColor.$eq(0, _this.darkHighContrastColor) || !_this.elevatedColor.$eq(0, _this.highContrastElevatedColor) || !_this.darkElevatedColor.$eq(0, _this.darkHighContrastElevatedColor);
    },
    get$_isInterfaceElevationDependent() {
      var _this = this;
      return !_this.color.$eq(0, _this.elevatedColor) || !_this.darkColor.$eq(0, _this.darkElevatedColor) || !_this.highContrastColor.$eq(0, _this.highContrastElevatedColor) || !_this.darkHighContrastColor.$eq(0, _this.darkHighContrastElevatedColor);
    },
    resolveFrom$1(context) {
      var inheritedTheme, t1, brightness, isHighContrastEnabled, resolved, _this = this, _null = null;
      if (_this.get$_isPlatformBrightnessDependent()) {
        inheritedTheme = context.dependOnInheritedWidgetOfExactType$1$0(type$._InheritedCupertinoTheme);
        t1 = inheritedTheme == null ? _null : inheritedTheme.theme.data.get$brightness();
        if (t1 == null) {
          t1 = A.MediaQuery__maybeOf(context, B._MediaQueryAspect_4);
          t1 = t1 == null ? _null : t1.platformBrightness;
          brightness = t1;
        } else
          brightness = t1;
        if (brightness == null)
          brightness = B.Brightness_1;
      } else
        brightness = B.Brightness_1;
      if (_this.get$_isHighContrastDependent()) {
        t1 = A.MediaQuery__maybeOf(context, B._MediaQueryAspect_12);
        t1 = t1 == null ? _null : t1.highContrast;
        isHighContrastEnabled = t1 === true;
      } else
        isHighContrastEnabled = false;
      if (_this.get$_isInterfaceElevationDependent())
        A.CupertinoUserInterfaceLevel_maybeOf(context);
      resolved = _null;
      switch (brightness.index) {
        case 1:
          switch (0) {
            case 0:
              resolved = isHighContrastEnabled ? _this.highContrastColor : _this.color;
              break;
          }
          break;
        case 0:
          switch (0) {
            case 0:
              resolved = isHighContrastEnabled ? _this.darkHighContrastColor : _this.darkColor;
              break;
          }
          break;
      }
      return new A.CupertinoDynamicColor(resolved, _this._colors$_debugLabel, _null, _this.color, _this.darkColor, _this.highContrastColor, _this.darkHighContrastColor, _this.elevatedColor, _this.darkElevatedColor, _this.highContrastElevatedColor, _this.darkHighContrastElevatedColor, 0);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      return other instanceof A.CupertinoDynamicColor && other._effectiveColor.value === _this._effectiveColor.value && other.color.$eq(0, _this.color) && other.darkColor.$eq(0, _this.darkColor) && other.highContrastColor.$eq(0, _this.highContrastColor) && other.darkHighContrastColor.$eq(0, _this.darkHighContrastColor) && other.elevatedColor.$eq(0, _this.elevatedColor) && other.darkElevatedColor.$eq(0, _this.darkElevatedColor) && other.highContrastElevatedColor.$eq(0, _this.highContrastElevatedColor) && other.darkHighContrastElevatedColor.$eq(0, _this.darkHighContrastElevatedColor);
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(_this._effectiveColor.value, _this.color, _this.darkColor, _this.highContrastColor, _this.elevatedColor, _this.darkElevatedColor, _this.darkHighContrastColor, _this.darkHighContrastElevatedColor, _this.highContrastElevatedColor, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this,
        t1 = new A.CupertinoDynamicColor_toString_toString(_this),
        t2 = A._setArrayType([t1.call$2("color", _this.color)], type$.JSArray_String);
      if (_this.get$_isPlatformBrightnessDependent())
        t2.push(t1.call$2("darkColor", _this.darkColor));
      if (_this.get$_isHighContrastDependent())
        t2.push(t1.call$2("highContrastColor", _this.highContrastColor));
      if (_this.get$_isPlatformBrightnessDependent() && _this.get$_isHighContrastDependent())
        t2.push(t1.call$2("darkHighContrastColor", _this.darkHighContrastColor));
      if (_this.get$_isInterfaceElevationDependent())
        t2.push(t1.call$2("elevatedColor", _this.elevatedColor));
      if (_this.get$_isPlatformBrightnessDependent() && _this.get$_isInterfaceElevationDependent())
        t2.push(t1.call$2("darkElevatedColor", _this.darkElevatedColor));
      if (_this.get$_isHighContrastDependent() && _this.get$_isInterfaceElevationDependent())
        t2.push(t1.call$2("highContrastElevatedColor", _this.highContrastElevatedColor));
      if (_this.get$_isPlatformBrightnessDependent() && _this.get$_isHighContrastDependent() && _this.get$_isInterfaceElevationDependent())
        t2.push(t1.call$2("darkHighContrastElevatedColor", _this.darkHighContrastElevatedColor));
      t1 = _this._colors$_debugLabel;
      if (t1 == null)
        t1 = "CupertinoDynamicColor";
      t2 = B.JSArray_methods.join$1(t2, ", ");
      return t1 + "(" + t2 + ", resolved by: UNRESOLVED)";
    }
  };
  A.CupertinoDynamicColor_toString_toString.prototype = {
    call$2($name, color) {
      var marker = color.$eq(0, this.$this._effectiveColor) ? "*" : "";
      return marker + $name + " = " + color.toString$0(0) + marker;
    },
    $signature: 204
  };
  A._CupertinoDynamicColor_Color_Diagnosticable.prototype = {};
  A.CupertinoTimerPickerMode.prototype = {
    _enumToString$0() {
      return "CupertinoTimerPickerMode." + this._name;
    }
  };
  A.CupertinoTimerPicker.prototype = {
    createState$0() {
      return A._CupertinoTimerPickerState$();
    },
    onTimerDurationChanged$1(arg0) {
      return this.onTimerDurationChanged.call$1(arg0);
    }
  };
  A._CupertinoTimerPickerState.prototype = {
    get$textDirectionFactor() {
      var t1 = this.___CupertinoTimerPickerState_textDirection_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      switch (t1.index) {
        case 1:
          return 1;
        case 0:
          return -1;
      }
    },
    initState$0() {
      var _this = this;
      _this.super$State$initState();
      _this._widget.toString;
      _this.___CupertinoTimerPickerState_selectedMinute_A = 0;
      _this.selectedHour = 0;
      _this.selectedSecond = 0;
      $.PaintingBinding__instance.PaintingBinding__systemFonts._systemFontsCallbacks.add$1(0, _this.get$_handleSystemFontsChange());
    },
    _handleSystemFontsChange$0() {
      this.setState$1(new A._CupertinoTimerPickerState__handleSystemFontsChange_closure(this));
    },
    dispose$0() {
      $.PaintingBinding__instance.PaintingBinding__systemFonts._systemFontsCallbacks.remove$1(0, this.get$_handleSystemFontsChange());
      this.textPainter.dispose$0();
      this.super$State$dispose();
    },
    didUpdateWidget$1(oldWidget) {
      this.super$State$didUpdateWidget(oldWidget);
    },
    didChangeDependencies$0() {
      var t1, _this = this;
      _this.super$State$didChangeDependencies();
      _this.___CupertinoTimerPickerState_textDirection_A = _this._element.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality).textDirection;
      t1 = _this._element;
      t1.toString;
      t1 = A.Localizations_of(t1, B.Type_CupertinoLocalizations_xhg, type$.CupertinoLocalizations);
      t1.toString;
      _this.___CupertinoTimerPickerState_localizations_A = t1;
      _this._measureLabelMetrics$0();
    },
    _measureLabelMetrics$0() {
      var textStyle, maxWidth, widestNumber, _i, input, _this = this,
        t1 = _this.textPainter,
        t2 = _this.___CupertinoTimerPickerState_textDirection_A;
      t2 === $ && A.throwUnnamedLateFieldNI();
      t1.set$textDirection(t2);
      t2 = _this._element;
      t2.toString;
      textStyle = _this._textStyleFrom$2(t2, 1.0625);
      for (t2 = _this.numbers, maxWidth = -1 / 0, widestNumber = null, _i = 0; _i < 10; ++_i) {
        input = t2[_i];
        t1.set$text(A.TextSpan$(null, textStyle, input));
        t1.layout$0();
        if (Math.ceil(t1._paragraph._maxIntrinsicWidth) > maxWidth) {
          maxWidth = Math.ceil(t1._paragraph._maxIntrinsicWidth);
          widestNumber = input;
        }
      }
      t2 = A.S(widestNumber);
      t1.set$text(A.TextSpan$(null, textStyle, t2 + t2));
      t1.layout$0();
      _this.___CupertinoTimerPickerState_numberLabelWidth_A = Math.ceil(t1._paragraph._maxIntrinsicWidth);
      _this.___CupertinoTimerPickerState_numberLabelHeight_A = Math.ceil(t1._paragraph._height);
      _this.___CupertinoTimerPickerState_numberLabelBaseline_A = t1.computeDistanceToActualBaseline$1(B.TextBaseline_0);
      _this.___CupertinoTimerPickerState_localizations_A === $ && A.throwUnnamedLateFieldNI();
      _this.___CupertinoTimerPickerState_minuteLabelWidth_A = _this._measureLabelsMaxWidth$2(B.List_HOF, textStyle);
      _this._widget.toString;
      _this.___CupertinoTimerPickerState_hourLabelWidth_A = _this._measureLabelsMaxWidth$2(B.List_hour_hours, textStyle);
      _this._widget.toString;
      _this.___CupertinoTimerPickerState_secondLabelWidth_A = _this._measureLabelsMaxWidth$2(B.List_EjB, textStyle);
    },
    _measureLabelsMaxWidth$2(labels, style) {
      var t1, t2, maxWidth, i, label;
      for (t1 = labels.length, t2 = this.textPainter, maxWidth = -1 / 0, i = 0; i < t1; ++i) {
        label = labels[i];
        t2.set$text(A.TextSpan$(null, style, label));
        t2.layout$0();
        Math.ceil(t2._paragraph._maxIntrinsicWidth);
        if (Math.ceil(t2._paragraph._maxIntrinsicWidth) > maxWidth)
          maxWidth = Math.ceil(t2._paragraph._maxIntrinsicWidth);
      }
      return maxWidth;
    },
    _buildLabel$2(text, pickerPadding) {
      var t2, t3, t4, _this = this, _null = null,
        t1 = _this.___CupertinoTimerPickerState_numberLabelWidth_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t2 = _this.___CupertinoTimerPickerState_textDirection_A;
      t2 === $ && A.throwUnnamedLateFieldNI();
      t3 = B.AlignmentDirectional_m1_0.resolve$1(t2);
      t2 = new A.EdgeInsetsDirectional(t1 + 6 + pickerPadding.start, 0, 0, 0).resolve$1(t2);
      t1 = _this.___CupertinoTimerPickerState_numberLabelHeight_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t4 = _this.___CupertinoTimerPickerState_numberLabelBaseline_A;
      t4 === $ && A.throwUnnamedLateFieldNI();
      return new A.IgnorePointer(true, _null, A.Container$(t3, A.SizedBox$(new A.Baseline(t4, B.TextBaseline_0, A.Text$(text, 1, _null, false, B.TextStyle_Vwu), _null), t1, _null), _null, _null, _null, _null, _null, t2, _null), _null);
    },
    _buildPickerNumberLabel$2(text, padding) {
      var t3, t4, t5, _null = null,
        t1 = padding.get$horizontal(),
        t2 = this.___CupertinoTimerPickerState_textDirection_A;
      t2 === $ && A.throwUnnamedLateFieldNI();
      t3 = padding.resolve$1(t2);
      t4 = B.AlignmentDirectional_m1_0.resolve$1(t2);
      t5 = this.___CupertinoTimerPickerState_numberLabelWidth_A;
      t5 === $ && A.throwUnnamedLateFieldNI();
      return A.Container$(t4, A.Container$(B.AlignmentDirectional_1_0.resolve$1(t2), A.Text$(text, 1, B.TextOverflow_3, false, _null), _null, _null, _null, _null, _null, _null, t5), _null, _null, _null, _null, _null, t3, 106 + t1);
    },
    _buildHourPicker$2(additionalPadding, selectionOverlay) {
      var t2, _this = this,
        t1 = _this.selectedHour;
      t1.toString;
      t1 = A.FixedExtentScrollController$(t1);
      t2 = _this._calculateOffAxisFraction$2(additionalPadding.start, 0);
      _this._widget.toString;
      return A.CupertinoPicker$(null, A.List_List$generate(24, new A._CupertinoTimerPickerState__buildHourPicker_closure(_this, additionalPadding), type$.Widget), 32, false, 1.119047619047619, t2, new A._CupertinoTimerPickerState__buildHourPicker_closure0(_this), t1, selectionOverlay, 1.25);
    },
    _buildHourColumn$2(additionalPadding, selectionOverlay) {
      var t1, t2, _this = this;
      additionalPadding = new A.EdgeInsetsDirectional(Math.max(additionalPadding.start, 0), 0, Math.max(additionalPadding.end, 0), 0);
      t1 = _this._buildHourPicker$2(additionalPadding, selectionOverlay);
      _this.___CupertinoTimerPickerState_localizations_A === $ && A.throwUnnamedLateFieldNI();
      t2 = _this.lastSelectedHour;
      if (t2 == null) {
        t2 = _this.selectedHour;
        t2.toString;
      }
      t2 = t2 === 1 ? "hour" : "hours";
      return A.Stack$(B.AlignmentDirectional_m1_m1, A._setArrayType([new A.NotificationListener(new A._CupertinoTimerPickerState__buildHourColumn_closure(_this), t1, null, type$.NotificationListener_ScrollEndNotification), _this._buildLabel$2(t2, additionalPadding)], type$.JSArray_Widget), B.StackFit_0);
    },
    _buildMinutePicker$2(additionalPadding, selectionOverlay) {
      var t2, _this = this,
        t1 = _this.___CupertinoTimerPickerState_selectedMinute_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      _this._widget.toString;
      t1 = A.FixedExtentScrollController$(B.JSInt_methods._tdivFast$1(t1, 1));
      t2 = _this._calculateOffAxisFraction$2(additionalPadding.start, 1);
      return A.CupertinoPicker$(null, A.List_List$generate(60, new A._CupertinoTimerPickerState__buildMinutePicker_closure(_this, additionalPadding), type$.Widget), 32, true, 1.119047619047619, t2, new A._CupertinoTimerPickerState__buildMinutePicker_closure0(_this), t1, selectionOverlay, 1.25);
    },
    _buildMinuteColumn$2(additionalPadding, selectionOverlay) {
      var t1, _this = this;
      additionalPadding = new A.EdgeInsetsDirectional(Math.max(additionalPadding.start, 0), 0, Math.max(additionalPadding.end, 0), 0);
      t1 = _this._buildMinutePicker$2(additionalPadding, selectionOverlay);
      _this.___CupertinoTimerPickerState_localizations_A === $ && A.throwUnnamedLateFieldNI();
      if (_this.lastSelectedMinute == null)
        _this.___CupertinoTimerPickerState_selectedMinute_A === $ && A.throwUnnamedLateFieldNI();
      return A.Stack$(B.AlignmentDirectional_m1_m1, A._setArrayType([new A.NotificationListener(new A._CupertinoTimerPickerState__buildMinuteColumn_closure(_this), t1, null, type$.NotificationListener_ScrollEndNotification), _this._buildLabel$2("min.", additionalPadding)], type$.JSArray_Widget), B.StackFit_0);
    },
    _buildSecondPicker$2(additionalPadding, selectionOverlay) {
      var t2, _this = this,
        t1 = _this.selectedSecond;
      t1.toString;
      _this._widget.toString;
      t1 = A.FixedExtentScrollController$(B.JSInt_methods._tdivFast$1(t1, 1));
      t2 = _this._calculateOffAxisFraction$2(additionalPadding.start, 2);
      return A.CupertinoPicker$(null, A.List_List$generate(60, new A._CupertinoTimerPickerState__buildSecondPicker_closure(_this, additionalPadding), type$.Widget), 32, true, 1.119047619047619, t2, new A._CupertinoTimerPickerState__buildSecondPicker_closure0(_this), t1, selectionOverlay, 1.25);
    },
    _buildSecondColumn$2(additionalPadding, selectionOverlay) {
      var t1, _this = this;
      additionalPadding = new A.EdgeInsetsDirectional(Math.max(additionalPadding.start, 0), 0, Math.max(additionalPadding.end, 0), 0);
      t1 = _this._buildSecondPicker$2(additionalPadding, selectionOverlay);
      _this.___CupertinoTimerPickerState_localizations_A === $ && A.throwUnnamedLateFieldNI();
      if (_this.lastSelectedSecond == null)
        _this.selectedSecond.toString;
      return A.Stack$(B.AlignmentDirectional_m1_m1, A._setArrayType([new A.NotificationListener(new A._CupertinoTimerPickerState__buildSecondColumn_closure(_this), t1, null, type$.NotificationListener_ScrollEndNotification), _this._buildLabel$2("sec.", additionalPadding)], type$.JSArray_Widget), B.StackFit_0);
    },
    _textStyleFrom$2(context, magnification) {
      var textStyle = A.CupertinoTheme_of(context).get$textTheme().get$pickerTextStyle(),
        t1 = A.CupertinoDynamicColor_maybeResolve(textStyle.color, context),
        t2 = textStyle.fontSize;
      t2.toString;
      return textStyle.copyWith$2$color$fontSize(t1, t2 * magnification);
    },
    _textStyleFrom$1(context) {
      return this._textStyleFrom$2(context, 1);
    },
    _calculateOffAxisFraction$2(paddingStart, position) {
      var centerPoint, t2, _this = this,
        t1 = _this.___CupertinoTimerPickerState_numberLabelWidth_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      centerPoint = paddingStart + t1 / 2;
      t1 = _this.___CupertinoTimerPickerState_pickerColumnWidth_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t2 = _this.___CupertinoTimerPickerState_totalWidth_A;
      t2 === $ && A.throwUnnamedLateFieldNI();
      return (0.5 - centerPoint / t1 - (0.5 - (centerPoint + t1 * position) / t2)) * _this.get$textDirectionFactor();
    },
    build$1(context) {
      return new A.LayoutBuilder(new A._CupertinoTimerPickerState_build_closure(this), null);
    }
  };
  A._CupertinoTimerPickerState__handleSystemFontsChange_closure.prototype = {
    call$0() {
      var t1 = this.$this;
      t1.textPainter.markNeedsLayout$0();
      t1._measureLabelMetrics$0();
    },
    $signature: 0
  };
  A._CupertinoTimerPickerState__buildHourPicker_closure0.prototype = {
    call$1(index) {
      var t1 = this.$this;
      t1.setState$1(new A._CupertinoTimerPickerState__buildHourPicker__closure(t1, index));
    },
    $signature: 18
  };
  A._CupertinoTimerPickerState__buildHourPicker__closure.prototype = {
    call$0() {
      var t3, t4,
        t1 = this.$this,
        t2 = this.index;
      t1.selectedHour = t2;
      t3 = t1._widget;
      t3.toString;
      t4 = t1.___CupertinoTimerPickerState_selectedMinute_A;
      t4 === $ && A.throwUnnamedLateFieldNI();
      t1 = t1.selectedSecond;
      t3.onTimerDurationChanged$1(A.Duration$(t2, 0, 0, t4, t1 == null ? 0 : t1));
    },
    $signature: 0
  };
  A._CupertinoTimerPickerState__buildHourPicker_closure.prototype = {
    call$1(index) {
      var label, semanticsLabel, _null = null,
        t1 = this.$this;
      t1.___CupertinoTimerPickerState_localizations_A === $ && A.throwUnnamedLateFieldNI();
      label = index === 1 ? "hour" : "hours";
      semanticsLabel = t1.get$textDirectionFactor() === 1 ? B.JSInt_methods.toString$0(index) + label : label + B.JSInt_methods.toString$0(index);
      return A.Semantics$(_null, _null, t1._buildPickerNumberLabel$2(B.JSInt_methods.toString$0(index), this.additionalPadding), false, _null, true, false, _null, _null, _null, semanticsLabel, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
    },
    $signature: 56
  };
  A._CupertinoTimerPickerState__buildHourColumn_closure.prototype = {
    call$1(notification) {
      var t1 = this.$this;
      t1.setState$1(new A._CupertinoTimerPickerState__buildHourColumn__closure(t1));
      return false;
    },
    $signature: 55
  };
  A._CupertinoTimerPickerState__buildHourColumn__closure.prototype = {
    call$0() {
      var t1 = this.$this;
      t1.lastSelectedHour = t1.selectedHour;
    },
    $signature: 0
  };
  A._CupertinoTimerPickerState__buildMinutePicker_closure0.prototype = {
    call$1(index) {
      var t1 = this.$this;
      t1.setState$1(new A._CupertinoTimerPickerState__buildMinutePicker__closure(t1, index));
    },
    $signature: 18
  };
  A._CupertinoTimerPickerState__buildMinutePicker__closure.prototype = {
    call$0() {
      var t4,
        t1 = this.$this,
        t2 = this.index,
        t3 = t1._widget;
      t3.toString;
      t1.___CupertinoTimerPickerState_selectedMinute_A = t2;
      t4 = t1.selectedHour;
      if (t4 == null)
        t4 = 0;
      t1 = t1.selectedSecond;
      t3.onTimerDurationChanged$1(A.Duration$(t4, 0, 0, t2, t1 == null ? 0 : t1));
    },
    $signature: 0
  };
  A._CupertinoTimerPickerState__buildMinutePicker_closure.prototype = {
    call$1(index) {
      var semanticsLabel, _null = null,
        t1 = this.$this;
      t1._widget.toString;
      t1.___CupertinoTimerPickerState_localizations_A === $ && A.throwUnnamedLateFieldNI();
      semanticsLabel = t1.get$textDirectionFactor() === 1 ? B.JSInt_methods.toString$0(index) + "min." : "min." + B.JSInt_methods.toString$0(index);
      return A.Semantics$(_null, _null, t1._buildPickerNumberLabel$2(B.JSInt_methods.toString$0(index), this.additionalPadding), false, _null, true, false, _null, _null, _null, semanticsLabel, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
    },
    $signature: 56
  };
  A._CupertinoTimerPickerState__buildMinuteColumn_closure.prototype = {
    call$1(notification) {
      var t1 = this.$this;
      t1.setState$1(new A._CupertinoTimerPickerState__buildMinuteColumn__closure(t1));
      return false;
    },
    $signature: 55
  };
  A._CupertinoTimerPickerState__buildMinuteColumn__closure.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = t1.___CupertinoTimerPickerState_selectedMinute_A;
      t2 === $ && A.throwUnnamedLateFieldNI();
      t1.lastSelectedMinute = t2;
    },
    $signature: 0
  };
  A._CupertinoTimerPickerState__buildSecondPicker_closure0.prototype = {
    call$1(index) {
      var t1 = this.$this;
      t1.setState$1(new A._CupertinoTimerPickerState__buildSecondPicker__closure(t1, index));
    },
    $signature: 18
  };
  A._CupertinoTimerPickerState__buildSecondPicker__closure.prototype = {
    call$0() {
      var t4,
        t1 = this.$this,
        t2 = this.index,
        t3 = t1._widget;
      t3.toString;
      t1.selectedSecond = t2;
      t4 = t1.selectedHour;
      if (t4 == null)
        t4 = 0;
      t1 = t1.___CupertinoTimerPickerState_selectedMinute_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t3.onTimerDurationChanged$1(A.Duration$(t4, 0, 0, t1, t2));
    },
    $signature: 0
  };
  A._CupertinoTimerPickerState__buildSecondPicker_closure.prototype = {
    call$1(index) {
      var semanticsLabel, _null = null,
        t1 = this.$this;
      t1._widget.toString;
      t1.___CupertinoTimerPickerState_localizations_A === $ && A.throwUnnamedLateFieldNI();
      semanticsLabel = t1.get$textDirectionFactor() === 1 ? B.JSInt_methods.toString$0(index) + "sec." : "sec." + B.JSInt_methods.toString$0(index);
      return A.Semantics$(_null, _null, t1._buildPickerNumberLabel$2(B.JSInt_methods.toString$0(index), this.additionalPadding), false, _null, true, false, _null, _null, _null, semanticsLabel, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
    },
    $signature: 56
  };
  A._CupertinoTimerPickerState__buildSecondColumn_closure.prototype = {
    call$1(notification) {
      var t1 = this.$this;
      t1.setState$1(new A._CupertinoTimerPickerState__buildSecondColumn__closure(t1));
      return false;
    },
    $signature: 55
  };
  A._CupertinoTimerPickerState__buildSecondColumn__closure.prototype = {
    call$0() {
      var t1 = this.$this;
      t1.lastSelectedSecond = t1.selectedSecond;
    },
    $signature: 0
  };
  A._CupertinoTimerPickerState_build_closure.prototype = {
    call$2(context, constraints) {
      var t2, t3, baseLabelContentWidth, t4, t5, minuteColumnPadding, columns, themeData, t6, _null = null,
        t1 = this.$this;
      t1._widget.toString;
      t2 = t1.___CupertinoTimerPickerState_pickerColumnWidth_A = 114;
      t1.___CupertinoTimerPickerState_totalWidth_A = 342;
      t3 = constraints.maxWidth;
      if (t3 < 342) {
        t1.___CupertinoTimerPickerState_totalWidth_A = t3;
        t2 = t1.___CupertinoTimerPickerState_pickerColumnWidth_A = t3 / 3;
      }
      t3 = t1.___CupertinoTimerPickerState_numberLabelWidth_A;
      t3 === $ && A.throwUnnamedLateFieldNI();
      baseLabelContentWidth = t3 + 6;
      t3 = t1.___CupertinoTimerPickerState_minuteLabelWidth_A;
      t3 === $ && A.throwUnnamedLateFieldNI();
      switch (2) {
        case 2:
          t4 = t2 - baseLabelContentWidth;
          t5 = t1.___CupertinoTimerPickerState_hourLabelWidth_A;
          t5 === $ && A.throwUnnamedLateFieldNI();
          minuteColumnPadding = (t2 - (baseLabelContentWidth + t3)) / 2;
          t3 = t1.___CupertinoTimerPickerState_secondLabelWidth_A;
          t3 === $ && A.throwUnnamedLateFieldNI();
          columns = A._setArrayType([t1._buildHourColumn$2(new A.EdgeInsetsDirectional(30, 0, Math.max(t4 - t5 - 30, 0), 0), B.CupertinoPickerDefaultSelectionOverlay_true_false_null), t1._buildMinuteColumn$2(new A.EdgeInsetsDirectional(minuteColumnPadding, 0, minuteColumnPadding, 0), B.CupertinoPickerDefaultSelectionOverlay_false_false_null), t1._buildSecondColumn$2(new A.EdgeInsetsDirectional(Math.max(t4 - t3 - 30, 0), 0, 30, 0), B.CupertinoPickerDefaultSelectionOverlay_false_true_null)], type$.JSArray_Widget);
          break;
      }
      themeData = A.CupertinoTheme_of(context);
      t2 = A.InheritedModel_inheritFrom(context, _null, type$.MediaQuery).data.copyWith$1$textScaleFactor(1);
      t3 = themeData.get$textTheme();
      t4 = t1._textStyleFrom$2(context, 1.0625);
      t3 = themeData.copyWith$1$textTheme(new A.CupertinoTextThemeData(t3._defaults, t3._primaryColor, t3._textStyle, t3._actionTextStyle, t3._tabLabelTextStyle, t3._navTitleTextStyle, t3._navLargeTitleTextStyle, t3._navActionTextStyle, t4, t3._dateTimePickerTextStyle));
      t1._widget.toString;
      t4 = A.CupertinoDynamicColor_maybeResolve(_null, context);
      t5 = t1.___CupertinoTimerPickerState_totalWidth_A;
      t1 = t1._textStyleFrom$1(context);
      t6 = A._arrayInstanceType(columns)._eval$1("MappedListIterable<1,Expanded>");
      t6 = A.List_List$_of(new A.MappedListIterable(columns, new A._CupertinoTimerPickerState_build__closure(), t6), t6._eval$1("ListIterable.E"));
      t6.$flags = 1;
      return A.MediaQuery$(new A.CupertinoTheme(t3, new A.Align(B.Alignment_0_0, _null, _null, A.Container$(_null, A.DefaultTextStyle$(A.Row$(t6, B.CrossAxisAlignment_2, B.MainAxisSize_1), _null, B.TextOverflow_0, true, t1, _null, _null, B.TextWidthBasis_0), t4, _null, _null, 216, _null, _null, t5), _null), _null), t2, _null);
    },
    $signature: 104
  };
  A._CupertinoTimerPickerState_build__closure.prototype = {
    call$1(child) {
      return new A.Expanded(1, B.FlexFit_0, child, null);
    },
    $signature: 109
  };
  A.CupertinoIconThemeData.prototype = {
    resolve$1(context) {
      var t1 = this.color,
        resolvedColor = A.CupertinoDynamicColor_maybeResolve(t1, context);
      return J.$eq$(resolvedColor, t1) ? this : this.copyWith$1$color(resolvedColor);
    },
    copyWith$8$color$fill$grade$opacity$opticalSize$shadows$size$weight(color, fill, grade, opacity, opticalSize, shadows, size, weight) {
      var _this = this,
        t1 = size == null ? _this.size : size,
        t2 = fill == null ? _this.fill : fill,
        t3 = weight == null ? _this.weight : weight,
        t4 = grade == null ? _this.grade : grade,
        t5 = opticalSize == null ? _this.opticalSize : opticalSize,
        t6 = color == null ? _this.color : color,
        t7 = opacity == null ? _this.get$opacity() : opacity;
      return A.CupertinoIconThemeData$(t6, t2, t4, t7, t5, shadows == null ? _this.shadows : shadows, t1, t3);
    },
    copyWith$1$color(color) {
      var _null = null;
      return this.copyWith$8$color$fill$grade$opacity$opticalSize$shadows$size$weight(color, _null, _null, _null, _null, _null, _null, _null);
    }
  };
  A._CupertinoIconThemeData_IconThemeData_Diagnosticable.prototype = {};
  A._CupertinoLocalizationsDelegate.prototype = {
    isSupported$1(locale) {
      return locale.get$languageCode() === "en";
    },
    load$1(locale) {
      return new A.SynchronousFuture(B.C_DefaultCupertinoLocalizations, type$.SynchronousFuture_CupertinoLocalizations);
    },
    shouldReload$1(old) {
      return false;
    },
    toString$0(_) {
      return "DefaultCupertinoLocalizations.delegate(en_US)";
    }
  };
  A.DefaultCupertinoLocalizations.prototype = {$isCupertinoLocalizations: 1};
  A.CupertinoPicker.prototype = {
    createState$0() {
      return new A._CupertinoPickerState();
    }
  };
  A._CupertinoPickerState.prototype = {
    initState$0() {
      this.super$State$initState();
      this._widget.toString;
    },
    didUpdateWidget$1(oldWidget) {
      this.super$State$didUpdateWidget(oldWidget);
      this._widget.toString;
    },
    dispose$0() {
      var t1 = this._picker$_controller;
      if (t1 != null)
        t1.dispose$0();
      this.super$State$dispose();
    },
    _handleSelectedItemChanged$1(index) {
      var hasSuitableHapticHardware;
      switch (A.defaultTargetPlatform().index) {
        case 2:
          hasSuitableHapticHardware = true;
          break;
        case 0:
        case 1:
        case 3:
        case 4:
        case 5:
          hasSuitableHapticHardware = false;
          break;
        default:
          hasSuitableHapticHardware = null;
      }
      if (hasSuitableHapticHardware && index !== this._lastHapticIndex) {
        this._lastHapticIndex = index;
        A.HapticFeedback_selectionClick();
      }
      this._widget.onSelectedItemChanged.call$1(index);
    },
    build$1(context) {
      var t4, height, _this = this, _null = null,
        textStyle = A.CupertinoTheme_of(context).get$textTheme().get$pickerTextStyle(),
        resolvedBackgroundColor = A.CupertinoDynamicColor_maybeResolve(_this._widget.backgroundColor, context),
        t1 = textStyle.copyWith$1$color(A.CupertinoDynamicColor_maybeResolve(textStyle.color, context)),
        t2 = _this._widget,
        t3 = t2.scrollController;
      t2 = A._setArrayType([A.Positioned$fill(0, new A._CupertinoPickerSemantics(t3, new A.ListWheelScrollView(t3, B.FixedExtentScrollPhysics_null, 1.07, t2.offAxisFraction, false, t2.magnification, 0.447, t2.itemExtent, t2.squeeze, _this.get$_handleSelectedItemChanged(), t2.childDelegate, _null), _null))], type$.JSArray_Widget);
      t3 = _this._widget;
      t4 = t3.selectionOverlay;
      height = t3.itemExtent * t3.magnification;
      t2.push(new A.IgnorePointer(true, _null, A.Center$(new A.ConstrainedBox(new A.BoxConstraints(1 / 0, 1 / 0, height, height), t4, _null), _null, _null), _null));
      return A.DecoratedBox$(A.DefaultTextStyle$(A.Stack$(B.AlignmentDirectional_m1_m1, t2, B.StackFit_0), _null, B.TextOverflow_0, true, t1, _null, _null, B.TextWidthBasis_0), new A.BoxDecoration(resolvedBackgroundColor, _null, _null, _null, _null, _null, B.BoxShape_0), B.DecorationPosition_0);
    }
  };
  A.CupertinoPickerDefaultSelectionOverlay.prototype = {
    build$1(context) {
      var t5, _null = null,
        t1 = this.capStartEdge,
        t2 = t1 ? 9 : 0,
        t3 = this.capEndEdge,
        t4 = t3 ? 9 : 0;
      t1 = t1 ? B.Radius_8_8 : B.Radius_0_0;
      t3 = t3 ? B.Radius_8_8 : B.Radius_0_0;
      t5 = B.CupertinoDynamicColor_541.resolveFrom$1(context);
      return A.Container$(_null, _null, _null, _null, new A.BoxDecoration(t5, _null, _null, new A.BorderRadiusDirectional(t1, t3, t1, t3), _null, _null, B.BoxShape_0), _null, new A.EdgeInsetsDirectional(t2, 0, t4, 0), _null, _null);
    }
  };
  A._CupertinoPickerSemantics.prototype = {
    createRenderObject$1(context) {
      var t1 = new A._RenderCupertinoPickerSemantics(context.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality).textDirection, null, A.LayerHandle$());
      t1.RenderObject$0();
      t1.set$child(null);
      t1._updateController$2(null, this.scrollController);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      var t1;
      renderObject.set$textDirection(context.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality).textDirection);
      t1 = renderObject.___RenderCupertinoPickerSemantics__controller_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      renderObject._updateController$2(t1, this.scrollController);
    }
  };
  A._RenderCupertinoPickerSemantics.prototype = {
    _updateController$2(oldValue, value) {
      var _this = this;
      if (value === oldValue)
        return;
      if (oldValue != null)
        oldValue.removeListener$1(_this.get$_handleScrollUpdate());
      else
        _this._currentIndex = value.initialItem;
      value.addListener$1(_this.get$_handleScrollUpdate());
      _this.___RenderCupertinoPickerSemantics__controller_A = value;
    },
    set$textDirection(value) {
      if (this._picker$_textDirection === value)
        return;
      this._picker$_textDirection = value;
      this.markNeedsSemanticsUpdate$0();
    },
    _handleIncrease$0() {
      var t1 = this.___RenderCupertinoPickerSemantics__controller_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.jumpToItem$1(this._currentIndex + 1);
    },
    _handleDecrease$0() {
      var t1 = this.___RenderCupertinoPickerSemantics__controller_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.jumpToItem$1(this._currentIndex - 1);
    },
    _handleScrollUpdate$0() {
      var t2, _this = this,
        t1 = _this.___RenderCupertinoPickerSemantics__controller_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t2 = type$._FixedExtentScrollPosition;
      if (t2._as(B.JSArray_methods.get$single(t1._positions)).get$itemIndex() === _this._currentIndex)
        return;
      _this._currentIndex = t2._as(B.JSArray_methods.get$single(_this.___RenderCupertinoPickerSemantics__controller_A._positions)).get$itemIndex();
      _this.markNeedsSemanticsUpdate$0();
    },
    describeSemanticsConfiguration$1(config) {
      this.super$RenderObject$describeSemanticsConfiguration(config);
      config._isSemanticBoundary = true;
      config._semantics$_textDirection = this._picker$_textDirection;
      config._hasBeenAnnotated = true;
    },
    assembleSemanticsNode$3(node, config, children) {
      var indexedChildren, previousChild, nextChild, _this = this;
      if (children.length === 0)
        return _this.super$RenderObject$assembleSemanticsNode(node, config, children);
      indexedChildren = A.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$.SemanticsNode);
      B.JSArray_methods.get$first(children).visitChildren$1(new A._RenderCupertinoPickerSemantics_assembleSemanticsNode_closure(indexedChildren));
      if (indexedChildren.$index(0, _this._currentIndex) == null)
        return node.updateWith$1$config(config);
      config._semantics$_attributedValue = new A.AttributedString(indexedChildren.$index(0, _this._currentIndex)._semantics$_attributedLabel.string, B.List_empty0);
      config._hasBeenAnnotated = true;
      previousChild = indexedChildren.$index(0, _this._currentIndex - 1);
      nextChild = indexedChildren.$index(0, _this._currentIndex + 1);
      if (nextChild != null) {
        config._semantics$_attributedIncreasedValue = new A.AttributedString(nextChild._semantics$_attributedLabel.string, B.List_empty0);
        config._hasBeenAnnotated = true;
        config.set$onIncrease(_this.get$_handleIncrease());
      }
      if (previousChild != null) {
        config._semantics$_attributedDecreasedValue = new A.AttributedString(previousChild._semantics$_attributedLabel.string, B.List_empty0);
        config._hasBeenAnnotated = true;
        config.set$onDecrease(_this.get$_handleDecrease());
      }
      node.updateWith$1$config(config);
    },
    dispose$0() {
      this.super$RenderObject$dispose();
      var t1 = this.___RenderCupertinoPickerSemantics__controller_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.removeListener$1(this.get$_handleScrollUpdate());
    }
  };
  A._RenderCupertinoPickerSemantics_assembleSemanticsNode_closure.prototype = {
    call$1(child) {
      var t1 = child.indexInParent;
      t1.toString;
      this.indexedChildren.$indexSet(0, t1, child);
      return true;
    },
    $signature: 75
  };
  A.CupertinoRouteTransitionMixin_buildPageTransitions_closure.prototype = {
    call$0() {
      return A.CupertinoRouteTransitionMixin__isPopGestureEnabled(this.route);
    },
    $signature: 54
  };
  A.CupertinoRouteTransitionMixin_buildPageTransitions_closure0.prototype = {
    call$0() {
      var t1 = this.route,
        t2 = t1._navigator;
      t2.toString;
      t1 = t1._routes$_controller;
      t1.toString;
      t2.didStartUserGesture$0();
      return new A._CupertinoBackGestureController(t1, t2);
    },
    $signature() {
      return this.T._eval$1("_CupertinoBackGestureController<0>()");
    }
  };
  A.CupertinoPageTransition.prototype = {
    build$1(context) {
      var _this = this,
        textDirection = context.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality).textDirection,
        t1 = _this._primaryShadowAnimation;
      return A.SlideTransition$(A.SlideTransition$(new A.DecoratedBoxTransition(t1, _this.child, t1, null), _this._primaryPositionAnimation, textDirection, true), _this._secondaryPositionAnimation, textDirection, false);
    }
  };
  A._CupertinoBackGestureDetector.prototype = {
    createState$0() {
      return new A._CupertinoBackGestureDetectorState(this.$ti._eval$1("_CupertinoBackGestureDetectorState<1>"));
    },
    enabledCallback$0() {
      return this.enabledCallback.call$0();
    },
    onStartPopGesture$0() {
      return this.onStartPopGesture.call$0();
    }
  };
  A._CupertinoBackGestureDetectorState.prototype = {
    initState$0() {
      var t1, _this = this;
      _this.super$State$initState();
      t1 = A.HorizontalDragGestureRecognizer$(_this, null);
      t1.onStart = _this.get$_route$_handleDragStart();
      t1.onUpdate = _this.get$_route$_handleDragUpdate();
      t1.onEnd = _this.get$_route$_handleDragEnd();
      t1.onCancel = _this.get$_handleDragCancel();
      _this.___CupertinoBackGestureDetectorState__recognizer_A = t1;
    },
    dispose$0() {
      var t1 = this.___CupertinoBackGestureDetectorState__recognizer_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1._velocityTrackers.clear$0(0);
      t1.super$OneSequenceGestureRecognizer$dispose();
      this.super$State$dispose();
    },
    _route$_handleDragStart$1(details) {
      this._backGestureController = this._widget.onStartPopGesture$0();
    },
    _route$_handleDragUpdate$1(details) {
      var t2, t3,
        t1 = this._backGestureController;
      t1.toString;
      t2 = details.primaryDelta;
      t2.toString;
      t2 = this._convertToLogical$1(t2 / this._element.get$size()._dx);
      t1 = t1.controller;
      t3 = t1.__AnimationController__value_A;
      t3 === $ && A.throwUnnamedLateFieldNI();
      t1.set$value(t3 - t2);
    },
    _route$_handleDragEnd$1(details) {
      var _this = this,
        t1 = _this._backGestureController;
      t1.toString;
      t1.dragEnd$1(_this._convertToLogical$1(details.velocity.pixelsPerSecond._dx / _this._element.get$size()._dx));
      _this._backGestureController = null;
    },
    _handleDragCancel$0() {
      var t1 = this._backGestureController;
      if (t1 != null)
        t1.dragEnd$1(0);
      this._backGestureController = null;
    },
    _route$_handlePointerDown$1($event) {
      var t1;
      if (this._widget.enabledCallback$0()) {
        t1 = this.___CupertinoBackGestureDetectorState__recognizer_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
        t1.addPointer$1($event);
      }
    },
    _convertToLogical$1(value) {
      switch (this._element.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality).textDirection.index) {
        case 0:
          return -value;
        case 1:
          return value;
      }
    },
    build$1(context) {
      var _null = null,
        t1 = type$.MediaQuery,
        dragAreaWidth = context.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality).textDirection === B.TextDirection_1 ? A.InheritedModel_inheritFrom(context, B._MediaQueryAspect_5, t1).data.padding.left : A.InheritedModel_inheritFrom(context, B._MediaQueryAspect_5, t1).data.padding.right;
      dragAreaWidth = Math.max(dragAreaWidth, 20);
      return A.Stack$(B.AlignmentDirectional_m1_m1, A._setArrayType([this._widget.child, new A.PositionedDirectional(0, 0, 0, dragAreaWidth, A.Listener$(B.HitTestBehavior_2, _null, _null, this.get$_route$_handlePointerDown(), _null, _null, _null), _null)], type$.JSArray_Widget), B.StackFit_2);
    }
  };
  A._CupertinoBackGestureController.prototype = {
    dragEnd$1(velocity) {
      var animateForward, t1, t2, animationStatusCallback, _this = this;
      if (Math.abs(velocity) >= 1)
        animateForward = velocity <= 0;
      else {
        t1 = _this.controller.__AnimationController__value_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
        animateForward = t1 > 0.5;
      }
      if (animateForward) {
        t1 = _this.controller;
        t2 = t1.__AnimationController__value_A;
        t2 === $ && A.throwUnnamedLateFieldNI();
        t2 = A.lerpDouble(800, 0, t2);
        t2.toString;
        t2 = A.Duration$(0, 0, Math.min(B.JSNumber_methods.floor$0(t2), 300), 0, 0);
        t1._direction = B._AnimationDirection_0;
        t1._animateToInternal$3$curve$duration(1, B.Cubic_41f, t2);
      } else {
        _this.navigator.pop$0();
        t1 = _this.controller;
        t2 = t1._ticker;
        if (t2 != null && t2._ticker$_future != null) {
          t2 = t1.__AnimationController__value_A;
          t2 === $ && A.throwUnnamedLateFieldNI();
          t2 = A.lerpDouble(0, 800, t2);
          t2.toString;
          t2 = A.Duration$(0, 0, B.JSNumber_methods.floor$0(t2), 0, 0);
          t1._direction = B._AnimationDirection_1;
          t1._animateToInternal$3$curve$duration(0, B.Cubic_41f, t2);
        }
      }
      t2 = t1._ticker;
      if (t2 != null && t2._ticker$_future != null) {
        animationStatusCallback = A._Cell$();
        animationStatusCallback.__late_helper$_value = new A._CupertinoBackGestureController_dragEnd_closure(_this, animationStatusCallback);
        t2 = animationStatusCallback._readLocal$0();
        t1.didRegisterListener$0();
        t1 = t1.AnimationLocalStatusListenersMixin__statusListeners;
        t1._isDirty = true;
        t1._observer_list$_list.push(t2);
      } else
        _this.navigator.didStopUserGesture$0();
    }
  };
  A._CupertinoBackGestureController_dragEnd_closure.prototype = {
    call$1($status) {
      var t1 = this.$this;
      t1.navigator.didStopUserGesture$0();
      t1.controller.removeStatusListener$1(this.animationStatusCallback._readLocal$0());
    },
    $signature: 2
  };
  A._CupertinoEdgeShadowDecoration.prototype = {
    lerpFrom$2(a, t) {
      var t1;
      if (a instanceof A._CupertinoEdgeShadowDecoration) {
        t1 = A._CupertinoEdgeShadowDecoration_lerp(a, this, t);
        t1.toString;
        return t1;
      }
      t1 = A._CupertinoEdgeShadowDecoration_lerp(null, this, t);
      t1.toString;
      return t1;
    },
    lerpTo$2(b, t) {
      var t1;
      if (b instanceof A._CupertinoEdgeShadowDecoration) {
        t1 = A._CupertinoEdgeShadowDecoration_lerp(this, b, t);
        t1.toString;
        return t1;
      }
      t1 = A._CupertinoEdgeShadowDecoration_lerp(this, null, t);
      t1.toString;
      return t1;
    },
    createBoxPainter$1(onChanged) {
      return new A._CupertinoEdgeShadowPainter(this, onChanged);
    },
    $eq(_, other) {
      var t1, t2;
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(this))
        return false;
      if (other instanceof A._CupertinoEdgeShadowDecoration) {
        t1 = other._route$_colors;
        t2 = this._route$_colors;
        t2 = t1 == null ? t2 == null : t1 === t2;
        t1 = t2;
      } else
        t1 = false;
      return t1;
    },
    get$hashCode(_) {
      return J.get$hashCode$(this._route$_colors);
    }
  };
  A._CupertinoEdgeShadowDecoration_lerp_closure.prototype = {
    call$1(color) {
      var t1 = A.Color_lerp(null, color, this.t);
      t1.toString;
      return t1;
    },
    $signature: 48
  };
  A._CupertinoEdgeShadowDecoration_lerp_closure0.prototype = {
    call$1(color) {
      var t1 = A.Color_lerp(null, color, 1 - this.t);
      t1.toString;
      return t1;
    },
    $signature: 48
  };
  A._CupertinoEdgeShadowPainter.prototype = {
    paint$3(canvas, offset, configuration) {
      var t1, t2, shadowWidth, shadowHeight, bandWidth, start, shadowDirection, t3, bandColorIndex, dx, t4, t5,
        colors = this._route$_decoration._route$_colors;
      if (colors == null)
        return;
      t1 = configuration.size;
      t2 = t1._dx;
      shadowWidth = 0.05 * t2;
      shadowHeight = t1._dy;
      bandWidth = shadowWidth / (colors.length - 1);
      switch (configuration.textDirection.index) {
        case 0:
          start = offset._dx + t2;
          shadowDirection = 1;
          break;
        case 1:
          start = offset._dx;
          shadowDirection = -1;
          break;
        default:
          start = null;
          shadowDirection = null;
      }
      for (t1 = offset._dy, t2 = t1 + shadowHeight, t3 = canvas._objects, bandColorIndex = 0, dx = 0; dx < shadowWidth; ++dx) {
        if (B.JSInt_methods.$tdiv(dx, bandWidth) !== bandColorIndex)
          ++bandColorIndex;
        t4 = new DataView(new ArrayBuffer(56));
        t4.setInt32(4, (A.Color_lerp(colors[bandColorIndex], colors[bandColorIndex + 1], B.JSInt_methods.$mod(dx, bandWidth) / bandWidth).value ^ 4278190080) >>> 0, true);
        t5 = start + shadowDirection * dx - 1;
        canvas._addMethod$1(14);
        t3.push(new A.Paint(t4));
        canvas._addData4$4(t5, t1, t5 + 1, t2);
      }
    }
  };
  A.CupertinoScrollbar.prototype = {
    createState$0() {
      return new A._CupertinoScrollbarState(new A.LabeledGlobalKey(null, type$.LabeledGlobalKey_State_StatefulWidget), null, null);
    }
  };
  A._CupertinoScrollbarState.prototype = {
    initState$0() {
      var t1, _this = this;
      _this.super$RawScrollbarState$initState();
      t1 = _this.___CupertinoScrollbarState__thicknessAnimationController_A = A.AnimationController$(null, B.Duration_100000, null, null, _this);
      t1.didRegisterListener$0();
      t1 = t1.AnimationLocalListenersMixin__listeners;
      t1._isDirty = true;
      t1._observer_list$_list.push(new A._CupertinoScrollbarState_initState_closure(_this));
    },
    updateScrollbarPainter$0() {
      var t2, t3, t4, _this = this,
        t1 = _this.__RawScrollbarState_scrollbarPainter_F;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t2 = _this._element;
      t2.toString;
      t2 = B.CupertinoDynamicColor_aBn.resolveFrom$1(t2);
      t1.set$color(t2);
      t1.set$textDirection(_this._element.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality).textDirection);
      t2 = _this._widget;
      t3 = t2.thickness;
      t3.toString;
      t4 = _this.___CupertinoScrollbarState__thicknessAnimationController_A;
      t4 === $ && A.throwUnnamedLateFieldNI();
      t4 = t4.__AnimationController__value_A;
      t4 === $ && A.throwUnnamedLateFieldNI();
      t1.set$thickness(t3 + t4 * (t2.thicknessWhileDragging - t3));
      t1.set$mainAxisMargin(3);
      t1.set$crossAxisMargin(3);
      t3 = _this._widget;
      t2 = t3.radius;
      t3 = t3.radiusWhileDragging;
      t4 = _this.___CupertinoScrollbarState__thicknessAnimationController_A.__AnimationController__value_A;
      t4 === $ && A.throwUnnamedLateFieldNI();
      t4 = A.Radius_lerp(t2, t3, t4);
      t4.toString;
      t1.set$radius(t4);
      t4 = _this._element;
      t4.toString;
      t1.set$padding(A.InheritedModel_inheritFrom(t4, B._MediaQueryAspect_5, type$.MediaQuery).data.padding);
      t1.set$minLength(36);
      t1.set$minOverscrollLength(8);
      t1.set$scrollbarOrientation(_this._widget.scrollbarOrientation);
    },
    handleThumbPressStart$1(localPosition) {
      var direction, _this = this;
      _this.super$RawScrollbarState$handleThumbPressStart(localPosition);
      direction = _this.getScrollbarDirection$0();
      if (direction == null)
        return;
      switch (direction.index) {
        case 1:
          _this._pressStartAxisPosition = localPosition._dy;
          break;
        case 0:
          _this._pressStartAxisPosition = localPosition._dx;
          break;
      }
    },
    handleThumbPress$0() {
      if (this.getScrollbarDirection$0() == null)
        return;
      this.super$RawScrollbarState$handleThumbPress();
      var t1 = this.___CupertinoScrollbarState__thicknessAnimationController_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.forward$0().then$1$1(new A._CupertinoScrollbarState_handleThumbPress_closure(), type$.void);
    },
    handleThumbPressEnd$2(localPosition, velocity) {
      var t1, _this = this,
        direction = _this.getScrollbarDirection$0();
      if (direction == null)
        return;
      t1 = _this.___CupertinoScrollbarState__thicknessAnimationController_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.reverse$0();
      _this.super$RawScrollbarState$handleThumbPressEnd(localPosition, velocity);
      switch (direction.index) {
        case 1:
          if (Math.abs(velocity.pixelsPerSecond._dy) < 10 && Math.abs(localPosition._dy - _this._pressStartAxisPosition) > 0)
            A.HapticFeedback_mediumImpact();
          break;
        case 0:
          if (Math.abs(velocity.pixelsPerSecond._dx) < 10 && Math.abs(localPosition._dx - _this._pressStartAxisPosition) > 0)
            A.HapticFeedback_mediumImpact();
          break;
      }
    },
    dispose$0() {
      var t1 = this.___CupertinoScrollbarState__thicknessAnimationController_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.dispose$0();
      this.super$RawScrollbarState$dispose();
    }
  };
  A._CupertinoScrollbarState_initState_closure.prototype = {
    call$0() {
      this.$this.updateScrollbarPainter$0();
    },
    $signature: 0
  };
  A._CupertinoScrollbarState_handleThumbPress_closure.prototype = {
    call$1(_) {
      return A.HapticFeedback_mediumImpact();
    },
    $signature: 146
  };
  A.CupertinoTextThemeData.prototype = {
    get$pickerTextStyle() {
      var t1 = this._pickerTextStyle;
      if (t1 == null) {
        t1 = this._defaults.labelColor;
        t1 = B.CupertinoDynamicColor_ezo.$eq(0, t1) ? B.TextStyle_YIF : B.TextStyle_YIF.copyWith$1$color(t1);
      }
      return t1;
    },
    resolveFrom$1(context) {
      var _this = this,
        t1 = _this._defaults,
        resolvedLabelColor = t1.labelColor,
        resolvedLabelColor0 = resolvedLabelColor instanceof A.CupertinoDynamicColor ? resolvedLabelColor.resolveFrom$1(context) : resolvedLabelColor,
        resolvedInactiveGray = t1.inactiveGrayColor;
      if (resolvedInactiveGray instanceof A.CupertinoDynamicColor)
        resolvedInactiveGray = resolvedInactiveGray.resolveFrom$1(context);
      t1 = resolvedLabelColor0.$eq(0, resolvedLabelColor) && resolvedInactiveGray.$eq(0, B.CupertinoDynamicColor_JHz) ? t1 : new A._TextThemeDefaultsBuilder(resolvedLabelColor0, resolvedInactiveGray);
      return new A.CupertinoTextThemeData(t1, A.CupertinoDynamicColor_maybeResolve(_this._primaryColor, context), A._resolveTextStyle(_this._textStyle, context), A._resolveTextStyle(_this._actionTextStyle, context), A._resolveTextStyle(_this._tabLabelTextStyle, context), A._resolveTextStyle(_this._navTitleTextStyle, context), A._resolveTextStyle(_this._navLargeTitleTextStyle, context), A._resolveTextStyle(_this._navActionTextStyle, context), A._resolveTextStyle(_this._pickerTextStyle, context), A._resolveTextStyle(_this._dateTimePickerTextStyle, context));
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      return other instanceof A.CupertinoTextThemeData && other._defaults.$eq(0, _this._defaults) && J.$eq$(other._primaryColor, _this._primaryColor) && J.$eq$(other._textStyle, _this._textStyle) && J.$eq$(other._actionTextStyle, _this._actionTextStyle) && J.$eq$(other._tabLabelTextStyle, _this._tabLabelTextStyle) && J.$eq$(other._navTitleTextStyle, _this._navTitleTextStyle) && J.$eq$(other._navLargeTitleTextStyle, _this._navLargeTitleTextStyle) && J.$eq$(other._navActionTextStyle, _this._navActionTextStyle) && J.$eq$(other._pickerTextStyle, _this._pickerTextStyle) && J.$eq$(other._dateTimePickerTextStyle, _this._dateTimePickerTextStyle);
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(_this._defaults, _this._primaryColor, _this._textStyle, _this._actionTextStyle, _this._tabLabelTextStyle, _this._navTitleTextStyle, _this._navLargeTitleTextStyle, _this._navActionTextStyle, _this._pickerTextStyle, _this._dateTimePickerTextStyle, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    }
  };
  A._TextThemeDefaultsBuilder.prototype = {
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      return other instanceof A._TextThemeDefaultsBuilder && other.labelColor.$eq(0, _this.labelColor) && other.inactiveGrayColor.$eq(0, _this.inactiveGrayColor);
    },
    get$hashCode(_) {
      return A.Object_hash(this.labelColor, this.inactiveGrayColor, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    }
  };
  A._CupertinoTextThemeData_Object_Diagnosticable.prototype = {};
  A.CupertinoTheme.prototype = {
    build$1(context) {
      var _null = null;
      return new A._InheritedCupertinoTheme(this, A.IconTheme$(this.child, A.CupertinoIconThemeData$(this.data.get$primaryColor(), _null, _null, _null, _null, _null, _null, _null), _null), _null);
    }
  };
  A._InheritedCupertinoTheme.prototype = {
    updateShouldNotify$1(old) {
      return !this.theme.data.$eq(0, old.theme.data);
    }
  };
  A.CupertinoThemeData.prototype = {
    get$primaryColor() {
      var t1 = this.primaryColor;
      return t1 == null ? this._theme$_defaults.primaryColor : t1;
    },
    get$primaryContrastingColor() {
      var t1 = this.primaryContrastingColor;
      return t1 == null ? this._theme$_defaults.primaryContrastingColor : t1;
    },
    get$textTheme() {
      var _null = null,
        t1 = this.textTheme;
      if (t1 == null) {
        t1 = this._theme$_defaults.textThemeDefaults;
        t1 = new A._DefaultCupertinoTextThemeData(t1.labelColor, t1.inactiveGray, B._TextThemeDefaultsBuilder_j4P, this.get$primaryColor(), _null, _null, _null, _null, _null, _null, _null, _null);
      }
      return t1;
    },
    get$barBackgroundColor() {
      var t1 = this.barBackgroundColor;
      return t1 == null ? this._theme$_defaults.barBackgroundColor : t1;
    },
    get$scaffoldBackgroundColor() {
      var t1 = this.scaffoldBackgroundColor;
      return t1 == null ? this._theme$_defaults.scaffoldBackgroundColor : t1;
    },
    get$applyThemeToAll() {
      var t1 = this.applyThemeToAll;
      return t1 == null ? false : t1;
    },
    resolveFrom$1(context) {
      var t6, _this = this,
        t1 = new A.CupertinoThemeData_resolveFrom_convertColor(context),
        t2 = _this.get$brightness(),
        t3 = t1.call$1(_this.primaryColor),
        t4 = t1.call$1(_this.primaryContrastingColor),
        t5 = _this.textTheme;
      t5 = t5 == null ? null : t5.resolveFrom$1(context);
      t6 = t1.call$1(_this.barBackgroundColor);
      t1 = t1.call$1(_this.scaffoldBackgroundColor);
      _this.get$applyThemeToAll();
      return A.CupertinoThemeData$_rawWithDefaults(t2, t3, t4, t5, t6, t1, false, _this._theme$_defaults.resolveFrom$2(context, _this.textTheme == null));
    },
    copyWith$7$applyThemeToAll$barBackgroundColor$brightness$primaryColor$primaryContrastingColor$scaffoldBackgroundColor$textTheme(applyThemeToAll, barBackgroundColor, brightness, primaryColor, primaryContrastingColor, scaffoldBackgroundColor, textTheme) {
      var _this = this,
        t1 = _this.brightness,
        t2 = _this.primaryColor,
        t3 = _this.primaryContrastingColor,
        t4 = _this.barBackgroundColor,
        t5 = _this.scaffoldBackgroundColor,
        t6 = _this.applyThemeToAll;
      return A.CupertinoThemeData$_rawWithDefaults(t1, t2, t3, textTheme, t4, t5, t6, _this._theme$_defaults);
    },
    copyWith$1$textTheme(textTheme) {
      var _null = null;
      return this.copyWith$7$applyThemeToAll$barBackgroundColor$brightness$primaryColor$primaryContrastingColor$scaffoldBackgroundColor$textTheme(_null, _null, _null, _null, _null, _null, textTheme);
    },
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      t1 = false;
      if (other instanceof A.CupertinoThemeData)
        if (other.get$brightness() == _this.get$brightness())
          if (other.get$primaryColor().$eq(0, _this.get$primaryColor()))
            if (other.get$primaryContrastingColor().$eq(0, _this.get$primaryContrastingColor()))
              if (other.get$textTheme().$eq(0, _this.get$textTheme()))
                if (other.get$barBackgroundColor().$eq(0, _this.get$barBackgroundColor())) {
                  t1 = other.get$scaffoldBackgroundColor().$eq(0, _this.get$scaffoldBackgroundColor());
                  if (t1) {
                    other.get$applyThemeToAll();
                    _this.get$applyThemeToAll();
                  }
                }
      return t1;
    },
    get$hashCode(_) {
      var _this = this,
        t1 = _this.get$brightness(),
        t2 = _this.get$primaryColor(),
        t3 = _this.get$primaryContrastingColor(),
        t4 = _this.get$textTheme(),
        t5 = _this.get$barBackgroundColor(),
        t6 = _this.get$scaffoldBackgroundColor();
      _this.get$applyThemeToAll();
      return A.Object_hash(t1, t2, t3, t4, t5, t6, false, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    }
  };
  A.CupertinoThemeData_resolveFrom_convertColor.prototype = {
    call$1(color) {
      return A.CupertinoDynamicColor_maybeResolve(color, this.context);
    },
    $signature: 62
  };
  A.NoDefaultCupertinoThemeData.prototype = {
    resolveFrom$1(context) {
      var _this = this,
        t1 = new A.NoDefaultCupertinoThemeData_resolveFrom_convertColor(context),
        t2 = _this.get$brightness(),
        t3 = t1.call$1(_this.get$primaryColor()),
        t4 = t1.call$1(_this.get$primaryContrastingColor()),
        t5 = _this.get$textTheme();
      t5 = t5 == null ? null : t5.resolveFrom$1(context);
      return new A.NoDefaultCupertinoThemeData(t2, t3, t4, t5, t1.call$1(_this.get$barBackgroundColor()), t1.call$1(_this.get$scaffoldBackgroundColor()), _this.get$applyThemeToAll());
    },
    get$brightness() {
      return this.brightness;
    },
    get$primaryColor() {
      return this.primaryColor;
    },
    get$primaryContrastingColor() {
      return this.primaryContrastingColor;
    },
    get$textTheme() {
      return this.textTheme;
    },
    get$barBackgroundColor() {
      return this.barBackgroundColor;
    },
    get$scaffoldBackgroundColor() {
      return this.scaffoldBackgroundColor;
    },
    get$applyThemeToAll() {
      return this.applyThemeToAll;
    }
  };
  A.NoDefaultCupertinoThemeData_resolveFrom_convertColor.prototype = {
    call$1(color) {
      return A.CupertinoDynamicColor_maybeResolve(color, this.context);
    },
    $signature: 62
  };
  A._CupertinoThemeDefaults.prototype = {
    resolveFrom$2(context, resolveTextTheme) {
      var t5, t6, _this = this,
        t1 = new A._CupertinoThemeDefaults_resolveFrom_convertColor(context),
        t2 = t1.call$1(_this.primaryColor),
        t3 = t1.call$1(_this.primaryContrastingColor),
        t4 = t1.call$1(_this.barBackgroundColor);
      t1 = t1.call$1(_this.scaffoldBackgroundColor);
      t5 = _this.textThemeDefaults;
      if (resolveTextTheme) {
        t6 = t5.labelColor;
        if (t6 instanceof A.CupertinoDynamicColor)
          t6 = t6.resolveFrom$1(context);
        t5 = t5.inactiveGray;
        t5 = new A._CupertinoTextThemeDefaults(t6, t5 instanceof A.CupertinoDynamicColor ? t5.resolveFrom$1(context) : t5);
      }
      return new A._CupertinoThemeDefaults(_this.brightness, t2, t3, t4, t1, false, t5);
    }
  };
  A._CupertinoThemeDefaults_resolveFrom_convertColor.prototype = {
    call$1(color) {
      return color instanceof A.CupertinoDynamicColor ? color.resolveFrom$1(this.context) : color;
    },
    $signature: 48
  };
  A._CupertinoTextThemeDefaults.prototype = {};
  A._DefaultCupertinoTextThemeData.prototype = {
    get$pickerTextStyle() {
      return A.CupertinoTextThemeData.prototype.get$pickerTextStyle.call(this).copyWith$1$color(this.labelColor);
    }
  };
  A._CupertinoThemeData_NoDefaultCupertinoThemeData_Diagnosticable.prototype = {};
  A.compute_closure.prototype = {
    call$0() {
      return this.callback.call$1(this.message);
    },
    $signature() {
      return this.R._eval$1("0/()");
    }
  };
  A._testPlatform_closure.prototype = {
    call$0() {
      return null;
    },
    $signature: 160
  };
  A._browserPlatform_closure.prototype = {
    call$0() {
      var _s7_ = "android";
      if (B.JSString_methods.startsWith$1(_s7_, "mac"))
        return B.TargetPlatform_4;
      if (B.JSString_methods.startsWith$1(_s7_, "win"))
        return B.TargetPlatform_5;
      if (B.JSString_methods.contains$1(_s7_, "iphone") || B.JSString_methods.contains$1(_s7_, "ipad") || B.JSString_methods.contains$1(_s7_, "ipod"))
        return B.TargetPlatform_2;
      if (B.JSString_methods.contains$1(_s7_, _s7_))
        return B.TargetPlatform_0;
      if (init.G.window.matchMedia("only screen and (pointer: fine)").matches)
        return B.TargetPlatform_3;
      return B.TargetPlatform_0;
    },
    $signature: 173
  };
  A._ErrorDiagnostic.prototype = {
    toString$1$minLevel(_, minLevel) {
      var t1 = A.DiagnosticsProperty.prototype.get$value.call(this);
      t1.toString;
      return J.join$0$ax(t1);
    },
    toString$0(_) {
      return this.toString$1$minLevel(0, B.DiagnosticLevel_3);
    }
  };
  A.ErrorDescription.prototype = {};
  A.ErrorSummary.prototype = {};
  A.ErrorHint.prototype = {};
  A.FlutterErrorDetails.prototype = {
    exceptionAsString$0() {
      var message, fullMessage, t1, t2, position, body, splitPoint,
        longMessage = this.exception;
      if (type$.AssertionError._is(longMessage)) {
        message = longMessage.get$message();
        fullMessage = longMessage.toString$0(0);
        longMessage = null;
        if (typeof message == "string" && message !== fullMessage) {
          t1 = fullMessage.length;
          t2 = message.length;
          if (t1 > t2) {
            position = B.JSString_methods.lastIndexOf$1(fullMessage, message);
            if (position === t1 - t2 && position > 2 && B.JSString_methods.substring$2(fullMessage, position - 2, position) === ": ") {
              body = B.JSString_methods.substring$2(fullMessage, 0, position - 2);
              splitPoint = B.JSString_methods.indexOf$1(body, " Failed assertion:");
              if (splitPoint >= 0)
                body = B.JSString_methods.substring$2(body, 0, splitPoint) + "\n" + B.JSString_methods.substring$1(body, splitPoint + 1);
              longMessage = B.JSString_methods.trimRight$0(message) + "\n" + body;
            }
          }
        }
        if (longMessage == null)
          longMessage = fullMessage;
      } else if (!(typeof longMessage == "string"))
        longMessage = type$.Error._is(longMessage) || type$.Exception._is(longMessage) ? J.toString$0$(longMessage) : "  " + A.S(longMessage);
      longMessage = B.JSString_methods.trimRight$0(longMessage);
      return longMessage.length === 0 ? "  <no message available>" : longMessage;
    },
    get$summary() {
      return A.DiagnosticsNode_DiagnosticsNode$message(new A.FlutterErrorDetails_summary_formatException(this).call$0(), true);
    },
    toStringShort$0() {
      return "Exception caught by " + this.library;
    },
    toString$0(_) {
      A._FlutterErrorDetailsNode$(null, B.DiagnosticsTreeStyle_5, this);
      return "";
    }
  };
  A.FlutterErrorDetails_summary_formatException.prototype = {
    call$0() {
      return B.JSString_methods.trimLeft$0(this.$this.exceptionAsString$0().split("\n")[0]);
    },
    $signature: 47
  };
  A.FlutterError.prototype = {
    get$message() {
      return this.toString$0(0);
    },
    toStringShort$0() {
      return "FlutterError";
    },
    toString$0(_) {
      var t1,
        errors = new A.WhereTypeIterable(this.diagnostics, type$.WhereTypeIterable__ErrorDiagnostic);
      if (!errors.get$isEmpty(0)) {
        t1 = errors.get$first(0);
        t1 = A.DiagnosticsProperty.prototype.get$value.call(t1);
        t1.toString;
        t1 = J.join$0$ax(t1);
      } else
        t1 = "FlutterError";
      return t1;
    },
    $isAssertionError: 1
  };
  A.FlutterError_FlutterError_closure.prototype = {
    call$1(line) {
      return A.ErrorDescription$(line);
    },
    $signature: 176
  };
  A.FlutterError_defaultStackFilter_closure.prototype = {
    call$1(value) {
      return value + 1;
    },
    $signature: 89
  };
  A.FlutterError_defaultStackFilter_closure0.prototype = {
    call$1(value) {
      return value + 1;
    },
    $signature: 89
  };
  A.debugPrintStack_closure.prototype = {
    call$1(line) {
      return B.JSString_methods.contains$1(line, "StackTrace.current") || B.JSString_methods.contains$1(line, "dart-sdk/lib/_internal") || B.JSString_methods.contains$1(line, "dart:sdk_internal");
    },
    $signature: 44
  };
  A.DiagnosticsStackTrace.prototype = {};
  A._FlutterErrorDetailsNode.prototype = {};
  A._FlutterError_Error_DiagnosticableTreeMixin.prototype = {};
  A._FlutterErrorDetails_Object_Diagnosticable.prototype = {};
  A.BindingBase.prototype = {
    initInstances$0() {
    },
    initServiceExtensions$0() {
    },
    lockEvents$1(callback) {
      var future;
      ++this._lockCount;
      future = callback.call$0();
      future.whenComplete$1(new A.BindingBase_lockEvents_closure(this));
      return future;
    },
    unlocked$0() {
    },
    toString$0(_) {
      return "<BindingBase>";
    }
  };
  A.BindingBase_lockEvents_closure.prototype = {
    call$0() {
      var t1 = this.$this;
      if (--t1._lockCount <= 0) {
        t1.super$_WidgetsFlutterBinding_BindingBase_GestureBinding$unlocked();
        if (t1.SchedulerBinding__taskQueue._priority_queue$_length !== 0)
          t1._ensureEventLoopCallback$0();
      }
    },
    $signature: 9
  };
  A.Listenable.prototype = {};
  A.ChangeNotifier.prototype = {
    addListener$1(listener) {
      var t1, newListeners, i, t2, _this = this;
      if (_this.get$_count() === _this.get$_listeners().length) {
        t1 = type$.nullable_void_Function;
        if (_this.get$_count() === 0)
          _this.set$_listeners(A.List_List$filled(1, null, false, t1));
        else {
          newListeners = A.List_List$filled(_this.get$_listeners().length * 2, null, false, t1);
          for (i = 0; i < _this.get$_count(); ++i)
            newListeners[i] = _this.get$_listeners()[i];
          _this.set$_listeners(newListeners);
        }
      }
      t1 = _this.get$_listeners();
      t2 = _this.get$_count();
      _this.set$_count(t2 + 1);
      t1[t2] = listener;
    },
    _removeAt$1(index) {
      var newListeners, i, i0, _this = this;
      _this.set$_count(_this.get$_count() - 1);
      if (_this.get$_count() * 2 <= _this.get$_listeners().length) {
        newListeners = A.List_List$filled(_this.get$_count(), null, false, type$.nullable_void_Function);
        for (i = 0; i < index; ++i)
          newListeners[i] = _this.get$_listeners()[i];
        for (i = index; i < _this.get$_count(); i = i0) {
          i0 = i + 1;
          newListeners[i] = _this.get$_listeners()[i0];
        }
        _this.set$_listeners(newListeners);
      } else {
        for (i = index; i < _this.get$_count(); i = i0) {
          i0 = i + 1;
          _this.get$_listeners()[i] = _this.get$_listeners()[i0];
        }
        _this.get$_listeners()[_this.get$_count()] = null;
      }
    },
    removeListener$1(listener) {
      var i, _this = this;
      for (i = 0; i < _this.get$_count(); ++i)
        if (J.$eq$(_this.get$_listeners()[i], listener)) {
          if (_this.get$_notificationCallStackDepth() > 0) {
            _this.get$_listeners()[i] = null;
            _this.set$_reentrantlyRemovedListeners(_this.get$_reentrantlyRemovedListeners() + 1);
          } else
            _this._removeAt$1(i);
          break;
        }
    },
    dispose$0() {
      this.set$_listeners($.$get$ChangeNotifier__emptyListeners());
      this.set$_count(0);
    },
    notifyListeners$0() {
      var i, exception, stack, end, t1, exception0, t2, newLength, newListeners, newIndex, listener, newIndex0, swapIndex, _this = this;
      if (_this.get$_count() === 0)
        return;
      _this.set$_notificationCallStackDepth(_this.get$_notificationCallStackDepth() + 1);
      end = _this.get$_count();
      for (i = 0; i < end; ++i)
        try {
          t1 = _this.get$_listeners()[i];
          if (t1 != null)
            t1.call$0();
        } catch (exception0) {
          exception = A.unwrapException(exception0);
          stack = A.getTraceFromException(exception0);
          t1 = A.ErrorDescription$("while dispatching notifications for " + A.getRuntimeTypeOfDartObject(_this).toString$0(0));
          t2 = $.FlutterError_onError;
          if (t2 != null)
            t2.call$1(new A.FlutterErrorDetails(exception, stack, "foundation library", t1, new A.ChangeNotifier_notifyListeners_closure(_this), false));
        }
      _this.set$_notificationCallStackDepth(_this.get$_notificationCallStackDepth() - 1);
      if (_this.get$_notificationCallStackDepth() === 0 && _this.get$_reentrantlyRemovedListeners() > 0) {
        newLength = _this.get$_count() - _this.get$_reentrantlyRemovedListeners();
        if (newLength * 2 <= _this.get$_listeners().length) {
          newListeners = A.List_List$filled(newLength, null, false, type$.nullable_void_Function);
          for (newIndex = 0, i = 0; i < _this.get$_count(); ++i) {
            listener = _this.get$_listeners()[i];
            if (listener != null) {
              newIndex0 = newIndex + 1;
              newListeners[newIndex] = listener;
              newIndex = newIndex0;
            }
          }
          _this.set$_listeners(newListeners);
        } else
          for (i = 0; i < newLength; ++i)
            if (_this.get$_listeners()[i] == null) {
              swapIndex = i + 1;
              for (; _this.get$_listeners()[swapIndex] == null;)
                ++swapIndex;
              _this.get$_listeners()[i] = _this.get$_listeners()[swapIndex];
              _this.get$_listeners()[swapIndex] = null;
            }
        _this.set$_reentrantlyRemovedListeners(0);
        _this.set$_count(newLength);
      }
    },
    $isListenable: 1,
    get$_count() {
      return this.ChangeNotifier__count;
    },
    get$_listeners() {
      return this.ChangeNotifier__listeners;
    },
    get$_notificationCallStackDepth() {
      return this.ChangeNotifier__notificationCallStackDepth;
    },
    get$_reentrantlyRemovedListeners() {
      return this.ChangeNotifier__reentrantlyRemovedListeners;
    },
    set$_count(val) {
      return this.ChangeNotifier__count = val;
    },
    set$_listeners(val) {
      return this.ChangeNotifier__listeners = val;
    },
    set$_notificationCallStackDepth(val) {
      return this.ChangeNotifier__notificationCallStackDepth = val;
    },
    set$_reentrantlyRemovedListeners(val) {
      return this.ChangeNotifier__reentrantlyRemovedListeners = val;
    }
  };
  A.ChangeNotifier_notifyListeners_closure.prototype = {
    call$0() {
      var _null = null,
        t1 = this.$this;
      return A._setArrayType([A.DiagnosticsProperty$("The " + A.getRuntimeTypeOfDartObject(t1).toString$0(0) + " sending notification was", t1, true, B.C__NoDefaultValue, _null, _null, _null, B.DiagnosticLevel_3, false, true, true, B.DiagnosticsTreeStyle_9, _null)], type$.JSArray_DiagnosticsNode);
    },
    $signature: 5
  };
  A._MergingListenable.prototype = {
    addListener$1(listener) {
      var t1, t2, _i;
      for (t1 = this._change_notifier$_children, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i)
        t1[_i].addListener$1(listener);
    },
    removeListener$1(listener) {
      var t1, t2, _i;
      for (t1 = this._change_notifier$_children, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i)
        t1[_i].removeListener$1(listener);
    },
    toString$0(_) {
      return "Listenable.merge([" + B.JSArray_methods.join$1(this._change_notifier$_children, ", ") + "])";
    }
  };
  A.ValueNotifier.prototype = {
    set$value(newValue) {
      var t1 = this._change_notifier$_value;
      if (t1 == null ? newValue == null : t1 === newValue)
        return;
      this._change_notifier$_value = newValue;
      this.notifyListeners$0();
    },
    toString$0(_) {
      return "<optimized out>#" + A.shortHash(this) + "(" + A.S(this._change_notifier$_value) + ")";
    }
  };
  A.DiagnosticLevel.prototype = {
    _enumToString$0() {
      return "DiagnosticLevel." + this._name;
    }
  };
  A.DiagnosticsTreeStyle.prototype = {
    _enumToString$0() {
      return "DiagnosticsTreeStyle." + this._name;
    }
  };
  A._NoDefaultValue.prototype = {};
  A.DiagnosticsNode.prototype = {
    toString$1$minLevel(_, minLevel) {
      return this.super$Object$toString(0);
    },
    toString$0(_) {
      return this.toString$1$minLevel(0, B.DiagnosticLevel_3);
    }
  };
  A.DiagnosticsProperty.prototype = {
    get$value() {
      this._maybeCacheValue$0();
      return this._value;
    },
    _maybeCacheValue$0() {
      return;
    }
  };
  A.DiagnosticableNode.prototype = {};
  A.DiagnosticableTreeNode.prototype = {};
  A.Diagnosticable.prototype = {
    toStringShort$0() {
      return "<optimized out>#" + A.shortHash(this);
    },
    toString$1$minLevel(_, minLevel) {
      var t1 = this.toStringShort$0();
      return t1;
    },
    toString$0(_) {
      return this.toString$1$minLevel(0, B.DiagnosticLevel_3);
    }
  };
  A.DiagnosticableTree.prototype = {
    toStringShort$0() {
      return "<optimized out>#" + A.shortHash(this);
    }
  };
  A.DiagnosticableTreeMixin.prototype = {
    toString$0(_) {
      return this.toDiagnosticsNode$1$style(B.DiagnosticsTreeStyle_8).super$Object$toString(0);
    },
    toStringShort$0() {
      return "<optimized out>#" + A.shortHash(this);
    },
    toDiagnosticsNode$2$name$style($name, style) {
      return A.DiagnosticableTreeNode$($name, style, this);
    },
    toDiagnosticsNode$1$style(style) {
      return this.toDiagnosticsNode$2$name$style(null, style);
    }
  };
  A.DiagnosticsBlock.prototype = {};
  A._DiagnosticableTree_Object_Diagnosticable.prototype = {};
  A.Key.prototype = {};
  A.LocalKey.prototype = {};
  A.UniqueKey.prototype = {
    toString$0(_) {
      return "[#" + A.shortHash(this) + "]";
    }
  };
  A.ValueKey.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(this))
        return false;
      return this.$ti._is(other) && other.value === this.value;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this.value, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var t1 = this.$ti,
        t2 = t1._precomputed1,
        t3 = this.value,
        valueString = A.createRuntimeType(t2) === B.Type_String_AXU ? "<'" + A.S(t3) + "'>" : "<" + A.S(t3) + ">";
      if (A.getRuntimeTypeOfDartObject(this) === A.createRuntimeType(t1))
        return "[" + valueString + "]";
      return "[" + A.createRuntimeType(t2).toString$0(0) + " " + valueString + "]";
    }
  };
  A._TypeLiteral.prototype = {};
  A.LicenseEntry.prototype = {};
  A.LicenseEntryWithLineBreaks.prototype = {};
  A.AbstractNode.prototype = {
    redepthChild$1(child) {
      var t1 = child._depth,
        t2 = this._depth;
      if (t1 <= t2) {
        child._depth = t2 + 1;
        child.redepthChildren$0();
      }
    },
    redepthChildren$0() {
    },
    get$owner() {
      return this._node$_owner;
    },
    attach$1(owner) {
      this._node$_owner = owner;
    },
    detach$0() {
      this._node$_owner = null;
    },
    get$parent() {
      return this._node$_parent;
    },
    adoptChild$1(child) {
      var t1;
      child._node$_parent = this;
      t1 = this._node$_owner;
      if (t1 != null)
        child.attach$1(t1);
      this.redepthChild$1(child);
    },
    dropChild$1(child) {
      child._node$_parent = null;
      if (this._node$_owner != null)
        child.detach$0();
    }
  };
  A.ObserverList.prototype = {
    get$_observer_list$_set() {
      var result, _this = this,
        value = _this.__ObserverList__set_FI;
      if (value === $) {
        result = A.HashSet_HashSet(_this.$ti._precomputed1);
        _this.__ObserverList__set_FI !== $ && A.throwUnnamedLateFieldADI();
        _this.__ObserverList__set_FI = result;
        value = result;
      }
      return value;
    },
    remove$1(_, item) {
      this._isDirty = true;
      this.get$_observer_list$_set().clear$0(0);
      return B.JSArray_methods.remove$1(this._observer_list$_list, item);
    },
    clear$0(_) {
      this._isDirty = false;
      B.JSArray_methods.clear$0(this._observer_list$_list);
      this.get$_observer_list$_set().clear$0(0);
    },
    contains$1(_, element) {
      var _this = this,
        t1 = _this._observer_list$_list;
      if (t1.length < 3)
        return B.JSArray_methods.contains$1(t1, element);
      if (_this._isDirty) {
        _this.get$_observer_list$_set().addAll$1(0, t1);
        _this._isDirty = false;
      }
      return _this.get$_observer_list$_set().contains$1(0, element);
    },
    get$iterator(_) {
      var t1 = this._observer_list$_list;
      return new J.ArrayIterator(t1, t1.length, A._arrayInstanceType(t1)._eval$1("ArrayIterator<1>"));
    },
    get$isEmpty(_) {
      return this._observer_list$_list.length === 0;
    },
    get$isNotEmpty(_) {
      return this._observer_list$_list.length !== 0;
    },
    toList$1$growable(_, growable) {
      var t1 = this._observer_list$_list,
        t2 = A._arrayInstanceType(t1);
      return growable ? A._setArrayType(t1.slice(0), t2) : J.JSArray_JSArray$markFixed(t1.slice(0), t2._precomputed1);
    },
    toList$0(_) {
      return this.toList$1$growable(0, true);
    }
  };
  A.HashedObserverList.prototype = {
    add$1(_, item) {
      var t1 = this._observer_list$_map,
        t2 = t1.$index(0, item);
      t1.$indexSet(0, item, (t2 == null ? 0 : t2) + 1);
    },
    remove$1(_, item) {
      var t1 = this._observer_list$_map,
        value = t1.$index(0, item);
      if (value == null)
        return false;
      if (value === 1)
        t1.remove$1(0, item);
      else
        t1.$indexSet(0, item, value - 1);
      return true;
    },
    contains$1(_, element) {
      return this._observer_list$_map.containsKey$1(element);
    },
    get$iterator(_) {
      var t1 = this._observer_list$_map;
      return new A.LinkedHashMapKeyIterator(t1, t1._modifications, t1._first);
    },
    get$isEmpty(_) {
      return this._observer_list$_map.__js_helper$_length === 0;
    },
    get$isNotEmpty(_) {
      return this._observer_list$_map.__js_helper$_length !== 0;
    }
  };
  A.PersistentHashMap.prototype = {
    put$2(key, value) {
      var t1 = this._root,
        t2 = t1 == null ? $.$get$_CompressedNode_empty() : t1,
        newRoot = t2.put$4(0, key, A.Primitives_objectHashCode(key), value);
      if (newRoot === t1)
        return this;
      return new A.PersistentHashMap(newRoot);
    },
    $index(_, key) {
      var t1 = this._root;
      if (t1 == null)
        return null;
      return t1.$get$3(0, key, A.Primitives_objectHashCode(key));
    }
  };
  A._TrieNode.prototype = {};
  A._FullNode.prototype = {
    put$4(bitIndex, key, keyHash, value) {
      var newNode, t2, clone, j,
        index = B.JSInt_methods._shruOtherPositive$1(keyHash, bitIndex) & 31,
        t1 = this.descendants,
        node = t1[index];
      if (node == null)
        node = $.$get$_CompressedNode_empty();
      newNode = node.put$4(bitIndex + 5, key, keyHash, value);
      if (newNode === node)
        t1 = this;
      else {
        t2 = t1.length;
        clone = A.List_List$filled(t2, null, false, type$.nullable_Object);
        for (j = 0; j < t2; ++j)
          clone[j] = t1[j];
        clone[index] = newNode;
        t1 = new A._FullNode(clone);
      }
      return t1;
    },
    $get$3(bitIndex, key, keyHash) {
      var node = this.descendants[B.JSInt_methods._shruOtherPositive$1(keyHash, bitIndex) & 31];
      return node == null ? null : node.$get$3(bitIndex + 5, key, keyHash);
    }
  };
  A._CompressedNode.prototype = {
    put$4(bitIndex, key, keyHash, value) {
      var index, keyOrNull, t4, valueOrNode, newNode, clone, j, t5, existingKeyHash, list, occupiedCount, prefixLength, totalLength, newKeyValuePairs, srcIndex, dstIndex, _this = this, _null = null,
        t1 = B.JSInt_methods._shruOtherPositive$1(keyHash, bitIndex) & 31,
        bit = 1 << t1 >>> 0,
        t2 = _this.occupiedIndices,
        t3 = (t2 & bit - 1) >>> 0,
        n = t3 - (t3 >>> 1 & 1431655765);
      n = (n & 858993459) + (n >>> 2 & 858993459);
      n = n + (n >>> 4) & 252645135;
      n += n >>> 8;
      index = n + (n >>> 16) & 63;
      if ((t2 & bit) >>> 0 !== 0) {
        t1 = _this.keyValuePairs;
        t3 = 2 * index;
        keyOrNull = t1[t3];
        t4 = t3 + 1;
        valueOrNode = t1[t4];
        if (keyOrNull == null) {
          newNode = valueOrNode.put$4(bitIndex + 5, key, keyHash, value);
          if (newNode === valueOrNode)
            return _this;
          t3 = t1.length;
          clone = A.List_List$filled(t3, _null, false, type$.nullable_Object);
          for (j = 0; j < t3; ++j)
            clone[j] = t1[j];
          clone[t4] = newNode;
          return new A._CompressedNode(t2, clone);
        }
        if (key.$eq(0, keyOrNull)) {
          if (value == valueOrNode)
            t1 = _this;
          else {
            t3 = t1.length;
            clone = A.List_List$filled(t3, _null, false, type$.nullable_Object);
            for (j = 0; j < t3; ++j)
              clone[j] = t1[j];
            clone[t4] = value;
            t1 = new A._CompressedNode(t2, clone);
          }
          return t1;
        }
        t5 = bitIndex + 5;
        existingKeyHash = keyOrNull.get$hashCode(keyOrNull);
        if (existingKeyHash === keyHash) {
          list = A.List_List$filled(4, _null, false, type$.nullable_Object);
          list[0] = keyOrNull;
          list[1] = valueOrNode;
          list[2] = key;
          list[3] = value;
          newNode = new A._HashCollisionNode(keyHash, list);
        } else
          newNode = $.$get$_CompressedNode_empty().put$4(t5, keyOrNull, existingKeyHash, valueOrNode).put$4(t5, key, keyHash, value);
        t5 = t1.length;
        clone = A.List_List$filled(t5, _null, false, type$.nullable_Object);
        for (j = 0; j < t5; ++j)
          clone[j] = t1[j];
        clone[t3] = null;
        clone[t4] = newNode;
        return new A._CompressedNode(t2, clone);
      } else {
        n = t2 - (t2 >>> 1 & 1431655765);
        n = (n & 858993459) + (n >>> 2 & 858993459);
        n = n + (n >>> 4) & 252645135;
        n += n >>> 8;
        occupiedCount = n + (n >>> 16) & 63;
        if (occupiedCount >= 16) {
          t2 = _this._inflate$1(bitIndex);
          t2.descendants[t1] = $.$get$_CompressedNode_empty().put$4(bitIndex + 5, key, keyHash, value);
          return t2;
        } else {
          prefixLength = 2 * index;
          totalLength = 2 * occupiedCount;
          newKeyValuePairs = A.List_List$filled(totalLength + 2, _null, false, type$.nullable_Object);
          for (t1 = _this.keyValuePairs, srcIndex = 0; srcIndex < prefixLength; ++srcIndex)
            newKeyValuePairs[srcIndex] = t1[srcIndex];
          newKeyValuePairs[prefixLength] = key;
          newKeyValuePairs[prefixLength + 1] = value;
          for (dstIndex = prefixLength + 2, srcIndex = prefixLength; srcIndex < totalLength; ++srcIndex, ++dstIndex)
            newKeyValuePairs[dstIndex] = t1[srcIndex];
          return new A._CompressedNode((t2 | bit) >>> 0, newKeyValuePairs);
        }
      }
    },
    $get$3(bitIndex, key, keyHash) {
      var n, t2, keyOrNull, valueOrNode,
        bit = 1 << (B.JSInt_methods._shruOtherPositive$1(keyHash, bitIndex) & 31) >>> 0,
        t1 = this.occupiedIndices;
      if ((t1 & bit) >>> 0 === 0)
        return null;
      t1 = (t1 & bit - 1) >>> 0;
      n = t1 - (t1 >>> 1 & 1431655765);
      n = (n & 858993459) + (n >>> 2 & 858993459);
      n = n + (n >>> 4) & 252645135;
      n += n >>> 8;
      t1 = this.keyValuePairs;
      t2 = 2 * (n + (n >>> 16) & 63);
      keyOrNull = t1[t2];
      valueOrNode = t1[t2 + 1];
      if (keyOrNull == null)
        return valueOrNode.$get$3(bitIndex + 5, key, keyHash);
      if (key === keyOrNull)
        return valueOrNode;
      return null;
    },
    _inflate$1(bitIndex) {
      var t1, t2, t3, srcIndex, dstIndex, keyOrNull, t4,
        nodes = A.List_List$filled(32, null, false, type$.nullable_Object);
      for (t1 = this.occupiedIndices, t2 = bitIndex + 5, t3 = this.keyValuePairs, srcIndex = 0, dstIndex = 0; dstIndex < 32; ++dstIndex)
        if ((B.JSInt_methods._shruOtherPositive$1(t1, dstIndex) & 1) !== 0) {
          keyOrNull = t3[srcIndex];
          t4 = srcIndex + 1;
          if (keyOrNull == null)
            nodes[dstIndex] = t3[t4];
          else
            nodes[dstIndex] = $.$get$_CompressedNode_empty().put$4(t2, keyOrNull, keyOrNull.get$hashCode(keyOrNull), t3[t4]);
          srcIndex += 2;
        }
      return new A._FullNode(nodes);
    }
  };
  A._HashCollisionNode.prototype = {
    put$4(bitIndex, key, keyHash, val) {
      var index, t2, t3, clone, j, $length, newArray, i, keyValuePairs, _this = this,
        t1 = _this.hash;
      if (keyHash === t1) {
        index = _this._indexOf$1(key);
        if (index !== -1) {
          t1 = _this.keyValuePairs;
          t2 = index + 1;
          if (t1[t2] == val)
            t1 = _this;
          else {
            t3 = t1.length;
            clone = A.List_List$filled(t3, null, false, type$.nullable_Object);
            for (j = 0; j < t3; ++j)
              clone[j] = t1[j];
            clone[t2] = val;
            t1 = new A._HashCollisionNode(keyHash, clone);
          }
          return t1;
        }
        t1 = _this.keyValuePairs;
        $length = t1.length;
        newArray = A.List_List$filled($length + 2, null, false, type$.nullable_Object);
        for (i = 0; i < $length; ++i)
          newArray[i] = t1[i];
        newArray[$length] = key;
        newArray[$length + 1] = val;
        return new A._HashCollisionNode(keyHash, newArray);
      }
      t1 = B.JSInt_methods._shruOtherPositive$1(t1, bitIndex);
      keyValuePairs = A.List_List$filled(2, null, false, type$.nullable_Object);
      keyValuePairs[1] = _this;
      return new A._CompressedNode(1 << (t1 & 31) >>> 0, keyValuePairs).put$4(bitIndex, key, keyHash, val);
    },
    $get$3(bitIndex, key, keyHash) {
      var index = this._indexOf$1(key);
      return index < 0 ? null : this.keyValuePairs[index + 1];
    },
    _indexOf$1(key) {
      var i,
        t1 = this.keyValuePairs,
        $length = t1.length;
      for (i = 0; i < $length; i += 2)
        if (key.$eq(0, t1[i]))
          return i;
      return -1;
    }
  };
  A.TargetPlatform.prototype = {
    _enumToString$0() {
      return "TargetPlatform." + this._name;
    }
  };
  A.WriteBuffer.prototype = {
    _serialization$_add$1(byte) {
      var t1, t2, _this = this;
      if (_this._currentSize === _this._buffer.length)
        _this._resize$0();
      t1 = _this._buffer;
      t2 = _this._currentSize;
      t1.$flags & 2 && A.throwUnsupportedOperation(t1);
      t1[t2] = byte;
      _this._currentSize = t2 + 1;
    },
    _append$1(other) {
      var _this = this,
        t1 = other.length,
        newSize = _this._currentSize + t1;
      if (newSize >= _this._buffer.length)
        _this._resize$1(newSize);
      B.NativeUint8List_methods.setRange$3(_this._buffer, _this._currentSize, newSize, other);
      _this._currentSize += t1;
    },
    _addAll$3(data, start, end) {
      var _this = this,
        newEnd = end == null ? _this._eightBytesAsList.length : end,
        newSize = _this._currentSize + (newEnd - start);
      if (newSize >= _this._buffer.length)
        _this._resize$1(newSize);
      B.NativeUint8List_methods.setRange$3(_this._buffer, _this._currentSize, newSize, data);
      _this._currentSize = newSize;
    },
    _addAll$1(data) {
      return this._addAll$3(data, 0, null);
    },
    _resize$1(requiredLength) {
      var t1 = this._buffer,
        t2 = t1.length,
        t3 = requiredLength == null ? 0 : requiredLength,
        newLength = Math.max(t3, t2 * 2),
        newBuffer = new Uint8Array(newLength);
      B.NativeUint8List_methods.setRange$3(newBuffer, 0, t2, t1);
      this._buffer = newBuffer;
    },
    _resize$0() {
      return this._resize$1(null);
    },
    _alignTo$1(alignment) {
      var mod = B.JSInt_methods.$mod(this._currentSize, alignment);
      if (mod !== 0)
        this._addAll$3($.$get$WriteBuffer__zeroBuffer(), 0, alignment - mod);
    },
    done$0() {
      var result, _this = this;
      if (_this._isDone)
        throw A.wrapException(A.StateError$("done() must not be called more than once on the same " + A.getRuntimeTypeOfDartObject(_this).toString$0(0) + "."));
      result = J.asByteData$2$x(B.NativeUint8List_methods.get$buffer(_this._buffer), 0, _this._currentSize);
      _this._buffer = new Uint8Array(0);
      _this._isDone = true;
      return result;
    }
  };
  A.ReadBuffer.prototype = {
    getUint8$0(_) {
      return this.data.getUint8(this._serialization$_position++);
    },
    getInt64$0(_) {
      var t1 = this._serialization$_position,
        t2 = $.$get$Endian_host();
      B.NativeByteData_methods.getInt64$2(this.data, t1, t2);
    },
    getUint8List$1($length) {
      var t1 = this.data,
        list = J.asUint8List$2$x(B.NativeByteData_methods.get$buffer(t1), t1.byteOffset + this._serialization$_position, $length);
      this._serialization$_position += $length;
      return list;
    },
    getInt64List$1($length) {
      var t1, list, _this = this;
      _this._alignTo$1(8);
      t1 = _this.data;
      list = J.asInt64List$2$x(B.NativeByteData_methods.get$buffer(t1), t1.byteOffset + _this._serialization$_position, $length);
      _this._serialization$_position = _this._serialization$_position + 8 * $length;
      return list;
    },
    _alignTo$1(alignment) {
      var t1 = this._serialization$_position,
        mod = B.JSInt_methods.$mod(t1, alignment);
      if (mod !== 0)
        this._serialization$_position = t1 + (alignment - mod);
    }
  };
  A.StackFrame.prototype = {
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(_this.number, _this.$package, _this.line, _this.column, _this.className, _this.method, _this.source, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      return other instanceof A.StackFrame && other.number === _this.number && other.$package === _this.$package && other.line === _this.line && other.column === _this.column && other.className === _this.className && other.method === _this.method && other.source === _this.source;
    },
    toString$0(_) {
      var _this = this;
      return "StackFrame(#" + _this.number + ", " + _this.packageScheme + ":" + _this.$package + "/" + _this.packagePath + ":" + _this.line + ":" + _this.column + ", className: " + _this.className + ", method: " + _this.method + ")";
    }
  };
  A.StackFrame_fromStackString_closure.prototype = {
    call$1(line) {
      return line.length !== 0;
    },
    $signature: 44
  };
  A.SynchronousFuture.prototype = {
    then$1$2$onError(onValue, onError, $R) {
      var result = onValue.call$1(this._synchronous_future$_value);
      if ($R._eval$1("Future<0>")._is(result))
        return result;
      return new A.SynchronousFuture(result, $R._eval$1("SynchronousFuture<0>"));
    },
    then$1$1(onValue, $R) {
      return this.then$1$2$onError(onValue, null, $R);
    },
    whenComplete$1(action) {
      var result, e, stack, t1, exception, t2, _this = this;
      try {
        result = action.call$0();
        if (type$.Future_dynamic._is(result)) {
          t1 = result.then$1$1(new A.SynchronousFuture_whenComplete_closure(_this), _this.$ti._precomputed1);
          return t1;
        }
        return _this;
      } catch (exception) {
        e = A.unwrapException(exception);
        stack = A.getTraceFromException(exception);
        t1 = A._interceptUserError(e, stack);
        t2 = new A._Future($.Zone__current, _this.$ti._eval$1("_Future<1>"));
        t2._asyncCompleteErrorObject$1(t1);
        return t2;
      }
    },
    $isFuture: 1
  };
  A.SynchronousFuture_whenComplete_closure.prototype = {
    call$1(value) {
      return this.$this._synchronous_future$_value;
    },
    $signature() {
      return this.$this.$ti._eval$1("1(@)");
    }
  };
  A.GestureDisposition.prototype = {
    _enumToString$0() {
      return "GestureDisposition." + this._name;
    }
  };
  A.GestureArenaMember.prototype = {};
  A.GestureArenaEntry.prototype = {
    resolve$1(disposition) {
      this._arena._resolve$3(this._pointer, this._member, disposition);
    }
  };
  A._GestureArena.prototype = {
    toString$0(_) {
      var _this = this,
        t1 = _this.members;
      t1 = t1.length === 0 ? "<empty>" : new A.MappedListIterable(t1, new A._GestureArena_toString_closure(_this), A._arrayInstanceType(t1)._eval$1("MappedListIterable<1,String>")).join$1(0, ", ");
      if (_this.isOpen)
        t1 += " [open]";
      if (_this.isHeld)
        t1 += " [held]";
      if (_this.hasPendingSweep)
        t1 += " [hasPendingSweep]";
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  A._GestureArena_toString_closure.prototype = {
    call$1(member) {
      if (member === this.$this.eagerWinner)
        return member.toString$0(0) + " (eager winner)";
      return member.toString$0(0);
    },
    $signature: 232
  };
  A.GestureArenaManager.prototype = {
    add$2(_, pointer, member) {
      this._arenas.putIfAbsent$2(pointer, new A.GestureArenaManager_add_closure()).members.push(member);
      return new A.GestureArenaEntry(this, pointer, member);
    },
    close$1(pointer) {
      var state = this._arenas.$index(0, pointer);
      if (state == null)
        return;
      state.isOpen = false;
      this._tryToResolveArena$2(pointer, state);
    },
    sweep$1(pointer) {
      var i,
        t1 = this._arenas,
        state = t1.$index(0, pointer);
      if (state == null)
        return;
      if (state.isHeld) {
        state.hasPendingSweep = true;
        return;
      }
      t1.remove$1(0, pointer);
      t1 = state.members;
      if (t1.length !== 0) {
        B.JSArray_methods.get$first(t1).acceptGesture$1(pointer);
        for (i = 1; i < t1.length; ++i)
          t1[i].rejectGesture$1(pointer);
      }
    },
    hold$1(pointer) {
      var state = this._arenas.$index(0, pointer);
      if (state == null)
        return;
      state.isHeld = true;
    },
    release$1(pointer) {
      var state = this._arenas.$index(0, pointer);
      if (state == null)
        return;
      state.isHeld = false;
      if (state.hasPendingSweep)
        this.sweep$1(pointer);
    },
    _resolve$3(pointer, member, disposition) {
      var state = this._arenas.$index(0, pointer);
      if (state == null)
        return;
      if (disposition === B.GestureDisposition_1) {
        B.JSArray_methods.remove$1(state.members, member);
        member.rejectGesture$1(pointer);
        if (!state.isOpen)
          this._tryToResolveArena$2(pointer, state);
      } else if (state.isOpen) {
        if (state.eagerWinner == null)
          state.eagerWinner = member;
      } else
        this._resolveInFavorOf$3(pointer, state, member);
    },
    _tryToResolveArena$2(pointer, state) {
      var t1 = state.members.length;
      if (t1 === 1)
        A.scheduleMicrotask(new A.GestureArenaManager__tryToResolveArena_closure(this, pointer, state));
      else if (t1 === 0)
        this._arenas.remove$1(0, pointer);
      else {
        t1 = state.eagerWinner;
        if (t1 != null)
          this._resolveInFavorOf$3(pointer, state, t1);
      }
    },
    _resolveByDefault$2(pointer, state) {
      var t1 = this._arenas;
      if (!t1.containsKey$1(pointer))
        return;
      t1.remove$1(0, pointer);
      B.JSArray_methods.get$first(state.members).acceptGesture$1(pointer);
    },
    _resolveInFavorOf$3(pointer, state, member) {
      var t1, t2, _i, rejectedMember;
      this._arenas.remove$1(0, pointer);
      for (t1 = state.members, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
        rejectedMember = t1[_i];
        if (rejectedMember !== member)
          rejectedMember.rejectGesture$1(pointer);
      }
      member.acceptGesture$1(pointer);
    }
  };
  A.GestureArenaManager_add_closure.prototype = {
    call$0() {
      return new A._GestureArena(A._setArrayType([], type$.JSArray_GestureArenaMember));
    },
    $signature: 233
  };
  A.GestureArenaManager__tryToResolveArena_closure.prototype = {
    call$0() {
      return this.$this._resolveByDefault$2(this.pointer, this.state);
    },
    $signature: 0
  };
  A._Resampler.prototype = {
    stop$0() {
      var t1, t2, t3, _this = this;
      for (t1 = _this._resamplers, t2 = new A.LinkedHashMapValueIterator(t1, t1._modifications, t1._first), t3 = _this._handlePointerEvent; t2.moveNext$0();)
        t2.__js_helper$_current.stop$1(t3);
      t1.clear$0(0);
      _this._frameTime = B.Duration_0;
      t1 = _this._timer;
      if (t1 != null)
        t1.cancel$0();
    }
  };
  A.GestureBinding.prototype = {
    cancelPointer$1(pointer) {
      var t1 = this.GestureBinding__pendingPointerEvents;
      if (t1._head === t1._tail && this._lockCount <= 0)
        A.scheduleMicrotask(this.get$_flushPointerEventQueue());
      t1.addFirst$1(A.PointerCancelEvent$(0, 0, 0, 0, 0, B.PointerDeviceKind_0, false, 0, pointer, B.Offset_0_0, 1, 1, 0, 0, 0, 0, 0, 0, B.Duration_0));
    },
    _flushPointerEventQueue$0() {
      for (var t1 = this.GestureBinding__pendingPointerEvents; !t1.get$isEmpty(0);)
        this.handlePointerEvent$1(t1.removeFirst$0());
    },
    handlePointerEvent$1($event) {
      this.get$_resampler().stop$0();
      this._handlePointerEventImmediately$1($event);
    },
    _handlePointerEventImmediately$1($event) {
      var hitTestResult, t2, t3, _this = this,
        t1 = !type$.PointerDownEvent._is($event);
      if (!t1 || type$.PointerSignalEvent._is($event) || type$.PointerHoverEvent._is($event) || type$.PointerPanZoomStartEvent._is($event)) {
        hitTestResult = A.HitTestResult$();
        t2 = $event.get$position();
        t3 = _this.RendererBinding___RendererBinding__pipelineOwner_A;
        t3 === $ && A.throwUnnamedLateFieldNI();
        t3._rootNode.hitTest$2$position(hitTestResult, t2);
        _this.super$GestureBinding$hitTest(hitTestResult, t2);
        if (!t1 || type$.PointerPanZoomStartEvent._is($event))
          _this.GestureBinding__hitTests.$indexSet(0, $event.get$pointer(), hitTestResult);
      } else if (type$.PointerUpEvent._is($event) || type$.PointerCancelEvent._is($event) || type$.PointerPanZoomEndEvent._is($event))
        hitTestResult = _this.GestureBinding__hitTests.remove$1(0, $event.get$pointer());
      else
        hitTestResult = $event.get$down() || type$.PointerPanZoomUpdateEvent._is($event) ? _this.GestureBinding__hitTests.$index(0, $event.get$pointer()) : null;
      if (hitTestResult != null || type$.PointerAddedEvent._is($event) || type$.PointerRemovedEvent._is($event))
        _this.dispatchEvent$2($event, hitTestResult);
    },
    hitTest$2(result, position) {
      result.add$1(0, new A.HitTestEntry(this, type$.HitTestEntry_HitTestTarget));
    },
    dispatchEvent$2($event, hitTestResult) {
      var exception, stack, entry, exception0, stack0, t1, t2, _i, t3, t4,
        _s15_ = "gesture library";
      if (hitTestResult == null) {
        try {
          this.GestureBinding_pointerRouter.route$1($event);
        } catch (exception0) {
          exception = A.unwrapException(exception0);
          stack = A.getTraceFromException(exception0);
          A.FlutterError_reportError(A.FlutterErrorDetailsForPointerEventDispatcher$(A.ErrorDescription$("while dispatching a non-hit-tested pointer event"), $event, exception, null, new A.GestureBinding_dispatchEvent_closure($event), _s15_, stack));
        }
        return;
      }
      for (t1 = hitTestResult._path, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
        entry = t1[_i];
        try {
          entry.target.handleEvent$2($event.transformed$1(entry._transform), entry);
        } catch (exception) {
          exception0 = A.unwrapException(exception);
          stack0 = A.getTraceFromException(exception);
          t3 = A.ErrorDescription$("while dispatching a pointer event");
          t4 = $.FlutterError_onError;
          if (t4 != null)
            t4.call$1(new A.FlutterErrorDetailsForPointerEventDispatcher(exception0, stack0, _s15_, t3, new A.GestureBinding_dispatchEvent_closure0($event, entry), false));
        }
      }
    },
    handleEvent$2($event, entry) {
      var _this = this;
      _this.GestureBinding_pointerRouter.route$1($event);
      if (type$.PointerDownEvent._is($event) || type$.PointerPanZoomStartEvent._is($event))
        _this.GestureBinding_gestureArena.close$1($event.get$pointer());
      else if (type$.PointerUpEvent._is($event) || type$.PointerPanZoomEndEvent._is($event))
        _this.GestureBinding_gestureArena.sweep$1($event.get$pointer());
      else if (type$.PointerSignalEvent._is($event))
        _this.GestureBinding_pointerSignalResolver.resolve$1($event);
    },
    _handleSampleTimeChanged$0() {
      if (this._lockCount <= 0)
        this.get$_resampler().stop$0();
    },
    get$_resampler() {
      var _this = this,
        value = _this.GestureBinding___GestureBinding__resampler_FI;
      if (value === $) {
        $.$get$Stopwatch__frequency();
        value = _this.GestureBinding___GestureBinding__resampler_FI = new A._Resampler(A.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$.PointerEventResampler), B.Duration_0, new A.Stopwatch(), _this.get$_handlePointerEventImmediately(), _this.get$_handleSampleTimeChanged(), B.Duration_16667);
      }
      return value;
    }
  };
  A.GestureBinding_dispatchEvent_closure.prototype = {
    call$0() {
      var _null = null;
      return A._setArrayType([A.DiagnosticsProperty$("Event", this.event, true, B.C__NoDefaultValue, _null, _null, _null, B.DiagnosticLevel_3, false, true, true, B.DiagnosticsTreeStyle_9, _null)], type$.JSArray_DiagnosticsNode);
    },
    $signature: 5
  };
  A.GestureBinding_dispatchEvent_closure0.prototype = {
    call$0() {
      var _null = null;
      return A._setArrayType([A.DiagnosticsProperty$("Event", this.event, true, B.C__NoDefaultValue, _null, _null, _null, B.DiagnosticLevel_3, false, true, true, B.DiagnosticsTreeStyle_9, _null), A.DiagnosticsProperty$("Target", this.entry.target, true, B.C__NoDefaultValue, _null, _null, _null, B.DiagnosticLevel_3, false, true, true, B.DiagnosticsTreeStyle_9, _null)], type$.JSArray_DiagnosticsNode);
    },
    $signature: 5
  };
  A.FlutterErrorDetailsForPointerEventDispatcher.prototype = {};
  A.DragDownDetails.prototype = {
    toString$0(_) {
      return "DragDownDetails(" + this.globalPosition.toString$0(0) + ")";
    }
  };
  A.DragStartDetails.prototype = {
    toString$0(_) {
      return "DragStartDetails(" + this.globalPosition.toString$0(0) + ")";
    }
  };
  A.DragUpdateDetails.prototype = {
    toString$0(_) {
      return "DragUpdateDetails(" + this.delta.toString$0(0) + ")";
    }
  };
  A.DragEndDetails.prototype = {
    toString$0(_) {
      return "DragEndDetails(" + this.velocity.toString$0(0) + ")";
    }
  };
  A.PointerEvent.prototype = {
    get$localPosition() {
      return this.position;
    },
    get$localDelta() {
      return this.delta;
    },
    get$timeStamp() {
      return this.timeStamp;
    },
    get$pointer() {
      return this.pointer;
    },
    get$kind() {
      return this.kind;
    },
    get$device() {
      return this.device;
    },
    get$position() {
      return this.position;
    },
    get$delta() {
      return this.delta;
    },
    get$buttons() {
      return this.buttons;
    },
    get$down() {
      return this.down;
    },
    get$obscured() {
      return this.obscured;
    },
    get$pressureMin() {
      return this.pressureMin;
    },
    get$pressureMax() {
      return this.pressureMax;
    },
    get$distance() {
      return this.distance;
    },
    get$distanceMax() {
      return this.distanceMax;
    },
    get$size() {
      return this.size;
    },
    get$radiusMajor() {
      return this.radiusMajor;
    },
    get$radiusMinor() {
      return this.radiusMinor;
    },
    get$radiusMin() {
      return this.radiusMin;
    },
    get$radiusMax() {
      return this.radiusMax;
    },
    get$orientation() {
      return this.orientation;
    },
    get$tilt() {
      return this.tilt;
    },
    get$synthesized() {
      return this.synthesized;
    },
    get$transform() {
      return this.transform;
    }
  };
  A._PointerEventDescription.prototype = {};
  A._AbstractPointerEvent.prototype = {$isPointerEvent: 1};
  A._TransformedPointerEvent.prototype = {
    get$timeStamp() {
      return this.get$original().timeStamp;
    },
    get$pointer() {
      return this.get$original().pointer;
    },
    get$kind() {
      return this.get$original().kind;
    },
    get$device() {
      return this.get$original().device;
    },
    get$position() {
      return this.get$original().position;
    },
    get$delta() {
      return this.get$original().delta;
    },
    get$buttons() {
      return this.get$original().buttons;
    },
    get$down() {
      return this.get$original().down;
    },
    get$obscured() {
      this.get$original();
      return false;
    },
    get$pressureMin() {
      return this.get$original().pressureMin;
    },
    get$pressureMax() {
      return this.get$original().pressureMax;
    },
    get$distance() {
      return this.get$original().distance;
    },
    get$distanceMax() {
      return this.get$original().distanceMax;
    },
    get$size() {
      return this.get$original().size;
    },
    get$radiusMajor() {
      return this.get$original().radiusMajor;
    },
    get$radiusMinor() {
      return this.get$original().radiusMinor;
    },
    get$radiusMin() {
      return this.get$original().radiusMin;
    },
    get$radiusMax() {
      return this.get$original().radiusMax;
    },
    get$orientation() {
      return this.get$original().orientation;
    },
    get$tilt() {
      return this.get$original().tilt;
    },
    get$synthesized() {
      this.get$original();
      return false;
    },
    get$localPosition() {
      var result, _this = this,
        value = _this.___TransformedPointerEvent_localPosition_FI;
      if (value === $) {
        result = A.PointerEvent_transformPosition(_this.get$transform(), _this.get$original().position);
        _this.___TransformedPointerEvent_localPosition_FI !== $ && A.throwUnnamedLateFieldADI();
        _this.___TransformedPointerEvent_localPosition_FI = result;
        value = result;
      }
      return value;
    },
    get$localDelta() {
      var t1, t2, t3, result, _this = this,
        value = _this.___TransformedPointerEvent_localDelta_FI;
      if (value === $) {
        t1 = _this.get$transform();
        t2 = _this.get$original();
        t3 = _this.get$original();
        result = A.PointerEvent_transformDeltaViaPositions(t1, _this.get$localPosition(), t2.delta, t3.position);
        _this.___TransformedPointerEvent_localDelta_FI !== $ && A.throwUnnamedLateFieldADI();
        _this.___TransformedPointerEvent_localDelta_FI = result;
        value = result;
      }
      return value;
    }
  };
  A._CopyPointerEnterEvent.prototype = {};
  A.PointerEnterEvent.prototype = {
    transformed$1(transform) {
      if (transform == null || transform.$eq(0, this.transform))
        return this;
      return new A._TransformedPointerEnterEvent(this, transform);
    }
  };
  A._TransformedPointerEnterEvent.prototype = {
    transformed$1(transform) {
      return this.original.transformed$1(transform);
    },
    $isPointerEnterEvent: 1,
    get$original() {
      return this.original;
    },
    get$transform() {
      return this.transform;
    }
  };
  A._CopyPointerExitEvent.prototype = {};
  A.PointerExitEvent.prototype = {
    transformed$1(transform) {
      if (transform == null || transform.$eq(0, this.transform))
        return this;
      return new A._TransformedPointerExitEvent(this, transform);
    }
  };
  A._TransformedPointerExitEvent.prototype = {
    transformed$1(transform) {
      return this.original.transformed$1(transform);
    },
    $isPointerExitEvent: 1,
    get$original() {
      return this.original;
    },
    get$transform() {
      return this.transform;
    }
  };
  A._CopyPointerCancelEvent.prototype = {};
  A.PointerCancelEvent.prototype = {
    transformed$1(transform) {
      if (transform == null || transform.$eq(0, this.transform))
        return this;
      return new A._TransformedPointerCancelEvent(this, transform);
    }
  };
  A._TransformedPointerCancelEvent.prototype = {
    transformed$1(transform) {
      return this.original.transformed$1(transform);
    },
    $isPointerCancelEvent: 1,
    get$original() {
      return this.original;
    },
    get$transform() {
      return this.transform;
    }
  };
  A._PointerCancelEvent_PointerEvent__PointerEventDescription.prototype = {};
  A._PointerCancelEvent_PointerEvent__PointerEventDescription__CopyPointerCancelEvent.prototype = {};
  A._PointerEnterEvent_PointerEvent__PointerEventDescription.prototype = {};
  A._PointerEnterEvent_PointerEvent__PointerEventDescription__CopyPointerEnterEvent.prototype = {};
  A._PointerEvent_Object_Diagnosticable.prototype = {};
  A._PointerExitEvent_PointerEvent__PointerEventDescription.prototype = {};
  A._PointerExitEvent_PointerEvent__PointerEventDescription__CopyPointerExitEvent.prototype = {};
  A.__TransformedPointerCancelEvent__TransformedPointerEvent__CopyPointerCancelEvent.prototype = {};
  A.__TransformedPointerEnterEvent__TransformedPointerEvent__CopyPointerEnterEvent.prototype = {};
  A.__TransformedPointerEvent__AbstractPointerEvent_Diagnosticable.prototype = {};
  A.__TransformedPointerEvent__AbstractPointerEvent_Diagnosticable__PointerEventDescription.prototype = {};
  A.__TransformedPointerExitEvent__TransformedPointerEvent__CopyPointerExitEvent.prototype = {};
  A.DeviceGestureSettings.prototype = {
    get$hashCode(_) {
      return A.Object_hash(this.touchSlop, 23, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(this))
        return false;
      return other instanceof A.DeviceGestureSettings && other.touchSlop == this.touchSlop;
    },
    toString$0(_) {
      return "DeviceGestureSettings(touchSlop: " + A.S(this.touchSlop) + ")";
    }
  };
  A.HitTestEntry.prototype = {
    toString$0(_) {
      return "<optimized out>#" + A.shortHash(this) + "(" + this.target.toString$0(0) + ")";
    }
  };
  A._TransformPart.prototype = {};
  A._MatrixTransformPart.prototype = {
    multiply$1(rhs) {
      return this.matrix.multiplied$1(rhs);
    }
  };
  A._OffsetTransformPart.prototype = {
    multiply$1(rhs) {
      var t3, tx, ty, t4,
        t1 = new Float64Array(16),
        t2 = new A.Matrix4(t1);
      t2.setFrom$1(rhs);
      t3 = this.offset;
      tx = t3._dx;
      ty = t3._dy;
      t3 = t1[0];
      t4 = t1[3];
      t1[0] = t3 + tx * t4;
      t1[1] = t1[1] + ty * t4;
      t1[2] = t1[2] + 0 * t4;
      t1[3] = t4;
      t4 = t1[4];
      t3 = t1[7];
      t1[4] = t4 + tx * t3;
      t1[5] = t1[5] + ty * t3;
      t1[6] = t1[6] + 0 * t3;
      t1[7] = t3;
      t3 = t1[8];
      t4 = t1[11];
      t1[8] = t3 + tx * t4;
      t1[9] = t1[9] + ty * t4;
      t1[10] = t1[10] + 0 * t4;
      t1[11] = t4;
      t4 = t1[12];
      t3 = t1[15];
      t1[12] = t4 + tx * t3;
      t1[13] = t1[13] + ty * t3;
      t1[14] = t1[14] + 0 * t3;
      t1[15] = t3;
      return t2;
    }
  };
  A.HitTestResult.prototype = {
    _globalizeTransforms$0() {
      var t2, last, t3, _i,
        t1 = this._localTransforms;
      if (t1.length === 0)
        return;
      t2 = this._transforms;
      last = B.JSArray_methods.get$last(t2);
      for (t3 = t1.length, _i = 0; _i < t1.length; t1.length === t3 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
        last = t1[_i].multiply$1(last);
        t2.push(last);
      }
      B.JSArray_methods.clear$0(t1);
    },
    add$1(_, entry) {
      this._globalizeTransforms$0();
      entry._transform = B.JSArray_methods.get$last(this._transforms);
      this._path.push(entry);
    },
    popTransform$0() {
      var t1 = this._localTransforms;
      if (t1.length !== 0)
        t1.pop();
      else
        this._transforms.pop();
    },
    toString$0(_) {
      var t1 = this._path;
      return "HitTestResult(" + (t1.length === 0 ? "<empty path>" : B.JSArray_methods.join$1(t1, ", ")) + ")";
    }
  };
  A.LongPressStartDetails.prototype = {};
  A.LongPressMoveUpdateDetails.prototype = {};
  A.LongPressEndDetails.prototype = {};
  A.LongPressGestureRecognizer.prototype = {
    isPointerAllowed$1($event) {
      var t1, _this = this;
      switch ($event.get$buttons()) {
        case 1:
          t1 = false;
          if (_this.onLongPressStart == null)
            if (_this.onLongPress == null)
              if (_this.onLongPressMoveUpdate == null)
                t1 = _this.onLongPressEnd == null;
          if (t1)
            return false;
          break;
        case 2:
          return false;
        case 4:
          return false;
        default:
          return false;
      }
      return _this.super$GestureRecognizer$isPointerAllowed($event);
    },
    didExceedDeadline$0() {
      var t1, _this = this;
      _this.resolve$1(B.GestureDisposition_0);
      _this._longPressAccepted = true;
      t1 = _this._primaryPointer;
      t1.toString;
      _this.super$PrimaryPointerGestureRecognizer$acceptGesture(t1);
      _this._checkLongPressStart$0();
    },
    handlePrimaryPointer$1($event) {
      var t1, _this = this;
      $event.get$synthesized();
      if (type$.PointerDownEvent._is($event)) {
        t1 = new A.VelocityTracker($event.get$kind(), A.List_List$filled(20, null, false, type$.nullable__PointAtTime));
        _this._velocityTracker = t1;
        t1.addPosition$2($event.get$timeStamp(), $event.get$localPosition());
      }
      if (type$.PointerMoveEvent._is($event)) {
        t1 = _this._velocityTracker;
        t1.toString;
        t1.addPosition$2($event.get$timeStamp(), $event.get$localPosition());
      }
      if (type$.PointerUpEvent._is($event)) {
        if (_this._longPressAccepted)
          _this._checkLongPressEnd$1($event);
        else
          _this.resolve$1(B.GestureDisposition_1);
        _this._reset$0();
      } else if (type$.PointerCancelEvent._is($event)) {
        _this._checkLongPressCancel$0();
        _this._reset$0();
      } else if (type$.PointerDownEvent._is($event)) {
        _this._longPressOrigin = new A.OffsetPair($event.get$localPosition(), $event.get$position());
        _this._long_press$_initialButtons = $event.get$buttons();
        _this._checkLongPressDown$1($event);
      } else if (type$.PointerMoveEvent._is($event))
        if ($event.get$buttons() !== _this._long_press$_initialButtons) {
          _this.resolve$1(B.GestureDisposition_1);
          t1 = _this._primaryPointer;
          t1.toString;
          _this.stopTrackingPointer$1(t1);
        } else if (_this._longPressAccepted)
          _this._checkLongPressMoveUpdate$1($event);
    },
    _checkLongPressDown$1($event) {
      this._longPressOrigin.toString;
      this._pointerToKind.$index(0, $event.get$pointer()).toString;
      switch (this._long_press$_initialButtons) {
        case 1:
          break;
        case 2:
          break;
        case 4:
          break;
      }
    },
    _checkLongPressCancel$0() {
      if (this._recognizer$_state === B.GestureRecognizerState_1)
        switch (this._long_press$_initialButtons) {
          case 1:
            break;
          case 2:
            break;
          case 4:
            break;
        }
    },
    _checkLongPressStart$0() {
      var t1, _this = this;
      switch (_this._long_press$_initialButtons) {
        case 1:
          if (_this.onLongPressStart != null) {
            t1 = _this._longPressOrigin.local;
            _this.invokeCallback$2("onLongPressStart", new A.LongPressGestureRecognizer__checkLongPressStart_closure(_this, new A.LongPressStartDetails(t1)));
          }
          t1 = _this.onLongPress;
          if (t1 != null)
            _this.invokeCallback$2("onLongPress", t1);
          break;
        case 2:
          break;
        case 4:
          break;
      }
    },
    _checkLongPressMoveUpdate$1($event) {
      var t1, _this = this;
      $event.get$position();
      t1 = $event.get$localPosition();
      $event.get$position().$sub(0, _this._longPressOrigin.global);
      $event.get$localPosition().$sub(0, _this._longPressOrigin.local);
      switch (_this._long_press$_initialButtons) {
        case 1:
          if (_this.onLongPressMoveUpdate != null)
            _this.invokeCallback$2("onLongPressMoveUpdate", new A.LongPressGestureRecognizer__checkLongPressMoveUpdate_closure(_this, new A.LongPressMoveUpdateDetails(t1)));
          break;
        case 2:
          break;
        case 4:
          break;
      }
    },
    _checkLongPressEnd$1($event) {
      var t1, _this = this,
        estimate = _this._velocityTracker.getVelocityEstimate$0(),
        velocity = estimate == null ? B.Velocity_Offset_0_0 : new A.Velocity(estimate.pixelsPerSecond);
      $event.get$position();
      t1 = $event.get$localPosition();
      _this._velocityTracker = null;
      switch (_this._long_press$_initialButtons) {
        case 1:
          if (_this.onLongPressEnd != null)
            _this.invokeCallback$2("onLongPressEnd", new A.LongPressGestureRecognizer__checkLongPressEnd_closure(_this, new A.LongPressEndDetails(t1, velocity)));
          break;
        case 2:
          break;
        case 4:
          break;
      }
    },
    _reset$0() {
      var _this = this;
      _this._longPressAccepted = false;
      _this._velocityTracker = _this._long_press$_initialButtons = _this._longPressOrigin = null;
    },
    resolve$1(disposition) {
      var _this = this;
      if (disposition === B.GestureDisposition_1)
        if (_this._longPressAccepted)
          _this._reset$0();
        else
          _this._checkLongPressCancel$0();
      _this.super$OneSequenceGestureRecognizer$resolve(disposition);
    },
    acceptGesture$1(pointer) {
    }
  };
  A.LongPressGestureRecognizer__checkLongPressStart_closure.prototype = {
    call$0() {
      return this.$this.onLongPressStart.call$1(this.details);
    },
    $signature: 0
  };
  A.LongPressGestureRecognizer__checkLongPressMoveUpdate_closure.prototype = {
    call$0() {
      return this.$this.onLongPressMoveUpdate.call$1(this.details);
    },
    $signature: 0
  };
  A.LongPressGestureRecognizer__checkLongPressEnd_closure.prototype = {
    call$0() {
      return this.$this.onLongPressEnd.call$1(this.details);
    },
    $signature: 0
  };
  A._Vector.prototype = {
    $mul(_, a) {
      var t1, t2, t3, t4, t5, result, i;
      for (t1 = this._lsq_solver$_length, t2 = this._lsq_solver$_elements, t3 = this._lsq_solver$_offset, t4 = a._lsq_solver$_elements, t5 = a._lsq_solver$_offset, result = 0, i = 0; i < t1; ++i)
        result += t2[i + t3] * t4[i + t5];
      return result;
    }
  };
  A._Matrix.prototype = {};
  A.PolynomialFit.prototype = {};
  A.LeastSquaresSolver.prototype = {
    solve$1(degree) {
      var t3, t4, result, t5, t6, t7, t8, h, i, j, t9, t10, dot, t11, norm, inverseNorm, wy, i0, yMean, sumSquaredError, sumSquaredTotal, err, term, v,
        t1 = this.x,
        t2 = t1.length;
      if (degree > t2)
        return null;
      t3 = degree + 1;
      t4 = new Float64Array(t3);
      result = new A.PolynomialFit(t4);
      t5 = t3 * t2;
      t6 = new Float64Array(t5);
      for (t7 = this.w, t8 = 0 * t2, h = 0; h < t2; ++h) {
        t6[t8 + h] = t7[h];
        for (i = 1; i < t3; ++i)
          t6[i * t2 + h] = t6[(i - 1) * t2 + h] * t1[h];
      }
      t5 = new Float64Array(t5);
      t8 = new Float64Array(t3 * t3);
      for (j = 0; j < t3; ++j) {
        for (t9 = j * t2, h = 0; h < t2; ++h) {
          t10 = t9 + h;
          t5[t10] = t6[t10];
        }
        for (i = 0; i < j; ++i) {
          t10 = i * t2;
          dot = new A._Vector(t9, t2, t5).$mul(0, new A._Vector(t10, t2, t5));
          for (h = 0; h < t2; ++h) {
            t11 = t9 + h;
            t5[t11] = t5[t11] - dot * t5[t10 + h];
          }
        }
        t10 = new A._Vector(t9, t2, t5);
        norm = Math.sqrt(t10.$mul(0, t10));
        if (norm < 1e-10)
          return null;
        inverseNorm = 1 / norm;
        for (h = 0; h < t2; ++h) {
          t10 = t9 + h;
          t5[t10] = t5[t10] * inverseNorm;
        }
        for (t10 = j * t3, i = 0; i < t3; ++i) {
          t11 = i < j ? 0 : new A._Vector(t9, t2, t5).$mul(0, new A._Vector(i * t2, t2, t6));
          t8[t10 + i] = t11;
        }
      }
      t6 = new Float64Array(t2);
      wy = new A._Vector(0, t2, t6);
      for (t9 = this.y, h = 0; h < t2; ++h)
        t6[h] = t9[h] * t7[h];
      for (i = t3 - 1, i0 = i; i0 >= 0; --i0) {
        t4[i0] = new A._Vector(i0 * t2, t2, t5).$mul(0, wy);
        for (t6 = i0 * t3, j = i; j > i0; --j)
          t4[i0] = t4[i0] - t8[t6 + j] * t4[j];
        t4[i0] = t4[i0] / t8[t6 + i0];
      }
      for (yMean = 0, h = 0; h < t2; ++h)
        yMean += t9[h];
      yMean /= t2;
      for (sumSquaredError = 0, sumSquaredTotal = 0, h = 0; h < t2; ++h) {
        t5 = t9[h];
        err = t5 - t4[0];
        for (term = 1, i = 1; i < t3; ++i) {
          term *= t1[h];
          err -= term * t4[i];
        }
        t6 = t7[h];
        t6 *= t6;
        sumSquaredError += t6 * err * err;
        v = t5 - yMean;
        sumSquaredTotal += t6 * v * v;
      }
      result.__PolynomialFit_confidence_A = sumSquaredTotal <= 1e-10 ? 1 : 1 - sumSquaredError / sumSquaredTotal;
      return result;
    }
  };
  A._DragState.prototype = {
    _enumToString$0() {
      return "_DragState." + this._name;
    }
  };
  A.DragGestureRecognizer.prototype = {
    isPointerAllowed$1($event) {
      var _this = this;
      if (_this._initialButtons == null) {
        if (_this.onDown == null && _this.onStart == null && _this.onUpdate == null && _this.onEnd == null && _this.onCancel == null)
          return false;
      } else if ($event.get$buttons() !== _this._initialButtons)
        return false;
      return _this.super$GestureRecognizer$isPointerAllowed($event);
    },
    _addPointer$1($event) {
      var t1, _this = this;
      _this._velocityTrackers.$indexSet(0, $event.get$pointer(), _this.velocityTrackerBuilder.call$1($event));
      t1 = _this._monodrag$_state;
      if (t1 === B._DragState_0) {
        _this._monodrag$_state = B._DragState_1;
        t1 = $event.get$position();
        _this.__DragGestureRecognizer__initialPosition_A = new A.OffsetPair($event.get$localPosition(), t1);
        _this.__DragGestureRecognizer__pendingDragOffset_A = B.OffsetPair_dhP;
        _this.__DragGestureRecognizer__globalDistanceMoved_A = 0;
        _this._lastPendingEventTimestamp = $event.get$timeStamp();
        _this._lastTransform = $event.get$transform();
        _this._checkDown$0();
      } else if (t1 === B._DragState_2)
        _this.resolve$1(B.GestureDisposition_0);
    },
    addAllowedPointer$1($event) {
      var _this = this;
      _this.super$OneSequenceGestureRecognizer$addAllowedPointer($event);
      if (_this._monodrag$_state === B._DragState_0)
        _this._initialButtons = $event.get$buttons();
      _this._addPointer$1($event);
    },
    addAllowedPointerPanZoom$1($event) {
      var _this = this;
      _this.super$GestureRecognizer$addAllowedPointerPanZoom($event);
      _this.startTrackingPointer$2($event.get$pointer(), $event.get$transform());
      if (_this._monodrag$_state === B._DragState_0)
        _this._initialButtons = 1;
      _this._addPointer$1($event);
    },
    handleEvent$1($event) {
      var t1, delta, localDelta, position, localPosition, movedLocally, localToGlobalTransform, t2, t3, _this = this;
      $event.get$synthesized();
      t1 = type$.PointerDownEvent._is($event) || type$.PointerMoveEvent._is($event) || type$.PointerPanZoomStartEvent._is($event) || type$.PointerPanZoomUpdateEvent._is($event);
      if (t1) {
        t1 = _this._velocityTrackers.$index(0, $event.get$pointer());
        t1.toString;
        if (type$.PointerPanZoomStartEvent._is($event))
          t1.addPosition$2($event.get$timeStamp(), B.Offset_0_0);
        else if (type$.PointerPanZoomUpdateEvent._is($event))
          t1.addPosition$2($event.get$timeStamp(), $event.get$pan());
        else
          t1.addPosition$2($event.get$timeStamp(), $event.get$localPosition());
      }
      t1 = type$.PointerMoveEvent._is($event);
      if (t1 && $event.get$buttons() !== _this._initialButtons) {
        _this._giveUpPointer$1($event.get$pointer());
        return;
      }
      if (t1 || type$.PointerPanZoomUpdateEvent._is($event)) {
        delta = t1 ? $event.get$delta() : type$.PointerPanZoomUpdateEvent._as($event).get$panDelta();
        localDelta = t1 ? $event.get$localDelta() : type$.PointerPanZoomUpdateEvent._as($event).get$localPanDelta();
        position = t1 ? $event.get$position() : $event.get$position().$add(0, type$.PointerPanZoomUpdateEvent._as($event).get$pan());
        localPosition = t1 ? $event.get$localPosition() : $event.get$localPosition().$add(0, type$.PointerPanZoomUpdateEvent._as($event).get$localPan());
        if (_this._monodrag$_state === B._DragState_2) {
          t1 = $event.get$timeStamp();
          _this._checkUpdate$5$delta$globalPosition$localPosition$primaryDelta$sourceTimeStamp(_this._getDeltaForDetails$1(localDelta), position, localPosition, _this._getPrimaryValueFromOffset$1(localDelta), t1);
        } else {
          t1 = _this.__DragGestureRecognizer__pendingDragOffset_A;
          t1 === $ && A.throwUnnamedLateFieldNI();
          _this.__DragGestureRecognizer__pendingDragOffset_A = t1.$add(0, new A.OffsetPair(localDelta, delta));
          _this._lastPendingEventTimestamp = $event.get$timeStamp();
          _this._lastTransform = $event.get$transform();
          movedLocally = _this._getDeltaForDetails$1(localDelta);
          if ($event.get$transform() == null)
            localToGlobalTransform = null;
          else {
            t1 = $event.get$transform();
            t1.toString;
            localToGlobalTransform = A.Matrix4_tryInvert(t1);
          }
          t1 = _this.__DragGestureRecognizer__globalDistanceMoved_A;
          t1 === $ && A.throwUnnamedLateFieldNI();
          t2 = A.PointerEvent_transformDeltaViaPositions(localToGlobalTransform, null, movedLocally, localPosition).get$distance();
          t3 = _this._getPrimaryValueFromOffset$1(movedLocally);
          _this.__DragGestureRecognizer__globalDistanceMoved_A = t1 + t2 * J.get$sign$in(t3 == null ? 1 : t3);
          t1 = $event.get$kind();
          t2 = _this.gestureSettings;
          if (_this._hasSufficientGlobalDistanceToAccept$2(t1, t2 == null ? null : t2.touchSlop))
            _this.resolve$1(B.GestureDisposition_0);
        }
      }
      if (type$.PointerUpEvent._is($event) || type$.PointerCancelEvent._is($event) || type$.PointerPanZoomEndEvent._is($event))
        _this._giveUpPointer$1($event.get$pointer());
    },
    acceptGesture$1(pointer) {
      var t1, timestamp, transform, t2, localUpdateDelta, localToGlobal, globalUpdateDelta, correctedPosition, _this = this;
      _this._acceptedActivePointers.add$1(0, pointer);
      if (_this._monodrag$_state !== B._DragState_2) {
        _this._monodrag$_state = B._DragState_2;
        t1 = _this.__DragGestureRecognizer__pendingDragOffset_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
        timestamp = _this._lastPendingEventTimestamp;
        transform = _this._lastTransform;
        switch (_this.dragStartBehavior.index) {
          case 1:
            t2 = _this.__DragGestureRecognizer__initialPosition_A;
            t2 === $ && A.throwUnnamedLateFieldNI();
            _this.__DragGestureRecognizer__initialPosition_A = t2.$add(0, t1);
            localUpdateDelta = B.Offset_0_0;
            break;
          case 0:
            localUpdateDelta = _this._getDeltaForDetails$1(t1.local);
            break;
          default:
            localUpdateDelta = null;
        }
        _this.__DragGestureRecognizer__pendingDragOffset_A = B.OffsetPair_dhP;
        _this._lastTransform = _this._lastPendingEventTimestamp = null;
        _this._checkStart$2(timestamp, pointer);
        if (!J.$eq$(localUpdateDelta, B.Offset_0_0) && _this.onUpdate != null) {
          localToGlobal = transform != null ? A.Matrix4_tryInvert(transform) : null;
          t1 = _this.__DragGestureRecognizer__initialPosition_A;
          t1 === $ && A.throwUnnamedLateFieldNI();
          globalUpdateDelta = A.PointerEvent_transformDeltaViaPositions(localToGlobal, null, localUpdateDelta, t1.local.$add(0, localUpdateDelta));
          correctedPosition = _this.__DragGestureRecognizer__initialPosition_A.$add(0, new A.OffsetPair(localUpdateDelta, globalUpdateDelta));
          _this._checkUpdate$5$delta$globalPosition$localPosition$primaryDelta$sourceTimeStamp(localUpdateDelta, correctedPosition.global, correctedPosition.local, _this._getPrimaryValueFromOffset$1(localUpdateDelta), timestamp);
        }
        _this.resolve$1(B.GestureDisposition_0);
      }
    },
    rejectGesture$1(pointer) {
      this._giveUpPointer$1(pointer);
    },
    didStopTrackingLastPointer$1(pointer) {
      var t1, _this = this;
      switch (_this._monodrag$_state.index) {
        case 0:
          break;
        case 1:
          _this.resolve$1(B.GestureDisposition_1);
          t1 = _this.onCancel;
          if (t1 != null)
            _this.invokeCallback$2("onCancel", t1);
          break;
        case 2:
          _this._checkEnd$1(pointer);
          break;
      }
      _this._velocityTrackers.clear$0(0);
      _this._initialButtons = null;
      _this._monodrag$_state = B._DragState_0;
    },
    _giveUpPointer$1(pointer) {
      var t1, entry;
      this.stopTrackingPointer$1(pointer);
      if (!this._acceptedActivePointers.remove$1(0, pointer)) {
        t1 = this._entries;
        entry = t1.$index(0, pointer);
        if (entry != null) {
          t1.remove$1(0, pointer);
          entry.resolve$1(B.GestureDisposition_1);
        }
      }
    },
    _checkDown$0() {
      var t1, _this = this;
      if (_this.onDown != null) {
        t1 = _this.__DragGestureRecognizer__initialPosition_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
        _this.invokeCallback$2("onDown", new A.DragGestureRecognizer__checkDown_closure(_this, new A.DragDownDetails(t1.global)));
      }
    },
    _checkStart$2(timestamp, pointer) {
      var t1, t2, _this = this;
      if (_this.onStart != null) {
        t1 = _this.__DragGestureRecognizer__initialPosition_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
        t2 = _this._pointerToKind.$index(0, pointer);
        t2.toString;
        _this.invokeCallback$2("onStart", new A.DragGestureRecognizer__checkStart_closure(_this, new A.DragStartDetails(timestamp, t1.global, t2)));
      }
    },
    _checkUpdate$5$delta$globalPosition$localPosition$primaryDelta$sourceTimeStamp(delta, globalPosition, localPosition, primaryDelta, sourceTimeStamp) {
      if (this.onUpdate != null)
        this.invokeCallback$2("onUpdate", new A.DragGestureRecognizer__checkUpdate_closure(this, new A.DragUpdateDetails(sourceTimeStamp, delta, primaryDelta, globalPosition)));
    },
    _checkEnd$1(pointer) {
      var t2, estimate, t3, t4, velocity, debugReport, _this = this, t1 = {};
      if (_this.onEnd == null)
        return;
      t2 = _this._velocityTrackers.$index(0, pointer);
      t2.toString;
      t1.details = null;
      estimate = t2.getVelocityEstimate$0();
      if (estimate != null && _this.isFlingGesture$2(estimate, t2.kind)) {
        t2 = estimate.pixelsPerSecond;
        t3 = _this.minFlingVelocity;
        if (t3 == null)
          t3 = 50;
        t4 = _this.maxFlingVelocity;
        if (t4 == null)
          t4 = 8000;
        velocity = new A.Velocity(t2).clampMagnitude$2(t3, t4);
        t1.details = new A.DragEndDetails(velocity, _this._getPrimaryValueFromOffset$1(velocity.pixelsPerSecond));
        debugReport = new A.DragGestureRecognizer__checkEnd_closure(estimate, velocity);
      } else {
        t1.details = new A.DragEndDetails(B.Velocity_Offset_0_0, 0);
        debugReport = new A.DragGestureRecognizer__checkEnd_closure0(estimate);
      }
      _this.invokeCallback$3$debugReport("onEnd", new A.DragGestureRecognizer__checkEnd_closure1(t1, _this), debugReport);
    },
    dispose$0() {
      this._velocityTrackers.clear$0(0);
      this.super$OneSequenceGestureRecognizer$dispose();
    }
  };
  A.DragGestureRecognizer__checkDown_closure.prototype = {
    call$0() {
      return this.$this.onDown.call$1(this.details);
    },
    $signature: 0
  };
  A.DragGestureRecognizer__checkStart_closure.prototype = {
    call$0() {
      return this.$this.onStart.call$1(this.details);
    },
    $signature: 0
  };
  A.DragGestureRecognizer__checkUpdate_closure.prototype = {
    call$0() {
      return this.$this.onUpdate.call$1(this.details);
    },
    $signature: 0
  };
  A.DragGestureRecognizer__checkEnd_closure.prototype = {
    call$0() {
      return this.estimate.toString$0(0) + "; fling at " + this.velocity.toString$0(0) + ".";
    },
    $signature: 47
  };
  A.DragGestureRecognizer__checkEnd_closure0.prototype = {
    call$0() {
      var t1 = this.estimate;
      if (t1 == null)
        return "Could not estimate velocity.";
      return t1.toString$0(0) + "; judged to not be a fling.";
    },
    $signature: 47
  };
  A.DragGestureRecognizer__checkEnd_closure1.prototype = {
    call$0() {
      return this.$this.onEnd.call$1(this._box_0.details);
    },
    $signature: 0
  };
  A.VerticalDragGestureRecognizer.prototype = {
    isFlingGesture$2(estimate, kind) {
      var minDistance,
        minVelocity = this.minFlingVelocity;
      if (minVelocity == null)
        minVelocity = 50;
      minDistance = this.minFlingDistance;
      if (minDistance == null)
        minDistance = A.computeHitSlop(kind, this.gestureSettings);
      return Math.abs(estimate.pixelsPerSecond._dy) > minVelocity && Math.abs(estimate.offset._dy) > minDistance;
    },
    _hasSufficientGlobalDistanceToAccept$2(pointerDeviceKind, deviceTouchSlop) {
      var t1 = this.__DragGestureRecognizer__globalDistanceMoved_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      return Math.abs(t1) > A.computeHitSlop(pointerDeviceKind, this.gestureSettings);
    },
    _getDeltaForDetails$1(delta) {
      return new A.Offset(0, delta._dy);
    },
    _getPrimaryValueFromOffset$1(value) {
      return value._dy;
    }
  };
  A.HorizontalDragGestureRecognizer.prototype = {
    isFlingGesture$2(estimate, kind) {
      var minDistance,
        minVelocity = this.minFlingVelocity;
      if (minVelocity == null)
        minVelocity = 50;
      minDistance = this.minFlingDistance;
      if (minDistance == null)
        minDistance = A.computeHitSlop(kind, this.gestureSettings);
      return Math.abs(estimate.pixelsPerSecond._dx) > minVelocity && Math.abs(estimate.offset._dx) > minDistance;
    },
    _hasSufficientGlobalDistanceToAccept$2(pointerDeviceKind, deviceTouchSlop) {
      var t1 = this.__DragGestureRecognizer__globalDistanceMoved_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      return Math.abs(t1) > A.computeHitSlop(pointerDeviceKind, this.gestureSettings);
    },
    _getDeltaForDetails$1(delta) {
      return new A.Offset(delta._dx, 0);
    },
    _getPrimaryValueFromOffset$1(value) {
      return value._dx;
    }
  };
  A.PanGestureRecognizer.prototype = {
    isFlingGesture$2(estimate, kind) {
      var minDistance,
        minVelocity = this.minFlingVelocity;
      if (minVelocity == null)
        minVelocity = 50;
      minDistance = this.minFlingDistance;
      if (minDistance == null)
        minDistance = A.computeHitSlop(kind, this.gestureSettings);
      return estimate.pixelsPerSecond.get$distanceSquared() > minVelocity * minVelocity && estimate.offset.get$distanceSquared() > minDistance * minDistance;
    },
    _hasSufficientGlobalDistanceToAccept$2(pointerDeviceKind, deviceTouchSlop) {
      var t1 = this.__DragGestureRecognizer__globalDistanceMoved_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      return Math.abs(t1) > A.computePanSlop(pointerDeviceKind, this.gestureSettings);
    },
    _getDeltaForDetails$1(delta) {
      return delta;
    },
    _getPrimaryValueFromOffset$1(value) {
      return null;
    }
  };
  A._CountdownZoned.prototype = {
    _onTimeout$0() {
      this._timeout = true;
    }
  };
  A._TapTracker.prototype = {
    stopTrackingPointer$1(route) {
      if (this._isTrackingPointer) {
        this._isTrackingPointer = false;
        $.GestureBinding__instance.GestureBinding_pointerRouter.removeRoute$2(this.pointer, route);
      }
    },
    isWithinGlobalTolerance$2($event, tolerance) {
      return $event.get$position().$sub(0, this._initialGlobalPosition).get$distance() <= tolerance;
    }
  };
  A.DoubleTapGestureRecognizer.prototype = {
    isPointerAllowed$1($event) {
      var t1, isPointerAllowed, _this = this;
      if (_this._firstTap == null) {
        t1 = _this.onDoubleTap == null;
        if (t1)
          return false;
      }
      isPointerAllowed = _this.super$GestureRecognizer$isPointerAllowed($event);
      if (!isPointerAllowed)
        _this._multitap$_reset$0();
      return isPointerAllowed;
    },
    addAllowedPointer$1($event) {
      var _this = this,
        t1 = _this._firstTap;
      if (t1 != null)
        if (!t1.isWithinGlobalTolerance$2($event, 100))
          return;
        else {
          t1 = _this._firstTap;
          if (!t1._doubleTapMinTimeCountdown._timeout || $event.get$buttons() !== t1.initialButtons) {
            _this._multitap$_reset$0();
            return _this._trackTap$1($event);
          }
        }
      _this._trackTap$1($event);
    },
    _trackTap$1($event) {
      var t1, t2, t3, t4, t5, tracker, _this = this;
      _this._stopDoubleTapTimer$0();
      t1 = $.GestureBinding__instance.GestureBinding_gestureArena.add$2(0, $event.get$pointer(), _this);
      t2 = $event.get$pointer();
      t3 = $event.get$position();
      t4 = $event.get$buttons();
      t5 = new A._CountdownZoned();
      A.Timer_Timer(B.Duration_40000, t5.get$_onTimeout());
      tracker = new A._TapTracker(t2, t1, t3, t4, t5);
      _this._trackers.$indexSet(0, $event.get$pointer(), tracker);
      t5 = $event.get$transform();
      if (!tracker._isTrackingPointer) {
        tracker._isTrackingPointer = true;
        $.GestureBinding__instance.GestureBinding_pointerRouter.addRoute$3(t2, _this.get$_handleEvent(), t5);
      }
    },
    _handleEvent$1($event) {
      var t3, _this = this,
        t1 = _this._trackers,
        t2 = t1.$index(0, $event.get$pointer());
      t2.toString;
      if (type$.PointerUpEvent._is($event)) {
        t3 = _this._firstTap;
        if (t3 == null) {
          if (_this._doubleTapTimer == null)
            _this._doubleTapTimer = A.Timer_Timer(B.Duration_300000, _this.get$_multitap$_reset());
          t3 = t2.pointer;
          $.GestureBinding__instance.GestureBinding_gestureArena.hold$1(t3);
          t2.stopTrackingPointer$1(_this.get$_handleEvent());
          t1.remove$1(0, t3);
          _this._clearTrackers$0();
          _this._firstTap = t2;
        } else {
          t3 = t3.entry;
          t3._arena._resolve$3(t3._pointer, t3._member, B.GestureDisposition_0);
          t3 = t2.entry;
          t3._arena._resolve$3(t3._pointer, t3._member, B.GestureDisposition_0);
          t2.stopTrackingPointer$1(_this.get$_handleEvent());
          t1.remove$1(0, t2.pointer);
          t1 = _this.onDoubleTap;
          if (t1 != null)
            _this.invokeCallback$2("onDoubleTap", t1);
          _this._multitap$_reset$0();
        }
      } else if (type$.PointerMoveEvent._is($event)) {
        if (!t2.isWithinGlobalTolerance$2($event, 18))
          _this._reject$1(t2);
      } else if (type$.PointerCancelEvent._is($event))
        _this._reject$1(t2);
    },
    acceptGesture$1(pointer) {
    },
    rejectGesture$1(pointer) {
      var t1, _this = this,
        tracker = _this._trackers.$index(0, pointer);
      if (tracker == null) {
        t1 = _this._firstTap;
        t1 = t1 != null && t1.pointer === pointer;
      } else
        t1 = false;
      if (t1)
        tracker = _this._firstTap;
      if (tracker != null)
        _this._reject$1(tracker);
    },
    _reject$1(tracker) {
      var t2, _this = this,
        t1 = _this._trackers;
      t1.remove$1(0, tracker.pointer);
      t2 = tracker.entry;
      t2._arena._resolve$3(t2._pointer, t2._member, B.GestureDisposition_1);
      tracker.stopTrackingPointer$1(_this.get$_handleEvent());
      t2 = _this._firstTap;
      if (t2 != null)
        if (tracker === t2)
          _this._multitap$_reset$0();
        else {
          _this._checkCancel$0();
          if (t1.__js_helper$_length === 0)
            _this._multitap$_reset$0();
        }
    },
    dispose$0() {
      this._multitap$_reset$0();
      this.super$GestureRecognizer$dispose();
    },
    _multitap$_reset$0() {
      var t1, _this = this;
      _this._stopDoubleTapTimer$0();
      if (_this._firstTap != null) {
        if (_this._trackers.__js_helper$_length !== 0)
          _this._checkCancel$0();
        t1 = _this._firstTap;
        t1.toString;
        _this._firstTap = null;
        _this._reject$1(t1);
        $.GestureBinding__instance.GestureBinding_gestureArena.release$1(t1.pointer);
      }
      _this._clearTrackers$0();
    },
    _clearTrackers$0() {
      var t1 = this._trackers,
        t2 = A._instanceType(t1)._eval$1("LinkedHashMapValuesIterable<2>");
      t1 = A.List_List$_of(new A.LinkedHashMapValuesIterable(t1, t2), t2._eval$1("Iterable.E"));
      B.JSArray_methods.forEach$1(t1, this.get$_reject());
    },
    _stopDoubleTapTimer$0() {
      var t1 = this._doubleTapTimer;
      if (t1 != null) {
        t1.cancel$0();
        this._doubleTapTimer = null;
      }
    },
    _checkCancel$0() {
    }
  };
  A.PointerRouter.prototype = {
    addRoute$3(pointer, route, transform) {
      this._routeMap.putIfAbsent$2(pointer, new A.PointerRouter_addRoute_closure()).$indexSet(0, route, transform);
    },
    removeRoute$2(pointer, route) {
      var t1 = this._routeMap,
        routes = t1.$index(0, pointer);
      routes.remove$1(0, route);
      if (routes.get$isEmpty(routes))
        t1.remove$1(0, pointer);
    },
    _dispatch$3($event, route, transform) {
      var exception, stack, collector, exception0, t1;
      $event = $event;
      try {
        $event = $event.transformed$1(transform);
        route.call$1($event);
      } catch (exception0) {
        exception = A.unwrapException(exception0);
        stack = A.getTraceFromException(exception0);
        collector = null;
        t1 = A.ErrorDescription$("while routing a pointer event");
        A.FlutterError_reportError(new A.FlutterErrorDetails(exception, stack, "gesture library", t1, collector, false));
      }
    },
    route$1($event) {
      var _this = this,
        routes = _this._routeMap.$index(0, $event.get$pointer()),
        t1 = _this._globalRoutes,
        t2 = type$.void_Function_PointerEvent,
        t3 = type$.nullable_Matrix4,
        copiedGlobalRoutes = A.LinkedHashMap_LinkedHashMap$of(t1, t2, t3);
      if (routes != null)
        _this._dispatchEventToRoutes$3($event, routes, A.LinkedHashMap_LinkedHashMap$of(routes, t2, t3));
      _this._dispatchEventToRoutes$3($event, t1, copiedGlobalRoutes);
    },
    _dispatchEventToRoutes$3($event, referenceRoutes, copiedRoutes) {
      copiedRoutes.forEach$1(0, new A.PointerRouter__dispatchEventToRoutes_closure(this, referenceRoutes, $event));
    }
  };
  A.PointerRouter_addRoute_closure.prototype = {
    call$0() {
      return A.LinkedHashMap_LinkedHashMap$_empty(type$.void_Function_PointerEvent, type$.nullable_Matrix4);
    },
    $signature: 276
  };
  A.PointerRouter__dispatchEventToRoutes_closure.prototype = {
    call$2(route, transform) {
      if (this.referenceRoutes.containsKey$1(route))
        this.$this._dispatch$3(this.event, route, transform);
    },
    $signature: 138
  };
  A.PointerSignalResolver.prototype = {
    register$2($event, callback) {
      if (this._firstRegisteredCallback != null)
        return;
      this._currentEvent = $event;
      this._firstRegisteredCallback = callback;
    },
    resolve$1($event) {
      var exception, stack, collector, t2, exception0, _this = this,
        t1 = _this._firstRegisteredCallback;
      if (t1 == null)
        return;
      try {
        t2 = _this._currentEvent;
        t2.toString;
        t1.call$1(t2);
      } catch (exception0) {
        exception = A.unwrapException(exception0);
        stack = A.getTraceFromException(exception0);
        collector = null;
        t1 = A.ErrorDescription$("while resolving a PointerSignalEvent");
        A.FlutterError_reportError(new A.FlutterErrorDetails(exception, stack, "gesture library", t1, collector, false));
      }
      _this._currentEvent = _this._firstRegisteredCallback = null;
    }
  };
  A.DragStartBehavior.prototype = {
    _enumToString$0() {
      return "DragStartBehavior." + this._name;
    }
  };
  A.GestureRecognizer.prototype = {
    addAllowedPointerPanZoom$1($event) {
    },
    addPointer$1($event) {
      var _this = this;
      _this._pointerToKind.$indexSet(0, $event.get$pointer(), $event.get$kind());
      if (_this.isPointerAllowed$1($event))
        _this.addAllowedPointer$1($event);
      else
        _this.handleNonAllowedPointer$1($event);
    },
    addAllowedPointer$1($event) {
    },
    handleNonAllowedPointer$1($event) {
    },
    isPointerAllowed$1($event) {
      var t1 = this.supportedDevices;
      return (t1 == null || t1.contains$1(0, $event.get$kind())) && this._allowedButtonsFilter.call$1($event.get$buttons());
    },
    isPointerPanZoomAllowed$1($event) {
      var t1 = this.supportedDevices;
      return t1 == null || t1.contains$1(0, $event.get$kind());
    },
    dispose$0() {
    },
    invokeCallback$1$3$debugReport($name, callback, debugReport) {
      var exception, stack, collector, exception0, t1, result = null;
      try {
        result = callback.call$0();
      } catch (exception0) {
        exception = A.unwrapException(exception0);
        stack = A.getTraceFromException(exception0);
        collector = null;
        t1 = A.ErrorDescription$("while handling a gesture");
        A.FlutterError_reportError(new A.FlutterErrorDetails(exception, stack, "gesture", t1, collector, false));
      }
      return result;
    },
    invokeCallback$2($name, callback) {
      return this.invokeCallback$1$3$debugReport($name, callback, null, type$.dynamic);
    },
    invokeCallback$3$debugReport($name, callback, debugReport) {
      return this.invokeCallback$1$3$debugReport($name, callback, debugReport, type$.dynamic);
    }
  };
  A.OneSequenceGestureRecognizer.prototype = {
    addAllowedPointer$1($event) {
      this.startTrackingPointer$2($event.get$pointer(), $event.get$transform());
    },
    handleNonAllowedPointer$1($event) {
      this.resolve$1(B.GestureDisposition_1);
    },
    acceptGesture$1(pointer) {
    },
    rejectGesture$1(pointer) {
    },
    resolve$1(disposition) {
      var _i,
        t1 = this._entries,
        localEntries = A.List_List$_of(new A.LinkedHashMapValuesIterable(t1, A._instanceType(t1)._eval$1("LinkedHashMapValuesIterable<2>")), type$.GestureArenaEntry);
      t1.clear$0(0);
      for (t1 = localEntries.length, _i = 0; _i < localEntries.length; localEntries.length === t1 || (0, A.throwConcurrentModificationError)(localEntries), ++_i)
        localEntries[_i].resolve$1(disposition);
    },
    dispose$0() {
      var t1, t2, t3, t4, t5, t6, routes, _this = this;
      _this.resolve$1(B.GestureDisposition_1);
      for (t1 = _this._trackedPointers, t2 = A._instanceType(t1), t3 = new A._HashSetIterator(t1, t1._computeElements$0(), t2._eval$1("_HashSetIterator<1>")), t2 = t2._precomputed1; t3.moveNext$0();) {
        t4 = t3._current;
        if (t4 == null)
          t4 = t2._as(t4);
        t5 = $.GestureBinding__instance.GestureBinding_pointerRouter;
        t6 = _this.get$handleEvent();
        t5 = t5._routeMap;
        routes = t5.$index(0, t4);
        routes.remove$1(0, t6);
        if (routes.get$isEmpty(routes))
          t5.remove$1(0, t4);
      }
      t1.clear$0(0);
      _this.super$GestureRecognizer$dispose();
    },
    _addPointerToArena$1(pointer) {
      var t1 = this._team;
      if (t1 != null)
        return t1.add$2(0, pointer, this);
      return $.GestureBinding__instance.GestureBinding_gestureArena.add$2(0, pointer, this);
    },
    startTrackingPointer$2(pointer, transform) {
      var _this = this;
      $.GestureBinding__instance.GestureBinding_pointerRouter.addRoute$3(pointer, _this.get$handleEvent(), transform);
      _this._trackedPointers.add$1(0, pointer);
      _this._entries.$indexSet(0, pointer, _this._addPointerToArena$1(pointer));
    },
    stopTrackingPointer$1(pointer) {
      var t1 = this._trackedPointers;
      if (t1.contains$1(0, pointer)) {
        $.GestureBinding__instance.GestureBinding_pointerRouter.removeRoute$2(pointer, this.get$handleEvent());
        t1.remove$1(0, pointer);
        if (t1._collection$_length === 0)
          this.didStopTrackingLastPointer$1(pointer);
      }
    },
    stopTrackingIfPointerNoLongerDown$1($event) {
      if (type$.PointerUpEvent._is($event) || type$.PointerCancelEvent._is($event) || type$.PointerPanZoomEndEvent._is($event))
        this.stopTrackingPointer$1($event.get$pointer());
    }
  };
  A.GestureRecognizerState.prototype = {
    _enumToString$0() {
      return "GestureRecognizerState." + this._name;
    }
  };
  A.PrimaryPointerGestureRecognizer.prototype = {
    addAllowedPointer$1($event) {
      var _this = this;
      _this.super$OneSequenceGestureRecognizer$addAllowedPointer($event);
      if (_this._recognizer$_state === B.GestureRecognizerState_0) {
        _this._recognizer$_state = B.GestureRecognizerState_1;
        _this._primaryPointer = $event.get$pointer();
        _this._initialPosition = new A.OffsetPair($event.get$localPosition(), $event.get$position());
        _this._recognizer$_timer = A.Timer_Timer(_this.deadline, new A.PrimaryPointerGestureRecognizer_addAllowedPointer_closure(_this, $event));
      }
    },
    handleNonAllowedPointer$1($event) {
      if (!this._gestureAccepted)
        this.super$OneSequenceGestureRecognizer$handleNonAllowedPointer($event);
    },
    handleEvent$1($event) {
      var isPreAcceptSlopPastTolerance, t1, isPostAcceptSlopPastTolerance, _this = this;
      if (_this._recognizer$_state === B.GestureRecognizerState_1 && $event.get$pointer() === _this._primaryPointer) {
        if (!_this._gestureAccepted)
          isPreAcceptSlopPastTolerance = _this._getGlobalDistance$1($event) > 18;
        else
          isPreAcceptSlopPastTolerance = false;
        if (_this._gestureAccepted) {
          t1 = _this.postAcceptSlopTolerance;
          isPostAcceptSlopPastTolerance = t1 != null && _this._getGlobalDistance$1($event) > t1;
        } else
          isPostAcceptSlopPastTolerance = false;
        if (type$.PointerMoveEvent._is($event))
          t1 = isPreAcceptSlopPastTolerance || isPostAcceptSlopPastTolerance;
        else
          t1 = false;
        if (t1) {
          _this.resolve$1(B.GestureDisposition_1);
          t1 = _this._primaryPointer;
          t1.toString;
          _this.stopTrackingPointer$1(t1);
        } else
          _this.handlePrimaryPointer$1($event);
      }
      _this.stopTrackingIfPointerNoLongerDown$1($event);
    },
    didExceedDeadline$0() {
    },
    acceptGesture$1(pointer) {
      if (pointer === this._primaryPointer) {
        this._stopTimer$0();
        this._gestureAccepted = true;
      }
    },
    rejectGesture$1(pointer) {
      var _this = this;
      if (pointer === _this._primaryPointer && _this._recognizer$_state === B.GestureRecognizerState_1) {
        _this._stopTimer$0();
        _this._recognizer$_state = B.GestureRecognizerState_2;
      }
    },
    didStopTrackingLastPointer$1(pointer) {
      var _this = this;
      _this._stopTimer$0();
      _this._recognizer$_state = B.GestureRecognizerState_0;
      _this._initialPosition = null;
      _this._gestureAccepted = false;
    },
    dispose$0() {
      this._stopTimer$0();
      this.super$OneSequenceGestureRecognizer$dispose();
    },
    _stopTimer$0() {
      var t1 = this._recognizer$_timer;
      if (t1 != null) {
        t1.cancel$0();
        this._recognizer$_timer = null;
      }
    },
    _getGlobalDistance$1($event) {
      return $event.get$position().$sub(0, this._initialPosition.global).get$distance();
    }
  };
  A.PrimaryPointerGestureRecognizer_addAllowedPointer_closure.prototype = {
    call$0() {
      this.$this.didExceedDeadline$0();
      return null;
    },
    $signature: 0
  };
  A.OffsetPair.prototype = {
    $add(_, other) {
      return new A.OffsetPair(this.local.$add(0, other.local), this.global.$add(0, other.global));
    },
    $sub(_, other) {
      return new A.OffsetPair(this.local.$sub(0, other.local), this.global.$sub(0, other.global));
    },
    toString$0(_) {
      return "OffsetPair(local: " + this.local.toString$0(0) + ", global: " + this.global.toString$0(0) + ")";
    }
  };
  A._GestureRecognizer_GestureArenaMember_DiagnosticableTreeMixin.prototype = {};
  A.TapDownDetails.prototype = {};
  A.TapUpDetails.prototype = {};
  A.BaseTapGestureRecognizer.prototype = {
    addAllowedPointer$1($event) {
      var _this = this;
      if (_this._recognizer$_state === B.GestureRecognizerState_0) {
        if (_this._down != null && _this._up != null)
          _this._tap$_reset$0();
        _this._down = $event;
      }
      if (_this._down != null)
        _this.super$PrimaryPointerGestureRecognizer$addAllowedPointer($event);
    },
    startTrackingPointer$2(pointer, transform) {
      this.super$OneSequenceGestureRecognizer$startTrackingPointer(pointer, transform);
    },
    handlePrimaryPointer$1($event) {
      var t1, _this = this;
      if (type$.PointerUpEvent._is($event)) {
        _this._up = $event;
        _this._checkUp$0();
      } else if (type$.PointerCancelEvent._is($event)) {
        _this.resolve$1(B.GestureDisposition_1);
        if (_this._sentTapDown) {
          t1 = _this._down;
          t1.toString;
          _this.handleTapCancel$3$cancel$down$reason($event, t1, "");
        }
        _this._tap$_reset$0();
      } else if ($event.get$buttons() !== _this._down.get$buttons()) {
        _this.resolve$1(B.GestureDisposition_1);
        t1 = _this._primaryPointer;
        t1.toString;
        _this.stopTrackingPointer$1(t1);
      }
    },
    resolve$1(disposition) {
      var t1, _this = this;
      if (_this._wonArenaForPrimaryPointer && disposition === B.GestureDisposition_1) {
        t1 = _this._down;
        t1.toString;
        _this.handleTapCancel$3$cancel$down$reason(null, t1, "spontaneous");
        _this._tap$_reset$0();
      }
      _this.super$OneSequenceGestureRecognizer$resolve(disposition);
    },
    didExceedDeadline$0() {
      this._tap$_checkDown$0();
    },
    acceptGesture$1(pointer) {
      var _this = this;
      _this.super$PrimaryPointerGestureRecognizer$acceptGesture(pointer);
      if (pointer === _this._primaryPointer) {
        _this._tap$_checkDown$0();
        _this._wonArenaForPrimaryPointer = true;
        _this._checkUp$0();
      }
    },
    rejectGesture$1(pointer) {
      var t1, _this = this;
      _this.super$PrimaryPointerGestureRecognizer$rejectGesture(pointer);
      if (pointer === _this._primaryPointer) {
        if (_this._sentTapDown) {
          t1 = _this._down;
          t1.toString;
          _this.handleTapCancel$3$cancel$down$reason(null, t1, "forced");
        }
        _this._tap$_reset$0();
      }
    },
    _tap$_checkDown$0() {
      var t1, _this = this;
      if (_this._sentTapDown)
        return;
      t1 = _this._down;
      t1.toString;
      _this.handleTapDown$1$down(t1);
      _this._sentTapDown = true;
    },
    _checkUp$0() {
      var t1, t2, _this = this;
      if (!_this._wonArenaForPrimaryPointer || _this._up == null)
        return;
      t1 = _this._down;
      t1.toString;
      t2 = _this._up;
      t2.toString;
      _this.handleTapUp$2$down$up(t1, t2);
      _this._tap$_reset$0();
    },
    _tap$_reset$0() {
      var _this = this;
      _this._wonArenaForPrimaryPointer = _this._sentTapDown = false;
      _this._down = _this._up = null;
    }
  };
  A.TapGestureRecognizer.prototype = {
    isPointerAllowed$1($event) {
      var _this = this;
      switch ($event.get$buttons()) {
        case 1:
          if (_this.onTapDown == null && _this.onTap == null && _this.onTapUp == null && _this.onTapCancel == null)
            return false;
          break;
        case 2:
          return false;
        case 4:
          return false;
        default:
          return false;
      }
      return _this.super$GestureRecognizer$isPointerAllowed($event);
    },
    handleTapDown$1$down(down) {
      var _this = this,
        t1 = down.get$position(),
        t2 = down.get$localPosition();
      _this._pointerToKind.$index(0, down.get$pointer()).toString;
      switch (down.get$buttons()) {
        case 1:
          if (_this.onTapDown != null)
            _this.invokeCallback$2("onTapDown", new A.TapGestureRecognizer_handleTapDown_closure(_this, new A.TapDownDetails(t1, t2)));
          break;
        case 2:
          break;
        case 4:
          break;
      }
    },
    handleTapUp$2$down$up(down, up) {
      var t1, _this = this;
      up.get$kind();
      up.get$position();
      up.get$localPosition();
      switch (down.get$buttons()) {
        case 1:
          if (_this.onTapUp != null)
            _this.invokeCallback$2("onTapUp", new A.TapGestureRecognizer_handleTapUp_closure(_this, new A.TapUpDetails()));
          t1 = _this.onTap;
          if (t1 != null)
            _this.invokeCallback$2("onTap", t1);
          break;
        case 2:
          break;
        case 4:
          break;
      }
    },
    handleTapCancel$3$cancel$down$reason(cancel, down, reason) {
      var t1,
        note = reason === "" ? reason : reason + " ";
      switch (down.get$buttons()) {
        case 1:
          t1 = this.onTapCancel;
          if (t1 != null)
            this.invokeCallback$2(note + "onTapCancel", t1);
          break;
        case 2:
          break;
        case 4:
          break;
      }
    }
  };
  A.TapGestureRecognizer_handleTapDown_closure.prototype = {
    call$0() {
      return this.$this.onTapDown.call$1(this.details);
    },
    $signature: 0
  };
  A.TapGestureRecognizer_handleTapUp_closure.prototype = {
    call$0() {
      return this.$this.onTapUp.call$1(this.details);
    },
    $signature: 0
  };
  A._CombiningGestureArenaEntry.prototype = {
    resolve$1(disposition) {
      this._combiner._team$_resolve$2(this._team$_member, disposition);
    },
    $isGestureArenaEntry: 1
  };
  A._CombiningGestureArenaMember.prototype = {
    acceptGesture$1(pointer) {
      var t1, t2, _i, member, _this = this;
      _this._close$0();
      if (_this._winner == null) {
        t1 = _this._members[0];
        _this._winner = t1;
      }
      for (t1 = _this._members, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
        member = t1[_i];
        if (member !== _this._winner)
          member.rejectGesture$1(pointer);
      }
      _this._winner.acceptGesture$1(pointer);
    },
    rejectGesture$1(pointer) {
      var t1, t2, _i;
      this._close$0();
      for (t1 = this._members, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i)
        t1[_i].rejectGesture$1(pointer);
    },
    _close$0() {
      this._resolved = true;
      this._team$_owner._combiners.remove$1(0, this._team$_pointer);
    },
    _team$_resolve$2(member, disposition) {
      var t1, _this = this;
      if (_this._resolved)
        return;
      if (disposition === B.GestureDisposition_1) {
        t1 = _this._members;
        B.JSArray_methods.remove$1(t1, member);
        member.rejectGesture$1(_this._team$_pointer);
        if (t1.length === 0) {
          t1 = _this._entry;
          t1._arena._resolve$3(t1._pointer, t1._member, disposition);
        }
      } else {
        if (_this._winner == null)
          _this._winner = member;
        t1 = _this._entry;
        t1._arena._resolve$3(t1._pointer, t1._member, disposition);
      }
    }
  };
  A.GestureArenaTeam.prototype = {
    add$2(_, pointer, member) {
      var combiner = this._combiners.putIfAbsent$2(pointer, new A.GestureArenaTeam_add_closure(this, pointer));
      combiner._members.push(member);
      if (combiner._entry == null)
        combiner._entry = $.GestureBinding__instance.GestureBinding_gestureArena.add$2(0, pointer, combiner);
      return new A._CombiningGestureArenaEntry(combiner, member);
    }
  };
  A.GestureArenaTeam_add_closure.prototype = {
    call$0() {
      return new A._CombiningGestureArenaMember(this.$this, A._setArrayType([], type$.JSArray_GestureArenaMember), this.pointer);
    },
    $signature: 250
  };
  A.Velocity.prototype = {
    $sub(_, other) {
      return new A.Velocity(this.pixelsPerSecond.$sub(0, other.pixelsPerSecond));
    },
    $add(_, other) {
      return new A.Velocity(this.pixelsPerSecond.$add(0, other.pixelsPerSecond));
    },
    clampMagnitude$2(minValue, maxValue) {
      var t1 = this.pixelsPerSecond,
        valueSquared = t1.get$distanceSquared();
      if (valueSquared > maxValue * maxValue)
        return new A.Velocity(t1.$div(0, t1.get$distance()).$mul(0, maxValue));
      if (valueSquared < minValue * minValue)
        return new A.Velocity(t1.$div(0, t1.get$distance()).$mul(0, minValue));
      return this;
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.Velocity && other.pixelsPerSecond.$eq(0, this.pixelsPerSecond);
    },
    get$hashCode(_) {
      var t1 = this.pixelsPerSecond;
      return A.hashValues(t1._dx, t1._dy, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd, B.C__HashEnd);
    },
    toString$0(_) {
      var t1 = this.pixelsPerSecond;
      return "Velocity(" + B.JSNumber_methods.toStringAsFixed$1(t1._dx, 1) + ", " + B.JSNumber_methods.toStringAsFixed$1(t1._dy, 1) + ")";
    }
  };
  A.VelocityEstimate.prototype = {
    toString$0(_) {
      var _this = this,
        t1 = _this.pixelsPerSecond;
      return "VelocityEstimate(" + B.JSNumber_methods.toStringAsFixed$1(t1._dx, 1) + ", " + B.JSNumber_methods.toStringAsFixed$1(t1._dy, 1) + "; offset: " + _this.offset.toString$0(0) + ", duration: " + _this.duration.toString$0(0) + ", confidence: " + B.JSNumber_methods.toStringAsFixed$1(_this.confidence, 1) + ")";
    }
  };
  A._PointAtTime.prototype = {
    toString$0(_) {
      return "_PointAtTime(" + this.point.toString$0(0) + " at " + this.time.toString$0(0) + ")";
    }
  };
  A.VelocityTracker.prototype = {
    addPosition$2(time, position) {
      var t1 = ++this._velocity_tracker$_index;
      if (t1 === 20)
        t1 = this._velocity_tracker$_index = 0;
      this._samples[t1] = new A._PointAtTime(time, position);
    },
    getVelocityEstimate$0() {
      var newestSample, t2, oldestSample, previousSample, sampleCount, sample, t3, age, position, xFit, yFit, t4, t5,
        t1 = type$.JSArray_double,
        x = A._setArrayType([], t1),
        y = A._setArrayType([], t1),
        w = A._setArrayType([], t1),
        time = A._setArrayType([], t1),
        index = this._velocity_tracker$_index;
      t1 = this._samples;
      newestSample = t1[index];
      if (newestSample == null)
        return null;
      t2 = newestSample.time._duration;
      oldestSample = newestSample;
      previousSample = oldestSample;
      sampleCount = 0;
      do {
        sample = t1[index];
        if (sample == null)
          break;
        t3 = sample.time._duration;
        age = (t2 - t3) / 1000;
        if (age > 100 || Math.abs(t3 - previousSample.time._duration) / 1000 > 40)
          break;
        position = sample.point;
        x.push(position._dx);
        y.push(position._dy);
        w.push(1);
        time.push(-age);
        index = (index === 0 ? 20 : index) - 1;
        ++sampleCount;
        if (sampleCount < 20) {
          oldestSample = sample;
          previousSample = oldestSample;
          continue;
        } else {
          oldestSample = sample;
          break;
        }
      } while (true);
      if (sampleCount >= 3) {
        xFit = new A.LeastSquaresSolver(time, x, w).solve$1(2);
        if (xFit != null) {
          yFit = new A.LeastSquaresSolver(time, y, w).solve$1(2);
          if (yFit != null) {
            t1 = xFit.coefficients[1];
            t3 = yFit.coefficients[1];
            t4 = xFit.__PolynomialFit_confidence_A;
            t4 === $ && A.throwUnnamedLateFieldNI();
            t5 = yFit.__PolynomialFit_confidence_A;
            t5 === $ && A.throwUnnamedLateFieldNI();
            return new A.VelocityEstimate(new A.Offset(t1 * 1000, t3 * 1000), t4 * t5, new A.Duration(t2 - oldestSample.time._duration), newestSample.point.$sub(0, oldestSample.point));
          }
        }
      }
      return new A.VelocityEstimate(B.Offset_0_0, 1, new A.Duration(t2 - oldestSample.time._duration), newestSample.point.$sub(0, oldestSample.point));
    }
  };
  A.IOSScrollViewFlingVelocityTracker.prototype = {
    addPosition$2(time, position) {
      var t1 = (this._velocity_tracker$_index + 1) % 20;
      this._velocity_tracker$_index = t1;
      this._touchSamples[t1] = new A._PointAtTime(time, position);
    },
    _previousVelocityAt$1(index) {
      var end, start, dt,
        t1 = this._velocity_tracker$_index + index,
        endIndex = B.JSInt_methods.$mod(t1, 20),
        startIndex = B.JSInt_methods.$mod(t1 - 1, 20);
      t1 = this._touchSamples;
      end = t1[endIndex];
      start = t1[startIndex];
      if (end == null || start == null)
        return B.Offset_0_0;
      dt = end.time._duration - start.time._duration;
      return dt > 0 ? end.point.$sub(0, start.point).$mul(0, 1000).$div(0, dt / 1000) : B.Offset_0_0;
    },
    getVelocityEstimate$0() {
      var oldestNonNullSample, i, _this = this,
        estimatedVelocity = _this._previousVelocityAt$1(-2).$mul(0, 0.6).$add(0, _this._previousVelocityAt$1(-1).$mul(0, 0.35)).$add(0, _this._previousVelocityAt$1(0).$mul(0, 0.05)),
        t1 = _this._touchSamples,
        t2 = _this._velocity_tracker$_index,
        newestSample = t1[t2];
      for (oldestNonNullSample = null, i = 1; i <= 20; ++i) {
        oldestNonNullSample = t1[B.JSInt_methods.$mod(t2 + i, 20)];
        if (oldestNonNullSample != null)
          break;
      }
      if (oldestNonNullSample == null || newestSample == null)
        return B.VelocityEstimate_QFj;
      else
        return new A.VelocityEstimate(estimatedVelocity, 1, new A.Duration(newestSample.time._duration - oldestNonNullSample.time._duration), newestSample.point.$sub(0, oldestNonNullSample.point));
    }
  };
  A.MacOSScrollViewFlingVelocityTracker.prototype = {
    getVelocityEstimate$0() {
      var oldestNonNullSample, i, _this = this,
        estimatedVelocity = _this._previousVelocityAt$1(-2).$mul(0, 0.15).$add(0, _this._previousVelocityAt$1(-1).$mul(0, 0.65)).$add(0, _this._previousVelocityAt$1(0).$mul(0, 0.2)),
        t1 = _this._touchSamples,
        t2 = _this._velocity_tracker$_index,
        newestSample = t1[t2];
      for (oldestNonNullSample = null, i = 1; i <= 20; ++i) {
        oldestNonNullSample = t1[B.JSInt_methods.$mod(t2 + i, 20)];
        if (oldestNonNullSample != null)
          break;
      }
      if (oldestNonNullSample == null || newestSample == null)
        return B.VelocityEstimate_QFj;
      else
        return new A.VelocityEstimate(estimatedVelocity, 1, new A.Duration(newestSample.time._duration - oldestNonNullSample.time._duration), newestSample.point.$sub(0, oldestNonNullSample.point));
    }
  };
  A._ActionButton.prototype = {
    build$1(context) {
      var _this = this;
      return new A.IconButton(_this.icon, null, new A._ActionButton_build_closure(_this, context), _this._getTooltip$1(context), _this.style, null);
    }
  };
  A._ActionButton_build_closure.prototype = {
    call$0() {
      this.$this._onPressedCallback$1(this.context);
    },
    $signature: 0
  };
  A._ActionIcon.prototype = {
    build$1(context) {
      var t1, iconBuilder, data, semanticsLabel;
      context.dependOnInheritedWidgetOfExactType$1$0(type$.ActionIconTheme);
      t1 = A.Theme_of(context);
      iconBuilder = this.iconBuilderCallback.call$1(t1.actionIconTheme);
      if (iconBuilder != null)
        return iconBuilder.call$1(context);
      data = this.getIcon.call$1(context);
      semanticsLabel = null;
      switch (A.defaultTargetPlatform().index) {
        case 0:
          t1 = A.Localizations_of(context, B.Type_MaterialLocalizations_nEU, type$.MaterialLocalizations);
          t1.toString;
          semanticsLabel = this.getAndroidSemanticsLabel.call$1(t1);
          break;
        case 1:
        case 3:
        case 5:
        case 2:
        case 4:
          break;
      }
      return new A.Icon(data, semanticsLabel, null);
    }
  };
  A.BackButtonIcon.prototype = {
    build$1(context) {
      return new A._ActionIcon(new A.BackButtonIcon_build_closure(), new A.BackButtonIcon_build_closure0(), new A.BackButtonIcon_build_closure1(), null);
    }
  };
  A.BackButtonIcon_build_closure.prototype = {
    call$1(actionIconTheme) {
      return actionIconTheme == null ? null : actionIconTheme.backButtonIconBuilder;
    },
    $signature: 42
  };
  A.BackButtonIcon_build_closure0.prototype = {
    call$1(context) {
      return B.IconData_57490_true;
    },
    $signature: 39
  };
  A.BackButtonIcon_build_closure1.prototype = {
    call$1(materialLocalization) {
      return "Back";
    },
    $signature: 61
  };
  A.BackButton.prototype = {
    _onPressedCallback$1(context) {
      return A.Navigator_maybePop(context);
    },
    _getTooltip$1(context) {
      A.Localizations_of(context, B.Type_MaterialLocalizations_nEU, type$.MaterialLocalizations).toString;
      return "Back";
    }
  };
  A.DrawerButtonIcon.prototype = {
    build$1(context) {
      return new A._ActionIcon(new A.DrawerButtonIcon_build_closure(), new A.DrawerButtonIcon_build_closure0(), new A.DrawerButtonIcon_build_closure1(), null);
    }
  };
  A.DrawerButtonIcon_build_closure.prototype = {
    call$1(actionIconTheme) {
      return actionIconTheme == null ? null : actionIconTheme.drawerButtonIconBuilder;
    },
    $signature: 42
  };
  A.DrawerButtonIcon_build_closure0.prototype = {
    call$1(context) {
      return B.IconData_58332_false;
    },
    $signature: 39
  };
  A.DrawerButtonIcon_build_closure1.prototype = {
    call$1(materialLocalization) {
      return "Open navigation menu";
    },
    $signature: 61
  };
  A.DrawerButton.prototype = {
    _onPressedCallback$1(context) {
      var t3, t4,
        t1 = A.Scaffold_of(context),
        t2 = t1._endDrawerKey;
      if (t2.get$currentState() != null) {
        t3 = t1._endDrawerOpened;
        t4 = t3._restoration_properties$_value;
        t3 = t4 == null ? A._instanceType(t3)._eval$1("RestorableValue.T")._as(t4) : t4;
      } else
        t3 = false;
      if (t3)
        t2.get$currentState().close$0();
      t1 = t1._drawerKey.get$currentState();
      if (t1 != null)
        t1.open$0();
      return null;
    },
    _getTooltip$1(context) {
      A.Localizations_of(context, B.Type_MaterialLocalizations_nEU, type$.MaterialLocalizations).toString;
      return "Open navigation menu";
    }
  };
  A.EndDrawerButtonIcon.prototype = {
    build$1(context) {
      return new A._ActionIcon(new A.EndDrawerButtonIcon_build_closure(), new A.EndDrawerButtonIcon_build_closure0(), new A.EndDrawerButtonIcon_build_closure1(), null);
    }
  };
  A.EndDrawerButtonIcon_build_closure.prototype = {
    call$1(actionIconTheme) {
      return actionIconTheme == null ? null : actionIconTheme.endDrawerButtonIconBuilder;
    },
    $signature: 42
  };
  A.EndDrawerButtonIcon_build_closure0.prototype = {
    call$1(context) {
      return B.IconData_58332_false;
    },
    $signature: 39
  };
  A.EndDrawerButtonIcon_build_closure1.prototype = {
    call$1(materialLocalization) {
      return "Open navigation menu";
    },
    $signature: 61
  };
  A.EndDrawerButton.prototype = {
    _onPressedCallback$1(context) {
      var t3, t4,
        t1 = A.Scaffold_of(context),
        t2 = t1._drawerKey;
      if (t2.get$currentState() != null) {
        t3 = t1._drawerOpened;
        t4 = t3._restoration_properties$_value;
        t3 = t4 == null ? A._instanceType(t3)._eval$1("RestorableValue.T")._as(t4) : t4;
      } else
        t3 = false;
      if (t3)
        t2.get$currentState().close$0();
      t1 = t1._endDrawerKey.get$currentState();
      if (t1 != null)
        t1.open$0();
      return null;
    },
    _getTooltip$1(context) {
      A.Localizations_of(context, B.Type_MaterialLocalizations_nEU, type$.MaterialLocalizations).toString;
      return "Open navigation menu";
    }
  };
  A.ActionIconThemeData.prototype = {
    get$hashCode(_) {
      var _this = this;
      return A.Object_hashAll([_this.backButtonIconBuilder, _this.closeButtonIconBuilder, _this.drawerButtonIconBuilder, _this.endDrawerButtonIconBuilder]);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(this))
        return false;
      return other instanceof A.ActionIconThemeData;
    }
  };
  A._ActionIconThemeData_Object_Diagnosticable.prototype = {};
  A.ThemeMode.prototype = {
    _enumToString$0() {
      return "ThemeMode." + this._name;
    }
  };
  A.MaterialApp.prototype = {
    createState$0() {
      return new A._MaterialAppState();
    }
  };
  A.MaterialApp_createMaterialHeroController_closure.prototype = {
    call$2(begin, end) {
      return new A.MaterialRectArcTween(begin, end);
    },
    $signature: 246
  };
  A.MaterialScrollBehavior.prototype = {
    getPlatform$1(context) {
      return A.Theme_of(context).platform;
    },
    buildScrollbar$3(context, child, details) {
      switch (A.axisDirectionToAxis(details.direction).index) {
        case 0:
          return child;
        case 1:
          switch (A.Theme_of(context).platform.index) {
            case 3:
            case 4:
            case 5:
              return new A.Scrollbar(child, details.controller, null);
            case 0:
            case 1:
            case 2:
              return child;
          }
          break;
      }
    },
    buildOverscrollIndicator$3(context, child, details) {
      var target, t1, _null = null,
        indicator = A._Cell$();
      A.Theme_of(context);
      A.Theme_of(context);
      indicator.set$finalLocalValue(B.AndroidOverscrollIndicator_1);
      switch (A.Theme_of(context).platform.index) {
        case 2:
        case 3:
        case 4:
        case 5:
          target = 1;
          break;
        case 0:
          target = 2;
          break;
        case 1:
          target = 3;
          break;
        default:
          target = _null;
          break;
      }
      if (target)
        c$0:
          for (; true;)
            switch (target) {
              case 1:
                return child;
              case 2:
                t1 = indicator.__late_helper$_value;
                if (t1 === indicator)
                  A.throwExpression(A.LateError$localNI(""));
                switch (t1) {
                  case B.AndroidOverscrollIndicator_0:
                    target = 1;
                    break;
                  case B.AndroidOverscrollIndicator_1:
                    target = 2;
                    break;
                  default:
                    target = _null;
                    break;
                }
                if (target)
                  c$1:
                    for (; true;)
                      switch (target) {
                        case 1:
                          return new A.StretchingOverscrollIndicator(details.direction, details.clipBehavior, child, _null);
                        case 2:
                          target = 3;
                          continue c$0;
                      }
                break c$0;
              case 3:
                return new A.GlowingOverscrollIndicator(details.direction, A.Theme_of(context).colorScheme.secondary, child, _null);
            }
    }
  };
  A._MaterialAppState.prototype = {
    initState$0() {
      this.super$State$initState();
      this.___MaterialAppState__heroController_A = A.MaterialApp_createMaterialHeroController();
    },
    get$_localizationsDelegates() {
      var t1 = A._setArrayType([], type$.JSArray_LocalizationsDelegate_dynamic);
      this._widget.toString;
      t1.push(B.C__MaterialLocalizationsDelegate);
      t1.push(B.C__CupertinoLocalizationsDelegate);
      return t1;
    },
    _materialBuilder$2(context, child) {
      var t1, platformBrightness, useDarkTheme, highContrast, theme, effectiveSelectionColor, t2, effectiveCursorColor, _this = this, _null = null;
      _this._widget.toString;
      t1 = A.MediaQuery__maybeOf(context, B._MediaQueryAspect_4);
      platformBrightness = t1 == null ? _null : t1.platformBrightness;
      if (platformBrightness == null)
        platformBrightness = B.Brightness_1;
      useDarkTheme = platformBrightness === B.Brightness_0;
      t1 = A.MediaQuery__maybeOf(context, B._MediaQueryAspect_12);
      t1 = t1 == null ? _null : t1.highContrast;
      highContrast = t1 === true;
      if (useDarkTheme)
        if (highContrast)
          _this._widget.toString;
      if (useDarkTheme)
        _this._widget.toString;
      if (highContrast)
        _this._widget.toString;
      theme = _this._widget.theme;
      t1 = theme.textSelectionTheme;
      effectiveSelectionColor = t1.selectionColor;
      if (effectiveSelectionColor == null) {
        t2 = theme.colorScheme.primary;
        effectiveSelectionColor = A.Color$fromARGB(102, t2.get$value() >>> 16 & 255, t2.get$value() >>> 8 & 255, t2.get$value() & 255);
      }
      effectiveCursorColor = t1.cursorColor;
      if (effectiveCursorColor == null)
        effectiveCursorColor = theme.colorScheme.primary;
      _this._widget.toString;
      t1 = child == null ? B.SizedBox_0_0_null_null : child;
      return new A.ScaffoldMessenger(A.DefaultSelectionStyle$(new A.AnimatedTheme(theme, t1, B.C__Linear, B.Duration_200000, _null, _null), effectiveCursorColor, effectiveSelectionColor), _null);
    },
    _buildWidgetApp$1(context) {
      var materialColor, t3, _this = this, _null = null,
        t1 = _this._widget,
        t2 = t1.theme;
      t2 = t2.primaryColor;
      materialColor = t2;
      if (materialColor == null)
        materialColor = B.MaterialColor_Map_tF9to_4280391411;
      t2 = t1.home;
      t1 = t1.title;
      t3 = _this.get$_localizationsDelegates();
      _this._widget.toString;
      return new A.WidgetsApp(_null, _null, _null, new A._MaterialAppState__buildWidgetApp_closure(), _null, _null, _null, _null, _null, t2, B.Map_empty3, _null, _null, B.List_empty1, _this.get$_materialBuilder(), t1, _null, B.TextStyle_txm, materialColor, _null, t3, _null, _null, B.List_Locale, false, false, false, false, _null, _null, _null, new A.GlobalObjectKey(_this, type$.GlobalObjectKey_State_StatefulWidget));
    },
    build$1(context) {
      var t1, _null = null,
        result = A.Focus$(false, false, this._buildWidgetApp$1(context), _null, _null, _null, _null, true, _null, _null, new A._MaterialAppState_build_closure(), _null, _null, _null);
      this._widget.toString;
      t1 = this.___MaterialAppState__heroController_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      return new A.ScrollConfiguration(B.C_MaterialScrollBehavior, new A.HeroControllerScope(t1, result, _null), _null);
    }
  };
  A._MaterialAppState__buildWidgetApp_closure.prototype = {
    call$1$2(settings, builder, $T) {
      var _null = null,
        t1 = A._setArrayType([], type$.JSArray_of_Future_bool_Function),
        t2 = $.Zone__current,
        t3 = A.ProxyAnimation$(B.C__AlwaysDismissedAnimation),
        t4 = A._setArrayType([], type$.JSArray_OverlayEntry),
        t5 = A.ValueNotifier$(_null),
        t6 = $.Zone__current;
      return new A.MaterialPageRoute(builder, false, true, t1, new A.LabeledGlobalKey(_null, $T._eval$1("LabeledGlobalKey<_ModalScopeState<0>>")), new A.LabeledGlobalKey(_null, type$.LabeledGlobalKey_State_StatefulWidget), new A.PageStorageBucket(), _null, 0, new A._AsyncCompleter(new A._Future(t2, $T._eval$1("_Future<0?>")), $T._eval$1("_AsyncCompleter<0?>")), t3, t4, settings, t5, new A._AsyncCompleter(new A._Future(t6, $T._eval$1("_Future<0?>")), $T._eval$1("_AsyncCompleter<0?>")), $T._eval$1("MaterialPageRoute<0>"));
    },
    call$2(settings, builder) {
      return this.call$1$2(settings, builder, type$.dynamic);
    },
    $signature: 249
  };
  A._MaterialAppState_build_closure.prototype = {
    call$2(node, $event) {
      if (!($event instanceof A.RawKeyDownEvent) || !$event.data.get$logicalKey().$eq(0, B.LogicalKeyboardKey_4294967323))
        return B.KeyEventResult_1;
      return A.Tooltip_dismissAllToolTips() ? B.KeyEventResult_0 : B.KeyEventResult_1;
    },
    $signature: 64
  };
  A._ToolbarContainerLayout.prototype = {
    getConstraintsForChild$1(constraints) {
      return constraints.tighten$1$height(this.toolbarHeight);
    },
    getSize$1(constraints) {
      return new A.Size(constraints.maxWidth, this.toolbarHeight);
    },
    getPositionForChild$2(size, childSize) {
      return new A.Offset(0, size._dy - childSize._dy);
    },
    shouldRelayout$1(oldDelegate) {
      return this.toolbarHeight !== oldDelegate.toolbarHeight;
    }
  };
  A._PreferredAppBarSize.prototype = {};
  A.AppBar.prototype = {
    _getEffectiveCenterTitle$1(theme) {
      var t1 = new A.AppBar__getEffectiveCenterTitle_platformCenter(this, theme).call$0();
      return t1;
    },
    createState$0() {
      return new A._AppBarState();
    },
    notificationPredicate$1(arg0) {
      return A.scroll_notification__defaultScrollNotificationPredicate$closure().call$1(arg0);
    }
  };
  A.AppBar__getEffectiveCenterTitle_platformCenter.prototype = {
    call$0() {
      switch (this.theme.platform.index) {
        case 0:
        case 1:
        case 3:
        case 5:
          return false;
        case 2:
        case 4:
          return this.$this.actions == null;
      }
    },
    $signature: 54
  };
  A._AppBarState.prototype = {
    didChangeDependencies$0() {
      var t1, _this = this;
      _this.super$State$didChangeDependencies();
      t1 = _this._scrollNotificationObserver;
      if (t1 != null)
        t1.removeListener$1(_this.get$_app_bar$_handleScrollNotification());
      t1 = _this._element.dependOnInheritedWidgetOfExactType$1$0(type$._ScrollNotificationObserverScope);
      t1 = t1 == null ? null : t1._scrollNotificationObserverState;
      _this._scrollNotificationObserver = t1;
      if (t1 != null) {
        t1 = t1._scroll_notification_observer$_listeners;
        t1._insertBefore$3$updateFirst(t1._collection$_first, new A._ListenerEntry(_this.get$_app_bar$_handleScrollNotification()), false);
      }
    },
    dispose$0() {
      var _this = this,
        t1 = _this._scrollNotificationObserver;
      if (t1 != null) {
        t1.removeListener$1(_this.get$_app_bar$_handleScrollNotification());
        _this._scrollNotificationObserver = null;
      }
      _this.super$State$dispose();
    },
    _app_bar$_handleScrollNotification$1(notification) {
      var oldScrolledUnder, metrics, t1, _this = this;
      if (notification instanceof A.ScrollUpdateNotification && _this._widget.notificationPredicate$1(notification)) {
        oldScrolledUnder = _this._scrolledUnder;
        metrics = notification.metrics;
        switch (metrics.axisDirection.index) {
          case 0:
            t1 = _this._scrolledUnder = Math.max(metrics.get$maxScrollExtent() - metrics.get$pixels(), 0) > 0;
            break;
          case 2:
            t1 = _this._scrolledUnder = Math.max(metrics.get$pixels() - metrics.get$minScrollExtent(), 0) > 0;
            break;
          case 1:
          case 3:
            t1 = oldScrolledUnder;
            break;
          default:
            t1 = oldScrolledUnder;
        }
        if (t1 !== oldScrolledUnder)
          _this.setState$1(new A._AppBarState__handleScrollNotification_closure());
      }
    },
    build$1(context) {
      var t1, t2, t3, hasEndDrawer, t4, canPop, toolbarHeight, t5, t6, actionForegroundColor, foregroundColor, elevation, effectiveElevation, overallIconTheme, overallIconTheme0, actionsIconTheme, toolbarTextStyle, titleTextStyle, leading, title, namesRoute, mediaQueryData, actions, effectiveActionsIconButtonTheme, actionsIconButtonStyle, appBar, style, overlayStyle, _this = this, _null = null,
        theme = A.Theme_of(context),
        iconButtonTheme = A.IconButtonTheme_of(context),
        appBarTheme = A.Theme_of(context).appBarTheme,
        defaults = new A._AppBarDefaultsM2(context, _null, _null, 4, _null, B.Color_4278190080, _null, _null, _null, _null, _null, 16, 56, _null, _null, _null),
        scaffold = context.findAncestorStateOfType$1$0(type$.ScaffoldState),
        parentRoute = A.ModalRoute_of(context, type$.nullable_Object);
      context.dependOnInheritedWidgetOfExactType$1$0(type$.FlexibleSpaceBarSettings);
      t1 = A.LinkedHashSet_LinkedHashSet$_empty(type$.MaterialState);
      t2 = _this._scrolledUnder;
      if (t2)
        t1.add$1(0, B.MaterialState_5);
      t2 = scaffold == null;
      if (t2)
        t3 = _null;
      else {
        scaffold._widget.toString;
        t3 = false;
      }
      if (t2)
        t2 = _null;
      else {
        scaffold._widget.toString;
        t2 = false;
      }
      hasEndDrawer = t2 === true;
      t2 = parentRoute == null;
      if (t2)
        t4 = _null;
      else if (!parentRoute.get$hasActiveRouteBelow()) {
        t4 = parentRoute.LocalHistoryRoute__localHistory;
        t4 = t4 != null && t4.length !== 0;
      } else
        t4 = true;
      canPop = t4 === true;
      _this._widget.toString;
      toolbarHeight = appBarTheme.toolbarHeight;
      if (toolbarHeight == null)
        toolbarHeight = 56;
      t4 = defaults.get$backgroundColor();
      t5 = type$.nullable_Color;
      t6 = A.MaterialStateProperty_resolveAs(_null, t1, t5);
      t5 = t6 == null ? A.MaterialStateProperty_resolveAs(appBarTheme.backgroundColor, t1, t5) : t6;
      t4 = t5 == null ? A.MaterialStateProperty_resolveAs(t4, t1, type$.Color) : t5;
      _this._widget.toString;
      actionForegroundColor = appBarTheme.foregroundColor;
      foregroundColor = actionForegroundColor == null ? defaults.get$foregroundColor() : actionForegroundColor;
      _this._widget.toString;
      elevation = appBarTheme.elevation;
      if (elevation == null) {
        t5 = defaults.elevation;
        t5.toString;
        elevation = t5;
      }
      if (t1.contains$1(0, B.MaterialState_5)) {
        _this._widget.toString;
        t1 = appBarTheme.scrolledUnderElevation;
        if (t1 == null)
          t1 = defaults.scrolledUnderElevation;
        effectiveElevation = t1 == null ? elevation : t1;
      } else
        effectiveElevation = elevation;
      _this._widget.toString;
      overallIconTheme = appBarTheme.iconTheme;
      overallIconTheme0 = overallIconTheme == null ? defaults.get$iconTheme().copyWith$1$color(foregroundColor) : overallIconTheme;
      _this._widget.toString;
      t1 = appBarTheme.actionsIconTheme;
      if (t1 == null)
        t1 = _null;
      if (t1 == null)
        t1 = overallIconTheme;
      if (t1 == null) {
        t1 = defaults.actionsIconTheme;
        t1 = t1 == null ? _null : t1.copyWith$1$color(actionForegroundColor);
        actionsIconTheme = t1;
      } else
        actionsIconTheme = t1;
      if (actionsIconTheme == null)
        actionsIconTheme = overallIconTheme0;
      _this._widget.toString;
      toolbarTextStyle = appBarTheme.toolbarTextStyle;
      if (toolbarTextStyle == null) {
        t1 = defaults.get$toolbarTextStyle();
        toolbarTextStyle = t1 == null ? _null : t1.copyWith$1$color(foregroundColor);
      }
      _this._widget.toString;
      titleTextStyle = appBarTheme.titleTextStyle;
      if (titleTextStyle == null) {
        t1 = defaults.get$titleTextStyle();
        titleTextStyle = t1 == null ? _null : t1.copyWith$1$color(foregroundColor);
      }
      t1 = _this._widget;
      leading = t1.leading;
      if (leading == null)
        if (t3 === true) {
          t1 = overallIconTheme0.size;
          leading = new A.DrawerButton(B.DrawerButtonIcon_null, _null, A.IconButton_styleFrom(_null, _null, _null, _null, _null, _null, _null, _null, _null, t1 == null ? 24 : t1, _null, _null, _null, _null), _null);
        } else {
          if (!(!hasEndDrawer && canPop)) {
            if (t2)
              t1 = _null;
            else
              t1 = parentRoute.get$hasActiveRouteBelow() || parentRoute.LocalHistoryRoute__entriesImpliesAppBarDismissal > 0;
            t1 = t1 === true;
          } else
            t1 = true;
          if (t1)
            leading = B.BackButton_JGH;
        }
      if (leading != null) {
        _this._widget.toString;
        leading = new A.ConstrainedBox(A.BoxConstraints$tightFor(_null, 56), leading, _null);
      }
      title = _this._widget.title;
      namesRoute = _null;
      switch (theme.platform.index) {
        case 0:
        case 1:
        case 3:
        case 5:
          namesRoute = true;
          break;
        case 2:
        case 4:
          break;
      }
      title = A.Semantics$(_null, _null, new A._AppBarTitleBox(title, _null), false, _null, false, false, _null, _null, true, _null, _null, namesRoute, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
      titleTextStyle.toString;
      title = A.DefaultTextStyle$(title, _null, B.TextOverflow_2, false, titleTextStyle, _null, _null, B.TextWidthBasis_0);
      mediaQueryData = A.InheritedModel_inheritFrom(context, _null, type$.MediaQuery).data;
      title = A.MediaQuery$(title, mediaQueryData.copyWith$1$textScaleFactor(Math.min(mediaQueryData.textScaleFactor, 1.34)), _null);
      t1 = _this._widget.actions;
      if (t1 != null)
        actions = A.Row$(t1, B.CrossAxisAlignment_3, B.MainAxisSize_0);
      else if (hasEndDrawer) {
        t1 = overallIconTheme0.size;
        actions = new A.EndDrawerButton(B.EndDrawerButtonIcon_null, _null, A.IconButton_styleFrom(_null, _null, _null, _null, _null, _null, _null, _null, _null, t1 == null ? 24 : t1, _null, _null, _null, _null), _null);
      } else
        actions = _null;
      if (actions != null) {
        if (actionsIconTheme.$eq(0, defaults.actionsIconTheme))
          effectiveActionsIconButtonTheme = iconButtonTheme;
        else {
          actionsIconButtonStyle = A.IconButton_styleFrom(_null, _null, _null, _null, _null, _null, actionsIconTheme.color, _null, _null, actionsIconTheme.size, _null, _null, _null, _null);
          t1 = iconButtonTheme.style;
          effectiveActionsIconButtonTheme = new A.IconButtonThemeData(t1 == null ? _null : t1.copyWith$3$foregroundColor$iconSize$overlayColor(actionsIconButtonStyle.foregroundColor, actionsIconButtonStyle.iconSize, actionsIconButtonStyle.overlayColor));
        }
        actions = A.IconButtonTheme$(A.IconTheme_merge(actions, actionsIconTheme), effectiveActionsIconButtonTheme);
      }
      t1 = _this._widget._getEffectiveCenterTitle$1(theme);
      _this._widget.toString;
      t2 = appBarTheme.titleSpacing;
      if (t2 == null)
        t2 = 16;
      toolbarTextStyle.toString;
      appBar = A.ClipRect$(new A.CustomSingleChildLayout(new A._ToolbarContainerLayout(toolbarHeight), A.IconTheme_merge(A.DefaultTextStyle$(new A.NavigationToolbar(leading, title, actions, t1, t2, _null), _null, B.TextOverflow_0, true, toolbarTextStyle, _null, _null, B.TextWidthBasis_0), overallIconTheme0), _null), B.Clip_1);
      appBar = A.SafeArea$(false, appBar, true);
      t1 = A.ThemeData_estimateBrightnessForColor(t4);
      style = t1 === B.Brightness_0 ? B.SystemUiOverlayStyle_qyr : B.SystemUiOverlayStyle_JlO;
      overlayStyle = new A.SystemUiOverlayStyle(_null, _null, _null, _null, _null, style.statusBarBrightness, style.statusBarIconBrightness, style.systemStatusBarContrastEnforced);
      _this._widget.toString;
      t1 = appBarTheme.shadowColor;
      if (t1 == null)
        t1 = defaults.shadowColor;
      _this._widget.toString;
      t2 = appBarTheme.surfaceTintColor;
      if (t2 == null)
        t2 = defaults.surfaceTintColor;
      _this._widget.toString;
      t3 = appBarTheme.shape;
      if (t3 == null)
        t3 = defaults.shape;
      return A.Semantics$(_null, _null, new A.AnnotatedRegion(overlayStyle, A.Material$(B.Duration_200000, A.Semantics$(_null, _null, new A.Align(B.Alignment_0_m1, _null, _null, appBar, _null), false, _null, false, true, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null), B.Clip_0, t4, effectiveElevation, _null, t1, t3, t2, _null, B.MaterialType_0), _null, type$.AnnotatedRegion_SystemUiOverlayStyle), true, _null, false, false, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
    }
  };
  A._AppBarState__handleScrollNotification_closure.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A._AppBarTitleBox.prototype = {
    createRenderObject$1(context) {
      var t1 = new A._RenderAppBarTitleBox(B.Alignment_0_0, context.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality).textDirection, null, A.LayerHandle$());
      t1.RenderObject$0();
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      renderObject.set$textDirection(context.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality).textDirection);
    }
  };
  A._RenderAppBarTitleBox.prototype = {
    computeDryLayout$1(constraints) {
      var innerConstraints = constraints.copyWith$1$maxHeight(1 / 0);
      return constraints.constrain$1(this.RenderObjectWithChildMixin__child.getDryLayout$1(innerConstraints));
    },
    performLayout$0() {
      var t1, t2, _this = this,
        innerConstraints = A.RenderObject.prototype.get$constraints.call(_this).copyWith$1$maxHeight(1 / 0);
      _this.RenderObjectWithChildMixin__child.layout$2$parentUsesSize(innerConstraints, true);
      t1 = A.RenderObject.prototype.get$constraints.call(_this);
      t2 = _this.RenderObjectWithChildMixin__child._size;
      t2.toString;
      _this._size = t1.constrain$1(t2);
      _this.alignChild$0();
    }
  };
  A._AppBarDefaultsM2.prototype = {
    get$_app_bar$_theme() {
      var result, _this = this,
        value = _this.___AppBarDefaultsM2__theme_FI;
      if (value === $) {
        result = A.Theme_of(_this.context);
        _this.___AppBarDefaultsM2__theme_FI !== $ && A.throwUnnamedLateFieldADI();
        _this.___AppBarDefaultsM2__theme_FI = result;
        value = result;
      }
      return value;
    },
    get$_app_bar$_colors() {
      var t1, _this = this,
        value = _this.___AppBarDefaultsM2__colors_FI;
      if (value === $) {
        t1 = _this.get$_app_bar$_theme();
        _this.___AppBarDefaultsM2__colors_FI !== $ && A.throwUnnamedLateFieldADI();
        value = _this.___AppBarDefaultsM2__colors_FI = t1.colorScheme;
      }
      return value;
    },
    get$backgroundColor() {
      var t1 = this.get$_app_bar$_colors();
      return t1.brightness === B.Brightness_0 ? t1.surface : t1.primary;
    },
    get$foregroundColor() {
      var t1 = this.get$_app_bar$_colors();
      return t1.brightness === B.Brightness_0 ? t1.onSurface : t1.onPrimary;
    },
    get$iconTheme() {
      return this.get$_app_bar$_theme().iconTheme;
    },
    get$toolbarTextStyle() {
      return this.get$_app_bar$_theme().textTheme.bodyMedium;
    },
    get$titleTextStyle() {
      return this.get$_app_bar$_theme().textTheme.titleLarge;
    }
  };
  A.AppBarTheme.prototype = {
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(_this.get$backgroundColor(), _this.get$foregroundColor(), _this.elevation, _this.scrolledUnderElevation, _this.get$shadowColor(), _this.get$surfaceTintColor(), _this.shape, _this.get$iconTheme(), _this.get$actionsIconTheme(), _this.centerTitle, _this.titleSpacing, _this.toolbarHeight, _this.get$toolbarTextStyle(), _this.get$titleTextStyle(), _this.systemOverlayStyle, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      t1 = false;
      if (other instanceof A.AppBarTheme)
        if (J.$eq$(other.get$backgroundColor(), _this.get$backgroundColor()))
          if (J.$eq$(other.get$foregroundColor(), _this.get$foregroundColor()))
            if (other.elevation == _this.elevation)
              if (other.scrolledUnderElevation == _this.scrolledUnderElevation)
                if (J.$eq$(other.get$shadowColor(), _this.get$shadowColor()))
                  if (J.$eq$(other.get$surfaceTintColor(), _this.get$surfaceTintColor()))
                    if (J.$eq$(other.shape, _this.shape))
                      if (J.$eq$(other.get$iconTheme(), _this.get$iconTheme()))
                        if (J.$eq$(other.get$actionsIconTheme(), _this.get$actionsIconTheme()))
                          if (other.titleSpacing == _this.titleSpacing)
                            if (other.toolbarHeight == _this.toolbarHeight)
                              if (J.$eq$(other.get$toolbarTextStyle(), _this.get$toolbarTextStyle()))
                                t1 = J.$eq$(other.get$titleTextStyle(), _this.get$titleTextStyle());
      return t1;
    },
    get$backgroundColor() {
      return this.backgroundColor;
    },
    get$foregroundColor() {
      return this.foregroundColor;
    },
    get$shadowColor() {
      return this.shadowColor;
    },
    get$surfaceTintColor() {
      return this.surfaceTintColor;
    },
    get$iconTheme() {
      return this.iconTheme;
    },
    get$actionsIconTheme() {
      return this.actionsIconTheme;
    },
    get$toolbarTextStyle() {
      return this.toolbarTextStyle;
    },
    get$titleTextStyle() {
      return this.titleTextStyle;
    }
  };
  A._AppBarTheme_Object_Diagnosticable.prototype = {};
  A.MaterialPointArcTween.prototype = {
    _initialize$0() {
      var end, delta, deltaX, deltaY, distanceFromAtoB, t2, t3, c, t4, t5, t6, t7, _this = this,
        t1 = _this.begin;
      t1.toString;
      end = _this.end;
      delta = end.$sub(0, t1);
      deltaX = Math.abs(delta._dx);
      deltaY = Math.abs(delta._dy);
      distanceFromAtoB = delta.get$distance();
      t2 = end._dx;
      t3 = t1._dy;
      c = new A.Offset(t2, t3);
      t4 = new A.MaterialPointArcTween__initialize_sweepAngle(_this, distanceFromAtoB);
      if (deltaX > 2 && deltaY > 2) {
        t5 = distanceFromAtoB * distanceFromAtoB;
        t6 = t1._dx;
        t7 = end._dy;
        if (deltaX < deltaY) {
          t1 = t5 / c.$sub(0, t1).get$distance() / 2;
          _this._radius = t1;
          _this._center = new A.Offset(t2 + t1 * J.get$sign$in(t6 - t2), t7);
          if (t6 < t2) {
            _this._beginAngle = t4.call$0() * J.get$sign$in(t3 - t7);
            _this._endAngle = 0;
          } else {
            _this._beginAngle = 3.141592653589793 + t4.call$0() * J.get$sign$in(t7 - t3);
            _this._endAngle = 3.141592653589793;
          }
        } else {
          _this._radius = t5 / c.$sub(0, end).get$distance() / 2;
          t1 = J.get$sign$in(t7 - t3);
          t5 = _this._radius;
          t5.toString;
          _this._center = new A.Offset(t6, t3 + t1 * t5);
          if (t3 < t7) {
            _this._beginAngle = -1.5707963267948966;
            _this._endAngle = -1.5707963267948966 + t4.call$0() * J.get$sign$in(t2 - t6);
          } else {
            _this._beginAngle = 1.5707963267948966;
            _this._endAngle = 1.5707963267948966 + t4.call$0() * J.get$sign$in(t6 - t2);
          }
        }
      } else
        _this._endAngle = _this._beginAngle = null;
      _this._arc$_dirty = false;
    },
    get$center() {
      var _this = this;
      if (_this.begin == null || _this.end == null)
        return null;
      if (_this._arc$_dirty)
        _this._initialize$0();
      return _this._center;
    },
    get$radius() {
      var _this = this;
      if (_this.begin == null || _this.end == null)
        return null;
      if (_this._arc$_dirty)
        _this._initialize$0();
      return _this._radius;
    },
    get$beginAngle() {
      var _this = this;
      if (_this.begin == null || _this.end == null)
        return null;
      if (_this._arc$_dirty)
        _this._initialize$0();
      return _this._beginAngle;
    },
    get$endAngle() {
      var _this = this;
      if (_this.begin == null || _this.end == null)
        return null;
      if (_this._arc$_dirty)
        _this._initialize$0();
      return _this._beginAngle;
    },
    set$begin(value) {
      if (!J.$eq$(value, this.begin)) {
        this.begin = value;
        this._arc$_dirty = true;
      }
    },
    set$end(value) {
      if (!J.$eq$(value, this.end)) {
        this.end = value;
        this._arc$_dirty = true;
      }
    },
    lerp$1(t) {
      var t1, t2, t3, t4, _this = this;
      if (_this._arc$_dirty)
        _this._initialize$0();
      if (t === 0) {
        t1 = _this.begin;
        t1.toString;
        return t1;
      }
      if (t === 1) {
        t1 = _this.end;
        t1.toString;
        return t1;
      }
      t1 = _this._beginAngle;
      if (t1 == null || _this._endAngle == null) {
        t1 = A.Offset_lerp(_this.begin, _this.end, t);
        t1.toString;
        return t1;
      }
      t1 = A.lerpDouble(t1, _this._endAngle, t);
      t1.toString;
      t2 = Math.cos(t1);
      t3 = _this._radius;
      t3.toString;
      t1 = Math.sin(t1);
      t4 = _this._radius;
      t4.toString;
      return _this._center.$add(0, new A.Offset(t2 * t3, t1 * t4));
    },
    toString$0(_) {
      var _this = this;
      return "MaterialPointArcTween(" + A.S(_this.begin) + " \u2192 " + A.S(_this.end) + "; center=" + A.S(_this.get$center()) + ", radius=" + A.S(_this.get$radius()) + ", beginAngle=" + A.S(_this.get$beginAngle()) + ", endAngle=" + A.S(_this.get$endAngle()) + ")";
    }
  };
  A.MaterialPointArcTween__initialize_sweepAngle.prototype = {
    call$0() {
      var t1 = this.$this._radius;
      t1.toString;
      return 2 * Math.asin(this.distanceFromAtoB / (2 * t1));
    },
    $signature: 111
  };
  A._CornerId.prototype = {
    _enumToString$0() {
      return "_CornerId." + this._name;
    }
  };
  A._Diagonal.prototype = {};
  A.MaterialRectArcTween.prototype = {
    _initialize$0() {
      var t2, t3, t4, _this = this,
        diagonal = A._maxBy(B.List_Yk4, new A.MaterialRectArcTween__initialize_closure(_this, _this.end.get$center().$sub(0, _this.begin.get$center()))),
        t1 = _this.begin;
      t1.toString;
      t2 = diagonal.beginId;
      t3 = _this._cornerFor$2(t1, t2);
      t4 = _this.end;
      t4.toString;
      _this.__MaterialRectArcTween__beginArc_A = new A.MaterialPointArcTween(t3, _this._cornerFor$2(t4, t2));
      t2 = diagonal.endId;
      _this.__MaterialRectArcTween__endArc_A = new A.MaterialPointArcTween(_this._cornerFor$2(t1, t2), _this._cornerFor$2(t4, t2));
      _this._arc$_dirty = false;
    },
    _cornerFor$2(rect, id) {
      switch (id.index) {
        case 0:
          return new A.Offset(rect.left, rect.top);
        case 1:
          return new A.Offset(rect.right, rect.top);
        case 2:
          return new A.Offset(rect.left, rect.bottom);
        case 3:
          return new A.Offset(rect.right, rect.bottom);
      }
    },
    get$beginArc() {
      var t1, _this = this;
      if (_this.begin == null)
        return null;
      if (_this._arc$_dirty)
        _this._initialize$0();
      t1 = _this.__MaterialRectArcTween__beginArc_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      return t1;
    },
    get$endArc() {
      var t1, _this = this;
      if (_this.end == null)
        return null;
      if (_this._arc$_dirty)
        _this._initialize$0();
      t1 = _this.__MaterialRectArcTween__endArc_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      return t1;
    },
    set$begin(value) {
      if (!J.$eq$(value, this.begin)) {
        this.begin = value;
        this._arc$_dirty = true;
      }
    },
    set$end(value) {
      if (!J.$eq$(value, this.end)) {
        this.end = value;
        this._arc$_dirty = true;
      }
    },
    lerp$1(t) {
      var t1, t2, _this = this;
      if (_this._arc$_dirty)
        _this._initialize$0();
      if (t === 0) {
        t1 = _this.begin;
        t1.toString;
        return t1;
      }
      if (t === 1) {
        t1 = _this.end;
        t1.toString;
        return t1;
      }
      t1 = _this.__MaterialRectArcTween__beginArc_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1 = t1.lerp$1(t);
      t2 = _this.__MaterialRectArcTween__endArc_A;
      t2 === $ && A.throwUnnamedLateFieldNI();
      return A.Rect$fromPoints(t1, t2.lerp$1(t));
    },
    toString$0(_) {
      var _this = this;
      return "MaterialRectArcTween(" + A.S(_this.begin) + " \u2192 " + A.S(_this.end) + "; beginArc=" + A.S(_this.get$beginArc()) + ", endArc=" + A.S(_this.get$endArc()) + ")";
    }
  };
  A.MaterialRectArcTween__initialize_closure.prototype = {
    call$1(d) {
      var delta, $length,
        t1 = this.$this,
        t2 = this.centersVector,
        t3 = t1.begin;
      t3.toString;
      delta = t1._cornerFor$2(t3, d.endId).$sub(0, t1._cornerFor$2(t3, d.beginId));
      $length = delta.get$distance();
      return t2._dx * delta._dx / $length + t2._dy * delta._dy / $length;
    },
    $signature: 112
  };
  A.BadgeThemeData.prototype = {
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(_this.backgroundColor, _this.textColor, _this.smallSize, _this.largeSize, _this.textStyle, _this.padding, _this.alignment, _this.offset, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      return other instanceof A.BadgeThemeData && J.$eq$(other.backgroundColor, _this.backgroundColor) && J.$eq$(other.textColor, _this.textColor) && other.smallSize == _this.smallSize && other.largeSize == _this.largeSize && J.$eq$(other.textStyle, _this.textStyle) && J.$eq$(other.padding, _this.padding) && J.$eq$(other.alignment, _this.alignment) && J.$eq$(other.offset, _this.offset);
    }
  };
  A._BadgeThemeData_Object_Diagnosticable.prototype = {};
  A.MaterialBannerThemeData.prototype = {
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(_this.backgroundColor, _this.surfaceTintColor, _this.shadowColor, _this.dividerColor, _this.contentTextStyle, _this.elevation, _this.padding, _this.leadingPadding, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      return other instanceof A.MaterialBannerThemeData && J.$eq$(other.backgroundColor, _this.backgroundColor) && J.$eq$(other.surfaceTintColor, _this.surfaceTintColor) && J.$eq$(other.shadowColor, _this.shadowColor) && J.$eq$(other.dividerColor, _this.dividerColor) && J.$eq$(other.contentTextStyle, _this.contentTextStyle) && other.elevation == _this.elevation && J.$eq$(other.padding, _this.padding) && J.$eq$(other.leadingPadding, _this.leadingPadding);
    }
  };
  A._MaterialBannerThemeData_Object_Diagnosticable.prototype = {};
  A.BottomAppBarTheme.prototype = {
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(_this.color, _this.elevation, _this.shape, _this.height, _this.surfaceTintColor, _this.shadowColor, _this.padding, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      return other instanceof A.BottomAppBarTheme && J.$eq$(other.color, _this.color) && other.elevation == _this.elevation && other.height == _this.height && J.$eq$(other.surfaceTintColor, _this.surfaceTintColor) && J.$eq$(other.shadowColor, _this.shadowColor) && J.$eq$(other.padding, _this.padding);
    }
  };
  A._BottomAppBarTheme_Object_Diagnosticable.prototype = {};
  A.BottomNavigationBarThemeData.prototype = {
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(_this.backgroundColor, _this.elevation, _this.selectedIconTheme, _this.unselectedIconTheme, _this.selectedItemColor, _this.unselectedItemColor, _this.selectedLabelStyle, _this.unselectedLabelStyle, _this.showSelectedLabels, _this.showUnselectedLabels, _this.type, _this.enableFeedback, _this.landscapeLayout, _this.mouseCursor, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      t1 = false;
      if (other instanceof A.BottomNavigationBarThemeData)
        if (J.$eq$(other.backgroundColor, _this.backgroundColor))
          if (other.elevation == _this.elevation)
            if (J.$eq$(other.selectedIconTheme, _this.selectedIconTheme))
              if (J.$eq$(other.unselectedIconTheme, _this.unselectedIconTheme))
                if (J.$eq$(other.selectedItemColor, _this.selectedItemColor))
                  if (J.$eq$(other.unselectedItemColor, _this.unselectedItemColor))
                    if (J.$eq$(other.selectedLabelStyle, _this.selectedLabelStyle))
                      t1 = J.$eq$(other.unselectedLabelStyle, _this.unselectedLabelStyle);
      return t1;
    }
  };
  A._BottomNavigationBarThemeData_Object_Diagnosticable.prototype = {};
  A.BottomSheetThemeData.prototype = {
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(_this.get$backgroundColor(), _this.get$surfaceTintColor(), _this.elevation, _this.modalBackgroundColor, _this.modalBarrierColor, _this.get$shadowColor(), _this.modalElevation, _this.shape, _this.clipBehavior, _this.constraints, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      t1 = false;
      if (other instanceof A.BottomSheetThemeData)
        if (J.$eq$(other.get$backgroundColor(), _this.get$backgroundColor()))
          if (J.$eq$(other.get$surfaceTintColor(), _this.get$surfaceTintColor()))
            if (other.elevation == _this.elevation)
              if (J.$eq$(other.modalBackgroundColor, _this.modalBackgroundColor))
                if (J.$eq$(other.get$shadowColor(), _this.get$shadowColor()))
                  if (J.$eq$(other.modalBarrierColor, _this.modalBarrierColor))
                    if (other.modalElevation == _this.modalElevation)
                      if (J.$eq$(other.shape, _this.shape))
                        t1 = J.$eq$(other.constraints, _this.constraints);
      return t1;
    },
    get$backgroundColor() {
      return this.backgroundColor;
    },
    get$surfaceTintColor() {
      return this.surfaceTintColor;
    },
    get$shadowColor() {
      return this.shadowColor;
    }
  };
  A._BottomSheetThemeData_Object_Diagnosticable.prototype = {};
  A.ButtonBarThemeData.prototype = {
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(_this.alignment, _this.mainAxisSize, _this.buttonTextTheme, _this.buttonMinWidth, _this.buttonHeight, _this.buttonPadding, _this.buttonAlignedDropdown, _this.layoutBehavior, _this.overflowDirection, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      t1 = false;
      if (other instanceof A.ButtonBarThemeData)
        if (other.buttonMinWidth == _this.buttonMinWidth)
          if (other.buttonHeight == _this.buttonHeight)
            t1 = J.$eq$(other.buttonPadding, _this.buttonPadding);
      return t1;
    }
  };
  A._ButtonBarThemeData_Object_Diagnosticable.prototype = {};
  A.ButtonStyle.prototype = {
    copyWith$22$alignment$animationDuration$backgroundColor$elevation$enableFeedback$fixedSize$foregroundColor$iconColor$iconSize$maximumSize$minimumSize$mouseCursor$overlayColor$padding$shadowColor$shape$side$splashFactory$surfaceTintColor$tapTargetSize$textStyle$visualDensity(alignment, animationDuration, backgroundColor, elevation, enableFeedback, fixedSize, foregroundColor, iconColor, iconSize, maximumSize, minimumSize, mouseCursor, overlayColor, padding, shadowColor, shape, side, splashFactory, surfaceTintColor, tapTargetSize, textStyle, visualDensity) {
      var _this = this,
        t1 = textStyle == null ? _this.get$textStyle() : textStyle,
        t2 = backgroundColor == null ? _this.get$backgroundColor() : backgroundColor,
        t3 = foregroundColor == null ? _this.get$foregroundColor() : foregroundColor,
        t4 = overlayColor == null ? _this.get$overlayColor() : overlayColor,
        t5 = shadowColor == null ? _this.get$shadowColor() : shadowColor,
        t6 = surfaceTintColor == null ? _this.get$surfaceTintColor() : surfaceTintColor,
        t7 = elevation == null ? _this.get$elevation() : elevation,
        t8 = padding == null ? _this.get$padding() : padding,
        t9 = minimumSize == null ? _this.get$minimumSize() : minimumSize,
        t10 = fixedSize == null ? _this.fixedSize : fixedSize,
        t11 = maximumSize == null ? _this.get$maximumSize() : maximumSize,
        t12 = iconColor == null ? _this.iconColor : iconColor,
        t13 = iconSize == null ? _this.get$iconSize() : iconSize,
        t14 = side == null ? _this.get$side() : side,
        t15 = shape == null ? _this.get$shape() : shape,
        t16 = mouseCursor == null ? _this.get$mouseCursor() : mouseCursor,
        t17 = visualDensity == null ? _this.get$visualDensity() : visualDensity,
        t18 = tapTargetSize == null ? _this.get$tapTargetSize() : tapTargetSize,
        t19 = animationDuration == null ? _this.animationDuration : animationDuration,
        t20 = enableFeedback == null ? _this.enableFeedback : enableFeedback,
        t21 = alignment == null ? _this.alignment : alignment;
      return A.ButtonStyle$(t21, t19, t2, t7, t20, t10, t3, t12, t13, t11, t9, t16, t4, t8, t5, t15, t14, splashFactory == null ? _this.get$splashFactory() : splashFactory, t6, t18, t1, t17);
    },
    copyWith$3$foregroundColor$iconSize$overlayColor(foregroundColor, iconSize, overlayColor) {
      var _null = null;
      return this.copyWith$22$alignment$animationDuration$backgroundColor$elevation$enableFeedback$fixedSize$foregroundColor$iconColor$iconSize$maximumSize$minimumSize$mouseCursor$overlayColor$padding$shadowColor$shape$side$splashFactory$surfaceTintColor$tapTargetSize$textStyle$visualDensity(_null, _null, _null, _null, _null, _null, foregroundColor, _null, iconSize, _null, _null, _null, overlayColor, _null, _null, _null, _null, _null, _null, _null, _null, _null);
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hashAll([_this.get$textStyle(), _this.get$backgroundColor(), _this.get$foregroundColor(), _this.get$overlayColor(), _this.get$shadowColor(), _this.get$surfaceTintColor(), _this.get$elevation(), _this.get$padding(), _this.get$minimumSize(), _this.fixedSize, _this.get$maximumSize(), _this.iconColor, _this.get$iconSize(), _this.get$side(), _this.get$shape(), _this.get$mouseCursor(), _this.get$visualDensity(), _this.get$tapTargetSize(), _this.animationDuration, _this.enableFeedback, _this.alignment, _this.get$splashFactory()]);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      return other instanceof A.ButtonStyle && other.get$textStyle() == _this.get$textStyle() && J.$eq$(other.get$backgroundColor(), _this.get$backgroundColor()) && other.get$foregroundColor() == _this.get$foregroundColor() && other.get$overlayColor() == _this.get$overlayColor() && other.get$shadowColor() == _this.get$shadowColor() && other.get$surfaceTintColor() == _this.get$surfaceTintColor() && other.get$elevation() == _this.get$elevation() && other.get$padding() == _this.get$padding() && other.get$minimumSize() == _this.get$minimumSize() && other.fixedSize == _this.fixedSize && other.get$maximumSize() == _this.get$maximumSize() && other.iconColor == _this.iconColor && other.get$iconSize() == _this.get$iconSize() && other.get$side() == _this.get$side() && other.get$shape() == _this.get$shape() && other.get$mouseCursor() == _this.get$mouseCursor() && J.$eq$(other.get$visualDensity(), _this.get$visualDensity()) && other.get$tapTargetSize() == _this.get$tapTargetSize() && J.$eq$(other.animationDuration, _this.animationDuration) && other.enableFeedback == _this.enableFeedback && J.$eq$(other.alignment, _this.alignment) && other.get$splashFactory() == _this.get$splashFactory();
    },
    get$textStyle() {
      return this.textStyle;
    },
    get$backgroundColor() {
      return this.backgroundColor;
    },
    get$foregroundColor() {
      return this.foregroundColor;
    },
    get$overlayColor() {
      return this.overlayColor;
    },
    get$shadowColor() {
      return this.shadowColor;
    },
    get$surfaceTintColor() {
      return this.surfaceTintColor;
    },
    get$elevation() {
      return this.elevation;
    },
    get$padding() {
      return this.padding;
    },
    get$minimumSize() {
      return this.minimumSize;
    },
    get$maximumSize() {
      return this.maximumSize;
    },
    get$iconSize() {
      return this.iconSize;
    },
    get$side() {
      return this.side;
    },
    get$shape() {
      return this.shape;
    },
    get$mouseCursor() {
      return this.mouseCursor;
    },
    get$visualDensity() {
      return this.visualDensity;
    },
    get$tapTargetSize() {
      return this.tapTargetSize;
    },
    get$splashFactory() {
      return this.splashFactory;
    }
  };
  A._LerpSides.prototype = {
    resolve$1(states) {
      var resolvedB, _this = this,
        t1 = _this.a,
        resolvedA = t1 == null ? null : t1.resolve$1(states);
      t1 = _this.b;
      resolvedB = t1 == null ? null : t1.resolve$1(states);
      t1 = resolvedA == null;
      if (t1 && resolvedB == null)
        return null;
      if (t1) {
        t1 = resolvedB.color.value;
        return A.BorderSide_lerp(new A.BorderSide(A.Color$fromARGB(0, t1 >>> 16 & 255, t1 >>> 8 & 255, t1 & 255), 0, B.BorderStyle_1, -1), resolvedB, _this.t);
      }
      if (resolvedB == null) {
        t1 = resolvedA.color.value;
        return A.BorderSide_lerp(resolvedA, new A.BorderSide(A.Color$fromARGB(0, t1 >>> 16 & 255, t1 >>> 8 & 255, t1 & 255), 0, B.BorderStyle_1, -1), _this.t);
      }
      return A.BorderSide_lerp(resolvedA, resolvedB, _this.t);
    },
    $isMaterialStateProperty: 1
  };
  A._ButtonStyle_Object_Diagnosticable.prototype = {};
  A.ButtonStyleButton.prototype = {
    createState$0() {
      return new A._ButtonStyleState(null, null);
    }
  };
  A._ButtonStyleState.prototype = {
    handleStatesControllerChange$0() {
      this.setState$1(new A._ButtonStyleState_handleStatesControllerChange_closure());
    },
    get$statesController() {
      var t1 = this._widget.statesController;
      if (t1 == null) {
        t1 = this.internalStatesController;
        t1.toString;
      }
      return t1;
    },
    initStatesController$0() {
      var t1, _this = this;
      if (_this._widget.statesController == null)
        _this.internalStatesController = A.MaterialStatesController$(null);
      t1 = _this.get$statesController();
      _this._widget.toString;
      t1.update$2(B.MaterialState_6, false);
      _this.get$statesController().addListener$1(_this.get$handleStatesControllerChange());
    },
    initState$0() {
      this.super$State$initState();
      this.initStatesController$0();
    },
    didUpdateWidget$1(oldWidget) {
      var t1, _this = this;
      _this.super$State$didUpdateWidget(oldWidget);
      t1 = oldWidget.statesController;
      if (_this._widget.statesController != t1) {
        if (t1 != null)
          t1.removeListener$1(_this.get$handleStatesControllerChange());
        if (_this._widget.statesController != null) {
          t1 = _this.internalStatesController;
          if (t1 != null) {
            t1.ChangeNotifier__listeners = $.$get$ChangeNotifier__emptyListeners();
            t1.ChangeNotifier__count = 0;
          }
          _this.internalStatesController = null;
        }
        _this.initStatesController$0();
      }
      _this._widget.toString;
    },
    dispose$0() {
      var t1, _this = this;
      _this.get$statesController().removeListener$1(_this.get$handleStatesControllerChange());
      t1 = _this.internalStatesController;
      if (t1 != null) {
        t1.ChangeNotifier__listeners = $.$get$ChangeNotifier__emptyListeners();
        t1.ChangeNotifier__count = 0;
      }
      t1 = _this.controller;
      if (t1 != null)
        t1.dispose$0();
      _this.super$__ButtonStyleState_State_TickerProviderStateMixin$dispose();
    },
    build$1(context) {
      var resolvedElevation, resolvedTextStyle, t2, resolvedBackgroundColor, resolvedForegroundColor, resolvedShadowColor, resolvedSurfaceTintColor, resolvedPadding, t3, resolvedMinimumSize, resolvedFixedSize, resolvedMaximumSize, resolvedIconColor, resolvedIconSize, resolvedSide, resolvedShape, resolvedVisualDensity, resolvedTapTargetSize, resolvedAnimationDuration, resolvedEnableFeedback, resolvedAlignment, densityAdjustment, resolvedSplashFactory, effectiveConstraints, size, dy, dx, padding, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, minSize, _this = this, _null = null,
        t1 = _this._widget,
        effectiveValue = new A._ButtonStyleState_build_effectiveValue(t1.style, t1.themeStyleOf$1(context), _this._widget.defaultStyleOf$1(context)),
        resolve = new A._ButtonStyleState_build_resolve(_this, effectiveValue);
      t1 = type$.nullable_double;
      resolvedElevation = resolve.call$1$1(new A._ButtonStyleState_build_closure(), t1);
      resolvedTextStyle = resolve.call$1$1(new A._ButtonStyleState_build_closure0(), type$.nullable_TextStyle);
      t2 = type$.nullable_Color;
      resolvedBackgroundColor = resolve.call$1$1(new A._ButtonStyleState_build_closure1(), t2);
      resolvedForegroundColor = resolve.call$1$1(new A._ButtonStyleState_build_closure2(), t2);
      resolvedShadowColor = resolve.call$1$1(new A._ButtonStyleState_build_closure3(), t2);
      resolvedSurfaceTintColor = resolve.call$1$1(new A._ButtonStyleState_build_closure4(), t2);
      resolvedPadding = resolve.call$1$1(new A._ButtonStyleState_build_closure5(), type$.nullable_EdgeInsetsGeometry);
      t3 = type$.nullable_Size;
      resolvedMinimumSize = resolve.call$1$1(new A._ButtonStyleState_build_closure6(), t3);
      resolvedFixedSize = resolve.call$1$1(new A._ButtonStyleState_build_closure7(), t3);
      resolvedMaximumSize = resolve.call$1$1(new A._ButtonStyleState_build_closure8(), t3);
      resolvedIconColor = resolve.call$1$1(new A._ButtonStyleState_build_closure9(), t2);
      resolvedIconSize = resolve.call$1$1(new A._ButtonStyleState_build_closure10(), t1);
      resolvedSide = resolve.call$1$1(new A._ButtonStyleState_build_closure11(), type$.nullable_BorderSide);
      resolvedShape = resolve.call$1$1(new A._ButtonStyleState_build_closure12(), type$.nullable_OutlinedBorder);
      resolvedVisualDensity = effectiveValue.call$1$1(new A._ButtonStyleState_build_closure13(), type$.VisualDensity);
      resolvedTapTargetSize = effectiveValue.call$1$1(new A._ButtonStyleState_build_closure14(), type$.MaterialTapTargetSize);
      resolvedAnimationDuration = effectiveValue.call$1$1(new A._ButtonStyleState_build_closure15(), type$.Duration);
      resolvedEnableFeedback = effectiveValue.call$1$1(new A._ButtonStyleState_build_closure16(), type$.bool);
      resolvedAlignment = effectiveValue.call$1$1(new A._ButtonStyleState_build_closure17(), type$.AlignmentGeometry);
      densityAdjustment = new A.Offset(resolvedVisualDensity.horizontal, resolvedVisualDensity.vertical).$mul(0, 4);
      resolvedSplashFactory = effectiveValue.call$1$1(new A._ButtonStyleState_build_closure18(), type$.InteractiveInkFeatureFactory);
      t1 = resolvedMinimumSize._dx;
      t2 = resolvedMinimumSize._dy;
      effectiveConstraints = resolvedVisualDensity.effectiveConstraints$1(new A.BoxConstraints(t1, resolvedMaximumSize._dx, t2, resolvedMaximumSize._dy));
      if (resolvedFixedSize != null) {
        size = effectiveConstraints.constrain$1(resolvedFixedSize);
        t1 = size._dx;
        if (isFinite(t1))
          effectiveConstraints = effectiveConstraints.copyWith$2$maxWidth$minWidth(t1, t1);
        t1 = size._dy;
        if (isFinite(t1))
          effectiveConstraints = effectiveConstraints.copyWith$2$maxHeight$minHeight(t1, t1);
      }
      dy = densityAdjustment._dy;
      t1 = densityAdjustment._dx;
      dx = Math.max(0, t1);
      padding = resolvedPadding.add$1(0, new A.EdgeInsets(dx, dy, dx, dy)).clamp$2(0, B.EdgeInsets_0_0_0_0, B._MixedEdgeInsets_rAd);
      t2 = false;
      if (resolvedAnimationDuration._duration > 0) {
        t3 = _this.elevation;
        if (t3 != null) {
          t2 = _this.backgroundColor;
          t2 = t2 != null && t3 !== resolvedElevation && t2.get$value() !== resolvedBackgroundColor.get$value() && (_this.backgroundColor.get$value() >>> 24 & 255) / 255 === 1 && (resolvedBackgroundColor.get$value() >>> 24 & 255) / 255 < 1 && resolvedElevation === 0;
        }
      }
      if (t2) {
        t2 = _this.controller;
        if (!J.$eq$(t2 == null ? _null : t2.duration, resolvedAnimationDuration)) {
          t2 = _this.controller;
          if (t2 != null)
            t2.dispose$0();
          t2 = A.AnimationController$(_null, resolvedAnimationDuration, _null, _null, _this);
          t2.didRegisterListener$0();
          t3 = t2.AnimationLocalStatusListenersMixin__statusListeners;
          t3._isDirty = true;
          t3._observer_list$_list.push(new A._ButtonStyleState_build_closure19(_this));
          _this.controller = t2;
        }
        resolvedBackgroundColor = _this.backgroundColor;
        _this.controller.set$value(0);
        _this.controller.forward$0();
      }
      _this.elevation = resolvedElevation;
      _this.backgroundColor = resolvedBackgroundColor;
      resolvedElevation.toString;
      t2 = resolvedTextStyle == null ? _null : resolvedTextStyle.copyWith$1$color(resolvedForegroundColor);
      t3 = resolvedShape.copyWith$1$side(resolvedSide);
      t4 = resolvedBackgroundColor == null ? B.MaterialType_4 : B.MaterialType_3;
      t5 = _this._widget;
      t6 = t5.clipBehavior;
      t7 = t5.onPressed;
      t8 = t5.onLongPress;
      t9 = t5.onHover;
      t10 = t5.focusNode;
      t5 = t5.onFocusChange;
      t11 = resolvedShape.copyWith$1$side(resolvedSide);
      t12 = _this.get$statesController();
      t13 = resolvedIconColor == null ? resolvedForegroundColor : resolvedIconColor;
      resolvedAlignment.toString;
      t4 = A.Material$(resolvedAnimationDuration, A.InkWell$(false, true, A.IconTheme_merge(new A.Padding(padding, new A.Align(resolvedAlignment, 1, 1, _this._widget.child, _null), _null), new A.IconThemeData(resolvedIconSize, _null, _null, _null, _null, t13, _null, _null)), t11, resolvedEnableFeedback, _null, t10, B.Color_0, _null, new A._MouseCursor(new A._ButtonStyleState_build_closure20(effectiveValue)), t5, _null, t9, t8, t7, new A._MaterialStatePropertyWith(new A._ButtonStyleState_build_closure21(effectiveValue), type$._MaterialStatePropertyWith_nullable_Color), _null, resolvedSplashFactory, t12), t6, resolvedBackgroundColor, resolvedElevation, _null, resolvedShadowColor, t3, resolvedSurfaceTintColor, t2, t4);
      switch (resolvedTapTargetSize.index) {
        case 0:
          minSize = new A.Size(48 + t1, 48 + dy);
          break;
        case 1:
          minSize = B.Size_0_0;
          break;
        default:
          minSize = _null;
      }
      return A.Semantics$(true, _null, new A._InputPadding(minSize, new A.ConstrainedBox(effectiveConstraints, t4, _null), _null), true, true, false, false, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
    }
  };
  A._ButtonStyleState_handleStatesControllerChange_closure.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A._ButtonStyleState_build_effectiveValue.prototype = {
    call$1$1(getProperty, $T) {
      var widgetValue = getProperty.call$1(this.widgetStyle),
        themeValue = getProperty.call$1(this.themeStyle),
        defaultValue = getProperty.call$1(this.defaultStyle),
        t1 = widgetValue == null ? themeValue : widgetValue;
      return t1 == null ? defaultValue : t1;
    },
    call$1(getProperty) {
      return this.call$1$1(getProperty, type$.dynamic);
    },
    $signature: 114
  };
  A._ButtonStyleState_build_resolve.prototype = {
    call$1$1(getProperty, $T) {
      return this.effectiveValue.call$1$1(new A._ButtonStyleState_build_resolve_closure(this.$this, getProperty, $T), $T);
    },
    call$1(getProperty) {
      return this.call$1$1(getProperty, type$.dynamic);
    },
    $signature: 120
  };
  A._ButtonStyleState_build_resolve_closure.prototype = {
    call$1(style) {
      var t1 = this.getProperty.call$1(style);
      return t1 == null ? null : t1.resolve$1(this.$this.get$statesController()._change_notifier$_value);
    },
    $signature() {
      return this.T._eval$1("0?(ButtonStyle?)");
    }
  };
  A._ButtonStyleState_build_closure.prototype = {
    call$1(style) {
      return style == null ? null : style.get$elevation();
    },
    $signature: 65
  };
  A._ButtonStyleState_build_closure0.prototype = {
    call$1(style) {
      return style == null ? null : style.get$textStyle();
    },
    $signature: 125
  };
  A._ButtonStyleState_build_closure1.prototype = {
    call$1(style) {
      return style == null ? null : style.get$backgroundColor();
    },
    $signature: 25
  };
  A._ButtonStyleState_build_closure2.prototype = {
    call$1(style) {
      return style == null ? null : style.get$foregroundColor();
    },
    $signature: 25
  };
  A._ButtonStyleState_build_closure3.prototype = {
    call$1(style) {
      return style == null ? null : style.get$shadowColor();
    },
    $signature: 25
  };
  A._ButtonStyleState_build_closure4.prototype = {
    call$1(style) {
      return style == null ? null : style.get$surfaceTintColor();
    },
    $signature: 25
  };
  A._ButtonStyleState_build_closure5.prototype = {
    call$1(style) {
      return style == null ? null : style.get$padding();
    },
    $signature: 141
  };
  A._ButtonStyleState_build_closure6.prototype = {
    call$1(style) {
      return style == null ? null : style.get$minimumSize();
    },
    $signature: 37
  };
  A._ButtonStyleState_build_closure7.prototype = {
    call$1(style) {
      return style == null ? null : style.fixedSize;
    },
    $signature: 37
  };
  A._ButtonStyleState_build_closure8.prototype = {
    call$1(style) {
      return style == null ? null : style.get$maximumSize();
    },
    $signature: 37
  };
  A._ButtonStyleState_build_closure9.prototype = {
    call$1(style) {
      return style == null ? null : style.iconColor;
    },
    $signature: 25
  };
  A._ButtonStyleState_build_closure10.prototype = {
    call$1(style) {
      return style == null ? null : style.get$iconSize();
    },
    $signature: 65
  };
  A._ButtonStyleState_build_closure11.prototype = {
    call$1(style) {
      return style == null ? null : style.get$side();
    },
    $signature: 149
  };
  A._ButtonStyleState_build_closure12.prototype = {
    call$1(style) {
      return style == null ? null : style.get$shape();
    },
    $signature: 153
  };
  A._ButtonStyleState_build_closure20.prototype = {
    call$1(states) {
      return this.effectiveValue.call$1$1(new A._ButtonStyleState_build__closure0(states), type$.MouseCursor);
    },
    $signature: 155
  };
  A._ButtonStyleState_build__closure0.prototype = {
    call$1(style) {
      var t1;
      if (style == null)
        t1 = null;
      else {
        t1 = style.get$mouseCursor();
        t1 = t1 == null ? null : t1.resolve$1(this.states);
      }
      return t1;
    },
    $signature: 164
  };
  A._ButtonStyleState_build_closure21.prototype = {
    call$1(states) {
      return this.effectiveValue.call$1$1(new A._ButtonStyleState_build__closure(states), type$.Color);
    },
    $signature: 66
  };
  A._ButtonStyleState_build__closure.prototype = {
    call$1(style) {
      var t1;
      if (style == null)
        t1 = null;
      else {
        t1 = style.get$overlayColor();
        t1 = t1 == null ? null : t1.resolve$1(this.states);
      }
      return t1;
    },
    $signature: 167
  };
  A._ButtonStyleState_build_closure13.prototype = {
    call$1(style) {
      return style == null ? null : style.get$visualDensity();
    },
    $signature: 170
  };
  A._ButtonStyleState_build_closure14.prototype = {
    call$1(style) {
      return style == null ? null : style.get$tapTargetSize();
    },
    $signature: 179
  };
  A._ButtonStyleState_build_closure15.prototype = {
    call$1(style) {
      return style == null ? null : style.animationDuration;
    },
    $signature: 186
  };
  A._ButtonStyleState_build_closure16.prototype = {
    call$1(style) {
      return style == null ? null : style.enableFeedback;
    },
    $signature: 189
  };
  A._ButtonStyleState_build_closure17.prototype = {
    call$1(style) {
      return style == null ? null : style.alignment;
    },
    $signature: 192
  };
  A._ButtonStyleState_build_closure18.prototype = {
    call$1(style) {
      return style == null ? null : style.get$splashFactory();
    },
    $signature: 203
  };
  A._ButtonStyleState_build_closure19.prototype = {
    call$1($status) {
      if ($status === B.AnimationStatus_3)
        this.$this.setState$1(new A._ButtonStyleState_build__closure1());
    },
    $signature: 2
  };
  A._ButtonStyleState_build__closure1.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A._MouseCursor.prototype = {
    resolve$1(states) {
      var t1 = this.resolveCallback.call$1(states);
      t1.toString;
      return t1;
    },
    get$debugDescription() {
      return "ButtonStyleButton_MouseCursor";
    }
  };
  A._InputPadding.prototype = {
    createRenderObject$1(context) {
      var t1 = new A._RenderInputPadding(this.minSize, null, A.LayerHandle$());
      t1.RenderObject$0();
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      renderObject.set$minSize(this.minSize);
    }
  };
  A._RenderInputPadding.prototype = {
    set$minSize(value) {
      if (this._minSize.$eq(0, value))
        return;
      this._minSize = value;
      this.markNeedsLayout$0();
    },
    _computeSize$2$constraints$layoutChild(constraints, layoutChild) {
      var childSize, t2,
        t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null) {
        childSize = layoutChild.call$2(t1, constraints);
        t1 = childSize._dx;
        t2 = this._minSize;
        return constraints.constrain$1(new A.Size(Math.max(t1, t2._dx), Math.max(childSize._dy, t2._dy)));
      }
      return B.Size_0_0;
    },
    computeDryLayout$1(constraints) {
      return this._computeSize$2$constraints$layoutChild(constraints, A.layout_helper_ChildLayoutHelper_dryLayoutChild$closure());
    },
    performLayout$0() {
      var t2, t3, _this = this,
        t1 = _this._computeSize$2$constraints$layoutChild(A.RenderObject.prototype.get$constraints.call(_this), A.layout_helper_ChildLayoutHelper_layoutChild$closure());
      _this._size = t1;
      t2 = _this.RenderObjectWithChildMixin__child;
      if (t2 != null) {
        t3 = t2.parentData;
        t3.toString;
        type$.BoxParentData._as(t3);
        t2 = t2._size;
        t2.toString;
        t3.offset = B.Alignment_0_0.alongOffset$1(type$.Offset._as(t1.$sub(0, t2)));
      }
    },
    hitTest$2$position(result, position) {
      var center;
      if (this.super$RenderBox$hitTest(result, position))
        return true;
      center = this.RenderObjectWithChildMixin__child._size.center$1(B.Offset_0_0);
      return result.addWithRawTransform$3$hitTest$position$transform(new A._RenderInputPadding_hitTest_closure(this, center), center, A.MatrixUtils_forceToPoint(center));
    }
  };
  A._RenderInputPadding_hitTest_closure.prototype = {
    call$2(result, position) {
      return this.$this.RenderObjectWithChildMixin__child.hitTest$2$position(result, this.center);
    },
    $signature: 13
  };
  A.__ButtonStyleState_State_TickerProviderStateMixin.prototype = {
    activate$0() {
      this.super$State$activate();
      this._updateTickerModeNotifier$0();
      this._updateTickers$0();
    },
    dispose$0() {
      var _this = this,
        t1 = _this.TickerProviderStateMixin__tickerModeNotifier;
      if (t1 != null)
        t1.removeListener$1(_this.get$_updateTickers());
      _this.TickerProviderStateMixin__tickerModeNotifier = null;
      _this.super$State$dispose();
    }
  };
  A.ButtonTextTheme.prototype = {
    _enumToString$0() {
      return "ButtonTextTheme." + this._name;
    }
  };
  A.ButtonThemeData.prototype = {
    get$padding() {
      switch (0) {
        case 0:
        case 1:
          return B.EdgeInsets_16_0_16_0;
      }
    },
    get$shape() {
      switch (0) {
        case 0:
        case 1:
          return B.RoundedRectangleBorder_DBK;
      }
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      return other instanceof A.ButtonThemeData && other.get$padding().$eq(0, _this.get$padding()) && other.get$shape().$eq(0, _this.get$shape()) && J.$eq$(other._buttonColor, _this._buttonColor) && J.$eq$(other._button_theme$_focusColor, _this._button_theme$_focusColor) && J.$eq$(other._button_theme$_hoverColor, _this._button_theme$_hoverColor) && J.$eq$(other.colorScheme, _this.colorScheme) && other._materialTapTargetSize == _this._materialTapTargetSize;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(B.ButtonTextTheme_0, 88, 36, _this.get$padding(), _this.get$shape(), false, _this._buttonColor, _this._disabledColor, _this._button_theme$_focusColor, _this._button_theme$_hoverColor, _this._highlightColor, _this._splashColor, _this.colorScheme, _this._materialTapTargetSize, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    }
  };
  A._ButtonThemeData_Object_Diagnosticable.prototype = {};
  A.CardTheme.prototype = {
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(_this.clipBehavior, _this.color, _this.shadowColor, _this.surfaceTintColor, _this.elevation, _this.margin, _this.shape, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      return other instanceof A.CardTheme && J.$eq$(other.color, _this.color) && J.$eq$(other.shadowColor, _this.shadowColor) && J.$eq$(other.surfaceTintColor, _this.surfaceTintColor) && other.elevation == _this.elevation && J.$eq$(other.margin, _this.margin) && J.$eq$(other.shape, _this.shape);
    }
  };
  A._CardTheme_Object_Diagnosticable.prototype = {};
  A.Checkbox.prototype = {
    createState$0() {
      return new A._CheckboxState(new A._CheckboxPainter($.$get$ChangeNotifier__emptyListeners()), $, $, $, $, $, $, $, $, $, null, false, false, null, null);
    }
  };
  A._CheckboxState.prototype = {
    initState$0() {
      this.super$__CheckboxState_State_TickerProviderStateMixin_ToggleableStateMixin$initState();
      this._widget.toString;
      this._previousValue = true;
    },
    didUpdateWidget$1(oldWidget) {
      this.super$State$didUpdateWidget(oldWidget);
      this._widget.toString;
    },
    dispose$0() {
      this._checkbox$_painter.dispose$0();
      this.super$__CheckboxState_State_TickerProviderStateMixin_ToggleableStateMixin$dispose();
    },
    get$_widgetFillColor() {
      return new A._MaterialStatePropertyWith(new A._CheckboxState__widgetFillColor_closure(this), type$._MaterialStatePropertyWith_nullable_Color);
    },
    _resolveSide$1(side) {
      if (!this.get$states().contains$1(0, B.MaterialState_4))
        return side;
      return null;
    },
    build$1(context) {
      var checkboxTheme, defaults, effectiveMaterialTapTargetSize, effectiveVisualDensity, size, activeStates, inactiveStates, activeColor, t1, t2, effectiveActiveColor, inactiveColor, t3, effectiveInactiveColor, focusedStates, t4, effectiveFocusOverlayColor, hoveredStates, effectiveHoverOverlayColor, effectiveActivePressedOverlayColor, effectiveInactivePressedOverlayColor, checkStates, effectiveCheckColor, effectiveSplashRadius, value, result, _this = this, _null = null;
      context.dependOnInheritedWidgetOfExactType$1$0(type$.CheckboxTheme);
      checkboxTheme = A.Theme_of(context).checkboxTheme;
      A.Theme_of(context);
      defaults = new A._CheckboxDefaultsM2(A.Theme_of(context), A.Theme_of(context).colorScheme, _null, _null, _null, _null, _null, _null, _null, _null, _null);
      _this._widget.toString;
      effectiveMaterialTapTargetSize = defaults.get$materialTapTargetSize();
      _this._widget.toString;
      effectiveVisualDensity = defaults.get$visualDensity();
      switch (effectiveMaterialTapTargetSize.index) {
        case 0:
          size = B.Size_48_48;
          break;
        case 1:
          size = B.Size_40_40;
          break;
        default:
          size = _null;
      }
      size = size.$add(0, new A.Offset(effectiveVisualDensity.horizontal, effectiveVisualDensity.vertical).$mul(0, 4));
      _this.get$states().add$1(0, B.MaterialState_7);
      _this._widget.toString;
      activeStates = _this.get$states();
      activeStates.add$1(0, B.MaterialState_4);
      _this._widget.toString;
      inactiveStates = _this.get$states();
      inactiveStates.remove$1(0, B.MaterialState_4);
      _this._widget.toString;
      activeColor = _this.get$_widgetFillColor()._material_state$_resolve.call$1(activeStates);
      if (activeColor == null) {
        t1 = checkboxTheme.fillColor;
        activeColor = t1 == null ? _null : t1.resolve$1(activeStates);
      }
      t1 = activeColor == null;
      if (t1) {
        t2 = defaults.get$fillColor()._material_state$_resolve.call$1(activeStates);
        t2.toString;
        effectiveActiveColor = t2;
      } else
        effectiveActiveColor = activeColor;
      _this._widget.toString;
      inactiveColor = _this.get$_widgetFillColor()._material_state$_resolve.call$1(inactiveStates);
      if (inactiveColor == null) {
        t2 = checkboxTheme.fillColor;
        inactiveColor = t2 == null ? _null : t2.resolve$1(inactiveStates);
      }
      t2 = inactiveColor == null;
      if (t2) {
        t3 = defaults.get$fillColor()._material_state$_resolve.call$1(inactiveStates);
        t3.toString;
        effectiveInactiveColor = t3;
      } else
        effectiveInactiveColor = inactiveColor;
      _this._widget.toString;
      focusedStates = _this.get$states();
      focusedStates.add$1(0, B.MaterialState_1);
      _this._widget.toString;
      t3 = checkboxTheme.overlayColor;
      t4 = t3 == null ? _null : t3.resolve$1(focusedStates);
      effectiveFocusOverlayColor = t4;
      if (effectiveFocusOverlayColor == null) {
        t4 = defaults.get$overlayColor()._material_state$_resolve.call$1(focusedStates);
        t4.toString;
        effectiveFocusOverlayColor = t4;
      }
      _this._widget.toString;
      hoveredStates = _this.get$states();
      hoveredStates.add$1(0, B.MaterialState_0);
      _this._widget.toString;
      t4 = t3 == null ? _null : t3.resolve$1(hoveredStates);
      effectiveHoverOverlayColor = t4;
      if (effectiveHoverOverlayColor == null) {
        t4 = defaults.get$overlayColor()._material_state$_resolve.call$1(hoveredStates);
        t4.toString;
        effectiveHoverOverlayColor = t4;
      }
      activeStates.add$1(0, B.MaterialState_2);
      _this._widget.toString;
      t4 = t3 == null ? _null : t3.resolve$1(activeStates);
      if (t4 == null) {
        t1 = t1 ? _null : A.Color$fromARGB(31, activeColor.get$value() >>> 16 & 255, activeColor.get$value() >>> 8 & 255, activeColor.get$value() & 255);
        effectiveActivePressedOverlayColor = t1;
      } else
        effectiveActivePressedOverlayColor = t4;
      if (effectiveActivePressedOverlayColor == null) {
        t1 = defaults.get$overlayColor()._material_state$_resolve.call$1(activeStates);
        t1.toString;
        effectiveActivePressedOverlayColor = t1;
      }
      inactiveStates.add$1(0, B.MaterialState_2);
      _this._widget.toString;
      t1 = t3 == null ? _null : t3.resolve$1(inactiveStates);
      if (t1 == null) {
        t1 = t2 ? _null : A.Color$fromARGB(31, inactiveColor.get$value() >>> 16 & 255, inactiveColor.get$value() >>> 8 & 255, inactiveColor.get$value() & 255);
        effectiveInactivePressedOverlayColor = t1;
      } else
        effectiveInactivePressedOverlayColor = t1;
      if (effectiveInactivePressedOverlayColor == null) {
        t1 = defaults.get$overlayColor()._material_state$_resolve.call$1(inactiveStates);
        t1.toString;
        effectiveInactivePressedOverlayColor = t1;
      }
      if (_this.ToggleableStateMixin__downPosition != null) {
        effectiveHoverOverlayColor = _this.get$states().contains$1(0, B.MaterialState_4) ? effectiveActivePressedOverlayColor : effectiveInactivePressedOverlayColor;
        effectiveFocusOverlayColor = _this.get$states().contains$1(0, B.MaterialState_4) ? effectiveActivePressedOverlayColor : effectiveInactivePressedOverlayColor;
      }
      _this._widget.toString;
      checkStates = _this.get$states();
      _this._widget.toString;
      t1 = checkboxTheme.checkColor;
      t1 = t1 == null ? _null : t1.resolve$1(checkStates);
      effectiveCheckColor = t1;
      if (effectiveCheckColor == null) {
        t1 = defaults.get$checkColor().resolve$1(checkStates);
        t1.toString;
        effectiveCheckColor = t1;
      }
      _this._widget.toString;
      effectiveSplashRadius = checkboxTheme.splashRadius;
      if (effectiveSplashRadius == null)
        effectiveSplashRadius = defaults.get$splashRadius();
      _this._widget.toString;
      t1 = _this._checkbox$_painter;
      t2 = _this.ToggleableStateMixin___ToggleableStateMixin__position_A;
      t2 === $ && A.throwUnnamedLateFieldNI();
      t1.set$position(t2);
      t2 = _this.ToggleableStateMixin___ToggleableStateMixin__reaction_A;
      t2 === $ && A.throwUnnamedLateFieldNI();
      t1.set$reaction(t2);
      t2 = _this.ToggleableStateMixin___ToggleableStateMixin__reactionFocusFade_A;
      t2 === $ && A.throwUnnamedLateFieldNI();
      t1.set$reactionFocusFade(t2);
      t2 = _this.ToggleableStateMixin___ToggleableStateMixin__reactionHoverFade_A;
      t2 === $ && A.throwUnnamedLateFieldNI();
      t1.set$reactionHoverFade(t2);
      t1.set$inactiveReactionColor(effectiveInactivePressedOverlayColor);
      t1.set$reactionColor(effectiveActivePressedOverlayColor);
      t1.set$hoverColor(effectiveHoverOverlayColor);
      t1.set$focusColor(effectiveFocusOverlayColor);
      t1.set$splashRadius(effectiveSplashRadius);
      t1.set$downPosition(_this.ToggleableStateMixin__downPosition);
      t1.set$isFocused(_this.get$states().contains$1(0, B.MaterialState_1));
      t1.set$isHovered(_this.get$states().contains$1(0, B.MaterialState_0));
      t1.set$activeColor(effectiveActiveColor);
      t1.set$inactiveColor(effectiveInactiveColor);
      t1.set$checkColor(effectiveCheckColor);
      _this._widget.toString;
      t1.set$value(true);
      t1.set$previousValue(_this._previousValue);
      _this._widget.toString;
      t2 = checkboxTheme.shape;
      t1.set$shape(t2 == null ? defaults.get$shape() : t2);
      _this._widget.toString;
      t2 = _this._resolveSide$1(_null);
      t1.set$side(t2 == null ? _this._resolveSide$1(checkboxTheme.side) : t2);
      value = _this.ToggleableStateMixin___ToggleableStateMixin__actionMap_FI;
      if (value === $) {
        result = A.LinkedHashMap_LinkedHashMap$_literal([B.Type_ActivateIntent_2HG, new A.CallbackAction(_this.get$_handleTap(), new A.ObserverList(A._setArrayType([], type$.JSArray_of_void_Function_Action_Intent), type$.ObserverList_of_void_Function_Action_Intent), type$.CallbackAction_ActivateIntent)], type$.Type, type$.Action_Intent);
        _this.ToggleableStateMixin___ToggleableStateMixin__actionMap_FI !== $ && A.throwUnnamedLateFieldADI();
        _this.ToggleableStateMixin___ToggleableStateMixin__actionMap_FI = result;
        value = result;
      }
      _this._widget.toString;
      t2 = new A._CheckboxState_build_closure(_this, checkboxTheme).call$1(_this.get$states());
      _this._widget.toString;
      t3 = _this.get$_handleTapEnd();
      return A.Semantics$(_null, true, A.FocusableActionDetector$(value, false, A.GestureDetector$(_null, A.Semantics$(_null, _null, A.CustomPaint$(_null, _null, _null, t1, size), false, true, false, false, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null), B.DragStartBehavior_1, false, _null, _null, _null, _null, _null, _null, _null, _null, _this.get$_handleTap(), t3, _this.get$_toggleable$_handleTapDown(), t3, _null, _null, _null), true, _null, t2, _null, _this.get$_toggleable$_handleFocusHighlightChanged(), _this.get$_toggleable$_handleHoverChanged(), _null), false, _null, false, false, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
    }
  };
  A._CheckboxState__widgetFillColor_closure.prototype = {
    call$1(states) {
      if (states.contains$1(0, B.MaterialState_6))
        return null;
      if (states.contains$1(0, B.MaterialState_4)) {
        this.$this._widget.toString;
        return null;
      }
      return null;
    },
    $signature: 66
  };
  A._CheckboxState_build_closure.prototype = {
    call$1(states) {
      var t1;
      this.$this._widget.toString;
      t1 = A.MaterialStateProperty_resolveAs(null, states, type$.nullable_MouseCursor);
      if (t1 == null)
        t1 = null;
      return t1 == null ? B.C__EnabledAndDisabledMouseCursor.resolve$1(states) : t1;
    },
    $signature: 205
  };
  A._CheckboxPainter.prototype = {
    set$checkColor(value) {
      if (J.$eq$(this._checkColor, value))
        return;
      this._checkColor = value;
      this.notifyListeners$0();
    },
    set$value(value) {
      if (this._checkbox$_value === true)
        return;
      this._checkbox$_value = true;
      this.notifyListeners$0();
    },
    set$previousValue(value) {
      if (this._previousValue == value)
        return;
      this._previousValue = value;
      this.notifyListeners$0();
    },
    set$shape(value) {
      if (J.$eq$(this._checkbox$_shape, value))
        return;
      this._checkbox$_shape = value;
      this.notifyListeners$0();
    },
    set$side(value) {
      if (J.$eq$(this._side, value))
        return;
      this._side = value;
      this.notifyListeners$0();
    },
    _outerRectAt$2(origin, t) {
      var inset = 1 - Math.abs(t - 0.5) * 2,
        size = 18 - inset * 2,
        t1 = origin._dx + inset,
        t2 = origin._dy + inset;
      return new A.Rect(t1, t2, t1 + size, t2 + size);
    },
    _colorAt$1(t) {
      var t2,
        t1 = this._activeColor;
      if (t >= 0.25)
        t1.toString;
      else {
        t2 = this._inactiveColor;
        t2.toString;
        t1.toString;
        t1 = A.Color_lerp(t2, t1, t * 4);
        t1.toString;
      }
      return t1;
    },
    _drawBox$5(canvas, outer, paint, side, fill) {
      if (fill)
        canvas.drawPath$2(this._checkbox$_shape.getOuterPath$1(outer), paint);
      if (side != null)
        this._checkbox$_shape.copyWith$1$side(side).paint$2(canvas, outer);
    },
    _drawCheck$4(canvas, origin, t, paint) {
      var t5,
        path = A.SurfacePath$(),
        t1 = origin._dx,
        t2 = origin._dy,
        t3 = t1 + 2.6999999999999997,
        t4 = t2 + 8.1;
      if (t < 0.5) {
        t5 = A.Offset_lerp(B.Offset_5ck, B.Offset_FK3, t * 2);
        t5.toString;
        path.moveTo$2(t3, t4);
        path.lineTo$2(t1 + t5._dx, t2 + t5._dy);
      } else {
        t5 = A.Offset_lerp(B.Offset_FK3, B.Offset_R50, (t - 0.5) * 2);
        t5.toString;
        path.moveTo$2(t3, t4);
        path.lineTo$2(t1 + 7.2, t2 + 12.6);
        path.lineTo$2(t1 + t5._dx, t2 + t5._dy);
      }
      canvas.drawPath$2(path, paint);
    },
    _drawDash$4(canvas, origin, t, paint) {
      var t2,
        t1 = A.Offset_lerp(B.Offset_5tR, B.Offset_9_9, 1 - t);
      t1.toString;
      t2 = A.Offset_lerp(B.Offset_9_9, B.Offset_ATs, t);
      t2.toString;
      canvas.drawLine$3(origin.$add(0, t1), origin.$add(0, t2), paint);
    },
    paint$2(canvas, size) {
      var reactionPaint, t2, t3, reactionRadius, strokePaint, origin, $status, tNormalized, t, outer, paint, border, tShrink, tExpand, _this = this,
        t1 = size.center$1(B.Offset_0_0);
      if (_this._reaction.get$status() !== B.AnimationStatus_0 || _this._reactionFocusFade.get$status() !== B.AnimationStatus_0 || _this._reactionHoverFade.get$status() !== B.AnimationStatus_0) {
        reactionPaint = A.Paint$();
        t2 = _this._inactiveReactionColor;
        t2.toString;
        t3 = _this._reactionColor;
        t3.toString;
        t3 = A.Color_lerp(t2, t3, _this._toggleable$_position.get$value());
        t2 = _this._hoverColor;
        t2.toString;
        t2 = A.Color_lerp(t3, t2, _this._reactionHoverFade.get$value());
        t3 = _this._focusColor;
        t3.toString;
        t3 = A.Color_lerp(t2, t3, _this._reactionFocusFade.get$value());
        t3.toString;
        reactionPaint.set$color(t3);
        t3 = _this._splashRadius;
        t3.toString;
        t2 = _this._isFocused;
        t2.toString;
        if (!t2) {
          t2 = _this._isHovered;
          t2.toString;
        } else
          t2 = true;
        if (t2)
          reactionRadius = t3;
        else
          reactionRadius = new A.Tween(0, t3, type$.Tween_double).transform$1(_this._reaction.get$value());
        if (reactionRadius > 0)
          canvas.drawCircle$3(t1.$add(0, B.Offset_0_0), reactionRadius, reactionPaint);
      }
      strokePaint = A.Paint$();
      t1 = _this._checkColor;
      t1.toString;
      strokePaint.set$color(t1);
      t1 = strokePaint._ui$_data;
      t1.$flags & 2 && A.throwUnsupportedOperation(t1, 8);
      t1.setInt32(12, 1, true);
      t1.setFloat32(16, 2, true);
      origin = type$.Offset._as(size.$div(0, 2).$sub(0, B.Size_18_18.$div(0, 2)));
      $status = _this._toggleable$_position.parent.get$status();
      t1 = $status === B.AnimationStatus_1 || $status === B.AnimationStatus_3;
      t2 = _this._toggleable$_position;
      tNormalized = t1 ? t2.get$value() : 1 - t2.get$value();
      if (_this._previousValue === false || _this._checkbox$_value === false) {
        t = _this._checkbox$_value === false ? 1 - tNormalized : tNormalized;
        outer = _this._outerRectAt$2(origin, t);
        paint = A.Paint$();
        paint.set$color(_this._colorAt$1(t));
        border = _this._side;
        if (t <= 0.5)
          _this._drawBox$5(canvas, outer, paint, border == null ? new A.BorderSide(new A.Color((paint._ui$_data.getInt32(4, true) ^ 4278190080) >>> 0), 2, B.BorderStyle_1, -1) : border, false);
        else {
          _this._drawBox$5(canvas, outer, paint, border, true);
          tShrink = (t - 0.5) * 2;
          if (_this._previousValue == null || _this._checkbox$_value == null)
            _this._drawDash$4(canvas, origin, tShrink, strokePaint);
          else
            _this._drawCheck$4(canvas, origin, tShrink, strokePaint);
        }
      } else {
        outer = _this._outerRectAt$2(origin, 1);
        paint = A.Paint$();
        paint.set$color(_this._colorAt$1(1));
        _this._drawBox$5(canvas, outer, paint, _this._side, true);
        if (tNormalized <= 0.5) {
          tShrink = 1 - tNormalized * 2;
          t1 = _this._previousValue;
          if (t1 === true)
            _this._drawCheck$4(canvas, origin, tShrink, strokePaint);
          else
            _this._drawDash$4(canvas, origin, tShrink, strokePaint);
        } else {
          tExpand = (tNormalized - 0.5) * 2;
          t1 = _this._checkbox$_value;
          if (t1 === true)
            _this._drawCheck$4(canvas, origin, tExpand, strokePaint);
          else
            _this._drawDash$4(canvas, origin, tExpand, strokePaint);
        }
      }
    }
  };
  A._CheckboxDefaultsM2.prototype = {
    get$fillColor() {
      return new A._MaterialStatePropertyWith(new A._CheckboxDefaultsM2_fillColor_closure(this), type$._MaterialStatePropertyWith_Color);
    },
    get$checkColor() {
      return new A.MaterialStatePropertyAll(B.Color_4294967295, type$.MaterialStatePropertyAll_Color);
    },
    get$overlayColor() {
      return new A._MaterialStatePropertyWith(new A._CheckboxDefaultsM2_overlayColor_closure(this), type$._MaterialStatePropertyWith_nullable_Color);
    },
    get$splashRadius() {
      return 20;
    },
    get$materialTapTargetSize() {
      return this._theme.materialTapTargetSize;
    },
    get$visualDensity() {
      return this._theme.visualDensity;
    },
    get$shape() {
      return B.RoundedRectangleBorder_Zfj;
    }
  };
  A._CheckboxDefaultsM2_fillColor_closure.prototype = {
    call$1(states) {
      if (states.contains$1(0, B.MaterialState_6))
        return this.$this._theme.disabledColor;
      if (states.contains$1(0, B.MaterialState_4))
        return this.$this._checkbox$_colors.secondary;
      return this.$this._theme.unselectedWidgetColor;
    },
    $signature: 21
  };
  A._CheckboxDefaultsM2_overlayColor_closure.prototype = {
    call$1(states) {
      var t1;
      if (states.contains$1(0, B.MaterialState_2)) {
        t1 = this.$this.get$fillColor()._material_state$_resolve.call$1(states);
        return A.Color$fromARGB(31, t1.get$value() >>> 16 & 255, t1.get$value() >>> 8 & 255, t1.get$value() & 255);
      }
      if (states.contains$1(0, B.MaterialState_0))
        return this.$this._theme.hoverColor;
      if (states.contains$1(0, B.MaterialState_1))
        return this.$this._theme.focusColor;
      return B.Color_0;
    },
    $signature: 21
  };
  A.__CheckboxState_State_TickerProviderStateMixin.prototype = {
    activate$0() {
      this.super$State$activate();
      this._updateTickerModeNotifier$0();
      this._updateTickers$0();
    },
    dispose$0() {
      var _this = this,
        t1 = _this.TickerProviderStateMixin__tickerModeNotifier;
      if (t1 != null)
        t1.removeListener$1(_this.get$_updateTickers());
      _this.TickerProviderStateMixin__tickerModeNotifier = null;
      _this.super$State$dispose();
    }
  };
  A.__CheckboxState_State_TickerProviderStateMixin_ToggleableStateMixin.prototype = {
    initState$0() {
      var t1, _this = this, _null = null;
      _this.super$State$initState();
      _this._widget.toString;
      t1 = A.AnimationController$(_null, B.Duration_200000, _null, 1, _this);
      _this.ToggleableStateMixin___ToggleableStateMixin__positionController_A = t1;
      _this.ToggleableStateMixin___ToggleableStateMixin__position_A = A.CurvedAnimation$(B.Cubic_Pa6, t1, B.Cubic_ts0);
      t1 = A.AnimationController$(_null, B.Duration_100000, _null, _null, _this);
      _this.ToggleableStateMixin___ToggleableStateMixin__reactionController_A = t1;
      _this.ToggleableStateMixin___ToggleableStateMixin__reaction_A = A.CurvedAnimation$(B.Cubic_Dkk, t1, _null);
      t1 = A.AnimationController$(_null, B.Duration_50000, _null, _this.ToggleableStateMixin__hovering || _this.ToggleableStateMixin__focused ? 1 : 0, _this);
      _this.ToggleableStateMixin___ToggleableStateMixin__reactionHoverFadeController_A = t1;
      _this.ToggleableStateMixin___ToggleableStateMixin__reactionHoverFade_A = A.CurvedAnimation$(B.Cubic_Dkk, t1, _null);
      t1 = A.AnimationController$(_null, B.Duration_50000, _null, _this.ToggleableStateMixin__hovering || _this.ToggleableStateMixin__focused ? 1 : 0, _this);
      _this.ToggleableStateMixin___ToggleableStateMixin__reactionFocusFadeController_A = t1;
      _this.ToggleableStateMixin___ToggleableStateMixin__reactionFocusFade_A = A.CurvedAnimation$(B.Cubic_Dkk, t1, _null);
    },
    dispose$0() {
      var _this = this,
        t1 = _this.ToggleableStateMixin___ToggleableStateMixin__positionController_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.dispose$0();
      t1 = _this.ToggleableStateMixin___ToggleableStateMixin__reactionController_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.dispose$0();
      t1 = _this.ToggleableStateMixin___ToggleableStateMixin__reactionHoverFadeController_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.dispose$0();
      t1 = _this.ToggleableStateMixin___ToggleableStateMixin__reactionFocusFadeController_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.dispose$0();
      _this.super$__CheckboxState_State_TickerProviderStateMixin$dispose();
    }
  };
  A.CheckboxThemeData.prototype = {
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(_this.mouseCursor, _this.get$fillColor(), _this.get$checkColor(), _this.get$overlayColor(), _this.get$splashRadius(), _this.get$materialTapTargetSize(), _this.get$visualDensity(), _this.get$shape(), _this.side, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      return other instanceof A.CheckboxThemeData && other.get$fillColor() == _this.get$fillColor() && other.get$checkColor() == _this.get$checkColor() && other.get$overlayColor() == _this.get$overlayColor() && other.get$splashRadius() == _this.get$splashRadius() && other.get$materialTapTargetSize() == _this.get$materialTapTargetSize() && J.$eq$(other.get$visualDensity(), _this.get$visualDensity()) && J.$eq$(other.get$shape(), _this.get$shape()) && J.$eq$(other.side, _this.side);
    },
    get$fillColor() {
      return this.fillColor;
    },
    get$checkColor() {
      return this.checkColor;
    },
    get$overlayColor() {
      return this.overlayColor;
    },
    get$splashRadius() {
      return this.splashRadius;
    },
    get$materialTapTargetSize() {
      return this.materialTapTargetSize;
    },
    get$visualDensity() {
      return this.visualDensity;
    },
    get$shape() {
      return this.shape;
    }
  };
  A._CheckboxThemeData_Object_Diagnosticable.prototype = {};
  A.ChipThemeData.prototype = {
    get$hashCode(_) {
      var _this = this;
      return A.Object_hashAll([_this.backgroundColor, _this.deleteIconColor, _this.disabledColor, _this.selectedColor, _this.secondarySelectedColor, _this.shadowColor, _this.surfaceTintColor, _this.selectedShadowColor, _this.showCheckmark, _this.checkmarkColor, _this.labelPadding, _this.padding, _this.side, _this.shape, _this.labelStyle, _this.secondaryLabelStyle, _this.brightness, _this.elevation, _this.pressElevation, _this.iconTheme]);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      return other instanceof A.ChipThemeData && J.$eq$(other.backgroundColor, _this.backgroundColor) && J.$eq$(other.deleteIconColor, _this.deleteIconColor) && J.$eq$(other.disabledColor, _this.disabledColor) && J.$eq$(other.selectedColor, _this.selectedColor) && J.$eq$(other.secondarySelectedColor, _this.secondarySelectedColor) && J.$eq$(other.shadowColor, _this.shadowColor) && J.$eq$(other.surfaceTintColor, _this.surfaceTintColor) && J.$eq$(other.selectedShadowColor, _this.selectedShadowColor) && other.showCheckmark == _this.showCheckmark && J.$eq$(other.checkmarkColor, _this.checkmarkColor) && J.$eq$(other.labelPadding, _this.labelPadding) && J.$eq$(other.padding, _this.padding) && J.$eq$(other.side, _this.side) && J.$eq$(other.shape, _this.shape) && J.$eq$(other.labelStyle, _this.labelStyle) && J.$eq$(other.secondaryLabelStyle, _this.secondaryLabelStyle) && other.brightness == _this.brightness && other.elevation == _this.elevation && other.pressElevation == _this.pressElevation && J.$eq$(other.iconTheme, _this.iconTheme);
    }
  };
  A._ChipThemeData_Object_Diagnosticable.prototype = {};
  A.ColorScheme.prototype = {
    $eq(_, other) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      t1 = false;
      if (other instanceof A.ColorScheme)
        if (other.brightness === _this.brightness) {
          t2 = other.primary;
          t3 = _this.primary;
          if (t2.$eq(0, t3)) {
            t4 = other.onPrimary;
            t5 = _this.onPrimary;
            if (t4.$eq(0, t5)) {
              t6 = other._primaryContainer;
              if (t6 == null)
                t6 = t2;
              t7 = _this._primaryContainer;
              if (t6.$eq(0, t7 == null ? t3 : t7)) {
                t6 = other._onPrimaryContainer;
                if (t6 == null)
                  t6 = t4;
                t7 = _this._onPrimaryContainer;
                if (t6.$eq(0, t7 == null ? t5 : t7)) {
                  t6 = other.secondary;
                  t7 = _this.secondary;
                  if (t6.$eq(0, t7)) {
                    t8 = other.onSecondary;
                    t9 = _this.onSecondary;
                    if (t8.$eq(0, t9)) {
                      t10 = other._secondaryContainer;
                      if (t10 == null)
                        t10 = t6;
                      t11 = _this._secondaryContainer;
                      if (t10.$eq(0, t11 == null ? t7 : t11)) {
                        t10 = other._onSecondaryContainer;
                        if (t10 == null)
                          t10 = t8;
                        t11 = _this._onSecondaryContainer;
                        if (t10.$eq(0, t11 == null ? t9 : t11)) {
                          t10 = other._tertiary;
                          t11 = t10 == null;
                          t12 = t11 ? t6 : t10;
                          t13 = _this._tertiary;
                          t14 = t13 == null;
                          if (t12.$eq(0, t14 ? t7 : t13)) {
                            t12 = other._onTertiary;
                            t15 = t12 == null;
                            t16 = t15 ? t8 : t12;
                            t17 = _this._onTertiary;
                            t18 = t17 == null;
                            if (t16.$eq(0, t18 ? t9 : t17)) {
                              t16 = other._tertiaryContainer;
                              if (t16 == null) {
                                if (t11)
                                  t10 = t6;
                              } else
                                t10 = t16;
                              t11 = _this._tertiaryContainer;
                              if (t11 == null)
                                t11 = t14 ? t7 : t13;
                              if (t10.$eq(0, t11)) {
                                t10 = other._onTertiaryContainer;
                                if (t10 == null)
                                  t8 = t15 ? t8 : t12;
                                else
                                  t8 = t10;
                                t10 = _this._onTertiaryContainer;
                                if (t10 == null)
                                  t9 = t18 ? t9 : t17;
                                else
                                  t9 = t10;
                                if (t8.$eq(0, t9)) {
                                  t8 = other.error;
                                  t9 = _this.error;
                                  if (t8.$eq(0, t9)) {
                                    t10 = other.onError;
                                    t11 = _this.onError;
                                    if (t10.$eq(0, t11)) {
                                      t12 = other._errorContainer;
                                      t8 = t12 == null ? t8 : t12;
                                      t12 = _this._errorContainer;
                                      if (t8.$eq(0, t12 == null ? t9 : t12)) {
                                        t8 = other._onErrorContainer;
                                        if (t8 == null)
                                          t8 = t10;
                                        t9 = _this._onErrorContainer;
                                        if (t8.$eq(0, t9 == null ? t11 : t9))
                                          if (other.background.$eq(0, _this.background)) {
                                            t8 = other.onBackground;
                                            t9 = _this.onBackground;
                                            if (t8.$eq(0, t9)) {
                                              t10 = other.surface;
                                              t11 = _this.surface;
                                              if (t10.$eq(0, t11)) {
                                                t12 = other.onSurface;
                                                t13 = _this.onSurface;
                                                if (t12.$eq(0, t13)) {
                                                  t14 = other._surfaceVariant;
                                                  if (t14 == null)
                                                    t14 = t10;
                                                  t15 = _this._surfaceVariant;
                                                  if (t14.$eq(0, t15 == null ? t11 : t15)) {
                                                    t14 = other._onSurfaceVariant;
                                                    if (t14 == null)
                                                      t14 = t12;
                                                    t15 = _this._onSurfaceVariant;
                                                    if (t14.$eq(0, t15 == null ? t13 : t15)) {
                                                      t14 = other._outline;
                                                      if (t14 == null)
                                                        t14 = t8;
                                                      t15 = _this._outline;
                                                      if (t14.$eq(0, t15 == null ? t9 : t15)) {
                                                        t14 = other._outlineVariant;
                                                        t8 = t14 == null ? t8 : t14;
                                                        t14 = _this._outlineVariant;
                                                        if (t8.$eq(0, t14 == null ? t9 : t14)) {
                                                          t8 = other._shadow;
                                                          if (t8 == null)
                                                            t8 = B.Color_4278190080;
                                                          t9 = _this._shadow;
                                                          if (t8.$eq(0, t9 == null ? B.Color_4278190080 : t9)) {
                                                            t8 = other._scrim;
                                                            if (t8 == null)
                                                              t8 = B.Color_4278190080;
                                                            t9 = _this._scrim;
                                                            if (t8.$eq(0, t9 == null ? B.Color_4278190080 : t9)) {
                                                              t8 = other._inverseSurface;
                                                              if (t8 == null)
                                                                t8 = t12;
                                                              t9 = _this._inverseSurface;
                                                              if (t8.$eq(0, t9 == null ? t13 : t9)) {
                                                                t8 = other._onInverseSurface;
                                                                if (t8 == null)
                                                                  t8 = t10;
                                                                t9 = _this._onInverseSurface;
                                                                if (t8.$eq(0, t9 == null ? t11 : t9)) {
                                                                  t8 = other._inversePrimary;
                                                                  t4 = t8 == null ? t4 : t8;
                                                                  t8 = _this._inversePrimary;
                                                                  if (t4.$eq(0, t8 == null ? t5 : t8)) {
                                                                    t4 = other._primaryVariant;
                                                                    if (t4 == null)
                                                                      t4 = t2;
                                                                    t5 = _this._primaryVariant;
                                                                    if (t4.$eq(0, t5 == null ? t3 : t5)) {
                                                                      t4 = other._secondaryVariant;
                                                                      if (t4 == null)
                                                                        t4 = t6;
                                                                      t5 = _this._secondaryVariant;
                                                                      if (t4.$eq(0, t5 == null ? t7 : t5)) {
                                                                        t1 = other._surfaceTint;
                                                                        if (t1 == null)
                                                                          t1 = t2;
                                                                        t2 = _this._surfaceTint;
                                                                        t1 = t1.$eq(0, t2 == null ? t3 : t2);
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      return t1;
    },
    get$hashCode(_) {
      var t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, t31, _this = this,
        t1 = _this.primary,
        t2 = _this.onPrimary,
        t3 = _this._primaryContainer;
      if (t3 == null)
        t3 = t1;
      t4 = _this._onPrimaryContainer;
      if (t4 == null)
        t4 = t2;
      t5 = _this.secondary;
      t6 = _this.onSecondary;
      t7 = _this._secondaryContainer;
      if (t7 == null)
        t7 = t5;
      t8 = _this._onSecondaryContainer;
      if (t8 == null)
        t8 = t6;
      t9 = _this._tertiary;
      t10 = t9 == null;
      t11 = t10 ? t5 : t9;
      t12 = _this._onTertiary;
      t13 = t12 == null;
      t14 = t13 ? t6 : t12;
      t15 = _this._tertiaryContainer;
      if (t15 == null) {
        if (t10)
          t9 = t5;
      } else
        t9 = t15;
      t10 = _this._onTertiaryContainer;
      if (t10 == null)
        t10 = t13 ? t6 : t12;
      t12 = _this.error;
      t13 = _this.onError;
      t15 = _this._errorContainer;
      if (t15 == null)
        t15 = t12;
      t16 = _this._onErrorContainer;
      if (t16 == null)
        t16 = t13;
      t17 = _this.onBackground;
      t18 = _this.surface;
      t19 = _this.onSurface;
      t20 = _this._surfaceVariant;
      if (t20 == null)
        t20 = t18;
      t21 = _this._onSurfaceVariant;
      if (t21 == null)
        t21 = t19;
      t22 = _this._outline;
      if (t22 == null)
        t22 = t17;
      t23 = _this._outlineVariant;
      if (t23 == null)
        t23 = t17;
      t24 = _this._shadow;
      if (t24 == null)
        t24 = B.Color_4278190080;
      t25 = _this._scrim;
      if (t25 == null)
        t25 = B.Color_4278190080;
      t26 = _this._inverseSurface;
      if (t26 == null)
        t26 = t19;
      t27 = _this._onInverseSurface;
      if (t27 == null)
        t27 = t18;
      t28 = _this._inversePrimary;
      if (t28 == null)
        t28 = t2;
      t29 = _this._primaryVariant;
      if (t29 == null)
        t29 = t1;
      t30 = _this._secondaryVariant;
      if (t30 == null)
        t30 = t5;
      t31 = _this._surfaceTint;
      return A.Object_hash(_this.brightness, t1, t2, t3, t4, t5, t6, t7, t8, t11, t14, t9, t10, t12, t13, t15, t16, _this.background, t17, A.Object_hash(t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, t31 == null ? t1 : t31, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue));
    }
  };
  A._ColorScheme_Object_Diagnosticable.prototype = {};
  A.MaterialColor.prototype = {};
  A.DataTableThemeData.prototype = {
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(_this.decoration, _this.dataRowColor, _this.dataRowMinHeight, _this.dataRowMaxHeight, _this.dataTextStyle, _this.headingRowColor, _this.headingRowHeight, _this.headingTextStyle, _this.horizontalMargin, _this.columnSpacing, _this.dividerThickness, _this.checkboxHorizontalMargin, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      return other instanceof A.DataTableThemeData && J.$eq$(other.decoration, _this.decoration) && other.dataRowColor == _this.dataRowColor && other.dataRowMinHeight == _this.dataRowMinHeight && other.dataRowMaxHeight == _this.dataRowMaxHeight && J.$eq$(other.dataTextStyle, _this.dataTextStyle) && other.headingRowColor == _this.headingRowColor && other.headingRowHeight == _this.headingRowHeight && J.$eq$(other.headingTextStyle, _this.headingTextStyle) && other.horizontalMargin == _this.horizontalMargin && other.columnSpacing == _this.columnSpacing && other.dividerThickness == _this.dividerThickness && other.checkboxHorizontalMargin == _this.checkboxHorizontalMargin;
    }
  };
  A._DataTableThemeData_Object_Diagnosticable.prototype = {};
  A.DatePickerThemeData.prototype = {
    get$hashCode(_) {
      var _this = this;
      return A.Object_hashAll([_this.backgroundColor, _this.elevation, _this.shadowColor, _this.surfaceTintColor, _this.shape, _this.headerBackgroundColor, _this.headerForegroundColor, _this.headerHeadlineStyle, _this.headerHelpStyle, _this.weekdayStyle, _this.dayStyle, _this.dayForegroundColor, _this.dayBackgroundColor, _this.dayOverlayColor, _this.todayForegroundColor, _this.todayBackgroundColor, _this.todayBorder, _this.yearStyle, _this.yearForegroundColor, _this.yearBackgroundColor, _this.yearOverlayColor, _this.rangePickerBackgroundColor, _this.rangePickerElevation, _this.rangePickerShadowColor, _this.rangePickerSurfaceTintColor, _this.rangePickerShape, _this.rangePickerHeaderBackgroundColor, _this.rangePickerHeaderForegroundColor, _this.rangePickerHeaderHeadlineStyle, _this.rangePickerHeaderHelpStyle, _this.rangeSelectionBackgroundColor, _this.rangeSelectionOverlayColor]);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      return other instanceof A.DatePickerThemeData && J.$eq$(other.backgroundColor, _this.backgroundColor) && other.elevation == _this.elevation && J.$eq$(other.shadowColor, _this.shadowColor) && J.$eq$(other.surfaceTintColor, _this.surfaceTintColor) && J.$eq$(other.shape, _this.shape) && J.$eq$(other.headerBackgroundColor, _this.headerBackgroundColor) && J.$eq$(other.headerForegroundColor, _this.headerForegroundColor) && J.$eq$(other.headerHeadlineStyle, _this.headerHeadlineStyle) && J.$eq$(other.headerHelpStyle, _this.headerHelpStyle) && J.$eq$(other.weekdayStyle, _this.weekdayStyle) && J.$eq$(other.dayStyle, _this.dayStyle) && other.dayForegroundColor == _this.dayForegroundColor && other.dayBackgroundColor == _this.dayBackgroundColor && other.dayOverlayColor == _this.dayOverlayColor && other.todayForegroundColor == _this.todayForegroundColor && other.todayBackgroundColor == _this.todayBackgroundColor && J.$eq$(other.todayBorder, _this.todayBorder) && J.$eq$(other.yearStyle, _this.yearStyle) && other.yearForegroundColor == _this.yearForegroundColor && other.yearBackgroundColor == _this.yearBackgroundColor && other.yearOverlayColor == _this.yearOverlayColor && J.$eq$(other.rangePickerBackgroundColor, _this.rangePickerBackgroundColor) && other.rangePickerElevation == _this.rangePickerElevation && J.$eq$(other.rangePickerShadowColor, _this.rangePickerShadowColor) && J.$eq$(other.rangePickerSurfaceTintColor, _this.rangePickerSurfaceTintColor) && J.$eq$(other.rangePickerShape, _this.rangePickerShape) && J.$eq$(other.rangePickerHeaderBackgroundColor, _this.rangePickerHeaderBackgroundColor) && J.$eq$(other.rangePickerHeaderForegroundColor, _this.rangePickerHeaderForegroundColor) && J.$eq$(other.rangePickerHeaderHeadlineStyle, _this.rangePickerHeaderHeadlineStyle) && J.$eq$(other.rangePickerHeaderHelpStyle, _this.rangePickerHeaderHelpStyle) && J.$eq$(other.rangeSelectionBackgroundColor, _this.rangeSelectionBackgroundColor) && other.rangeSelectionOverlayColor == _this.rangeSelectionOverlayColor;
    }
  };
  A._DatePickerThemeData_Object_Diagnosticable.prototype = {};
  A.DialogTheme.prototype = {
    get$hashCode(_) {
      return J.get$hashCode$(this.shape);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      return other instanceof A.DialogTheme && J.$eq$(other.backgroundColor, _this.backgroundColor) && other.elevation == _this.elevation && J.$eq$(other.shadowColor, _this.shadowColor) && J.$eq$(other.surfaceTintColor, _this.surfaceTintColor) && J.$eq$(other.shape, _this.shape) && J.$eq$(other.alignment, _this.alignment) && J.$eq$(other.iconColor, _this.iconColor) && J.$eq$(other.titleTextStyle, _this.titleTextStyle) && J.$eq$(other.contentTextStyle, _this.contentTextStyle) && J.$eq$(other.actionsPadding, _this.actionsPadding);
    }
  };
  A._DialogTheme_Object_Diagnosticable.prototype = {};
  A.DividerThemeData.prototype = {
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(_this.get$color(), _this.space, _this.thickness, _this.indent, _this.endIndent, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      return other instanceof A.DividerThemeData && J.$eq$(other.get$color(), _this.get$color()) && other.space == _this.space && other.thickness == _this.thickness && other.indent == _this.indent && other.endIndent == _this.endIndent;
    },
    get$color() {
      return this.color;
    }
  };
  A._DividerThemeData_Object_Diagnosticable.prototype = {};
  A.DrawerThemeData.prototype = {
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(_this.backgroundColor, _this.scrimColor, _this.elevation, _this.shadowColor, _this.surfaceTintColor, _this.shape, _this.endShape, _this.width, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      return other instanceof A.DrawerThemeData && J.$eq$(other.backgroundColor, _this.backgroundColor) && J.$eq$(other.scrimColor, _this.scrimColor) && other.elevation == _this.elevation && J.$eq$(other.shadowColor, _this.shadowColor) && J.$eq$(other.surfaceTintColor, _this.surfaceTintColor) && J.$eq$(other.shape, _this.shape) && J.$eq$(other.endShape, _this.endShape) && other.width == _this.width;
    }
  };
  A._DrawerThemeData_Object_Diagnosticable.prototype = {};
  A.DropdownMenuThemeData.prototype = {
    get$hashCode(_) {
      return A.Object_hash(this.textStyle, this.inputDecorationTheme, this.menuStyle, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      t1 = false;
      if (other instanceof A.DropdownMenuThemeData)
        if (J.$eq$(other.textStyle, _this.textStyle))
          t1 = J.$eq$(other.menuStyle, _this.menuStyle);
      return t1;
    }
  };
  A._DropdownMenuThemeData_Object_Diagnosticable.prototype = {};
  A.ElevatedButtonThemeData.prototype = {
    get$hashCode(_) {
      return J.get$hashCode$(this.style);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(this))
        return false;
      return other instanceof A.ElevatedButtonThemeData && J.$eq$(other.style, this.style);
    }
  };
  A._ElevatedButtonThemeData_Object_Diagnosticable.prototype = {};
  A.ExpansionTileThemeData.prototype = {
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(_this.backgroundColor, _this.collapsedBackgroundColor, _this.tilePadding, _this.expandedAlignment, _this.childrenPadding, _this.iconColor, _this.collapsedIconColor, _this.textColor, _this.collapsedTextColor, _this.shape, _this.collapsedShape, null, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      t1 = false;
      if (other instanceof A.ExpansionTileThemeData)
        if (J.$eq$(other.backgroundColor, _this.backgroundColor))
          if (J.$eq$(other.collapsedBackgroundColor, _this.collapsedBackgroundColor))
            if (J.$eq$(other.tilePadding, _this.tilePadding))
              if (J.$eq$(other.expandedAlignment, _this.expandedAlignment))
                if (J.$eq$(other.childrenPadding, _this.childrenPadding))
                  if (J.$eq$(other.iconColor, _this.iconColor))
                    if (J.$eq$(other.collapsedIconColor, _this.collapsedIconColor))
                      if (J.$eq$(other.textColor, _this.textColor))
                        if (J.$eq$(other.collapsedTextColor, _this.collapsedTextColor))
                          if (J.$eq$(other.shape, _this.shape))
                            t1 = J.$eq$(other.collapsedShape, _this.collapsedShape);
      return t1;
    }
  };
  A._ExpansionTileThemeData_Object_Diagnosticable.prototype = {};
  A.FilledButtonThemeData.prototype = {
    get$hashCode(_) {
      return J.get$hashCode$(this.style);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(this))
        return false;
      return other instanceof A.FilledButtonThemeData && J.$eq$(other.style, this.style);
    }
  };
  A._FilledButtonThemeData_Object_Diagnosticable.prototype = {};
  A.FlexibleSpaceBarSettings.prototype = {
    updateShouldNotify$1(oldWidget) {
      var _this = this,
        t1 = true;
      if (_this.toolbarOpacity === oldWidget.toolbarOpacity)
        if (_this.minExtent === oldWidget.minExtent)
          if (_this.maxExtent === oldWidget.maxExtent)
            t1 = _this.currentExtent !== oldWidget.currentExtent;
      return t1;
    }
  };
  A.FloatingActionButtonLocation.prototype = {
    toString$0(_) {
      return "FloatingActionButtonLocation";
    }
  };
  A.StandardFabLocation.prototype = {
    getOffset$1(scaffoldGeometry) {
      var t1 = this.getOffsetX$2(scaffoldGeometry, 0),
        contentBottom = scaffoldGeometry.contentBottom,
        bottomSheetHeight = scaffoldGeometry.bottomSheetSize._dy,
        fabHeight = scaffoldGeometry.floatingActionButtonSize._dy,
        snackBarHeight = scaffoldGeometry.snackBarSize._dy,
        fabY = contentBottom - fabHeight - Math.max(16, scaffoldGeometry.minViewPadding.bottom - (scaffoldGeometry.scaffoldSize._dy - contentBottom) + 16);
      if (snackBarHeight > 0)
        fabY = Math.min(fabY, contentBottom - snackBarHeight - fabHeight - 16);
      return new A.Offset(t1, (bottomSheetHeight > 0 ? Math.min(fabY, contentBottom - bottomSheetHeight - fabHeight / 2) : fabY) + 0);
    }
  };
  A.FabFloatOffsetY.prototype = {};
  A.FabEndOffsetX.prototype = {
    getOffsetX$2(scaffoldGeometry, adjustment) {
      switch (scaffoldGeometry.textDirection.index) {
        case 0:
          return 16 + scaffoldGeometry.minInsets.left - adjustment;
        case 1:
          return scaffoldGeometry.scaffoldSize._dx - 16 - scaffoldGeometry.minInsets.right - scaffoldGeometry.floatingActionButtonSize._dx + adjustment;
      }
    }
  };
  A._EndFloatFabLocation.prototype = {
    toString$0(_) {
      return "FloatingActionButtonLocation.endFloat";
    }
  };
  A.FloatingActionButtonAnimator.prototype = {
    toString$0(_) {
      return "FloatingActionButtonAnimator";
    }
  };
  A._ScalingFabMotionAnimator.prototype = {
    getOffset$3$begin$end$progress(begin, end, progress) {
      if (progress < 0.5)
        return begin;
      else
        return end;
    }
  };
  A._AnimationSwap.prototype = {
    get$value() {
      var _this = this,
        t1 = _this.parent.__AnimationController__value_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      return t1 < _this.swapThreshold ? _this.first.get$value() : _this.next.get$value();
    }
  };
  A.__EndFloatFabLocation_StandardFabLocation_FabEndOffsetX.prototype = {};
  A.__EndFloatFabLocation_StandardFabLocation_FabEndOffsetX_FabFloatOffsetY.prototype = {};
  A.FloatingActionButtonThemeData.prototype = {
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(_this.get$foregroundColor(), _this.get$backgroundColor(), _this.get$focusColor(), _this.get$hoverColor(), _this.get$splashColor(), _this.elevation, _this.focusElevation, _this.hoverElevation, _this.disabledElevation, _this.highlightElevation, _this.get$shape(), _this.enableFeedback, _this.get$iconSize(), _this.sizeConstraints, _this.smallSizeConstraints, _this.largeSizeConstraints, _this.extendedSizeConstraints, _this.extendedIconLabelSpacing, _this.get$extendedPadding(), A.Object_hash(_this.get$extendedTextStyle(), _this.mouseCursor, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue));
    },
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      t1 = false;
      if (other instanceof A.FloatingActionButtonThemeData)
        if (J.$eq$(other.get$foregroundColor(), _this.get$foregroundColor()))
          if (J.$eq$(other.get$backgroundColor(), _this.get$backgroundColor()))
            if (J.$eq$(other.get$focusColor(), _this.get$focusColor()))
              if (J.$eq$(other.get$hoverColor(), _this.get$hoverColor()))
                if (J.$eq$(other.get$splashColor(), _this.get$splashColor()))
                  if (other.elevation == _this.elevation)
                    if (other.focusElevation == _this.focusElevation)
                      if (other.hoverElevation == _this.hoverElevation)
                        if (other.disabledElevation == _this.disabledElevation)
                          if (other.highlightElevation == _this.highlightElevation)
                            if (J.$eq$(other.get$shape(), _this.get$shape()))
                              if (other.enableFeedback == _this.enableFeedback)
                                if (other.get$iconSize() == _this.get$iconSize())
                                  if (J.$eq$(other.sizeConstraints, _this.sizeConstraints))
                                    if (J.$eq$(other.smallSizeConstraints, _this.smallSizeConstraints))
                                      if (J.$eq$(other.largeSizeConstraints, _this.largeSizeConstraints))
                                        if (J.$eq$(other.extendedSizeConstraints, _this.extendedSizeConstraints))
                                          if (other.extendedIconLabelSpacing == _this.extendedIconLabelSpacing)
                                            if (J.$eq$(other.get$extendedPadding(), _this.get$extendedPadding()))
                                              t1 = J.$eq$(other.get$extendedTextStyle(), _this.get$extendedTextStyle());
      return t1;
    },
    get$foregroundColor() {
      return this.foregroundColor;
    },
    get$backgroundColor() {
      return this.backgroundColor;
    },
    get$focusColor() {
      return this.focusColor;
    },
    get$hoverColor() {
      return this.hoverColor;
    },
    get$splashColor() {
      return this.splashColor;
    },
    get$shape() {
      return this.shape;
    },
    get$iconSize() {
      return this.iconSize;
    },
    get$extendedPadding() {
      return this.extendedPadding;
    },
    get$extendedTextStyle() {
      return this.extendedTextStyle;
    }
  };
  A._FloatingActionButtonThemeData_Object_Diagnosticable.prototype = {};
  A._IconButtonVariant.prototype = {
    _enumToString$0() {
      return "_IconButtonVariant." + this._name;
    }
  };
  A.IconButton.prototype = {
    build$1(context) {
      var result, t1, _this = this, _null = null,
        theme = A.Theme_of(context),
        adjustedConstraints = theme.visualDensity.effectiveConstraints$1(B.BoxConstraints_0pa),
        effectiveIconSize = A.IconTheme_of(context).size;
      if (effectiveIconSize == null)
        effectiveIconSize = 24;
      result = A.Tooltip$(new A.ConstrainedBox(adjustedConstraints, new A.Padding(B.EdgeInsets_8_8_8_8, A.SizedBox$(new A.Align(B.Alignment_0_0, _null, _null, A.IconTheme_merge(_this.icon, new A.IconThemeData(effectiveIconSize, _null, _null, _null, _null, _this.color, _null, _null)), _null), effectiveIconSize, effectiveIconSize), _null), _null), _this.tooltip);
      t1 = Math.max(35, (effectiveIconSize + Math.min(B.EdgeInsets_8_8_8_8.get$horizontal(), B.EdgeInsets_8_8_8_8.get$_top() + B.EdgeInsets_8_8_8_8.get$_bottom())) * 0.7);
      return A.Semantics$(true, _null, A.InkResponse$(false, _null, true, result, false, _null, true, false, theme.focusColor, _null, theme.highlightColor, B.BoxShape_1, theme.hoverColor, _null, B.SystemMouseCursor_click, _null, _null, _null, _null, _null, _this.onPressed, _null, _null, _null, _null, t1, theme.splashColor, _null, _null), false, true, false, false, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
    }
  };
  A._IconButtonDefaultForeground.prototype = {
    resolve$1(states) {
      if (states.contains$1(0, B.MaterialState_6))
        return this.disabledForegroundColor;
      return this.foregroundColor;
    },
    toString$0(_) {
      return "{disabled: " + A.S(this.disabledForegroundColor) + ", otherwise: " + A.S(this.foregroundColor) + "}";
    }
  };
  A._IconButtonDefaultOverlay.prototype = {
    resolve$1(states) {
      var t1, t2, _this = this, _null = null;
      if (states.contains$1(0, B.MaterialState_4)) {
        if (states.contains$1(0, B.MaterialState_2)) {
          t1 = _this.highlightColor;
          t2 = _this.foregroundColor;
          t1 = t2 == null ? _null : A.Color$fromARGB(31, t2.get$value() >>> 16 & 255, t2.get$value() >>> 8 & 255, t2.get$value() & 255);
          return t1;
        }
        if (states.contains$1(0, B.MaterialState_0)) {
          t1 = _this.hoverColor;
          t2 = _this.foregroundColor;
          t1 = t2 == null ? _null : A.Color$fromARGB(20, t2.get$value() >>> 16 & 255, t2.get$value() >>> 8 & 255, t2.get$value() & 255);
          return t1;
        }
        if (states.contains$1(0, B.MaterialState_1)) {
          t1 = _this.focusColor;
          t2 = _this.foregroundColor;
          t1 = t2 == null ? _null : A.Color$fromARGB(31, t2.get$value() >>> 16 & 255, t2.get$value() >>> 8 & 255, t2.get$value() & 255);
          return t1;
        }
      }
      if (states.contains$1(0, B.MaterialState_2)) {
        t1 = _this.highlightColor;
        t2 = _this.foregroundColor;
        t1 = t2 == null ? _null : A.Color$fromARGB(31, t2.get$value() >>> 16 & 255, t2.get$value() >>> 8 & 255, t2.get$value() & 255);
        return t1;
      }
      if (states.contains$1(0, B.MaterialState_0)) {
        t1 = _this.hoverColor;
        t2 = _this.foregroundColor;
        t1 = t2 == null ? _null : A.Color$fromARGB(20, t2.get$value() >>> 16 & 255, t2.get$value() >>> 8 & 255, t2.get$value() & 255);
        return t1;
      }
      if (states.contains$1(0, B.MaterialState_1)) {
        t1 = _this.focusColor;
        t2 = _this.foregroundColor;
        t1 = t2 == null ? _null : A.Color$fromARGB(20, t2.get$value() >>> 16 & 255, t2.get$value() >>> 8 & 255, t2.get$value() & 255);
        return t1;
      }
      return _null;
    },
    toString$0(_) {
      return "{hovered: " + A.S(this.hoverColor) + ", focused: " + A.S(this.focusColor) + ", pressed: " + A.S(this.highlightColor) + ", otherwise: null}";
    }
  };
  A.IconButtonThemeData.prototype = {
    get$hashCode(_) {
      return J.get$hashCode$(this.style);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(this))
        return false;
      return other instanceof A.IconButtonThemeData && J.$eq$(other.style, this.style);
    }
  };
  A.IconButtonTheme.prototype = {
    updateShouldNotify$1(oldWidget) {
      return !this.data.$eq(0, oldWidget.data);
    }
  };
  A._IconButtonThemeData_Object_Diagnosticable.prototype = {};
  A.InkHighlight.prototype = {
    _handleAlphaStatusChanged$1($status) {
      var t1;
      if ($status === B.AnimationStatus_0 && !this._ink_highlight$_active) {
        t1 = this.__InkHighlight__alphaController_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
        t1.dispose$0();
        this.super$InkFeature$dispose();
      }
    },
    dispose$0() {
      var t1 = this.__InkHighlight__alphaController_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.dispose$0();
      this.super$InkFeature$dispose();
    },
    _paintHighlight$3(canvas, rect, paint) {
      var t1, t2, _this = this;
      canvas.save$0();
      t1 = _this._ink_highlight$_customBorder;
      if (t1 != null)
        canvas.clipPath$1(t1.getOuterPath$2$textDirection(rect, _this._ink_highlight$_textDirection));
      switch (_this._ink_highlight$_shape.index) {
        case 1:
          t1 = rect.get$center();
          t2 = _this._ink_highlight$_radius;
          canvas.drawCircle$3(t1, t2 == null ? 35 : t2, paint);
          break;
        case 0:
          t1 = _this._ink_highlight$_borderRadius;
          if (!t1.$eq(0, B.BorderRadius_tUf))
            canvas.drawRRect$2(A.RRect$fromRectAndCorners(rect, t1.bottomLeft, t1.bottomRight, t1.topLeft, t1.topRight), paint);
          else
            canvas.drawRect$2(rect, paint);
          break;
      }
      canvas.restore$0();
    },
    paintFeature$2(canvas, transform) {
      var originOffset, rect, _this = this,
        paint = A.Paint$(),
        t1 = _this._ink_well$_color,
        t2 = _this.__InkHighlight__alpha_A;
      t2 === $ && A.throwUnnamedLateFieldNI();
      paint.set$color(A.Color$fromARGB(t2._evaluatable.transform$1(t2.parent.get$value()), t1.get$value() >>> 16 & 255, t1.get$value() >>> 8 & 255, t1.get$value() & 255));
      originOffset = A.MatrixUtils_getAsTranslation(transform);
      t1 = _this._rectCallback;
      if (t1 != null)
        rect = t1.call$0();
      else {
        t1 = _this.referenceBox._size;
        rect = new A.Rect(0, 0, 0 + t1._dx, 0 + t1._dy);
      }
      if (originOffset == null) {
        canvas.save$0();
        canvas.transform$1(transform._m4storage);
        _this._paintHighlight$3(canvas, rect, paint);
        canvas.restore$0();
      } else
        _this._paintHighlight$3(canvas, rect.shift$1(originOffset), paint);
    }
  };
  A._getClipCallback_closure.prototype = {
    call$0() {
      var t1 = this.referenceBox._size;
      return new A.Rect(0, 0, 0 + t1._dx, 0 + t1._dy);
    },
    $signature: 67
  };
  A._InkRippleFactory.prototype = {
    create$11$borderRadius$color$containedInkWell$controller$customBorder$onRemoved$position$radius$rectCallback$referenceBox$textDirection(borderRadius, color, containedInkWell, controller, customBorder, onRemoved, position, radius, rectCallback, referenceBox, textDirection) {
      var t1, size, t2, t3, t4, t5, t6, t7, t8, t9, t10, _null = null;
      if (radius == null) {
        if (rectCallback != null) {
          t1 = rectCallback.call$0();
          size = new A.Size(t1.right - t1.left, t1.bottom - t1.top);
        } else {
          t1 = referenceBox._size;
          t1.toString;
          size = t1;
        }
        t1 = Math.max(size.bottomRight$1(B.Offset_0_0).get$distance(), new A.Offset(0 + size._dx, 0).$sub(0, new A.Offset(0, 0 + size._dy)).get$distance()) / 2;
      } else
        t1 = radius;
      t2 = new A.InkRipple(position, B.BorderRadius_tUf, customBorder, t1, A._getClipCallback(referenceBox, containedInkWell, rectCallback), textDirection, color, controller, referenceBox, onRemoved);
      t3 = controller.vsync;
      t4 = A.AnimationController$(_null, B.Duration_75000, _null, _null, t3);
      t5 = controller.get$markNeedsPaint();
      t4.didRegisterListener$0();
      t6 = t4.AnimationLocalListenersMixin__listeners;
      t6._isDirty = true;
      t6._observer_list$_list.push(t5);
      t4.forward$0();
      t2.__InkRipple__fadeInController_A = t4;
      t6 = color.get$value();
      t7 = type$.Animation_double;
      t8 = type$.IntTween;
      t2.__InkRipple__fadeIn_A = new A._AnimatedEvaluation(t7._as(t4), new A.IntTween(0, t6 >>> 24 & 255), t8._eval$1("_AnimatedEvaluation<Animatable.T>"));
      t6 = A.AnimationController$(_null, B.Duration_1000000, _null, _null, t3);
      t6.didRegisterListener$0();
      t4 = t6.AnimationLocalListenersMixin__listeners;
      t4._isDirty = true;
      t4._observer_list$_list.push(t5);
      t6.forward$0();
      t2.__InkRipple__radiusController_A = t6;
      t4 = type$.Tween_double;
      t9 = $.$get$InkRipple__easeCurveTween();
      t10 = t4._eval$1("_ChainedEvaluation<Animatable.T>");
      t2.__InkRipple__radius_A = new A._AnimatedEvaluation(t7._as(t6), new A._ChainedEvaluation(t9, new A.Tween(t1 * 0.3, t1 + 5, t4), t10), t10._eval$1("_AnimatedEvaluation<Animatable.T>"));
      t3 = A.AnimationController$(_null, B.Duration_375000, _null, _null, t3);
      t3.didRegisterListener$0();
      t10 = t3.AnimationLocalListenersMixin__listeners;
      t10._isDirty = true;
      t10._observer_list$_list.push(t5);
      t3.didRegisterListener$0();
      t5 = t3.AnimationLocalStatusListenersMixin__statusListeners;
      t5._isDirty = true;
      t5._observer_list$_list.push(t2.get$_ink_ripple$_handleAlphaStatusChanged());
      t2.__InkRipple__fadeOutController_A = t3;
      t5 = color.get$value();
      t10 = $.$get$InkRipple__fadeOutIntervalTween();
      t8 = t8._eval$1("_ChainedEvaluation<Animatable.T>");
      t2.__InkRipple__fadeOut_A = new A._AnimatedEvaluation(t7._as(t3), new A._ChainedEvaluation(t10, new A.IntTween(t5 >>> 24 & 255, 0), t8), t8._eval$1("_AnimatedEvaluation<Animatable.T>"));
      controller.addInkFeature$1(t2);
      return t2;
    }
  };
  A.InkRipple.prototype = {
    confirm$0() {
      var t1 = this.__InkRipple__radiusController_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.duration = B.Duration_225000;
      t1.forward$0();
      t1 = this.__InkRipple__fadeInController_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.forward$0();
      t1 = this.__InkRipple__fadeOutController_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1._direction = B._AnimationDirection_0;
      t1._animateToInternal$3$curve$duration(1, B.C__Linear, B.Duration_375000);
    },
    cancel$0() {
      var fadeOutValue, _this = this,
        t1 = _this.__InkRipple__fadeInController_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.stop$0();
      t1 = _this.__InkRipple__fadeInController_A.__AnimationController__value_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      fadeOutValue = 1 - t1;
      t1 = _this.__InkRipple__fadeOutController_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.set$value(fadeOutValue);
      if (fadeOutValue < 1) {
        t1 = _this.__InkRipple__fadeOutController_A;
        t1._direction = B._AnimationDirection_0;
        t1._animateToInternal$3$curve$duration(1, B.C__Linear, B.Duration_75000);
      }
    },
    _ink_ripple$_handleAlphaStatusChanged$1($status) {
      if ($status === B.AnimationStatus_3)
        this.dispose$0();
    },
    dispose$0() {
      var _this = this,
        t1 = _this.__InkRipple__radiusController_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.dispose$0();
      t1 = _this.__InkRipple__fadeInController_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.dispose$0();
      t1 = _this.__InkRipple__fadeOutController_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.dispose$0();
      _this.super$InkFeature$dispose();
    },
    paintFeature$2(canvas, transform) {
      var alpha, paint, rect, t2, t3, _this = this,
        t1 = _this.__InkRipple__fadeInController_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1 = t1._ticker;
      if (t1 != null && t1._ticker$_future != null) {
        t1 = _this.__InkRipple__fadeIn_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
        alpha = t1._evaluatable.transform$1(t1.parent.get$value());
      } else {
        t1 = _this.__InkRipple__fadeOut_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
        alpha = t1._evaluatable.transform$1(t1.parent.get$value());
      }
      paint = A.Paint$();
      t1 = _this._ink_well$_color;
      paint.set$color(A.Color$fromARGB(alpha, t1.get$value() >>> 16 & 255, t1.get$value() >>> 8 & 255, t1.get$value() & 255));
      t1 = _this._ink_ripple$_clipCallback;
      if (t1 != null)
        rect = t1.call$0();
      else
        rect = null;
      t2 = rect != null ? rect.get$center() : _this.referenceBox._size.center$1(B.Offset_0_0);
      t3 = _this.__InkRipple__radiusController_A;
      t3 === $ && A.throwUnnamedLateFieldNI();
      t3 = t3.__AnimationController__value_A;
      t3 === $ && A.throwUnnamedLateFieldNI();
      t3 = A.Offset_lerp(_this._ink_ripple$_position, t2, B.Cubic_glB.transform$1(t3));
      t3.toString;
      t2 = _this.__InkRipple__radius_A;
      t2 === $ && A.throwUnnamedLateFieldNI();
      _this.paintInkCircle$9$borderRadius$canvas$center$clipCallback$customBorder$paint$radius$textDirection$transform(_this._ink_ripple$_borderRadius, canvas, t3, t1, _this._ink_ripple$_customBorder, paint, t2._evaluatable.transform$1(t2.parent.get$value()), _this._ink_ripple$_textDirection, transform);
    }
  };
  A._getClipCallback_closure0.prototype = {
    call$0() {
      var t1 = this.referenceBox._size;
      return new A.Rect(0, 0, 0 + t1._dx, 0 + t1._dy);
    },
    $signature: 67
  };
  A._InkSplashFactory.prototype = {
    create$11$borderRadius$color$containedInkWell$controller$customBorder$onRemoved$position$radius$rectCallback$referenceBox$textDirection(borderRadius, color, containedInkWell, controller, customBorder, onRemoved, position, radius, rectCallback, referenceBox, textDirection) {
      var t6, t7, _null = null,
        t1 = radius == null ? A._getTargetRadius(referenceBox, containedInkWell, rectCallback, position) : radius,
        t2 = new A.InkSplash(position, B.BorderRadius_tUf, customBorder, t1, A._getClipCallback0(referenceBox, containedInkWell, rectCallback), !containedInkWell, textDirection, color, controller, referenceBox, onRemoved),
        t3 = controller.vsync,
        t4 = A.AnimationController$(_null, B.Duration_1000000, _null, _null, t3),
        t5 = controller.get$markNeedsPaint();
      t4.didRegisterListener$0();
      t6 = t4.AnimationLocalListenersMixin__listeners;
      t6._isDirty = true;
      t6._observer_list$_list.push(t5);
      t4.forward$0();
      t2.__InkSplash__radiusController_A = t4;
      t6 = type$.Tween_double;
      t7 = type$.Animation_double;
      t2.__InkSplash__radius_A = new A._AnimatedEvaluation(t7._as(t4), new A.Tween(0, t1, t6), t6._eval$1("_AnimatedEvaluation<Animatable.T>"));
      t3 = A.AnimationController$(_null, B.Duration_200000, _null, _null, t3);
      t3.didRegisterListener$0();
      t6 = t3.AnimationLocalListenersMixin__listeners;
      t6._isDirty = true;
      t6._observer_list$_list.push(t5);
      t3.didRegisterListener$0();
      t5 = t3.AnimationLocalStatusListenersMixin__statusListeners;
      t5._isDirty = true;
      t5._observer_list$_list.push(t2.get$_ink_splash$_handleAlphaStatusChanged());
      t2._alphaController = t3;
      t5 = color.get$value();
      t2.__InkSplash__alpha_A = new A._AnimatedEvaluation(t7._as(t3), new A.IntTween(t5 >>> 24 & 255, 0), type$.IntTween._eval$1("_AnimatedEvaluation<Animatable.T>"));
      controller.addInkFeature$1(t2);
      return t2;
    }
  };
  A.InkSplash.prototype = {
    confirm$0() {
      var duration = B.JSNumber_methods.floor$0(this._targetRadius / 1),
        t1 = this.__InkSplash__radiusController_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.duration = A.Duration$(0, 0, duration, 0, 0);
      t1.forward$0();
      this._alphaController.forward$0();
    },
    cancel$0() {
      var t1 = this._alphaController;
      if (t1 != null)
        t1.forward$0();
    },
    _ink_splash$_handleAlphaStatusChanged$1($status) {
      if ($status === B.AnimationStatus_3)
        this.dispose$0();
    },
    dispose$0() {
      var _this = this,
        t1 = _this.__InkSplash__radiusController_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.dispose$0();
      _this._alphaController.dispose$0();
      _this._alphaController = null;
      _this.super$InkFeature$dispose();
    },
    paintFeature$2(canvas, transform) {
      var center, _this = this,
        paint = A.Paint$(),
        t1 = _this._ink_well$_color,
        t2 = _this.__InkSplash__alpha_A;
      t2 === $ && A.throwUnnamedLateFieldNI();
      paint.set$color(A.Color$fromARGB(t2._evaluatable.transform$1(t2.parent.get$value()), t1.get$value() >>> 16 & 255, t1.get$value() >>> 8 & 255, t1.get$value() & 255));
      center = _this._ink_splash$_position;
      if (_this._repositionToReferenceBox) {
        t1 = _this.referenceBox._size.center$1(B.Offset_0_0);
        t2 = _this.__InkSplash__radiusController_A;
        t2 === $ && A.throwUnnamedLateFieldNI();
        t2 = t2.__AnimationController__value_A;
        t2 === $ && A.throwUnnamedLateFieldNI();
        center = A.Offset_lerp(center, t1, t2);
      }
      center.toString;
      t1 = _this.__InkSplash__radius_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      _this.paintInkCircle$9$borderRadius$canvas$center$clipCallback$customBorder$paint$radius$textDirection$transform(_this._ink_splash$_borderRadius, canvas, center, _this._clipCallback, _this._customBorder, paint, t1._evaluatable.transform$1(t1.parent.get$value()), _this._ink_splash$_textDirection, transform);
    }
  };
  A.InteractiveInkFeature.prototype = {
    confirm$0() {
    },
    cancel$0() {
    },
    set$color(value) {
      if (value.$eq(0, this._ink_well$_color))
        return;
      this._ink_well$_color = value;
      this._material$_controller.markNeedsPaint$0();
    },
    paintInkCircle$9$borderRadius$canvas$center$clipCallback$customBorder$paint$radius$textDirection$transform(borderRadius, canvas, center, clipCallback, customBorder, paint, radius, textDirection, transform) {
      var t1, t2, rect,
        originOffset = A.MatrixUtils_getAsTranslation(transform);
      canvas.save$0();
      if (originOffset == null)
        canvas.transform$1(transform._m4storage);
      else {
        t1 = originOffset._dx;
        t2 = originOffset._dy;
        canvas._addMethod$1(3);
        canvas._addData2$2(t1, t2);
      }
      if (clipCallback != null) {
        rect = clipCallback.call$0();
        if (customBorder != null)
          canvas.clipPath$1(customBorder.getOuterPath$2$textDirection(rect, textDirection));
        else if (!borderRadius.$eq(0, B.BorderRadius_tUf))
          canvas.clipRRect$1(A.RRect$fromRectAndCorners(rect, borderRadius.bottomLeft, borderRadius.bottomRight, borderRadius.topLeft, borderRadius.topRight));
        else
          canvas.clipRect$1(rect);
      }
      canvas.drawCircle$3(center, radius, paint);
      canvas.restore$0();
    }
  };
  A.InteractiveInkFeatureFactory.prototype = {};
  A._ParentInkResponseProvider.prototype = {
    updateShouldNotify$1(oldWidget) {
      return this.state !== oldWidget.state;
    }
  };
  A.InkResponse.prototype = {
    getRectCallback$1(referenceBox) {
      return null;
    },
    build$1(context) {
      var _this = this,
        t1 = context.dependOnInheritedWidgetOfExactType$1$0(type$._ParentInkResponseProvider),
        parentState = t1 == null ? null : t1.state;
      return new A._InkResponseStateWidget(_this.child, _this.onTap, _this.onTapDown, _this.onTapUp, _this.onTapCancel, _this.onDoubleTap, _this.onLongPress, _this.onHighlightChanged, _this.onHover, _this.mouseCursor, _this.containedInkWell, _this.highlightShape, _this.radius, _this.borderRadius, _this.customBorder, _this.focusColor, _this.hoverColor, _this.highlightColor, _this.overlayColor, _this.splashColor, _this.splashFactory, _this.enableFeedback, false, _this.onFocusChange, false, _this.focusNode, _this.canRequestFocus, parentState, _this.get$getRectCallback(), _this.statesController, null);
    }
  };
  A._InkResponseStateWidget.prototype = {
    createState$0() {
      return new A._InkResponseState(A.LinkedHashMap_LinkedHashMap$_empty(type$._HighlightType, type$.nullable_InkHighlight), new A.ObserverList(A._setArrayType([], type$.JSArray__ParentInkResponseState), type$.ObserverList__ParentInkResponseState), null);
    }
  };
  A._HighlightType.prototype = {
    _enumToString$0() {
      return "_HighlightType." + this._name;
    }
  };
  A._InkResponseState.prototype = {
    get$highlightsExist() {
      var t1 = this._highlights,
        t2 = A._instanceType(t1)._eval$1("LinkedHashMapValuesIterable<2>");
      return !new A.WhereIterable(new A.LinkedHashMapValuesIterable(t1, t2), new A._InkResponseState_highlightsExist_closure(), t2._eval$1("WhereIterable<Iterable.E>")).get$isEmpty(0);
    },
    markChildInkResponsePressed$2(childState, value) {
      var nowAnyPressed,
        t1 = this._activeChildren,
        t2 = t1._observer_list$_list,
        t3 = t2.length;
      if (value) {
        t1._isDirty = true;
        t2.push(childState);
      } else
        t1.remove$1(0, childState);
      nowAnyPressed = t2.length !== 0;
      if (nowAnyPressed !== (t3 !== 0)) {
        t1 = this._widget.parentState;
        if (t1 != null)
          t1.markChildInkResponsePressed$2(this, nowAnyPressed);
      }
    },
    simulateTap$1(intent) {
      var t1 = this._element;
      t1.toString;
      this._startNewSplash$1$context(t1);
      this.handleTap$0();
    },
    simulateTap$0() {
      return this.simulateTap$1(null);
    },
    handleStatesControllerChange$0() {
      this.setState$1(new A._InkResponseState_handleStatesControllerChange_closure());
    },
    get$statesController() {
      var t1 = this._widget.statesController;
      if (t1 == null) {
        t1 = this.internalStatesController;
        t1.toString;
      }
      return t1;
    },
    initStatesController$0() {
      var t1, t2, _this = this;
      if (_this._widget.statesController == null)
        _this.internalStatesController = A.MaterialStatesController$(null);
      t1 = _this.get$statesController();
      t2 = _this._widget;
      t2.toString;
      t1.update$2(B.MaterialState_6, !_this.isWidgetEnabled$1(t2));
      _this.get$statesController().addListener$1(_this.get$handleStatesControllerChange());
    },
    initState$0() {
      this.super$__InkResponseState_State_AutomaticKeepAliveClientMixin$initState();
      this.initStatesController$0();
      $.WidgetsBinding__instance.WidgetsBinding__buildOwner.focusManager._highlightManager._focus_manager$_listeners.add$1(0, this.get$handleFocusHighlightModeChange());
    },
    didUpdateWidget$1(oldWidget) {
      var t1, t2, hoverHighlight, focusHighlight, _this = this;
      _this.super$State$didUpdateWidget(oldWidget);
      t1 = oldWidget.statesController;
      if (_this._widget.statesController != t1) {
        if (t1 != null)
          t1.removeListener$1(_this.get$handleStatesControllerChange());
        if (_this._widget.statesController != null) {
          t1 = _this.internalStatesController;
          if (t1 != null) {
            t1.ChangeNotifier__listeners = $.$get$ChangeNotifier__emptyListeners();
            t1.ChangeNotifier__count = 0;
          }
          _this.internalStatesController = null;
        }
        _this.initStatesController$0();
      }
      t1 = true;
      if (J.$eq$(_this._widget.customBorder, oldWidget.customBorder)) {
        t2 = _this._widget;
        if (t2.radius == oldWidget.radius)
          t1 = t2.highlightShape !== oldWidget.highlightShape;
      }
      if (t1) {
        t1 = _this._highlights;
        hoverHighlight = t1.$index(0, B._HighlightType_1);
        if (hoverHighlight != null) {
          t2 = hoverHighlight.__InkHighlight__alphaController_A;
          t2 === $ && A.throwUnnamedLateFieldNI();
          t2.dispose$0();
          hoverHighlight.super$InkFeature$dispose();
          _this.updateHighlight$3$callOnHover$value(B._HighlightType_1, false, _this._ink_well$_hovering);
        }
        focusHighlight = t1.$index(0, B._HighlightType_2);
        if (focusHighlight != null) {
          t1 = focusHighlight.__InkHighlight__alphaController_A;
          t1 === $ && A.throwUnnamedLateFieldNI();
          t1.dispose$0();
          focusHighlight.super$InkFeature$dispose();
        }
      }
      t1 = _this._widget;
      t1.toString;
      if (_this.isWidgetEnabled$1(t1) !== _this.isWidgetEnabled$1(oldWidget)) {
        _this.get$statesController().update$2(B.MaterialState_6, !_this.isWidgetEnabled$1(t1));
        t1 = _this._widget;
        t1.toString;
        if (!_this.isWidgetEnabled$1(t1)) {
          _this.get$statesController().update$2(B.MaterialState_2, false);
          hoverHighlight = _this._highlights.$index(0, B._HighlightType_1);
          if (hoverHighlight != null) {
            t1 = hoverHighlight.__InkHighlight__alphaController_A;
            t1 === $ && A.throwUnnamedLateFieldNI();
            t1.dispose$0();
            hoverHighlight.super$InkFeature$dispose();
          }
        }
        _this.updateHighlight$3$callOnHover$value(B._HighlightType_1, false, _this._ink_well$_hovering);
      }
      _this.updateFocusHighlights$0();
    },
    dispose$0() {
      var t1, _this = this;
      $.WidgetsBinding__instance.WidgetsBinding__buildOwner.focusManager._highlightManager._focus_manager$_listeners.remove$1(0, _this.get$handleFocusHighlightModeChange());
      _this.get$statesController().removeListener$1(_this.get$handleStatesControllerChange());
      t1 = _this.internalStatesController;
      if (t1 != null) {
        t1.ChangeNotifier__listeners = $.$get$ChangeNotifier__emptyListeners();
        t1.ChangeNotifier__count = 0;
      }
      _this.super$State$dispose();
    },
    get$wantKeepAlive() {
      if (!this.get$highlightsExist()) {
        var t1 = this._splashes;
        t1 = t1 != null && t1._collection$_length !== 0;
      } else
        t1 = true;
      return t1;
    },
    getFadeDurationForType$1(type) {
      switch (type.index) {
        case 0:
          return B.Duration_200000;
        case 1:
        case 2:
          return B.Duration_50000;
      }
    },
    updateHighlight$3$callOnHover$value(type, callOnHover, value) {
      var t3, resolvedOverlayColor, t4, theme, t5, t6, t7, t8, t9, t10, t11, _this = this, _null = null,
        t1 = _this._highlights,
        highlight = t1.$index(0, type),
        t2 = type.index;
      switch (t2) {
        case 0:
          _this.get$statesController().update$2(B.MaterialState_2, value);
          break;
        case 1:
          if (callOnHover)
            _this.get$statesController().update$2(B.MaterialState_0, value);
          break;
        case 2:
          break;
      }
      if (type === B._HighlightType_0) {
        t3 = _this._widget.parentState;
        if (t3 != null)
          t3.markChildInkResponsePressed$2(_this, value);
      }
      t3 = highlight == null;
      if (value === (!t3 && highlight._ink_highlight$_active))
        return;
      if (value)
        if (t3) {
          t3 = _this._widget.overlayColor;
          if (t3 == null)
            resolvedOverlayColor = _null;
          else {
            t4 = _this.get$statesController()._change_notifier$_value;
            resolvedOverlayColor = t3._material_state$_resolve.call$1(t4);
          }
          if (resolvedOverlayColor == null) {
            t3 = _this._element;
            t3.toString;
            theme = A.Theme_of(t3);
            switch (t2) {
              case 0:
                resolvedOverlayColor = _this._widget.highlightColor;
                if (resolvedOverlayColor == null)
                  resolvedOverlayColor = theme.highlightColor;
                break;
              case 2:
                resolvedOverlayColor = _this._widget.focusColor;
                if (resolvedOverlayColor == null)
                  resolvedOverlayColor = theme.focusColor;
                break;
              case 1:
                resolvedOverlayColor = _this._widget.hoverColor;
                if (resolvedOverlayColor == null)
                  resolvedOverlayColor = theme.hoverColor;
                break;
            }
          }
          t3 = _this._element.get$renderObject();
          t3.toString;
          type$.RenderBox._as(t3);
          t4 = _this._element;
          t4.toString;
          t4 = A.LookupBoundary_findAncestorRenderObjectOfType(t4, type$._RenderInkFeatures);
          t4.toString;
          t5 = _this._widget;
          t5.toString;
          t5 = _this.isWidgetEnabled$1(t5) ? resolvedOverlayColor : A.Color$fromARGB(0, resolvedOverlayColor.get$value() >>> 16 & 255, resolvedOverlayColor.get$value() >>> 8 & 255, resolvedOverlayColor.get$value() & 255);
          t6 = _this._widget;
          t7 = t6.highlightShape;
          t8 = t6.radius;
          t9 = t6.customBorder;
          t6 = t6.getRectCallback.call$1(t3);
          t10 = _this._element.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality).textDirection;
          t11 = _this.getFadeDurationForType$1(type);
          t3 = new A.InkHighlight(t7, t8, B.BorderRadius_tUf, t9, t6, t10, t5, t4, t3, new A._InkResponseState_updateHighlight_handleInkRemoval(_this, type));
          t11 = A.AnimationController$(_null, t11, _null, _null, t4.vsync);
          t11.didRegisterListener$0();
          t5 = t11.AnimationLocalListenersMixin__listeners;
          t5._isDirty = true;
          t5._observer_list$_list.push(t4.get$markNeedsPaint());
          t11.didRegisterListener$0();
          t5 = t11.AnimationLocalStatusListenersMixin__statusListeners;
          t5._isDirty = true;
          t5._observer_list$_list.push(t3.get$_handleAlphaStatusChanged());
          t11.forward$0();
          t3.__InkHighlight__alphaController_A = t11;
          t5 = t3._ink_well$_color.get$value();
          t3.__InkHighlight__alpha_A = new A._AnimatedEvaluation(type$.Animation_double._as(t11), new A.IntTween(0, t5 >>> 24 & 255), type$.IntTween._eval$1("_AnimatedEvaluation<Animatable.T>"));
          t4.addInkFeature$1(t3);
          t1.$indexSet(0, type, t3);
          _this.updateKeepAlive$0();
        } else {
          highlight._ink_highlight$_active = true;
          t1 = highlight.__InkHighlight__alphaController_A;
          t1 === $ && A.throwUnnamedLateFieldNI();
          t1.forward$0();
        }
      else {
        highlight._ink_highlight$_active = false;
        t1 = highlight.__InkHighlight__alphaController_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
        t1.reverse$0();
      }
      switch (t2) {
        case 0:
          t1 = _this._widget.onHighlightChanged;
          if (t1 != null)
            t1.call$1(value);
          break;
        case 1:
          if (callOnHover) {
            t1 = _this._widget.onHover;
            if (t1 != null)
              t1.call$1(value);
          }
          break;
        case 2:
          break;
      }
    },
    updateHighlight$2$value(type, value) {
      return this.updateHighlight$3$callOnHover$value(type, true, value);
    },
    _createInkFeature$1(globalPosition) {
      var t3, position, t4, t5, color, rectCallback, borderRadius, customBorder, _this = this, t1 = {},
        t2 = _this._element;
      t2.toString;
      t2 = A.LookupBoundary_findAncestorRenderObjectOfType(t2, type$._RenderInkFeatures);
      t2.toString;
      t3 = _this._element.get$renderObject();
      t3.toString;
      type$.RenderBox._as(t3);
      position = t3.globalToLocal$1(globalPosition);
      t4 = _this._widget.overlayColor;
      if (t4 == null)
        t4 = null;
      else {
        t5 = _this.get$statesController()._change_notifier$_value;
        t5 = t4._material_state$_resolve.call$1(t5);
        t4 = t5;
      }
      color = t4 == null ? _this._widget.splashColor : t4;
      if (color == null) {
        t4 = _this._element;
        t4.toString;
        color = A.Theme_of(t4).splashColor;
      }
      t4 = _this._widget;
      rectCallback = t4.containedInkWell ? t4.getRectCallback.call$1(t3) : null;
      t4 = _this._widget;
      borderRadius = t4.borderRadius;
      customBorder = t4.customBorder;
      t1.splash = null;
      t4 = t4.splashFactory;
      if (t4 == null) {
        t4 = _this._element;
        t4.toString;
        t4 = A.Theme_of(t4).splashFactory;
      }
      t5 = _this._widget;
      return t1.splash = t4.create$11$borderRadius$color$containedInkWell$controller$customBorder$onRemoved$position$radius$rectCallback$referenceBox$textDirection(borderRadius, color, t5.containedInkWell, t2, customBorder, new A._InkResponseState__createInkFeature_onRemoved(t1, _this), position, t5.radius, rectCallback, t3, _this._element.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality).textDirection);
    },
    handleFocusHighlightModeChange$1(mode) {
      if (this._element == null)
        return;
      this.setState$1(new A._InkResponseState_handleFocusHighlightModeChange_closure(this));
    },
    get$_shouldShowFocus() {
      var mode, _this = this,
        t1 = _this._element;
      t1.toString;
      t1 = A.MediaQuery__maybeOf(t1, B._MediaQueryAspect_15);
      mode = t1 == null ? null : t1.navigationMode;
      switch ((mode == null ? B.NavigationMode_0 : mode).index) {
        case 0:
          t1 = _this._widget;
          t1.toString;
          return _this.isWidgetEnabled$1(t1) && _this._ink_well$_hasFocus;
        case 1:
          return _this._ink_well$_hasFocus;
      }
    },
    updateFocusHighlights$0() {
      var showFocus,
        t1 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner.focusManager._highlightManager._highlightMode;
      switch ((t1 == null ? A._HighlightModeManager__defaultModeForPlatform() : t1).index) {
        case 0:
          showFocus = false;
          break;
        case 1:
          showFocus = this.get$_shouldShowFocus();
          break;
        default:
          showFocus = null;
      }
      this.updateHighlight$2$value(B._HighlightType_2, showFocus);
    },
    handleFocusUpdate$1(hasFocus) {
      var t1, _this = this;
      _this._ink_well$_hasFocus = hasFocus;
      _this.get$statesController().update$2(B.MaterialState_1, hasFocus);
      _this.updateFocusHighlights$0();
      t1 = _this._widget.onFocusChange;
      if (t1 != null)
        t1.call$1(hasFocus);
    },
    handleTapDown$1(details) {
      if (this._activeChildren._observer_list$_list.length !== 0)
        return;
      this._startNewSplash$1$details(details);
      this._widget.toString;
    },
    handleTapUp$1(details) {
      this._widget.toString;
    },
    _startNewSplash$2$context$details(context, details) {
      var t1, t2, globalPosition, splash, _this = this;
      if (context != null) {
        t1 = context.get$renderObject();
        t1.toString;
        type$.RenderBox._as(t1);
        t2 = t1._size;
        t2 = new A.Rect(0, 0, 0 + t2._dx, 0 + t2._dy).get$center();
        globalPosition = A.MatrixUtils_transformPoint(t1.getTransformTo$1(null), t2);
      } else
        globalPosition = details.globalPosition;
      _this.get$statesController().update$2(B.MaterialState_2, true);
      splash = _this._createInkFeature$1(globalPosition);
      t1 = _this._splashes;
      (t1 == null ? _this._splashes = A.HashSet_HashSet(type$.InteractiveInkFeature) : t1).add$1(0, splash);
      t1 = _this._currentSplash;
      if (t1 != null)
        t1.cancel$0();
      _this._currentSplash = splash;
      _this.updateKeepAlive$0();
      _this.updateHighlight$2$value(B._HighlightType_0, true);
    },
    _startNewSplash$1$details(details) {
      return this._startNewSplash$2$context$details(null, details);
    },
    _startNewSplash$1$context(context) {
      return this._startNewSplash$2$context$details(context, null);
    },
    handleTap$0() {
      var _this = this,
        t1 = _this._currentSplash;
      if (t1 != null)
        t1.confirm$0();
      _this._currentSplash = null;
      _this.updateHighlight$2$value(B._HighlightType_0, false);
      t1 = _this._widget;
      if (t1.enableFeedback) {
        t1 = _this._element;
        t1.toString;
        A.Feedback_forTap(t1);
      }
      _this._widget.onTap.call$0();
    },
    handleTapCancel$0() {
      var _this = this,
        t1 = _this._currentSplash;
      if (t1 != null)
        t1.cancel$0();
      _this._currentSplash = null;
      _this._widget.toString;
      _this.updateHighlight$2$value(B._HighlightType_0, false);
    },
    deactivate$0() {
      var t2, t3, t4, t5, t6, _this = this,
        t1 = _this._splashes;
      if (t1 != null) {
        _this._splashes = null;
        for (t2 = A._instanceType(t1), t1 = new A._HashSetIterator(t1, t1._computeElements$0(), t2._eval$1("_HashSetIterator<1>")), t2 = t2._precomputed1; t1.moveNext$0();) {
          t3 = t1._current;
          (t3 == null ? t2._as(t3) : t3).dispose$0();
        }
        _this._currentSplash = null;
      }
      for (t1 = _this._highlights, t2 = new A.LinkedHashMapKeyIterator(t1, t1._modifications, t1._first); t2.moveNext$0();) {
        t3 = t2.__js_helper$_current;
        t4 = t1.$index(0, t3);
        if (t4 != null) {
          t5 = t4.__InkHighlight__alphaController_A;
          t5 === $ && A.throwUnnamedLateFieldNI();
          t5._ticker.dispose$0();
          t5._ticker = null;
          t6 = t5.AnimationLocalStatusListenersMixin__statusListeners;
          t6._isDirty = false;
          B.JSArray_methods.clear$0(t6._observer_list$_list);
          t6 = t6.get$_observer_list$_set();
          if (t6._collection$_length > 0) {
            t6._collection$_strings = t6._collection$_nums = t6._collection$_rest = t6._elements = null;
            t6._collection$_length = 0;
          }
          t6 = t5.AnimationLocalListenersMixin__listeners;
          t6._isDirty = false;
          B.JSArray_methods.clear$0(t6._observer_list$_list);
          t6 = t6.get$_observer_list$_set();
          if (t6._collection$_length > 0) {
            t6._collection$_strings = t6._collection$_nums = t6._collection$_rest = t6._elements = null;
            t6._collection$_length = 0;
          }
          t5.super$AnimationEagerListenerMixin$dispose();
          t4.super$InkFeature$dispose();
        }
        t1.$indexSet(0, t3, null);
      }
      t1 = _this._widget.parentState;
      if (t1 != null)
        t1.markChildInkResponsePressed$2(_this, false);
      _this.super$__InkResponseState_State_AutomaticKeepAliveClientMixin$deactivate();
    },
    isWidgetEnabled$1(widget) {
      return true;
    },
    handleMouseEnter$1($event) {
      var t1, _this = this;
      _this._ink_well$_hovering = true;
      t1 = _this._widget;
      t1.toString;
      if (_this.isWidgetEnabled$1(t1))
        _this.updateHighlight$2$value(B._HighlightType_1, true);
    },
    handleMouseExit$1($event) {
      this._ink_well$_hovering = false;
      this.updateHighlight$2$value(B._HighlightType_1, false);
    },
    get$_ink_well$_canRequestFocus() {
      var mode,
        t1 = this._element;
      t1.toString;
      t1 = A.MediaQuery__maybeOf(t1, B._MediaQueryAspect_15);
      mode = t1 == null ? null : t1.navigationMode;
      switch ((mode == null ? B.NavigationMode_0 : mode).index) {
        case 0:
          t1 = this._widget;
          t1.toString;
          return this.isWidgetEnabled$1(t1) && t1.canRequestFocus;
        case 1:
          return true;
      }
    },
    build$1(context) {
      var getHighlightColorForType, t1, t2, t3, t4, effectiveMouseCursor, value, result, t5, t6, t7, _this = this, _null = null;
      _this.super$AutomaticKeepAliveClientMixin$build(context);
      getHighlightColorForType = new A._InkResponseState_build_getHighlightColorForType(_this, context);
      for (t1 = _this._highlights, t2 = new A.LinkedHashMapKeyIterator(t1, t1._modifications, t1._first); t2.moveNext$0();) {
        t3 = t2.__js_helper$_current;
        t4 = t1.$index(0, t3);
        if (t4 != null)
          t4.set$color(getHighlightColorForType.call$1(t3));
      }
      t1 = _this._currentSplash;
      if (t1 != null) {
        t2 = _this._widget.overlayColor;
        if (t2 == null)
          t2 = _null;
        else {
          t3 = _this.get$statesController()._change_notifier$_value;
          t3 = t2._material_state$_resolve.call$1(t3);
          t2 = t3;
        }
        if (t2 == null)
          t2 = _this._widget.splashColor;
        t1.set$color(t2 == null ? A.Theme_of(context).splashColor : t2);
      }
      t1 = _this._widget.mouseCursor;
      if (t1 == null)
        t1 = B.C__EnabledAndDisabledMouseCursor;
      effectiveMouseCursor = A.MaterialStateProperty_resolveAs(t1, _this.get$statesController()._change_notifier$_value, type$.MouseCursor);
      value = _this.___InkResponseState__actionMap_FI;
      if (value === $) {
        t1 = _this.get$simulateTap();
        t2 = type$.JSArray_of_void_Function_Action_Intent;
        t3 = type$.ObserverList_of_void_Function_Action_Intent;
        result = A.LinkedHashMap_LinkedHashMap$_literal([B.Type_ActivateIntent_2HG, new A.CallbackAction(t1, new A.ObserverList(A._setArrayType([], t2), t3), type$.CallbackAction_ActivateIntent), B.Type_ButtonActivateIntent_VTa, new A.CallbackAction(t1, new A.ObserverList(A._setArrayType([], t2), t3), type$.CallbackAction_ButtonActivateIntent)], type$.Type, type$.Action_Intent);
        _this.___InkResponseState__actionMap_FI !== $ && A.throwUnnamedLateFieldADI();
        _this.___InkResponseState__actionMap_FI = result;
        value = result;
      }
      t1 = _this._widget.focusNode;
      t2 = _this.get$_ink_well$_canRequestFocus();
      t3 = _this._widget;
      t3.toString;
      t4 = _this.isWidgetEnabled$1(t3) ? _this.get$handleTapDown() : _null;
      t5 = _this.isWidgetEnabled$1(t3) ? _this.get$handleTapUp() : _null;
      t6 = _this.isWidgetEnabled$1(t3) ? _this.get$handleTap() : _null;
      t7 = _this.isWidgetEnabled$1(t3) ? _this.get$handleTapCancel() : _null;
      return new A._ParentInkResponseProvider(_this, A.Actions$(value, A.Focus$(false, t2, A.MouseRegion$(A.Semantics$(_null, _null, A.GestureDetector$(B.HitTestBehavior_1, t3.child, B.DragStartBehavior_1, true, _null, _null, _null, _null, _null, _null, _null, _null, t6, t7, t4, t5, _null, _null, _null), false, _null, false, false, _null, _null, _null, _null, _null, _null, _null, _null, _null, _this.get$simulateTap(), _null, _null, _null, _null, _null, _null, _null, _null), effectiveMouseCursor, _null, _this.get$handleMouseEnter(), _this.get$handleMouseExit(), _null), _null, _null, _null, t1, true, _null, _this.get$handleFocusUpdate(), _null, _null, _null, _null)), _null);
    },
    $is_ParentInkResponseState: 1
  };
  A._InkResponseState_highlightsExist_closure.prototype = {
    call$1(highlight) {
      return highlight != null;
    },
    $signature: 105
  };
  A._InkResponseState_handleStatesControllerChange_closure.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A._InkResponseState_updateHighlight_handleInkRemoval.prototype = {
    call$0() {
      var t1 = this.$this;
      t1._highlights.$indexSet(0, this.type, null);
      t1.updateKeepAlive$0();
    },
    $signature: 0
  };
  A._InkResponseState__createInkFeature_onRemoved.prototype = {
    call$0() {
      var t3,
        t1 = this.$this,
        t2 = t1._splashes;
      if (t2 != null) {
        t3 = this._box_0;
        t2.remove$1(0, t3.splash);
        if (t1._currentSplash == t3.splash)
          t1._currentSplash = null;
        t1.updateKeepAlive$0();
      }
    },
    $signature: 0
  };
  A._InkResponseState_handleFocusHighlightModeChange_closure.prototype = {
    call$0() {
      this.$this.updateFocusHighlights$0();
    },
    $signature: 0
  };
  A._InkResponseState_build_getHighlightColorForType.prototype = {
    call$1(type) {
      var t1, t2, _this = this,
        theme = A.Theme_of(_this.context);
      switch (type.index) {
        case 0:
          t1 = _this.$this;
          t2 = t1._widget.overlayColor;
          t2 = t2 == null ? null : t2._material_state$_resolve.call$1(B.Set_tKVu2);
          t1 = t2 == null ? t1._widget.highlightColor : t2;
          return t1 == null ? theme.highlightColor : t1;
        case 2:
          t1 = _this.$this;
          t2 = t1._widget.overlayColor;
          t2 = t2 == null ? null : t2._material_state$_resolve.call$1(B.Set_YUm3m);
          t1 = t2 == null ? t1._widget.focusColor : t2;
          return t1 == null ? theme.focusColor : t1;
        case 1:
          t1 = _this.$this;
          t2 = t1._widget.overlayColor;
          t2 = t2 == null ? null : t2._material_state$_resolve.call$1(B.Set_5pnzk);
          t1 = t2 == null ? t1._widget.hoverColor : t2;
          return t1 == null ? theme.hoverColor : t1;
      }
    },
    $signature: 106
  };
  A.InkWell.prototype = {};
  A.__InkResponseState_State_AutomaticKeepAliveClientMixin.prototype = {
    initState$0() {
      this.super$State$initState();
      if (this.get$wantKeepAlive())
        this._ensureKeepAlive$0();
    },
    deactivate$0() {
      var t1 = this.AutomaticKeepAliveClientMixin__keepAliveHandle;
      if (t1 != null) {
        t1.notifyListeners$0();
        t1.super$ChangeNotifier$dispose();
        this.AutomaticKeepAliveClientMixin__keepAliveHandle = null;
      }
      this.super$State$deactivate();
    }
  };
  A.FloatingLabelBehavior.prototype = {
    _enumToString$0() {
      return "FloatingLabelBehavior." + this._name;
    }
  };
  A.FloatingLabelAlignment.prototype = {
    get$hashCode(_) {
      return B.JSInt_methods.get$hashCode(-1);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(this))
        return false;
      return other instanceof A.FloatingLabelAlignment;
    },
    toString$0(_) {
      return A.FloatingLabelAlignment__stringify(-1);
    }
  };
  A.InputDecorationTheme.prototype = {
    get$hashCode(_) {
      var _null = null;
      return A.Object_hash(_null, _null, _null, _null, _null, _null, _null, B.FloatingLabelBehavior_1, B.C_FloatingLabelAlignment, false, _null, false, _null, _null, _null, _null, _null, _null, false, A.Object_hash(_null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, false, _null, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue));
    },
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(this))
        return false;
      t1 = false;
      if (other instanceof A.InputDecorationTheme)
        t1 = B.C_FloatingLabelAlignment.$eq(0, B.C_FloatingLabelAlignment);
      return t1;
    }
  };
  A._InputDecorationTheme_Object_Diagnosticable.prototype = {};
  A.ListTileThemeData.prototype = {
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(_this.dense, _this.shape, _this.style, _this.selectedColor, _this.iconColor, _this.textColor, _this.titleTextStyle, _this.subtitleTextStyle, _this.leadingAndTrailingTextStyle, _this.contentPadding, _this.tileColor, _this.selectedTileColor, _this.horizontalTitleGap, _this.minVerticalPadding, _this.minLeadingWidth, _this.enableFeedback, _this.mouseCursor, _this.visualDensity, _this.titleAlignment, B.C_SentinelValue);
    },
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      t1 = false;
      if (other instanceof A.ListTileThemeData)
        if (J.$eq$(other.shape, _this.shape))
          if (other.style == _this.style)
            if (J.$eq$(other.selectedColor, _this.selectedColor))
              if (J.$eq$(other.iconColor, _this.iconColor))
                if (J.$eq$(other.titleTextStyle, _this.titleTextStyle))
                  if (J.$eq$(other.subtitleTextStyle, _this.subtitleTextStyle))
                    if (J.$eq$(other.leadingAndTrailingTextStyle, _this.leadingAndTrailingTextStyle))
                      if (J.$eq$(other.textColor, _this.textColor))
                        if (J.$eq$(other.contentPadding, _this.contentPadding))
                          if (J.$eq$(other.tileColor, _this.tileColor))
                            if (J.$eq$(other.selectedTileColor, _this.selectedTileColor))
                              if (other.horizontalTitleGap == _this.horizontalTitleGap)
                                if (other.minVerticalPadding == _this.minVerticalPadding)
                                  t1 = other.minLeadingWidth == _this.minLeadingWidth;
      return t1;
    }
  };
  A._ListTileThemeData_Object_Diagnosticable.prototype = {};
  A.MaterialType.prototype = {
    _enumToString$0() {
      return "MaterialType." + this._name;
    }
  };
  A.Material.prototype = {
    createState$0() {
      return new A._MaterialState(new A.LabeledGlobalKey("ink renderer", type$.LabeledGlobalKey_State_StatefulWidget), null, null);
    }
  };
  A._MaterialState.prototype = {
    _getBackgroundColor$1(context) {
      var theme = A.Theme_of(context),
        t1 = this._widget,
        color = t1.color;
      if (color == null)
        switch (t1.type.index) {
          case 0:
            color = theme.canvasColor;
            break;
          case 1:
            color = theme.cardColor;
            break;
          case 3:
          case 2:
          case 4:
            break;
        }
      return color;
    },
    build$1(context) {
      var modelElevation, contents, t2, color, shape, t3, t4, _this = this, _null = null,
        theme = A.Theme_of(context),
        backgroundColor = _this._getBackgroundColor$1(context),
        t1 = _this._widget,
        modelShadowColor = t1.shadowColor;
      if (modelShadowColor == null)
        modelShadowColor = theme.shadowColor;
      modelElevation = t1.elevation;
      contents = t1.child;
      t2 = t1.textStyle;
      if (t2 == null) {
        t1 = A.Theme_of(context).textTheme.bodyMedium;
        t1.toString;
      } else
        t1 = t2;
      t2 = _this._widget;
      contents = new A.AnimatedDefaultTextStyle(contents, t1, B.C__Linear, t2.animationDuration, _null, _null);
      t1 = t2;
      t2 = t1.type;
      contents = new A.NotificationListener(new A._MaterialState_build_closure(_this), new A._InkFeatures(backgroundColor, _this, t2 !== B.MaterialType_4, contents, _this._inkFeatureRenderer), _null, type$.NotificationListener_LayoutChangedNotification);
      if (t2 === B.MaterialType_0)
        t1 = t1.shape == null;
      else
        t1 = false;
      if (t1) {
        A.Theme_of(context);
        backgroundColor.toString;
        color = A.ElevationOverlay_applyOverlay(context, backgroundColor, _this._widget.elevation);
        t1 = _this._widget;
        t2 = t1.animationDuration;
        return new A.AnimatedPhysicalModel(contents, B.BoxShape_0, t1.clipBehavior, modelElevation, color, false, modelShadowColor, B.Cubic_Dkk, t2, _null, _null);
      }
      shape = _this._getShape$0();
      t1 = _this._widget;
      if (t1.type === B.MaterialType_4)
        return A.ClipPath$(new A._ShapeBorderPaint(contents, shape, true, _null), t1.clipBehavior, new A.ShapeBorderClipper(shape, A.Directionality_maybeOf(context)));
      t2 = t1.animationDuration;
      t3 = t1.clipBehavior;
      t4 = t1.elevation;
      backgroundColor.toString;
      return new A._MaterialInterior(contents, shape, true, t3, t4, backgroundColor, modelShadowColor, t1.surfaceTintColor, B.Cubic_Dkk, t2, _null, _null);
    },
    _getShape$0() {
      var t1 = this._widget,
        t2 = t1.shape;
      if (t2 != null)
        return t2;
      t1 = t1.type;
      switch (t1.index) {
        case 0:
        case 4:
          return B.RoundedRectangleBorder_v5s;
        case 1:
        case 3:
          t1 = B.Map_Y8ZcI.$index(0, t1);
          t1.toString;
          return new A.RoundedRectangleBorder(t1, B.BorderSide_5Di);
        case 2:
          return B.CircleBorder_GDi;
      }
    }
  };
  A._MaterialState_build_closure.prototype = {
    call$1(notification) {
      var t2,
        t1 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, this.$this._inkFeatureRenderer).get$renderObject();
      t1.toString;
      type$._RenderInkFeatures._as(t1);
      t2 = t1._inkFeatures;
      t2 = t2 == null ? null : t2.length !== 0;
      if (t2 === true)
        t1.markNeedsPaint$0();
      return false;
    },
    $signature: 107
  };
  A._RenderInkFeatures.prototype = {
    addInkFeature$1(feature) {
      var t1 = this._inkFeatures;
      (t1 == null ? this._inkFeatures = A._setArrayType([], type$.JSArray_InkFeature) : t1).push(feature);
      this.markNeedsPaint$0();
    },
    hitTestSelf$1(position) {
      return this.absorbHitTest;
    },
    paint$2(context, offset) {
      var canvas, t1, _i, inkFeature, transform,
        inkFeatures = this._inkFeatures;
      if (inkFeatures != null && inkFeatures.length !== 0) {
        canvas = context.get$canvas();
        canvas.save$0();
        canvas._addMethod$1(3);
        canvas._addData2$2(offset._dx, offset._dy);
        t1 = this._size;
        canvas.clipRect$1(new A.Rect(0, 0, 0 + t1._dx, 0 + t1._dy));
        for (t1 = inkFeatures.length, _i = 0; _i < inkFeatures.length; inkFeatures.length === t1 || (0, A.throwConcurrentModificationError)(inkFeatures), ++_i) {
          inkFeature = inkFeatures[_i];
          transform = A.InkFeature__getPaintTransform(inkFeature._material$_controller, inkFeature.referenceBox);
          if (transform != null)
            inkFeature.paintFeature$2(canvas, transform);
        }
        canvas.restore$0();
      }
      this.super$RenderProxyBoxMixin$paint(context, offset);
    }
  };
  A._InkFeatures.prototype = {
    createRenderObject$1(context) {
      var t1 = new A._RenderInkFeatures(this.vsync, this.absorbHitTest, null, A.LayerHandle$());
      t1.RenderObject$0();
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      renderObject.absorbHitTest = this.absorbHitTest;
    }
  };
  A.InkFeature.prototype = {
    dispose$0() {
      var t1 = this._material$_controller,
        t2 = t1._inkFeatures;
      t2.toString;
      B.JSArray_methods.remove$1(t2, this);
      t1.markNeedsPaint$0();
      this.onRemoved.call$0();
    },
    toString$0(_) {
      return "<optimized out>#" + A.shortHash(this);
    }
  };
  A.ShapeBorderTween.prototype = {
    lerp$1(t) {
      return A.ShapeBorder_lerp(this.begin, this.end, t);
    }
  };
  A._MaterialInterior.prototype = {
    createState$0() {
      return new A._MaterialInteriorState(null, null);
    }
  };
  A._MaterialInteriorState.prototype = {
    forEachTween$1(visitor) {
      var t1, t2, _this = this;
      _this._elevation = type$.nullable_Tween_double._as(visitor.call$3(_this._elevation, _this._widget.elevation, new A._MaterialInteriorState_forEachTween_closure()));
      t1 = _this._widget;
      t2 = type$.nullable_ColorTween;
      t1 = t2._as(visitor.call$3(_this._shadowColor, t1.shadowColor, new A._MaterialInteriorState_forEachTween_closure0()));
      _this._shadowColor = t1;
      t1 = _this._widget.surfaceTintColor;
      _this._surfaceTintColor = t1 != null ? t2._as(visitor.call$3(_this._surfaceTintColor, t1, new A._MaterialInteriorState_forEachTween_closure1())) : null;
      _this._border = type$.nullable_ShapeBorderTween._as(visitor.call$3(_this._border, _this._widget.shape, new A._MaterialInteriorState_forEachTween_closure2()));
    },
    build$1(context) {
      var t2, elevation, color, shadowColor, t3, _this = this,
        t1 = _this._border;
      t1.toString;
      t1 = t1.transform$1(_this.get$_animation().get$value());
      t1.toString;
      t2 = _this._elevation;
      t2.toString;
      elevation = t2.transform$1(_this.get$_animation().get$value());
      A.Theme_of(context);
      color = A.ElevationOverlay_applyOverlay(context, _this._widget.color, elevation);
      _this._widget.toString;
      t2 = _this._shadowColor;
      shadowColor = t2 == null ? null : t2.transform$1(_this.get$_animation().get$value());
      if (shadowColor == null)
        shadowColor = B.Color_0;
      t2 = A.Directionality_maybeOf(context);
      t3 = _this._widget;
      return new A.PhysicalShape(new A.ShapeBorderClipper(t1, t2), t3.clipBehavior, elevation, color, shadowColor, new A._ShapeBorderPaint(t3.child, t1, true, null), null);
    }
  };
  A._MaterialInteriorState_forEachTween_closure.prototype = {
    call$1(value) {
      return new A.Tween(A._asDouble(value), null, type$.Tween_double);
    },
    $signature: 72
  };
  A._MaterialInteriorState_forEachTween_closure0.prototype = {
    call$1(value) {
      return new A.ColorTween(type$.Color._as(value), null);
    },
    $signature: 33
  };
  A._MaterialInteriorState_forEachTween_closure1.prototype = {
    call$1(value) {
      return new A.ColorTween(type$.Color._as(value), null);
    },
    $signature: 33
  };
  A._MaterialInteriorState_forEachTween_closure2.prototype = {
    call$1(value) {
      return new A.ShapeBorderTween(type$.ShapeBorder._as(value), null);
    },
    $signature: 110
  };
  A._ShapeBorderPaint.prototype = {
    build$1(context) {
      var t1 = A.Directionality_maybeOf(context);
      return A.CustomPaint$(this.child, new A._ShapeBorderPainter(this.shape, t1, null), null, null, B.Size_0_0);
    }
  };
  A._ShapeBorderPainter.prototype = {
    paint$2(canvas, size) {
      this.border.paint$3$textDirection(canvas, new A.Rect(0, 0, 0 + size._dx, 0 + size._dy), this.textDirection);
    },
    shouldRepaint$1(oldDelegate) {
      return !oldDelegate.border.$eq(0, this.border);
    }
  };
  A.__MaterialState_State_TickerProviderStateMixin.prototype = {
    activate$0() {
      this.super$State$activate();
      this._updateTickerModeNotifier$0();
      this._updateTickers$0();
    },
    dispose$0() {
      var _this = this,
        t1 = _this.TickerProviderStateMixin__tickerModeNotifier;
      if (t1 != null)
        t1.removeListener$1(_this.get$_updateTickers());
      _this.TickerProviderStateMixin__tickerModeNotifier = null;
      _this.super$State$dispose();
    }
  };
  A._MaterialLocalizationsDelegate.prototype = {
    isSupported$1(locale) {
      return locale.get$languageCode() === "en";
    },
    load$1(locale) {
      return new A.SynchronousFuture(B.C_DefaultMaterialLocalizations, type$.SynchronousFuture_MaterialLocalizations);
    },
    shouldReload$1(old) {
      return false;
    },
    toString$0(_) {
      return "DefaultMaterialLocalizations.delegate(en_US)";
    }
  };
  A.DefaultMaterialLocalizations.prototype = {$isMaterialLocalizations: 1};
  A.MaterialState.prototype = {
    _enumToString$0() {
      return "MaterialState." + this._name;
    }
  };
  A.MaterialStateMouseCursor.prototype = {
    createSession$1(device) {
      return this.resolve$1(A.LinkedHashSet_LinkedHashSet$_empty(type$.MaterialState)).createSession$1(device);
    },
    $isMaterialStateProperty: 1
  };
  A._EnabledAndDisabledMouseCursor.prototype = {
    resolve$1(states) {
      if (states.contains$1(0, B.MaterialState_6))
        return B.SystemMouseCursor_basic;
      return B.SystemMouseCursor_click;
    },
    get$debugDescription() {
      return "MaterialStateMouseCursor(clickable)";
    }
  };
  A.MaterialStateProperty.prototype = {};
  A._LerpProperties.prototype = {
    resolve$1(states) {
      var resolvedB, _this = this,
        t1 = _this.a,
        resolvedA = t1 == null ? null : t1.resolve$1(states);
      t1 = _this.b;
      resolvedB = t1 == null ? null : t1.resolve$1(states);
      return _this.lerpFunction.call$3(resolvedA, resolvedB, _this.t);
    },
    $isMaterialStateProperty: 1
  };
  A._MaterialStatePropertyWith.prototype = {
    resolve$1(states) {
      return this._material_state$_resolve.call$1(states);
    },
    $isMaterialStateProperty: 1
  };
  A.MaterialStatePropertyAll.prototype = {
    resolve$1(states) {
      return this.value;
    },
    toString$0(_) {
      var _s25_ = "MaterialStatePropertyAll(",
        t1 = this.value;
      if (typeof t1 == "number")
        return _s25_ + A.debugFormatDouble(t1) + ")";
      else
        return _s25_ + A.S(t1) + ")";
    },
    $isMaterialStateProperty: 1
  };
  A.MaterialStatesController.prototype = {
    update$2(state, add) {
      var t1 = this._change_notifier$_value,
        t2 = J.getInterceptor$ax(t1);
      if (add ? t2.add$1(t1, state) : t2.remove$1(t1, state))
        this.notifyListeners$0();
    }
  };
  A.MenuBarThemeData.prototype = {};
  A.MenuButtonThemeData.prototype = {
    get$hashCode(_) {
      return J.get$hashCode$(this.style);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(this))
        return false;
      return other instanceof A.MenuButtonThemeData && J.$eq$(other.style, this.style);
    }
  };
  A._MenuButtonThemeData_Object_Diagnosticable.prototype = {};
  A.MenuStyle.prototype = {
    get$hashCode(_) {
      var _this = this;
      return A.Object_hashAll([_this.backgroundColor, _this.shadowColor, _this.surfaceTintColor, _this.elevation, _this.padding, _this.minimumSize, _this.fixedSize, _this.maximumSize, _this.side, _this.shape, _this.mouseCursor, _this.visualDensity, _this.alignment]);
    },
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      t1 = false;
      if (other instanceof A.MenuStyle)
        if (other.backgroundColor == _this.backgroundColor)
          if (other.shadowColor == _this.shadowColor)
            if (other.surfaceTintColor == _this.surfaceTintColor)
              if (other.elevation == _this.elevation)
                if (other.padding == _this.padding)
                  if (other.minimumSize == _this.minimumSize)
                    if (other.fixedSize == _this.fixedSize)
                      if (other.maximumSize == _this.maximumSize)
                        if (other.side === _this.side)
                          if (other.shape == _this.shape)
                            t1 = J.$eq$(other.alignment, _this.alignment);
      return t1;
    }
  };
  A._LerpSides0.prototype = {
    resolve$1(states) {
      var resolvedB, _this = this,
        t1 = _this.a,
        resolvedA = t1 == null ? null : t1.resolve$1(states);
      t1 = _this.b;
      resolvedB = t1 == null ? null : t1.resolve$1(states);
      t1 = resolvedA == null;
      if (t1 && resolvedB == null)
        return null;
      if (t1) {
        t1 = resolvedB.color.value;
        return A.BorderSide_lerp(new A.BorderSide(A.Color$fromARGB(0, t1 >>> 16 & 255, t1 >>> 8 & 255, t1 & 255), 0, B.BorderStyle_1, -1), resolvedB, _this.t);
      }
      if (resolvedB == null) {
        t1 = resolvedA.color.value;
        return A.BorderSide_lerp(resolvedA, new A.BorderSide(A.Color$fromARGB(0, t1 >>> 16 & 255, t1 >>> 8 & 255, t1 & 255), 0, B.BorderStyle_1, -1), _this.t);
      }
      return A.BorderSide_lerp(resolvedA, resolvedB, _this.t);
    },
    $isMaterialStateProperty: 1
  };
  A._MenuStyle_Object_Diagnosticable.prototype = {};
  A.MenuThemeData.prototype = {
    get$hashCode(_) {
      return J.get$hashCode$(this.style);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(this))
        return false;
      return other instanceof A.MenuThemeData && J.$eq$(other.style, this.style);
    }
  };
  A._MenuThemeData_Object_Diagnosticable.prototype = {};
  A.NavigationBarThemeData.prototype = {
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(_this.height, _this.backgroundColor, _this.elevation, _this.shadowColor, _this.surfaceTintColor, _this.indicatorColor, _this.indicatorShape, _this.labelTextStyle, _this.iconTheme, _this.labelBehavior, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      t1 = false;
      if (other instanceof A.NavigationBarThemeData)
        if (other.height == _this.height)
          if (J.$eq$(other.backgroundColor, _this.backgroundColor))
            if (other.elevation == _this.elevation)
              if (J.$eq$(other.shadowColor, _this.shadowColor))
                if (J.$eq$(other.surfaceTintColor, _this.surfaceTintColor))
                  if (J.$eq$(other.indicatorColor, _this.indicatorColor))
                    if (J.$eq$(other.indicatorShape, _this.indicatorShape))
                      if (other.labelTextStyle == _this.labelTextStyle)
                        t1 = other.iconTheme == _this.iconTheme;
      return t1;
    }
  };
  A._NavigationBarThemeData_Object_Diagnosticable.prototype = {};
  A.NavigationDrawerThemeData.prototype = {
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(_this.tileHeight, _this.backgroundColor, _this.elevation, _this.shadowColor, _this.surfaceTintColor, _this.indicatorColor, _this.indicatorShape, _this.indicatorSize, _this.labelTextStyle, _this.iconTheme, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      return other instanceof A.NavigationDrawerThemeData && other.tileHeight == _this.tileHeight && J.$eq$(other.backgroundColor, _this.backgroundColor) && other.elevation == _this.elevation && J.$eq$(other.shadowColor, _this.shadowColor) && J.$eq$(other.surfaceTintColor, _this.surfaceTintColor) && J.$eq$(other.indicatorColor, _this.indicatorColor) && J.$eq$(other.indicatorShape, _this.indicatorShape) && J.$eq$(other.indicatorSize, _this.indicatorSize) && other.labelTextStyle == _this.labelTextStyle && other.iconTheme == _this.iconTheme;
    }
  };
  A._NavigationDrawerThemeData_Object_Diagnosticable.prototype = {};
  A.NavigationRailThemeData.prototype = {
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(_this.backgroundColor, _this.elevation, _this.unselectedLabelTextStyle, _this.selectedLabelTextStyle, _this.unselectedIconTheme, _this.selectedIconTheme, _this.groupAlignment, _this.labelType, _this.useIndicator, _this.indicatorColor, _this.indicatorShape, _this.minWidth, _this.minExtendedWidth, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      return other instanceof A.NavigationRailThemeData && J.$eq$(other.backgroundColor, _this.backgroundColor) && other.elevation == _this.elevation && J.$eq$(other.unselectedLabelTextStyle, _this.unselectedLabelTextStyle) && J.$eq$(other.selectedLabelTextStyle, _this.selectedLabelTextStyle) && J.$eq$(other.unselectedIconTheme, _this.unselectedIconTheme) && J.$eq$(other.selectedIconTheme, _this.selectedIconTheme) && other.groupAlignment == _this.groupAlignment && J.$eq$(other.indicatorColor, _this.indicatorColor) && J.$eq$(other.indicatorShape, _this.indicatorShape) && other.minWidth == _this.minWidth && other.minExtendedWidth == _this.minExtendedWidth;
    }
  };
  A._NavigationRailThemeData_Object_Diagnosticable.prototype = {};
  A.OutlinedButtonThemeData.prototype = {
    get$hashCode(_) {
      return J.get$hashCode$(this.style);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(this))
        return false;
      return other instanceof A.OutlinedButtonThemeData && J.$eq$(other.style, this.style);
    }
  };
  A._OutlinedButtonThemeData_Object_Diagnosticable.prototype = {};
  A.MaterialPageRoute.prototype = {};
  A.MaterialRouteTransitionMixin.prototype = {};
  A._MaterialPageRoute_PageRoute_MaterialRouteTransitionMixin.prototype = {};
  A._ZoomPageTransition.prototype = {
    build$1(context) {
      var _this = this;
      return new A.DualTransitionBuilder(_this.animation, new A._ZoomPageTransition_build_closure(_this), new A._ZoomPageTransition_build_closure0(_this), new A.DualTransitionBuilder(new A.ReverseAnimation(_this.secondaryAnimation, new A.ObserverList(A._setArrayType([], type$.JSArray_of_void_Function_AnimationStatus), type$.ObserverList_of_void_Function_AnimationStatus), 0), new A._ZoomPageTransition_build_closure1(_this), new A._ZoomPageTransition_build_closure2(_this), _this.child, null), null);
    }
  };
  A._ZoomPageTransition_build_closure.prototype = {
    call$3(context, animation, child) {
      return new A._ZoomEnterTransition(animation, child, this.$this.allowSnapshotting, false, null);
    },
    $signature: 73
  };
  A._ZoomPageTransition_build_closure0.prototype = {
    call$3(context, animation, child) {
      return new A._ZoomExitTransition(animation, this.$this.allowSnapshotting, true, child, null);
    },
    $signature: 74
  };
  A._ZoomPageTransition_build_closure1.prototype = {
    call$3(context, animation, child) {
      return new A._ZoomEnterTransition(animation, child, this.$this.allowSnapshotting, true, null);
    },
    $signature: 73
  };
  A._ZoomPageTransition_build_closure2.prototype = {
    call$3(context, animation, child) {
      return new A._ZoomExitTransition(animation, this.$this.allowSnapshotting, false, child, null);
    },
    $signature: 74
  };
  A._ZoomEnterTransition.prototype = {
    createState$0() {
      return new A._ZoomEnterTransitionState(new A.SnapshotController($.$get$ChangeNotifier__emptyListeners()), $, $);
    }
  };
  A._ZoomEnterTransitionState.prototype = {
    get$useSnapshot() {
      return false;
    },
    _page_transitions_theme$_updateAnimations$0() {
      var t3, _this = this,
        t1 = _this._widget,
        t2 = t1.reverse;
      if (t2)
        t3 = B.C__AlwaysCompleteAnimation;
      else {
        t3 = $.$get$_ZoomEnterTransitionState__fadeInTransition();
        t3 = new A._AnimatedEvaluation(t1.animation, t3, t3.$ti._eval$1("_AnimatedEvaluation<Animatable.T>"));
      }
      _this._ZoomTransitionBase____ZoomTransitionBase_fadeTransition_A = t3;
      t2 = t2 ? $.$get$_ZoomEnterTransitionState__scaleDownTransition() : $.$get$_ZoomEnterTransitionState__scaleUpTransition();
      t1 = t1.animation;
      _this._ZoomTransitionBase____ZoomTransitionBase_scaleTransition_A = new A._AnimatedEvaluation(t1, t2, t2.$ti._eval$1("_AnimatedEvaluation<Animatable.T>"));
      t1.addListener$1(_this.get$onAnimationValueChange());
      _this._widget.animation.addStatusListener$1(_this.get$onAnimationStatusChange());
    },
    initState$0() {
      var t1, t2, t3, t4, _this = this;
      _this._page_transitions_theme$_updateAnimations$0();
      t1 = _this._widget;
      t2 = t1.reverse;
      t3 = _this._ZoomTransitionBase____ZoomTransitionBase_fadeTransition_A;
      t3 === $ && A.throwUnnamedLateFieldNI();
      t4 = _this._ZoomTransitionBase____ZoomTransitionBase_scaleTransition_A;
      t4 === $ && A.throwUnnamedLateFieldNI();
      _this.___ZoomEnterTransitionState_delegate_A = A._ZoomEnterTransitionPainter$(t1.animation, t3, t2, t4);
      _this.super$State$initState();
    },
    didUpdateWidget$1(oldWidget) {
      var t2, t3, t4, _this = this,
        t1 = _this._widget;
      if (oldWidget.reverse !== t1.reverse || oldWidget.animation !== t1.animation) {
        t1 = oldWidget.animation;
        t1.removeListener$1(_this.get$onAnimationValueChange());
        t1.removeStatusListener$1(_this.get$onAnimationStatusChange());
        _this._page_transitions_theme$_updateAnimations$0();
        t1 = _this.___ZoomEnterTransitionState_delegate_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
        t1.dispose$0();
        t1 = _this._widget;
        t2 = t1.reverse;
        t3 = _this._ZoomTransitionBase____ZoomTransitionBase_fadeTransition_A;
        t3 === $ && A.throwUnnamedLateFieldNI();
        t4 = _this._ZoomTransitionBase____ZoomTransitionBase_scaleTransition_A;
        t4 === $ && A.throwUnnamedLateFieldNI();
        _this.___ZoomEnterTransitionState_delegate_A = A._ZoomEnterTransitionPainter$(t1.animation, t3, t2, t4);
      }
      _this.super$State$didUpdateWidget(oldWidget);
    },
    dispose$0() {
      var t1, _this = this;
      _this._widget.animation.removeListener$1(_this.get$onAnimationValueChange());
      _this._widget.animation.removeStatusListener$1(_this.get$onAnimationStatusChange());
      t1 = _this.___ZoomEnterTransitionState_delegate_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.dispose$0();
      _this.super$State$dispose();
    },
    build$1(context) {
      var t1 = this.___ZoomEnterTransitionState_delegate_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      return A.SnapshotWidget$(true, this._widget.child, this._ZoomTransitionBase_controller, B.SnapshotMode_0, t1);
    }
  };
  A._ZoomExitTransition.prototype = {
    createState$0() {
      return new A._ZoomExitTransitionState(new A.SnapshotController($.$get$ChangeNotifier__emptyListeners()), $, $);
    }
  };
  A._ZoomExitTransitionState.prototype = {
    get$useSnapshot() {
      return false;
    },
    _page_transitions_theme$_updateAnimations$0() {
      var t3, _this = this,
        t1 = _this._widget,
        t2 = t1.reverse;
      if (t2) {
        t3 = $.$get$_ZoomExitTransitionState__fadeOutTransition();
        t3 = new A._AnimatedEvaluation(t1.animation, t3, t3.$ti._eval$1("_AnimatedEvaluation<Animatable.T>"));
      } else
        t3 = B.C__AlwaysCompleteAnimation;
      _this._ZoomTransitionBase____ZoomTransitionBase_fadeTransition_A = t3;
      t2 = t2 ? $.$get$_ZoomExitTransitionState__scaleDownTransition() : $.$get$_ZoomExitTransitionState__scaleUpTransition();
      t1 = t1.animation;
      _this._ZoomTransitionBase____ZoomTransitionBase_scaleTransition_A = new A._AnimatedEvaluation(t1, t2, t2.$ti._eval$1("_AnimatedEvaluation<Animatable.T>"));
      t1.addListener$1(_this.get$onAnimationValueChange());
      _this._widget.animation.addStatusListener$1(_this.get$onAnimationStatusChange());
    },
    initState$0() {
      var t1, t2, t3, t4, _this = this;
      _this._page_transitions_theme$_updateAnimations$0();
      t1 = _this._widget;
      t2 = t1.reverse;
      t3 = _this._ZoomTransitionBase____ZoomTransitionBase_fadeTransition_A;
      t3 === $ && A.throwUnnamedLateFieldNI();
      t4 = _this._ZoomTransitionBase____ZoomTransitionBase_scaleTransition_A;
      t4 === $ && A.throwUnnamedLateFieldNI();
      _this.___ZoomExitTransitionState_delegate_A = A._ZoomExitTransitionPainter$(t1.animation, t3, t2, t4);
      _this.super$State$initState();
    },
    didUpdateWidget$1(oldWidget) {
      var t2, t3, t4, _this = this,
        t1 = _this._widget;
      if (oldWidget.reverse !== t1.reverse || oldWidget.animation !== t1.animation) {
        t1 = oldWidget.animation;
        t1.removeListener$1(_this.get$onAnimationValueChange());
        t1.removeStatusListener$1(_this.get$onAnimationStatusChange());
        _this._page_transitions_theme$_updateAnimations$0();
        t1 = _this.___ZoomExitTransitionState_delegate_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
        t1.dispose$0();
        t1 = _this._widget;
        t2 = t1.reverse;
        t3 = _this._ZoomTransitionBase____ZoomTransitionBase_fadeTransition_A;
        t3 === $ && A.throwUnnamedLateFieldNI();
        t4 = _this._ZoomTransitionBase____ZoomTransitionBase_scaleTransition_A;
        t4 === $ && A.throwUnnamedLateFieldNI();
        _this.___ZoomExitTransitionState_delegate_A = A._ZoomExitTransitionPainter$(t1.animation, t3, t2, t4);
      }
      _this.super$State$didUpdateWidget(oldWidget);
    },
    dispose$0() {
      var t1, _this = this;
      _this._widget.animation.removeListener$1(_this.get$onAnimationValueChange());
      _this._widget.animation.removeStatusListener$1(_this.get$onAnimationStatusChange());
      t1 = _this.___ZoomExitTransitionState_delegate_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.dispose$0();
      _this.super$State$dispose();
    },
    build$1(context) {
      var t1 = this.___ZoomExitTransitionState_delegate_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      return A.SnapshotWidget$(true, this._widget.child, this._ZoomTransitionBase_controller, B.SnapshotMode_0, t1);
    }
  };
  A.PageTransitionsBuilder.prototype = {};
  A.ZoomPageTransitionsBuilder.prototype = {
    buildTransitions$1$5(route, context, animation, secondaryAnimation, child) {
      return new A._ZoomPageTransition(animation, secondaryAnimation, true, child, true, null);
    }
  };
  A.CupertinoPageTransitionsBuilder.prototype = {
    buildTransitions$1$5(route, context, animation, secondaryAnimation, child, $T) {
      return A.CupertinoRouteTransitionMixin_buildPageTransitions(route, context, animation, secondaryAnimation, child, $T);
    }
  };
  A.PageTransitionsTheme.prototype = {
    _all$1(builders) {
      var t1 = type$.MappedListIterable_of_TargetPlatform_and_nullable_PageTransitionsBuilder;
      t1 = A.List_List$_of(new A.MappedListIterable(B.List_Y7p, new A.PageTransitionsTheme__all_closure(builders), t1), t1._eval$1("ListIterable.E"));
      return t1;
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(this))
        return false;
      if (other instanceof A.PageTransitionsTheme)
        return true;
      return false;
    },
    get$hashCode(_) {
      return A.Object_hashAll(this._all$1(B.Map_kX8z3));
    }
  };
  A.PageTransitionsTheme__all_closure.prototype = {
    call$1(platform) {
      return this.builders.$index(0, platform);
    },
    $signature: 113
  };
  A._ZoomTransitionBase.prototype = {
    onAnimationValueChange$0() {
      var t2, _this = this,
        t1 = _this._ZoomTransitionBase____ZoomTransitionBase_scaleTransition_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      if (J.$eq$(t1._evaluatable.transform$1(t1.parent.get$value()), 1)) {
        t1 = _this._ZoomTransitionBase____ZoomTransitionBase_fadeTransition_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
        t1 = t1.get$value() === 0 || _this._ZoomTransitionBase____ZoomTransitionBase_fadeTransition_A.get$value() === 1;
      } else
        t1 = false;
      t2 = _this._ZoomTransitionBase_controller;
      if (t1)
        t2.set$allowSnapshotting(false);
      else {
        _this.get$useSnapshot();
        t2.set$allowSnapshotting(false);
      }
    },
    onAnimationStatusChange$1($status) {
      switch ($status.index) {
        case 0:
        case 3:
          this._ZoomTransitionBase_controller.set$allowSnapshotting(false);
          break;
        case 1:
        case 2:
          this.get$useSnapshot();
          this._ZoomTransitionBase_controller.set$allowSnapshotting(false);
          break;
      }
    }
  };
  A._ZoomEnterTransitionPainter.prototype = {
    _onStatusChange$1(_) {
      this.notifyListeners$0();
    },
    _drawScrim$3(context, offset, size) {
      var t1, scrimOpacity, t2, t3, t4;
      if (!this.reverse && this.animation.get$status() !== B.AnimationStatus_3) {
        t1 = $.$get$_ZoomEnterTransitionState__scrimOpacityTween().transform$1(this.animation.get$value());
        t1.toString;
        scrimOpacity = t1;
      } else
        scrimOpacity = 0;
      if (scrimOpacity > 0) {
        t1 = context.get$canvas();
        t2 = offset._dx;
        t3 = offset._dy;
        t4 = A.Paint$();
        t4.set$color(A.Color$fromARGB(B.JSNumber_methods.round$0(255 * scrimOpacity), 0, 0, 0));
        t1.drawRect$2(new A.Rect(t2, t3, t2 + size._dx, t3 + size._dy), t4);
      }
    },
    paint$4(context, offset, size, painter) {
      var t1, t2, _this = this;
      switch (_this.animation.get$status().index) {
        case 3:
        case 0:
          return painter.call$2(context, offset);
        case 1:
        case 2:
          break;
      }
      _this._drawScrim$3(context, offset, size);
      t1 = _this._page_transitions_theme$_transform;
      t2 = _this.scale;
      A._updateScaledTransform(t1, t2._evaluatable.transform$1(t2.parent.get$value()), size);
      t2 = _this._transformHandler;
      t2.set$layer(context.pushTransform$5$oldLayer(true, offset, t1, new A._ZoomEnterTransitionPainter_paint_closure(_this, painter), t2._layer));
    },
    dispose$0() {
      var _this = this,
        t1 = _this.animation,
        t2 = _this.get$notifyListeners();
      t1.removeListener$1(t2);
      t1.removeStatusListener$1(_this.get$_onStatusChange());
      _this.scale.parent.removeListener$1(t2);
      _this.fade.removeListener$1(t2);
      _this._opacityHandle.set$layer(null);
      _this._transformHandler.set$layer(null);
      _this.super$ChangeNotifier$dispose();
    },
    shouldRepaint$1(oldDelegate) {
      var t2, _this = this,
        t1 = true;
      if (oldDelegate.reverse === _this.reverse)
        if (oldDelegate.animation.get$value() === _this.animation.get$value()) {
          t1 = oldDelegate.scale;
          t2 = _this.scale;
          t1 = !J.$eq$(t1._evaluatable.transform$1(t1.parent.get$value()), t2._evaluatable.transform$1(t2.parent.get$value())) || oldDelegate.fade.get$value() !== _this.fade.get$value();
        }
      return t1;
    }
  };
  A._ZoomEnterTransitionPainter_paint_closure.prototype = {
    call$2(context, offset) {
      var t1 = this.$this,
        t2 = t1._opacityHandle;
      t2.set$layer(context.pushOpacity$4$oldLayer(offset, B.JSNumber_methods.round$0(t1.fade.get$value() * 255), this.painter, t2._layer));
    },
    $signature: 3
  };
  A._ZoomExitTransitionPainter.prototype = {
    _onStatusChange$1(_) {
      this.notifyListeners$0();
    },
    paint$4(context, offset, size, painter) {
      var t1, t2, _this = this;
      switch (_this.animation.get$status().index) {
        case 3:
        case 0:
          return painter.call$2(context, offset);
        case 1:
        case 2:
          break;
      }
      t1 = _this._page_transitions_theme$_transform;
      t2 = _this.scale;
      A._updateScaledTransform(t1, t2._evaluatable.transform$1(t2.parent.get$value()), size);
      t2 = _this._transformHandler;
      t2.set$layer(context.pushTransform$5$oldLayer(true, offset, t1, new A._ZoomExitTransitionPainter_paint_closure(_this, painter), t2._layer));
    },
    shouldRepaint$1(oldDelegate) {
      var t2,
        t1 = true;
      if (oldDelegate.reverse === this.reverse)
        if (oldDelegate.fade.get$value() === this.fade.get$value()) {
          t1 = oldDelegate.scale;
          t2 = this.scale;
          t2 = !J.$eq$(t1._evaluatable.transform$1(t1.parent.get$value()), t2._evaluatable.transform$1(t2.parent.get$value()));
          t1 = t2;
        }
      return t1;
    },
    dispose$0() {
      var t1, _this = this;
      _this._opacityHandle.set$layer(null);
      _this._transformHandler.set$layer(null);
      t1 = _this.get$notifyListeners();
      _this.scale.parent.removeListener$1(t1);
      _this.fade.removeListener$1(t1);
      _this.animation.removeStatusListener$1(_this.get$_onStatusChange());
      _this.super$ChangeNotifier$dispose();
    }
  };
  A._ZoomExitTransitionPainter_paint_closure.prototype = {
    call$2(context, offset) {
      var t1 = this.$this,
        t2 = t1._opacityHandle;
      t2.set$layer(context.pushOpacity$4$oldLayer(offset, B.JSNumber_methods.round$0(t1.fade.get$value() * 255), this.painter, t2._layer));
    },
    $signature: 3
  };
  A._PageTransitionsTheme_Object_Diagnosticable.prototype = {};
  A.__ZoomEnterTransitionState_State__ZoomTransitionBase.prototype = {};
  A.__ZoomExitTransitionState_State__ZoomTransitionBase.prototype = {};
  A.PopupMenuThemeData.prototype = {
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(_this.color, _this.shape, _this.elevation, _this.shadowColor, _this.surfaceTintColor, _this.textStyle, _this.labelTextStyle, _this.enableFeedback, _this.mouseCursor, _this.position, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      t1 = false;
      if (other instanceof A.PopupMenuThemeData)
        if (J.$eq$(other.color, _this.color))
          if (J.$eq$(other.shape, _this.shape))
            if (other.elevation == _this.elevation)
              if (J.$eq$(other.shadowColor, _this.shadowColor))
                if (J.$eq$(other.surfaceTintColor, _this.surfaceTintColor))
                  if (J.$eq$(other.textStyle, _this.textStyle))
                    t1 = other.labelTextStyle == _this.labelTextStyle;
      return t1;
    }
  };
  A._PopupMenuThemeData_Object_Diagnosticable.prototype = {};
  A._ActivityIndicatorType.prototype = {
    _enumToString$0() {
      return "_ActivityIndicatorType." + this._name;
    }
  };
  A.ProgressIndicator.prototype = {};
  A._CircularProgressIndicatorPainter.prototype = {
    paint$2(canvas, size) {
      var encoded, t1, t2, backgroundPaint, _this = this,
        paint = A.Paint$();
      paint.set$color(_this.valueColor);
      encoded = _this.strokeWidth;
      t1 = paint._ui$_data;
      t1.$flags & 2 && A.throwUnsupportedOperation(t1, 12);
      t1.setFloat32(16, encoded, true);
      t1.setInt32(12, 1, true);
      t2 = _this.backgroundColor;
      if (t2 != null) {
        backgroundPaint = A.Paint$();
        backgroundPaint.set$color(t2);
        t2 = backgroundPaint._ui$_data;
        t2.$flags & 2 && A.throwUnsupportedOperation(t2, 12);
        t2.setFloat32(16, encoded, true);
        t2.setInt32(12, 1, true);
        canvas.drawArc$5(new A.Rect(0, 0, 0 + size._dx, 0 + size._dy), 0, 6.282185307179586, false, backgroundPaint);
      }
      t1.setInt32(20, 2, true);
      canvas.drawArc$5(new A.Rect(0, 0, 0 + size._dx, 0 + size._dy), _this.arcStart, _this.arcSweep, false, paint);
    },
    shouldRepaint$1(oldPainter) {
      var _this = this;
      return !J.$eq$(oldPainter.backgroundColor, _this.backgroundColor) || !oldPainter.valueColor.$eq(0, _this.valueColor) || oldPainter.headValue !== _this.headValue || oldPainter.tailValue !== _this.tailValue || oldPainter.offsetValue !== _this.offsetValue || oldPainter.rotationValue !== _this.rotationValue || oldPainter.strokeWidth !== _this.strokeWidth;
    }
  };
  A.CircularProgressIndicator.prototype = {
    createState$0() {
      return new A._CircularProgressIndicatorState(null, null);
    }
  };
  A._CircularProgressIndicatorState.prototype = {
    initState$0() {
      var t1, _this = this;
      _this.super$State$initState();
      t1 = A.AnimationController$(null, B.Duration_2961926000, null, null, _this);
      _this.___CircularProgressIndicatorState__controller_A = t1;
      _this._widget.toString;
      t1.repeat$0();
    },
    didUpdateWidget$1(oldWidget) {
      var t1, t2;
      this.super$State$didUpdateWidget(oldWidget);
      this._widget.toString;
      t1 = this.___CircularProgressIndicatorState__controller_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t2 = t1._ticker;
      t2 = !(t2 != null && t2._ticker$_future != null);
      if (t2)
        t1.repeat$0();
    },
    dispose$0() {
      var t1 = this.___CircularProgressIndicatorState__controller_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.dispose$0();
      this.super$__CircularProgressIndicatorState_State_SingleTickerProviderStateMixin$dispose();
    },
    _buildMaterialIndicator$5(context, headValue, tailValue, offsetValue, rotationValue) {
      var t1, t2, t3, t4, _null = null;
      A.Theme_of(context);
      this._widget.toString;
      t1 = A.ProgressIndicatorTheme_of(context);
      this._widget.toString;
      t2 = new A._CircularProgressIndicatorDefaultsM2(context, _null, _null, _null, _null, _null).get$color();
      t3 = A.ProgressIndicatorTheme_of(context).color;
      t2 = t3 == null ? t2 : t3;
      this._widget.toString;
      t3 = tailValue * 3 / 2 * 3.141592653589793;
      t4 = Math.max(headValue * 3 / 2 * 3.141592653589793 - t3, 0.001);
      t1 = A.Container$(_null, A.CustomPaint$(_null, _null, _null, new A._CircularProgressIndicatorPainter(t1.circularTrackColor, t2, _null, headValue, tailValue, offsetValue, rotationValue, 4, -1.5707963267948966 + t3 + rotationValue * 3.141592653589793 * 2 + offsetValue * 0.5 * 3.141592653589793, t4, _null), B.Size_0_0), _null, B.BoxConstraints_rW9, _null, _null, _null, _null, _null);
      return A.Semantics$(_null, _null, t1, false, _null, false, false, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
    },
    _buildAnimation$0() {
      var t1 = this.___CircularProgressIndicatorState__controller_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      return A.AnimatedBuilder$(t1, new A._CircularProgressIndicatorState__buildAnimation_closure(this), null);
    },
    build$1(context) {
      this._widget.toString;
      switch (0) {
        case 0:
          return this._buildAnimation$0();
      }
    }
  };
  A._CircularProgressIndicatorState__buildAnimation_closure.prototype = {
    call$2(context, child) {
      var t1 = this.$this,
        t2 = $.$get$_CircularProgressIndicatorState__strokeHeadTween(),
        t3 = t1.___CircularProgressIndicatorState__controller_A;
      t3 === $ && A.throwUnnamedLateFieldNI();
      return t1._buildMaterialIndicator$5(context, t2.transform$1(t3.get$value()), $.$get$_CircularProgressIndicatorState__strokeTailTween().transform$1(t1.___CircularProgressIndicatorState__controller_A.get$value()), $.$get$_CircularProgressIndicatorState__offsetTween().transform$1(t1.___CircularProgressIndicatorState__controller_A.get$value()), $.$get$_CircularProgressIndicatorState__rotationTween().transform$1(t1.___CircularProgressIndicatorState__controller_A.get$value()));
    },
    $signature: 38
  };
  A._CircularProgressIndicatorDefaultsM2.prototype = {
    get$color() {
      var t1, _this = this,
        value = _this.___CircularProgressIndicatorDefaultsM2__colors_FI;
      if (value === $) {
        t1 = A.Theme_of(_this.context);
        _this.___CircularProgressIndicatorDefaultsM2__colors_FI !== $ && A.throwUnnamedLateFieldADI();
        value = _this.___CircularProgressIndicatorDefaultsM2__colors_FI = t1.colorScheme;
      }
      return value.primary;
    }
  };
  A.__CircularProgressIndicatorState_State_SingleTickerProviderStateMixin.prototype = {
    dispose$0() {
      var _this = this,
        t1 = _this.SingleTickerProviderStateMixin__tickerModeNotifier;
      if (t1 != null)
        t1.removeListener$1(_this.get$_updateTicker());
      _this.SingleTickerProviderStateMixin__tickerModeNotifier = null;
      _this.super$State$dispose();
    },
    activate$0() {
      this.super$State$activate();
      this._updateTickerModeNotifier$0();
      this._updateTicker$0();
    }
  };
  A.ProgressIndicatorThemeData.prototype = {
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(_this.get$color(), _this.linearTrackColor, _this.linearMinHeight, _this.circularTrackColor, _this.refreshBackgroundColor, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      return other instanceof A.ProgressIndicatorThemeData && J.$eq$(other.get$color(), _this.get$color()) && J.$eq$(other.linearTrackColor, _this.linearTrackColor) && other.linearMinHeight == _this.linearMinHeight && J.$eq$(other.circularTrackColor, _this.circularTrackColor) && J.$eq$(other.refreshBackgroundColor, _this.refreshBackgroundColor);
    },
    get$color() {
      return this.color;
    }
  };
  A._ProgressIndicatorThemeData_Object_Diagnosticable.prototype = {};
  A.RadioThemeData.prototype = {
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(_this.mouseCursor, _this.fillColor, _this.overlayColor, _this.splashRadius, _this.materialTapTargetSize, _this.visualDensity, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      t1 = false;
      if (other instanceof A.RadioThemeData)
        if (other.fillColor == _this.fillColor)
          if (other.overlayColor == _this.overlayColor)
            t1 = other.splashRadius == _this.splashRadius;
      return t1;
    }
  };
  A._RadioThemeData_Object_Diagnosticable.prototype = {};
  A._ScaffoldSlot.prototype = {
    _enumToString$0() {
      return "_ScaffoldSlot." + this._name;
    }
  };
  A.ScaffoldMessenger.prototype = {
    createState$0() {
      var _null = null;
      return new A.ScaffoldMessengerState(A.LinkedHashSet_LinkedHashSet(type$.ScaffoldState), A.ListQueue$(_null, type$.ScaffoldFeatureController_MaterialBanner_MaterialBannerClosedReason), A.ListQueue$(_null, type$.ScaffoldFeatureController_SnackBar_SnackBarClosedReason), _null, _null);
    }
  };
  A.ScaffoldMessengerState.prototype = {
    didChangeDependencies$0() {
      var accessibleNavigation, t2, _this = this,
        t1 = _this._element;
      t1.toString;
      accessibleNavigation = A.InheritedModel_inheritFrom(t1, B._MediaQueryAspect_10, type$.MediaQuery).data.accessibleNavigation;
      t1 = _this._accessibleNavigation;
      t2 = false;
      if (t1 === true)
        if (!accessibleNavigation) {
          t1 = _this._snackBarTimer;
          t1 = t1 != null && t1._handle == null;
        } else
          t1 = t2;
      else
        t1 = t2;
      if (t1)
        _this.hideCurrentSnackBar$1$reason(B.SnackBarClosedReason_5);
      _this._accessibleNavigation = accessibleNavigation;
      _this.super$State$didChangeDependencies();
    },
    hideCurrentSnackBar$1$reason(reason) {
      var completer, _this = this,
        t1 = _this._snackBars,
        t2 = t1._head === t1._tail;
      if (!t2)
        null.get$status();
      if (t2)
        return;
      completer = t1.get$first(0)._completer;
      t1 = _this._accessibleNavigation;
      t1.toString;
      if (t1) {
        null.set$value(0);
        completer.complete$1(reason);
      } else
        null.reverse$0().then$1$1(new A.ScaffoldMessengerState_hideCurrentSnackBar_closure(completer, reason), type$.void);
      t1 = _this._snackBarTimer;
      if (t1 != null)
        t1.cancel$0();
      _this._snackBarTimer = null;
    },
    build$1(context) {
      var route, _this = this;
      _this._accessibleNavigation = A.InheritedModel_inheritFrom(context, B._MediaQueryAspect_10, type$.MediaQuery).data.accessibleNavigation;
      if (!_this._snackBars.get$isEmpty(0)) {
        route = A.ModalRoute_of(context, type$.nullable_Object);
        if (route == null || route.get$isCurrent())
          null.get$isCompleted();
      }
      return new A._ScaffoldMessengerScope(_this, _this._widget.child, null);
    },
    dispose$0() {
      var t1 = this._snackBarTimer;
      if (t1 != null)
        t1.cancel$0();
      this._snackBarTimer = null;
      this.super$_ScaffoldMessengerState_State_TickerProviderStateMixin$dispose();
    }
  };
  A.ScaffoldMessengerState_hideCurrentSnackBar_closure.prototype = {
    call$1(value) {
      var t1 = this.completer;
      if ((t1.future._state & 30) === 0)
        t1.complete$1(this.reason);
    },
    $signature: 41
  };
  A._ScaffoldMessengerScope.prototype = {
    updateShouldNotify$1(old) {
      return this._scaffoldMessengerState !== old._scaffoldMessengerState;
    }
  };
  A.ScaffoldPrelayoutGeometry.prototype = {};
  A.ScaffoldGeometry.prototype = {
    copyWith$2$bottomNavigationBarTop$floatingActionButtonArea(bottomNavigationBarTop, floatingActionButtonArea) {
      var t1 = bottomNavigationBarTop == null ? this.bottomNavigationBarTop : bottomNavigationBarTop;
      return new A.ScaffoldGeometry(t1, floatingActionButtonArea == null ? this.floatingActionButtonArea : floatingActionButtonArea);
    }
  };
  A._ScaffoldGeometryNotifier.prototype = {
    _updateWith$3$bottomNavigationBarTop$floatingActionButtonArea$floatingActionButtonScale(bottomNavigationBarTop, floatingActionButtonArea, floatingActionButtonScale) {
      var _this = this;
      _this.floatingActionButtonScale = floatingActionButtonScale == null ? _this.floatingActionButtonScale : floatingActionButtonScale;
      _this.geometry = _this.geometry.copyWith$2$bottomNavigationBarTop$floatingActionButtonArea(bottomNavigationBarTop, floatingActionButtonArea);
      _this.notifyListeners$0();
    },
    _updateWith$1$floatingActionButtonScale(floatingActionButtonScale) {
      return this._updateWith$3$bottomNavigationBarTop$floatingActionButtonArea$floatingActionButtonScale(null, null, floatingActionButtonScale);
    },
    _updateWith$2$bottomNavigationBarTop$floatingActionButtonArea(bottomNavigationBarTop, floatingActionButtonArea) {
      return this._updateWith$3$bottomNavigationBarTop$floatingActionButtonArea$floatingActionButtonScale(bottomNavigationBarTop, floatingActionButtonArea, null);
    }
  };
  A._BodyBoxConstraints.prototype = {
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (!_this.super$BoxConstraints$$eq(0, other))
        return false;
      return other instanceof A._BodyBoxConstraints && other.materialBannerHeight === _this.materialBannerHeight && other.bottomWidgetsHeight === _this.bottomWidgetsHeight && other.appBarHeight === _this.appBarHeight;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(A.BoxConstraints.prototype.get$hashCode.call(_this, 0), _this.materialBannerHeight, _this.bottomWidgetsHeight, _this.appBarHeight, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    }
  };
  A._BodyBuilder.prototype = {
    build$1(context) {
      return this.body;
    }
  };
  A._ScaffoldLayout.prototype = {
    performLayout$1(size) {
      var appBarHeight, contentTop, bottomWidgetsHeight, bottomNavigationBarTop, materialBannerSize, t2, contentBottom, bodyMaxHeight, t3, snackBarSize, bottomSheetSize, floatingActionButtonRect, fabSize, currentGeometry, currentFabOffset, fabOffset, t4, hasCustomWidth, snackBarYOffsetBase, xOffset, _this = this,
        looseConstraints = A.BoxConstraints$loose(size),
        t1 = size._dx,
        fullWidthConstraints = looseConstraints.tighten$1$width(t1),
        bottom = size._dy;
      if (_this._idToChild.$index(0, B._ScaffoldSlot_1) != null) {
        appBarHeight = _this.layoutChild$2(B._ScaffoldSlot_1, fullWidthConstraints)._dy;
        _this.positionChild$2(B._ScaffoldSlot_1, B.Offset_0_0);
        contentTop = appBarHeight;
      } else {
        contentTop = 0;
        appBarHeight = 0;
      }
      if (_this._idToChild.$index(0, B._ScaffoldSlot_7) != null) {
        bottomWidgetsHeight = 0 + _this.layoutChild$2(B._ScaffoldSlot_7, fullWidthConstraints)._dy;
        bottomNavigationBarTop = Math.max(0, bottom - bottomWidgetsHeight);
        _this.positionChild$2(B._ScaffoldSlot_7, new A.Offset(0, bottomNavigationBarTop));
      } else {
        bottomWidgetsHeight = 0;
        bottomNavigationBarTop = null;
      }
      if (_this._idToChild.$index(0, B._ScaffoldSlot_6) != null) {
        bottomWidgetsHeight += _this.layoutChild$2(B._ScaffoldSlot_6, new A.BoxConstraints(0, fullWidthConstraints.maxWidth, 0, Math.max(0, bottom - bottomWidgetsHeight - contentTop)))._dy;
        _this.positionChild$2(B._ScaffoldSlot_6, new A.Offset(0, Math.max(0, bottom - bottomWidgetsHeight)));
      }
      if (_this._idToChild.$index(0, B._ScaffoldSlot_5) != null) {
        materialBannerSize = _this.layoutChild$2(B._ScaffoldSlot_5, fullWidthConstraints);
        _this.positionChild$2(B._ScaffoldSlot_5, new A.Offset(0, appBarHeight));
        if (!_this.extendBodyBehindMaterialBanner)
          contentTop += materialBannerSize._dy;
      } else
        materialBannerSize = B.Size_0_0;
      t2 = _this.minInsets;
      contentBottom = Math.max(0, bottom - Math.max(t2.bottom, bottomWidgetsHeight));
      if (_this._idToChild.$index(0, B._ScaffoldSlot_0) != null) {
        bodyMaxHeight = Math.max(0, contentBottom - contentTop);
        t3 = _this.extendBody;
        if (t3)
          bodyMaxHeight = A.clampDouble(bodyMaxHeight + bottomWidgetsHeight, 0, looseConstraints.maxHeight - contentTop);
        t3 = t3 ? bottomWidgetsHeight : 0;
        _this.layoutChild$2(B._ScaffoldSlot_0, new A._BodyBoxConstraints(t3, appBarHeight, materialBannerSize._dy, 0, fullWidthConstraints.maxWidth, 0, bodyMaxHeight));
        _this.positionChild$2(B._ScaffoldSlot_0, new A.Offset(0, contentTop));
      }
      if (_this._idToChild.$index(0, B._ScaffoldSlot_2) != null) {
        _this.layoutChild$2(B._ScaffoldSlot_2, new A.BoxConstraints(0, fullWidthConstraints.maxWidth, 0, contentBottom));
        _this.positionChild$2(B._ScaffoldSlot_2, B.Offset_0_0);
      }
      snackBarSize = _this._idToChild.$index(0, B._ScaffoldSlot_4) != null && !_this.isSnackBarFloating ? _this.layoutChild$2(B._ScaffoldSlot_4, fullWidthConstraints) : B.Size_0_0;
      if (_this._idToChild.$index(0, B._ScaffoldSlot_3) != null) {
        bottomSheetSize = _this.layoutChild$2(B._ScaffoldSlot_3, new A.BoxConstraints(0, fullWidthConstraints.maxWidth, 0, Math.max(0, contentBottom - contentTop)));
        _this.positionChild$2(B._ScaffoldSlot_3, new A.Offset((t1 - bottomSheetSize._dx) / 2, contentBottom - bottomSheetSize._dy));
      } else
        bottomSheetSize = B.Size_0_0;
      floatingActionButtonRect = A._Cell$();
      if (_this._idToChild.$index(0, B._ScaffoldSlot_8) != null) {
        fabSize = _this.layoutChild$2(B._ScaffoldSlot_8, looseConstraints);
        currentGeometry = new A.ScaffoldPrelayoutGeometry(fabSize, bottomSheetSize, contentBottom, t2, _this.minViewPadding, size, snackBarSize, _this.textDirection);
        currentFabOffset = _this.currentFloatingActionButtonLocation.getOffset$1(currentGeometry);
        fabOffset = _this.floatingActionButtonMotionAnimator.getOffset$3$begin$end$progress(_this.previousFloatingActionButtonLocation.getOffset$1(currentGeometry), currentFabOffset, _this.floatingActionButtonMoveAnimationProgress);
        _this.positionChild$2(B._ScaffoldSlot_8, fabOffset);
        t3 = fabOffset._dx;
        t4 = fabOffset._dy;
        floatingActionButtonRect.__late_helper$_value = new A.Rect(t3, t4, t3 + fabSize._dx, t4 + fabSize._dy);
      }
      if (_this._idToChild.$index(0, B._ScaffoldSlot_4) != null) {
        t3 = _this.snackBarWidth;
        hasCustomWidth = t3 != null && t3 < t1;
        if (snackBarSize.$eq(0, B.Size_0_0))
          snackBarSize = _this.layoutChild$2(B._ScaffoldSlot_4, hasCustomWidth ? looseConstraints : fullWidthConstraints);
        t4 = floatingActionButtonRect._readLocal$0();
        if (!new A.Size(t4.right - t4.left, t4.bottom - t4.top).$eq(0, B.Size_0_0) && _this.isSnackBarFloating)
          snackBarYOffsetBase = floatingActionButtonRect._readLocal$0().top;
        else
          snackBarYOffsetBase = _this.isSnackBarFloating ? Math.min(contentBottom, bottom - _this.minViewPadding.bottom) : contentBottom;
        xOffset = hasCustomWidth ? (t1 - t3) / 2 : 0;
        _this.positionChild$2(B._ScaffoldSlot_4, new A.Offset(xOffset, snackBarYOffsetBase - snackBarSize._dy));
      }
      if (_this._idToChild.$index(0, B._ScaffoldSlot_11) != null) {
        _this.layoutChild$2(B._ScaffoldSlot_11, fullWidthConstraints.tighten$1$height(t2.top));
        _this.positionChild$2(B._ScaffoldSlot_11, B.Offset_0_0);
      }
      if (_this._idToChild.$index(0, B._ScaffoldSlot_9) != null) {
        _this.layoutChild$2(B._ScaffoldSlot_9, A.BoxConstraints$tight(size));
        _this.positionChild$2(B._ScaffoldSlot_9, B.Offset_0_0);
      }
      if (_this._idToChild.$index(0, B._ScaffoldSlot_10) != null) {
        _this.layoutChild$2(B._ScaffoldSlot_10, A.BoxConstraints$tight(size));
        _this.positionChild$2(B._ScaffoldSlot_10, B.Offset_0_0);
      }
      _this.geometryNotifier._updateWith$2$bottomNavigationBarTop$floatingActionButtonArea(bottomNavigationBarTop, floatingActionButtonRect._readLocal$0());
    },
    shouldRelayout$1(oldDelegate) {
      var _this = this,
        t1 = true;
      if (oldDelegate.minInsets.$eq(0, _this.minInsets))
        if (oldDelegate.minViewPadding.$eq(0, _this.minViewPadding))
          if (oldDelegate.textDirection === _this.textDirection)
            if (oldDelegate.floatingActionButtonMoveAnimationProgress === _this.floatingActionButtonMoveAnimationProgress)
              if (oldDelegate.previousFloatingActionButtonLocation === _this.previousFloatingActionButtonLocation)
                if (oldDelegate.currentFloatingActionButtonLocation === _this.currentFloatingActionButtonLocation)
                  t1 = oldDelegate.extendBody !== _this.extendBody;
      return t1;
    }
  };
  A._FloatingActionButtonTransition.prototype = {
    createState$0() {
      return new A._FloatingActionButtonTransitionState(null, null);
    }
  };
  A._FloatingActionButtonTransitionState.prototype = {
    initState$0() {
      var t1, t2, _this = this;
      _this.super$State$initState();
      t1 = A.AnimationController$(null, B.Duration_200000, null, null, _this);
      t1.didRegisterListener$0();
      t2 = t1.AnimationLocalStatusListenersMixin__statusListeners;
      t2._isDirty = true;
      t2._observer_list$_list.push(_this.get$_handlePreviousAnimationStatusChanged());
      _this.___FloatingActionButtonTransitionState__previousController_A = t1;
      _this._updateAnimations$0();
      _this._widget.geometryNotifier._updateWith$1$floatingActionButtonScale(0);
    },
    dispose$0() {
      var t1 = this.___FloatingActionButtonTransitionState__previousController_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.dispose$0();
      this.super$__FloatingActionButtonTransitionState_State_TickerProviderStateMixin$dispose();
    },
    didUpdateWidget$1(oldWidget) {
      var t1, _this = this;
      _this.super$State$didUpdateWidget(oldWidget);
      t1 = _this._widget;
      if (oldWidget.fabMotionAnimator !== t1.fabMotionAnimator || oldWidget.fabMoveAnimation !== t1.fabMoveAnimation)
        _this._updateAnimations$0();
      _this._widget.toString;
      return;
    },
    _updateAnimations$0() {
      var previousExitScaleAnimation, t2, currentEntranceScaleAnimation, t3, t4, t5, t6, t7, t8, t9, t10, moveScaleAnimation, t11, t12, moveRotationAnimation, _this = this, _null = null,
        t1 = _this.___FloatingActionButtonTransitionState__previousController_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      previousExitScaleAnimation = A.CurvedAnimation$(B.Cubic_Pa6, t1, _null);
      t1 = type$.Tween_double;
      t2 = A.CurvedAnimation$(B.Cubic_Pa6, _this.___FloatingActionButtonTransitionState__previousController_A, _null);
      currentEntranceScaleAnimation = A.CurvedAnimation$(B.Cubic_Pa6, _this._widget.currentController, _null);
      t3 = _this._widget;
      t4 = t3.currentController;
      t5 = $.$get$_FloatingActionButtonTransitionState__entranceTurnTween();
      t6 = type$.Animation_double;
      t6._as(t4);
      t3 = t3.fabMoveAnimation;
      t6._as(t3);
      t7 = type$.CurveTween._eval$1("_AnimatedEvaluation<Animatable.T>");
      t8 = type$.JSArray_of_void_Function_AnimationStatus;
      t9 = type$.ObserverList_of_void_Function_AnimationStatus;
      t10 = type$.double;
      moveScaleAnimation = A._AnimationSwap$(new A.ReverseAnimation(new A._AnimatedEvaluation(t3, new A.CurveTween(new A.FlippedCurve(B.Interval_ERv)), t7), new A.ObserverList(A._setArrayType([], t8), t9), 0), new A._AnimatedEvaluation(t3, new A.CurveTween(B.Interval_ERv), t7), t3, 0.5, t10);
      t3 = _this._widget.fabMoveAnimation;
      t11 = $.$get$_ScalingFabMotionAnimator__rotationTween();
      t6._as(t3);
      t12 = $.$get$_ScalingFabMotionAnimator__thresholdCenterTween();
      moveRotationAnimation = A._AnimationSwap$(new A._AnimatedEvaluation(t3, t11, t11.$ti._eval$1("_AnimatedEvaluation<Animatable.T>")), new A.ReverseAnimation(new A._AnimatedEvaluation(t3, t12, A._instanceType(t12)._eval$1("_AnimatedEvaluation<Animatable.T>")), new A.ObserverList(A._setArrayType([], t8), t9), 0), t3, 0.5, t10);
      _this.___FloatingActionButtonTransitionState__previousScaleAnimation_A = A.AnimationMin$(moveScaleAnimation, previousExitScaleAnimation, t10);
      t10 = A.AnimationMin$(moveScaleAnimation, currentEntranceScaleAnimation, t10);
      _this.___FloatingActionButtonTransitionState__currentScaleAnimation_A = t10;
      _this.___FloatingActionButtonTransitionState__extendedCurrentScaleAnimation_A = new A._AnimatedEvaluation(t6._as(t10), new A.CurveTween(B.Interval_QUT), t7);
      _this.___FloatingActionButtonTransitionState__previousRotationAnimation_A = A.TrainHoppingAnimation$(new A._AnimatedEvaluation(t2, new A.Tween(1, 1, t1), t1._eval$1("_AnimatedEvaluation<Animatable.T>")), moveRotationAnimation, _null);
      _this.___FloatingActionButtonTransitionState__currentRotationAnimation_A = A.TrainHoppingAnimation$(new A._AnimatedEvaluation(t4, t5, t5.$ti._eval$1("_AnimatedEvaluation<Animatable.T>")), moveRotationAnimation, _null);
      t5 = _this.___FloatingActionButtonTransitionState__currentScaleAnimation_A;
      t4 = _this.get$_onProgressChanged();
      t5.didRegisterListener$0();
      t5 = t5.AnimationLocalListenersMixin__listeners;
      t5._isDirty = true;
      t5._observer_list$_list.push(t4);
      t5 = _this.___FloatingActionButtonTransitionState__previousScaleAnimation_A;
      t5.didRegisterListener$0();
      t5 = t5.AnimationLocalListenersMixin__listeners;
      t5._isDirty = true;
      t5._observer_list$_list.push(t4);
    },
    _handlePreviousAnimationStatusChanged$1($status) {
      this.setState$1(new A._FloatingActionButtonTransitionState__handlePreviousAnimationStatusChanged_closure(this, $status));
    },
    build$1(context) {
      var t3, t4, _this = this,
        t1 = A._setArrayType([], type$.JSArray_Widget),
        t2 = _this.___FloatingActionButtonTransitionState__previousController_A;
      t2 === $ && A.throwUnnamedLateFieldNI();
      t2 = t2.__AnimationController__status_A;
      t2 === $ && A.throwUnnamedLateFieldNI();
      if (t2 !== B.AnimationStatus_0) {
        t2 = _this.___FloatingActionButtonTransitionState__previousScaleAnimation_A;
        t2 === $ && A.throwUnnamedLateFieldNI();
        t3 = _this.___FloatingActionButtonTransitionState__previousRotationAnimation_A;
        t3 === $ && A.throwUnnamedLateFieldNI();
        t1.push(A.ScaleTransition$(A.RotationTransition$(_this._previousChild, t3), t2));
      }
      t2 = _this._widget;
      t2.toString;
      t3 = _this.___FloatingActionButtonTransitionState__currentScaleAnimation_A;
      t3 === $ && A.throwUnnamedLateFieldNI();
      t4 = _this.___FloatingActionButtonTransitionState__currentRotationAnimation_A;
      t4 === $ && A.throwUnnamedLateFieldNI();
      t1.push(A.ScaleTransition$(A.RotationTransition$(t2.child, t4), t3));
      return A.Stack$(B.Alignment_1_0, t1, B.StackFit_0);
    },
    _onProgressChanged$0() {
      var t2,
        t1 = this.___FloatingActionButtonTransitionState__previousScaleAnimation_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1 = Math.min(t1.first.get$value(), t1.next.get$value());
      t2 = this.___FloatingActionButtonTransitionState__currentScaleAnimation_A;
      t2 === $ && A.throwUnnamedLateFieldNI();
      t2 = Math.max(t1, Math.min(t2.first.get$value(), t2.next.get$value()));
      this._widget.geometryNotifier._updateWith$1$floatingActionButtonScale(t2);
    }
  };
  A._FloatingActionButtonTransitionState__handlePreviousAnimationStatusChanged_closure.prototype = {
    call$0() {
      if (this.status === B.AnimationStatus_0)
        this.$this._widget.toString;
    },
    $signature: 0
  };
  A.Scaffold.prototype = {
    createState$0() {
      var _null = null,
        t1 = type$.LabeledGlobalKey_DrawerControllerState,
        t2 = type$.LabeledGlobalKey_State_StatefulWidget,
        t3 = $.$get$ChangeNotifier__emptyListeners();
      return new A.ScaffoldState(new A.LabeledGlobalKey(_null, t1), new A.LabeledGlobalKey(_null, t1), new A.LabeledGlobalKey(_null, t2), new A.RestorableBool(false, t3), new A.RestorableBool(false, t3), A._setArrayType([], type$.JSArray__StandardBottomSheet), new A.LabeledGlobalKey(_null, t2), B.Color_4278190080, _null, A.LinkedHashMap_LinkedHashMap$_empty(type$.RestorableProperty_nullable_Object, type$.void_Function), _null, true, _null, _null, _null);
    }
  };
  A.ScaffoldState.prototype = {
    get$restorationId() {
      this._widget.toString;
      return null;
    },
    restoreState$2(oldBucket, initialRestore) {
      var _this = this;
      _this.registerForRestoration$2(_this._drawerOpened, "drawer_open");
      _this.registerForRestoration$2(_this._endDrawerOpened, "end_drawer_open");
    },
    _updateSnackBar$0() {
      var _this = this,
        t1 = _this._scaffoldMessenger._snackBars,
        messengerSnackBar = !t1.get$isEmpty(0) ? t1.get$first(0) : null;
      if (_this._messengerSnackBar != messengerSnackBar)
        _this.setState$1(new A.ScaffoldState__updateSnackBar_closure(_this, messengerSnackBar));
    },
    _updateMaterialBanner$0() {
      var _this = this,
        t1 = _this._scaffoldMessenger._materialBanners,
        messengerMaterialBanner = !t1.get$isEmpty(0) ? t1.get$first(0) : null;
      if (_this._messengerMaterialBanner != messengerMaterialBanner)
        _this.setState$1(new A.ScaffoldState__updateMaterialBanner_closure(_this, messengerMaterialBanner));
    },
    _maybeBuildPersistentBottomSheet$0() {
      this._widget.toString;
    },
    _handleStatusBarTap$0() {
      var primaryScrollController,
        t1 = this._element;
      t1.toString;
      primaryScrollController = A.PrimaryScrollController_maybeOf(t1);
      if (primaryScrollController != null && primaryScrollController._positions.length !== 0)
        primaryScrollController.animateTo$3$curve$duration(0, B.Cubic_rLI, B.Duration_1000000);
    },
    get$_resizeToAvoidBottomInset() {
      this._widget.toString;
      return true;
    },
    initState$0() {
      var _this = this, _null = null;
      _this.super$State$initState();
      _this._element.toString;
      _this.__ScaffoldState__geometryNotifier_A = new A._ScaffoldGeometryNotifier(B.ScaffoldGeometry_null_null, $.$get$ChangeNotifier__emptyListeners());
      _this._widget.toString;
      _this._floatingActionButtonLocation = B.C__EndFloatFabLocation;
      _this.__ScaffoldState__floatingActionButtonAnimator_A = B.C__ScalingFabMotionAnimator;
      _this._previousFloatingActionButtonLocation = B.C__EndFloatFabLocation;
      _this.__ScaffoldState__floatingActionButtonMoveController_A = A.AnimationController$(_null, new A.Duration(400000), _null, 1, _this);
      _this.__ScaffoldState__floatingActionButtonVisibilityController_A = A.AnimationController$(_null, B.Duration_200000, _null, _null, _this);
    },
    didUpdateWidget$1(oldWidget) {
      this.super$_ScaffoldState_State_TickerProviderStateMixin_RestorationMixin$didUpdateWidget(oldWidget);
      this._widget.toString;
    },
    didChangeDependencies$0() {
      var t3, $parent, _this = this,
        scope = _this._element.dependOnInheritedWidgetOfExactType$1$0(type$._ScaffoldMessengerScope),
        currentScaffoldMessenger = scope == null ? null : scope._scaffoldMessengerState,
        t1 = _this._scaffoldMessenger,
        t2 = t1 == null;
      if (!t2)
        t3 = currentScaffoldMessenger == null || t1 !== currentScaffoldMessenger;
      else
        t3 = false;
      if (t3)
        if (!t2)
          t1._scaffolds.remove$1(0, _this);
      _this._scaffoldMessenger = currentScaffoldMessenger;
      if (currentScaffoldMessenger != null) {
        t1 = currentScaffoldMessenger._scaffolds;
        t1.add$1(0, _this);
        $parent = _this._element.findAncestorStateOfType$1$0(type$.ScaffoldState);
        if ($parent == null || !t1.contains$1(0, $parent)) {
          if (!currentScaffoldMessenger._snackBars.get$isEmpty(0))
            _this._updateSnackBar$0();
          if (!currentScaffoldMessenger._materialBanners.get$isEmpty(0))
            _this._updateMaterialBanner$0();
        }
      }
      _this._maybeBuildPersistentBottomSheet$0();
      _this.super$_ScaffoldState_State_TickerProviderStateMixin_RestorationMixin$didChangeDependencies();
    },
    dispose$0() {
      var _this = this,
        t1 = _this.__ScaffoldState__geometryNotifier_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.ChangeNotifier__listeners = $.$get$ChangeNotifier__emptyListeners();
      t1.ChangeNotifier__count = 0;
      t1 = _this.__ScaffoldState__floatingActionButtonMoveController_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.dispose$0();
      t1 = _this.__ScaffoldState__floatingActionButtonVisibilityController_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.dispose$0();
      t1 = _this._scaffoldMessenger;
      if (t1 != null)
        t1._scaffolds.remove$1(0, _this);
      _this._drawerOpened.dispose$0();
      _this._endDrawerOpened.dispose$0();
      _this.super$_ScaffoldState_State_TickerProviderStateMixin_RestorationMixin$dispose();
    },
    _addIfNonNull$9$maintainBottomViewPadding$removeBottomInset$removeBottomPadding$removeLeftPadding$removeRightPadding$removeTopPadding(children, child, childId, maintainBottomViewPadding, removeBottomInset, removeBottomPadding, removeLeftPadding, removeRightPadding, removeTopPadding) {
      var data,
        t1 = this._element;
      t1.toString;
      data = A.InheritedModel_inheritFrom(t1, null, type$.MediaQuery).data.removePadding$4$removeBottom$removeLeft$removeRight$removeTop(removeBottomPadding, removeLeftPadding, removeRightPadding, removeTopPadding);
      if (removeBottomInset)
        data = data.removeViewInsets$1$removeBottom(true);
      if (maintainBottomViewPadding && data.viewInsets.bottom !== 0)
        data = data.copyWith$1$padding(data.padding.copyWith$1$bottom(data.viewPadding.bottom));
      if (child != null)
        children.push(A.LayoutId$(A.MediaQuery$(child, data, null), childId));
    },
    _addIfNonNull$8$removeBottomInset$removeBottomPadding$removeLeftPadding$removeRightPadding$removeTopPadding(children, child, childId, removeBottomInset, removeBottomPadding, removeLeftPadding, removeRightPadding, removeTopPadding) {
      return this._addIfNonNull$9$maintainBottomViewPadding$removeBottomInset$removeBottomPadding$removeLeftPadding$removeRightPadding$removeTopPadding(children, child, childId, false, removeBottomInset, removeBottomPadding, removeLeftPadding, removeRightPadding, removeTopPadding);
    },
    _addIfNonNull$7$removeBottomPadding$removeLeftPadding$removeRightPadding$removeTopPadding(children, child, childId, removeBottomPadding, removeLeftPadding, removeRightPadding, removeTopPadding) {
      return this._addIfNonNull$9$maintainBottomViewPadding$removeBottomInset$removeBottomPadding$removeLeftPadding$removeRightPadding$removeTopPadding(children, child, childId, false, false, removeBottomPadding, removeLeftPadding, removeRightPadding, removeTopPadding);
    },
    _addIfNonNull$8$maintainBottomViewPadding$removeBottomPadding$removeLeftPadding$removeRightPadding$removeTopPadding(children, child, childId, maintainBottomViewPadding, removeBottomPadding, removeLeftPadding, removeRightPadding, removeTopPadding) {
      return this._addIfNonNull$9$maintainBottomViewPadding$removeBottomInset$removeBottomPadding$removeLeftPadding$removeRightPadding$removeTopPadding(children, child, childId, maintainBottomViewPadding, false, removeBottomPadding, removeLeftPadding, removeRightPadding, removeTopPadding);
    },
    _buildEndDrawer$2(children, textDirection) {
      this._widget.toString;
    },
    _buildDrawer$2(children, textDirection) {
      this._widget.toString;
    },
    build$1(context) {
      var t2, stack, elevation, t3, t4, minInsets, minViewPadding, _this = this, _null = null, _box_0 = {},
        themeData = A.Theme_of(context),
        textDirection = context.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality).textDirection,
        children = A._setArrayType([], type$.JSArray_LayoutId),
        t1 = _this._widget.body;
      _this.get$_resizeToAvoidBottomInset();
      _this._addIfNonNull$8$removeBottomInset$removeBottomPadding$removeLeftPadding$removeRightPadding$removeTopPadding(children, new A._BodyBuilder(new A.KeyedSubtree(t1, _this._bodyKey), false, false, _null), B._ScaffoldSlot_0, true, false, false, false, true);
      if (_this._showBodyScrim)
        _this._addIfNonNull$7$removeBottomPadding$removeLeftPadding$removeRightPadding$removeTopPadding(children, A.ModalBarrier$(true, _null, _this._bodyScrimColor, false, _null, _null, _null), B._ScaffoldSlot_2, true, true, true, true);
      _this._widget.toString;
      t1 = A.InheritedModel_inheritFrom(context, B._MediaQueryAspect_5, type$.MediaQuery).data;
      t1 = _this._appBarMaxHeight = A.AppBar_preferredHeightFor(context, _this._widget.appBar.preferredSize) + t1.padding.top;
      t2 = _this._widget.appBar;
      _this._addIfNonNull$7$removeBottomPadding$removeLeftPadding$removeRightPadding$removeTopPadding(children, new A.ConstrainedBox(new A.BoxConstraints(0, 1 / 0, 0, t1), new A.FlexibleSpaceBarSettings(1, t1, t1, t1, _null, t2, _null), _null), B._ScaffoldSlot_1, true, false, false, false);
      _box_0.isSnackBarFloating = false;
      _box_0.snackBarWidth = null;
      if (_this._currentBottomSheet != null || _this._dismissedBottomSheets.length !== 0) {
        t1 = A.List_List$_of(_this._dismissedBottomSheets, type$.Widget);
        t2 = _this._currentBottomSheet;
        if (t2 != null)
          t1.push(t2._scaffold$_widget);
        stack = A.Stack$(B.Alignment_0_1, t1, B.StackFit_0);
        _this.get$_resizeToAvoidBottomInset();
        _this._addIfNonNull$7$removeBottomPadding$removeLeftPadding$removeRightPadding$removeTopPadding(children, stack, B._ScaffoldSlot_3, true, false, false, true);
      }
      t1 = _this._messengerSnackBar;
      if (t1 != null) {
        t1._scaffold$_widget.get$behavior();
        _box_0.isSnackBarFloating = false;
        t1 = _this._messengerSnackBar;
        if (t1 != null)
          t1._scaffold$_widget.get$width();
        _box_0.snackBarWidth = themeData.snackBarTheme.width;
        t1 = _this._messengerSnackBar;
        t1 = t1 == null ? _null : t1._scaffold$_widget;
        _this._widget.toString;
        _this.get$_resizeToAvoidBottomInset();
        _this._addIfNonNull$8$maintainBottomViewPadding$removeBottomPadding$removeLeftPadding$removeRightPadding$removeTopPadding(children, t1, B._ScaffoldSlot_4, false, false, false, false, true);
      }
      _box_0.extendBodyBehindMaterialBanner = false;
      if (_this._messengerMaterialBanner != null) {
        context.dependOnInheritedWidgetOfExactType$1$0(type$.MaterialBannerTheme);
        t1 = A.Theme_of(context);
        t2 = _this._messengerMaterialBanner;
        if (t2 != null)
          t2._scaffold$_widget.get$elevation();
        elevation = t1.bannerTheme.elevation;
        _box_0.extendBodyBehindMaterialBanner = (elevation == null ? 0 : elevation) !== 0;
        t1 = _this._messengerMaterialBanner;
        t1 = t1 == null ? _null : t1._scaffold$_widget;
        _this._widget.toString;
        _this.get$_resizeToAvoidBottomInset();
        _this._addIfNonNull$8$maintainBottomViewPadding$removeBottomPadding$removeLeftPadding$removeRightPadding$removeTopPadding(children, t1, B._ScaffoldSlot_5, false, true, false, false, true);
      }
      _this._widget.toString;
      t1 = _this.__ScaffoldState__floatingActionButtonMoveController_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t2 = _this.__ScaffoldState__floatingActionButtonAnimator_A;
      t2 === $ && A.throwUnnamedLateFieldNI();
      t3 = _this.__ScaffoldState__geometryNotifier_A;
      t3 === $ && A.throwUnnamedLateFieldNI();
      t4 = _this.__ScaffoldState__floatingActionButtonVisibilityController_A;
      t4 === $ && A.throwUnnamedLateFieldNI();
      _this._addIfNonNull$7$removeBottomPadding$removeLeftPadding$removeRightPadding$removeTopPadding(children, new A._FloatingActionButtonTransition(_null, t1, t2, t3, t4, _null), B._ScaffoldSlot_8, true, true, true, true);
      switch (themeData.platform.index) {
        case 2:
        case 4:
          _this._addIfNonNull$7$removeBottomPadding$removeLeftPadding$removeRightPadding$removeTopPadding(children, A.GestureDetector$(B.HitTestBehavior_1, _null, B.DragStartBehavior_1, true, _null, _null, _null, _null, _null, _null, _null, _null, _this.get$_handleStatusBarTap(), _null, _null, _null, _null, _null, _null), B._ScaffoldSlot_11, true, false, false, true);
          break;
        case 0:
        case 1:
        case 3:
        case 5:
          break;
      }
      t1 = _this._endDrawerOpened;
      t2 = t1._restoration_properties$_value;
      if (t2 == null ? A._instanceType(t1)._eval$1("RestorableValue.T")._as(t2) : t2) {
        _this._buildDrawer$2(children, textDirection);
        _this._buildEndDrawer$2(children, textDirection);
      } else {
        _this._buildEndDrawer$2(children, textDirection);
        _this._buildDrawer$2(children, textDirection);
      }
      t1 = type$.MediaQuery;
      t2 = A.InheritedModel_inheritFrom(context, B._MediaQueryAspect_5, t1).data;
      _this.get$_resizeToAvoidBottomInset();
      t3 = A.InheritedModel_inheritFrom(context, B._MediaQueryAspect_6, t1).data;
      minInsets = t2.padding.copyWith$1$bottom(t3.viewInsets.bottom);
      t2 = A.InheritedModel_inheritFrom(context, B._MediaQueryAspect_8, t1).data;
      _this.get$_resizeToAvoidBottomInset();
      t1 = A.InheritedModel_inheritFrom(context, B._MediaQueryAspect_6, t1).data;
      t1 = t1.viewInsets.bottom !== 0 ? 0 : _null;
      minViewPadding = t2.viewPadding.copyWith$1$bottom(t1);
      if (minInsets.bottom <= 0)
        _this._widget.toString;
      _this._widget.toString;
      return new A._ScaffoldScope(false, new A.ScrollNotificationObserver(A.Material$(B.Duration_200000, A.AnimatedBuilder$(_this.__ScaffoldState__floatingActionButtonMoveController_A, new A.ScaffoldState_build_closure(_box_0, _this, false, minInsets, minViewPadding, textDirection, children), _null), B.Clip_0, themeData.scaffoldBackgroundColor, 0, _null, _null, _null, _null, _null, B.MaterialType_0), _null), _null);
    }
  };
  A.ScaffoldState__updateSnackBar_closure.prototype = {
    call$0() {
      this.$this._messengerSnackBar = this.messengerSnackBar;
    },
    $signature: 0
  };
  A.ScaffoldState__updateMaterialBanner_closure.prototype = {
    call$0() {
      this.$this._messengerMaterialBanner = this.messengerMaterialBanner;
    },
    $signature: 0
  };
  A.ScaffoldState_build_closure.prototype = {
    call$2(context, child) {
      var t3, t4, t5, t6, t7, t8, t9, _this = this,
        t1 = A.LinkedHashMap_LinkedHashMap$_literal([B.Type_DismissIntent_GEb, new A._DismissDrawerAction(context, new A.ObserverList(A._setArrayType([], type$.JSArray_of_void_Function_Action_Intent), type$.ObserverList_of_void_Function_Action_Intent))], type$.Type, type$.Action_Intent),
        t2 = _this.$this;
      t2._widget.toString;
      t3 = t2._floatingActionButtonLocation;
      t3.toString;
      t4 = t2.__ScaffoldState__floatingActionButtonMoveController_A;
      t4 === $ && A.throwUnnamedLateFieldNI();
      t4 = t4.__AnimationController__value_A;
      t4 === $ && A.throwUnnamedLateFieldNI();
      t5 = t2.__ScaffoldState__floatingActionButtonAnimator_A;
      t5 === $ && A.throwUnnamedLateFieldNI();
      t6 = t2.__ScaffoldState__geometryNotifier_A;
      t6 === $ && A.throwUnnamedLateFieldNI();
      t2 = t2._previousFloatingActionButtonLocation;
      t2.toString;
      t7 = _this._box_0;
      t8 = t7.isSnackBarFloating;
      t9 = t7.extendBodyBehindMaterialBanner;
      return A.Actions$(t1, new A.CustomMultiChildLayout(new A._ScaffoldLayout(_this.extendBody, false, _this.minInsets, _this.minViewPadding, _this.textDirection, t6, t2, t3, t4, t5, t8, t7.snackBarWidth, t9), _this.children, null));
    },
    $signature: 116
  };
  A._DismissDrawerAction.prototype = {
    isEnabled$1(intent) {
      var t1 = this.context,
        t2 = A.Scaffold_of(t1)._drawerOpened,
        t3 = t2._restoration_properties$_value;
      if (!(t3 == null ? A._instanceType(t2)._eval$1("RestorableValue.T")._as(t3) : t3)) {
        t1 = A.Scaffold_of(t1)._endDrawerOpened;
        t2 = t1._restoration_properties$_value;
        t1 = t2 == null ? A._instanceType(t1)._eval$1("RestorableValue.T")._as(t2) : t2;
      } else
        t1 = true;
      return t1;
    },
    invoke$1(intent) {
      var t1 = this.context;
      A.Scaffold_of(t1)._widget.toString;
      A.Scaffold_of(t1)._widget.toString;
    }
  };
  A._ScaffoldScope.prototype = {
    updateShouldNotify$1(oldWidget) {
      return this.hasDrawer !== oldWidget.hasDrawer;
    }
  };
  A._ScaffoldState_State_TickerProviderStateMixin_RestorationMixin_dispose_closure.prototype = {
    call$2(property, listener) {
      if (!property._disposed)
        property.removeListener$1(listener);
    },
    $signature: 23
  };
  A._ScaffoldMessengerState_State_TickerProviderStateMixin.prototype = {
    activate$0() {
      this.super$State$activate();
      this._updateTickerModeNotifier$0();
      this._updateTickers$0();
    },
    dispose$0() {
      var _this = this,
        t1 = _this.TickerProviderStateMixin__tickerModeNotifier;
      if (t1 != null)
        t1.removeListener$1(_this.get$_updateTickers());
      _this.TickerProviderStateMixin__tickerModeNotifier = null;
      _this.super$State$dispose();
    }
  };
  A._ScaffoldState_State_TickerProviderStateMixin.prototype = {
    activate$0() {
      this.super$State$activate();
      this._updateTickerModeNotifier$0();
      this._updateTickers$0();
    },
    dispose$0() {
      var _this = this,
        t1 = _this.TickerProviderStateMixin__tickerModeNotifier;
      if (t1 != null)
        t1.removeListener$1(_this.get$_updateTickers());
      _this.TickerProviderStateMixin__tickerModeNotifier = null;
      _this.super$State$dispose();
    }
  };
  A._ScaffoldState_State_TickerProviderStateMixin_RestorationMixin.prototype = {
    didUpdateWidget$1(oldWidget) {
      this.super$State$didUpdateWidget(oldWidget);
      this.didUpdateRestorationId$0();
    },
    didChangeDependencies$0() {
      var oldBucket, needsRestore, t1, didReplaceBucket, _this = this;
      _this.super$State$didChangeDependencies();
      oldBucket = _this.RestorationMixin__bucket;
      needsRestore = _this.get$restorePending();
      t1 = _this._element;
      t1.toString;
      t1 = A.RestorationScope_maybeOf(t1);
      _this.RestorationMixin__currentParent = t1;
      didReplaceBucket = _this._updateBucketIfNecessary$2$parent$restorePending(t1, needsRestore);
      if (needsRestore) {
        _this.restoreState$2(oldBucket, _this.RestorationMixin__firstRestorePending);
        _this.RestorationMixin__firstRestorePending = false;
      }
      if (didReplaceBucket)
        if (oldBucket != null)
          oldBucket.dispose$0();
    },
    dispose$0() {
      var t1, _this = this;
      _this.RestorationMixin__properties.forEach$1(0, new A._ScaffoldState_State_TickerProviderStateMixin_RestorationMixin_dispose_closure());
      t1 = _this.RestorationMixin__bucket;
      if (t1 != null)
        t1.dispose$0();
      _this.RestorationMixin__bucket = null;
      _this.super$_ScaffoldState_State_TickerProviderStateMixin$dispose();
    }
  };
  A.__FloatingActionButtonTransitionState_State_TickerProviderStateMixin.prototype = {
    activate$0() {
      this.super$State$activate();
      this._updateTickerModeNotifier$0();
      this._updateTickers$0();
    },
    dispose$0() {
      var _this = this,
        t1 = _this.TickerProviderStateMixin__tickerModeNotifier;
      if (t1 != null)
        t1.removeListener$1(_this.get$_updateTickers());
      _this.TickerProviderStateMixin__tickerModeNotifier = null;
      _this.super$State$dispose();
    }
  };
  A.Scrollbar.prototype = {
    build$1(context) {
      var _this = this, _null = null;
      if (A.Theme_of(context).platform === B.TargetPlatform_2)
        return new A.CupertinoScrollbar(8, B.Radius_4_4, _this.child, _this.controller, false, B.Radius_rid, 3, _null, B.Duration_250000, B.Duration_1200000, B.Duration_100000, A.scroll_notification__defaultScrollNotificationPredicate$closure(), _null, _null, _null);
      return new A._MaterialScrollbar(_null, _null, _this.child, _this.controller, _null, _null, _null, _null, B.Duration_300000, B.Duration_600000, B.Duration_0, A.scroll_notification__defaultScrollNotificationPredicate$closure(), _null, _null, _null);
    }
  };
  A._MaterialScrollbar.prototype = {
    createState$0() {
      return new A._MaterialScrollbarState(new A.LabeledGlobalKey(null, type$.LabeledGlobalKey_State_StatefulWidget), null, null);
    }
  };
  A._MaterialScrollbarState.prototype = {
    get$showScrollbar() {
      var _this = this,
        t1 = _this._widget.thumbVisibility;
      if (t1 == null) {
        t1 = _this.___MaterialScrollbarState__scrollbarTheme_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
        t1 = t1.thumbVisibility;
        t1 = t1 == null ? null : t1.resolve$1(_this.get$_states());
      }
      if (t1 == null) {
        t1 = _this.___MaterialScrollbarState__scrollbarTheme_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
        t1 = t1.isAlwaysShown;
      }
      return t1 === true;
    },
    get$enableGestures() {
      this._widget.toString;
      var t1 = this.___MaterialScrollbarState__scrollbarTheme_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1 = t1.interactive;
      if (t1 == null) {
        t1 = this.___MaterialScrollbarState__useAndroidScrollbar_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
        t1 = !t1;
      }
      return t1;
    },
    get$_trackVisibility() {
      return new A._MaterialStatePropertyWith(new A._MaterialScrollbarState__trackVisibility_closure(this), type$._MaterialStatePropertyWith_bool);
    },
    get$_states() {
      var t1 = A.LinkedHashSet_LinkedHashSet$_empty(type$.MaterialState);
      if (this._dragIsActive)
        t1.add$1(0, B.MaterialState_3);
      if (this._scrollbar0$_hoverIsActive)
        t1.add$1(0, B.MaterialState_0);
      return t1;
    },
    get$_thumbColor() {
      var onSurface, dragColor, hoverColor, idleColor, t2, t3, t4, _this = this,
        t1 = _this.___MaterialScrollbarState__colorScheme_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      onSurface = t1.onSurface;
      dragColor = A._Cell$();
      hoverColor = A._Cell$();
      idleColor = A._Cell$();
      switch (t1.brightness.index) {
        case 1:
          t1 = onSurface.value;
          t2 = t1 >>> 16 & 255;
          t3 = t1 >>> 8 & 255;
          t1 &= 255;
          dragColor.__late_helper$_value = A.Color$fromARGB(153, t2, t3, t1);
          hoverColor.__late_helper$_value = A.Color$fromARGB(B.JSNumber_methods.round$0(127.5), t2, t3, t1);
          t4 = _this.___MaterialScrollbarState__useAndroidScrollbar_A;
          t4 === $ && A.throwUnnamedLateFieldNI();
          if (t4) {
            t1 = _this._element;
            t1.toString;
            t1 = A.Theme_of(t1).highlightColor.value;
            t1 = A.Color$fromARGB(255, t1 >>> 16 & 255, t1 >>> 8 & 255, t1 & 255);
          } else
            t1 = A.Color$fromARGB(B.JSNumber_methods.round$0(25.5), t2, t3, t1);
          idleColor.__late_helper$_value = t1;
          break;
        case 0:
          t1 = onSurface.value;
          t2 = t1 >>> 16 & 255;
          t3 = t1 >>> 8 & 255;
          t1 &= 255;
          dragColor.__late_helper$_value = A.Color$fromARGB(191, t2, t3, t1);
          hoverColor.__late_helper$_value = A.Color$fromARGB(166, t2, t3, t1);
          t4 = _this.___MaterialScrollbarState__useAndroidScrollbar_A;
          t4 === $ && A.throwUnnamedLateFieldNI();
          if (t4) {
            t1 = _this._element;
            t1.toString;
            t1 = A.Theme_of(t1).highlightColor.value;
            t1 = A.Color$fromARGB(255, t1 >>> 16 & 255, t1 >>> 8 & 255, t1 & 255);
          } else
            t1 = A.Color$fromARGB(B.JSNumber_methods.round$0(76.5), t2, t3, t1);
          idleColor.__late_helper$_value = t1;
          break;
      }
      return new A._MaterialStatePropertyWith(new A._MaterialScrollbarState__thumbColor_closure(_this, dragColor, hoverColor, idleColor), type$._MaterialStatePropertyWith_Color);
    },
    get$_trackColor() {
      var t1 = this.___MaterialScrollbarState__colorScheme_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      return new A._MaterialStatePropertyWith(new A._MaterialScrollbarState__trackColor_closure(this, t1.brightness, t1.onSurface), type$._MaterialStatePropertyWith_Color);
    },
    get$_trackBorderColor() {
      var t1 = this.___MaterialScrollbarState__colorScheme_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      return new A._MaterialStatePropertyWith(new A._MaterialScrollbarState__trackBorderColor_closure(this, t1.brightness, t1.onSurface), type$._MaterialStatePropertyWith_Color);
    },
    get$_thickness() {
      return new A._MaterialStatePropertyWith(new A._MaterialScrollbarState__thickness_closure(this), type$._MaterialStatePropertyWith_double);
    },
    initState$0() {
      var t1, _this = this;
      _this.super$RawScrollbarState$initState();
      t1 = _this.___MaterialScrollbarState__hoverAnimationController_A = A.AnimationController$(null, B.Duration_200000, null, null, _this);
      t1.didRegisterListener$0();
      t1 = t1.AnimationLocalListenersMixin__listeners;
      t1._isDirty = true;
      t1._observer_list$_list.push(new A._MaterialScrollbarState_initState_closure(_this));
    },
    didChangeDependencies$0() {
      var theme, _this = this,
        t1 = _this._element;
      t1.toString;
      theme = A.Theme_of(t1);
      _this.___MaterialScrollbarState__colorScheme_A = theme.colorScheme;
      t1 = _this._element;
      t1.dependOnInheritedWidgetOfExactType$1$0(type$.ScrollbarTheme);
      t1 = A.Theme_of(t1);
      _this.___MaterialScrollbarState__scrollbarTheme_A = t1.scrollbarTheme;
      switch (theme.platform.index) {
        case 0:
          _this.___MaterialScrollbarState__useAndroidScrollbar_A = true;
          break;
        case 2:
        case 3:
        case 1:
        case 4:
        case 5:
          _this.___MaterialScrollbarState__useAndroidScrollbar_A = false;
          break;
      }
      _this.super$RawScrollbarState$didChangeDependencies();
    },
    updateScrollbarPainter$0() {
      var t2, _this = this,
        t1 = _this.__RawScrollbarState_scrollbarPainter_F;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.set$color(_this.get$_thumbColor()._material_state$_resolve.call$1(_this.get$_states()));
      t1.set$trackColor(_this.get$_trackColor()._material_state$_resolve.call$1(_this.get$_states()));
      t1.set$trackBorderColor(_this.get$_trackBorderColor()._material_state$_resolve.call$1(_this.get$_states()));
      t1.set$textDirection(_this._element.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality).textDirection);
      t1.set$thickness(_this.get$_thickness()._material_state$_resolve.call$1(_this.get$_states()));
      t2 = _this._widget.radius;
      if (t2 == null) {
        t2 = _this.___MaterialScrollbarState__scrollbarTheme_A;
        t2 === $ && A.throwUnnamedLateFieldNI();
        t2 = t2.radius;
      }
      if (t2 == null) {
        t2 = _this.___MaterialScrollbarState__useAndroidScrollbar_A;
        t2 === $ && A.throwUnnamedLateFieldNI();
        t2 = t2 ? null : B.Radius_8_8;
      }
      t1.set$radius(t2);
      t2 = _this.___MaterialScrollbarState__scrollbarTheme_A;
      t2 === $ && A.throwUnnamedLateFieldNI();
      t2 = t2.crossAxisMargin;
      if (t2 == null) {
        t2 = _this.___MaterialScrollbarState__useAndroidScrollbar_A;
        t2 === $ && A.throwUnnamedLateFieldNI();
        t2 = t2 ? 0 : 2;
      }
      t1.set$crossAxisMargin(t2);
      t2 = _this.___MaterialScrollbarState__scrollbarTheme_A.mainAxisMargin;
      t1.set$mainAxisMargin(t2 == null ? 0 : t2);
      t2 = _this.___MaterialScrollbarState__scrollbarTheme_A.minThumbLength;
      t1.set$minLength(t2 == null ? 48 : t2);
      t2 = _this._element;
      t2.toString;
      t1.set$padding(A.InheritedModel_inheritFrom(t2, B._MediaQueryAspect_5, type$.MediaQuery).data.padding);
      t1.set$scrollbarOrientation(_this._widget.scrollbarOrientation);
      t1.set$ignorePointer(!_this.get$enableGestures());
    },
    handleThumbPressStart$1(localPosition) {
      this.super$RawScrollbarState$handleThumbPressStart(localPosition);
      this.setState$1(new A._MaterialScrollbarState_handleThumbPressStart_closure(this));
    },
    handleThumbPressEnd$2(localPosition, velocity) {
      this.super$RawScrollbarState$handleThumbPressEnd(localPosition, velocity);
      this.setState$1(new A._MaterialScrollbarState_handleThumbPressEnd_closure(this));
    },
    handleHover$1($event) {
      var t1, _this = this;
      _this.super$RawScrollbarState$handleHover($event);
      if (_this.isPointerOverScrollbar$3$forHover($event.get$position(), $event.get$kind(), true)) {
        _this.setState$1(new A._MaterialScrollbarState_handleHover_closure(_this));
        t1 = _this.___MaterialScrollbarState__hoverAnimationController_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
        t1.forward$0();
      } else if (_this._scrollbar0$_hoverIsActive) {
        _this.setState$1(new A._MaterialScrollbarState_handleHover_closure0(_this));
        t1 = _this.___MaterialScrollbarState__hoverAnimationController_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
        t1.reverse$0();
      }
    },
    handleHoverExit$1($event) {
      var t1, _this = this;
      _this.super$RawScrollbarState$handleHoverExit($event);
      _this.setState$1(new A._MaterialScrollbarState_handleHoverExit_closure(_this));
      t1 = _this.___MaterialScrollbarState__hoverAnimationController_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.reverse$0();
    },
    dispose$0() {
      var t1 = this.___MaterialScrollbarState__hoverAnimationController_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.dispose$0();
      this.super$RawScrollbarState$dispose();
    }
  };
  A._MaterialScrollbarState__trackVisibility_closure.prototype = {
    call$1(states) {
      var t1, t2;
      if (states.contains$1(0, B.MaterialState_0)) {
        t1 = this.$this;
        t1._widget.toString;
        t1 = t1.___MaterialScrollbarState__scrollbarTheme_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
        t1 = t1.showTrackOnHover === true;
      } else
        t1 = false;
      if (t1)
        return true;
      t1 = this.$this;
      t2 = t1._widget.trackVisibility;
      t1 = t1.___MaterialScrollbarState__scrollbarTheme_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1 = t1.trackVisibility;
      t1 = t1 == null ? null : t1.resolve$1(states);
      return t1 === true;
    },
    $signature: 118
  };
  A._MaterialScrollbarState__thumbColor_closure.prototype = {
    call$1(states) {
      var t1, t2, t3, _this = this, _null = null;
      if (states.contains$1(0, B.MaterialState_3)) {
        t1 = _this.$this.___MaterialScrollbarState__scrollbarTheme_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
        t1 = t1.thumbColor;
        t1 = t1 == null ? _null : t1.resolve$1(states);
        return t1 == null ? _this.dragColor._readLocal$0() : t1;
      }
      t1 = _this.$this;
      if (t1.get$_trackVisibility()._material_state$_resolve.call$1(states)) {
        t1 = t1.___MaterialScrollbarState__scrollbarTheme_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
        t1 = t1.thumbColor;
        t1 = t1 == null ? _null : t1.resolve$1(states);
        return t1 == null ? _this.hoverColor._readLocal$0() : t1;
      }
      t2 = t1.___MaterialScrollbarState__scrollbarTheme_A;
      t2 === $ && A.throwUnnamedLateFieldNI();
      t2 = t2.thumbColor;
      t2 = t2 == null ? _null : t2.resolve$1(states);
      if (t2 == null)
        t2 = _this.idleColor._readLocal$0();
      t3 = t1.___MaterialScrollbarState__scrollbarTheme_A.thumbColor;
      t3 = t3 == null ? _null : t3.resolve$1(states);
      if (t3 == null)
        t3 = _this.hoverColor._readLocal$0();
      t1 = t1.___MaterialScrollbarState__hoverAnimationController_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1 = t1.__AnimationController__value_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1 = A.Color_lerp(t2, t3, t1);
      t1.toString;
      return t1;
    },
    $signature: 21
  };
  A._MaterialScrollbarState__trackColor_closure.prototype = {
    call$1(states) {
      var t1 = this.$this;
      if (t1.get$showScrollbar() && t1.get$_trackVisibility()._material_state$_resolve.call$1(states)) {
        t1 = t1.___MaterialScrollbarState__scrollbarTheme_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
        t1 = t1.trackColor;
        t1 = t1 == null ? null : t1.resolve$1(states);
        if (t1 == null) {
          t1 = this.onSurface.value;
          t1 = this.brightness === B.Brightness_1 ? A.Color$fromARGB(8, t1 >>> 16 & 255, t1 >>> 8 & 255, t1 & 255) : A.Color$fromARGB(13, t1 >>> 16 & 255, t1 >>> 8 & 255, t1 & 255);
        }
        return t1;
      }
      return B.Color_0;
    },
    $signature: 21
  };
  A._MaterialScrollbarState__trackBorderColor_closure.prototype = {
    call$1(states) {
      var t1 = this.$this;
      if (t1.get$showScrollbar() && t1.get$_trackVisibility()._material_state$_resolve.call$1(states)) {
        t1 = t1.___MaterialScrollbarState__scrollbarTheme_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
        t1 = t1.trackBorderColor;
        t1 = t1 == null ? null : t1.resolve$1(states);
        if (t1 == null) {
          t1 = this.onSurface.value;
          t1 = this.brightness === B.Brightness_1 ? A.Color$fromARGB(B.JSNumber_methods.round$0(25.5), t1 >>> 16 & 255, t1 >>> 8 & 255, t1 & 255) : A.Color$fromARGB(64, t1 >>> 16 & 255, t1 >>> 8 & 255, t1 & 255);
        }
        return t1;
      }
      return B.Color_0;
    },
    $signature: 21
  };
  A._MaterialScrollbarState__thickness_closure.prototype = {
    call$1(states) {
      var t1, t2;
      if (states.contains$1(0, B.MaterialState_0) && this.$this.get$_trackVisibility()._material_state$_resolve.call$1(states)) {
        t1 = this.$this;
        t2 = t1._widget.hoverThickness;
        t1 = t1.___MaterialScrollbarState__scrollbarTheme_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
        t1 = t1.thickness;
        t1 = t1 == null ? null : t1.resolve$1(states);
        return t1 == null ? 12 : t1;
      }
      t1 = this.$this;
      t2 = t1._widget.thickness;
      if (t2 == null) {
        t2 = t1.___MaterialScrollbarState__scrollbarTheme_A;
        t2 === $ && A.throwUnnamedLateFieldNI();
        t2 = t2.thickness;
        t2 = t2 == null ? null : t2.resolve$1(states);
      }
      if (t2 == null) {
        t1 = t1.___MaterialScrollbarState__useAndroidScrollbar_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
        t2 = 8 / (t1 ? 2 : 1);
        t1 = t2;
      } else
        t1 = t2;
      return t1;
    },
    $signature: 119
  };
  A._MaterialScrollbarState_initState_closure.prototype = {
    call$0() {
      this.$this.updateScrollbarPainter$0();
    },
    $signature: 0
  };
  A._MaterialScrollbarState_handleThumbPressStart_closure.prototype = {
    call$0() {
      this.$this._dragIsActive = true;
    },
    $signature: 0
  };
  A._MaterialScrollbarState_handleThumbPressEnd_closure.prototype = {
    call$0() {
      this.$this._dragIsActive = false;
    },
    $signature: 0
  };
  A._MaterialScrollbarState_handleHover_closure.prototype = {
    call$0() {
      this.$this._scrollbar0$_hoverIsActive = true;
    },
    $signature: 0
  };
  A._MaterialScrollbarState_handleHover_closure0.prototype = {
    call$0() {
      this.$this._scrollbar0$_hoverIsActive = false;
    },
    $signature: 0
  };
  A._MaterialScrollbarState_handleHoverExit_closure.prototype = {
    call$0() {
      this.$this._scrollbar0$_hoverIsActive = false;
    },
    $signature: 0
  };
  A.ScrollbarThemeData.prototype = {
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(_this.thumbVisibility, _this.thickness, _this.trackVisibility, _this.showTrackOnHover, _this.isAlwaysShown, _this.interactive, _this.radius, _this.thumbColor, _this.trackColor, _this.trackBorderColor, _this.crossAxisMargin, _this.mainAxisMargin, _this.minThumbLength, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      return other instanceof A.ScrollbarThemeData && other.thumbVisibility == _this.thumbVisibility && other.thickness == _this.thickness && other.trackVisibility == _this.trackVisibility && other.showTrackOnHover == _this.showTrackOnHover && other.isAlwaysShown == _this.isAlwaysShown && other.interactive == _this.interactive && J.$eq$(other.radius, _this.radius) && other.thumbColor == _this.thumbColor && other.trackColor == _this.trackColor && other.trackBorderColor == _this.trackBorderColor && other.crossAxisMargin == _this.crossAxisMargin && other.mainAxisMargin == _this.mainAxisMargin && other.minThumbLength == _this.minThumbLength;
    }
  };
  A._ScrollbarThemeData_Object_Diagnosticable.prototype = {};
  A.SegmentedButtonThemeData.prototype = {
    get$hashCode(_) {
      return A.Object_hash(this.style, this.selectedIcon, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(this))
        return false;
      if (other instanceof A.SegmentedButtonThemeData)
        t1 = J.$eq$(other.style, this.style);
      else
        t1 = false;
      return t1;
    }
  };
  A._SegmentedButtonThemeData_Object_Diagnosticable.prototype = {};
  A._SliderType.prototype = {
    _enumToString$0() {
      return "_SliderType." + this._name;
    }
  };
  A.Slider.prototype = {
    createState$0() {
      return new A._SliderState(new A.LabeledGlobalKey(null, type$.LabeledGlobalKey_State_StatefulWidget), new A.LayerLink(), null, null);
    }
  };
  A._SliderState.prototype = {
    get$focusNode() {
      this._widget.toString;
      var t1 = this._focusNode;
      t1.toString;
      return t1;
    },
    initState$0() {
      var t1, _this = this, _null = null;
      _this.super$State$initState();
      _this.___SliderState_overlayController_A = A.AnimationController$(_null, B.Duration_100000, _null, _null, _this);
      _this.___SliderState_valueIndicatorController_A = A.AnimationController$(_null, B.Duration_100000, _null, _null, _this);
      _this.___SliderState_enableController_A = A.AnimationController$(_null, B.Duration_75000, _null, _null, _this);
      _this.___SliderState_positionController_A = A.AnimationController$(_null, B.Duration_0, _null, _null, _this);
      t1 = _this.___SliderState_enableController_A;
      _this._widget.toString;
      t1.set$value(1);
      _this.___SliderState_positionController_A.set$value(_this._convert$1(_this._widget.value));
      _this.___SliderState__actionMap_A = A.LinkedHashMap_LinkedHashMap$_literal([B.Type__AdjustSliderIntent_bIn, new A.CallbackAction(_this.get$_actionHandler(), new A.ObserverList(A._setArrayType([], type$.JSArray_of_void_Function_Action_Intent), type$.ObserverList_of_void_Function_Action_Intent), type$.CallbackAction__AdjustSliderIntent)], type$.Type, type$.Action_Intent);
      _this._widget.toString;
      if (_this._focusNode == null)
        _this._focusNode = A.FocusNode$(true, _null, true, true, _null, _null, false);
    },
    dispose$0() {
      var _this = this,
        t1 = _this.interactionTimer;
      if (t1 != null)
        t1.cancel$0();
      t1 = _this.___SliderState_overlayController_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.dispose$0();
      t1 = _this.___SliderState_valueIndicatorController_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.dispose$0();
      t1 = _this.___SliderState_enableController_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.dispose$0();
      t1 = _this.___SliderState_positionController_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.dispose$0();
      t1 = _this.overlayEntry;
      if (t1 != null) {
        t1.remove$0(0);
        _this.overlayEntry = null;
      }
      t1 = _this._focusNode;
      if (t1 != null)
        t1.dispose$0();
      _this.super$__SliderState_State_TickerProviderStateMixin$dispose();
    },
    _handleChanged$1(value) {
      var lerpValue = this._lerp$1(value),
        t1 = this._widget;
      if (lerpValue !== t1.value) {
        t1.onChanged.call$1(lerpValue);
        t1 = this._focusNode;
        if (t1 != null)
          t1.requestFocus$0();
      }
    },
    _handleDragStart$1(value) {
      this._dragging = true;
      this._widget.toString;
    },
    _handleDragEnd$1(value) {
      this._dragging = false;
      this._widget.toString;
    },
    _actionHandler$1(intent) {
      var textDirection,
        t1 = this._renderObjectKey,
        t2 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, t1).get$renderObject();
      t2.toString;
      type$._RenderSlider._as(t2);
      textDirection = $.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, t1).dependOnInheritedWidgetOfExactType$1$0(type$.Directionality).textDirection;
      switch (intent.type.index) {
        case 0:
          switch (textDirection.index) {
            case 0:
              t2.decreaseAction$0();
              break;
            case 1:
              t2.increaseAction$0();
              break;
          }
          break;
        case 1:
          switch (textDirection.index) {
            case 0:
              t2.increaseAction$0();
              break;
            case 1:
              t2.decreaseAction$0();
              break;
          }
          break;
        case 2:
          t2.increaseAction$0();
          break;
        case 3:
          t2.decreaseAction$0();
          break;
      }
    },
    _handleFocusHighlightChanged$1(focused) {
      if (focused !== this._focused)
        this.setState$1(new A._SliderState__handleFocusHighlightChanged_closure(this, focused));
    },
    _handleHoverChanged$1(hovering) {
      if (hovering !== this._hovering)
        this.setState$1(new A._SliderState__handleHoverChanged_closure(this, hovering));
    },
    _lerp$1(value) {
      return value * this._widget.max + 0;
    },
    _convert$1(value) {
      var t1 = this._widget.max,
        ret = t1 > 0 ? value / t1 : 0;
      return ret;
    },
    build$1(context) {
      this._widget.toString;
      switch (0) {
        case 0:
          return this._buildMaterialSlider$1(context);
      }
    },
    _buildMaterialSlider$1(context) {
      var t1, sliderTheme, defaults, defaultValueIndicatorShape, valueIndicatorShape, valueIndicatorColor, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, effectiveMouseCursor, handleDidGainAccessibilityFocus, shortcutMap, textScaleFactor, _this = this, _null = null, _box_0 = {},
        theme = A.Theme_of(context);
      context.dependOnInheritedWidgetOfExactType$1$0(type$.SliderTheme);
      t1 = A.Theme_of(context);
      sliderTheme = _box_0.sliderTheme = t1.sliderTheme;
      defaults = new A._SliderDefaultsM2(context, A.Theme_of(context).colorScheme, 4, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
      defaultValueIndicatorShape = defaults.get$valueIndicatorShape();
      t1 = A.LinkedHashSet_LinkedHashSet$_empty(type$.MaterialState);
      _this._widget.toString;
      if (_this._hovering)
        t1.add$1(0, B.MaterialState_0);
      if (_this._focused)
        t1.add$1(0, B.MaterialState_1);
      if (_this._dragging)
        t1.add$1(0, B.MaterialState_3);
      valueIndicatorShape = sliderTheme.valueIndicatorShape;
      if (valueIndicatorShape == null)
        valueIndicatorShape = defaultValueIndicatorShape;
      if (valueIndicatorShape instanceof A.RectangularSliderValueIndicatorShape) {
        valueIndicatorColor = sliderTheme.valueIndicatorColor;
        if (valueIndicatorColor == null) {
          t2 = theme.colorScheme;
          t3 = t2.onSurface.value;
          t2 = t2.surface.value;
          valueIndicatorColor = A.Color_alphaBlend(A.Color$fromARGB(153, t3 >>> 16 & 255, t3 >>> 8 & 255, t3 & 255), A.Color$fromARGB(B.JSNumber_methods.round$0(229.5), t2 >>> 16 & 255, t2 >>> 8 & 255, t2 & 255));
        }
      } else {
        _this._widget.toString;
        valueIndicatorColor = sliderTheme.valueIndicatorColor;
        if (valueIndicatorColor == null)
          valueIndicatorColor = theme.colorScheme.primary;
      }
      t2 = sliderTheme.trackHeight;
      t3 = t2 == null ? 4 : t2;
      _this._widget.toString;
      t4 = sliderTheme.activeTrackColor;
      if (t4 == null)
        t4 = defaults.get$activeTrackColor();
      t5 = _box_0.sliderTheme.inactiveTrackColor;
      if (t5 == null)
        t5 = defaults.get$inactiveTrackColor();
      _this._widget.toString;
      t6 = _box_0.sliderTheme.secondaryActiveTrackColor;
      if (t6 == null)
        t6 = defaults.get$secondaryActiveTrackColor();
      t7 = _box_0.sliderTheme.disabledActiveTrackColor;
      if (t7 == null)
        t7 = defaults.get$disabledActiveTrackColor();
      t8 = _box_0.sliderTheme.disabledInactiveTrackColor;
      if (t8 == null)
        t8 = defaults.get$disabledInactiveTrackColor();
      t9 = _box_0.sliderTheme.disabledSecondaryActiveTrackColor;
      if (t9 == null)
        t9 = defaults.get$disabledSecondaryActiveTrackColor();
      _this._widget.toString;
      t10 = _box_0.sliderTheme.activeTickMarkColor;
      if (t10 == null)
        t10 = defaults.get$activeTickMarkColor();
      _this._widget.toString;
      t11 = _box_0.sliderTheme.inactiveTickMarkColor;
      if (t11 == null)
        t11 = defaults.get$inactiveTickMarkColor();
      t12 = _box_0.sliderTheme.disabledActiveTickMarkColor;
      if (t12 == null)
        t12 = defaults.get$disabledActiveTickMarkColor();
      t13 = _box_0.sliderTheme.disabledInactiveTickMarkColor;
      if (t13 == null)
        t13 = defaults.get$disabledInactiveTickMarkColor();
      _this._widget.toString;
      t14 = _box_0.sliderTheme;
      t15 = t14.thumbColor;
      if (t15 == null)
        t15 = defaults.get$thumbColor();
      t14 = t14.disabledThumbColor;
      if (t14 == null)
        t14 = defaults.get$disabledThumbColor();
      t16 = new A._SliderState__buildMaterialSlider_effectiveOverlayColor(_box_0, _this, t1, defaults).call$0();
      t17 = _box_0.sliderTheme;
      t18 = t17.trackShape;
      if (t18 == null)
        t18 = B.C_RoundedRectSliderTrackShape;
      t19 = t17.tickMarkShape;
      if (t19 == null)
        t19 = B.C_RoundSliderTickMarkShape;
      t20 = t17.thumbShape;
      if (t20 == null)
        t20 = B.C_RoundSliderThumbShape;
      t21 = t17.overlayShape;
      if (t21 == null)
        t21 = B.C_RoundSliderOverlayShape;
      t22 = t17.showValueIndicator;
      if (t22 == null)
        t22 = B.ShowValueIndicator_0;
      t17 = t17.valueIndicatorTextStyle;
      if (t17 == null)
        t17 = defaults.get$valueIndicatorTextStyle();
      t2 = t3 == null ? t2 : t3;
      t3 = t16 == null ? sliderTheme.overlayColor : t16;
      _box_0.sliderTheme = A.SliderThemeData$(t10, t4, t12, t7, t13, t8, t9, t14, t11, t5, sliderTheme.minThumbSeparation, sliderTheme.mouseCursor, sliderTheme.overlappingShapeStrokeColor, t3, t21, sliderTheme.rangeThumbShape, sliderTheme.rangeTickMarkShape, sliderTheme.rangeTrackShape, sliderTheme.rangeValueIndicatorShape, t6, t22, t15, sliderTheme.thumbSelector, t20, t19, t2, t18, valueIndicatorColor, valueIndicatorShape, t17);
      _this._widget.toString;
      t2 = A.MaterialStateProperty_resolveAs(_null, t1, type$.nullable_MouseCursor);
      if (t2 == null)
        effectiveMouseCursor = _null;
      else
        effectiveMouseCursor = t2;
      if (effectiveMouseCursor == null)
        effectiveMouseCursor = B.C__EnabledAndDisabledMouseCursor.resolve$1(t1);
      handleDidGainAccessibilityFocus = _null;
      switch (theme.platform.index) {
        case 0:
        case 1:
        case 2:
        case 3:
        case 4:
          break;
        case 5:
          handleDidGainAccessibilityFocus = new A._SliderState__buildMaterialSlider_closure(_this);
          break;
      }
      switch (A.InheritedModel_inheritFrom(context, B._MediaQueryAspect_15, type$.MediaQuery).data.navigationMode.index) {
        case 1:
          shortcutMap = B.Map_8WZS8;
          break;
        case 0:
          shortcutMap = B.Map_A0fEd;
          break;
        default:
          shortcutMap = _null;
      }
      t1 = A.MediaQuery__maybeOf(context, B._MediaQueryAspect_3);
      t1 = t1 == null ? _null : t1.textScaleFactor;
      textScaleFactor = t1 == null ? 1 : t1;
      t1 = _this.___SliderState__actionMap_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t2 = _this.get$focusNode();
      t3 = _this._convert$1(_this._widget.value);
      _this._widget.toString;
      t4 = _box_0.sliderTheme;
      t5 = new A._SliderState__buildMaterialSlider_screenSize(context).call$0();
      t6 = _this._widget.max;
      t6 = t6 > 0 ? _this.get$_handleChanged() : _null;
      return A.Semantics$(_null, _null, A.FocusableActionDetector$(t1, false, new A.CompositedTransformTarget(_this._layerLink, new A._SliderRenderObjectWidget(t3, _null, _null, _null, t4, textScaleFactor, t5, t6, _this.get$_handleDragStart(), _this.get$_handleDragEnd(), _null, _this, _this._focused, _this._hovering, _this._renderObjectKey), _null), true, t2, effectiveMouseCursor, _null, _this.get$_handleFocusHighlightChanged(), _this.get$_handleHoverChanged(), shortcutMap), true, _null, false, false, _null, _null, _null, _null, _null, _null, handleDidGainAccessibilityFocus, _null, _null, _null, _null, _null, true, _null, _null, _null, _null, _null);
    },
    showValueIndicator$0() {
      var t1, t2, _this = this;
      if (_this.overlayEntry == null) {
        _this.overlayEntry = A.OverlayEntry$(new A._SliderState_showValueIndicator_closure(_this), false);
        t1 = _this._element;
        t1.toString;
        _this._widget.toString;
        t1 = A.LookupBoundary_findAncestorStateOfType(t1, type$.OverlayState);
        t1.toString;
        t2 = _this.overlayEntry;
        t2.toString;
        t1.insert$1(0, t2);
      }
    }
  };
  A._SliderState__handleFocusHighlightChanged_closure.prototype = {
    call$0() {
      this.$this._focused = this.focused;
    },
    $signature: 0
  };
  A._SliderState__handleHoverChanged_closure.prototype = {
    call$0() {
      this.$this._hovering = this.hovering;
    },
    $signature: 0
  };
  A._SliderState__buildMaterialSlider_effectiveOverlayColor.prototype = {
    call$0() {
      var t1, t2, t3, _this = this;
      _this.$this._widget.toString;
      t1 = _this.states;
      t2 = type$.nullable_Color;
      t3 = A.MaterialStateProperty_resolveAs(_this._box_0.sliderTheme.overlayColor, t1, t2);
      return t3 == null ? A.MaterialStateProperty_resolveAs(_this.defaults.get$overlayColor(), t1, t2) : t3;
    },
    $signature: 122
  };
  A._SliderState__buildMaterialSlider_screenSize.prototype = {
    call$0() {
      return A.InheritedModel_inheritFrom(this.context, B._MediaQueryAspect_0, type$.MediaQuery).data.size;
    },
    $signature: 77
  };
  A._SliderState__buildMaterialSlider_closure.prototype = {
    call$0() {
      var t1 = this.$this;
      if (!t1.get$focusNode().get$hasFocus() && t1.get$focusNode().get$canRequestFocus())
        t1.get$focusNode().requestFocus$0();
    },
    $signature: 0
  };
  A._SliderState_showValueIndicator_closure.prototype = {
    call$1(context) {
      var t1 = this.$this;
      return new A.CompositedTransformFollower(t1._layerLink, new A._ValueIndicatorRenderObjectWidget(t1, null), null);
    },
    $signature: 124
  };
  A._SliderRenderObjectWidget.prototype = {
    createRenderObject$1(context) {
      var _this = this,
        t1 = context.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality).textDirection,
        t2 = A.Theme_of(context);
      return A._RenderSlider$(_this.divisions, A.InheritedModel_inheritFrom(context, B._MediaQueryAspect_16, type$.MediaQuery).data.gestureSettings, _this.hasFocus, _this.hovering, _this.label, _this.onChangeEnd, _this.onChangeStart, _this.onChanged, t2.platform, _this.screenSize, _this.secondaryTrackValue, _this.semanticFormatterCallback, _this.sliderTheme, _this.state, t1, _this.textScaleFactor, _this.value);
    },
    updateRenderObject$2(context, renderObject) {
      var t1, t2, _this = this;
      renderObject.set$divisions(_this.divisions);
      renderObject.set$value(_this.value);
      renderObject.set$secondaryTrackValue(_this.secondaryTrackValue);
      renderObject.set$label(_this.label);
      renderObject.set$sliderTheme(_this.sliderTheme);
      renderObject.set$textScaleFactor(_this.textScaleFactor);
      renderObject.set$screenSize(_this.screenSize);
      renderObject.set$onChanged(_this.onChanged);
      renderObject.onChangeStart = _this.onChangeStart;
      renderObject.onChangeEnd = _this.onChangeEnd;
      renderObject.set$textDirection(context.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality).textDirection);
      renderObject.set$semanticFormatterCallback(_this.semanticFormatterCallback);
      renderObject.set$platform(A.Theme_of(context).platform);
      renderObject.set$hasFocus(_this.hasFocus);
      renderObject.set$hovering(_this.hovering);
      t1 = A.InheritedModel_inheritFrom(context, B._MediaQueryAspect_16, type$.MediaQuery).data.gestureSettings;
      t2 = renderObject.___RenderSlider__drag_A;
      t2 === $ && A.throwUnnamedLateFieldNI();
      t2.gestureSettings = t1;
      t2 = renderObject.___RenderSlider__tap_A;
      t2 === $ && A.throwUnnamedLateFieldNI();
      t2.gestureSettings = t1;
    }
  };
  A._RenderSlider.prototype = {
    _RenderSlider$17$divisions$gestureSettings$hasFocus$hovering$label$onChangeEnd$onChangeStart$onChanged$platform$screenSize$secondaryTrackValue$semanticFormatterCallback$sliderTheme$state$textDirection$textScaleFactor$value(divisions, gestureSettings, hasFocus, hovering, label, onChangeEnd, onChangeStart, onChanged, platform, screenSize, secondaryTrackValue, semanticFormatterCallback, sliderTheme, state, textDirection, textScaleFactor, value) {
      var team, t1, t2, _this = this, _null = null;
      _this._updateLabelPainter$0();
      team = new A.GestureArenaTeam(A.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$._CombiningGestureArenaMember));
      t1 = A.HorizontalDragGestureRecognizer$(_null, _null);
      t1._team = team;
      t1.onStart = _this.get$_handleDragStart();
      t1.onUpdate = _this.get$_handleDragUpdate();
      t1.onEnd = _this.get$_handleDragEnd();
      t1.onCancel = _this.get$_endInteraction();
      t1.gestureSettings = gestureSettings;
      _this.___RenderSlider__drag_A = t1;
      t1 = A.TapGestureRecognizer$(_null, _null);
      t1._team = team;
      t1.onTapDown = _this.get$_handleTapDown();
      t1.onTapUp = _this.get$_handleTapUp();
      t1.gestureSettings = gestureSettings;
      _this.___RenderSlider__tap_A = t1;
      t1 = _this._slider$_state;
      t2 = t1.___SliderState_overlayController_A;
      t2 === $ && A.throwUnnamedLateFieldNI();
      _this.___RenderSlider__overlayAnimation_A = A.CurvedAnimation$(B.Cubic_Dkk, t2, _null);
      t2 = t1.___SliderState_valueIndicatorController_A;
      t2 === $ && A.throwUnnamedLateFieldNI();
      t2 = A.CurvedAnimation$(B.Cubic_Dkk, t2, _null);
      t2.parent.addStatusListener$1(new A._RenderSlider_closure(_this));
      _this.___RenderSlider__valueIndicatorAnimation_A = t2;
      t1 = t1.___SliderState_enableController_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      _this.___RenderSlider__enableAnimation_A = A.CurvedAnimation$(B.Cubic_fC5, t1, _null);
    },
    get$_maxSliderPartWidth() {
      var t1 = this.get$_sliderPartSizes();
      return new A.MappedListIterable(t1, new A._RenderSlider__maxSliderPartWidth_closure(), A._arrayInstanceType(t1)._eval$1("MappedListIterable<1,double>")).reduce$1(0, B.CONSTANT);
    },
    get$_maxSliderPartHeight() {
      var t1 = this.get$_sliderPartSizes();
      return new A.MappedListIterable(t1, new A._RenderSlider__maxSliderPartHeight_closure(), A._arrayInstanceType(t1)._eval$1("MappedListIterable<1,double>")).reduce$1(0, B.CONSTANT);
    },
    get$_sliderPartSizes() {
      var t2,
        t1 = this._sliderTheme;
      t1.overlayShape.toString;
      t1.thumbShape.toString;
      t2 = this._onChanged;
      return A._setArrayType([new A.Size(48, 48), new A.Size(20, 20), t1.tickMarkShape.getPreferredSize$2$isEnabled$sliderTheme(t2 != null, t1)], type$.JSArray_Size);
    },
    get$_trackRect() {
      var t1 = this._sliderTheme;
      return t1.trackShape.getPreferredRect$3$isDiscrete$parentBox$sliderTheme(false, this, t1);
    },
    set$value(newValue) {
      var t1, _this = this;
      if (newValue === _this._slider$_value)
        return;
      _this._slider$_value = newValue;
      t1 = _this._slider$_state.___SliderState_positionController_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.set$value(newValue);
      _this.markNeedsSemanticsUpdate$0();
    },
    set$secondaryTrackValue(newValue) {
      if (newValue == this._secondaryTrackValue)
        return;
      this._secondaryTrackValue = newValue;
      this.markNeedsSemanticsUpdate$0();
    },
    set$platform(value) {
      if (this._platform === value)
        return;
      this._platform = value;
      this.markNeedsSemanticsUpdate$0();
    },
    set$semanticFormatterCallback(value) {
      return;
    },
    set$divisions(value) {
      return;
    },
    set$label(value) {
      return;
    },
    set$sliderTheme(value) {
      if (value.$eq(0, this._sliderTheme))
        return;
      this._sliderTheme = value;
      this._updateLabelPainter$0();
    },
    set$textScaleFactor(value) {
      if (value === this._textScaleFactor)
        return;
      this._textScaleFactor = value;
      this._updateLabelPainter$0();
    },
    set$screenSize(value) {
      if (value.$eq(0, this._screenSize))
        return;
      this._screenSize = value;
      this.markNeedsPaint$0();
    },
    set$onChanged(value) {
      var t1, t2, _this = this;
      if (J.$eq$(value, _this._onChanged))
        return;
      t1 = _this._onChanged;
      _this._onChanged = value;
      t2 = value != null;
      if (t1 != null !== t2) {
        t1 = _this._slider$_state.___SliderState_enableController_A;
        if (t2) {
          t1 === $ && A.throwUnnamedLateFieldNI();
          t1.forward$0();
        } else {
          t1 === $ && A.throwUnnamedLateFieldNI();
          t1.reverse$0();
        }
        _this.markNeedsPaint$0();
        _this.markNeedsSemanticsUpdate$0();
      }
    },
    set$textDirection(value) {
      if (value === this._slider$_textDirection)
        return;
      this._slider$_textDirection = value;
      this._updateLabelPainter$0();
    },
    set$hasFocus(value) {
      var t1, t2, _this = this;
      if (value === _this._hasFocus)
        return;
      _this._hasFocus = value;
      t1 = _this._slider$_state;
      t2 = t1.___SliderState_overlayController_A;
      if (value) {
        t2 === $ && A.throwUnnamedLateFieldNI();
        t2.forward$0();
        if (_this.get$showValueIndicator()) {
          t1 = t1.___SliderState_valueIndicatorController_A;
          t1 === $ && A.throwUnnamedLateFieldNI();
          t1.forward$0();
        }
      } else {
        t2 === $ && A.throwUnnamedLateFieldNI();
        t2.reverse$0();
        if (_this.get$showValueIndicator()) {
          t1 = t1.___SliderState_valueIndicatorController_A;
          t1 === $ && A.throwUnnamedLateFieldNI();
          t1.reverse$0();
        }
      }
      _this.markNeedsSemanticsUpdate$0();
    },
    set$hovering(value) {
      if (value === this._hovering)
        return;
      this._hovering = value;
      this._updateForHover$1(value);
    },
    set$hoveringThumb(value) {
      var _this = this;
      if (value === _this._hoveringThumb)
        return;
      _this._hoveringThumb = value;
      _this._updateForHover$1(_this._hovering);
    },
    _updateForHover$1(hovered) {
      var t1, _this = this;
      if (hovered && _this._hoveringThumb) {
        t1 = _this._slider$_state.___SliderState_overlayController_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
        t1.forward$0();
      } else if (!_this._hasFocus) {
        t1 = _this._slider$_state.___SliderState_overlayController_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
        t1.reverse$0();
      }
    },
    get$showValueIndicator() {
      switch (this._sliderTheme.showValueIndicator.index) {
        case 0:
          return false;
        case 1:
          return true;
        case 2:
          return true;
        case 3:
          return false;
      }
    },
    get$_adjustmentUnit() {
      switch (this._platform.index) {
        case 2:
        case 4:
          return 0.1;
        case 0:
        case 1:
        case 3:
        case 5:
          return 0.05;
      }
    },
    _updateLabelPainter$0() {
      this._labelPainter.set$text(null);
      this.markNeedsLayout$0();
    },
    systemFontsDidChange$0() {
      this.super$RelayoutWhenSystemFontsChangeMixin$systemFontsDidChange();
      this._labelPainter.markNeedsLayout$0();
      this._updateLabelPainter$0();
    },
    attach$1(owner) {
      var t1, t2, _this = this;
      _this.super$__RenderSlider_RenderBox_RelayoutWhenSystemFontsChangeMixin$attach(owner);
      t1 = _this.___RenderSlider__overlayAnimation_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t2 = _this.get$markNeedsPaint();
      t1.parent.addListener$1(t2);
      t1 = _this.___RenderSlider__valueIndicatorAnimation_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.parent.addListener$1(t2);
      t1 = _this.___RenderSlider__enableAnimation_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.parent.addListener$1(t2);
      t1 = _this._slider$_state.___SliderState_positionController_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.didRegisterListener$0();
      t1 = t1.AnimationLocalListenersMixin__listeners;
      t1._isDirty = true;
      t1._observer_list$_list.push(t2);
    },
    detach$0() {
      var t2, _this = this,
        t1 = _this.___RenderSlider__overlayAnimation_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t2 = _this.get$markNeedsPaint();
      t1.parent.removeListener$1(t2);
      t1 = _this.___RenderSlider__valueIndicatorAnimation_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.parent.removeListener$1(t2);
      t1 = _this.___RenderSlider__enableAnimation_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.parent.removeListener$1(t2);
      t1 = _this._slider$_state.___SliderState_positionController_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.removeListener$1(t2);
      _this.super$__RenderSlider_RenderBox_RelayoutWhenSystemFontsChangeMixin$detach();
    },
    dispose$0() {
      this._labelPainter.dispose$0();
      this.super$RenderObject$dispose();
    },
    _getValueFromVisualPosition$1(visualPosition) {
      switch (this._slider$_textDirection.index) {
        case 0:
          return 1 - visualPosition;
        case 1:
          return visualPosition;
      }
    },
    _discretize$1(value) {
      var result = A.clampDouble(value, 0, 1);
      return result;
    },
    _startInteraction$1(globalPosition) {
      var t2, t3, t4, _this = this,
        t1 = _this._slider$_state;
      t1.showValueIndicator$0();
      if (!_this._active && _this._onChanged != null) {
        _this._active = true;
        _this.onChangeStart.call$1(_this._discretize$1(_this._slider$_value));
        t2 = _this.globalToLocal$1(globalPosition);
        t3 = _this.get$_trackRect();
        t4 = _this.get$_trackRect();
        t4 = _this._getValueFromVisualPosition$1((t2._dx - t3.left) / (t4.right - t4.left));
        _this._currentDragValue = t4;
        t3 = _this._onChanged;
        t3.toString;
        t3.call$1(_this._discretize$1(t4));
        t4 = t1.___SliderState_overlayController_A;
        t4 === $ && A.throwUnnamedLateFieldNI();
        t4.forward$0();
        if (_this.get$showValueIndicator()) {
          t2 = t1.___SliderState_valueIndicatorController_A;
          t2 === $ && A.throwUnnamedLateFieldNI();
          t2.forward$0();
          t2 = t1.interactionTimer;
          if (t2 != null)
            t2.cancel$0();
          t1.interactionTimer = A.Timer_Timer(new A.Duration(500000), new A._RenderSlider__startInteraction_closure(_this));
        }
      }
    },
    _endInteraction$0() {
      var t2, t3, _this = this,
        t1 = _this._slider$_state;
      if (t1._element == null)
        return;
      t2 = _this._active;
      if (t2) {
        _this.onChangeEnd.call$1(_this._discretize$1(_this._currentDragValue));
        t2 = _this._active = false;
        _this._currentDragValue = 0;
        if (!_this._hasFocus) {
          t3 = t1.___SliderState_overlayController_A;
          t3 === $ && A.throwUnnamedLateFieldNI();
          t3.reverse$0();
        }
        if (_this.get$showValueIndicator() ? t1.interactionTimer == null : t2) {
          t1 = t1.___SliderState_valueIndicatorController_A;
          t1 === $ && A.throwUnnamedLateFieldNI();
          t1.reverse$0();
        }
      }
    },
    _handleDragStart$1(details) {
      this._startInteraction$1(details.globalPosition);
    },
    _handleDragUpdate$1(details) {
      var t1, t2, valueDelta, _this = this;
      if (_this._slider$_state._element == null)
        return;
      if (_this._onChanged != null) {
        t1 = details.primaryDelta;
        t1.toString;
        t2 = _this.get$_trackRect();
        valueDelta = t1 / (t2.right - t2.left);
        switch (_this._slider$_textDirection.index) {
          case 0:
            _this._currentDragValue -= valueDelta;
            break;
          case 1:
            _this._currentDragValue += valueDelta;
            break;
        }
        t1 = _this._onChanged;
        t1.toString;
        t1.call$1(_this._discretize$1(_this._currentDragValue));
      }
    },
    _handleDragEnd$1(details) {
      this._endInteraction$0();
    },
    _handleTapDown$1(details) {
      this._startInteraction$1(details.globalPosition);
    },
    _handleTapUp$1(details) {
      this._endInteraction$0();
    },
    hitTestSelf$1(position) {
      return true;
    },
    handleEvent$2($event, entry) {
      var t1, _this = this;
      if (_this._slider$_state._element == null)
        return;
      if (type$.PointerDownEvent._is($event) && _this._onChanged != null) {
        t1 = _this.___RenderSlider__drag_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
        t1.addPointer$1($event);
        t1 = _this.___RenderSlider__tap_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
        t1.addPointer$1($event);
      }
      if (_this._onChanged != null && _this.overlayRect != null) {
        t1 = _this.overlayRect;
        t1.toString;
        _this.set$hoveringThumb(t1.contains$1(0, $event.get$localPosition()));
      }
    },
    get$sizedByParent() {
      return true;
    },
    computeDryLayout$1(constraints) {
      var t2,
        t1 = constraints.maxWidth;
      t1 = t1 < 1 / 0 ? t1 : 144 + this.get$_maxSliderPartWidth();
      t2 = constraints.maxHeight;
      if (!(t2 < 1 / 0)) {
        t2 = this._sliderTheme.trackHeight;
        t2.toString;
        t2 = Math.max(t2, this.get$_maxSliderPartHeight());
      }
      return new A.Size(t1, t2);
    },
    paint$2(context, offset) {
      var secondaryValue, visualPosition, secondaryVisualPosition, trackRect, t2, thumbCenter, t3, secondaryOffset, t4, t5, canvas, radius, evaluatedElevation, path, _this = this, _null = null,
        t1 = _this._slider$_state.___SliderState_positionController_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1 = t1.__AnimationController__value_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      secondaryValue = _this._secondaryTrackValue;
      switch (_this._slider$_textDirection.index) {
        case 0:
          visualPosition = 1 - t1;
          secondaryVisualPosition = secondaryValue != null ? 1 - secondaryValue : _null;
          break;
        case 1:
          secondaryVisualPosition = secondaryValue != null ? secondaryValue : _null;
          visualPosition = t1;
          break;
        default:
          secondaryVisualPosition = _null;
          visualPosition = secondaryVisualPosition;
      }
      t1 = _this._sliderTheme;
      trackRect = t1.trackShape.getPreferredRect$4$isDiscrete$offset$parentBox$sliderTheme(false, offset, _this, t1);
      t1 = trackRect.left;
      t2 = trackRect.right - t1;
      thumbCenter = new A.Offset(t1 + visualPosition * t2, trackRect.get$center()._dy);
      t3 = _this._onChanged != null;
      if (t3) {
        _this._sliderTheme.overlayShape.toString;
        _this.overlayRect = A.Rect$fromCircle(thumbCenter, 24);
      }
      secondaryOffset = secondaryVisualPosition != null ? new A.Offset(t1 + secondaryVisualPosition * t2, trackRect.get$center()._dy) : _null;
      t1 = _this._sliderTheme;
      t2 = t1.trackShape;
      t2.toString;
      t4 = _this.___RenderSlider__enableAnimation_A;
      t4 === $ && A.throwUnnamedLateFieldNI();
      t5 = _this._slider$_textDirection;
      t2.paint$10$enableAnimation$isDiscrete$isEnabled$parentBox$secondaryOffset$sliderTheme$textDirection$thumbCenter(context, offset, t4, false, t3, _this, secondaryOffset, t1, t5, thumbCenter);
      t1 = _this.___RenderSlider__overlayAnimation_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      if (t1.get$status() !== B.AnimationStatus_0) {
        t2 = _this._sliderTheme;
        t2.overlayShape.toString;
        if (_this._screenSize.get$isEmpty(0))
          _this._size.toString;
        canvas = context.get$canvas();
        t1 = new A.Tween(0, 24, type$.Tween_double).transform$1(t1.get$value());
        t3 = A.Paint$();
        t2 = t2.overlayColor;
        t2.toString;
        t3.set$color(t2);
        canvas.drawCircle$3(thumbCenter, t1, t3);
      }
      t1 = _this._sliderTheme;
      t1.thumbShape.toString;
      t2 = _this.___RenderSlider__overlayAnimation_A;
      t3 = _this.___RenderSlider__enableAnimation_A;
      if (_this._screenSize.get$isEmpty(0))
        _this._size.toString;
      canvas = context.get$canvas();
      t4 = type$.Tween_double;
      t1 = new A.ColorTween(t1.disabledThumbColor, t1.thumbColor).transform$1(t3.get$value());
      t1.toString;
      radius = new A.Tween(10, 10, t4).transform$1(t3.get$value());
      evaluatedElevation = new A.Tween(1, 6, t4).transform$1(t2.get$value());
      path = A.SurfacePath$();
      t2 = 2 * radius;
      path.addArc$3(A.Rect$fromCenter(thumbCenter, t2, t2), 0, 6.283185307179586);
      canvas.drawShadow$4(path, B.Color_4278190080, evaluatedElevation, true);
      t2 = A.Paint$();
      t2.set$color(t1);
      canvas.drawCircle$3(thumbCenter, radius, t2);
    },
    describeSemanticsConfiguration$1(config) {
      var t1, _this = this;
      _this.super$RenderObject$describeSemanticsConfiguration(config);
      config._isSemanticBoundary = false;
      t1 = _this._onChanged;
      config._setFlag$2(B.SemanticsFlag_64, true);
      config._setFlag$2(B.SemanticsFlag_128, t1 != null);
      config._semantics$_textDirection = _this._slider$_textDirection;
      config._hasBeenAnnotated = true;
      if (_this._onChanged != null) {
        config.set$onIncrease(_this.get$increaseAction());
        config.set$onDecrease(_this.get$decreaseAction());
      }
      t1 = _this._slider$_value;
      config._semantics$_attributedValue = new A.AttributedString("" + B.JSNumber_methods.round$0(t1 * 100) + "%", B.List_empty0);
      config._hasBeenAnnotated = true;
      config._semantics$_attributedIncreasedValue = new A.AttributedString("" + B.JSNumber_methods.round$0(A.clampDouble(t1 + _this.get$_semanticActionUnit(), 0, 1) * 100) + "%", B.List_empty0);
      config._semantics$_attributedDecreasedValue = new A.AttributedString("" + B.JSNumber_methods.round$0(A.clampDouble(t1 - _this.get$_semanticActionUnit(), 0, 1) * 100) + "%", B.List_empty0);
    },
    get$_semanticActionUnit() {
      var t1 = this.get$_adjustmentUnit();
      return t1;
    },
    increaseAction$0() {
      var t1 = this._onChanged;
      if (t1 != null)
        t1.call$1(A.clampDouble(this._slider$_value + this.get$_semanticActionUnit(), 0, 1));
    },
    decreaseAction$0() {
      var t1 = this._onChanged;
      if (t1 != null)
        t1.call$1(A.clampDouble(this._slider$_value - this.get$_semanticActionUnit(), 0, 1));
    }
  };
  A._RenderSlider_closure.prototype = {
    call$1($status) {
      var t1;
      if ($status === B.AnimationStatus_0 && this.$this._slider$_state.overlayEntry != null) {
        t1 = this.$this._slider$_state;
        t1.overlayEntry.remove$0(0);
        t1.overlayEntry = null;
      }
    },
    $signature: 2
  };
  A._RenderSlider__maxSliderPartWidth_closure.prototype = {
    call$1(size) {
      return size._dx;
    },
    $signature: 78
  };
  A._RenderSlider__maxSliderPartHeight_closure.prototype = {
    call$1(size) {
      return size._dy;
    },
    $signature: 78
  };
  A._RenderSlider__startInteraction_closure.prototype = {
    call$0() {
      var t3,
        t1 = this.$this,
        t2 = t1._slider$_state;
      t2.interactionTimer = null;
      t3 = false;
      if (!t1._active)
        if (!t1._hasFocus) {
          t1 = t2.___SliderState_valueIndicatorController_A;
          t1 === $ && A.throwUnnamedLateFieldNI();
          t1 = t1.__AnimationController__status_A;
          t1 === $ && A.throwUnnamedLateFieldNI();
          t1 = t1 === B.AnimationStatus_3;
        } else
          t1 = t3;
      else
        t1 = t3;
      if (t1) {
        t1 = t2.___SliderState_valueIndicatorController_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
        t1.reverse$0();
      }
    },
    $signature: 0
  };
  A._AdjustSliderIntent.prototype = {};
  A._SliderAdjustmentType.prototype = {
    _enumToString$0() {
      return "_SliderAdjustmentType." + this._name;
    }
  };
  A._ValueIndicatorRenderObjectWidget.prototype = {
    createRenderObject$1(context) {
      var t2,
        t1 = new A._RenderValueIndicator(this.state, false, A.LayerHandle$());
      t1.RenderObject$0();
      t2 = t1._slider$_state.___SliderState_valueIndicatorController_A;
      t2 === $ && A.throwUnnamedLateFieldNI();
      t1.___RenderValueIndicator__valueIndicatorAnimation_A = A.CurvedAnimation$(B.Cubic_Dkk, t2, null);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      renderObject._slider$_state = this.state;
    }
  };
  A._RenderValueIndicator.prototype = {
    get$sizedByParent() {
      return true;
    },
    attach$1(owner) {
      var t1, t2, _this = this;
      _this.super$__RenderValueIndicator_RenderBox_RelayoutWhenSystemFontsChangeMixin$attach(owner);
      t1 = _this.___RenderValueIndicator__valueIndicatorAnimation_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t2 = _this.get$markNeedsPaint();
      t1.parent.addListener$1(t2);
      t1 = _this._slider$_state.___SliderState_positionController_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.didRegisterListener$0();
      t1 = t1.AnimationLocalListenersMixin__listeners;
      t1._isDirty = true;
      t1._observer_list$_list.push(t2);
    },
    detach$0() {
      var t2, _this = this,
        t1 = _this.___RenderValueIndicator__valueIndicatorAnimation_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t2 = _this.get$markNeedsPaint();
      t1.parent.removeListener$1(t2);
      t1 = _this._slider$_state.___SliderState_positionController_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.removeListener$1(t2);
      _this.super$__RenderValueIndicator_RenderBox_RelayoutWhenSystemFontsChangeMixin$detach();
    },
    paint$2(context, offset) {
      var t1 = this._slider$_state.paintValueIndicator;
      if (t1 != null)
        t1.call$2(context, offset);
    },
    computeDryLayout$1(constraints) {
      return new A.Size(A.clampDouble(0, constraints.minWidth, constraints.maxWidth), A.clampDouble(0, constraints.minHeight, constraints.maxHeight));
    }
  };
  A._SliderDefaultsM2.prototype = {
    get$activeTrackColor() {
      return this._colors.primary;
    },
    get$inactiveTrackColor() {
      var t1 = this._colors.primary;
      return A.Color$fromARGB(61, t1.get$value() >>> 16 & 255, t1.get$value() >>> 8 & 255, t1.get$value() & 255);
    },
    get$secondaryActiveTrackColor() {
      var t1 = this._colors.primary;
      return A.Color$fromARGB(138, t1.get$value() >>> 16 & 255, t1.get$value() >>> 8 & 255, t1.get$value() & 255);
    },
    get$disabledActiveTrackColor() {
      var t1 = this._colors.onSurface.value;
      return A.Color$fromARGB(82, t1 >>> 16 & 255, t1 >>> 8 & 255, t1 & 255);
    },
    get$disabledInactiveTrackColor() {
      var t1 = this._colors.onSurface.value;
      return A.Color$fromARGB(31, t1 >>> 16 & 255, t1 >>> 8 & 255, t1 & 255);
    },
    get$disabledSecondaryActiveTrackColor() {
      var t1 = this._colors.onSurface.value;
      return A.Color$fromARGB(31, t1 >>> 16 & 255, t1 >>> 8 & 255, t1 & 255);
    },
    get$activeTickMarkColor() {
      var t1 = this._colors.onPrimary.value;
      return A.Color$fromARGB(138, t1 >>> 16 & 255, t1 >>> 8 & 255, t1 & 255);
    },
    get$inactiveTickMarkColor() {
      var t1 = this._colors.primary;
      return A.Color$fromARGB(138, t1.get$value() >>> 16 & 255, t1.get$value() >>> 8 & 255, t1.get$value() & 255);
    },
    get$disabledActiveTickMarkColor() {
      var t1 = this._colors.onPrimary.value;
      return A.Color$fromARGB(31, t1 >>> 16 & 255, t1 >>> 8 & 255, t1 & 255);
    },
    get$disabledInactiveTickMarkColor() {
      var t1 = this._colors.onSurface.value;
      return A.Color$fromARGB(31, t1 >>> 16 & 255, t1 >>> 8 & 255, t1 & 255);
    },
    get$thumbColor() {
      return this._colors.primary;
    },
    get$disabledThumbColor() {
      var t1 = this._colors,
        t2 = t1.onSurface.value;
      return A.Color_alphaBlend(A.Color$fromARGB(97, t2 >>> 16 & 255, t2 >>> 8 & 255, t2 & 255), t1.surface);
    },
    get$overlayColor() {
      var t1 = this._colors.primary;
      return A.Color$fromARGB(31, t1.get$value() >>> 16 & 255, t1.get$value() >>> 8 & 255, t1.get$value() & 255);
    },
    get$valueIndicatorTextStyle() {
      return A.Theme_of(this.context).textTheme.bodyLarge.copyWith$1$color(this._colors.onPrimary);
    },
    get$valueIndicatorShape() {
      return B.C_RectangularSliderValueIndicatorShape;
    }
  };
  A.__RenderSlider_RenderBox_RelayoutWhenSystemFontsChangeMixin.prototype = {
    attach$1(owner) {
      this.super$RenderObject$attach(owner);
      $.PaintingBinding__instance.PaintingBinding__systemFonts._systemFontsCallbacks.add$1(0, this.get$_scheduleSystemFontsUpdate());
    },
    detach$0() {
      $.PaintingBinding__instance.PaintingBinding__systemFonts._systemFontsCallbacks.remove$1(0, this.get$_scheduleSystemFontsUpdate());
      this.super$AbstractNode$detach();
    }
  };
  A.__RenderValueIndicator_RenderBox_RelayoutWhenSystemFontsChangeMixin.prototype = {
    attach$1(owner) {
      this.super$RenderObject$attach(owner);
      $.PaintingBinding__instance.PaintingBinding__systemFonts._systemFontsCallbacks.add$1(0, this.get$_scheduleSystemFontsUpdate());
    },
    detach$0() {
      $.PaintingBinding__instance.PaintingBinding__systemFonts._systemFontsCallbacks.remove$1(0, this.get$_scheduleSystemFontsUpdate());
      this.super$AbstractNode$detach();
    }
  };
  A.__SliderState_State_TickerProviderStateMixin.prototype = {
    activate$0() {
      this.super$State$activate();
      this._updateTickerModeNotifier$0();
      this._updateTickers$0();
    },
    dispose$0() {
      var _this = this,
        t1 = _this.TickerProviderStateMixin__tickerModeNotifier;
      if (t1 != null)
        t1.removeListener$1(_this.get$_updateTickers());
      _this.TickerProviderStateMixin__tickerModeNotifier = null;
      _this.super$State$dispose();
    }
  };
  A.ShowValueIndicator.prototype = {
    _enumToString$0() {
      return "ShowValueIndicator." + this._name;
    }
  };
  A.SliderThemeData.prototype = {
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(_this.trackHeight, _this.get$activeTrackColor(), _this.get$inactiveTrackColor(), _this.get$secondaryActiveTrackColor(), _this.get$disabledActiveTrackColor(), _this.get$disabledInactiveTrackColor(), _this.get$disabledSecondaryActiveTrackColor(), _this.get$activeTickMarkColor(), _this.get$inactiveTickMarkColor(), _this.get$disabledActiveTickMarkColor(), _this.get$disabledInactiveTickMarkColor(), _this.get$thumbColor(), _this.overlappingShapeStrokeColor, _this.get$disabledThumbColor(), _this.get$overlayColor(), _this.valueIndicatorColor, _this.overlayShape, _this.tickMarkShape, _this.thumbShape, A.Object_hash(_this.trackShape, _this.get$valueIndicatorShape(), _this.rangeTickMarkShape, _this.rangeThumbShape, _this.rangeTrackShape, _this.rangeValueIndicatorShape, _this.showValueIndicator, _this.get$valueIndicatorTextStyle(), _this.minThumbSeparation, _this.thumbSelector, _this.mouseCursor, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue));
    },
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      t1 = false;
      if (other instanceof A.SliderThemeData)
        if (other.trackHeight == _this.trackHeight)
          if (J.$eq$(other.get$activeTrackColor(), _this.get$activeTrackColor()))
            if (J.$eq$(other.get$inactiveTrackColor(), _this.get$inactiveTrackColor()))
              if (J.$eq$(other.get$secondaryActiveTrackColor(), _this.get$secondaryActiveTrackColor()))
                if (J.$eq$(other.get$disabledActiveTrackColor(), _this.get$disabledActiveTrackColor()))
                  if (J.$eq$(other.get$disabledInactiveTrackColor(), _this.get$disabledInactiveTrackColor()))
                    if (J.$eq$(other.get$disabledSecondaryActiveTrackColor(), _this.get$disabledSecondaryActiveTrackColor()))
                      if (J.$eq$(other.get$activeTickMarkColor(), _this.get$activeTickMarkColor()))
                        if (J.$eq$(other.get$inactiveTickMarkColor(), _this.get$inactiveTickMarkColor()))
                          if (J.$eq$(other.get$disabledActiveTickMarkColor(), _this.get$disabledActiveTickMarkColor()))
                            if (J.$eq$(other.get$disabledInactiveTickMarkColor(), _this.get$disabledInactiveTickMarkColor()))
                              if (J.$eq$(other.get$thumbColor(), _this.get$thumbColor()))
                                if (J.$eq$(other.overlappingShapeStrokeColor, _this.overlappingShapeStrokeColor))
                                  if (J.$eq$(other.get$disabledThumbColor(), _this.get$disabledThumbColor()))
                                    if (J.$eq$(other.get$overlayColor(), _this.get$overlayColor()))
                                      if (J.$eq$(other.valueIndicatorColor, _this.valueIndicatorColor))
                                        if (other.overlayShape == _this.overlayShape)
                                          if (other.tickMarkShape == _this.tickMarkShape)
                                            if (other.thumbShape == _this.thumbShape)
                                              if (other.trackShape == _this.trackShape)
                                                if (other.get$valueIndicatorShape() == _this.get$valueIndicatorShape())
                                                  if (other.showValueIndicator == _this.showValueIndicator)
                                                    if (J.$eq$(other.get$valueIndicatorTextStyle(), _this.get$valueIndicatorTextStyle()))
                                                      t1 = other.minThumbSeparation == _this.minThumbSeparation;
      return t1;
    },
    get$activeTrackColor() {
      return this.activeTrackColor;
    },
    get$inactiveTrackColor() {
      return this.inactiveTrackColor;
    },
    get$secondaryActiveTrackColor() {
      return this.secondaryActiveTrackColor;
    },
    get$disabledActiveTrackColor() {
      return this.disabledActiveTrackColor;
    },
    get$disabledSecondaryActiveTrackColor() {
      return this.disabledSecondaryActiveTrackColor;
    },
    get$disabledInactiveTrackColor() {
      return this.disabledInactiveTrackColor;
    },
    get$activeTickMarkColor() {
      return this.activeTickMarkColor;
    },
    get$inactiveTickMarkColor() {
      return this.inactiveTickMarkColor;
    },
    get$disabledActiveTickMarkColor() {
      return this.disabledActiveTickMarkColor;
    },
    get$disabledInactiveTickMarkColor() {
      return this.disabledInactiveTickMarkColor;
    },
    get$thumbColor() {
      return this.thumbColor;
    },
    get$disabledThumbColor() {
      return this.disabledThumbColor;
    },
    get$overlayColor() {
      return this.overlayColor;
    },
    get$valueIndicatorShape() {
      return this.valueIndicatorShape;
    },
    get$valueIndicatorTextStyle() {
      return this.valueIndicatorTextStyle;
    }
  };
  A.SliderComponentShape.prototype = {};
  A.SliderTickMarkShape.prototype = {};
  A.SliderTrackShape.prototype = {};
  A.BaseSliderTrackShape.prototype = {
    getPreferredRect$5$isDiscrete$isEnabled$offset$parentBox$sliderTheme(isDiscrete, isEnabled, offset, parentBox, sliderTheme) {
      var t1, trackLeft, t2, trackTop, trackRight;
      sliderTheme.thumbShape.toString;
      sliderTheme.overlayShape.toString;
      t1 = sliderTheme.trackHeight;
      t1.toString;
      trackLeft = offset._dx + Math.max(24, 10);
      t2 = parentBox._size;
      trackTop = offset._dy + (t2._dy - t1) / 2;
      trackRight = trackLeft + t2._dx - Math.max(20, 48);
      return new A.Rect(Math.min(trackLeft, trackRight), trackTop, Math.max(trackLeft, trackRight), trackTop + t1);
    },
    getPreferredRect$3$isDiscrete$parentBox$sliderTheme(isDiscrete, parentBox, sliderTheme) {
      return this.getPreferredRect$5$isDiscrete$isEnabled$offset$parentBox$sliderTheme(isDiscrete, false, B.Offset_0_0, parentBox, sliderTheme);
    },
    getPreferredRect$4$isDiscrete$offset$parentBox$sliderTheme(isDiscrete, offset, parentBox, sliderTheme) {
      return this.getPreferredRect$5$isDiscrete$isEnabled$offset$parentBox$sliderTheme(isDiscrete, false, offset, parentBox, sliderTheme);
    }
  };
  A.RoundedRectSliderTrackShape.prototype = {
    paint$10$enableAnimation$isDiscrete$isEnabled$parentBox$secondaryOffset$sliderTheme$textDirection$thumbCenter(context, offset, enableAnimation, isDiscrete, isEnabled, parentBox, secondaryOffset, sliderTheme, textDirection, thumbCenter) {
      var activePaint, inactivePaint, rightTrackPaint, leftTrackPaint, trackRect, t2, t3, t4, trackRadius, activeTrackRadius, t5, t6, t7, t8, t9, showSecondaryTrack, secondaryTrackPaint,
        t1 = sliderTheme.trackHeight;
      if (t1 == null || t1 <= 0)
        return;
      activePaint = A.Paint$();
      t1 = new A.ColorTween(sliderTheme.disabledActiveTrackColor, sliderTheme.activeTrackColor).transform$1(enableAnimation.get$value());
      t1.toString;
      activePaint.set$color(t1);
      inactivePaint = A.Paint$();
      t1 = new A.ColorTween(sliderTheme.disabledInactiveTrackColor, sliderTheme.inactiveTrackColor).transform$1(enableAnimation.get$value());
      t1.toString;
      inactivePaint.set$color(t1);
      switch (textDirection.index) {
        case 1:
          rightTrackPaint = inactivePaint;
          leftTrackPaint = activePaint;
          break;
        case 0:
          rightTrackPaint = activePaint;
          leftTrackPaint = inactivePaint;
          break;
        default:
          leftTrackPaint = null;
          rightTrackPaint = null;
      }
      trackRect = this.getPreferredRect$5$isDiscrete$isEnabled$offset$parentBox$sliderTheme(isDiscrete, isEnabled, offset, parentBox, sliderTheme);
      t1 = trackRect.bottom;
      t2 = trackRect.top;
      t3 = t1 - t2;
      t4 = t3 / 2;
      trackRadius = new A.Radius(t4, t4);
      t3 = (t3 + 2) / 2;
      activeTrackRadius = new A.Radius(t3, t3);
      t3 = context.get$canvas();
      t4 = textDirection === B.TextDirection_1;
      t5 = t4 ? t2 - 1 : t2;
      t6 = thumbCenter._dx;
      t7 = t4 ? t1 + 1 : t1;
      t8 = t4 ? activeTrackRadius : trackRadius;
      t9 = t4 ? activeTrackRadius : trackRadius;
      t3.drawRRect$2(A.RRect$fromLTRBAndCorners(trackRect.left, t5, t6, t7, t9, B.Radius_0_0, t8, B.Radius_0_0), leftTrackPaint);
      t8 = context.get$canvas();
      t3 = textDirection === B.TextDirection_0;
      t5 = t3 ? t2 - 1 : t2;
      t7 = t3 ? t1 + 1 : t1;
      t9 = t3 ? activeTrackRadius : trackRadius;
      t3 = t3 ? activeTrackRadius : trackRadius;
      t8.drawRRect$2(A.RRect$fromLTRBAndCorners(t6, t5, trackRect.right, t7, B.Radius_0_0, t3, B.Radius_0_0, t9), rightTrackPaint);
      if (secondaryOffset != null) {
        t3 = secondaryOffset._dx;
        showSecondaryTrack = t4 ? t3 > t6 : t3 < t6;
      } else
        showSecondaryTrack = false;
      if (showSecondaryTrack) {
        secondaryTrackPaint = A.Paint$();
        t3 = new A.ColorTween(sliderTheme.disabledSecondaryActiveTrackColor, sliderTheme.secondaryActiveTrackColor).transform$1(enableAnimation.get$value());
        t3.toString;
        secondaryTrackPaint.set$color(t3);
        t3 = secondaryOffset._dx;
        if (t4)
          context.get$canvas().drawRRect$2(A.RRect$fromLTRBAndCorners(t6, t2, t3, t1, B.Radius_0_0, trackRadius, B.Radius_0_0, trackRadius), secondaryTrackPaint);
        else
          context.get$canvas().drawRRect$2(A.RRect$fromLTRBAndCorners(t3, t2, t6, t1, trackRadius, B.Radius_0_0, trackRadius, B.Radius_0_0), secondaryTrackPaint);
      }
    }
  };
  A.RoundSliderTickMarkShape.prototype = {
    getPreferredSize$2$isEnabled$sliderTheme(isEnabled, sliderTheme) {
      var t1 = sliderTheme.trackHeight;
      t1.toString;
      t1 = t1 / 4 * 2;
      return new A.Size(t1, t1);
    }
  };
  A.RoundSliderThumbShape.prototype = {};
  A.RoundSliderOverlayShape.prototype = {};
  A.RectangularSliderValueIndicatorShape.prototype = {};
  A._RoundedRectSliderTrackShape_SliderTrackShape_BaseSliderTrackShape.prototype = {};
  A._SliderThemeData_Object_Diagnosticable.prototype = {};
  A.SnackBarClosedReason.prototype = {
    _enumToString$0() {
      return "SnackBarClosedReason." + this._name;
    }
  };
  A.SnackBarThemeData.prototype = {
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(_this.backgroundColor, _this.actionTextColor, _this.disabledActionTextColor, _this.contentTextStyle, _this.elevation, _this.shape, _this.behavior, _this.width, _this.insetPadding, null, _this.closeIconColor, _this.actionOverflowThreshold, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      return other instanceof A.SnackBarThemeData && J.$eq$(other.backgroundColor, _this.backgroundColor) && J.$eq$(other.actionTextColor, _this.actionTextColor) && J.$eq$(other.disabledActionTextColor, _this.disabledActionTextColor) && J.$eq$(other.contentTextStyle, _this.contentTextStyle) && other.elevation == _this.elevation && J.$eq$(other.shape, _this.shape) && other.width == _this.width && J.$eq$(other.insetPadding, _this.insetPadding) && J.$eq$(other.closeIconColor, _this.closeIconColor) && other.actionOverflowThreshold == _this.actionOverflowThreshold;
    }
  };
  A._SnackBarThemeData_Object_Diagnosticable.prototype = {};
  A.SwitchThemeData.prototype = {
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(_this.thumbColor, _this.trackColor, _this.trackOutlineColor, _this.materialTapTargetSize, _this.mouseCursor, _this.overlayColor, _this.splashRadius, _this.thumbIcon, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      t1 = false;
      if (other instanceof A.SwitchThemeData)
        if (other.thumbColor == _this.thumbColor)
          if (other.trackColor == _this.trackColor)
            if (other.trackOutlineColor == _this.trackOutlineColor)
              if (other.overlayColor == _this.overlayColor)
                t1 = other.splashRadius == _this.splashRadius;
      return t1;
    }
  };
  A._SwitchThemeData_Object_Diagnosticable.prototype = {};
  A.TabBarTheme.prototype = {
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(_this.indicator, _this.indicatorColor, _this.indicatorSize, _this.dividerColor, _this.labelColor, _this.labelPadding, _this.labelStyle, _this.unselectedLabelColor, _this.unselectedLabelStyle, _this.overlayColor, _this.splashFactory, _this.mouseCursor, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      t1 = false;
      if (other instanceof A.TabBarTheme)
        if (J.$eq$(other.indicator, _this.indicator))
          if (J.$eq$(other.indicatorColor, _this.indicatorColor))
            if (J.$eq$(other.dividerColor, _this.dividerColor))
              if (J.$eq$(other.labelColor, _this.labelColor))
                if (J.$eq$(other.labelPadding, _this.labelPadding))
                  if (J.$eq$(other.labelStyle, _this.labelStyle))
                    if (J.$eq$(other.unselectedLabelColor, _this.unselectedLabelColor))
                      if (J.$eq$(other.unselectedLabelStyle, _this.unselectedLabelStyle))
                        t1 = other.overlayColor == _this.overlayColor;
      return t1;
    }
  };
  A._TabBarTheme_Object_Diagnosticable.prototype = {};
  A.TextButton.prototype = {
    defaultStyleOf$1(context) {
      var foreground, t1, disabledForeground, t2, foregroundColorProp, backgroundColorProp, overlayColor, t3, _null = null,
        theme = A.Theme_of(context),
        colorScheme = theme.colorScheme;
      A.Theme_of(context);
      foreground = colorScheme.primary;
      t1 = colorScheme.onSurface.value;
      disabledForeground = A.Color$fromARGB(97, t1 >>> 16 & 255, t1 >>> 8 & 255, t1 & 255);
      t1 = theme.textTheme.labelLarge;
      t2 = A._scaledPadding(context);
      foregroundColorProp = new A._TextButtonDefaultColor(foreground, disabledForeground);
      backgroundColorProp = new A._TextButtonDefaultColor(B.Color_0, B.Color_0);
      overlayColor = new A._TextButtonDefaultOverlay(foreground);
      t1 = t1 == null ? _null : new A.MaterialStatePropertyAll(t1, type$.MaterialStatePropertyAll_TextStyle);
      t3 = type$.MaterialStatePropertyAll_Size;
      t1 = A.ButtonStyle$(B.Alignment_0_0, B.Duration_200000, backgroundColorProp, new A.MaterialStatePropertyAll(0, type$.MaterialStatePropertyAll_double), true, _null, foregroundColorProp, _null, _null, new A.MaterialStatePropertyAll(B.Size_t5z, t3), new A.MaterialStatePropertyAll(B.Size_64_36, t3), new A._TextButtonDefaultMouseCursor(B.SystemMouseCursor_click, B.SystemMouseCursor_basic), overlayColor, new A.MaterialStatePropertyAll(t2, type$.MaterialStatePropertyAll_EdgeInsetsGeometry), new A.MaterialStatePropertyAll(theme.shadowColor, type$.MaterialStatePropertyAll_Color), new A.MaterialStatePropertyAll(B.RoundedRectangleBorder_dBW, type$.MaterialStatePropertyAll_OutlinedBorder), _null, B.C__InkRippleFactory, _null, theme.materialTapTargetSize, t1, theme.visualDensity);
      return t1;
    },
    themeStyleOf$1(context) {
      var t1;
      context.dependOnInheritedWidgetOfExactType$1$0(type$.TextButtonTheme);
      t1 = A.Theme_of(context);
      return t1.textButtonTheme.style;
    }
  };
  A._TextButtonDefaultColor.prototype = {
    resolve$1(states) {
      if (states.contains$1(0, B.MaterialState_6))
        return this.disabled;
      return this.color;
    },
    toString$0(_) {
      return "{disabled: " + A.S(this.disabled) + ", otherwise: " + A.S(this.color) + "}";
    }
  };
  A._TextButtonDefaultOverlay.prototype = {
    resolve$1(states) {
      var t1;
      if (states.contains$1(0, B.MaterialState_0)) {
        t1 = this.primary;
        return A.Color$fromARGB(10, t1.get$value() >>> 16 & 255, t1.get$value() >>> 8 & 255, t1.get$value() & 255);
      }
      if (states.contains$1(0, B.MaterialState_1) || states.contains$1(0, B.MaterialState_2)) {
        t1 = this.primary;
        return A.Color$fromARGB(31, t1.get$value() >>> 16 & 255, t1.get$value() >>> 8 & 255, t1.get$value() & 255);
      }
      return null;
    },
    toString$0(_) {
      var t1 = this.primary;
      return "{hovered: " + A.Color$fromARGB(10, t1.get$value() >>> 16 & 255, t1.get$value() >>> 8 & 255, t1.get$value() & 255).toString$0(0) + ", focused,pressed: " + A.Color$fromARGB(31, t1.get$value() >>> 16 & 255, t1.get$value() >>> 8 & 255, t1.get$value() & 255).toString$0(0) + ", otherwise: null}";
    }
  };
  A._TextButtonDefaultMouseCursor.prototype = {
    resolve$1(states) {
      if (states.contains$1(0, B.MaterialState_6))
        return this.disabledCursor;
      return this.enabledCursor;
    }
  };
  A.__TextButtonDefaultMouseCursor_MaterialStateProperty_Diagnosticable.prototype = {};
  A.TextButtonThemeData.prototype = {
    get$hashCode(_) {
      return J.get$hashCode$(this.style);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(this))
        return false;
      return other instanceof A.TextButtonThemeData && J.$eq$(other.style, this.style);
    }
  };
  A._TextButtonThemeData_Object_Diagnosticable.prototype = {};
  A.TextSelectionThemeData.prototype = {
    get$hashCode(_) {
      return A.Object_hash(this.cursorColor, this.selectionColor, this.selectionHandleColor, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      return other instanceof A.TextSelectionThemeData && J.$eq$(other.cursorColor, _this.cursorColor) && J.$eq$(other.selectionColor, _this.selectionColor) && J.$eq$(other.selectionHandleColor, _this.selectionHandleColor);
    }
  };
  A._TextSelectionThemeData_Object_Diagnosticable.prototype = {};
  A.TextTheme.prototype = {
    merge$1(other) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, _this = this, _null = null;
      if (other == null)
        return _this;
      t1 = _this.displayLarge;
      t2 = t1 == null ? _null : t1.merge$1(other.displayLarge);
      if (t2 == null)
        t2 = other.displayLarge;
      t3 = _this.displayMedium;
      t4 = t3 == null ? _null : t3.merge$1(other.displayMedium);
      if (t4 == null)
        t4 = other.displayMedium;
      t5 = _this.displaySmall;
      t6 = t5 == null ? _null : t5.merge$1(other.displaySmall);
      if (t6 == null)
        t6 = other.displaySmall;
      t7 = _this.headlineLarge;
      t8 = t7 == null ? _null : t7.merge$1(other.headlineLarge);
      if (t8 == null)
        t8 = other.headlineLarge;
      t9 = _this.headlineMedium;
      t10 = t9 == null ? _null : t9.merge$1(other.headlineMedium);
      if (t10 == null)
        t10 = other.headlineMedium;
      t11 = _this.headlineSmall;
      t12 = t11 == null ? _null : t11.merge$1(other.headlineSmall);
      if (t12 == null)
        t12 = other.headlineSmall;
      t13 = _this.titleLarge;
      t14 = t13 == null ? _null : t13.merge$1(other.titleLarge);
      if (t14 == null)
        t14 = other.titleLarge;
      t15 = _this.titleMedium;
      t16 = t15 == null ? _null : t15.merge$1(other.titleMedium);
      if (t16 == null)
        t16 = other.titleMedium;
      t17 = _this.titleSmall;
      t18 = t17 == null ? _null : t17.merge$1(other.titleSmall);
      if (t18 == null)
        t18 = other.titleSmall;
      t19 = _this.bodyLarge;
      t20 = t19 == null ? _null : t19.merge$1(other.bodyLarge);
      if (t20 == null)
        t20 = other.bodyLarge;
      t21 = _this.bodyMedium;
      t22 = t21 == null ? _null : t21.merge$1(other.bodyMedium);
      if (t22 == null)
        t22 = other.bodyMedium;
      t23 = _this.bodySmall;
      t24 = t23 == null ? _null : t23.merge$1(other.bodySmall);
      if (t24 == null)
        t24 = other.bodySmall;
      t25 = _this.labelLarge;
      t26 = t25 == null ? _null : t25.merge$1(other.labelLarge);
      if (t26 == null)
        t26 = other.labelLarge;
      t27 = _this.labelMedium;
      t28 = t27 == null ? _null : t27.merge$1(other.labelMedium);
      if (t28 == null)
        t28 = other.labelMedium;
      t29 = _this.labelSmall;
      t30 = t29 == null ? _null : t29.merge$1(other.labelSmall);
      if (t30 == null)
        t30 = other.labelSmall;
      if (t2 == null)
        t2 = _null;
      t1 = t2 == null ? t1 : t2;
      t2 = t4 == null ? _null : t4;
      if (t2 == null)
        t2 = t3;
      t3 = t6 == null ? _null : t6;
      if (t3 == null)
        t3 = t5;
      t4 = t8 == null ? t7 : t8;
      t5 = t10 == null ? _null : t10;
      if (t5 == null)
        t5 = t9;
      t6 = t12 == null ? _null : t12;
      if (t6 == null)
        t6 = t11;
      t7 = t14 == null ? _null : t14;
      if (t7 == null)
        t7 = t13;
      t8 = t16 == null ? _null : t16;
      if (t8 == null)
        t8 = t15;
      t9 = t18 == null ? _null : t18;
      if (t9 == null)
        t9 = t17;
      t10 = t20 == null ? _null : t20;
      if (t10 == null)
        t10 = t19;
      t11 = t22 == null ? _null : t22;
      if (t11 == null)
        t11 = t21;
      t12 = t24 == null ? _null : t24;
      if (t12 == null)
        t12 = t23;
      t13 = t26 == null ? _null : t26;
      if (t13 == null)
        t13 = t25;
      t14 = t28 == null ? t27 : t28;
      t15 = t30 == null ? _null : t30;
      return A.TextTheme$(t10, t11, t12, t1, t2, t3, t4, t5, t6, t13, t14, t15 == null ? t29 : t15, t7, t8, t9);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      return other instanceof A.TextTheme && J.$eq$(_this.displayLarge, other.displayLarge) && J.$eq$(_this.displayMedium, other.displayMedium) && J.$eq$(_this.displaySmall, other.displaySmall) && J.$eq$(_this.headlineLarge, other.headlineLarge) && J.$eq$(_this.headlineMedium, other.headlineMedium) && J.$eq$(_this.headlineSmall, other.headlineSmall) && J.$eq$(_this.titleLarge, other.titleLarge) && J.$eq$(_this.titleMedium, other.titleMedium) && J.$eq$(_this.titleSmall, other.titleSmall) && J.$eq$(_this.bodyLarge, other.bodyLarge) && J.$eq$(_this.bodyMedium, other.bodyMedium) && J.$eq$(_this.bodySmall, other.bodySmall) && J.$eq$(_this.labelLarge, other.labelLarge) && J.$eq$(_this.labelMedium, other.labelMedium) && J.$eq$(_this.labelSmall, other.labelSmall);
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(_this.displayLarge, _this.displayMedium, _this.displaySmall, _this.headlineLarge, _this.headlineMedium, _this.headlineSmall, _this.titleLarge, _this.titleMedium, _this.titleSmall, _this.bodyLarge, _this.bodyMedium, _this.bodySmall, _this.labelLarge, _this.labelMedium, _this.labelSmall, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    }
  };
  A._TextTheme_Object_Diagnosticable.prototype = {};
  A.Theme.prototype = {
    build$1(context) {
      var t9, t10,
        t1 = this.data,
        t2 = B.CupertinoThemeData_szZ.brightness,
        t3 = B.CupertinoThemeData_szZ.primaryColor,
        t4 = B.CupertinoThemeData_szZ.primaryContrastingColor,
        t5 = B.CupertinoThemeData_szZ.textTheme,
        t6 = B.CupertinoThemeData_szZ.barBackgroundColor,
        t7 = B.CupertinoThemeData_szZ.scaffoldBackgroundColor,
        t8 = B.CupertinoThemeData_szZ.applyThemeToAll,
        selectionStyle = context.dependOnInheritedWidgetOfExactType$1$0(type$.DefaultSelectionStyle);
      if (selectionStyle == null)
        selectionStyle = B.DefaultSelectionStyle_x1B;
      t9 = t1.textSelectionTheme;
      t10 = t9.selectionColor;
      if (t10 == null)
        t10 = selectionStyle.selectionColor;
      t9 = t9.cursorColor;
      if (t9 == null)
        t9 = selectionStyle.cursorColor;
      return new A._InheritedTheme(this, new A.CupertinoTheme(new A.MaterialBasedCupertinoThemeData(t1, new A.NoDefaultCupertinoThemeData(t2, t3, t4, t5, t6, t7, t8), B._CupertinoThemeDefaults_v32, t2, t3, t4, t5, t6, t7, t8), A.IconTheme$(A.DefaultSelectionStyle$(this.child, t9, t10), t1.iconTheme, null), null), null);
    }
  };
  A._InheritedTheme.prototype = {
    updateShouldNotify$1(old) {
      return !this.theme.data.$eq(0, old.theme.data);
    }
  };
  A.ThemeDataTween.prototype = {
    lerp$1(t) {
      var t2,
        t1 = this.begin;
      t1.toString;
      t2 = this.end;
      t2.toString;
      return A.ThemeData_lerp(t1, t2, t);
    }
  };
  A.AnimatedTheme.prototype = {
    createState$0() {
      return new A._AnimatedThemeState(null, null);
    }
  };
  A._AnimatedThemeState.prototype = {
    forEachTween$1(visitor) {
      var t1 = visitor.call$3(this._theme0$_data, this._widget.data, new A._AnimatedThemeState_forEachTween_closure());
      t1.toString;
      this._theme0$_data = type$.ThemeDataTween._as(t1);
    },
    build$1(context) {
      var t1 = this._theme0$_data;
      t1.toString;
      return new A.Theme(t1.transform$1(this.get$_animation().get$value()), this._widget.child, null);
    }
  };
  A._AnimatedThemeState_forEachTween_closure.prototype = {
    call$1(value) {
      return new A.ThemeDataTween(type$.ThemeData._as(value), null);
    },
    $signature: 126
  };
  A.MaterialTapTargetSize.prototype = {
    _enumToString$0() {
      return "MaterialTapTargetSize." + this._name;
    }
  };
  A.ThemeData.prototype = {
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      t1 = false;
      if (other instanceof A.ThemeData)
        if (other.applyElevationOverlayColor === _this.applyElevationOverlayColor)
          if (A.mapEquals(other.extensions, _this.extensions))
            if (other.inputDecorationTheme.$eq(0, _this.inputDecorationTheme))
              if (other.materialTapTargetSize === _this.materialTapTargetSize)
                if (other.pageTransitionsTheme.$eq(0, _this.pageTransitionsTheme))
                  if (other.platform === _this.platform)
                    if (other.scrollbarTheme.$eq(0, _this.scrollbarTheme))
                      if (other.splashFactory === _this.splashFactory)
                        if (other.visualDensity.$eq(0, _this.visualDensity))
                          if (other.canvasColor.$eq(0, _this.canvasColor))
                            if (other.cardColor.$eq(0, _this.cardColor))
                              if (other.colorScheme.$eq(0, _this.colorScheme))
                                if (other.dialogBackgroundColor.$eq(0, _this.dialogBackgroundColor))
                                  if (other.disabledColor.$eq(0, _this.disabledColor))
                                    if (other.dividerColor.$eq(0, _this.dividerColor))
                                      if (other.focusColor.$eq(0, _this.focusColor))
                                        if (other.highlightColor.$eq(0, _this.highlightColor))
                                          if (other.hintColor.$eq(0, _this.hintColor))
                                            if (other.hoverColor.$eq(0, _this.hoverColor))
                                              if (other.indicatorColor.$eq(0, _this.indicatorColor))
                                                if (other.primaryColor.$eq(0, _this.primaryColor))
                                                  if (other.primaryColorDark.$eq(0, _this.primaryColorDark))
                                                    if (other.primaryColorLight.$eq(0, _this.primaryColorLight))
                                                      if (other.scaffoldBackgroundColor.$eq(0, _this.scaffoldBackgroundColor))
                                                        if (other.secondaryHeaderColor.$eq(0, _this.secondaryHeaderColor))
                                                          if (other.shadowColor.$eq(0, _this.shadowColor))
                                                            if (other.splashColor.$eq(0, _this.splashColor))
                                                              if (other.unselectedWidgetColor.$eq(0, _this.unselectedWidgetColor))
                                                                if (other.iconTheme.$eq(0, _this.iconTheme))
                                                                  if (other.primaryIconTheme.$eq(0, _this.primaryIconTheme))
                                                                    if (other.primaryTextTheme.$eq(0, _this.primaryTextTheme))
                                                                      if (other.textTheme.$eq(0, _this.textTheme))
                                                                        if (other.typography.$eq(0, _this.typography))
                                                                          if (J.$eq$(other.actionIconTheme, _this.actionIconTheme))
                                                                            if (other.appBarTheme.$eq(0, _this.appBarTheme))
                                                                              if (other.badgeTheme.$eq(0, _this.badgeTheme))
                                                                                if (other.bannerTheme.$eq(0, _this.bannerTheme))
                                                                                  if (other.bottomAppBarTheme.$eq(0, _this.bottomAppBarTheme))
                                                                                    if (other.bottomNavigationBarTheme.$eq(0, _this.bottomNavigationBarTheme))
                                                                                      if (other.bottomSheetTheme.$eq(0, _this.bottomSheetTheme))
                                                                                        if (other.buttonBarTheme.$eq(0, _this.buttonBarTheme))
                                                                                          if (other.buttonTheme.$eq(0, _this.buttonTheme))
                                                                                            if (other.cardTheme.$eq(0, _this.cardTheme))
                                                                                              if (other.checkboxTheme.$eq(0, _this.checkboxTheme))
                                                                                                if (other.chipTheme.$eq(0, _this.chipTheme))
                                                                                                  if (other.dataTableTheme.$eq(0, _this.dataTableTheme))
                                                                                                    if (other.datePickerTheme.$eq(0, _this.datePickerTheme))
                                                                                                      if (other.dialogTheme.$eq(0, _this.dialogTheme))
                                                                                                        if (other.dividerTheme.$eq(0, _this.dividerTheme))
                                                                                                          if (other.drawerTheme.$eq(0, _this.drawerTheme))
                                                                                                            if (other.dropdownMenuTheme.$eq(0, _this.dropdownMenuTheme))
                                                                                                              if (other.elevatedButtonTheme.$eq(0, _this.elevatedButtonTheme))
                                                                                                                if (other.expansionTileTheme.$eq(0, _this.expansionTileTheme))
                                                                                                                  if (other.filledButtonTheme.$eq(0, _this.filledButtonTheme))
                                                                                                                    if (other.floatingActionButtonTheme.$eq(0, _this.floatingActionButtonTheme))
                                                                                                                      if (other.iconButtonTheme.$eq(0, _this.iconButtonTheme))
                                                                                                                        if (other.listTileTheme.$eq(0, _this.listTileTheme))
                                                                                                                          if (other.menuBarTheme.$eq(0, _this.menuBarTheme))
                                                                                                                            if (other.menuButtonTheme.$eq(0, _this.menuButtonTheme))
                                                                                                                              if (other.menuTheme.$eq(0, _this.menuTheme))
                                                                                                                                if (other.navigationBarTheme.$eq(0, _this.navigationBarTheme))
                                                                                                                                  if (other.navigationDrawerTheme.$eq(0, _this.navigationDrawerTheme))
                                                                                                                                    if (other.navigationRailTheme.$eq(0, _this.navigationRailTheme))
                                                                                                                                      if (other.outlinedButtonTheme.$eq(0, _this.outlinedButtonTheme))
                                                                                                                                        if (other.popupMenuTheme.$eq(0, _this.popupMenuTheme))
                                                                                                                                          if (other.progressIndicatorTheme.$eq(0, _this.progressIndicatorTheme))
                                                                                                                                            if (other.radioTheme.$eq(0, _this.radioTheme))
                                                                                                                                              if (other.segmentedButtonTheme.$eq(0, _this.segmentedButtonTheme))
                                                                                                                                                if (other.sliderTheme.$eq(0, _this.sliderTheme))
                                                                                                                                                  if (other.snackBarTheme.$eq(0, _this.snackBarTheme))
                                                                                                                                                    if (other.switchTheme.$eq(0, _this.switchTheme))
                                                                                                                                                      if (other.tabBarTheme.$eq(0, _this.tabBarTheme))
                                                                                                                                                        if (other.textButtonTheme.$eq(0, _this.textButtonTheme))
                                                                                                                                                          if (other.textSelectionTheme.$eq(0, _this.textSelectionTheme))
                                                                                                                                                            if (other.timePickerTheme.$eq(0, _this.timePickerTheme))
                                                                                                                                                              if (other.toggleButtonsTheme.$eq(0, _this.toggleButtonsTheme))
                                                                                                                                                                if (other.tooltipTheme.$eq(0, _this.tooltipTheme))
                                                                                                                                                                  if (other._primaryColorBrightness === _this._primaryColorBrightness) {
                                                                                                                                                                    t2 = other._toggleableActiveColor;
                                                                                                                                                                    t2.toString;
                                                                                                                                                                    t3 = _this._toggleableActiveColor;
                                                                                                                                                                    t3.toString;
                                                                                                                                                                    if (t2.$eq(0, t3)) {
                                                                                                                                                                      t2 = other._selectedRowColor;
                                                                                                                                                                      t2.toString;
                                                                                                                                                                      t3 = _this._selectedRowColor;
                                                                                                                                                                      t3.toString;
                                                                                                                                                                      if (t2.$eq(0, t3)) {
                                                                                                                                                                        t2 = other._errorColor;
                                                                                                                                                                        t2.toString;
                                                                                                                                                                        t3 = _this._errorColor;
                                                                                                                                                                        t3.toString;
                                                                                                                                                                        if (t2.$eq(0, t3)) {
                                                                                                                                                                          t2 = other._backgroundColor;
                                                                                                                                                                          t2.toString;
                                                                                                                                                                          t3 = _this._backgroundColor;
                                                                                                                                                                          t3.toString;
                                                                                                                                                                          if (t2.$eq(0, t3)) {
                                                                                                                                                                            t1 = other._bottomAppBarColor;
                                                                                                                                                                            t1.toString;
                                                                                                                                                                            t2 = _this._bottomAppBarColor;
                                                                                                                                                                            t2.toString;
                                                                                                                                                                            t2 = t1.$eq(0, t2);
                                                                                                                                                                            t1 = t2;
                                                                                                                                                                          }
                                                                                                                                                                        }
                                                                                                                                                                      }
                                                                                                                                                                    }
                                                                                                                                                                  }
      return t1;
    },
    get$hashCode(_) {
      var _this = this,
        t1 = [_this.applyElevationOverlayColor, _this.cupertinoOverrideTheme],
        t2 = _this.extensions;
      B.JSArray_methods.addAll$1(t1, t2.get$keys());
      B.JSArray_methods.addAll$1(t1, t2.get$values());
      t1.push(_this.inputDecorationTheme);
      t1.push(_this.materialTapTargetSize);
      t1.push(_this.pageTransitionsTheme);
      t1.push(_this.platform);
      t1.push(_this.scrollbarTheme);
      t1.push(_this.splashFactory);
      t1.push(false);
      t1.push(_this.visualDensity);
      t1.push(_this.canvasColor);
      t1.push(_this.cardColor);
      t1.push(_this.colorScheme);
      t1.push(_this.dialogBackgroundColor);
      t1.push(_this.disabledColor);
      t1.push(_this.dividerColor);
      t1.push(_this.focusColor);
      t1.push(_this.highlightColor);
      t1.push(_this.hintColor);
      t1.push(_this.hoverColor);
      t1.push(_this.indicatorColor);
      t1.push(_this.primaryColor);
      t1.push(_this.primaryColorDark);
      t1.push(_this.primaryColorLight);
      t1.push(_this.scaffoldBackgroundColor);
      t1.push(_this.secondaryHeaderColor);
      t1.push(_this.shadowColor);
      t1.push(_this.splashColor);
      t1.push(_this.unselectedWidgetColor);
      t1.push(_this.iconTheme);
      t1.push(_this.primaryIconTheme);
      t1.push(_this.primaryTextTheme);
      t1.push(_this.textTheme);
      t1.push(_this.typography);
      t1.push(_this.actionIconTheme);
      t1.push(_this.appBarTheme);
      t1.push(_this.badgeTheme);
      t1.push(_this.bannerTheme);
      t1.push(_this.bottomAppBarTheme);
      t1.push(_this.bottomNavigationBarTheme);
      t1.push(_this.bottomSheetTheme);
      t1.push(_this.buttonBarTheme);
      t1.push(_this.buttonTheme);
      t1.push(_this.cardTheme);
      t1.push(_this.checkboxTheme);
      t1.push(_this.chipTheme);
      t1.push(_this.dataTableTheme);
      t1.push(_this.datePickerTheme);
      t1.push(_this.dialogTheme);
      t1.push(_this.dividerTheme);
      t1.push(_this.drawerTheme);
      t1.push(_this.dropdownMenuTheme);
      t1.push(_this.elevatedButtonTheme);
      t1.push(_this.expansionTileTheme);
      t1.push(_this.filledButtonTheme);
      t1.push(_this.floatingActionButtonTheme);
      t1.push(_this.iconButtonTheme);
      t1.push(_this.listTileTheme);
      t1.push(_this.menuBarTheme);
      t1.push(_this.menuButtonTheme);
      t1.push(_this.menuTheme);
      t1.push(_this.navigationBarTheme);
      t1.push(_this.navigationDrawerTheme);
      t1.push(_this.navigationRailTheme);
      t1.push(_this.outlinedButtonTheme);
      t1.push(_this.popupMenuTheme);
      t1.push(_this.progressIndicatorTheme);
      t1.push(_this.radioTheme);
      t1.push(_this.segmentedButtonTheme);
      t1.push(_this.sliderTheme);
      t1.push(_this.snackBarTheme);
      t1.push(_this.switchTheme);
      t1.push(_this.tabBarTheme);
      t1.push(_this.textButtonTheme);
      t1.push(_this.textSelectionTheme);
      t1.push(_this.timePickerTheme);
      t1.push(_this.toggleButtonsTheme);
      t1.push(_this.tooltipTheme);
      t1.push(true);
      t1.push(_this._primaryColorBrightness);
      t1.push(_this.androidOverscrollIndicator);
      t2 = _this._toggleableActiveColor;
      t2.toString;
      t1.push(t2);
      t2 = _this._selectedRowColor;
      t2.toString;
      t1.push(t2);
      t2 = _this._errorColor;
      t2.toString;
      t1.push(t2);
      t2 = _this._backgroundColor;
      t2.toString;
      t1.push(t2);
      t2 = _this._bottomAppBarColor;
      t2.toString;
      t1.push(t2);
      return A.Object_hashAll(t1);
    }
  };
  A.ThemeData_localize_closure.prototype = {
    call$0() {
      var t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, t31, t32, t33, t34, t35, _null = null,
        t1 = this.baseTheme,
        t2 = this.localTextGeometry,
        t3 = t2.merge$1(t1.primaryTextTheme);
      t2 = t2.merge$1(t1.textTheme);
      t4 = t1.colorScheme;
      t5 = t4.primary;
      t6 = t4.onPrimary;
      t7 = t4._primaryContainer;
      if (t7 == null)
        t7 = t5;
      t8 = t4._onPrimaryContainer;
      if (t8 == null)
        t8 = t6;
      t9 = t4.secondary;
      t10 = t4.onSecondary;
      t11 = t4._secondaryContainer;
      if (t11 == null)
        t11 = t9;
      t12 = t4._onSecondaryContainer;
      if (t12 == null)
        t12 = t10;
      t13 = t4._tertiary;
      t14 = t13 == null ? t9 : t13;
      t15 = t4._onTertiary;
      t16 = t15 == null ? t10 : t15;
      t17 = t4._tertiaryContainer;
      if (t17 == null) {
        if (t13 == null)
          t13 = t9;
      } else
        t13 = t17;
      t17 = t4._onTertiaryContainer;
      if (t17 == null) {
        if (t15 == null)
          t15 = t10;
      } else
        t15 = t17;
      t17 = t4.error;
      t18 = t4.onError;
      t19 = t4._errorContainer;
      if (t19 == null)
        t19 = t17;
      t20 = t4._onErrorContainer;
      if (t20 == null)
        t20 = t18;
      t21 = t4.onBackground;
      t22 = t4.surface;
      t23 = t4.onSurface;
      t24 = t4._surfaceVariant;
      if (t24 == null)
        t24 = t22;
      t25 = t4._onSurfaceVariant;
      if (t25 == null)
        t25 = t23;
      t26 = t4._outline;
      if (t26 == null)
        t26 = t21;
      t27 = t4._outlineVariant;
      if (t27 == null)
        t27 = t21;
      t28 = t4._shadow;
      if (t28 == null)
        t28 = B.Color_4278190080;
      t29 = t4._scrim;
      if (t29 == null)
        t29 = B.Color_4278190080;
      t30 = t4._inverseSurface;
      if (t30 == null)
        t30 = t23;
      t31 = t4._onInverseSurface;
      if (t31 == null)
        t31 = t22;
      t32 = t4._inversePrimary;
      if (t32 == null)
        t32 = t6;
      t33 = t4._primaryVariant;
      if (t33 == null)
        t33 = t5;
      t34 = t4._secondaryVariant;
      if (t34 == null)
        t34 = t9;
      t35 = t4._surfaceTint;
      if (t35 == null)
        t35 = t5;
      t13 = A.ColorScheme$(t4.background, t4.brightness, t17, t19, t32, t30, t21, t18, t20, t31, t6, t8, t10, t12, t23, t25, t16, t15, t26, t27, t5, t7, t33, t29, t9, t11, t34, t28, t22, t35, t24, t14, t13);
      return A.ThemeData$raw(t1.actionIconTheme, t1.androidOverscrollIndicator, t1.appBarTheme, t1.applyElevationOverlayColor, t1._backgroundColor, t1.badgeTheme, t1.bannerTheme, t1._bottomAppBarColor, t1.bottomAppBarTheme, t1.bottomNavigationBarTheme, t1.bottomSheetTheme, t1.buttonBarTheme, t1.buttonTheme, t1.canvasColor, t1.cardColor, t1.cardTheme, t1.checkboxTheme, t1.chipTheme, t13, t1.cupertinoOverrideTheme, t1.dataTableTheme, t1.datePickerTheme, t1.dialogBackgroundColor, t1.dialogTheme, t1.disabledColor, t1.dividerColor, t1.dividerTheme, t1.drawerTheme, t1.dropdownMenuTheme, t1.elevatedButtonTheme, t1._errorColor, t1.expansionTileTheme, t1.extensions, t1.filledButtonTheme, true, t1.floatingActionButtonTheme, t1.focusColor, t1.highlightColor, t1.hintColor, t1.hoverColor, t1.iconButtonTheme, t1.iconTheme, t1.indicatorColor, t1.inputDecorationTheme, t1.listTileTheme, t1.materialTapTargetSize, t1.menuBarTheme, t1.menuButtonTheme, t1.menuTheme, t1.navigationBarTheme, t1.navigationDrawerTheme, t1.navigationRailTheme, t1.outlinedButtonTheme, t1.pageTransitionsTheme, t1.platform, t1.popupMenuTheme, t1.primaryColor, t1._primaryColorBrightness, t1.primaryColorDark, t1.primaryColorLight, t1.primaryIconTheme, t3, t1.progressIndicatorTheme, t1.radioTheme, t1.scaffoldBackgroundColor, t1.scrollbarTheme, t1.secondaryHeaderColor, t1.segmentedButtonTheme, t1._selectedRowColor, t1.shadowColor, t1.sliderTheme, t1.snackBarTheme, t1.splashColor, t1.splashFactory, t1.switchTheme, t1.tabBarTheme, t1.textButtonTheme, t1.textSelectionTheme, t2, t1.timePickerTheme, t1.toggleButtonsTheme, t1._toggleableActiveColor, t1.tooltipTheme, t1.typography, t1.unselectedWidgetColor, false, t1.visualDensity);
    },
    $signature: 127
  };
  A.ThemeData__lerpThemeExtensions_closure.prototype = {
    call$2(id, extensionA) {
      return new A.MapEntry(id, extensionA.lerp$2(this.b.extensions.$index(0, id), this.t), type$.MapEntry_of_Object_and_ThemeExtension_dynamic);
    },
    $signature: 128
  };
  A.ThemeData__lerpThemeExtensions_closure0.prototype = {
    call$1(entry) {
      return !this.a.extensions.containsKey$1(entry.key);
    },
    $signature: 129
  };
  A.MaterialBasedCupertinoThemeData.prototype = {
    get$brightness() {
      var t1 = this._cupertinoOverrideTheme.brightness;
      return t1 == null ? this._materialTheme.colorScheme.brightness : t1;
    },
    get$primaryColor() {
      var t1 = this._cupertinoOverrideTheme.primaryColor;
      return t1 == null ? this._materialTheme.colorScheme.primary : t1;
    },
    get$primaryContrastingColor() {
      var t1 = this._cupertinoOverrideTheme.primaryContrastingColor;
      return t1 == null ? this._materialTheme.colorScheme.onPrimary : t1;
    },
    get$scaffoldBackgroundColor() {
      var t1 = this._cupertinoOverrideTheme.scaffoldBackgroundColor;
      return t1 == null ? this._materialTheme.scaffoldBackgroundColor : t1;
    },
    copyWith$7$applyThemeToAll$barBackgroundColor$brightness$primaryColor$primaryContrastingColor$scaffoldBackgroundColor$textTheme(applyThemeToAll, barBackgroundColor, brightness, primaryColor, primaryContrastingColor, scaffoldBackgroundColor, textTheme) {
      var t1 = this._cupertinoOverrideTheme;
      return A.MaterialBasedCupertinoThemeData$_(this._materialTheme, new A.NoDefaultCupertinoThemeData(t1.brightness, t1.primaryColor, t1.primaryContrastingColor, textTheme, t1.barBackgroundColor, t1.scaffoldBackgroundColor, t1.applyThemeToAll));
    },
    copyWith$1$textTheme(textTheme) {
      var _null = null;
      return this.copyWith$7$applyThemeToAll$barBackgroundColor$brightness$primaryColor$primaryContrastingColor$scaffoldBackgroundColor$textTheme(_null, _null, _null, _null, _null, _null, textTheme);
    },
    resolveFrom$1(context) {
      return A.MaterialBasedCupertinoThemeData$_(this._materialTheme, this._cupertinoOverrideTheme.resolveFrom$1(context));
    }
  };
  A._IdentityThemeDataCacheKey.prototype = {
    get$hashCode(_) {
      return (A.objectHashCode(this.baseTheme) ^ A.objectHashCode(this.localTextGeometry)) >>> 0;
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A._IdentityThemeDataCacheKey && other.baseTheme === this.baseTheme && other.localTextGeometry === this.localTextGeometry;
    }
  };
  A._FifoCache.prototype = {
    putIfAbsent$2(key, loader) {
      var t2,
        t1 = this._cache,
        result = t1.$index(0, key);
      if (result != null)
        return result;
      if (t1.__js_helper$_length === this._maximumSize)
        t1.remove$1(0, new A.LinkedHashMapKeysIterable(t1, A._instanceType(t1)._eval$1("LinkedHashMapKeysIterable<1>")).get$first(0));
      t2 = loader.call$0();
      t1.$indexSet(0, key, t2);
      return t2;
    }
  };
  A.VisualDensity.prototype = {
    effectiveConstraints$1(constraints) {
      var t1 = this.horizontal,
        t2 = this.vertical,
        t3 = A.clampDouble(constraints.minWidth + new A.Offset(t1, t2).$mul(0, 4)._dx, 0, constraints.maxWidth);
      return constraints.copyWith$2$minHeight$minWidth(A.clampDouble(constraints.minHeight + new A.Offset(t1, t2).$mul(0, 4)._dy, 0, constraints.maxHeight), t3);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(this))
        return false;
      return other instanceof A.VisualDensity && other.horizontal === this.horizontal && other.vertical === this.vertical;
    },
    get$hashCode(_) {
      return A.Object_hash(this.horizontal, this.vertical, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toStringShort$0() {
      return this.super$Diagnosticable$toStringShort() + "(h: " + A.debugFormatDouble(this.horizontal) + ", v: " + A.debugFormatDouble(this.vertical) + ")";
    }
  };
  A._ThemeData_Object_Diagnosticable.prototype = {};
  A._VisualDensity_Object_Diagnosticable.prototype = {};
  A.TimePickerThemeData.prototype = {
    get$hashCode(_) {
      var _this = this;
      return A.Object_hashAll([_this.backgroundColor, _this.cancelButtonStyle, _this.confirmButtonStyle, _this.dayPeriodBorderSide, _this.dayPeriodColor, _this.dayPeriodShape, _this.dayPeriodTextColor, _this.dayPeriodTextStyle, _this.dialBackgroundColor, _this.dialHandColor, _this.dialTextColor, _this.dialTextStyle, _this.elevation, _this.entryModeIconColor, _this.helpTextStyle, _this.hourMinuteColor, _this.hourMinuteShape, _this.hourMinuteTextColor, _this.hourMinuteTextStyle, _this.inputDecorationTheme, _this.padding, _this.shape]);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      return other instanceof A.TimePickerThemeData && J.$eq$(other.backgroundColor, _this.backgroundColor) && J.$eq$(other.cancelButtonStyle, _this.cancelButtonStyle) && J.$eq$(other.confirmButtonStyle, _this.confirmButtonStyle) && J.$eq$(other.dayPeriodBorderSide, _this.dayPeriodBorderSide) && J.$eq$(other.dayPeriodColor, _this.dayPeriodColor) && J.$eq$(other.dayPeriodShape, _this.dayPeriodShape) && J.$eq$(other.dayPeriodTextColor, _this.dayPeriodTextColor) && J.$eq$(other.dayPeriodTextStyle, _this.dayPeriodTextStyle) && J.$eq$(other.dialBackgroundColor, _this.dialBackgroundColor) && J.$eq$(other.dialHandColor, _this.dialHandColor) && J.$eq$(other.dialTextColor, _this.dialTextColor) && J.$eq$(other.dialTextStyle, _this.dialTextStyle) && other.elevation == _this.elevation && J.$eq$(other.entryModeIconColor, _this.entryModeIconColor) && J.$eq$(other.helpTextStyle, _this.helpTextStyle) && J.$eq$(other.hourMinuteColor, _this.hourMinuteColor) && J.$eq$(other.hourMinuteShape, _this.hourMinuteShape) && J.$eq$(other.hourMinuteTextColor, _this.hourMinuteTextColor) && J.$eq$(other.hourMinuteTextStyle, _this.hourMinuteTextStyle) && J.$eq$(other.padding, _this.padding) && J.$eq$(other.shape, _this.shape);
    }
  };
  A._TimePickerThemeData_Object_Diagnosticable.prototype = {};
  A.ToggleButtonsThemeData.prototype = {
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(_this.textStyle, _this.constraints, _this.color, _this.selectedColor, _this.disabledColor, _this.fillColor, _this.focusColor, _this.highlightColor, _this.hoverColor, _this.splashColor, _this.borderColor, _this.selectedBorderColor, _this.disabledBorderColor, _this.borderRadius, _this.borderWidth, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      return other instanceof A.ToggleButtonsThemeData && J.$eq$(other.textStyle, _this.textStyle) && J.$eq$(other.constraints, _this.constraints) && J.$eq$(other.color, _this.color) && J.$eq$(other.selectedColor, _this.selectedColor) && J.$eq$(other.disabledColor, _this.disabledColor) && J.$eq$(other.fillColor, _this.fillColor) && J.$eq$(other.focusColor, _this.focusColor) && J.$eq$(other.highlightColor, _this.highlightColor) && J.$eq$(other.hoverColor, _this.hoverColor) && J.$eq$(other.splashColor, _this.splashColor) && J.$eq$(other.borderColor, _this.borderColor) && J.$eq$(other.selectedBorderColor, _this.selectedBorderColor) && J.$eq$(other.disabledBorderColor, _this.disabledBorderColor) && J.$eq$(other.borderRadius, _this.borderRadius) && other.borderWidth == _this.borderWidth;
    }
  };
  A._ToggleButtonsThemeData_Object_Diagnosticable.prototype = {};
  A.ToggleableStateMixin.prototype = {
    _toggleable$_handleTapDown$1(details) {
      var t1, _this = this;
      _this._widget.toString;
      _this.setState$1(new A.ToggleableStateMixin__handleTapDown_closure(_this, details));
      t1 = _this.ToggleableStateMixin___ToggleableStateMixin__reactionController_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.forward$0();
    },
    _handleTap$1(_) {
      var t1 = this._widget;
      t1.toString;
      switch (true) {
        case false:
          t1.onChanged.call$1(true);
          break;
        case true:
          t1.onChanged.call$1(false);
          break;
        case null:
        case void 0:
          t1.onChanged.call$1(false);
          break;
      }
      this._element.get$renderObject().sendSemanticsEvent$1(B.TapSemanticEvent_tap);
    },
    _handleTap$0() {
      return this._handleTap$1(null);
    },
    _handleTapEnd$1(_) {
      var t1, _this = this;
      if (_this.ToggleableStateMixin__downPosition != null)
        _this.setState$1(new A.ToggleableStateMixin__handleTapEnd_closure(_this));
      t1 = _this.ToggleableStateMixin___ToggleableStateMixin__reactionController_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.reverse$0();
    },
    _handleTapEnd$0() {
      return this._handleTapEnd$1(null);
    },
    _toggleable$_handleFocusHighlightChanged$1(focused) {
      var t1, _this = this;
      if (focused !== _this.ToggleableStateMixin__focused) {
        _this.setState$1(new A.ToggleableStateMixin__handleFocusHighlightChanged_closure(_this, focused));
        t1 = _this.ToggleableStateMixin___ToggleableStateMixin__reactionFocusFadeController_A;
        if (focused) {
          t1 === $ && A.throwUnnamedLateFieldNI();
          t1.forward$0();
        } else {
          t1 === $ && A.throwUnnamedLateFieldNI();
          t1.reverse$0();
        }
      }
    },
    _toggleable$_handleHoverChanged$1(hovering) {
      var t1, _this = this;
      if (hovering !== _this.ToggleableStateMixin__hovering) {
        _this.setState$1(new A.ToggleableStateMixin__handleHoverChanged_closure(_this, hovering));
        t1 = _this.ToggleableStateMixin___ToggleableStateMixin__reactionHoverFadeController_A;
        if (hovering) {
          t1 === $ && A.throwUnnamedLateFieldNI();
          t1.forward$0();
        } else {
          t1 === $ && A.throwUnnamedLateFieldNI();
          t1.reverse$0();
        }
      }
    },
    get$states() {
      var _this = this,
        t1 = A.LinkedHashSet_LinkedHashSet$_empty(type$.MaterialState);
      _this._widget.toString;
      if (_this.ToggleableStateMixin__hovering)
        t1.add$1(0, B.MaterialState_0);
      if (_this.ToggleableStateMixin__focused)
        t1.add$1(0, B.MaterialState_1);
      _this._widget.toString;
      t1.add$1(0, B.MaterialState_4);
      return t1;
    }
  };
  A.ToggleableStateMixin__handleTapDown_closure.prototype = {
    call$0() {
      this.$this.ToggleableStateMixin__downPosition = this.details.localPosition;
    },
    $signature: 0
  };
  A.ToggleableStateMixin__handleTapEnd_closure.prototype = {
    call$0() {
      this.$this.ToggleableStateMixin__downPosition = null;
    },
    $signature: 0
  };
  A.ToggleableStateMixin__handleFocusHighlightChanged_closure.prototype = {
    call$0() {
      this.$this.ToggleableStateMixin__focused = this.focused;
    },
    $signature: 0
  };
  A.ToggleableStateMixin__handleHoverChanged_closure.prototype = {
    call$0() {
      this.$this.ToggleableStateMixin__hovering = this.hovering;
    },
    $signature: 0
  };
  A.ToggleablePainter.prototype = {
    set$position(value) {
      var _this = this,
        t1 = _this._toggleable$_position;
      if (value === t1)
        return;
      if (t1 != null)
        t1.parent.removeListener$1(_this.get$notifyListeners());
      value.parent.addListener$1(_this.get$notifyListeners());
      _this._toggleable$_position = value;
      _this.notifyListeners$0();
    },
    set$reaction(value) {
      var _this = this,
        t1 = _this._reaction;
      if (value === t1)
        return;
      if (t1 != null)
        t1.parent.removeListener$1(_this.get$notifyListeners());
      value.parent.addListener$1(_this.get$notifyListeners());
      _this._reaction = value;
      _this.notifyListeners$0();
    },
    set$reactionFocusFade(value) {
      var _this = this,
        t1 = _this._reactionFocusFade;
      if (value === t1)
        return;
      if (t1 != null)
        t1.parent.removeListener$1(_this.get$notifyListeners());
      value.parent.addListener$1(_this.get$notifyListeners());
      _this._reactionFocusFade = value;
      _this.notifyListeners$0();
    },
    set$reactionHoverFade(value) {
      var _this = this,
        t1 = _this._reactionHoverFade;
      if (value === t1)
        return;
      if (t1 != null)
        t1.parent.removeListener$1(_this.get$notifyListeners());
      value.parent.addListener$1(_this.get$notifyListeners());
      _this._reactionHoverFade = value;
      _this.notifyListeners$0();
    },
    set$activeColor(value) {
      if (J.$eq$(this._activeColor, value))
        return;
      this._activeColor = value;
      this.notifyListeners$0();
    },
    set$inactiveColor(value) {
      if (J.$eq$(this._inactiveColor, value))
        return;
      this._inactiveColor = value;
      this.notifyListeners$0();
    },
    set$inactiveReactionColor(value) {
      if (value.$eq(0, this._inactiveReactionColor))
        return;
      this._inactiveReactionColor = value;
      this.notifyListeners$0();
    },
    set$reactionColor(value) {
      if (value.$eq(0, this._reactionColor))
        return;
      this._reactionColor = value;
      this.notifyListeners$0();
    },
    set$hoverColor(value) {
      if (value.$eq(0, this._hoverColor))
        return;
      this._hoverColor = value;
      this.notifyListeners$0();
    },
    set$focusColor(value) {
      if (value.$eq(0, this._focusColor))
        return;
      this._focusColor = value;
      this.notifyListeners$0();
    },
    set$splashRadius(value) {
      if (value === this._splashRadius)
        return;
      this._splashRadius = value;
      this.notifyListeners$0();
    },
    set$downPosition(value) {
      if (J.$eq$(value, this._downPosition))
        return;
      this._downPosition = value;
      this.notifyListeners$0();
    },
    set$isFocused(value) {
      if (value === this._isFocused)
        return;
      this._isFocused = value;
      this.notifyListeners$0();
    },
    set$isHovered(value) {
      if (value === this._isHovered)
        return;
      this._isHovered = value;
      this.notifyListeners$0();
    },
    dispose$0() {
      var _this = this,
        t1 = _this._toggleable$_position;
      if (t1 != null)
        t1.parent.removeListener$1(_this.get$notifyListeners());
      t1 = _this._reaction;
      if (t1 != null)
        t1.parent.removeListener$1(_this.get$notifyListeners());
      t1 = _this._reactionFocusFade;
      if (t1 != null)
        t1.parent.removeListener$1(_this.get$notifyListeners());
      t1 = _this._reactionHoverFade;
      if (t1 != null)
        t1.parent.removeListener$1(_this.get$notifyListeners());
      _this.super$ChangeNotifier$dispose();
    },
    shouldRepaint$1(oldDelegate) {
      return true;
    },
    hitTest$1(position) {
      return null;
    },
    get$semanticsBuilder() {
      return null;
    },
    shouldRebuildSemantics$1(oldDelegate) {
      return false;
    },
    toString$0(_) {
      return "<optimized out>#" + A.shortHash(this);
    }
  };
  A.Tooltip.prototype = {
    createState$0() {
      return new A.TooltipState(null, null);
    }
  };
  A.TooltipState.prototype = {
    get$_tooltipMessage() {
      var t1 = this._widget.message;
      return t1 == null ? null.toPlainText$0() : t1;
    },
    initState$0() {
      var t1, t2, _this = this;
      _this.super$State$initState();
      _this.__TooltipState__forceRemoval_A = _this.__TooltipState__isConcealed_A = false;
      _this.__TooltipState__mouseIsConnected_A = $.RendererBinding__instance.RendererBinding__mouseTracker._mouseStates.__js_helper$_length !== 0;
      t1 = A.AnimationController$(null, B.Duration_150000, B.Duration_75000, null, _this);
      t1.didRegisterListener$0();
      t2 = t1.AnimationLocalStatusListenersMixin__statusListeners;
      t2._isDirty = true;
      t2._observer_list$_list.push(_this.get$_tooltip$_handleStatusChanged());
      _this.__TooltipState__controller_A = t1;
      $.RendererBinding__instance.RendererBinding__mouseTracker.addListener$1(_this.get$_handleMouseTrackerChange());
      $.GestureBinding__instance.GestureBinding_pointerRouter._globalRoutes.$indexSet(0, _this.get$_tooltip$_handlePointerEvent(), null);
    },
    didChangeDependencies$0() {
      this.super$State$didChangeDependencies();
      this._element.dependOnInheritedWidgetOfExactType$1$0(type$._TooltipVisibilityScope);
      this.__TooltipState__visible_A = true;
    },
    _getDefaultTooltipHeight$0() {
      var t1 = this._element;
      t1.toString;
      switch (A.Theme_of(t1).platform.index) {
        case 4:
        case 3:
        case 5:
          return 24;
        case 0:
        case 1:
        case 2:
          return 32;
      }
    },
    _getDefaultPadding$0() {
      var t1 = this._element;
      t1.toString;
      switch (A.Theme_of(t1).platform.index) {
        case 4:
        case 3:
        case 5:
          return B.EdgeInsets_8_4_8_4;
        case 0:
        case 1:
        case 2:
          return B.EdgeInsets_16_4_16_4;
      }
    },
    _getDefaultFontSize$0() {
      var t1 = this._element;
      t1.toString;
      switch (A.Theme_of(t1).platform.index) {
        case 4:
        case 3:
        case 5:
          return 12;
        case 0:
        case 1:
        case 2:
          return 14;
      }
    },
    _handleMouseTrackerChange$0() {
      var mouseIsConnected, t1, _this = this;
      if (_this._element == null)
        return;
      mouseIsConnected = $.RendererBinding__instance.RendererBinding__mouseTracker._mouseStates.__js_helper$_length !== 0;
      t1 = _this.__TooltipState__mouseIsConnected_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      if (mouseIsConnected !== t1)
        _this.setState$1(new A.TooltipState__handleMouseTrackerChange_closure(_this, mouseIsConnected));
    },
    _tooltip$_handleStatusChanged$1($status) {
      var t1;
      if ($status === B.AnimationStatus_0) {
        t1 = this.__TooltipState__forceRemoval_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
        if (!t1) {
          t1 = this.__TooltipState__isConcealed_A;
          t1 === $ && A.throwUnnamedLateFieldNI();
          t1 = !t1;
        } else
          t1 = true;
      } else
        t1 = false;
      if (t1)
        this._removeEntry$0();
    },
    _dismissTooltip$1$immediately(immediately) {
      var t2, _this = this,
        t1 = _this._showTimer;
      if (t1 != null)
        t1.cancel$0();
      _this._showTimer = null;
      if (immediately) {
        _this._removeEntry$0();
        return;
      }
      _this.__TooltipState__forceRemoval_A = true;
      if (_this._pressActivated) {
        if (_this._dismissTimer == null) {
          t1 = _this.__TooltipState__showDuration_A;
          t1 === $ && A.throwUnnamedLateFieldNI();
          t2 = _this.__TooltipState__controller_A;
          t2 === $ && A.throwUnnamedLateFieldNI();
          _this._dismissTimer = A.Timer_Timer(t1, t2.get$reverse());
        }
      } else if (_this._dismissTimer == null) {
        t1 = _this.__TooltipState__hoverShowDuration_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
        t2 = _this.__TooltipState__controller_A;
        t2 === $ && A.throwUnnamedLateFieldNI();
        _this._dismissTimer = A.Timer_Timer(t1, t2.get$reverse());
      }
      _this._pressActivated = false;
    },
    _showTooltip$0() {
      var _this = this,
        t1 = _this._dismissTimer;
      if (t1 != null)
        t1.cancel$0();
      _this._dismissTimer = null;
      if (_this._showTimer == null) {
        t1 = _this.__TooltipState__waitDuration_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
        _this._showTimer = A.Timer_Timer(t1, _this.get$ensureTooltipVisible());
      }
    },
    _concealTooltip$0() {
      var _this = this,
        t1 = _this.__TooltipState__isConcealed_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      if (!t1) {
        t1 = _this.__TooltipState__forceRemoval_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
      } else
        t1 = true;
      if (t1)
        return;
      _this.__TooltipState__isConcealed_A = true;
      t1 = _this._dismissTimer;
      if (t1 != null)
        t1.cancel$0();
      _this._dismissTimer = null;
      t1 = _this._showTimer;
      if (t1 != null)
        t1.cancel$0();
      _this._showTimer = null;
      t1 = _this._tooltip$_entry;
      if (t1 != null)
        t1.remove$0(0);
      t1 = _this.__TooltipState__controller_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.reverse$0();
    },
    _revealTooltip$0() {
      var t2, _this = this,
        t1 = _this.__TooltipState__isConcealed_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      if (!t1)
        return;
      _this.__TooltipState__isConcealed_A = false;
      t1 = _this._dismissTimer;
      if (t1 != null)
        t1.cancel$0();
      _this._dismissTimer = null;
      t1 = _this._showTimer;
      if (t1 != null)
        t1.cancel$0();
      _this._showTimer = null;
      if (_this._tooltip$_entry._overlayEntryStateNotifier._change_notifier$_value == null) {
        t1 = _this._element;
        t1.toString;
        _this._widget.toString;
        t1 = A.LookupBoundary_findAncestorStateOfType(t1, type$.OverlayState);
        t1.toString;
        t2 = _this._tooltip$_entry;
        t2.toString;
        t1.insert$1(0, t2);
      }
      A.SemanticsService_tooltip(_this.get$_tooltipMessage());
      t1 = _this.__TooltipState__controller_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.forward$0();
    },
    ensureTooltipVisible$0() {
      var t1, _this = this;
      _this.__TooltipState__visible_A === $ && A.throwUnnamedLateFieldNI();
      t1 = _this._element;
      if (t1 == null)
        return false;
      t1 = _this._showTimer;
      if (t1 != null)
        t1.cancel$0();
      _this._showTimer = null;
      _this.__TooltipState__forceRemoval_A = false;
      t1 = _this.__TooltipState__isConcealed_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      if (t1) {
        t1 = _this.__TooltipState__mouseIsConnected_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
        if (t1)
          A.Tooltip__concealOtherTooltips(_this);
        _this._revealTooltip$0();
        return true;
      }
      if (_this._tooltip$_entry != null) {
        t1 = _this._dismissTimer;
        if (t1 != null)
          t1.cancel$0();
        _this._dismissTimer = null;
        t1 = _this.__TooltipState__controller_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
        t1.forward$0();
        return false;
      }
      _this._createNewEntry$0();
      t1 = _this.__TooltipState__controller_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.forward$0();
      return true;
    },
    _tooltip$_handleMouseExit$1$immediately(immediately) {
      var t1;
      if (this._element != null) {
        t1 = this.__TooltipState__isConcealed_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
        this._dismissTooltip$1$immediately(t1 || immediately);
      }
    },
    _tooltip$_handleMouseExit$0() {
      return this._tooltip$_handleMouseExit$1$immediately(false);
    },
    _createNewEntry$0() {
      var t2, t3, target, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, _this = this, _null = null,
        t1 = _this._element;
      t1.toString;
      _this._widget.toString;
      t1 = A.LookupBoundary_findAncestorStateOfType(t1, type$.OverlayState);
      t1.toString;
      t2 = _this._element.get$renderObject();
      t2.toString;
      type$.RenderBox._as(t2);
      t3 = t2._size.center$1(B.Offset_0_0);
      target = A.MatrixUtils_transformPoint(t2.getTransformTo$1(t1._element.get$renderObject()), t3);
      t3 = _this._element.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality).textDirection;
      t2 = A.TextSpan$(_null, _null, _this._widget.message);
      t4 = _this.__TooltipState__height_A;
      t4 === $ && A.throwUnnamedLateFieldNI();
      t5 = _this.__TooltipState__padding_A;
      t5 === $ && A.throwUnnamedLateFieldNI();
      t6 = _this.__TooltipState__margin_A;
      t6 === $ && A.throwUnnamedLateFieldNI();
      t7 = _this.__TooltipState__mouseIsConnected_A;
      t7 === $ && A.throwUnnamedLateFieldNI();
      t8 = t7 ? new A.TooltipState__createNewEntry_closure(_this) : _null;
      t7 = t7 ? new A.TooltipState__createNewEntry_closure0(_this) : _null;
      t9 = _this.__TooltipState__decoration_A;
      t9 === $ && A.throwUnnamedLateFieldNI();
      t10 = _this.__TooltipState__textStyle_A;
      t10 === $ && A.throwUnnamedLateFieldNI();
      t11 = _this.__TooltipState__textAlign_A;
      t11 === $ && A.throwUnnamedLateFieldNI();
      t12 = _this.__TooltipState__controller_A;
      t12 === $ && A.throwUnnamedLateFieldNI();
      t12 = A.CurvedAnimation$(B.Cubic_Dkk, t12, _null);
      t13 = _this.__TooltipState__verticalOffset_A;
      t13 === $ && A.throwUnnamedLateFieldNI();
      t14 = _this.__TooltipState__preferBelow_A;
      t14 === $ && A.throwUnnamedLateFieldNI();
      t3 = A.OverlayEntry$(new A.TooltipState__createNewEntry_closure1(A.Directionality$(new A._TooltipOverlay(t2, t4, t5, t6, t9, t10, t11, t12, target, t13, t14, t8, t7, _null), t3)), false);
      _this._tooltip$_entry = t3;
      _this.__TooltipState__isConcealed_A = false;
      t1.insert$1(0, t3);
      A.SemanticsService_tooltip(_this.get$_tooltipMessage());
      if (_this.__TooltipState__mouseIsConnected_A)
        A.Tooltip__concealOtherTooltips(_this);
      $.Tooltip__openedTooltips.push(_this);
    },
    _removeEntry$0() {
      var t1, _this = this;
      B.JSArray_methods.remove$1($.Tooltip__openedTooltips, _this);
      $.TooltipState__mouseIn.remove$1(0, _this);
      t1 = _this._dismissTimer;
      if (t1 != null)
        t1.cancel$0();
      _this._dismissTimer = null;
      t1 = _this._showTimer;
      if (t1 != null)
        t1.cancel$0();
      _this._showTimer = null;
      t1 = _this.__TooltipState__isConcealed_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      if (!t1) {
        t1 = _this._tooltip$_entry;
        if (t1 != null)
          t1.remove$0(0);
      }
      _this.__TooltipState__isConcealed_A = false;
      t1 = _this._tooltip$_entry;
      if (t1 != null) {
        t1._disposedByOwner = true;
        t1 = t1._overlayEntryStateNotifier;
        if (t1._change_notifier$_value == null) {
          t1.ChangeNotifier__listeners = $.$get$ChangeNotifier__emptyListeners();
          t1.ChangeNotifier__count = 0;
        }
      }
      _this._tooltip$_entry = null;
      t1 = _this.__TooltipState__mouseIsConnected_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      if (t1)
        if ($.Tooltip__openedTooltips.length !== 0)
          B.JSArray_methods.get$last($.Tooltip__openedTooltips)._revealTooltip$0();
    },
    _tooltip$_handlePointerEvent$1($event) {
      if (this._tooltip$_entry == null)
        return;
      if (type$.PointerUpEvent._is($event) || type$.PointerCancelEvent._is($event))
        this._tooltip$_handleMouseExit$0();
      else if (type$.PointerDownEvent._is($event))
        this._tooltip$_handleMouseExit$1$immediately(true);
    },
    deactivate$0() {
      var t1, _this = this;
      if (_this._tooltip$_entry != null)
        _this._dismissTooltip$1$immediately(true);
      t1 = _this._showTimer;
      if (t1 != null)
        t1.cancel$0();
      _this.super$State$deactivate();
    },
    dispose$0() {
      var t1, _this = this;
      $.GestureBinding__instance.GestureBinding_pointerRouter._globalRoutes.remove$1(0, _this.get$_tooltip$_handlePointerEvent());
      $.RendererBinding__instance.RendererBinding__mouseTracker.removeListener$1(_this.get$_handleMouseTrackerChange());
      _this._removeEntry$0();
      t1 = _this.__TooltipState__controller_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.dispose$0();
      _this.super$_TooltipState_State_SingleTickerProviderStateMixin$dispose();
    },
    _handlePress$0() {
      var t1, t2, _this = this;
      _this._pressActivated = true;
      if (_this.ensureTooltipVisible$0()) {
        t1 = _this.__TooltipState__enableFeedback_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
      } else
        t1 = false;
      if (t1) {
        t1 = _this.__TooltipState__triggerMode_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
        t2 = _this._element;
        if (t1 === B.TooltipTriggerMode_1) {
          t2.toString;
          A.Feedback_forLongPress(t2);
        } else {
          t2.toString;
          A.Feedback_forTap(t2);
        }
      }
      _this._widget.toString;
    },
    _tooltip$_handleTap$0() {
      this._handlePress$0();
      this._tooltip$_handleMouseExit$0();
    },
    build$1(context) {
      var t1, theme, tooltipTheme, defaultTextStyle, defaultDecoration, result, t2, _this = this, _null = null;
      if (_this.get$_tooltipMessage().length === 0) {
        t1 = _this._widget.child;
        return t1;
      }
      theme = A.Theme_of(context);
      context.dependOnInheritedWidgetOfExactType$1$0(type$.TooltipTheme);
      tooltipTheme = A.Theme_of(context).tooltipTheme;
      t1 = theme.textTheme.bodyMedium;
      if (theme.colorScheme.brightness === B.Brightness_0) {
        t1.toString;
        defaultTextStyle = t1.copyWith$2$color$fontSize(B.Color_4278190080, _this._getDefaultFontSize$0());
        defaultDecoration = new A.BoxDecoration(A.Color$fromARGB(B.JSNumber_methods.round$0(229.5), 255, 255, 255), _null, _null, B.BorderRadius_nnp, _null, _null, B.BoxShape_0);
      } else {
        t1.toString;
        defaultTextStyle = t1.copyWith$2$color$fontSize(B.Color_4294967295, _this._getDefaultFontSize$0());
        defaultDecoration = new A.BoxDecoration(A.Color$fromARGB(B.JSNumber_methods.round$0(229.5), 97, 97, 97), _null, _null, B.BorderRadius_nnp, _null, _null, B.BoxShape_0);
      }
      _this._widget.toString;
      t1 = tooltipTheme.height;
      _this.__TooltipState__height_A = t1 == null ? _this._getDefaultTooltipHeight$0() : t1;
      _this._widget.toString;
      t1 = tooltipTheme.padding;
      _this.__TooltipState__padding_A = t1 == null ? _this._getDefaultPadding$0() : t1;
      _this._widget.toString;
      t1 = tooltipTheme.margin;
      _this.__TooltipState__margin_A = t1 == null ? B.EdgeInsets_0_0_0_0 : t1;
      t1 = tooltipTheme.verticalOffset;
      _this.__TooltipState__verticalOffset_A = t1 == null ? 24 : t1;
      _this.__TooltipState__preferBelow_A = true;
      _this.__TooltipState__excludeFromSemantics_A = false;
      t1 = tooltipTheme.decoration;
      _this.__TooltipState__decoration_A = t1 == null ? defaultDecoration : t1;
      t1 = tooltipTheme.textStyle;
      _this.__TooltipState__textStyle_A = t1 == null ? defaultTextStyle : t1;
      _this.__TooltipState__textAlign_A = B.TextAlign_4;
      _this.__TooltipState__waitDuration_A = B.Duration_0;
      _this.__TooltipState__showDuration_A = B.Duration_1500000;
      _this.__TooltipState__hoverShowDuration_A = B.Duration_100000;
      _this.__TooltipState__triggerMode_A = B.TooltipTriggerMode_1;
      _this.__TooltipState__enableFeedback_A = true;
      t1 = _this.get$_tooltipMessage();
      result = A.Semantics$(_null, _null, _this._widget.child, false, _null, false, false, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, t1, _null);
      _this.__TooltipState__visible_A === $ && A.throwUnnamedLateFieldNI();
      t1 = _this.__TooltipState__triggerMode_A;
      t2 = t1 === B.TooltipTriggerMode_1 ? _this.get$_handlePress() : _null;
      result = A.GestureDetector$(B.HitTestBehavior_1, result, B.DragStartBehavior_1, true, _null, _null, _null, _null, _null, _null, t2, _null, t1 === B.TooltipTriggerMode_2 ? _this.get$_tooltip$_handleTap() : _null, _null, _null, _null, _null, _null, _null);
      t1 = _this.__TooltipState__mouseIsConnected_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      if (t1)
        result = A.MouseRegion$(result, B.C__DeferringMouseCursor, _null, new A.TooltipState_build_closure(_this), new A.TooltipState_build_closure0(_this), _null);
      return result;
    }
  };
  A.TooltipState__handleMouseTrackerChange_closure.prototype = {
    call$0() {
      this.$this.__TooltipState__mouseIsConnected_A = this.mouseIsConnected;
    },
    $signature: 0
  };
  A.TooltipState__createNewEntry_closure.prototype = {
    call$1(_) {
      var t1 = this.$this;
      if (t1._element != null)
        t1._showTooltip$0();
      return null;
    },
    $signature: 35
  };
  A.TooltipState__createNewEntry_closure0.prototype = {
    call$1(_) {
      return this.$this._tooltip$_handleMouseExit$0();
    },
    $signature: 24
  };
  A.TooltipState__createNewEntry_closure1.prototype = {
    call$1(context) {
      return this.overlay;
    },
    $signature: 12
  };
  A.TooltipState_build_closure.prototype = {
    call$1(_) {
      var t1 = this.$this;
      if (t1._element != null)
        t1._showTooltip$0();
      return null;
    },
    $signature: 35
  };
  A.TooltipState_build_closure0.prototype = {
    call$1(_) {
      return this.$this._tooltip$_handleMouseExit$0();
    },
    $signature: 24
  };
  A._TooltipPositionDelegate.prototype = {
    getConstraintsForChild$1(constraints) {
      return new A.BoxConstraints(0, constraints.maxWidth, 0, constraints.maxHeight);
    },
    getPositionForChild$2(size, childSize) {
      var tooltipBelow, y, x, normalizedTargetX, edge,
        t1 = this.target,
        t2 = this.verticalOffset,
        t3 = t1._dy,
        t4 = t3 + t2,
        t5 = childSize._dy,
        t6 = size._dy - 10;
      t2 = t3 - t2 - t5;
      tooltipBelow = t4 + t5 <= t6 || !(t2 >= 10);
      y = tooltipBelow ? Math.min(t4, t6) : Math.max(t2, 10);
      t2 = size._dx;
      t3 = childSize._dx;
      if (t2 - 20 < t3)
        x = (t2 - t3) / 2;
      else {
        t4 = t2 - 10;
        normalizedTargetX = A.clampDouble(t1._dx, 10, t4);
        t1 = t3 / 2;
        edge = 10 + t1;
        if (normalizedTargetX < edge)
          x = 10;
        else
          x = normalizedTargetX > t2 - edge ? t4 - t3 : normalizedTargetX - t1;
      }
      return new A.Offset(x, y);
    },
    shouldRelayout$1(oldDelegate) {
      var t1;
      if (this.target.$eq(0, oldDelegate.target))
        t1 = this.verticalOffset !== oldDelegate.verticalOffset;
      else
        t1 = true;
      return t1;
    }
  };
  A._TooltipOverlay.prototype = {
    build$1(context) {
      var result, _this = this, _null = null,
        t1 = A.Theme_of(context).textTheme.bodyMedium;
      t1.toString;
      result = new A.IgnorePointer(true, _null, A.FadeTransition$(new A.ConstrainedBox(new A.BoxConstraints(0, 1 / 0, _this.height, 1 / 0), A.DefaultTextStyle$(A.Container$(_null, A.Center$(new A.Text(_null, _this.richMessage, _this.textStyle, _this.textAlign, _null, _null, _null, _null), 1, 1), _null, _null, _this.decoration, _null, _this.margin, _this.padding, _null), _null, B.TextOverflow_0, true, t1, _null, _null, B.TextWidthBasis_0), _null), _this.animation), _null);
      t1 = _this.onEnter;
      if (t1 != null || _this.onExit != null)
        result = A.MouseRegion$(result, B.C__DeferringMouseCursor, _null, t1, _this.onExit, _null);
      t1 = A.MediaQuery__maybeOf(context, B._MediaQueryAspect_6);
      t1 = t1 == null ? _null : t1.viewInsets;
      t1 = t1 == null ? _null : t1.bottom;
      if (t1 == null)
        t1 = 0;
      return A.Positioned$fill(t1, new A.CustomSingleChildLayout(new A._TooltipPositionDelegate(_this.target, _this.verticalOffset, true), result, _null));
    }
  };
  A._TooltipState_State_SingleTickerProviderStateMixin.prototype = {
    dispose$0() {
      var _this = this,
        t1 = _this.SingleTickerProviderStateMixin__tickerModeNotifier;
      if (t1 != null)
        t1.removeListener$1(_this.get$_updateTicker());
      _this.SingleTickerProviderStateMixin__tickerModeNotifier = null;
      _this.super$State$dispose();
    },
    activate$0() {
      this.super$State$activate();
      this._updateTickerModeNotifier$0();
      this._updateTicker$0();
    }
  };
  A.TooltipThemeData.prototype = {
    get$hashCode(_) {
      var _this = this, _null = null;
      return A.Object_hash(_this.height, _this.padding, _this.margin, _this.verticalOffset, _this.preferBelow, _this.excludeFromSemantics, _this.decoration, _this.textStyle, _this.textAlign, _null, _null, _null, _null, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      t1 = false;
      if (other instanceof A.TooltipThemeData)
        if (other.height == _this.height)
          if (J.$eq$(other.padding, _this.padding))
            if (J.$eq$(other.margin, _this.margin))
              if (other.verticalOffset == _this.verticalOffset)
                if (J.$eq$(other.decoration, _this.decoration))
                  t1 = J.$eq$(other.textStyle, _this.textStyle);
      return t1;
    }
  };
  A.TooltipTriggerMode.prototype = {
    _enumToString$0() {
      return "TooltipTriggerMode." + this._name;
    }
  };
  A._TooltipThemeData_Object_Diagnosticable.prototype = {};
  A.ScriptCategory.prototype = {
    _enumToString$0() {
      return "ScriptCategory." + this._name;
    }
  };
  A.Typography.prototype = {
    geometryThemeFor$1(category) {
      switch (category.index) {
        case 0:
          return this.englishLike;
        case 1:
          return this.dense;
        case 2:
          return this.tall;
      }
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      return other instanceof A.Typography && other.black.$eq(0, _this.black) && other.white.$eq(0, _this.white) && other.englishLike.$eq(0, _this.englishLike) && other.dense.$eq(0, _this.dense) && other.tall.$eq(0, _this.tall);
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(_this.black, _this.white, _this.englishLike, _this.dense, _this.tall, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    }
  };
  A._Typography_Object_Diagnosticable.prototype = {};
  A.AlignmentGeometry.prototype = {
    toString$0(_) {
      var _this = this;
      if (_this.get$_alignment$_start() === 0)
        return A.Alignment__stringify(_this.get$_x(), _this.get$_y());
      if (_this.get$_x() === 0)
        return A.AlignmentDirectional__stringify(_this.get$_alignment$_start(), _this.get$_y());
      return A.Alignment__stringify(_this.get$_x(), _this.get$_y()) + " + " + A.AlignmentDirectional__stringify(_this.get$_alignment$_start(), 0);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.AlignmentGeometry && other.get$_x() === this.get$_x() && other.get$_alignment$_start() === this.get$_alignment$_start() && other.get$_y() === this.get$_y();
    },
    get$hashCode(_) {
      return A.Object_hash(this.get$_x(), this.get$_alignment$_start(), this.get$_y(), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    }
  };
  A.Alignment.prototype = {
    get$_x() {
      return this.x;
    },
    get$_alignment$_start() {
      return 0;
    },
    get$_y() {
      return this.y;
    },
    $sub(_, other) {
      return new A.Alignment(this.x - other.x, this.y - other.y);
    },
    $add(_, other) {
      return new A.Alignment(this.x + other.x, this.y + other.y);
    },
    $mul(_, other) {
      return new A.Alignment(this.x * other, this.y * other);
    },
    alongOffset$1(other) {
      var centerX = other._dx / 2,
        centerY = other._dy / 2;
      return new A.Offset(centerX + this.x * centerX, centerY + this.y * centerY);
    },
    alongSize$1(other) {
      var centerX = other._dx / 2,
        centerY = other._dy / 2;
      return new A.Offset(centerX + this.x * centerX, centerY + this.y * centerY);
    },
    resolve$1(direction) {
      return this;
    },
    toString$0(_) {
      return A.Alignment__stringify(this.x, this.y);
    }
  };
  A.AlignmentDirectional.prototype = {
    get$_x() {
      return 0;
    },
    get$_alignment$_start() {
      return this.start;
    },
    get$_y() {
      return this.y;
    },
    $sub(_, other) {
      return new A.AlignmentDirectional(this.start - other.start, this.y - other.y);
    },
    $add(_, other) {
      return new A.AlignmentDirectional(this.start + other.start, this.y + other.y);
    },
    $mul(_, other) {
      return new A.AlignmentDirectional(this.start * other, this.y * other);
    },
    resolve$1(direction) {
      var _this = this;
      switch (direction.index) {
        case 0:
          return new A.Alignment(-_this.start, _this.y);
        case 1:
          return new A.Alignment(_this.start, _this.y);
      }
    },
    toString$0(_) {
      return A.AlignmentDirectional__stringify(this.start, this.y);
    }
  };
  A._MixedAlignment.prototype = {
    $mul(_, other) {
      return new A._MixedAlignment(this._x * other, this._alignment$_start * other, this._y * other);
    },
    resolve$1(direction) {
      var _this = this;
      switch (direction.index) {
        case 0:
          return new A.Alignment(_this._x - _this._alignment$_start, _this._y);
        case 1:
          return new A.Alignment(_this._x + _this._alignment$_start, _this._y);
      }
    },
    get$_x() {
      return this._x;
    },
    get$_alignment$_start() {
      return this._alignment$_start;
    },
    get$_y() {
      return this._y;
    }
  };
  A.RenderComparison.prototype = {
    _enumToString$0() {
      return "RenderComparison." + this._name;
    }
  };
  A.Axis.prototype = {
    _enumToString$0() {
      return "Axis." + this._name;
    }
  };
  A.VerticalDirection.prototype = {
    _enumToString$0() {
      return "VerticalDirection." + this._name;
    }
  };
  A.AxisDirection.prototype = {
    _enumToString$0() {
      return "AxisDirection." + this._name;
    }
  };
  A.PaintingBinding.prototype = {};
  A._SystemFontsNotifier.prototype = {
    notifyListeners$0() {
      var t1, t2, callback;
      for (t1 = this._systemFontsCallbacks, t1 = A._LinkedHashSetIterator$(t1, t1._collection$_modifications, A._instanceType(t1)._precomputed1), t2 = t1.$ti._precomputed1; t1.moveNext$0();) {
        callback = t1._current;
        (callback == null ? t2._as(callback) : callback).call$0();
      }
    }
  };
  A.BorderRadiusGeometry.prototype = {
    subtract$1(other) {
      var _this = this;
      return new A._MixedBorderRadius(_this.get$_topLeft().$sub(0, other.get$_topLeft()), _this.get$_topRight().$sub(0, other.get$_topRight()), _this.get$_bottomLeft().$sub(0, other.get$_bottomLeft()), _this.get$_bottomRight().$sub(0, other.get$_bottomRight()), _this.get$_topStart().$sub(0, other.get$_topStart()), _this.get$_topEnd().$sub(0, other.get$_topEnd()), _this.get$_bottomStart().$sub(0, other.get$_bottomStart()), _this.get$_bottomEnd().$sub(0, other.get$_bottomEnd()));
    },
    add$1(_, other) {
      var _this = this;
      return new A._MixedBorderRadius(_this.get$_topLeft().$add(0, other.get$_topLeft()), _this.get$_topRight().$add(0, other.get$_topRight()), _this.get$_bottomLeft().$add(0, other.get$_bottomLeft()), _this.get$_bottomRight().$add(0, other.get$_bottomRight()), _this.get$_topStart().$add(0, other.get$_topStart()), _this.get$_topEnd().$add(0, other.get$_topEnd()), _this.get$_bottomStart().$add(0, other.get$_bottomStart()), _this.get$_bottomEnd().$add(0, other.get$_bottomEnd()));
    },
    toString$0(_) {
      var visual, comma, t1, logical, _this = this,
        _s18_ = "BorderRadius.only(",
        _s29_ = "BorderRadiusDirectional.only(";
      if (_this.get$_topLeft().$eq(0, _this.get$_topRight()) && _this.get$_topRight().$eq(0, _this.get$_bottomLeft()) && _this.get$_bottomLeft().$eq(0, _this.get$_bottomRight()))
        if (!_this.get$_topLeft().$eq(0, B.Radius_0_0))
          visual = _this.get$_topLeft().x === _this.get$_topLeft().y ? "BorderRadius.circular(" + B.JSNumber_methods.toStringAsFixed$1(_this.get$_topLeft().x, 1) + ")" : "BorderRadius.all(" + _this.get$_topLeft().toString$0(0) + ")";
        else
          visual = null;
      else {
        comma = !_this.get$_topLeft().$eq(0, B.Radius_0_0);
        t1 = comma ? _s18_ + ("topLeft: " + _this.get$_topLeft().toString$0(0)) : _s18_;
        if (!_this.get$_topRight().$eq(0, B.Radius_0_0)) {
          if (comma)
            t1 += ", ";
          t1 += "topRight: " + _this.get$_topRight().toString$0(0);
          comma = true;
        }
        if (!_this.get$_bottomLeft().$eq(0, B.Radius_0_0)) {
          if (comma)
            t1 += ", ";
          t1 += "bottomLeft: " + _this.get$_bottomLeft().toString$0(0);
          comma = true;
        }
        if (!_this.get$_bottomRight().$eq(0, B.Radius_0_0)) {
          if (comma)
            t1 += ", ";
          t1 += "bottomRight: " + _this.get$_bottomRight().toString$0(0);
        }
        t1 += ")";
        visual = t1.charCodeAt(0) == 0 ? t1 : t1;
      }
      if (_this.get$_topStart().$eq(0, _this.get$_topEnd()) && _this.get$_topEnd().$eq(0, _this.get$_bottomEnd()) && _this.get$_bottomEnd().$eq(0, _this.get$_bottomStart()))
        if (!_this.get$_topStart().$eq(0, B.Radius_0_0))
          logical = _this.get$_topStart().x === _this.get$_topStart().y ? "BorderRadiusDirectional.circular(" + B.JSNumber_methods.toStringAsFixed$1(_this.get$_topStart().x, 1) + ")" : "BorderRadiusDirectional.all(" + _this.get$_topStart().toString$0(0) + ")";
        else
          logical = null;
      else {
        comma = !_this.get$_topStart().$eq(0, B.Radius_0_0);
        t1 = comma ? _s29_ + ("topStart: " + _this.get$_topStart().toString$0(0)) : _s29_;
        if (!_this.get$_topEnd().$eq(0, B.Radius_0_0)) {
          if (comma)
            t1 += ", ";
          t1 += "topEnd: " + _this.get$_topEnd().toString$0(0);
          comma = true;
        }
        if (!_this.get$_bottomStart().$eq(0, B.Radius_0_0)) {
          if (comma)
            t1 += ", ";
          t1 += "bottomStart: " + _this.get$_bottomStart().toString$0(0);
          comma = true;
        }
        if (!_this.get$_bottomEnd().$eq(0, B.Radius_0_0)) {
          if (comma)
            t1 += ", ";
          t1 += "bottomEnd: " + _this.get$_bottomEnd().toString$0(0);
        }
        t1 += ")";
        logical = t1.charCodeAt(0) == 0 ? t1 : t1;
      }
      t1 = visual != null;
      if (t1 && logical != null)
        return visual + " + " + logical;
      if (t1)
        return visual;
      if (logical != null)
        return logical;
      return "BorderRadius.zero";
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      return other instanceof A.BorderRadiusGeometry && other.get$_topLeft().$eq(0, _this.get$_topLeft()) && other.get$_topRight().$eq(0, _this.get$_topRight()) && other.get$_bottomLeft().$eq(0, _this.get$_bottomLeft()) && other.get$_bottomRight().$eq(0, _this.get$_bottomRight()) && other.get$_topStart().$eq(0, _this.get$_topStart()) && other.get$_topEnd().$eq(0, _this.get$_topEnd()) && other.get$_bottomStart().$eq(0, _this.get$_bottomStart()) && other.get$_bottomEnd().$eq(0, _this.get$_bottomEnd());
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(_this.get$_topLeft(), _this.get$_topRight(), _this.get$_bottomLeft(), _this.get$_bottomRight(), _this.get$_topStart(), _this.get$_topEnd(), _this.get$_bottomStart(), _this.get$_bottomEnd(), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    }
  };
  A.BorderRadius.prototype = {
    get$_topLeft() {
      return this.topLeft;
    },
    get$_topRight() {
      return this.topRight;
    },
    get$_bottomLeft() {
      return this.bottomLeft;
    },
    get$_bottomRight() {
      return this.bottomRight;
    },
    get$_topStart() {
      return B.Radius_0_0;
    },
    get$_topEnd() {
      return B.Radius_0_0;
    },
    get$_bottomStart() {
      return B.Radius_0_0;
    },
    get$_bottomEnd() {
      return B.Radius_0_0;
    },
    toRRect$1(rect) {
      var _this = this,
        t1 = _this.topLeft.clamp$1$minimum(0, B.Radius_0_0),
        t2 = _this.topRight.clamp$1$minimum(0, B.Radius_0_0);
      return A.RRect$fromRectAndCorners(rect, _this.bottomLeft.clamp$1$minimum(0, B.Radius_0_0), _this.bottomRight.clamp$1$minimum(0, B.Radius_0_0), t1, t2);
    },
    subtract$1(other) {
      if (other instanceof A.BorderRadius)
        return this.$sub(0, other);
      return this.super$BorderRadiusGeometry$subtract(other);
    },
    add$1(_, other) {
      if (other instanceof A.BorderRadius)
        return this.$add(0, other);
      return this.super$BorderRadiusGeometry$add(0, other);
    },
    $sub(_, other) {
      var _this = this;
      return new A.BorderRadius(_this.topLeft.$sub(0, other.topLeft), _this.topRight.$sub(0, other.topRight), _this.bottomLeft.$sub(0, other.bottomLeft), _this.bottomRight.$sub(0, other.bottomRight));
    },
    $add(_, other) {
      var _this = this;
      return new A.BorderRadius(_this.topLeft.$add(0, other.topLeft), _this.topRight.$add(0, other.topRight), _this.bottomLeft.$add(0, other.bottomLeft), _this.bottomRight.$add(0, other.bottomRight));
    },
    $mul(_, other) {
      var _this = this;
      return new A.BorderRadius(_this.topLeft.$mul(0, other), _this.topRight.$mul(0, other), _this.bottomLeft.$mul(0, other), _this.bottomRight.$mul(0, other));
    },
    resolve$1(direction) {
      return this;
    }
  };
  A.BorderRadiusDirectional.prototype = {
    get$_topStart() {
      return this.topStart;
    },
    get$_topEnd() {
      return this.topEnd;
    },
    get$_bottomStart() {
      return this.bottomStart;
    },
    get$_bottomEnd() {
      return this.bottomEnd;
    },
    get$_topLeft() {
      return B.Radius_0_0;
    },
    get$_topRight() {
      return B.Radius_0_0;
    },
    get$_bottomLeft() {
      return B.Radius_0_0;
    },
    get$_bottomRight() {
      return B.Radius_0_0;
    },
    subtract$1(other) {
      if (other instanceof A.BorderRadiusDirectional)
        return this.$sub(0, other);
      return this.super$BorderRadiusGeometry$subtract(other);
    },
    add$1(_, other) {
      if (other instanceof A.BorderRadiusDirectional)
        return this.$add(0, other);
      return this.super$BorderRadiusGeometry$add(0, other);
    },
    $sub(_, other) {
      var _this = this;
      return new A.BorderRadiusDirectional(_this.topStart.$sub(0, other.topStart), _this.topEnd.$sub(0, other.topEnd), _this.bottomStart.$sub(0, other.bottomStart), _this.bottomEnd.$sub(0, other.bottomEnd));
    },
    $add(_, other) {
      var _this = this;
      return new A.BorderRadiusDirectional(_this.topStart.$add(0, other.topStart), _this.topEnd.$add(0, other.topEnd), _this.bottomStart.$add(0, other.bottomStart), _this.bottomEnd.$add(0, other.bottomEnd));
    },
    $mul(_, other) {
      var _this = this;
      return new A.BorderRadiusDirectional(_this.topStart.$mul(0, other), _this.topEnd.$mul(0, other), _this.bottomStart.$mul(0, other), _this.bottomEnd.$mul(0, other));
    },
    resolve$1(direction) {
      var _this = this;
      switch (direction.index) {
        case 0:
          return new A.BorderRadius(_this.topEnd, _this.topStart, _this.bottomEnd, _this.bottomStart);
        case 1:
          return new A.BorderRadius(_this.topStart, _this.topEnd, _this.bottomStart, _this.bottomEnd);
      }
    }
  };
  A._MixedBorderRadius.prototype = {
    $mul(_, other) {
      var _this = this;
      return new A._MixedBorderRadius(_this._topLeft.$mul(0, other), _this._topRight.$mul(0, other), _this._bottomLeft.$mul(0, other), _this._bottomRight.$mul(0, other), _this._topStart.$mul(0, other), _this._topEnd.$mul(0, other), _this._bottomStart.$mul(0, other), _this._bottomEnd.$mul(0, other));
    },
    resolve$1(direction) {
      var _this = this;
      switch (direction.index) {
        case 0:
          return new A.BorderRadius(_this._topLeft.$add(0, _this._topEnd), _this._topRight.$add(0, _this._topStart), _this._bottomLeft.$add(0, _this._bottomEnd), _this._bottomRight.$add(0, _this._bottomStart));
        case 1:
          return new A.BorderRadius(_this._topLeft.$add(0, _this._topStart), _this._topRight.$add(0, _this._topEnd), _this._bottomLeft.$add(0, _this._bottomStart), _this._bottomRight.$add(0, _this._bottomEnd));
      }
    },
    get$_topLeft() {
      return this._topLeft;
    },
    get$_topRight() {
      return this._topRight;
    },
    get$_bottomLeft() {
      return this._bottomLeft;
    },
    get$_bottomRight() {
      return this._bottomRight;
    },
    get$_topStart() {
      return this._topStart;
    },
    get$_topEnd() {
      return this._topEnd;
    },
    get$_bottomStart() {
      return this._bottomStart;
    },
    get$_bottomEnd() {
      return this._bottomEnd;
    }
  };
  A.BorderStyle.prototype = {
    _enumToString$0() {
      return "BorderStyle." + this._name;
    }
  };
  A.BorderSide.prototype = {
    scale$1(t) {
      var t1 = Math.max(0, this.width * t),
        t2 = t <= 0 ? B.BorderStyle_0 : this.style;
      return new A.BorderSide(this.color, t1, t2, -1);
    },
    toPaint$0() {
      var t1, t2;
      switch (this.style.index) {
        case 1:
          t1 = A.Paint$();
          t1.set$color(this.color);
          t2 = t1._ui$_data;
          t2.$flags & 2 && A.throwUnsupportedOperation(t2, 12);
          t2.setFloat32(16, this.width, true);
          t2.setInt32(12, 1, true);
          return t1;
        case 0:
          t1 = A.Paint$();
          t1.set$color(B.Color_0);
          t2 = t1._ui$_data;
          t2.$flags & 2 && A.throwUnsupportedOperation(t2, 12);
          t2.setFloat32(16, 0, true);
          t2.setInt32(12, 1, true);
          return t1;
      }
    },
    get$strokeInset() {
      return this.width * (1 - (1 + this.strokeAlign) / 2);
    },
    get$strokeOutset() {
      return this.width * (1 + this.strokeAlign) / 2;
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      return other instanceof A.BorderSide && other.color.$eq(0, _this.color) && other.width === _this.width && other.style === _this.style && other.strokeAlign === _this.strokeAlign;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(_this.color, _this.width, _this.style, _this.strokeAlign, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toStringShort$0() {
      return "BorderSide";
    }
  };
  A.ShapeBorder.prototype = {
    add$2$reversed(_, other, reversed) {
      return null;
    },
    add$1(_, other) {
      return this.add$2$reversed(0, other, false);
    },
    $add(_, other) {
      var t1 = this.add$1(0, other);
      if (t1 == null)
        t1 = other.add$2$reversed(0, this, true);
      return t1 == null ? new A._CompoundBorder(A._setArrayType([other, this], type$.JSArray_ShapeBorder)) : t1;
    },
    lerpFrom$2(a, t) {
      if (a == null)
        return this.scale$1(t);
      return null;
    },
    lerpTo$2(b, t) {
      if (b == null)
        return this.scale$1(1 - t);
      return null;
    },
    toString$0(_) {
      return "ShapeBorder()";
    }
  };
  A.OutlinedBorder.prototype = {
    get$dimensions() {
      var t1 = Math.max(this.side.get$strokeInset(), 0);
      return new A.EdgeInsets(t1, t1, t1, t1);
    },
    lerpFrom$2(a, t) {
      if (a == null)
        return this.scale$1(t);
      return null;
    },
    lerpTo$2(b, t) {
      if (b == null)
        return this.scale$1(1 - t);
      return null;
    }
  };
  A._CompoundBorder.prototype = {
    get$dimensions() {
      return B.JSArray_methods.fold$2(this.borders, B.EdgeInsets_0_0_0_0, new A._CompoundBorder_dimensions_closure());
    },
    add$2$reversed(_, other, reversed) {
      var t2, ours, merged,
        t1 = other instanceof A._CompoundBorder;
      if (!t1) {
        t2 = this.borders;
        ours = reversed ? B.JSArray_methods.get$last(t2) : B.JSArray_methods.get$first(t2);
        merged = ours.add$2$reversed(0, other, reversed);
        if (merged == null)
          merged = other.add$2$reversed(0, ours, !reversed);
        if (merged != null) {
          t1 = A.List_List$_of(t2, type$.ShapeBorder);
          t1[reversed ? t1.length - 1 : 0] = merged;
          return new A._CompoundBorder(t1);
        }
      }
      t2 = A._setArrayType([], type$.JSArray_ShapeBorder);
      if (reversed)
        B.JSArray_methods.addAll$1(t2, this.borders);
      if (t1)
        B.JSArray_methods.addAll$1(t2, other.borders);
      else
        t2.push(other);
      if (!reversed)
        B.JSArray_methods.addAll$1(t2, this.borders);
      return new A._CompoundBorder(t2);
    },
    add$1(_, other) {
      return this.add$2$reversed(0, other, false);
    },
    scale$1(t) {
      var t1 = this.borders,
        t2 = A._arrayInstanceType(t1)._eval$1("MappedListIterable<1,ShapeBorder>");
      t1 = A.List_List$_of(new A.MappedListIterable(t1, new A._CompoundBorder_scale_closure(t), t2), t2._eval$1("ListIterable.E"));
      return new A._CompoundBorder(t1);
    },
    lerpFrom$2(a, t) {
      return A._CompoundBorder_lerp(a, this, t);
    },
    lerpTo$2(b, t) {
      return A._CompoundBorder_lerp(this, b, t);
    },
    getOuterPath$2$textDirection(rect, textDirection) {
      return B.JSArray_methods.get$first(this.borders).getOuterPath$2$textDirection(rect, textDirection);
    },
    paint$3$textDirection(canvas, rect, textDirection) {
      var t1, t2, _i, border, t3;
      for (t1 = this.borders, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
        border = t1[_i];
        border.paint$3$textDirection(canvas, rect, textDirection);
        t3 = border.get$dimensions().resolve$1(textDirection);
        rect = new A.Rect(rect.left + t3.left, rect.top + t3.top, rect.right - t3.right, rect.bottom - t3.bottom);
      }
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(this))
        return false;
      return other instanceof A._CompoundBorder && A.listEquals(other.borders, this.borders);
    },
    get$hashCode(_) {
      return A.Object_hashAll(this.borders);
    },
    toString$0(_) {
      var t1 = this.borders,
        t2 = A._arrayInstanceType(t1)._eval$1("ReversedListIterable<1>");
      return new A.MappedListIterable(new A.ReversedListIterable(t1, t2), new A._CompoundBorder_toString_closure(), t2._eval$1("MappedListIterable<ListIterable.E,String>")).join$1(0, " + ");
    }
  };
  A._CompoundBorder_dimensions_closure.prototype = {
    call$2(previousValue, border) {
      return previousValue.add$1(0, border.get$dimensions());
    },
    $signature: 132
  };
  A._CompoundBorder_scale_closure.prototype = {
    call$1(border) {
      return border.scale$1(this.t);
    },
    $signature: 133
  };
  A._CompoundBorder_toString_closure.prototype = {
    call$1(border) {
      return border.toString$0(0);
    },
    $signature: 134
  };
  A._BorderSide_Object_Diagnosticable.prototype = {};
  A.BoxShape.prototype = {
    _enumToString$0() {
      return "BoxShape." + this._name;
    }
  };
  A.BoxBorder.prototype = {
    add$2$reversed(_, other, reversed) {
      return null;
    },
    add$1(_, other) {
      return this.add$2$reversed(0, other, false);
    },
    getOuterPath$2$textDirection(rect, textDirection) {
      var t1 = A.SurfacePath$();
      t1.addRectWithDirection$3(rect, 0, 0);
      return t1;
    }
  };
  A.Border.prototype = {
    get$dimensions() {
      var t1, _this = this;
      if (_this.get$_widthIsUniform()) {
        t1 = _this.top.get$strokeInset();
        return new A.EdgeInsets(t1, t1, t1, t1);
      }
      return new A.EdgeInsets(_this.left.get$strokeInset(), _this.top.get$strokeInset(), _this.right.get$strokeInset(), _this.bottom.get$strokeInset());
    },
    get$isUniform() {
      var topStyle, topStrokeAlign, _this = this,
        t1 = _this.top,
        topColor = t1.color,
        t2 = _this.right,
        t3 = false;
      if (t2.color.$eq(0, topColor) && _this.bottom.color.$eq(0, topColor) && _this.left.color.$eq(0, topColor))
        if (_this.get$_widthIsUniform()) {
          topStyle = t1.style;
          if (t2.style === topStyle && _this.bottom.style === topStyle && _this.left.style === topStyle) {
            topStrokeAlign = t1.strokeAlign;
            t1 = t2.strokeAlign === topStrokeAlign && _this.bottom.strokeAlign === topStrokeAlign && _this.left.strokeAlign === topStrokeAlign;
          } else
            t1 = t3;
        } else
          t1 = t3;
      else
        t1 = t3;
      return t1;
    },
    get$_widthIsUniform() {
      var _this = this,
        topWidth = _this.top.width;
      return _this.right.width === topWidth && _this.bottom.width === topWidth && _this.left.width === topWidth;
    },
    add$2$reversed(_, other, reversed) {
      var _this = this;
      if (other instanceof A.Border && A.BorderSide_canMerge(_this.top, other.top) && A.BorderSide_canMerge(_this.right, other.right) && A.BorderSide_canMerge(_this.bottom, other.bottom) && A.BorderSide_canMerge(_this.left, other.left))
        return new A.Border(A.BorderSide_merge(_this.top, other.top), A.BorderSide_merge(_this.right, other.right), A.BorderSide_merge(_this.bottom, other.bottom), A.BorderSide_merge(_this.left, other.left));
      return null;
    },
    add$1(_, other) {
      return this.add$2$reversed(0, other, false);
    },
    scale$1(t) {
      var _this = this;
      return new A.Border(_this.top.scale$1(t), _this.right.scale$1(t), _this.bottom.scale$1(t), _this.left.scale$1(t));
    },
    lerpFrom$2(a, t) {
      if (a instanceof A.Border)
        return A.Border_lerp(a, this, t);
      return this.super$ShapeBorder$lerpFrom(a, t);
    },
    lerpTo$2(b, t) {
      if (b instanceof A.Border)
        return A.Border_lerp(this, b, t);
      return this.super$ShapeBorder$lerpTo(b, t);
    },
    paint$5$borderRadius$shape$textDirection(canvas, rect, borderRadius, shape, textDirection) {
      var t1, _this = this;
      if (_this.get$isUniform()) {
        t1 = _this.top;
        switch (t1.style.index) {
          case 0:
            return;
          case 1:
            switch (shape.index) {
              case 1:
                A.BoxBorder__paintUniformBorderWithCircle(canvas, rect, t1);
                break;
              case 0:
                if (borderRadius != null && !borderRadius.$eq(0, B.BorderRadius_tUf)) {
                  A.BoxBorder__paintUniformBorderWithRadius(canvas, rect, t1, borderRadius);
                  return;
                }
                A.BoxBorder__paintUniformBorderWithRectangle(canvas, rect, t1);
                break;
            }
            return;
        }
      }
      A.paintBorder(canvas, rect, _this.bottom, _this.left, _this.right, _this.top);
    },
    paint$3$textDirection(canvas, rect, textDirection) {
      return this.paint$5$borderRadius$shape$textDirection(canvas, rect, null, B.BoxShape_0, textDirection);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      return other instanceof A.Border && other.top.$eq(0, _this.top) && other.right.$eq(0, _this.right) && other.bottom.$eq(0, _this.bottom) && other.left.$eq(0, _this.left);
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(_this.top, _this.right, _this.bottom, _this.left, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var t1, t2, _this = this;
      if (_this.get$isUniform())
        return "Border.all(" + _this.top.toString$0(0) + ")";
      t1 = A._setArrayType([], type$.JSArray_String);
      t2 = _this.top;
      if (!t2.$eq(0, B.BorderSide_5Di))
        t1.push("top: " + t2.toString$0(0));
      t2 = _this.right;
      if (!t2.$eq(0, B.BorderSide_5Di))
        t1.push("right: " + t2.toString$0(0));
      t2 = _this.bottom;
      if (!t2.$eq(0, B.BorderSide_5Di))
        t1.push("bottom: " + t2.toString$0(0));
      t2 = _this.left;
      if (!t2.$eq(0, B.BorderSide_5Di))
        t1.push("left: " + t2.toString$0(0));
      return "Border(" + B.JSArray_methods.join$1(t1, ", ") + ")";
    }
  };
  A.BorderDirectional.prototype = {
    get$dimensions() {
      var t1, _this = this;
      if (_this.get$isUniform()) {
        t1 = _this.top.get$strokeInset();
        return new A.EdgeInsetsDirectional(t1, t1, t1, t1);
      }
      return new A.EdgeInsetsDirectional(_this.start.get$strokeInset(), _this.top.get$strokeInset(), _this.end.get$strokeInset(), _this.bottom.get$strokeInset());
    },
    get$isUniform() {
      var topWidth, topStyle, topStrokeAlign, _this = this,
        t1 = _this.top,
        topColor = t1.color,
        t2 = _this.start;
      if (!t2.color.$eq(0, topColor) || !_this.end.color.$eq(0, topColor) || !_this.bottom.color.$eq(0, topColor))
        return false;
      topWidth = t1.width;
      if (t2.width !== topWidth || _this.end.width !== topWidth || _this.bottom.width !== topWidth)
        return false;
      topStyle = t1.style;
      if (t2.style !== topStyle || _this.end.style !== topStyle || _this.bottom.style !== topStyle)
        return false;
      topStrokeAlign = t1.strokeAlign;
      if (!(t2.strokeAlign === topStrokeAlign && _this.bottom.strokeAlign === topStrokeAlign && _this.end.strokeAlign === topStrokeAlign))
        return false;
      return true;
    },
    add$2$reversed(_, other, reversed) {
      var t1, t2, t3, _this = this, _null = null;
      if (other instanceof A.BorderDirectional) {
        t1 = _this.top;
        t2 = other.top;
        if (A.BorderSide_canMerge(t1, t2) && A.BorderSide_canMerge(_this.start, other.start) && A.BorderSide_canMerge(_this.end, other.end) && A.BorderSide_canMerge(_this.bottom, other.bottom))
          return new A.BorderDirectional(A.BorderSide_merge(t1, t2), A.BorderSide_merge(_this.start, other.start), A.BorderSide_merge(_this.end, other.end), A.BorderSide_merge(_this.bottom, other.bottom));
        return _null;
      }
      if (other instanceof A.Border) {
        t1 = other.top;
        t2 = _this.top;
        if (!A.BorderSide_canMerge(t1, t2) || !A.BorderSide_canMerge(other.bottom, _this.bottom))
          return _null;
        t3 = _this.start;
        if (!t3.$eq(0, B.BorderSide_5Di) || !_this.end.$eq(0, B.BorderSide_5Di)) {
          if (!other.left.$eq(0, B.BorderSide_5Di) || !other.right.$eq(0, B.BorderSide_5Di))
            return _null;
          return new A.BorderDirectional(A.BorderSide_merge(t1, t2), t3, _this.end, A.BorderSide_merge(other.bottom, _this.bottom));
        }
        return new A.Border(A.BorderSide_merge(t1, t2), other.right, A.BorderSide_merge(other.bottom, _this.bottom), other.left);
      }
      return _null;
    },
    add$1(_, other) {
      return this.add$2$reversed(0, other, false);
    },
    scale$1(t) {
      var _this = this;
      return new A.BorderDirectional(_this.top.scale$1(t), _this.start.scale$1(t), _this.end.scale$1(t), _this.bottom.scale$1(t));
    },
    lerpFrom$2(a, t) {
      if (a instanceof A.BorderDirectional)
        return A.BorderDirectional_lerp(a, this, t);
      return this.super$ShapeBorder$lerpFrom(a, t);
    },
    lerpTo$2(b, t) {
      if (b instanceof A.BorderDirectional)
        return A.BorderDirectional_lerp(this, b, t);
      return this.super$ShapeBorder$lerpTo(b, t);
    },
    paint$5$borderRadius$shape$textDirection(canvas, rect, borderRadius, shape, textDirection) {
      var t1, left, right, _this = this;
      if (_this.get$isUniform()) {
        t1 = _this.top;
        switch (t1.style.index) {
          case 0:
            return;
          case 1:
            switch (shape.index) {
              case 1:
                A.BoxBorder__paintUniformBorderWithCircle(canvas, rect, t1);
                break;
              case 0:
                if (borderRadius != null && !borderRadius.$eq(0, B.BorderRadius_tUf)) {
                  A.BoxBorder__paintUniformBorderWithRadius(canvas, rect, t1, borderRadius);
                  return;
                }
                A.BoxBorder__paintUniformBorderWithRectangle(canvas, rect, t1);
                break;
            }
            return;
        }
      }
      switch (textDirection.index) {
        case 0:
          left = _this.end;
          right = _this.start;
          break;
        case 1:
          left = _this.start;
          right = _this.end;
          break;
        default:
          left = null;
          right = null;
      }
      A.paintBorder(canvas, rect, _this.bottom, left, right, _this.top);
    },
    paint$3$textDirection(canvas, rect, textDirection) {
      return this.paint$5$borderRadius$shape$textDirection(canvas, rect, null, B.BoxShape_0, textDirection);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      return other instanceof A.BorderDirectional && other.top.$eq(0, _this.top) && other.start.$eq(0, _this.start) && other.end.$eq(0, _this.end) && other.bottom.$eq(0, _this.bottom);
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(_this.top, _this.start, _this.end, _this.bottom, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this,
        t1 = A._setArrayType([], type$.JSArray_String),
        t2 = _this.top;
      if (!t2.$eq(0, B.BorderSide_5Di))
        t1.push("top: " + t2.toString$0(0));
      t2 = _this.start;
      if (!t2.$eq(0, B.BorderSide_5Di))
        t1.push("start: " + t2.toString$0(0));
      t2 = _this.end;
      if (!t2.$eq(0, B.BorderSide_5Di))
        t1.push("end: " + t2.toString$0(0));
      t2 = _this.bottom;
      if (!t2.$eq(0, B.BorderSide_5Di))
        t1.push("bottom: " + t2.toString$0(0));
      return "BorderDirectional(" + B.JSArray_methods.join$1(t1, ", ") + ")";
    }
  };
  A.BoxDecoration.prototype = {
    get$padding() {
      var t1 = this.border;
      t1 = t1 == null ? null : t1.get$dimensions();
      return t1 == null ? B.EdgeInsets_0_0_0_0 : t1;
    },
    scale$1(factor) {
      var _this = this, _null = null,
        t1 = A.Color_lerp(_null, _this.color, factor),
        t2 = A.BoxBorder_lerp(_null, _this.border, factor),
        t3 = A.BorderRadiusGeometry_lerp(_null, _this.borderRadius, factor),
        t4 = A.BoxShadow_lerpList(_null, _this.boxShadow, factor);
      return new A.BoxDecoration(t1, _this.image, t2, t3, t4, _null, _this.shape);
    },
    get$isComplex() {
      return this.boxShadow != null;
    },
    lerpFrom$2(a, t) {
      if (a == null)
        return this.scale$1(t);
      if (a instanceof A.BoxDecoration)
        return A.BoxDecoration_lerp(a, this, t);
      return this.super$Decoration$lerpFrom(a, t);
    },
    lerpTo$2(b, t) {
      if (b == null)
        return this.scale$1(1 - t);
      if (b instanceof A.BoxDecoration)
        return A.BoxDecoration_lerp(this, b, t);
      return this.super$Decoration$lerpTo(b, t);
    },
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      t1 = false;
      if (other instanceof A.BoxDecoration)
        if (J.$eq$(other.color, _this.color))
          if (J.$eq$(other.border, _this.border))
            if (J.$eq$(other.borderRadius, _this.borderRadius))
              if (A.listEquals(other.boxShadow, _this.boxShadow))
                t1 = other.shape === _this.shape;
      return t1;
    },
    get$hashCode(_) {
      var _this = this,
        t1 = _this.boxShadow;
      t1 = t1 == null ? null : A.Object_hashAll(t1);
      return A.Object_hash(_this.color, _this.image, _this.border, _this.borderRadius, t1, _this.gradient, null, _this.shape, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    hitTest$3$textDirection(size, position, textDirection) {
      var t1;
      switch (this.shape.index) {
        case 0:
          t1 = this.borderRadius;
          if (t1 != null)
            return t1.resolve$1(textDirection).toRRect$1(new A.Rect(0, 0, 0 + size._dx, 0 + size._dy)).contains$1(0, position);
          return true;
        case 1:
          return position.$sub(0, size.center$1(B.Offset_0_0)).get$distance() <= Math.min(size._dx, size._dy) / 2;
      }
    },
    createBoxPainter$1(onChanged) {
      return new A._BoxDecorationPainter(this, onChanged);
    }
  };
  A._BoxDecorationPainter.prototype = {
    _paintBox$4(canvas, rect, paint, textDirection) {
      var t1 = this._box_decoration$_decoration;
      switch (t1.shape.index) {
        case 1:
          canvas.drawCircle$3(rect.get$center(), rect.get$shortestSide() / 2, paint);
          break;
        case 0:
          t1 = t1.borderRadius;
          if (t1 == null || t1.$eq(0, B.BorderRadius_tUf))
            canvas.drawRect$2(rect, paint);
          else
            canvas.drawRRect$2(t1.resolve$1(textDirection).toRRect$1(rect), paint);
          break;
      }
    },
    _paintShadows$3(canvas, rect, textDirection) {
      var t2, _i, boxShadow, t3, result, t4,
        t1 = this._box_decoration$_decoration.boxShadow;
      if (t1 == null)
        return;
      for (t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
        boxShadow = t1[_i];
        t3 = new DataView(new ArrayBuffer(56));
        result = new A.Paint(t3);
        t3.setInt32(4, (boxShadow.color.value ^ 4278190080) >>> 0, true);
        result.set$maskFilter(new A.MaskFilter(boxShadow.blurStyle, boxShadow.blurRadius * 0.57735 + 0.5));
        t3 = rect.shift$1(boxShadow.offset);
        t4 = boxShadow.spreadRadius;
        this._paintBox$4(canvas, new A.Rect(t3.left - t4, t3.top - t4, t3.right + t4, t3.bottom + t4), result, textDirection);
      }
    },
    _paintBackgroundImage$3(canvas, rect, configuration) {
      return;
    },
    dispose$0() {
      this.super$BoxPainter$dispose();
    },
    paint$3(canvas, offset, configuration) {
      var paint, _this = this,
        t1 = configuration.size,
        t2 = offset._dx,
        t3 = offset._dy,
        rect = new A.Rect(t2, t3, t2 + t1._dx, t3 + t1._dy),
        textDirection = configuration.textDirection;
      _this._paintShadows$3(canvas, rect, textDirection);
      t1 = _this._box_decoration$_decoration;
      t2 = t1.color;
      if (t2 != null) {
        t3 = _this._cachedBackgroundPaint;
        if (t3 == null) {
          paint = A.Paint$();
          paint.set$color(t2);
          _this._cachedBackgroundPaint = paint;
          t2 = paint;
        } else
          t2 = t3;
        _this._paintBox$4(canvas, rect, t2, textDirection);
      }
      _this._paintBackgroundImage$3(canvas, rect, configuration);
      t2 = t1.border;
      if (t2 != null) {
        t3 = t1.borderRadius;
        t3 = t3 == null ? null : t3.resolve$1(textDirection);
        t2.paint$5$borderRadius$shape$textDirection(canvas, rect, t3, t1.shape, textDirection);
      }
    },
    toString$0(_) {
      return "BoxPainter for " + this._box_decoration$_decoration.toString$0(0);
    }
  };
  A.BoxShadow.prototype = {
    scale$1(factor) {
      var _this = this;
      return new A.BoxShadow(_this.spreadRadius * factor, _this.blurStyle, _this.color, _this.offset.$mul(0, factor), _this.blurRadius * factor);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      return other instanceof A.BoxShadow && other.color.$eq(0, _this.color) && other.offset.$eq(0, _this.offset) && other.blurRadius === _this.blurRadius && other.spreadRadius === _this.spreadRadius && other.blurStyle === _this.blurStyle;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(_this.color, _this.offset, _this.blurRadius, _this.spreadRadius, _this.blurStyle, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this;
      return "BoxShadow(" + _this.color.toString$0(0) + ", " + _this.offset.toString$0(0) + ", " + A.debugFormatDouble(_this.blurRadius) + ", " + A.debugFormatDouble(_this.spreadRadius) + ", " + _this.blurStyle.toString$0(0) + ")";
    }
  };
  A.CircleBorder.prototype = {
    scale$1(t) {
      return new A.CircleBorder(this.eccentricity, this.side.scale$1(t));
    },
    lerpFrom$2(a, t) {
      var t1, t2;
      if (a instanceof A.CircleBorder) {
        t1 = A.BorderSide_lerp(a.side, this.side, t);
        t2 = A.lerpDouble(a.eccentricity, this.eccentricity, t);
        t2.toString;
        return new A.CircleBorder(A.clampDouble(t2, 0, 1), t1);
      }
      return this.super$OutlinedBorder$lerpFrom(a, t);
    },
    lerpTo$2(b, t) {
      var t1, t2;
      if (b instanceof A.CircleBorder) {
        t1 = A.BorderSide_lerp(this.side, b.side, t);
        t2 = A.lerpDouble(this.eccentricity, b.eccentricity, t);
        t2.toString;
        return new A.CircleBorder(A.clampDouble(t2, 0, 1), t1);
      }
      return this.super$OutlinedBorder$lerpTo(b, t);
    },
    getOuterPath$2$textDirection(rect, textDirection) {
      var t1 = A.SurfacePath$();
      t1._addOval$3(this._adjustRect$1(rect), 0, 0);
      return t1;
    },
    getOuterPath$1(rect) {
      return this.getOuterPath$2$textDirection(rect, null);
    },
    copyWith$1$side(side) {
      var t1 = side == null ? this.side : side;
      return new A.CircleBorder(this.eccentricity, t1);
    },
    paint$3$textDirection(canvas, rect, textDirection) {
      var t2,
        t1 = this.side;
      switch (t1.style.index) {
        case 0:
          break;
        case 1:
          t2 = t1.width * t1.strokeAlign;
          if (this.eccentricity === 0)
            canvas.drawCircle$3(rect.get$center(), (rect.get$shortestSide() + t2) / 2, t1.toPaint$0());
          else {
            t2 = this._adjustRect$1(rect).inflate$1(t2 / 2);
            t1 = t1.toPaint$0();
            canvas._addMethod$1(17);
            canvas._objects.push(t1);
            canvas._addData4$4(t2.left, t2.top, t2.right, t2.bottom);
          }
          break;
      }
    },
    paint$2(canvas, rect) {
      return this.paint$3$textDirection(canvas, rect, null);
    },
    _adjustRect$1(rect) {
      var t2, t3, t4, t5, t6, t7, delta,
        t1 = this.eccentricity;
      if (t1 === 0 || rect.right - rect.left === rect.bottom - rect.top)
        return A.Rect$fromCircle(rect.get$center(), rect.get$shortestSide() / 2);
      t2 = rect.right;
      t3 = rect.left;
      t4 = t2 - t3;
      t5 = rect.bottom;
      t6 = rect.top;
      t7 = t5 - t6;
      t1 = 1 - t1;
      if (t4 < t7) {
        delta = t1 * (t7 - t4) / 2;
        return new A.Rect(t3, t6 + delta, t2, t5 - delta);
      } else {
        delta = t1 * (t4 - t7) / 2;
        return new A.Rect(t3 + delta, t6, t2 - delta, t5);
      }
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(this))
        return false;
      return other instanceof A.CircleBorder && other.side.$eq(0, this.side) && other.eccentricity === this.eccentricity;
    },
    get$hashCode(_) {
      return A.Object_hash(this.side, this.eccentricity, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var t1 = this.eccentricity;
      if (t1 !== 0)
        return "CircleBorder(" + this.side.toString$0(0) + ", eccentricity: " + A.S(t1) + ")";
      return "CircleBorder(" + this.side.toString$0(0) + ")";
    }
  };
  A.ClipContext.prototype = {
    _clipAndPaint$4(canvasClipCall, clipBehavior, bounds, painter) {
      var _this = this;
      _this.get$canvas().save$0();
      switch (clipBehavior.index) {
        case 0:
          break;
        case 1:
          canvasClipCall.call$1(false);
          break;
        case 2:
          canvasClipCall.call$1(true);
          break;
        case 3:
          canvasClipCall.call$1(true);
          _this.get$canvas().saveLayer$2(bounds, A.Paint$());
          break;
      }
      painter.call$0();
      if (clipBehavior === B.Clip_3)
        _this.get$canvas().restore$0();
      _this.get$canvas().restore$0();
    },
    clipPathAndPaint$4(path, clipBehavior, bounds, painter) {
      this._clipAndPaint$4(new A.ClipContext_clipPathAndPaint_closure(this, path), clipBehavior, bounds, painter);
    },
    clipRRectAndPaint$4(rrect, clipBehavior, bounds, painter) {
      this._clipAndPaint$4(new A.ClipContext_clipRRectAndPaint_closure(this, rrect), clipBehavior, bounds, painter);
    },
    clipRectAndPaint$4(rect, clipBehavior, bounds, painter) {
      this._clipAndPaint$4(new A.ClipContext_clipRectAndPaint_closure(this, rect), clipBehavior, bounds, painter);
    }
  };
  A.ClipContext_clipPathAndPaint_closure.prototype = {
    call$1(doAntiAlias) {
      return this.$this.get$canvas().clipPath$2$doAntiAlias(this.path, doAntiAlias);
    },
    $signature: 6
  };
  A.ClipContext_clipRRectAndPaint_closure.prototype = {
    call$1(doAntiAlias) {
      return this.$this.get$canvas().clipRRect$2$doAntiAlias(this.rrect, doAntiAlias);
    },
    $signature: 6
  };
  A.ClipContext_clipRectAndPaint_closure.prototype = {
    call$1(doAntiAlias) {
      return this.$this.get$canvas().clipRect$2$doAntiAlias(this.rect, doAntiAlias);
    },
    $signature: 6
  };
  A.ColorSwatch.prototype = {
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      return _this.super$Color$$eq(0, other) && A._instanceType(_this)._eval$1("ColorSwatch<ColorSwatch.T>")._is(other) && A.mapEquals(other._swatch, _this._swatch);
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this.value, this._swatch, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "ColorSwatch(primary value: " + this.super$Color$toString(0) + ")";
    }
  };
  A.Decoration.prototype = {
    toStringShort$0() {
      return "Decoration";
    },
    get$padding() {
      return B.EdgeInsets_0_0_0_0;
    },
    get$isComplex() {
      return false;
    },
    lerpFrom$2(a, t) {
      return null;
    },
    lerpTo$2(b, t) {
      return null;
    },
    hitTest$3$textDirection(size, position, textDirection) {
      return true;
    }
  };
  A.BoxPainter.prototype = {
    dispose$0() {
    }
  };
  A._Decoration_Object_Diagnosticable.prototype = {};
  A.EdgeInsetsGeometry.prototype = {
    get$horizontal() {
      var _this = this;
      return _this.get$_left() + _this.get$_right() + _this.get$_edge_insets$_start() + _this.get$_edge_insets$_end();
    },
    add$1(_, other) {
      var _this = this;
      return new A._MixedEdgeInsets(_this.get$_left() + other.get$_left(), _this.get$_right() + other.get$_right(), _this.get$_edge_insets$_start() + other.get$_edge_insets$_start(), _this.get$_edge_insets$_end() + other.get$_edge_insets$_end(), _this.get$_top() + other.get$_top(), _this.get$_bottom() + other.get$_bottom());
    },
    clamp$2(_, min, max) {
      var _this = this;
      return new A._MixedEdgeInsets(A.clampDouble(_this.get$_left(), min.left, max._left), A.clampDouble(_this.get$_right(), min.right, max._right), A.clampDouble(_this.get$_edge_insets$_start(), 0, max._edge_insets$_start), A.clampDouble(_this.get$_edge_insets$_end(), 0, max._edge_insets$_end), A.clampDouble(_this.get$_top(), min.top, max._top), A.clampDouble(_this.get$_bottom(), min.bottom, max._bottom));
    },
    toString$0(_) {
      var _this = this;
      if (_this.get$_edge_insets$_start() === 0 && _this.get$_edge_insets$_end() === 0) {
        if (_this.get$_left() === 0 && _this.get$_right() === 0 && _this.get$_top() === 0 && _this.get$_bottom() === 0)
          return "EdgeInsets.zero";
        if (_this.get$_left() === _this.get$_right() && _this.get$_right() === _this.get$_top() && _this.get$_top() === _this.get$_bottom())
          return "EdgeInsets.all(" + B.JSNumber_methods.toStringAsFixed$1(_this.get$_left(), 1) + ")";
        return "EdgeInsets(" + B.JSNumber_methods.toStringAsFixed$1(_this.get$_left(), 1) + ", " + B.JSNumber_methods.toStringAsFixed$1(_this.get$_top(), 1) + ", " + B.JSNumber_methods.toStringAsFixed$1(_this.get$_right(), 1) + ", " + B.JSNumber_methods.toStringAsFixed$1(_this.get$_bottom(), 1) + ")";
      }
      if (_this.get$_left() === 0 && _this.get$_right() === 0)
        return "EdgeInsetsDirectional(" + B.JSNumber_methods.toStringAsFixed$1(_this.get$_edge_insets$_start(), 1) + ", " + B.JSNumber_methods.toStringAsFixed$1(_this.get$_top(), 1) + ", " + B.JSNumber_methods.toStringAsFixed$1(_this.get$_edge_insets$_end(), 1) + ", " + B.JSNumber_methods.toStringAsFixed$1(_this.get$_bottom(), 1) + ")";
      return "EdgeInsets(" + B.JSNumber_methods.toStringAsFixed$1(_this.get$_left(), 1) + ", " + B.JSNumber_methods.toStringAsFixed$1(_this.get$_top(), 1) + ", " + B.JSNumber_methods.toStringAsFixed$1(_this.get$_right(), 1) + ", " + B.JSNumber_methods.toStringAsFixed$1(_this.get$_bottom(), 1) + ") + EdgeInsetsDirectional(" + B.JSNumber_methods.toStringAsFixed$1(_this.get$_edge_insets$_start(), 1) + ", 0.0, " + B.JSNumber_methods.toStringAsFixed$1(_this.get$_edge_insets$_end(), 1) + ", 0.0)";
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      return other instanceof A.EdgeInsetsGeometry && other.get$_left() === _this.get$_left() && other.get$_right() === _this.get$_right() && other.get$_edge_insets$_start() === _this.get$_edge_insets$_start() && other.get$_edge_insets$_end() === _this.get$_edge_insets$_end() && other.get$_top() === _this.get$_top() && other.get$_bottom() === _this.get$_bottom();
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(_this.get$_left(), _this.get$_right(), _this.get$_edge_insets$_start(), _this.get$_edge_insets$_end(), _this.get$_top(), _this.get$_bottom(), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    }
  };
  A.EdgeInsets.prototype = {
    get$_left() {
      return this.left;
    },
    get$_top() {
      return this.top;
    },
    get$_right() {
      return this.right;
    },
    get$_bottom() {
      return this.bottom;
    },
    get$_edge_insets$_start() {
      return 0;
    },
    get$_edge_insets$_end() {
      return 0;
    },
    add$1(_, other) {
      if (other instanceof A.EdgeInsets)
        return this.$add(0, other);
      return this.super$EdgeInsetsGeometry$add(0, other);
    },
    clamp$2(_, min, max) {
      var _this = this;
      return new A.EdgeInsets(A.clampDouble(_this.left, min.left, max._left), A.clampDouble(_this.top, min.top, max._top), A.clampDouble(_this.right, min.right, max._right), A.clampDouble(_this.bottom, min.bottom, max._bottom));
    },
    $sub(_, other) {
      var _this = this;
      return new A.EdgeInsets(_this.left - other.left, _this.top - other.top, _this.right - other.right, _this.bottom - other.bottom);
    },
    $add(_, other) {
      var _this = this;
      return new A.EdgeInsets(_this.left + other.left, _this.top + other.top, _this.right + other.right, _this.bottom + other.bottom);
    },
    $mul(_, other) {
      var _this = this;
      return new A.EdgeInsets(_this.left * other, _this.top * other, _this.right * other, _this.bottom * other);
    },
    resolve$1(direction) {
      return this;
    },
    copyWith$4$bottom$left$right$top(bottom, left, right, $top) {
      var _this = this,
        t1 = left == null ? _this.left : left,
        t2 = $top == null ? _this.top : $top,
        t3 = right == null ? _this.right : right;
      return new A.EdgeInsets(t1, t2, t3, bottom == null ? _this.bottom : bottom);
    },
    copyWith$1$bottom(bottom) {
      return this.copyWith$4$bottom$left$right$top(bottom, null, null, null);
    }
  };
  A.EdgeInsetsDirectional.prototype = {
    get$_edge_insets$_start() {
      return this.start;
    },
    get$_top() {
      return this.top;
    },
    get$_edge_insets$_end() {
      return this.end;
    },
    get$_bottom() {
      return this.bottom;
    },
    get$_left() {
      return 0;
    },
    get$_right() {
      return 0;
    },
    add$1(_, other) {
      if (other instanceof A.EdgeInsetsDirectional)
        return this.$add(0, other);
      return this.super$EdgeInsetsGeometry$add(0, other);
    },
    $sub(_, other) {
      var _this = this;
      return new A.EdgeInsetsDirectional(_this.start - other.start, _this.top - other.top, _this.end - other.end, _this.bottom - other.bottom);
    },
    $add(_, other) {
      var _this = this;
      return new A.EdgeInsetsDirectional(_this.start + other.start, _this.top + other.top, _this.end + other.end, _this.bottom + other.bottom);
    },
    $mul(_, other) {
      var _this = this;
      return new A.EdgeInsetsDirectional(_this.start * other, _this.top * other, _this.end * other, _this.bottom * other);
    },
    resolve$1(direction) {
      var _this = this;
      switch (direction.index) {
        case 0:
          return new A.EdgeInsets(_this.end, _this.top, _this.start, _this.bottom);
        case 1:
          return new A.EdgeInsets(_this.start, _this.top, _this.end, _this.bottom);
      }
    }
  };
  A._MixedEdgeInsets.prototype = {
    $mul(_, other) {
      var _this = this;
      return new A._MixedEdgeInsets(_this._left * other, _this._right * other, _this._edge_insets$_start * other, _this._edge_insets$_end * other, _this._top * other, _this._bottom * other);
    },
    resolve$1(direction) {
      var _this = this;
      switch (direction.index) {
        case 0:
          return new A.EdgeInsets(_this._edge_insets$_end + _this._left, _this._top, _this._edge_insets$_start + _this._right, _this._bottom);
        case 1:
          return new A.EdgeInsets(_this._edge_insets$_start + _this._left, _this._top, _this._edge_insets$_end + _this._right, _this._bottom);
      }
    },
    get$_left() {
      return this._left;
    },
    get$_right() {
      return this._right;
    },
    get$_edge_insets$_start() {
      return this._edge_insets$_start;
    },
    get$_edge_insets$_end() {
      return this._edge_insets$_end;
    },
    get$_top() {
      return this._top;
    },
    get$_bottom() {
      return this._bottom;
    }
  };
  A.ImageCache.prototype = {
    clear$0(_) {
      var t1, t2;
      for (t1 = this._image_cache$_cache, t2 = new A.LinkedHashMapValueIterator(t1, t1._modifications, t1._first); t2.moveNext$0();)
        t2.__js_helper$_current.dispose$0();
      t1.clear$0(0);
      for (t1 = this._pendingImages, t2 = new A.LinkedHashMapValueIterator(t1, t1._modifications, t1._first); t2.moveNext$0();)
        t2.__js_helper$_current.removeListener$0();
      t1.clear$0(0);
    }
  };
  A.ImageConfiguration.prototype = {
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      return other instanceof A.ImageConfiguration && other.bundle == _this.bundle && other.devicePixelRatio == _this.devicePixelRatio && J.$eq$(other.locale, _this.locale) && other.textDirection == _this.textDirection && J.$eq$(other.size, _this.size) && other.platform == _this.platform;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(_this.bundle, _this.devicePixelRatio, _this.locale, _this.size, _this.platform, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var t2, _this = this,
        _s19_ = "ImageConfiguration(",
        t1 = _this.bundle,
        hasArguments = t1 != null;
      t1 = hasArguments ? _s19_ + ("bundle: " + t1.toString$0(0)) : _s19_;
      t2 = _this.devicePixelRatio;
      if (t2 != null) {
        if (hasArguments)
          t1 += ", ";
        t2 = t1 + ("devicePixelRatio: " + B.JSInt_methods.toStringAsFixed$1(t2, 1));
        t1 = t2;
        hasArguments = true;
      }
      t2 = _this.locale;
      if (t2 != null) {
        if (hasArguments)
          t1 += ", ";
        t2 = t1 + ("locale: " + t2.toString$0(0));
        t1 = t2;
        hasArguments = true;
      }
      t2 = _this.textDirection;
      if (t2 != null) {
        if (hasArguments)
          t1 += ", ";
        t2 = t1 + ("textDirection: " + t2.toString$0(0));
        t1 = t2;
        hasArguments = true;
      }
      t2 = _this.size;
      if (t2 != null) {
        if (hasArguments)
          t1 += ", ";
        t2 = t1 + ("size: " + t2.toString$0(0));
        t1 = t2;
        hasArguments = true;
      }
      t2 = _this.platform;
      if (t2 != null) {
        if (hasArguments)
          t1 += ", ";
        t2 = t1 + ("platform: " + t2._name);
        t1 = t2;
      }
      t1 += ")";
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  A.Accumulator.prototype = {};
  A.InlineSpanSemanticsInformation.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      t1 = false;
      if (other instanceof A.InlineSpanSemanticsInformation)
        if (other.text === this.text)
          if (other.semanticsLabel == this.semanticsLabel)
            t1 = A.listEquals(other.stringAttributes, this.stringAttributes);
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(this.text, this.semanticsLabel, this.recognizer, false, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "InlineSpanSemanticsInformation{text: " + this.text + ", semanticsLabel: " + A.S(this.semanticsLabel) + ", recognizer: " + A.S(this.recognizer) + "}";
    }
  };
  A.InlineSpan.prototype = {
    toPlainText$1$includeSemanticsLabels(includeSemanticsLabels) {
      var t1,
        buffer = new A.StringBuffer("");
      this.computeToPlainText$3$includePlaceholders$includeSemanticsLabels(buffer, true, includeSemanticsLabels);
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    codeUnitAt$1(_, index) {
      var t1 = {};
      if (index < 0)
        return null;
      t1.result = null;
      this.visitChildren$1(new A.InlineSpan_codeUnitAt_closure(t1, index, new A.Accumulator()));
      return t1.result;
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(this))
        return false;
      return other instanceof A.TextSpan && J.$eq$(other.style, this.style);
    },
    get$hashCode(_) {
      return J.get$hashCode$(this.style);
    }
  };
  A.InlineSpan_codeUnitAt_closure.prototype = {
    call$1(span) {
      var result = span.codeUnitAtVisitor$2(this.index, this.offset);
      this._box_0.result = result;
      return result == null;
    },
    $signature: 45
  };
  A.RoundedRectangleBorder.prototype = {
    scale$1(t) {
      var t1 = this.side.scale$1(t);
      return new A.RoundedRectangleBorder(this.borderRadius.$mul(0, t), t1);
    },
    lerpFrom$2(a, t) {
      var t1, t2, _this = this;
      if (a instanceof A.RoundedRectangleBorder) {
        t1 = A.BorderSide_lerp(a.side, _this.side, t);
        t2 = A.BorderRadiusGeometry_lerp(a.borderRadius, _this.borderRadius, t);
        t2.toString;
        return new A.RoundedRectangleBorder(t2, t1);
      }
      if (a instanceof A.CircleBorder) {
        t1 = A.BorderSide_lerp(a.side, _this.side, t);
        return new A._RoundedRectangleToCircleBorder(_this.borderRadius, 1 - t, a.eccentricity, t1);
      }
      return _this.super$OutlinedBorder$lerpFrom(a, t);
    },
    lerpTo$2(b, t) {
      var t1, t2, _this = this;
      if (b instanceof A.RoundedRectangleBorder) {
        t1 = A.BorderSide_lerp(_this.side, b.side, t);
        t2 = A.BorderRadiusGeometry_lerp(_this.borderRadius, b.borderRadius, t);
        t2.toString;
        return new A.RoundedRectangleBorder(t2, t1);
      }
      if (b instanceof A.CircleBorder) {
        t1 = A.BorderSide_lerp(_this.side, b.side, t);
        return new A._RoundedRectangleToCircleBorder(_this.borderRadius, t, b.eccentricity, t1);
      }
      return _this.super$OutlinedBorder$lerpTo(b, t);
    },
    copyWith$1$side(side) {
      var t1 = side == null ? this.side : side;
      return new A.RoundedRectangleBorder(this.borderRadius, t1);
    },
    getOuterPath$2$textDirection(rect, textDirection) {
      var t1 = A.SurfacePath$();
      t1._addRRect$3(this.borderRadius.resolve$1(textDirection).toRRect$1(rect), 0, 6);
      return t1;
    },
    getOuterPath$1(rect) {
      return this.getOuterPath$2$textDirection(rect, null);
    },
    paint$3$textDirection(canvas, rect, textDirection) {
      var t2, paint, borderRect, inner,
        t1 = this.side;
      switch (t1.style.index) {
        case 0:
          break;
        case 1:
          t2 = this.borderRadius;
          if (t1.width === 0)
            canvas.drawRRect$2(t2.resolve$1(textDirection).toRRect$1(rect), t1.toPaint$0());
          else {
            paint = A.Paint$();
            paint.set$color(t1.color);
            borderRect = t2.resolve$1(textDirection).toRRect$1(rect);
            inner = borderRect.inflate$1(-t1.get$strokeInset());
            canvas.drawDRRect$3(borderRect.inflate$1(t1.get$strokeOutset()), inner, paint);
          }
          break;
      }
    },
    paint$2(canvas, rect) {
      return this.paint$3$textDirection(canvas, rect, null);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(this))
        return false;
      return other instanceof A.RoundedRectangleBorder && other.side.$eq(0, this.side) && other.borderRadius.$eq(0, this.borderRadius);
    },
    get$hashCode(_) {
      return A.Object_hash(this.side, this.borderRadius, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "RoundedRectangleBorder(" + this.side.toString$0(0) + ", " + this.borderRadius.toString$0(0) + ")";
    }
  };
  A._RoundedRectangleToCircleBorder.prototype = {
    scale$1(t) {
      var t1 = this.side.scale$1(t);
      return new A._RoundedRectangleToCircleBorder(this.borderRadius.$mul(0, t), t, this.eccentricity, t1);
    },
    lerpFrom$2(a, t) {
      var t1, t2, t3, _this = this;
      if (a instanceof A.RoundedRectangleBorder) {
        t1 = A.BorderSide_lerp(a.side, _this.side, t);
        t2 = A.BorderRadiusGeometry_lerp(a.borderRadius, _this.borderRadius, t);
        t2.toString;
        return new A._RoundedRectangleToCircleBorder(t2, _this.circularity * t, _this.eccentricity, t1);
      }
      if (a instanceof A.CircleBorder) {
        t1 = A.BorderSide_lerp(a.side, _this.side, t);
        t2 = _this.circularity;
        return new A._RoundedRectangleToCircleBorder(_this.borderRadius, t2 + (1 - t2) * (1 - t), a.eccentricity, t1);
      }
      if (a instanceof A._RoundedRectangleToCircleBorder) {
        t1 = A.BorderSide_lerp(a.side, _this.side, t);
        t2 = A.BorderRadiusGeometry_lerp(a.borderRadius, _this.borderRadius, t);
        t2.toString;
        t3 = A.lerpDouble(a.circularity, _this.circularity, t);
        t3.toString;
        return new A._RoundedRectangleToCircleBorder(t2, t3, _this.eccentricity, t1);
      }
      return _this.super$OutlinedBorder$lerpFrom(a, t);
    },
    lerpTo$2(b, t) {
      var t1, t2, t3, _this = this;
      if (b instanceof A.RoundedRectangleBorder) {
        t1 = A.BorderSide_lerp(_this.side, b.side, t);
        t2 = A.BorderRadiusGeometry_lerp(_this.borderRadius, b.borderRadius, t);
        t2.toString;
        return new A._RoundedRectangleToCircleBorder(t2, _this.circularity * (1 - t), _this.eccentricity, t1);
      }
      if (b instanceof A.CircleBorder) {
        t1 = A.BorderSide_lerp(_this.side, b.side, t);
        t2 = _this.circularity;
        return new A._RoundedRectangleToCircleBorder(_this.borderRadius, t2 + (1 - t2) * t, b.eccentricity, t1);
      }
      if (b instanceof A._RoundedRectangleToCircleBorder) {
        t1 = A.BorderSide_lerp(_this.side, b.side, t);
        t2 = A.BorderRadiusGeometry_lerp(_this.borderRadius, b.borderRadius, t);
        t2.toString;
        t3 = A.lerpDouble(_this.circularity, b.circularity, t);
        t3.toString;
        return new A._RoundedRectangleToCircleBorder(t2, t3, _this.eccentricity, t1);
      }
      return _this.super$OutlinedBorder$lerpTo(b, t);
    },
    _rounded_rectangle_border$_adjustRect$1(rect) {
      var t2, t3, t4, t5, t6, t7, t8, delta,
        t1 = this.circularity;
      if (t1 === 0 || rect.right - rect.left === rect.bottom - rect.top)
        return rect;
      t2 = rect.right;
      t3 = rect.left;
      t4 = t2 - t3;
      t5 = rect.bottom;
      t6 = rect.top;
      t7 = t5 - t6;
      t8 = 1 - this.eccentricity;
      if (t4 < t7) {
        delta = t1 * ((t7 - t4) / 2) * t8;
        return new A.Rect(t3, t6 + delta, t2, t5 - delta);
      } else {
        delta = t1 * ((t4 - t7) / 2) * t8;
        return new A.Rect(t3 + delta, t6, t2 - delta, t5);
      }
    },
    _adjustBorderRadius$2(rect, textDirection) {
      var t2, t3, t4,
        resolvedRadius = this.borderRadius.resolve$1(textDirection),
        t1 = this.circularity;
      if (t1 === 0)
        return resolvedRadius;
      t2 = this.eccentricity;
      if (t2 !== 0) {
        t3 = rect.right - rect.left;
        t4 = rect.bottom - rect.top;
        t2 = 0.5 + t2 / 2;
        if (t3 < t4) {
          t1 = A.BorderRadius_lerp(resolvedRadius, A.BorderRadius$all(new A.Radius(t3 / 2, t2 * t4 / 2)), t1);
          t1.toString;
          return t1;
        } else {
          t1 = A.BorderRadius_lerp(resolvedRadius, A.BorderRadius$all(new A.Radius(t2 * t3 / 2, t4 / 2)), t1);
          t1.toString;
          return t1;
        }
      }
      return A.BorderRadius_lerp(resolvedRadius, A.BorderRadius$circular(rect.get$shortestSide() / 2), t1);
    },
    getOuterPath$2$textDirection(rect, textDirection) {
      var t1 = A.SurfacePath$(),
        t2 = this._adjustBorderRadius$2(rect, textDirection);
      t2.toString;
      t1._addRRect$3(t2.toRRect$1(this._rounded_rectangle_border$_adjustRect$1(rect)), 0, 6);
      return t1;
    },
    getOuterPath$1(rect) {
      return this.getOuterPath$2$textDirection(rect, null);
    },
    copyWith$1$side(side) {
      var _this = this,
        t1 = side == null ? _this.side : side;
      return new A._RoundedRectangleToCircleBorder(_this.borderRadius, _this.circularity, _this.eccentricity, t1);
    },
    paint$3$textDirection(canvas, rect, textDirection) {
      var t2,
        t1 = this.side;
      switch (t1.style.index) {
        case 0:
          break;
        case 1:
          t2 = this._adjustBorderRadius$2(rect, textDirection);
          t2.toString;
          canvas.drawRRect$2(t2.toRRect$1(this._rounded_rectangle_border$_adjustRect$1(rect)).inflate$1(t1.width * t1.strokeAlign / 2), t1.toPaint$0());
          break;
      }
    },
    paint$2(canvas, rect) {
      return this.paint$3$textDirection(canvas, rect, null);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      return other instanceof A._RoundedRectangleToCircleBorder && other.side.$eq(0, _this.side) && other.borderRadius.$eq(0, _this.borderRadius) && other.circularity === _this.circularity;
    },
    get$hashCode(_) {
      return A.Object_hash(this.side, this.borderRadius, this.circularity, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this,
        _s23_ = "RoundedRectangleBorder(",
        t1 = _this.eccentricity;
      if (t1 !== 0)
        return _s23_ + _this.side.toString$0(0) + ", " + _this.borderRadius.toString$0(0) + ", " + B.JSNumber_methods.toStringAsFixed$1(_this.circularity * 100, 1) + "% of the way to being a CircleBorder that is " + B.JSNumber_methods.toStringAsFixed$1(t1 * 100, 1) + "% oval)";
      return _s23_ + _this.side.toString$0(0) + ", " + _this.borderRadius.toString$0(0) + ", " + B.JSNumber_methods.toStringAsFixed$1(_this.circularity * 100, 1) + "% of the way to being a CircleBorder)";
    }
  };
  A.TextOverflow.prototype = {
    _enumToString$0() {
      return "TextOverflow." + this._name;
    }
  };
  A.PlaceholderDimensions.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      t1 = false;
      if (other instanceof A.PlaceholderDimensions)
        if (other.size.$eq(0, _this.size))
          if (other.alignment === _this.alignment)
            t1 = other.baselineOffset == _this.baselineOffset;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(_this.size, _this.alignment, _this.baseline, _this.baselineOffset, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "PlaceholderDimensions(" + this.size.toString$0(0) + ", " + A.S(this.baseline) + ")";
    }
  };
  A.TextWidthBasis.prototype = {
    _enumToString$0() {
      return "TextWidthBasis." + this._name;
    }
  };
  A.WordBoundary.prototype = {
    getTextBoundaryAt$1(position) {
      return this._paragraph.getWordBoundary$1(new A.TextPosition(Math.max(position, 0), B.TextAffinity_1));
    },
    _codePointAt$1(index) {
      var t1 = this._text_painter$_text,
        codeUnitAtIndex = t1.codeUnitAt$1(0, index);
      if (codeUnitAtIndex == null)
        return null;
      switch (codeUnitAtIndex & 64512) {
        case 55296:
          t1 = t1.codeUnitAt$1(0, index + 1);
          t1.toString;
          return (codeUnitAtIndex << 10 >>> 0) + t1 + -56613888;
        case 56320:
          t1 = t1.codeUnitAt$1(0, index - 1);
          t1.toString;
          return (t1 << 10 >>> 0) + codeUnitAtIndex + -56613888;
        default:
          return codeUnitAtIndex;
      }
    },
    _skipSpacesAndPunctuations$2(offset, $forward) {
      var t2,
        innerCodePoint = this._codePointAt$1($forward ? offset - 1 : offset),
        t1 = $forward ? offset : offset - 1,
        outerCodeUnit = this._text_painter$_text.codeUnitAt$1(0, t1);
      if (!(innerCodePoint == null || outerCodeUnit == null || A.WordBoundary__isNewline(innerCodePoint) || A.WordBoundary__isNewline(outerCodeUnit))) {
        t1 = A.RegExp_RegExp("[\\p{Space_Separator}\\p{Punctuation}]", true);
        t2 = A.Primitives_stringFromCharCode(innerCodePoint);
        t1 = !t1._nativeRegExp.test(t2);
      } else
        t1 = true;
      return t1;
    }
  };
  A._UntilTextBoundary.prototype = {
    getLeadingTextBoundaryAt$1(position) {
      var offset;
      if (position < 0)
        return null;
      offset = this._textBoundary.getLeadingTextBoundaryAt$1(position);
      return offset == null || this._predicate.call$2(offset, false) ? offset : this.getLeadingTextBoundaryAt$1(offset - 1);
    },
    getTrailingTextBoundaryAt$1(position) {
      var offset = this._textBoundary.getTrailingTextBoundaryAt$1(Math.max(position, 0));
      return offset == null || this._predicate.call$2(offset, true) ? offset : this.getTrailingTextBoundaryAt$1(offset);
    }
  };
  A._CaretMetrics.prototype = {};
  A.TextPainter.prototype = {
    markNeedsLayout$0() {
      var _this = this;
      _this._previousCaretPrototype = _this._previousCaretPosition = _this._lineMetricsCache = _this._paragraph = null;
    },
    set$text(value) {
      var t1, t2, comparison, _this = this;
      if (J.$eq$(_this._text_painter$_text, value))
        return;
      t1 = _this._text_painter$_text;
      t1 = t1 == null ? null : t1.style;
      t2 = value == null;
      if (!J.$eq$(t1, t2 ? null : value.style))
        _this._layoutTemplate = null;
      if (t2)
        comparison = B.RenderComparison_3;
      else {
        t1 = _this._text_painter$_text;
        t1 = t1 == null ? null : t1.compareTo$1(0, value);
        comparison = t1 == null ? B.RenderComparison_3 : t1;
      }
      _this._text_painter$_text = value;
      _this._cachedPlainText = null;
      t1 = comparison.index;
      if (t1 >= 3)
        _this.markNeedsLayout$0();
      else if (t1 >= 2)
        _this._rebuildParagraphForPaint = true;
    },
    get$plainText() {
      var t1 = this._cachedPlainText;
      if (t1 == null) {
        t1 = this._text_painter$_text;
        t1 = t1 == null ? null : t1.toPlainText$1$includeSemanticsLabels(false);
        this._cachedPlainText = t1;
      }
      return t1 == null ? "" : t1;
    },
    set$textAlign(value) {
      if (this._textAlign === value)
        return;
      this._textAlign = value;
      this.markNeedsLayout$0();
    },
    set$textDirection(value) {
      var _this = this;
      if (_this._text_painter$_textDirection === value)
        return;
      _this._text_painter$_textDirection = value;
      _this.markNeedsLayout$0();
      _this._layoutTemplate = null;
    },
    set$textScaleFactor(value) {
      var _this = this;
      if (_this._text_painter$_textScaleFactor === value)
        return;
      _this._text_painter$_textScaleFactor = value;
      _this.markNeedsLayout$0();
      _this._layoutTemplate = null;
    },
    set$ellipsis(value) {
      if (this._text_painter$_ellipsis == value)
        return;
      this._text_painter$_ellipsis = value;
      this.markNeedsLayout$0();
    },
    set$locale(value) {
      if (J.$eq$(this._text_painter$_locale, value))
        return;
      this._text_painter$_locale = value;
      this.markNeedsLayout$0();
    },
    set$maxLines(value) {
      if (this._text_painter$_maxLines == value)
        return;
      this._text_painter$_maxLines = value;
      this.markNeedsLayout$0();
    },
    set$textWidthBasis(value) {
      if (this._textWidthBasis === value)
        return;
      this._textWidthBasis = value;
      this.markNeedsLayout$0();
    },
    setPlaceholderDimensions$1(value) {
      if (value == null || value.length === 0 || A.listEquals(value, this._placeholderDimensions))
        return;
      this._placeholderDimensions = value;
      this.markNeedsLayout$0();
    },
    _createParagraphStyle$1(defaultTextDirection) {
      var t2, t3, t4, t5, effectiveTextHeightBehavior, t6, t7, leadingDistribution, t8, t9, t10, t11, _this = this, _null = null,
        t1 = _this._text_painter$_text.style;
      if (t1 == null)
        t1 = _null;
      else {
        t2 = _this._textAlign;
        t3 = _this._text_painter$_textDirection;
        if (t3 == null)
          t3 = defaultTextDirection;
        t4 = _this._text_painter$_textScaleFactor;
        t5 = _this._text_painter$_maxLines;
        effectiveTextHeightBehavior = _this._textHeightBehavior;
        t6 = _this._text_painter$_ellipsis;
        t7 = _this._text_painter$_locale;
        leadingDistribution = t1.leadingDistribution;
        effectiveTextHeightBehavior = leadingDistribution == null ? _null : new A.TextHeightBehavior(true, true, leadingDistribution);
        t8 = t1.fontWeight;
        t9 = t1.fontStyle;
        t10 = t1.fontFamily;
        t11 = t1.fontSize;
        if (t11 == null)
          t11 = 14;
        t1 = t1.height;
        t1 = A.ParagraphStyle$(t6, t10, t11 * t4, t9, t8, t1, t7, t5, _null, t2, t3, effectiveTextHeightBehavior);
      }
      if (t1 == null) {
        t1 = _this._textAlign;
        t2 = _this._text_painter$_textDirection;
        if (t2 == null)
          t2 = defaultTextDirection;
        t3 = _this._text_painter$_textScaleFactor;
        t4 = _this._text_painter$_maxLines;
        t5 = _this._textHeightBehavior;
        t5 = A.ParagraphStyle$(_this._text_painter$_ellipsis, _null, 14 * t3, _null, _null, _null, _this._text_painter$_locale, t4, _null, t1, t2, t5);
        t1 = t5;
      }
      return t1;
    },
    _createParagraphStyle$0() {
      return this._createParagraphStyle$1(null);
    },
    get$preferredLineHeight() {
      var builder, textStyle, _this = this,
        t1 = _this._layoutTemplate;
      if (t1 == null) {
        builder = A.ParagraphBuilder_ParagraphBuilder(_this._createParagraphStyle$1(B.TextDirection_0));
        t1 = _this._text_painter$_text;
        if (t1 == null)
          textStyle = null;
        else {
          t1 = t1.style;
          textStyle = t1 == null ? null : t1.getTextStyle$1$textScaleFactor(_this._text_painter$_textScaleFactor);
        }
        if (textStyle != null)
          builder.pushStyle$1(textStyle);
        builder.addText$1(" ");
        t1 = builder.build$0();
        t1.layout$1(B.ParagraphConstraints_t5V);
        _this._layoutTemplate = t1;
      }
      return t1._height;
    },
    get$width() {
      var t1 = this._textWidthBasis,
        t2 = this._paragraph;
      if (t1 === B.TextWidthBasis_1) {
        t2.toString;
        t1 = 0;
      } else
        t1 = t2._width;
      return Math.ceil(t1);
    },
    computeDistanceToActualBaseline$1(baseline) {
      switch (baseline.index) {
        case 0:
          this._paragraph.toString;
          return 0;
        case 1:
          this._paragraph.toString;
          return 0;
      }
    },
    _createParagraph$0() {
      var builder, t1, paragraph, _this = this,
        text = _this._text_painter$_text;
      if (text == null)
        throw A.wrapException(A.StateError$("TextPainter.text must be set to a non-null value before using the TextPainter."));
      builder = A.ParagraphBuilder_ParagraphBuilder(_this._createParagraphStyle$0());
      t1 = _this._text_painter$_textScaleFactor;
      text.build$3$dimensions$textScaleFactor(builder, _this._placeholderDimensions, t1);
      _this._inlinePlaceholderScales = builder._placeholderScales;
      paragraph = builder.build$0();
      _this._paragraph = paragraph;
      _this._rebuildParagraphForPaint = false;
      return paragraph;
    },
    _layoutParagraph$2(minWidth, maxWidth) {
      var newWidth, _this = this;
      _this._paragraph.layout$1(new A.ParagraphConstraints(maxWidth));
      if (minWidth !== maxWidth) {
        switch (_this._textWidthBasis.index) {
          case 1:
            _this._paragraph.toString;
            newWidth = Math.ceil(0);
            break;
          case 0:
            newWidth = Math.ceil(_this._paragraph._maxIntrinsicWidth);
            break;
          default:
            newWidth = null;
        }
        newWidth = A.clampDouble(newWidth, minWidth, maxWidth);
        if (newWidth !== Math.ceil(_this._paragraph._width))
          _this._paragraph.layout$1(new A.ParagraphConstraints(newWidth));
      }
    },
    layout$2$maxWidth$minWidth(maxWidth, minWidth) {
      var _this = this,
        t1 = _this._paragraph == null;
      if (!t1 && minWidth === _this._lastMinWidth && maxWidth === _this._lastMaxWidth)
        return;
      if (_this._rebuildParagraphForPaint || t1)
        _this._createParagraph$0();
      _this._lastMinWidth = minWidth;
      _this._lastMaxWidth = maxWidth;
      _this._previousCaretPrototype = _this._previousCaretPosition = _this._lineMetricsCache = null;
      _this._layoutParagraph$2(minWidth, maxWidth);
      _this._inlinePlaceholderBoxes = _this._paragraph.getBoxesForPlaceholders$0();
    },
    layout$0() {
      return this.layout$2$maxWidth$minWidth(1 / 0, 0);
    },
    paint$2(canvas, offset) {
      var t1, _this = this,
        minWidth = _this._lastMinWidth,
        maxWidth = _this._lastMaxWidth;
      if (_this._paragraph == null || minWidth == null || maxWidth == null)
        throw A.wrapException(A.StateError$("TextPainter.paint called when text geometry was not yet calculated.\nPlease call layout() before paint() to position the text before painting it."));
      if (_this._rebuildParagraphForPaint) {
        _this._createParagraph$0();
        _this._layoutParagraph$2(minWidth, maxWidth);
      }
      t1 = _this._paragraph;
      t1.toString;
      canvas._addMethod$1(25);
      canvas._objects.push(t1);
    },
    _getRectFromUpstream$2(offset, caretPrototype) {
      var prevCodeUnit, t1, prevRuneOffset, t2, _this = this,
        plainTextLength = _this.get$plainText().length;
      if (plainTextLength === 0 || offset > plainTextLength)
        return null;
      prevCodeUnit = B.JSString_methods.codeUnitAt$1(_this.get$plainText(), Math.max(0, offset - 1));
      t1 = prevCodeUnit & 64512;
      prevRuneOffset = offset - (t1 === 55296 || t1 === 56320 || _this._text_painter$_text.codeUnitAt$1(0, offset) === 8205 || prevCodeUnit === 8207 || prevCodeUnit === 8206 ? 2 : 1);
      t2 = _this._paragraph;
      t2.toString;
      for (; true;)
        t2.getBoxesForRange$3$boxHeightStyle(prevRuneOffset, offset, B.BoxHeightStyle_5);
      return null;
    },
    _getRectFromDownstream$2(offset, caretPrototype) {
      var nextCodeUnit, t1, nextRuneOffset, t2,
        plainTextLength = this.get$plainText().length;
      if (plainTextLength === 0 || offset < 0)
        return null;
      nextCodeUnit = B.JSString_methods.codeUnitAt$1(this.get$plainText(), Math.min(offset, plainTextLength - 1));
      t1 = nextCodeUnit & 64512;
      nextRuneOffset = offset + (t1 === 55296 || t1 === 56320 || nextCodeUnit === 8205 || nextCodeUnit === 8207 || nextCodeUnit === 8206 ? 2 : 1);
      t2 = this._paragraph;
      t2.toString;
      for (; true;)
        t2.getBoxesForRange$3$boxHeightStyle(offset, nextRuneOffset, B.BoxHeightStyle_5);
      return null;
    },
    get$_emptyOffset() {
      var _this = this;
      switch (_this._textAlign.index) {
        case 0:
          return B.Offset_0_0;
        case 1:
          return new A.Offset(_this.get$width(), 0);
        case 2:
          return new A.Offset(_this.get$width() / 2, 0);
        case 3:
        case 4:
          switch (_this._text_painter$_textDirection.index) {
            case 0:
              return new A.Offset(_this.get$width(), 0);
            case 1:
              return B.Offset_0_0;
          }
          break;
        case 5:
          switch (_this._text_painter$_textDirection.index) {
            case 0:
              return B.Offset_0_0;
            case 1:
              return new A.Offset(_this.get$width(), 0);
          }
          break;
      }
    },
    _computeCaretMetrics$2(position, caretPrototype) {
      var offset, rect, t1, t2, _this = this;
      if (position.$eq(0, _this._previousCaretPosition) && caretPrototype.$eq(0, _this._previousCaretPrototype))
        return;
      offset = position.offset;
      switch (position.affinity.index) {
        case 0:
          rect = _this._getRectFromUpstream$2(offset, caretPrototype);
          if (rect == null)
            rect = _this._getRectFromDownstream$2(offset, caretPrototype);
          break;
        case 1:
          rect = _this._getRectFromDownstream$2(offset, caretPrototype);
          if (rect == null)
            rect = _this._getRectFromUpstream$2(offset, caretPrototype);
          break;
        default:
          rect = null;
      }
      t1 = rect != null;
      t2 = t1 ? new A.Offset(rect.left, rect.top) : _this.get$_emptyOffset();
      _this.__TextPainter__caretMetrics_A = new A._CaretMetrics(t2, t1 ? rect.bottom - rect.top : null);
      _this._previousCaretPosition = position;
      _this._previousCaretPrototype = caretPrototype;
    },
    getBoxesForSelection$3$boxHeightStyle$boxWidthStyle(selection, boxHeightStyle, boxWidthStyle) {
      return this._paragraph.getBoxesForRange$4$boxHeightStyle$boxWidthStyle(selection.start, selection.end, boxHeightStyle, boxWidthStyle);
    },
    getPositionForOffset$1(offset) {
      return this._paragraph.getPositionForOffset$1(offset);
    },
    getLineBoundary$1(position) {
      return this._paragraph.getLineBoundary$1(position);
    },
    dispose$0() {
      this._layoutTemplate = null;
      this._text_painter$_text = this._paragraph = null;
    }
  };
  A.TextSpan.prototype = {
    get$cursor() {
      return this.mouseCursor;
    },
    get$validForMouseTracker() {
      return true;
    },
    handleEvent$2($event, entry) {
    },
    build$3$dimensions$textScaleFactor(builder, dimensions, textScaleFactor) {
      var exception, stack, exception0, _i,
        t1 = this.style,
        hasStyle = t1 != null;
      if (hasStyle)
        builder.pushStyle$1(t1.getTextStyle$1$textScaleFactor(textScaleFactor));
      t1 = this.text;
      if (t1 != null)
        try {
          builder.addText$1(t1);
        } catch (exception0) {
          t1 = A.unwrapException(exception0);
          if (t1 instanceof A.ArgumentError) {
            exception = t1;
            stack = A.getTraceFromException(exception0);
            A.FlutterError_reportError(new A.FlutterErrorDetails(exception, stack, "painting library", A.ErrorDescription$("while building a TextSpan"), null, false));
            builder.addText$1("\ufffd");
          } else
            throw exception0;
        }
      t1 = this.children;
      if (t1 != null)
        for (_i = 0; _i < 1; ++_i)
          t1[_i].build$3$dimensions$textScaleFactor(builder, dimensions, textScaleFactor);
      if (hasStyle)
        builder._currentStyle = builder._styleStack.pop();
    },
    visitChildren$1(visitor) {
      var t1, _i;
      if (this.text != null)
        if (!visitor.call$1(this))
          return false;
      t1 = this.children;
      if (t1 != null)
        for (_i = 0; _i < 1; ++_i)
          if (!t1[_i].visitChildren$1(visitor))
            return false;
      return true;
    },
    computeToPlainText$3$includePlaceholders$includeSemanticsLabels(buffer, includePlaceholders, includeSemanticsLabels) {
      var _i,
        t1 = this.text;
      if (t1 != null)
        buffer._contents += t1;
      t1 = this.children;
      if (t1 != null)
        for (_i = 0; _i < 1; ++_i)
          t1[_i].computeToPlainText$3$includePlaceholders$includeSemanticsLabels(buffer, true, includeSemanticsLabels);
    },
    computeSemanticsInformation$3$inheritedLocale$inheritedSpellOut(collector, inheritedLocale, inheritedSpellOut) {
      var t2, _i,
        t1 = this.text;
      if (t1 != null) {
        t2 = A._setArrayType([], type$.JSArray_StringAttribute);
        collector.push(A.InlineSpanSemanticsInformation$(t1, null, null, t2));
      }
      t1 = this.children;
      if (t1 != null)
        for (_i = 0; _i < 1; ++_i)
          t1[_i].computeSemanticsInformation$3$inheritedLocale$inheritedSpellOut(collector, inheritedLocale, false);
    },
    computeSemanticsInformation$1(collector) {
      return this.computeSemanticsInformation$3$inheritedLocale$inheritedSpellOut(collector, null, false);
    },
    codeUnitAtVisitor$2(index, offset) {
      var t2, t3, t4,
        t1 = this.text;
      if (t1 == null)
        return null;
      t2 = offset._inline_span$_value;
      t3 = index - t2;
      t4 = t1.length;
      if (t3 < t4)
        return t1.charCodeAt(t3);
      offset._inline_span$_value = t2 + t4;
      return null;
    },
    compareTo$1(_, other) {
      var t1, t2, candidate, result, index, _this = this;
      if (_this === other)
        return B.RenderComparison_0;
      if (A.getRuntimeTypeOfDartObject(other) !== A.getRuntimeTypeOfDartObject(_this))
        return B.RenderComparison_3;
      if (other.text == _this.text) {
        t1 = _this.children == null ? null : 1;
        t1 = t1 != (other.children == null ? null : 1) || _this.style == null !== (other.style == null);
      } else
        t1 = true;
      if (t1)
        return B.RenderComparison_3;
      t1 = _this.style;
      if (t1 != null) {
        t2 = other.style;
        t2.toString;
        candidate = t1.compareTo$1(0, t2);
        result = candidate.index > 0 ? candidate : B.RenderComparison_0;
        if (result === B.RenderComparison_3)
          return result;
      } else
        result = B.RenderComparison_0;
      t1 = _this.children;
      if (t1 != null)
        for (t2 = other.children, index = 0; index < 1; ++index) {
          candidate = t1[index].compareTo$1(0, t2[index]);
          if (candidate.index > result.index)
            result = candidate;
          if (result === B.RenderComparison_3)
            return result;
        }
      return result;
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      if (!_this.super$InlineSpan$$eq(0, other))
        return false;
      return other instanceof A.TextSpan && other.text == _this.text && _this.mouseCursor.$eq(0, other.mouseCursor) && A.listEquals(other.children, _this.children);
    },
    get$hashCode(_) {
      var _this = this, _null = null,
        t1 = A.InlineSpan.prototype.get$hashCode.call(_this, 0),
        t2 = _this.children;
      t2 = t2 == null ? _null : A.Object_hashAll(t2);
      return A.Object_hash(t1, _this.text, _null, _null, _null, _null, _this.mouseCursor, t2, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toStringShort$0() {
      return "TextSpan";
    },
    $isHitTestTarget: 1,
    $isMouseTrackerAnnotation: 1,
    get$onEnter() {
      return null;
    },
    get$onExit() {
      return null;
    }
  };
  A.TextStyle0.prototype = {
    get$fontFamilyFallback() {
      return this._text_style$_fontFamilyFallback;
    },
    get$_text_style$_fontFamily() {
      return this.fontFamily;
    },
    copyWith$25$background$backgroundColor$color$debugLabel$decoration$decorationColor$decorationStyle$decorationThickness$fontFamily$fontFamilyFallback$fontFeatures$fontSize$fontStyle$fontVariations$fontWeight$foreground$height$leadingDistribution$letterSpacing$locale$overflow$package$shadows$textBaseline$wordSpacing(background, backgroundColor, color, debugLabel, decoration, decorationColor, decorationStyle, decorationThickness, fontFamily, fontFamilyFallback, fontFeatures, fontSize, fontStyle, fontVariations, fontWeight, foreground, height, leadingDistribution, letterSpacing, locale, overflow, $package, shadows, textBaseline, wordSpacing) {
      var t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, _this = this,
        t1 = _this.foreground;
      if (t1 == null && foreground == null)
        t2 = color == null ? _this.color : color;
      else
        t2 = null;
      t3 = _this.background;
      if (t3 == null && background == null)
        t4 = backgroundColor == null ? _this.backgroundColor : backgroundColor;
      else
        t4 = null;
      t5 = fontSize == null ? _this.fontSize : fontSize;
      t6 = fontWeight == null ? _this.fontWeight : fontWeight;
      t7 = letterSpacing == null ? _this.letterSpacing : letterSpacing;
      t8 = wordSpacing == null ? _this.wordSpacing : wordSpacing;
      t9 = textBaseline == null ? _this.textBaseline : textBaseline;
      t10 = height == null ? _this.height : height;
      t11 = leadingDistribution == null ? _this.leadingDistribution : leadingDistribution;
      t1 = foreground == null ? t1 : foreground;
      t3 = background == null ? t3 : background;
      t12 = shadows == null ? _this.shadows : shadows;
      t13 = fontVariations == null ? _this.fontVariations : fontVariations;
      t14 = decoration == null ? _this.decoration : decoration;
      t15 = decorationColor == null ? _this.decorationColor : decorationColor;
      t16 = decorationStyle == null ? _this.decorationStyle : decorationStyle;
      t17 = decorationThickness == null ? _this.decorationThickness : decorationThickness;
      t18 = fontFamily == null ? _this.get$_text_style$_fontFamily() : fontFamily;
      t19 = fontFamilyFallback == null ? _this._text_style$_fontFamilyFallback : fontFamilyFallback;
      return A.TextStyle$0(t3, t4, t2, null, t14, t15, t16, t17, t18, t19, _this.fontFeatures, t5, _this.fontStyle, t13, t6, t1, t10, _this.inherit, t11, t7, _this.locale, _this.overflow, _this._package, t12, t9, t8);
    },
    copyWith$1$color(color) {
      var _null = null;
      return this.copyWith$25$background$backgroundColor$color$debugLabel$decoration$decorationColor$decorationStyle$decorationThickness$fontFamily$fontFamilyFallback$fontFeatures$fontSize$fontStyle$fontVariations$fontWeight$foreground$height$leadingDistribution$letterSpacing$locale$overflow$package$shadows$textBaseline$wordSpacing(_null, _null, color, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
    },
    copyWith$2$color$fontSize(color, fontSize) {
      var _null = null;
      return this.copyWith$25$background$backgroundColor$color$debugLabel$decoration$decorationColor$decorationStyle$decorationThickness$fontFamily$fontFamilyFallback$fontFeatures$fontSize$fontStyle$fontVariations$fontWeight$foreground$height$leadingDistribution$letterSpacing$locale$overflow$package$shadows$textBaseline$wordSpacing(_null, _null, color, _null, _null, _null, _null, _null, _null, _null, _null, fontSize, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
    },
    copyWith$3$backgroundColor$color$decorationColor(backgroundColor, color, decorationColor) {
      var _null = null;
      return this.copyWith$25$background$backgroundColor$color$debugLabel$decoration$decorationColor$decorationStyle$decorationThickness$fontFamily$fontFamilyFallback$fontFeatures$fontSize$fontStyle$fontVariations$fontWeight$foreground$height$leadingDistribution$letterSpacing$locale$overflow$package$shadows$textBaseline$wordSpacing(_null, backgroundColor, color, _null, _null, decorationColor, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
    },
    merge$1(other) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23;
      if (other == null)
        return this;
      if (!other.inherit)
        return other;
      t1 = other.color;
      t2 = other.backgroundColor;
      t3 = other.fontSize;
      t4 = other.fontWeight;
      t5 = other.fontStyle;
      t6 = other.letterSpacing;
      t7 = other.wordSpacing;
      t8 = other.textBaseline;
      t9 = other.height;
      t10 = other.leadingDistribution;
      t11 = other.locale;
      t12 = other.foreground;
      t13 = other.background;
      t14 = other.shadows;
      t15 = other.fontFeatures;
      t16 = other.fontVariations;
      t17 = other.decoration;
      t18 = other.decorationColor;
      t19 = other.decorationStyle;
      t20 = other.decorationThickness;
      t21 = other.get$_text_style$_fontFamily();
      t22 = other._text_style$_fontFamilyFallback;
      t23 = other._package;
      return this.copyWith$25$background$backgroundColor$color$debugLabel$decoration$decorationColor$decorationStyle$decorationThickness$fontFamily$fontFamilyFallback$fontFeatures$fontSize$fontStyle$fontVariations$fontWeight$foreground$height$leadingDistribution$letterSpacing$locale$overflow$package$shadows$textBaseline$wordSpacing(t13, t2, t1, null, t17, t18, t19, t20, t21, t22, t15, t3, t5, t16, t4, t12, t9, t10, t6, t11, other.overflow, t23, t14, t8, t7);
    },
    getTextStyle$1$textScaleFactor(textScaleFactor) {
      var t3, t4, _this = this,
        t1 = _this.get$fontFamilyFallback(),
        t2 = _this.fontSize;
      t2 = t2 == null ? null : t2 * textScaleFactor;
      t3 = _this.background;
      if (t3 == null) {
        t3 = _this.backgroundColor;
        if (t3 != null) {
          t4 = A.Paint$();
          t4.set$color(t3);
          t3 = t4;
        } else
          t3 = null;
      }
      return A.TextStyle$(t3, _this.color, _this.decoration, _this.decorationColor, _this.decorationStyle, _this.decorationThickness, _this.fontFamily, t1, _this.fontFeatures, t2, _this.fontStyle, _this.fontVariations, _this.fontWeight, _this.foreground, _this.height, _this.leadingDistribution, _this.letterSpacing, _this.locale, _this.shadows, _this.textBaseline, _this.wordSpacing);
    },
    compareTo$1(_, other) {
      var t1, _this = this;
      if (_this === other)
        return B.RenderComparison_0;
      t1 = true;
      if (_this.inherit === other.inherit)
        if (_this.fontFamily == other.fontFamily)
          if (_this.fontSize == other.fontSize)
            if (_this.fontWeight == other.fontWeight)
              if (_this.letterSpacing == other.letterSpacing)
                if (_this.wordSpacing == other.wordSpacing)
                  if (_this.textBaseline == other.textBaseline)
                    if (_this.height == other.height)
                      if (_this.leadingDistribution == other.leadingDistribution)
                        if (_this.foreground == other.foreground)
                          if (_this.background == other.background)
                            if (A.listEquals(_this.shadows, other.shadows))
                              if (A.listEquals(_this.fontFeatures, other.fontFeatures))
                                if (A.listEquals(_this.fontVariations, other.fontVariations)) {
                                  t1 = A.listEquals(_this.get$fontFamilyFallback(), other.get$fontFamilyFallback());
                                  t1 = !t1;
                                }
      if (t1)
        return B.RenderComparison_3;
      if (!J.$eq$(_this.color, other.color) || !J.$eq$(_this.backgroundColor, other.backgroundColor) || !J.$eq$(_this.decoration, other.decoration) || !J.$eq$(_this.decorationColor, other.decorationColor) || _this.decorationStyle != other.decorationStyle || _this.decorationThickness != other.decorationThickness)
        return B.RenderComparison_2;
      return B.RenderComparison_0;
    },
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      t1 = false;
      if (other instanceof A.TextStyle0)
        if (other.inherit === _this.inherit)
          if (J.$eq$(other.color, _this.color))
            if (J.$eq$(other.backgroundColor, _this.backgroundColor))
              if (other.fontSize == _this.fontSize)
                if (other.fontWeight == _this.fontWeight)
                  if (other.letterSpacing == _this.letterSpacing)
                    if (other.wordSpacing == _this.wordSpacing)
                      if (other.textBaseline == _this.textBaseline)
                        if (other.height == _this.height)
                          if (other.leadingDistribution == _this.leadingDistribution)
                            if (other.foreground == _this.foreground)
                              if (other.background == _this.background)
                                if (A.listEquals(other.shadows, _this.shadows))
                                  if (A.listEquals(other.fontFeatures, _this.fontFeatures))
                                    if (A.listEquals(other.fontVariations, _this.fontVariations))
                                      if (J.$eq$(other.decoration, _this.decoration))
                                        if (J.$eq$(other.decorationColor, _this.decorationColor))
                                          if (other.decorationStyle == _this.decorationStyle)
                                            if (other.decorationThickness == _this.decorationThickness)
                                              if (other.fontFamily == _this.fontFamily)
                                                t1 = A.listEquals(other.get$fontFamilyFallback(), _this.get$fontFamilyFallback());
      return t1;
    },
    get$hashCode(_) {
      var t2, _this = this, _null = null,
        fontFamilyFallback = _this.get$fontFamilyFallback(),
        t1 = fontFamilyFallback == null ? _null : A.Object_hashAll(fontFamilyFallback),
        fontHash = A.Object_hash(_this.decorationStyle, _this.decorationThickness, _this.fontFamily, t1, _this._package, _this.overflow, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue),
        shadows = _this.shadows,
        fontVariations = _this.fontVariations;
      t1 = shadows == null ? _null : A.Object_hashAll(shadows);
      t2 = fontVariations == null ? _null : A.Object_hashAll(fontVariations);
      return A.Object_hash(_this.inherit, _this.color, _this.backgroundColor, _this.fontSize, _this.fontWeight, _this.fontStyle, _this.letterSpacing, _this.wordSpacing, _this.textBaseline, _this.height, _this.leadingDistribution, _this.locale, _this.foreground, _this.background, t1, _null, t2, _this.decoration, _this.decorationColor, fontHash);
    },
    toStringShort$0() {
      return "TextStyle";
    }
  };
  A._TextStyle_Object_Diagnosticable.prototype = {};
  A.FrictionSimulation.prototype = {
    FrictionSimulation$5$constantDeceleration$tolerance(drag, position, velocity, constantDeceleration, tolerance) {
      this._finalTime = A._newtonsMethod(new A.FrictionSimulation_closure(this), this.get$dx(), 0, 10, 0);
    },
    x$1(time) {
      var t1, t2, _this = this;
      if (time > _this._finalTime)
        return _this.get$finalX();
      t1 = _this._v;
      t2 = _this._dragLog;
      return _this._friction_simulation$_x + t1 * Math.pow(_this._drag, time) / t2 - t1 / t2 - _this._constantDeceleration / 2 * time * time;
    },
    dx$1(time) {
      var _this = this;
      if (time > _this._finalTime)
        return 0;
      return _this._v * Math.pow(_this._drag, time) - _this._constantDeceleration * time;
    },
    get$finalX() {
      var _this = this;
      if (_this._constantDeceleration === 0)
        return _this._friction_simulation$_x - _this._v / _this._dragLog;
      return _this.x$1(_this._finalTime);
    },
    timeAtX$1(x) {
      var t2, _this = this,
        t1 = _this._friction_simulation$_x;
      if (x === t1)
        return 0;
      t2 = _this._v;
      if (t2 !== 0)
        if (t2 > 0)
          t1 = x < t1 || x > _this.get$finalX();
        else
          t1 = x > t1 || x < _this.get$finalX();
      else
        t1 = true;
      if (t1)
        return 1 / 0;
      return A._newtonsMethod(_this.get$dx(), _this.get$x(), 0, 10, x);
    },
    isDone$1(time) {
      return Math.abs(this.dx$1(time)) < this.tolerance.velocity;
    },
    toString$0(_) {
      return "FrictionSimulation(c\u2093: " + B.JSNumber_methods.toStringAsFixed$1(this._drag, 1) + ", x\u2080: " + B.JSNumber_methods.toStringAsFixed$1(this._friction_simulation$_x, 1) + ", dx\u2080: " + B.JSNumber_methods.toStringAsFixed$1(this._v, 1) + ")";
    }
  };
  A.FrictionSimulation_closure.prototype = {
    call$1(time) {
      var t1 = this.$this;
      return t1._v * Math.pow(t1._drag, time) * t1._dragLog - t1._constantDeceleration;
    },
    $signature: 46
  };
  A.Simulation.prototype = {
    toString$0(_) {
      return "Simulation";
    }
  };
  A.SpringDescription.prototype = {
    toString$0(_) {
      return "SpringDescription(mass: " + B.JSNumber_methods.toStringAsFixed$1(this.mass, 1) + ", stiffness: " + B.JSInt_methods.toStringAsFixed$1(this.stiffness, 1) + ", damping: " + B.JSNumber_methods.toStringAsFixed$1(this.damping, 1) + ")";
    }
  };
  A.SpringType.prototype = {
    _enumToString$0() {
      return "SpringType." + this._name;
    }
  };
  A.SpringSimulation.prototype = {
    x$1(time) {
      return this._endPosition + this._solution.x$1(time);
    },
    dx$1(time) {
      return this._solution.dx$1(time);
    },
    isDone$1(time) {
      var t1 = this._solution;
      return A.nearEqual(t1.x$1(time), 0, this.tolerance.distance) && A.nearEqual(t1.dx$1(time), 0, this.tolerance.velocity);
    },
    toString$0(_) {
      return "SpringSimulation(end: " + B.JSNumber_methods.toStringAsFixed$1(this._endPosition, 1) + ", " + this._solution.get$type().toString$0(0) + ")";
    }
  };
  A.ScrollSpringSimulation.prototype = {
    x$1(time) {
      return this.isDone$1(time) ? this._endPosition : this.super$SpringSimulation$x(time);
    }
  };
  A._CriticalSolution.prototype = {
    x$1(time) {
      return (this._c1 + this._c2 * time) * Math.pow(2.718281828459045, this._r * time);
    },
    dx$1(time) {
      var t1 = this._r,
        power = Math.pow(2.718281828459045, t1 * time),
        t2 = this._c2;
      return t1 * (this._c1 + t2 * time) * power + t2 * power;
    },
    get$type() {
      return B.SpringType_0;
    }
  };
  A._OverdampedSolution.prototype = {
    x$1(time) {
      var _this = this;
      return _this._c1 * Math.pow(2.718281828459045, _this._r1 * time) + _this._c2 * Math.pow(2.718281828459045, _this._r2 * time);
    },
    dx$1(time) {
      var _this = this,
        t1 = _this._r1,
        t2 = _this._r2;
      return _this._c1 * t1 * Math.pow(2.718281828459045, t1 * time) + _this._c2 * t2 * Math.pow(2.718281828459045, t2 * time);
    },
    get$type() {
      return B.SpringType_2;
    }
  };
  A._UnderdampedSolution.prototype = {
    x$1(time) {
      var _this = this,
        t1 = _this._spring_simulation$_w * time;
      return Math.pow(2.718281828459045, _this._r * time) * (_this._c1 * Math.cos(t1) + _this._c2 * Math.sin(t1));
    },
    dx$1(time) {
      var t4, _this = this,
        t1 = _this._r,
        power = Math.pow(2.718281828459045, t1 * time),
        t2 = _this._spring_simulation$_w,
        t3 = t2 * time,
        cosine = Math.cos(t3),
        sine = Math.sin(t3);
      t3 = _this._c2;
      t4 = _this._c1;
      return power * (t3 * t2 * cosine - t4 * t2 * sine) + t1 * power * (t3 * sine + t4 * cosine);
    },
    get$type() {
      return B.SpringType_1;
    }
  };
  A.Tolerance.prototype = {
    toString$0(_) {
      return "Tolerance(distance: \xb1" + A.S(this.distance) + ", time: \xb10.001, velocity: \xb1" + A.S(this.velocity) + ")";
    }
  };
  A.RendererBinding.prototype = {
    handleMetricsChanged$0() {
      var _this = this,
        t1 = _this.RendererBinding___RendererBinding__pipelineOwner_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1 = t1._rootNode;
      t1.toString;
      t1.set$configuration(_this.createViewConfiguration$0());
      if (_this.RendererBinding___RendererBinding__pipelineOwner_A._rootNode.RenderObjectWithChildMixin__child != null)
        _this.scheduleForcedFrame$0();
    },
    createViewConfiguration$0() {
      var t1 = $.$get$window(),
        devicePixelRatio = t1.get$_viewConfiguration().devicePixelRatio;
      t1 = t1.get$_viewConfiguration().geometry;
      return new A.ViewConfiguration(new A.Size(t1.right - t1.left, t1.bottom - t1.top).$div(0, devicePixelRatio), devicePixelRatio);
    },
    _handleSemanticsEnabledChanged$0() {
      var t1, _this = this;
      if (_this.get$_semanticsEnabled()._change_notifier$_value) {
        if (_this.RendererBinding__semanticsHandle == null) {
          t1 = _this.RendererBinding___RendererBinding__pipelineOwner_A;
          t1 === $ && A.throwUnnamedLateFieldNI();
          _this.RendererBinding__semanticsHandle = t1.ensureSemantics$0();
        }
      } else {
        t1 = _this.RendererBinding__semanticsHandle;
        if (t1 != null)
          t1.dispose$0();
        _this.RendererBinding__semanticsHandle = null;
      }
    },
    _handleSemanticsOwnerCreated$0() {
      var t2,
        t1 = this.RendererBinding___RendererBinding__pipelineOwner_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1 = t1._rootNode;
      t1.toString;
      t2 = type$.nullable_PipelineOwner;
      t2._as(A.AbstractNode.prototype.get$owner.call(t1))._nodesNeedingSemantics.add$1(0, t1);
      t2._as(A.AbstractNode.prototype.get$owner.call(t1)).requestVisualUpdate$0();
    },
    _handleSemanticsUpdate$1(update) {
      var t1 = this.RendererBinding___RendererBinding__pipelineOwner_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1._rootNode._window.updateSemantics$1(update);
    },
    _handleSemanticsOwnerDisposed$0() {
      var t1 = this.RendererBinding___RendererBinding__pipelineOwner_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1._rootNode.clearSemantics$0();
    },
    _handleWebFirstFrame$1(_) {
      B.MethodChannel_mfT._invokeMethod$1$3$arguments$missingOk("first-frame", null, false, type$.void);
    },
    _handlePersistentFrameCallback$1(timeStamp) {
      this.drawFrame$0();
      this._scheduleMouseTrackerUpdate$0();
    },
    _scheduleMouseTrackerUpdate$0() {
      $.SchedulerBinding__instance.SchedulerBinding__postFrameCallbacks.push(new A.RendererBinding__scheduleMouseTrackerUpdate_closure(this));
    },
    allowFirstFrame$0() {
      --this.RendererBinding__firstFrameDeferredCount;
      if (!this.RendererBinding__firstFrameSent)
        this.scheduleWarmUpFrame$0();
    },
    drawFrame$0() {
      var _this = this,
        t1 = _this.RendererBinding___RendererBinding__pipelineOwner_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.flushLayout$0();
      _this.RendererBinding___RendererBinding__pipelineOwner_A.flushCompositingBits$0();
      _this.RendererBinding___RendererBinding__pipelineOwner_A.flushPaint$0();
      if (_this.RendererBinding__firstFrameSent || _this.RendererBinding__firstFrameDeferredCount === 0) {
        _this.RendererBinding___RendererBinding__pipelineOwner_A._rootNode.compositeFrame$0();
        _this.RendererBinding___RendererBinding__pipelineOwner_A.flushSemantics$0();
        _this.RendererBinding__firstFrameSent = true;
      }
    }
  };
  A.RendererBinding__scheduleMouseTrackerUpdate_closure.prototype = {
    call$1(duration) {
      var t1 = this.$this,
        t2 = t1.RendererBinding__mouseTracker;
      t2.toString;
      t1 = t1.RendererBinding___RendererBinding__pipelineOwner_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t2.updateAllDevices$1(t1._rootNode.get$hitTestMouseTrackers());
    },
    $signature: 1
  };
  A.BoxConstraints.prototype = {
    copyWith$4$maxHeight$maxWidth$minHeight$minWidth(maxHeight, maxWidth, minHeight, minWidth) {
      var _this = this,
        t1 = minWidth == null ? _this.minWidth : minWidth,
        t2 = maxWidth == null ? _this.maxWidth : maxWidth,
        t3 = minHeight == null ? _this.minHeight : minHeight;
      return new A.BoxConstraints(t1, t2, t3, maxHeight == null ? _this.maxHeight : maxHeight);
    },
    copyWith$2$maxWidth$minWidth(maxWidth, minWidth) {
      return this.copyWith$4$maxHeight$maxWidth$minHeight$minWidth(null, maxWidth, null, minWidth);
    },
    copyWith$2$maxHeight$minHeight(maxHeight, minHeight) {
      return this.copyWith$4$maxHeight$maxWidth$minHeight$minWidth(maxHeight, null, minHeight, null);
    },
    copyWith$2$minHeight$minWidth(minHeight, minWidth) {
      return this.copyWith$4$maxHeight$maxWidth$minHeight$minWidth(null, null, minHeight, minWidth);
    },
    copyWith$1$maxHeight(maxHeight) {
      return this.copyWith$4$maxHeight$maxWidth$minHeight$minWidth(maxHeight, null, null, null);
    },
    copyWith$3$maxHeight$minHeight$minWidth(maxHeight, minHeight, minWidth) {
      return this.copyWith$4$maxHeight$maxWidth$minHeight$minWidth(maxHeight, null, minHeight, minWidth);
    },
    copyWith$1$maxWidth(maxWidth) {
      return this.copyWith$4$maxHeight$maxWidth$minHeight$minWidth(null, maxWidth, null, null);
    },
    deflate$1(edges) {
      var _this = this,
        horizontal = edges.get$horizontal(),
        vertical = edges.get$_top() + edges.get$_bottom(),
        deflatedMinWidth = Math.max(0, _this.minWidth - horizontal),
        deflatedMinHeight = Math.max(0, _this.minHeight - vertical);
      return new A.BoxConstraints(deflatedMinWidth, Math.max(deflatedMinWidth, _this.maxWidth - horizontal), deflatedMinHeight, Math.max(deflatedMinHeight, _this.maxHeight - vertical));
    },
    enforce$1(constraints) {
      var _this = this,
        t1 = constraints.minWidth,
        t2 = constraints.maxWidth,
        t3 = constraints.minHeight,
        t4 = constraints.maxHeight;
      return new A.BoxConstraints(A.clampDouble(_this.minWidth, t1, t2), A.clampDouble(_this.maxWidth, t1, t2), A.clampDouble(_this.minHeight, t3, t4), A.clampDouble(_this.maxHeight, t3, t4));
    },
    tighten$2$height$width(height, width) {
      var t5, t6, _this = this,
        t1 = width == null,
        t2 = _this.minWidth,
        t3 = t1 ? t2 : A.clampDouble(width, t2, _this.maxWidth),
        t4 = _this.maxWidth;
      t1 = t1 ? t4 : A.clampDouble(width, t2, t4);
      t2 = height == null;
      t4 = _this.minHeight;
      t5 = t2 ? t4 : A.clampDouble(height, t4, _this.maxHeight);
      t6 = _this.maxHeight;
      return new A.BoxConstraints(t3, t1, t5, t2 ? t6 : A.clampDouble(height, t4, t6));
    },
    tighten$1$width(width) {
      return this.tighten$2$height$width(null, width);
    },
    tighten$1$height(height) {
      return this.tighten$2$height$width(height, null);
    },
    constrain$1(size) {
      var _this = this;
      return new A.Size(A.clampDouble(size._dx, _this.minWidth, _this.maxWidth), A.clampDouble(size._dy, _this.minHeight, _this.maxHeight));
    },
    $mul(_, factor) {
      var _this = this;
      return new A.BoxConstraints(_this.minWidth * factor, _this.maxWidth * factor, _this.minHeight * factor, _this.maxHeight * factor);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      return other instanceof A.BoxConstraints && other.minWidth === _this.minWidth && other.maxWidth === _this.maxWidth && other.minHeight === _this.minHeight && other.maxHeight === _this.maxHeight;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(_this.minWidth, _this.maxWidth, _this.minHeight, _this.maxHeight, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var annotation, _this = this,
        t1 = _this.minWidth,
        t2 = false;
      if (t1 >= 0)
        if (t1 <= _this.maxWidth) {
          t2 = _this.minHeight;
          t2 = t2 >= 0 && t2 <= _this.maxHeight;
        }
      annotation = t2 ? "" : "; NOT NORMALIZED";
      if (t1 === 1 / 0 && _this.minHeight === 1 / 0)
        return "BoxConstraints(biggest" + annotation + ")";
      if (t1 === 0 && _this.maxWidth === 1 / 0 && _this.minHeight === 0 && _this.maxHeight === 1 / 0)
        return "BoxConstraints(unconstrained" + annotation + ")";
      t2 = new A.BoxConstraints_toString_describe();
      return "BoxConstraints(" + t2.call$3(t1, _this.maxWidth, "w") + ", " + t2.call$3(_this.minHeight, _this.maxHeight, "h") + annotation + ")";
    }
  };
  A.BoxConstraints_toString_describe.prototype = {
    call$3(min, max, dim) {
      if (min === max)
        return dim + "=" + B.JSNumber_methods.toStringAsFixed$1(min, 1);
      return B.JSNumber_methods.toStringAsFixed$1(min, 1) + "<=" + dim + "<=" + B.JSNumber_methods.toStringAsFixed$1(max, 1);
    },
    $signature: 139
  };
  A.BoxHitTestResult.prototype = {
    addWithPaintTransform$3$hitTest$position$transform(hitTest, position, transform) {
      if (transform != null) {
        transform = A.Matrix4_tryInvert(A.PointerEvent_removePerspectiveTransform(transform));
        if (transform == null)
          return false;
      }
      return this.addWithRawTransform$3$hitTest$position$transform(hitTest, position, transform);
    },
    addWithPaintOffset$3$hitTest$offset$position(hitTest, offset, position) {
      var isHit,
        t1 = offset == null,
        transformedPosition = t1 ? position : position.$sub(0, offset);
      t1 = !t1;
      if (t1)
        this._localTransforms.push(new A._OffsetTransformPart(new A.Offset(-offset._dx, -offset._dy)));
      isHit = hitTest.call$2(this, transformedPosition);
      if (t1)
        this.popTransform$0();
      return isHit;
    },
    addWithRawTransform$3$hitTest$position$transform(hitTest, position, transform) {
      var isHit,
        t1 = transform == null,
        transformedPosition = t1 ? position : A.MatrixUtils_transformPoint(transform, position);
      t1 = !t1;
      if (t1)
        this._localTransforms.push(new A._MatrixTransformPart(transform));
      isHit = hitTest.call$2(this, transformedPosition);
      if (t1)
        this.popTransform$0();
      return isHit;
    }
  };
  A.BoxHitTestEntry.prototype = {
    toString$0(_) {
      return "<optimized out>#" + A.shortHash(this.target) + "@" + this.localPosition.toString$0(0);
    }
  };
  A.BoxParentData.prototype = {
    toString$0(_) {
      return "offset=" + this.offset.toString$0(0);
    }
  };
  A.ContainerBoxParentData.prototype = {};
  A.RenderBox.prototype = {
    setupParentData$1(child) {
      if (!(child.parentData instanceof A.BoxParentData))
        child.parentData = new A.BoxParentData(B.Offset_0_0);
    },
    getDryLayout$1(constraints) {
      var t1 = this._cachedDryLayoutSizes;
      if (t1 == null)
        t1 = this._cachedDryLayoutSizes = A.LinkedHashMap_LinkedHashMap$_empty(type$.BoxConstraints, type$.Size);
      return t1.putIfAbsent$2(constraints, new A.RenderBox_getDryLayout_closure(this, constraints));
    },
    computeDryLayout$1(constraints) {
      return B.Size_0_0;
    },
    get$semanticBounds() {
      var t1 = this._size;
      return new A.Rect(0, 0, 0 + t1._dx, 0 + t1._dy);
    },
    getDistanceToBaseline$2$onlyReal(baseline, onlyReal) {
      var result = null;
      try {
        result = this.getDistanceToActualBaseline$1(baseline);
      } finally {
      }
      if (result == null && !onlyReal)
        return this._size._dy;
      return result;
    },
    getDistanceToBaseline$1(baseline) {
      return this.getDistanceToBaseline$2$onlyReal(baseline, false);
    },
    getDistanceToActualBaseline$1(baseline) {
      var _this = this,
        t1 = _this._cachedBaselines;
      if (t1 == null)
        t1 = _this._cachedBaselines = A.LinkedHashMap_LinkedHashMap$_empty(type$.TextBaseline, type$.nullable_double);
      t1.putIfAbsent$2(baseline, new A.RenderBox_getDistanceToActualBaseline_closure(_this, baseline));
      return _this._cachedBaselines.$index(0, baseline);
    },
    computeDistanceToActualBaseline$1(baseline) {
      return null;
    },
    get$constraints() {
      return A.RenderObject.prototype.get$constraints.call(this);
    },
    _clearCachedData$0() {
      var t4, _this = this,
        t1 = _this._cachedBaselines,
        t2 = t1 == null,
        t3 = true;
      if (!(!t2 && t1.__js_helper$_length !== 0)) {
        t4 = _this._cachedIntrinsicDimensions;
        if (!(t4 != null && t4.__js_helper$_length !== 0)) {
          t3 = _this._cachedDryLayoutSizes;
          t3 = t3 != null && t3.__js_helper$_length !== 0;
        }
      }
      if (t3) {
        if (!t2)
          t1.clear$0(0);
        t1 = _this._cachedIntrinsicDimensions;
        if (t1 != null)
          t1.clear$0(0);
        t1 = _this._cachedDryLayoutSizes;
        if (t1 != null)
          t1.clear$0(0);
        return true;
      }
      return false;
    },
    markNeedsLayout$0() {
      var _this = this;
      if (_this._clearCachedData$0() && _this._node$_parent instanceof A.RenderObject) {
        _this.markParentNeedsLayout$0();
        return;
      }
      _this.super$RenderObject$markNeedsLayout();
    },
    layout$2$parentUsesSize(constraints, parentUsesSize) {
      var _this = this,
        t1 = false;
      if (_this._size != null)
        if (!constraints.$eq(0, A.RenderObject.prototype.get$constraints.call(_this))) {
          t1 = _this._cachedBaselines;
          t1 = t1 != null && t1.__js_helper$_length !== 0;
        }
      if (t1) {
        t1 = _this._cachedBaselines;
        if (t1 != null)
          t1.clear$0(0);
      }
      _this.super$RenderObject$layout(constraints, parentUsesSize);
    },
    layout$1(constraints) {
      return this.layout$2$parentUsesSize(constraints, false);
    },
    performResize$0() {
      this._size = this.computeDryLayout$1(A.RenderObject.prototype.get$constraints.call(this));
    },
    performLayout$0() {
    },
    hitTest$2$position(result, position) {
      var _this = this;
      if (_this._size.contains$1(0, position))
        if (_this.hitTestChildren$2$position(result, position) || _this.hitTestSelf$1(position)) {
          result.add$1(0, new A.BoxHitTestEntry(position, _this));
          return true;
        }
      return false;
    },
    hitTestSelf$1(position) {
      return false;
    },
    hitTestChildren$2$position(result, position) {
      return false;
    },
    applyPaintTransform$2(child, transform) {
      var offset,
        t1 = child.parentData;
      t1.toString;
      offset = type$.BoxParentData._as(t1).offset;
      transform.translate$2(offset._dx, offset._dy);
    },
    globalToLocal$1(point) {
      var n, t1, i, d, s,
        transform = this.getTransformTo$1(null);
      if (transform.copyInverse$1(transform) === 0)
        return B.Offset_0_0;
      n = new A.Vector3(new Float64Array(3));
      n.setValues$3(0, 0, 1);
      t1 = new A.Vector3(new Float64Array(3));
      t1.setValues$3(0, 0, 0);
      i = transform.perspectiveTransform$1(t1);
      t1 = new A.Vector3(new Float64Array(3));
      t1.setValues$3(0, 0, 1);
      d = transform.perspectiveTransform$1(t1).$sub(0, i);
      t1 = new A.Vector3(new Float64Array(3));
      t1.setValues$3(point._dx, point._dy, 0);
      s = transform.perspectiveTransform$1(t1);
      t1 = s.$sub(0, d.scaled$1(n.dot$1(s) / n.dot$1(d)))._v3storage;
      return new A.Offset(t1[0], t1[1]);
    },
    get$paintBounds() {
      var t1 = this._size;
      return new A.Rect(0, 0, 0 + t1._dx, 0 + t1._dy);
    },
    handleEvent$2($event, entry) {
      this.super$RenderObject$handleEvent($event, entry);
    }
  };
  A.RenderBox_getDryLayout_closure.prototype = {
    call$0() {
      return this.$this.computeDryLayout$1(this.constraints);
    },
    $signature: 77
  };
  A.RenderBox_getDistanceToActualBaseline_closure.prototype = {
    call$0() {
      return this.$this.computeDistanceToActualBaseline$1(this.baseline);
    },
    $signature: 140
  };
  A.RenderBoxContainerDefaultsMixin.prototype = {
    defaultComputeDistanceToFirstActualBaseline$1(baseline) {
      var t1, childParentData, result,
        child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = A._instanceType(this)._eval$1("RenderBoxContainerDefaultsMixin.1?"); child != null;) {
        childParentData = t1._as(child.parentData);
        result = child.getDistanceToActualBaseline$1(baseline);
        if (result != null)
          return result + childParentData.offset._dy;
        child = childParentData.ContainerParentDataMixin_nextSibling;
      }
      return null;
    },
    defaultComputeDistanceToHighestActualBaseline$1(baseline) {
      var t1, result, t2, candidate,
        child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = A._instanceType(this)._eval$1("RenderBoxContainerDefaultsMixin.1"), result = null; child != null;) {
        t2 = child.parentData;
        t2.toString;
        t1._as(t2);
        candidate = child.getDistanceToActualBaseline$1(baseline);
        if (candidate != null) {
          candidate += t2.offset._dy;
          result = result != null ? Math.min(result, candidate) : candidate;
        }
        child = t2.ContainerParentDataMixin_nextSibling;
      }
      return result;
    },
    defaultHitTestChildren$2$position(result, position) {
      var t2, child, _box_0 = {},
        t1 = _box_0.child = this.ContainerRenderObjectMixin__lastChild;
      for (t2 = A._instanceType(this)._eval$1("RenderBoxContainerDefaultsMixin.1"); t1 != null; t1 = child) {
        t1 = t1.parentData;
        t1.toString;
        t2._as(t1);
        if (result.addWithPaintOffset$3$hitTest$offset$position(new A.RenderBoxContainerDefaultsMixin_defaultHitTestChildren_closure(_box_0), t1.offset, position))
          return true;
        child = t1.ContainerParentDataMixin_previousSibling;
        _box_0.child = child;
      }
      return false;
    },
    defaultPaint$2(context, offset) {
      var t1, t2, t3, t4, t5,
        child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = A._instanceType(this)._eval$1("RenderBoxContainerDefaultsMixin.1"), t2 = offset._dx, t3 = offset._dy; child != null;) {
        t4 = child.parentData;
        t4.toString;
        t1._as(t4);
        t5 = t4.offset;
        context.paintChild$2(child, new A.Offset(t5._dx + t2, t5._dy + t3));
        child = t4.ContainerParentDataMixin_nextSibling;
      }
    }
  };
  A.RenderBoxContainerDefaultsMixin_defaultHitTestChildren_closure.prototype = {
    call$2(result, transformed) {
      return this._box_0.child.hitTest$2$position(result, transformed);
    },
    $signature: 13
  };
  A._ContainerBoxParentData_BoxParentData_ContainerParentDataMixin.prototype = {
    detach$0() {
      this.super$ParentData$detach();
    }
  };
  A.MultiChildLayoutParentData.prototype = {
    toString$0(_) {
      return this.super$BoxParentData$toString(0) + "; id=" + A.S(this.id);
    }
  };
  A.MultiChildLayoutDelegate.prototype = {
    layoutChild$2(childId, constraints) {
      var t1,
        child = this._idToChild.$index(0, childId);
      child.layout$2$parentUsesSize(constraints, true);
      t1 = child._size;
      t1.toString;
      return t1;
    },
    positionChild$2(childId, offset) {
      var t1 = this._idToChild.$index(0, childId).parentData;
      t1.toString;
      type$.MultiChildLayoutParentData._as(t1).offset = offset;
    },
    _callPerformLayout$2(size, firstChild) {
      var child, childParentData, t1, t2, t3, _this = this,
        previousIdToChild = _this._idToChild;
      try {
        _this._idToChild = A.LinkedHashMap_LinkedHashMap$_empty(type$.Object, type$.RenderBox);
        child = firstChild;
        for (t1 = type$.MultiChildLayoutParentData; child != null;) {
          t2 = child.parentData;
          t2.toString;
          childParentData = t1._as(t2);
          t2 = _this._idToChild;
          t2.toString;
          t3 = childParentData.id;
          t3.toString;
          t2.$indexSet(0, t3, child);
          child = childParentData.ContainerParentDataMixin_nextSibling;
        }
        _this.performLayout$1(size);
      } finally {
        _this._idToChild = previousIdToChild;
      }
    },
    toString$0(_) {
      return "MultiChildLayoutDelegate";
    }
  };
  A.RenderCustomMultiChildLayoutBox.prototype = {
    setupParentData$1(child) {
      if (!(child.parentData instanceof A.MultiChildLayoutParentData))
        child.parentData = new A.MultiChildLayoutParentData(null, null, B.Offset_0_0);
    },
    set$delegate(newDelegate) {
      var t1 = this._custom_layout$_delegate;
      if (t1 === newDelegate)
        return;
      if (A.getRuntimeTypeOfDartObject(newDelegate) !== A.getRuntimeTypeOfDartObject(t1) || newDelegate.shouldRelayout$1(t1))
        this.markNeedsLayout$0();
      this._custom_layout$_delegate = newDelegate;
    },
    attach$1(owner) {
      this.super$_RenderCustomMultiChildLayoutBox_RenderBox_ContainerRenderObjectMixin$attach(owner);
    },
    detach$0() {
      this.super$_RenderCustomMultiChildLayoutBox_RenderBox_ContainerRenderObjectMixin$detach();
    },
    computeDryLayout$1(constraints) {
      return constraints.constrain$1(new A.Size(A.clampDouble(1 / 0, constraints.minWidth, constraints.maxWidth), A.clampDouble(1 / 0, constraints.minHeight, constraints.maxHeight)));
    },
    performLayout$0() {
      var _this = this,
        t1 = A.RenderObject.prototype.get$constraints.call(_this);
      t1 = t1.constrain$1(new A.Size(A.clampDouble(1 / 0, t1.minWidth, t1.maxWidth), A.clampDouble(1 / 0, t1.minHeight, t1.maxHeight)));
      _this._size = t1;
      _this._custom_layout$_delegate._callPerformLayout$2(t1, _this.ContainerRenderObjectMixin__firstChild);
    },
    paint$2(context, offset) {
      this.defaultPaint$2(context, offset);
    },
    hitTestChildren$2$position(result, position) {
      return this.defaultHitTestChildren$2$position(result, position);
    }
  };
  A._RenderCustomMultiChildLayoutBox_RenderBox_ContainerRenderObjectMixin.prototype = {
    attach$1(owner) {
      var child, t1, t2;
      this.super$RenderObject$attach(owner);
      child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.MultiChildLayoutParentData; child != null;) {
        child.attach$1(owner);
        t2 = child.parentData;
        t2.toString;
        child = t1._as(t2).ContainerParentDataMixin_nextSibling;
      }
    },
    detach$0() {
      var child, t1, t2;
      this.super$AbstractNode$detach();
      child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.MultiChildLayoutParentData; child != null;) {
        child.detach$0();
        t2 = child.parentData;
        t2.toString;
        child = t1._as(t2).ContainerParentDataMixin_nextSibling;
      }
    }
  };
  A._RenderCustomMultiChildLayoutBox_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin.prototype = {};
  A.CustomPainter.prototype = {
    addListener$1(listener) {
      var t1 = this._repaint;
      return t1 == null ? null : t1.addListener$1(listener);
    },
    removeListener$1(listener) {
      var t1 = this._repaint;
      return t1 == null ? null : t1.removeListener$1(listener);
    },
    get$semanticsBuilder() {
      return null;
    },
    shouldRebuildSemantics$1(oldDelegate) {
      return this.shouldRepaint$1(oldDelegate);
    },
    hitTest$1(position) {
      return null;
    },
    toString$0(_) {
      var t1 = A.shortHash(this),
        t2 = this._repaint;
      t2 = t2 == null ? null : t2.toString$0(0);
      if (t2 == null)
        t2 = "";
      return "<optimized out>#" + t1 + "(" + t2 + ")";
    }
  };
  A.RenderCustomPaint.prototype = {
    set$painter(value) {
      var t1 = this._painter;
      if (t1 == value)
        return;
      this._painter = value;
      this._didUpdatePainter$2(value, t1);
    },
    set$foregroundPainter(value) {
      var t1 = this._foregroundPainter;
      if (t1 == value)
        return;
      this._foregroundPainter = value;
      this._didUpdatePainter$2(value, t1);
    },
    _didUpdatePainter$2(newPainter, oldPainter) {
      var _this = this,
        t1 = newPainter == null;
      if (t1)
        _this.markNeedsPaint$0();
      else if (oldPainter == null || A.getRuntimeTypeOfDartObject(newPainter) !== A.getRuntimeTypeOfDartObject(oldPainter) || newPainter.shouldRepaint$1(oldPainter))
        _this.markNeedsPaint$0();
      if (_this._node$_owner != null) {
        if (oldPainter != null)
          oldPainter.removeListener$1(_this.get$markNeedsPaint());
        if (!t1)
          newPainter.addListener$1(_this.get$markNeedsPaint());
      }
      if (t1) {
        if (_this._node$_owner != null)
          _this.markNeedsSemanticsUpdate$0();
      } else if (oldPainter == null || A.getRuntimeTypeOfDartObject(newPainter) !== A.getRuntimeTypeOfDartObject(oldPainter) || newPainter.shouldRebuildSemantics$1(oldPainter))
        _this.markNeedsSemanticsUpdate$0();
    },
    set$preferredSize(value) {
      if (this._preferredSize.$eq(0, value))
        return;
      this._preferredSize = value;
      this.markNeedsLayout$0();
    },
    attach$1(owner) {
      var t1, _this = this;
      _this.super$_RenderProxyBox_RenderBox_RenderObjectWithChildMixin$attach(owner);
      t1 = _this._painter;
      if (t1 != null)
        t1.addListener$1(_this.get$markNeedsPaint());
      t1 = _this._foregroundPainter;
      if (t1 != null)
        t1.addListener$1(_this.get$markNeedsPaint());
    },
    detach$0() {
      var _this = this,
        t1 = _this._painter;
      if (t1 != null)
        t1.removeListener$1(_this.get$markNeedsPaint());
      t1 = _this._foregroundPainter;
      if (t1 != null)
        t1.removeListener$1(_this.get$markNeedsPaint());
      _this.super$_RenderProxyBox_RenderBox_RenderObjectWithChildMixin$detach();
    },
    hitTestChildren$2$position(result, position) {
      var t1 = this._foregroundPainter;
      if (t1 != null) {
        t1 = t1.hitTest$1(position);
        t1 = t1 === true;
      } else
        t1 = false;
      if (t1)
        return true;
      return this.super$RenderProxyBoxMixin$hitTestChildren(result, position);
    },
    hitTestSelf$1(position) {
      var t1 = this._painter,
        t2 = t1 != null;
      if (t2)
        t1.hitTest$1(position);
      return t2;
    },
    performLayout$0() {
      this.super$RenderProxyBoxMixin$performLayout();
      this.markNeedsSemanticsUpdate$0();
    },
    computeSizeForNoChild$1(constraints) {
      return constraints.constrain$1(this._preferredSize);
    },
    _paintWithPainter$3(canvas, offset, painter) {
      var t1;
      A._Cell$();
      canvas.save$0();
      if (!offset.$eq(0, B.Offset_0_0)) {
        canvas._addMethod$1(3);
        canvas._addData2$2(offset._dx, offset._dy);
      }
      t1 = this._size;
      t1.toString;
      painter.paint$2(canvas, t1);
      canvas.restore$0();
    },
    paint$2(context, offset) {
      var t1, t2, _this = this;
      if (_this._painter != null) {
        t1 = context.get$canvas();
        t2 = _this._painter;
        t2.toString;
        _this._paintWithPainter$3(t1, offset, t2);
        _this._setRasterCacheHints$1(context);
      }
      _this.super$RenderProxyBoxMixin$paint(context, offset);
      if (_this._foregroundPainter != null) {
        t1 = context.get$canvas();
        t2 = _this._foregroundPainter;
        t2.toString;
        _this._paintWithPainter$3(t1, offset, t2);
        _this._setRasterCacheHints$1(context);
      }
    },
    _setRasterCacheHints$1(context) {
    },
    describeSemanticsConfiguration$1(config) {
      var t1, _this = this;
      _this.super$RenderObject$describeSemanticsConfiguration(config);
      t1 = _this._painter;
      _this._backgroundSemanticsBuilder = t1 == null ? null : t1.get$semanticsBuilder();
      t1 = _this._foregroundPainter;
      _this._foregroundSemanticsBuilder = t1 == null ? null : t1.get$semanticsBuilder();
      config._isSemanticBoundary = false;
    },
    assembleSemanticsNode$3(node, config, children) {
      var t1, hasBackgroundSemantics, hasForegroundSemantics, t2, _this = this;
      _this._backgroundSemanticsNodes = A.RenderCustomPaint__updateSemanticsChildren(_this._backgroundSemanticsNodes, B.List_empty8);
      _this._foregroundSemanticsNodes = A.RenderCustomPaint__updateSemanticsChildren(_this._foregroundSemanticsNodes, B.List_empty8);
      t1 = _this._backgroundSemanticsNodes;
      hasBackgroundSemantics = t1 != null && !t1.get$isEmpty(t1);
      t1 = _this._foregroundSemanticsNodes;
      hasForegroundSemantics = t1 != null && !t1.get$isEmpty(t1);
      t1 = A._setArrayType([], type$.JSArray_SemanticsNode);
      if (hasBackgroundSemantics) {
        t2 = _this._backgroundSemanticsNodes;
        t2.toString;
        B.JSArray_methods.addAll$1(t1, t2);
      }
      B.JSArray_methods.addAll$1(t1, children);
      if (hasForegroundSemantics) {
        t2 = _this._foregroundSemanticsNodes;
        t2.toString;
        B.JSArray_methods.addAll$1(t1, t2);
      }
      _this.super$RenderObject$assembleSemanticsNode(node, config, t1);
    },
    clearSemantics$0() {
      this.super$RenderObject$clearSemantics();
      this._foregroundSemanticsNodes = this._backgroundSemanticsNodes = null;
    }
  };
  A.DebugOverflowIndicatorMixin.prototype = {};
  A.RenderErrorBox.prototype = {
    RenderErrorBox$1(message) {
      var builder, t1, exception, _this = this;
      try {
        t1 = _this.message;
        if (t1 !== "") {
          builder = A.ParagraphBuilder_ParagraphBuilder($.$get$RenderErrorBox_paragraphStyle());
          builder.pushStyle$1($.$get$RenderErrorBox_textStyle());
          builder.addText$1(t1);
          t1 = builder.build$0();
          _this.__RenderErrorBox__paragraph_F !== $ && A.throwUnnamedLateFieldAI();
          _this.__RenderErrorBox__paragraph_F = t1;
        } else {
          _this.__RenderErrorBox__paragraph_F !== $ && A.throwUnnamedLateFieldAI();
          _this.__RenderErrorBox__paragraph_F = null;
        }
      } catch (exception) {
      }
    },
    get$sizedByParent() {
      return true;
    },
    hitTestSelf$1(position) {
      return true;
    },
    computeDryLayout$1(constraints) {
      return constraints.constrain$1(B.Size_100000_100000);
    },
    paint$2(context, offset) {
      var width, left, $top, t1, t2, t3, t4, t5, t6, exception, _this = this;
      try {
        t1 = context.get$canvas();
        t2 = _this._size;
        t3 = offset._dx;
        t4 = offset._dy;
        t5 = t2._dx;
        t2 = t2._dy;
        t6 = A.Paint$();
        t6.set$color($.$get$RenderErrorBox_backgroundColor());
        t1.drawRect$2(new A.Rect(t3, t4, t3 + t5, t4 + t2), t6);
        t1 = _this.__RenderErrorBox__paragraph_F;
        t1 === $ && A.throwUnnamedLateFieldNI();
        if (t1 != null) {
          width = _this._size._dx;
          left = 0;
          $top = 0;
          if (width > 328) {
            width -= 128;
            left += 64;
          }
          t1.layout$1(new A.ParagraphConstraints(width));
          t2 = _this._size._dy;
          if (t2 > 96 + t1._height + 12)
            $top += 96;
          t2 = context.get$canvas();
          offset.$add(0, new A.Offset(left, $top));
          t2._addMethod$1(25);
          t2._objects.push(t1);
        }
      } catch (exception) {
      }
    }
  };
  A.FlexFit.prototype = {
    _enumToString$0() {
      return "FlexFit." + this._name;
    }
  };
  A.FlexParentData.prototype = {
    toString$0(_) {
      return this.super$BoxParentData$toString(0) + "; flex=" + A.S(this.flex) + "; fit=" + A.S(this.fit);
    }
  };
  A.MainAxisSize.prototype = {
    _enumToString$0() {
      return "MainAxisSize." + this._name;
    }
  };
  A.MainAxisAlignment.prototype = {
    _enumToString$0() {
      return "MainAxisAlignment." + this._name;
    }
  };
  A.CrossAxisAlignment.prototype = {
    _enumToString$0() {
      return "CrossAxisAlignment." + this._name;
    }
  };
  A.RenderFlex.prototype = {
    setupParentData$1(child) {
      if (!(child.parentData instanceof A.FlexParentData))
        child.parentData = new A.FlexParentData(null, null, B.Offset_0_0);
    },
    computeDistanceToActualBaseline$1(baseline) {
      if (this._flex$_direction === B.Axis_0)
        return this.defaultComputeDistanceToHighestActualBaseline$1(baseline);
      return this.defaultComputeDistanceToFirstActualBaseline$1(baseline);
    },
    _getCrossSize$1(size) {
      switch (this._flex$_direction.index) {
        case 0:
          return size._dy;
        case 1:
          return size._dx;
      }
    },
    _getMainSize$1(size) {
      switch (this._flex$_direction.index) {
        case 0:
          return size._dx;
        case 1:
          return size._dy;
      }
    },
    computeDryLayout$1(constraints) {
      var sizes;
      if (this._crossAxisAlignment === B.CrossAxisAlignment_4)
        return B.Size_0_0;
      sizes = this._computeSizes$2$constraints$layoutChild(constraints, A.layout_helper_ChildLayoutHelper_dryLayoutChild$closure());
      switch (this._flex$_direction.index) {
        case 0:
          return constraints.constrain$1(new A.Size(sizes.mainSize, sizes.crossSize));
        case 1:
          return constraints.constrain$1(new A.Size(sizes.crossSize, sizes.mainSize));
      }
    },
    _computeSizes$2$constraints$layoutChild(constraints, layoutChild) {
      var t1, t2, t3, lastFlexChild, totalFlex, crossSize, allocatedSize, t4, flex, innerConstraints, childSize, freeSpace, spacePerFlex, allocatedFlexSpace, maxChildExtent, minChildExtent, _this = this, _null = null,
        maxMainSize = _this._flex$_direction === B.Axis_0 ? constraints.maxWidth : constraints.maxHeight,
        canFlex = maxMainSize < 1 / 0,
        child = _this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.FlexParentData, t2 = constraints.maxWidth, t3 = constraints.maxHeight, lastFlexChild = _null, totalFlex = 0, crossSize = 0, allocatedSize = 0; child != null;) {
        t4 = child.parentData;
        t4.toString;
        t1._as(t4);
        flex = t4.flex;
        if (flex == null)
          flex = 0;
        if (flex > 0) {
          totalFlex += flex;
          lastFlexChild = child;
        } else {
          innerConstraints = _null;
          if (_this._crossAxisAlignment === B.CrossAxisAlignment_3)
            switch (_this._flex$_direction.index) {
              case 0:
                innerConstraints = A.BoxConstraints$tightFor(t3, _null);
                break;
              case 1:
                innerConstraints = A.BoxConstraints$tightFor(_null, t2);
                break;
            }
          else
            switch (_this._flex$_direction.index) {
              case 0:
                innerConstraints = new A.BoxConstraints(0, 1 / 0, 0, t3);
                break;
              case 1:
                innerConstraints = new A.BoxConstraints(0, t2, 0, 1 / 0);
                break;
            }
          childSize = layoutChild.call$2(child, innerConstraints);
          allocatedSize += _this._getMainSize$1(childSize);
          crossSize = Math.max(crossSize, _this._getCrossSize$1(childSize));
        }
        child = t4.ContainerParentDataMixin_nextSibling;
      }
      freeSpace = Math.max(0, (canFlex ? maxMainSize : 0) - allocatedSize);
      if (totalFlex > 0) {
        spacePerFlex = canFlex ? freeSpace / totalFlex : 0 / 0;
        child = _this.ContainerRenderObjectMixin__firstChild;
        for (allocatedFlexSpace = 0; child != null;) {
          t4 = child.parentData;
          t4.toString;
          flex = t1._as(t4).flex;
          if (flex == null)
            flex = 0;
          if (flex > 0) {
            if (canFlex)
              maxChildExtent = child === lastFlexChild ? freeSpace - allocatedFlexSpace : spacePerFlex * flex;
            else
              maxChildExtent = 1 / 0;
            minChildExtent = A._Cell$();
            t4 = child.parentData;
            t4.toString;
            t4 = t1._as(t4).fit;
            switch ((t4 == null ? B.FlexFit_0 : t4).index) {
              case 0:
                if (minChildExtent.__late_helper$_value !== minChildExtent)
                  A.throwExpression(A.LateError$localAI(""));
                minChildExtent.__late_helper$_value = maxChildExtent;
                break;
              case 1:
                if (minChildExtent.__late_helper$_value !== minChildExtent)
                  A.throwExpression(A.LateError$localAI(""));
                minChildExtent.__late_helper$_value = 0;
                break;
            }
            innerConstraints = _null;
            if (_this._crossAxisAlignment === B.CrossAxisAlignment_3)
              switch (_this._flex$_direction.index) {
                case 0:
                  t4 = minChildExtent.__late_helper$_value;
                  if (t4 === minChildExtent)
                    A.throwExpression(A.LateError$localNI(""));
                  innerConstraints = new A.BoxConstraints(t4, maxChildExtent, t3, t3);
                  break;
                case 1:
                  t4 = minChildExtent.__late_helper$_value;
                  if (t4 === minChildExtent)
                    A.throwExpression(A.LateError$localNI(""));
                  innerConstraints = new A.BoxConstraints(t2, t2, t4, maxChildExtent);
                  break;
              }
            else
              switch (_this._flex$_direction.index) {
                case 0:
                  t4 = minChildExtent.__late_helper$_value;
                  if (t4 === minChildExtent)
                    A.throwExpression(A.LateError$localNI(""));
                  innerConstraints = new A.BoxConstraints(t4, maxChildExtent, 0, t3);
                  break;
                case 1:
                  t4 = minChildExtent.__late_helper$_value;
                  if (t4 === minChildExtent)
                    A.throwExpression(A.LateError$localNI(""));
                  innerConstraints = new A.BoxConstraints(0, t2, t4, maxChildExtent);
                  break;
              }
            childSize = layoutChild.call$2(child, innerConstraints);
            allocatedSize += _this._getMainSize$1(childSize);
            allocatedFlexSpace += maxChildExtent;
            crossSize = Math.max(crossSize, _this._getCrossSize$1(childSize));
          }
          t4 = child.parentData;
          t4.toString;
          child = t1._as(t4).ContainerParentDataMixin_nextSibling;
        }
      }
      return new A._LayoutSizes(canFlex && _this._mainAxisSize === B.MainAxisSize_1 ? maxMainSize : allocatedSize, crossSize, allocatedSize);
    },
    performLayout$0() {
      var child, t1, maxSizeAboveBaseline, maxSizeBelowBaseline, t2, distance, actualSizeDelta, remainingSpace, leadingSpace, betweenSpace, flipMainAxis, childMainPosition, t3, t4, childCrossPosition, t5, _this = this,
        constraints = A.RenderObject.prototype.get$constraints.call(_this),
        sizes = _this._computeSizes$2$constraints$layoutChild(constraints, A.layout_helper_ChildLayoutHelper_layoutChild$closure()),
        actualSize = sizes.mainSize,
        crossSize = sizes.crossSize,
        maxBaselineDistance = 0;
      if (_this._crossAxisAlignment === B.CrossAxisAlignment_4) {
        child = _this.ContainerRenderObjectMixin__firstChild;
        for (t1 = type$.FlexParentData, maxSizeAboveBaseline = 0, maxSizeBelowBaseline = 0; child != null;) {
          t2 = _this._flex$_textBaseline;
          t2.toString;
          distance = child.getDistanceToBaseline$2$onlyReal(t2, true);
          if (distance != null) {
            maxBaselineDistance = Math.max(maxBaselineDistance, distance);
            maxSizeAboveBaseline = Math.max(distance, maxSizeAboveBaseline);
            maxSizeBelowBaseline = Math.max(child._size._dy - distance, maxSizeBelowBaseline);
            crossSize = Math.max(maxSizeAboveBaseline + maxSizeBelowBaseline, crossSize);
          }
          t2 = child.parentData;
          t2.toString;
          child = t1._as(t2).ContainerParentDataMixin_nextSibling;
        }
      }
      switch (_this._flex$_direction.index) {
        case 0:
          t1 = _this._size = constraints.constrain$1(new A.Size(actualSize, crossSize));
          actualSize = t1._dx;
          crossSize = t1._dy;
          break;
        case 1:
          t1 = _this._size = constraints.constrain$1(new A.Size(crossSize, actualSize));
          actualSize = t1._dy;
          crossSize = t1._dx;
          break;
      }
      actualSizeDelta = actualSize - sizes.allocatedSize;
      _this._flex$_overflow = Math.max(0, -actualSizeDelta);
      remainingSpace = Math.max(0, actualSizeDelta);
      leadingSpace = A._Cell$();
      betweenSpace = A._Cell$();
      t1 = A._startIsTopLeft(_this._flex$_direction, _this._flex$_textDirection, _this._verticalDirection);
      flipMainAxis = t1 === false;
      switch (_this._mainAxisAlignment.index) {
        case 0:
          leadingSpace.set$finalLocalValue(0);
          betweenSpace.set$finalLocalValue(0);
          break;
        case 1:
          leadingSpace.set$finalLocalValue(remainingSpace);
          betweenSpace.set$finalLocalValue(0);
          break;
        case 2:
          leadingSpace.set$finalLocalValue(remainingSpace / 2);
          betweenSpace.set$finalLocalValue(0);
          break;
        case 3:
          leadingSpace.set$finalLocalValue(0);
          t1 = _this.ContainerRenderObjectMixin__childCount;
          betweenSpace.set$finalLocalValue(t1 > 1 ? remainingSpace / (t1 - 1) : 0);
          break;
        case 4:
          t1 = _this.ContainerRenderObjectMixin__childCount;
          betweenSpace.set$finalLocalValue(t1 > 0 ? remainingSpace / t1 : 0);
          leadingSpace.set$finalLocalValue(betweenSpace._readLocal$0() / 2);
          break;
        case 5:
          t1 = _this.ContainerRenderObjectMixin__childCount;
          betweenSpace.set$finalLocalValue(t1 > 0 ? remainingSpace / (t1 + 1) : 0);
          leadingSpace.set$finalLocalValue(betweenSpace._readLocal$0());
          break;
      }
      childMainPosition = flipMainAxis ? actualSize - leadingSpace._readLocal$0() : leadingSpace._readLocal$0();
      child = _this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.FlexParentData, t2 = crossSize / 2; child != null;) {
        t3 = child.parentData;
        t3.toString;
        t1._as(t3);
        t4 = _this._crossAxisAlignment;
        childCrossPosition = 0;
        switch (t4.index) {
          case 0:
          case 1:
            if (!(A._startIsTopLeft(A.flipAxis(_this._flex$_direction), _this._flex$_textDirection, _this._verticalDirection) === (t4 === B.CrossAxisAlignment_0))) {
              t4 = child._size;
              t4.toString;
              childCrossPosition = crossSize - _this._getCrossSize$1(t4);
            }
            break;
          case 2:
            t4 = child._size;
            t4.toString;
            childCrossPosition = t2 - _this._getCrossSize$1(t4) / 2;
            break;
          case 3:
            break;
          case 4:
            if (_this._flex$_direction === B.Axis_0) {
              t4 = _this._flex$_textBaseline;
              t4.toString;
              distance = child.getDistanceToBaseline$2$onlyReal(t4, true);
              childCrossPosition = distance != null ? maxBaselineDistance - distance : 0;
            }
            break;
          default:
            childCrossPosition = null;
        }
        if (flipMainAxis) {
          t4 = child._size;
          t4.toString;
          childMainPosition -= _this._getMainSize$1(t4);
        }
        switch (_this._flex$_direction.index) {
          case 0:
            t3.offset = new A.Offset(childMainPosition, childCrossPosition);
            break;
          case 1:
            t3.offset = new A.Offset(childCrossPosition, childMainPosition);
            break;
        }
        if (flipMainAxis) {
          t4 = betweenSpace.__late_helper$_value;
          if (t4 === betweenSpace)
            A.throwExpression(A.LateError$localNI(""));
          childMainPosition -= t4;
        } else {
          t4 = child._size;
          t4.toString;
          t4 = _this._getMainSize$1(t4);
          t5 = betweenSpace.__late_helper$_value;
          if (t5 === betweenSpace)
            A.throwExpression(A.LateError$localNI(""));
          childMainPosition += t4 + t5;
        }
        child = t3.ContainerParentDataMixin_nextSibling;
      }
    },
    hitTestChildren$2$position(result, position) {
      return this.defaultHitTestChildren$2$position(result, position);
    },
    paint$2(context, offset) {
      var t1, t2, t3, _this = this;
      if (!(_this._flex$_overflow > 1e-10)) {
        _this.defaultPaint$2(context, offset);
        return;
      }
      t1 = _this._size;
      if (t1.get$isEmpty(0))
        return;
      t2 = _this._flex$_clipRectLayer;
      t3 = _this.__RenderObject__needsCompositing_A;
      t3 === $ && A.throwUnnamedLateFieldNI();
      t2.set$layer(context.pushClipRect$6$clipBehavior$oldLayer(t3, offset, new A.Rect(0, 0, 0 + t1._dx, 0 + t1._dy), _this.get$defaultPaint(), _this._flex$_clipBehavior, t2._layer));
    },
    dispose$0() {
      this._flex$_clipRectLayer.set$layer(null);
      this.super$_RenderFlex_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin$dispose();
    },
    describeApproximatePaintClip$1(child) {
      var t1;
      switch (this._flex$_clipBehavior.index) {
        case 0:
          return null;
        case 1:
        case 2:
        case 3:
          if (this._flex$_overflow > 1e-10) {
            t1 = this._size;
            t1 = new A.Rect(0, 0, 0 + t1._dx, 0 + t1._dy);
          } else
            t1 = null;
          return t1;
      }
    },
    toStringShort$0() {
      return this.super$RenderObject$toStringShort();
    }
  };
  A._LayoutSizes.prototype = {};
  A._RenderFlex_RenderBox_ContainerRenderObjectMixin.prototype = {
    attach$1(owner) {
      var child, t1, t2;
      this.super$RenderObject$attach(owner);
      child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.FlexParentData; child != null;) {
        child.attach$1(owner);
        t2 = child.parentData;
        t2.toString;
        child = t1._as(t2).ContainerParentDataMixin_nextSibling;
      }
    },
    detach$0() {
      var child, t1, t2;
      this.super$AbstractNode$detach();
      child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.FlexParentData; child != null;) {
        child.detach$0();
        t2 = child.parentData;
        t2.toString;
        child = t1._as(t2).ContainerParentDataMixin_nextSibling;
      }
    }
  };
  A._RenderFlex_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin.prototype = {};
  A._RenderFlex_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin.prototype = {
    dispose$0() {
      var t1, t2, _i;
      for (t1 = this.DebugOverflowIndicatorMixin__indicatorLabel, t2 = t1.length, _i = 0; _i < t2; ++_i)
        t1[_i].dispose$0();
      this.super$RenderObject$dispose();
    }
  };
  A.AnnotationEntry.prototype = {
    toString$0(_) {
      return "AnnotationEntry(annotation: " + this.annotation.toString$0(0) + ", localPosition: " + this.localPosition.toString$0(0) + ")";
    }
  };
  A.AnnotationResult.prototype = {};
  A.Layer.prototype = {
    _updateSubtreeCompositionObserverCount$1(delta) {
      var t1;
      this._compositionCallbackCount += delta;
      t1 = type$.nullable_ContainerLayer._as(A.AbstractNode.prototype.get$parent.call(this));
      if (t1 != null)
        t1._updateSubtreeCompositionObserverCount$1(delta);
    },
    _fireCompositionCallbacks$1$includeChildren(includeChildren) {
      var t2, _i,
        t1 = this._layer$_callbacks;
      t1 = A.List_List$_of(new A.LinkedHashMapValuesIterable(t1, A._instanceType(t1)._eval$1("LinkedHashMapValuesIterable<2>")), type$.void_Function);
      t2 = t1.length;
      _i = 0;
      for (; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i)
        t1[_i].call$0();
    },
    dispose$0() {
      this._engineLayer = null;
    },
    markNeedsAddToScene$0() {
      if (this._needsAddToScene)
        return;
      this._needsAddToScene = true;
    },
    get$alwaysNeedsAddToScene() {
      return false;
    },
    set$engineLayer(value) {
      var t1, _this = this;
      _this._engineLayer = value;
      if (!_this.get$alwaysNeedsAddToScene()) {
        t1 = type$.nullable_ContainerLayer;
        if (t1._as(A.AbstractNode.prototype.get$parent.call(_this)) != null && !t1._as(A.AbstractNode.prototype.get$parent.call(_this)).get$alwaysNeedsAddToScene())
          t1._as(A.AbstractNode.prototype.get$parent.call(_this)).markNeedsAddToScene$0();
      }
    },
    updateSubtreeNeedsAddToScene$0() {
      this._needsAddToScene = this._needsAddToScene || this.get$alwaysNeedsAddToScene();
    },
    dropChild$1(child) {
      var t1, _this = this;
      if (!_this.get$alwaysNeedsAddToScene())
        _this.markNeedsAddToScene$0();
      t1 = child._compositionCallbackCount;
      if (t1 !== 0)
        _this._updateSubtreeCompositionObserverCount$1(-t1);
      _this.super$AbstractNode$dropChild(child);
    },
    remove$0(_) {
      var t2, t3, _this = this,
        t1 = type$.nullable_ContainerLayer._as(A.AbstractNode.prototype.get$parent.call(_this));
      if (t1 != null) {
        t2 = _this._previousSibling;
        t3 = _this._nextSibling;
        if (t2 == null)
          t1._firstChild = t3;
        else
          t2._nextSibling = t3;
        t3 = _this._nextSibling;
        if (t3 == null)
          t1._lastChild = t2;
        else
          t3._previousSibling = t2;
        _this._nextSibling = _this._previousSibling = null;
        t1.dropChild$1(_this);
        _this._parentHandle.set$layer(null);
      }
    },
    findAnnotations$1$3$onlyFirst(result, localPosition, onlyFirst) {
      return false;
    },
    find$1$1(localPosition, $S) {
      var t1 = A._setArrayType([], $S._eval$1("JSArray<AnnotationEntry<0>>"));
      this.findAnnotations$1$3$onlyFirst(new A.AnnotationResult(t1, $S._eval$1("AnnotationResult<0>")), localPosition, true, $S);
      return t1.length === 0 ? null : B.JSArray_methods.get$first(t1).annotation;
    },
    _addToSceneWithRetainedRendering$1(builder) {
      var t1, _this = this;
      if (!_this._needsAddToScene && _this._engineLayer != null) {
        t1 = _this._engineLayer;
        t1.toString;
        builder._pushLayer$1(t1);
        t1 = builder._layerStack;
        if (t1.length !== 0)
          t1.pop();
        return;
      }
      _this.addToScene$1(builder);
      _this._needsAddToScene = false;
    },
    toStringShort$0() {
      var t1 = this.super$DiagnosticableTreeMixin$toStringShort();
      return t1 + (this._node$_owner == null ? " DETACHED" : "");
    }
  };
  A.LayerHandle.prototype = {
    set$layer(layer) {
      var t1 = this._layer;
      if (layer == t1)
        return;
      if (t1 != null)
        if (--t1._refCount === 0)
          t1.dispose$0();
      this._layer = layer;
      if (layer != null)
        ++layer._refCount;
    },
    toString$0(_) {
      var t1 = this._layer;
      return "LayerHandle(" + (t1 != null ? t1.toString$0(0) : "DISPOSED") + ")";
    }
  };
  A.PictureLayer.prototype = {
    set$picture(picture) {
      this.markNeedsAddToScene$0();
      this._picture = picture;
    },
    dispose$0() {
      this.set$picture(null);
      this.super$Layer$dispose();
    },
    addToScene$1(builder) {
      this._picture.toString;
      builder._pushLayer$1(new A._PictureLayer());
    },
    findAnnotations$1$3$onlyFirst(result, localPosition, onlyFirst) {
      return false;
    }
  };
  A.ContainerLayer.prototype = {
    _fireCompositionCallbacks$1$includeChildren(includeChildren) {
      var child;
      this.super$Layer$_fireCompositionCallbacks(includeChildren);
      if (!includeChildren)
        return;
      child = this._firstChild;
      for (; child != null;) {
        child._fireCompositionCallbacks$1$includeChildren(true);
        child = child._nextSibling;
      }
    },
    buildScene$1(builder) {
      var _this = this;
      _this.updateSubtreeNeedsAddToScene$0();
      _this.addToScene$1(builder);
      if (_this._compositionCallbackCount > 0)
        _this._fireCompositionCallbacks$1$includeChildren(true);
      _this._needsAddToScene = false;
      return new A.Scene();
    },
    dispose$0() {
      this.removeAllChildren$0();
      this._layer$_callbacks.clear$0(0);
      this.super$Layer$dispose();
    },
    updateSubtreeNeedsAddToScene$0() {
      var child, _this = this;
      _this.super$Layer$updateSubtreeNeedsAddToScene();
      child = _this._firstChild;
      for (; child != null;) {
        child.updateSubtreeNeedsAddToScene$0();
        _this._needsAddToScene = _this._needsAddToScene || child._needsAddToScene;
        child = child._nextSibling;
      }
    },
    findAnnotations$1$3$onlyFirst(result, localPosition, onlyFirst, $S) {
      var child, t1, t2;
      for (child = this._lastChild, t1 = result._layer$_entries; child != null; child = child._previousSibling) {
        if (child.findAnnotations$1$3$onlyFirst(result, localPosition, true, $S))
          return true;
        t2 = t1.length;
        if (t2 !== 0)
          return false;
      }
      return false;
    },
    attach$1(owner) {
      var child;
      this.super$AbstractNode$attach(owner);
      child = this._firstChild;
      for (; child != null;) {
        child.attach$1(owner);
        child = child._nextSibling;
      }
    },
    detach$0() {
      this.super$AbstractNode$detach();
      var child = this._firstChild;
      for (; child != null;) {
        child.detach$0();
        child = child._nextSibling;
      }
      this._fireCompositionCallbacks$1$includeChildren(false);
    },
    append$1(child) {
      var t1, _this = this;
      if (!_this.get$alwaysNeedsAddToScene())
        _this.markNeedsAddToScene$0();
      t1 = child._compositionCallbackCount;
      if (t1 !== 0)
        _this._updateSubtreeCompositionObserverCount$1(t1);
      _this.super$AbstractNode$adoptChild(child);
      t1 = child._previousSibling = _this._lastChild;
      if (t1 != null)
        t1._nextSibling = child;
      _this._lastChild = child;
      if (_this._firstChild == null)
        _this._firstChild = child;
      child._parentHandle.set$layer(child);
    },
    removeAllChildren$0() {
      var t1, next, t2, t3, _this = this,
        child = _this._firstChild;
      for (t1 = type$.nullable_ContainerLayer; child != null; child = next) {
        next = child._nextSibling;
        child._nextSibling = child._previousSibling = null;
        if (!_this.get$alwaysNeedsAddToScene())
          _this.markNeedsAddToScene$0();
        t2 = child._compositionCallbackCount;
        if (t2 !== 0) {
          t2 = -t2;
          _this._compositionCallbackCount += t2;
          t3 = t1._as(A.AbstractNode.prototype.get$parent.call(_this));
          if (t3 != null)
            t3._updateSubtreeCompositionObserverCount$1(t2);
        }
        _this.super$AbstractNode$dropChild(child);
        child._parentHandle.set$layer(null);
      }
      _this._lastChild = _this._firstChild = null;
    },
    addToScene$1(builder) {
      this.addChildrenToScene$1(builder);
    },
    addChildrenToScene$1(builder) {
      var child = this._firstChild;
      for (; child != null;) {
        child._addToSceneWithRetainedRendering$1(builder);
        child = child._nextSibling;
      }
    },
    applyTransform$2(child, transform) {
    }
  };
  A.OffsetLayer.prototype = {
    set$offset(value) {
      if (!value.$eq(0, this._layer$_offset))
        this.markNeedsAddToScene$0();
      this._layer$_offset = value;
    },
    findAnnotations$1$3$onlyFirst(result, localPosition, onlyFirst, $S) {
      return this.super$ContainerLayer$findAnnotations(result, localPosition.$sub(0, this._layer$_offset), true, $S);
    },
    applyTransform$2(child, transform) {
      var t1 = this._layer$_offset;
      transform.translate$2(t1._dx, t1._dy);
    },
    addToScene$1(builder) {
      var layer, t1;
      type$.nullable_OffsetEngineLayer._as(this._engineLayer);
      layer = new A.OffsetEngineLayer();
      builder._pushLayer$1(layer);
      this.set$engineLayer(layer);
      this.addChildrenToScene$1(builder);
      t1 = builder._layerStack;
      if (t1.length !== 0)
        t1.pop();
    }
  };
  A.ClipRectLayer.prototype = {
    findAnnotations$1$3$onlyFirst(result, localPosition, onlyFirst, $S) {
      if (!this._clipRect.contains$1(0, localPosition))
        return false;
      return this.super$ContainerLayer$findAnnotations(result, localPosition, true, $S);
    },
    addToScene$1(builder) {
      var layer, t1, _this = this;
      _this._clipRect.toString;
      type$.nullable_ClipRectEngineLayer._as(_this._engineLayer);
      layer = new A.ClipRectEngineLayer();
      builder._pushLayer$1(layer);
      _this.set$engineLayer(layer);
      _this.addChildrenToScene$1(builder);
      t1 = builder._layerStack;
      if (t1.length !== 0)
        t1.pop();
    }
  };
  A.ClipRRectLayer.prototype = {
    findAnnotations$1$3$onlyFirst(result, localPosition, onlyFirst, $S) {
      if (!this._clipRRect.contains$1(0, localPosition))
        return false;
      return this.super$ContainerLayer$findAnnotations(result, localPosition, true, $S);
    },
    addToScene$1(builder) {
      var layer, _this = this,
        t1 = _this._clipRRect;
      t1.toString;
      type$.nullable_ClipRRectEngineLayer._as(_this._engineLayer);
      new Float32Array(A._ensureNativeList(A._setArrayType([t1.left, t1.top, t1.right, t1.bottom, t1.tlRadiusX, t1.tlRadiusY, t1.trRadiusX, t1.trRadiusY, t1.brRadiusX, t1.brRadiusY, t1.blRadiusX, t1.blRadiusY], type$.JSArray_double)));
      layer = new A.ClipRRectEngineLayer();
      builder._pushLayer$1(layer);
      _this.set$engineLayer(layer);
      _this.addChildrenToScene$1(builder);
      t1 = builder._layerStack;
      if (t1.length !== 0)
        t1.pop();
    }
  };
  A.ClipPathLayer.prototype = {
    findAnnotations$1$3$onlyFirst(result, localPosition, onlyFirst, $S) {
      if (!this._clipPath.contains$1(0, localPosition))
        return false;
      return this.super$ContainerLayer$findAnnotations(result, localPosition, true, $S);
    },
    addToScene$1(builder) {
      var layer, t1, _this = this;
      _this._clipPath.toString;
      type$.nullable_ClipPathEngineLayer._as(_this._engineLayer);
      layer = new A.ClipPathEngineLayer();
      builder._pushLayer$1(layer);
      _this.set$engineLayer(layer);
      _this.addChildrenToScene$1(builder);
      t1 = builder._layerStack;
      if (t1.length !== 0)
        t1.pop();
    }
  };
  A.TransformLayer.prototype = {
    set$transform(value) {
      var _this = this;
      if (value.$eq(0, _this._layer$_transform))
        return;
      _this._layer$_transform = value;
      _this._inverseDirty = true;
      _this.markNeedsAddToScene$0();
    },
    addToScene$1(builder) {
      var layer, _this = this,
        t1 = _this._lastEffectiveTransform = _this._layer$_transform,
        t2 = _this._layer$_offset;
      if (!t2.$eq(0, B.Offset_0_0)) {
        t1 = A.Matrix4_Matrix4$translationValues(t2._dx, t2._dy, 0);
        t2 = _this._lastEffectiveTransform;
        t2.toString;
        t1.multiply$1(t2);
        _this._lastEffectiveTransform = t1;
      }
      t1 = t1._m4storage;
      type$.nullable_TransformEngineLayer._as(_this._engineLayer);
      new Float64Array(A._ensureNativeList(t1));
      layer = new A.TransformEngineLayer();
      builder._pushLayer$1(layer);
      _this.set$engineLayer(layer);
      _this.addChildrenToScene$1(builder);
      t1 = builder._layerStack;
      if (t1.length !== 0)
        t1.pop();
    },
    _transformOffset$1(localPosition) {
      var t1, _this = this;
      if (_this._inverseDirty) {
        t1 = _this._layer$_transform;
        t1.toString;
        _this._invertedTransform = A.Matrix4_tryInvert(A.PointerEvent_removePerspectiveTransform(t1));
        _this._inverseDirty = false;
      }
      t1 = _this._invertedTransform;
      if (t1 == null)
        return null;
      return A.MatrixUtils_transformPoint(t1, localPosition);
    },
    findAnnotations$1$3$onlyFirst(result, localPosition, onlyFirst, $S) {
      var transformedOffset = this._transformOffset$1(localPosition);
      if (transformedOffset == null)
        return false;
      return this.super$OffsetLayer$findAnnotations(result, transformedOffset, true, $S);
    },
    applyTransform$2(child, transform) {
      var t1 = this._lastEffectiveTransform;
      if (t1 == null) {
        t1 = this._layer$_transform;
        t1.toString;
        transform.multiply$1(t1);
      } else
        transform.multiply$1(t1);
    }
  };
  A.OpacityLayer.prototype = {
    set$alpha(value) {
      var _this = this,
        t1 = _this._alpha;
      if (value != t1) {
        if (value === 255 || t1 === 255)
          _this.set$engineLayer(null);
        _this._alpha = value;
        _this.markNeedsAddToScene$0();
      }
    },
    addToScene$1(builder) {
      var t1, t2, layer, _this = this;
      if (_this._firstChild == null) {
        _this.set$engineLayer(null);
        return;
      }
      t1 = _this._alpha;
      t1.toString;
      t2 = _this._engineLayer;
      if (t1 < 255) {
        type$.nullable_OpacityEngineLayer._as(t2);
        layer = new A.OpacityEngineLayer();
        builder._pushLayer$1(layer);
        _this.set$engineLayer(layer);
      } else {
        type$.nullable_OffsetEngineLayer._as(t2);
        layer = new A.OffsetEngineLayer();
        builder._pushLayer$1(layer);
        _this.set$engineLayer(layer);
      }
      _this.addChildrenToScene$1(builder);
      t1 = builder._layerStack;
      if (t1.length !== 0)
        t1.pop();
    }
  };
  A.LayerLink.prototype = {
    toString$0(_) {
      var t1 = A.shortHash(this),
        t2 = this._leader != null ? "<linked>" : "<dangling>";
      return "<optimized out>#" + t1 + "(" + t2 + ")";
    }
  };
  A.LeaderLayer.prototype = {
    set$link(value) {
      var _this = this,
        t1 = _this._layer$_link;
      if (t1 === value)
        return;
      if (_this._node$_owner != null) {
        if (t1._leader === _this)
          t1._leader = null;
        value._leader = _this;
      }
      _this._layer$_link = value;
    },
    set$offset(value) {
      if (value.$eq(0, this._layer$_offset))
        return;
      this._layer$_offset = value;
      this.markNeedsAddToScene$0();
    },
    attach$1(owner) {
      this.super$ContainerLayer$attach(owner);
      this._layer$_link._leader = this;
    },
    detach$0() {
      var t1 = this._layer$_link;
      if (t1._leader === this)
        t1._leader = null;
      this.super$ContainerLayer$detach();
    },
    findAnnotations$1$3$onlyFirst(result, localPosition, onlyFirst, $S) {
      return this.super$ContainerLayer$findAnnotations(result, localPosition.$sub(0, this._layer$_offset), true, $S);
    },
    addToScene$1(builder) {
      var layer, _this = this,
        t1 = _this._layer$_offset;
      if (!t1.$eq(0, B.Offset_0_0)) {
        t1 = A.Matrix4_Matrix4$translationValues(t1._dx, t1._dy, 0);
        type$.nullable_TransformEngineLayer._as(_this._engineLayer);
        new Float64Array(A._ensureNativeList(t1._m4storage));
        layer = new A.TransformEngineLayer();
        builder._pushLayer$1(layer);
        _this.set$engineLayer(layer);
      } else
        _this.set$engineLayer(null);
      _this.addChildrenToScene$1(builder);
      if (!_this._layer$_offset.$eq(0, B.Offset_0_0)) {
        t1 = builder._layerStack;
        if (t1.length !== 0)
          t1.pop();
      }
    },
    applyTransform$2(child, transform) {
      var t1 = this._layer$_offset;
      if (!t1.$eq(0, B.Offset_0_0))
        transform.translate$2(t1._dx, t1._dy);
    }
  };
  A.FollowerLayer.prototype = {
    _transformOffset$1(localPosition) {
      var t1, vector, t2, t3, _this = this;
      if (_this._inverseDirty) {
        t1 = _this.getLastTransform$0();
        t1.toString;
        _this._invertedTransform = A.Matrix4_tryInvert(t1);
        _this._inverseDirty = false;
      }
      if (_this._invertedTransform == null)
        return null;
      vector = new A.Vector4(new Float64Array(4));
      vector.setValues$4(localPosition._dx, localPosition._dy, 0, 1);
      t1 = _this._invertedTransform.transform$1(vector)._v4storage;
      t2 = t1[0];
      t3 = _this.linkedOffset;
      return new A.Offset(t2 - t3._dx, t1[1] - t3._dy);
    },
    findAnnotations$1$3$onlyFirst(result, localPosition, onlyFirst, $S) {
      var t1, transformedOffset, _this = this;
      if (_this.link._leader == null) {
        t1 = _this.super$ContainerLayer$findAnnotations(result, localPosition.$sub(0, _this.unlinkedOffset), true, $S);
        return t1;
      }
      transformedOffset = _this._transformOffset$1(localPosition);
      if (transformedOffset == null)
        return false;
      return _this.super$ContainerLayer$findAnnotations(result, transformedOffset, true, $S);
    },
    getLastTransform$0() {
      var t1, result;
      if (this._layer$_lastTransform == null)
        return null;
      t1 = this._lastOffset;
      result = A.Matrix4_Matrix4$translationValues(-t1._dx, -t1._dy, 0);
      t1 = this._layer$_lastTransform;
      t1.toString;
      result.multiply$1(t1);
      return result;
    },
    _establishTransform$0() {
      var leader, t1, forwardLayers, inverseLayers, forwardTransform, inverseTransform, _this = this;
      _this._layer$_lastTransform = null;
      leader = _this.link._leader;
      if (leader == null)
        return;
      t1 = type$.JSArray_ContainerLayer;
      forwardLayers = A._setArrayType([leader], t1);
      inverseLayers = A._setArrayType([_this], t1);
      A.FollowerLayer__pathsToCommonAncestor(leader, _this, forwardLayers, inverseLayers);
      forwardTransform = A.FollowerLayer__collectTransformForLayerChain(forwardLayers);
      leader.applyTransform$2(null, forwardTransform);
      t1 = _this.linkedOffset;
      forwardTransform.translate$2(t1._dx, t1._dy);
      inverseTransform = A.FollowerLayer__collectTransformForLayerChain(inverseLayers);
      if (inverseTransform.copyInverse$1(inverseTransform) === 0)
        return;
      inverseTransform.multiply$1(forwardTransform);
      _this._layer$_lastTransform = inverseTransform;
      _this._inverseDirty = true;
    },
    get$alwaysNeedsAddToScene() {
      return true;
    },
    addToScene$1(builder) {
      var t1, t2, layer, matrix, _this = this;
      _this._establishTransform$0();
      t1 = _this._layer$_lastTransform;
      t2 = type$.nullable_TransformEngineLayer;
      if (t1 != null) {
        _this._lastOffset = _this.unlinkedOffset;
        t1 = t1._m4storage;
        t2._as(_this._engineLayer);
        new Float64Array(A._ensureNativeList(t1));
        layer = new A.TransformEngineLayer();
        builder._pushLayer$1(layer);
        _this.set$engineLayer(layer);
        _this.addChildrenToScene$1(builder);
        t1 = builder._layerStack;
        if (t1.length !== 0)
          t1.pop();
      } else {
        _this._lastOffset = null;
        t1 = _this.unlinkedOffset;
        matrix = A.Matrix4_Matrix4$translationValues(t1._dx, t1._dy, 0);
        t2._as(_this._engineLayer);
        new Float64Array(A._ensureNativeList(matrix._m4storage));
        layer = new A.TransformEngineLayer();
        builder._pushLayer$1(layer);
        _this.set$engineLayer(layer);
        _this.addChildrenToScene$1(builder);
        t1 = builder._layerStack;
        if (t1.length !== 0)
          t1.pop();
      }
      _this._inverseDirty = true;
    },
    applyTransform$2(child, transform) {
      var t1 = this._layer$_lastTransform;
      if (t1 != null)
        transform.multiply$1(t1);
      else {
        t1 = this.unlinkedOffset;
        transform.multiply$1(A.Matrix4_Matrix4$translationValues(t1._dx, t1._dy, 0));
      }
    }
  };
  A.AnnotatedRegionLayer.prototype = {
    findAnnotations$1$3$onlyFirst(result, localPosition, onlyFirst, $S) {
      var t3, t4, _this = this,
        isAbsorbed = _this.super$ContainerLayer$findAnnotations(result, localPosition, true, $S),
        t1 = result._layer$_entries,
        t2 = t1.length;
      if (t2 !== 0)
        return isAbsorbed;
      t2 = _this.size;
      if (t2 != null) {
        t3 = _this.offset;
        t4 = t3._dx;
        t3 = t3._dy;
        t2 = !new A.Rect(t4, t3, t4 + t2._dx, t3 + t2._dy).contains$1(0, localPosition);
      } else
        t2 = false;
      if (t2)
        return isAbsorbed;
      if (A.createRuntimeType(_this.$ti._precomputed1) === A.createRuntimeType($S))
        t1.push(new A.AnnotationEntry($S._as(_this.value), localPosition.$sub(0, _this.offset), $S._eval$1("AnnotationEntry<0>")));
      return isAbsorbed;
    }
  };
  A._Layer_AbstractNode_DiagnosticableTreeMixin.prototype = {};
  A.ListWheelParentData.prototype = {};
  A.RenderListWheelViewport.prototype = {
    set$offset(value) {
      var _this = this,
        t1 = _this._list_wheel_viewport$_offset;
      if (value === t1)
        return;
      if (_this._node$_owner != null)
        t1.removeListener$1(_this.get$_hasScrolled());
      _this._list_wheel_viewport$_offset = value;
      if (_this._node$_owner != null)
        value.addListener$1(_this.get$_hasScrolled());
      _this.markNeedsLayout$0();
    },
    set$diameterRatio(value) {
      var _this = this;
      if (value === _this._diameterRatio)
        return;
      _this._diameterRatio = value;
      _this.markNeedsPaint$0();
      _this.markNeedsSemanticsUpdate$0();
    },
    set$perspective(value) {
      var _this = this;
      if (value === _this._perspective)
        return;
      _this._perspective = value;
      _this.markNeedsPaint$0();
      _this.markNeedsSemanticsUpdate$0();
    },
    set$offAxisFraction(value) {
      if (value === this._offAxisFraction)
        return;
      this._offAxisFraction = value;
      this.markNeedsPaint$0();
    },
    set$useMagnifier(value) {
      return;
    },
    set$magnification(value) {
      if (value === this._magnification)
        return;
      this._magnification = value;
      this.markNeedsPaint$0();
    },
    set$overAndUnderCenterOpacity(value) {
      if (value === this._overAndUnderCenterOpacity)
        return;
      this._overAndUnderCenterOpacity = value;
      this.markNeedsPaint$0();
    },
    set$itemExtent(value) {
      if (value === this._itemExtent)
        return;
      this._itemExtent = value;
      this.markNeedsLayout$0();
    },
    set$squeeze(value) {
      var _this = this;
      if (value === _this._squeeze)
        return;
      _this._squeeze = value;
      _this.markNeedsLayout$0();
      _this.markNeedsSemanticsUpdate$0();
    },
    set$renderChildrenOutsideViewport(value) {
      return;
    },
    _hasScrolled$0() {
      this.markNeedsLayout$0();
      this.markNeedsSemanticsUpdate$0();
    },
    setupParentData$1(child) {
      if (!(child.parentData instanceof A.ListWheelParentData))
        child.parentData = new A.ListWheelParentData(null, null, B.Offset_0_0);
    },
    attach$1(owner) {
      this.super$_RenderListWheelViewport_RenderBox_ContainerRenderObjectMixin$attach(owner);
      this._list_wheel_viewport$_offset.addListener$1(this.get$_hasScrolled());
    },
    detach$0() {
      this._list_wheel_viewport$_offset.removeListener$1(this.get$_hasScrolled());
      this.super$_RenderListWheelViewport_RenderBox_ContainerRenderObjectMixin$detach();
    },
    get$isRepaintBoundary() {
      return true;
    },
    get$_minEstimatedScrollExtent() {
      var t1 = this.childManager._widget;
      t1.toString;
      if (type$.ListWheelViewport._as(t1).childDelegate.get$estimatedChildCount() == null)
        return -1 / 0;
      return 0;
    },
    get$_maxEstimatedScrollExtent() {
      var t3,
        t1 = this.childManager,
        t2 = t1._widget;
      t2.toString;
      t3 = type$.ListWheelViewport;
      if (t3._as(t2).childDelegate.get$estimatedChildCount() == null)
        return 1 / 0;
      t1 = t1._widget;
      t1.toString;
      t1 = t3._as(t1).childDelegate.get$estimatedChildCount();
      t1.toString;
      return Math.max(0, (t1 - 1) * this._itemExtent);
    },
    get$_topScrollMarginExtent() {
      return -this._size._dy / 2 + this._itemExtent / 2;
    },
    _getUntransformedPaintingCoordinateY$1(layoutCoordinateY) {
      var t1 = this.get$_topScrollMarginExtent(),
        t2 = this._list_wheel_viewport$_offset._scroll_position$_pixels;
      t2.toString;
      return layoutCoordinateY - t1 - t2;
    },
    get$_maxVisibleRadian() {
      var t1 = this._diameterRatio;
      if (t1 < 1)
        return 1.5707963267948966;
      return Math.asin(1 / t1);
    },
    get$sizedByParent() {
      return true;
    },
    computeDryLayout$1(constraints) {
      return new A.Size(A.clampDouble(1 / 0, constraints.minWidth, constraints.maxWidth), A.clampDouble(1 / 0, constraints.minHeight, constraints.maxHeight));
    },
    _createChild$2$after(index, after) {
      this.invokeLayoutCallback$1$1(new A.RenderListWheelViewport__createChild_closure(this, index, after), type$.BoxConstraints);
    },
    _createChild$1(index) {
      return this._createChild$2$after(index, null);
    },
    _destroyChild$1(child) {
      this.invokeLayoutCallback$1$1(new A.RenderListWheelViewport__destroyChild_closure(this, child), type$.BoxConstraints);
    },
    _layoutChild$3(child, constraints, index) {
      var t1;
      child.layout$2$parentUsesSize(constraints, true);
      t1 = child.parentData;
      t1.toString;
      type$.ListWheelParentData._as(t1).offset = new A.Offset(this._size._dx / 2 - child._size._dx / 2, index * this._itemExtent);
    },
    performLayout$0() {
      var visibleHeight, t3, firstVisibleOffset, lastVisibleOffset, targetFirstIndex, targetLastIndex, childConstraints, t4, currentFirstIndex, currentLastIndex, child, minScrollExtent, maxScrollExtent, _this = this,
        t1 = _this._list_wheel_viewport$_offset,
        t2 = _this._size._dy;
      if (t1._viewportDimension !== t2) {
        t1._viewportDimension = t2;
        t1._didChangeViewportDimensionOrReceiveCorrection = true;
      }
      t1 = _this.childManager;
      t2 = t1._widget;
      t2.toString;
      if (type$.ListWheelViewport._as(t2).childDelegate.get$estimatedChildCount() != null)
        _this._list_wheel_viewport$_offset.applyContentDimensions$2(_this.get$_minEstimatedScrollExtent(), _this.get$_maxEstimatedScrollExtent());
      visibleHeight = _this._size._dy * _this._squeeze;
      t2 = _this._list_wheel_viewport$_offset._scroll_position$_pixels;
      t2.toString;
      t3 = _this._itemExtent;
      firstVisibleOffset = t2 + t3 / 2 - visibleHeight / 2;
      lastVisibleOffset = firstVisibleOffset + visibleHeight;
      targetFirstIndex = B.JSNumber_methods.floor$0(firstVisibleOffset / t3);
      targetLastIndex = B.JSNumber_methods.floor$0(lastVisibleOffset / _this._itemExtent);
      if (targetLastIndex * _this._itemExtent === lastVisibleOffset)
        --targetLastIndex;
      while (true) {
        if (!(t1.retrieveWidget$1(targetFirstIndex) == null && targetFirstIndex <= targetLastIndex))
          break;
        ++targetFirstIndex;
      }
      while (true) {
        if (!(t1.retrieveWidget$1(targetLastIndex) == null && targetFirstIndex <= targetLastIndex))
          break;
        --targetLastIndex;
      }
      if (targetFirstIndex > targetLastIndex) {
        for (; t1 = _this.ContainerRenderObjectMixin__firstChild, t1 != null;)
          _this._destroyChild$1(t1);
        return;
      }
      if (_this.ContainerRenderObjectMixin__childCount > 0) {
        t2 = _this.ContainerRenderObjectMixin__firstChild;
        t2.toString;
        t2 = t2.parentData;
        t2.toString;
        t3 = type$.ListWheelParentData;
        t2 = t3._as(t2).index;
        t2.toString;
        if (t2 <= targetLastIndex) {
          t2 = _this.ContainerRenderObjectMixin__lastChild;
          t2.toString;
          t2 = t2.parentData;
          t2.toString;
          t2 = t3._as(t2).index;
          t2.toString;
          t2 = t2 < targetFirstIndex;
        } else
          t2 = true;
      } else
        t2 = false;
      if (t2)
        for (; t2 = _this.ContainerRenderObjectMixin__firstChild, t2 != null;)
          _this._destroyChild$1(t2);
      t2 = A.RenderObject.prototype.get$constraints.call(_this);
      t3 = _this._itemExtent;
      childConstraints = t2.copyWith$3$maxHeight$minHeight$minWidth(t3, t3, 0);
      if (_this.ContainerRenderObjectMixin__childCount === 0) {
        _this._createChild$1(targetFirstIndex);
        t2 = _this.ContainerRenderObjectMixin__firstChild;
        t2.toString;
        _this._layoutChild$3(t2, childConstraints, targetFirstIndex);
      }
      t2 = _this.ContainerRenderObjectMixin__firstChild;
      t2.toString;
      t2 = t2.parentData;
      t2.toString;
      t3 = type$.ListWheelParentData;
      t2 = t3._as(t2).index;
      t2.toString;
      t4 = _this.ContainerRenderObjectMixin__lastChild;
      t4.toString;
      t4 = t4.parentData;
      t4.toString;
      t4 = t3._as(t4).index;
      t4.toString;
      for (currentFirstIndex = t2; currentFirstIndex < targetFirstIndex;) {
        t2 = _this.ContainerRenderObjectMixin__firstChild;
        t2.toString;
        _this._destroyChild$1(t2);
        ++currentFirstIndex;
      }
      for (currentLastIndex = t4; currentLastIndex > targetLastIndex;) {
        t2 = _this.ContainerRenderObjectMixin__lastChild;
        t2.toString;
        _this._destroyChild$1(t2);
        --currentLastIndex;
      }
      child = _this.ContainerRenderObjectMixin__firstChild;
      for (t2 = A._instanceType(_this)._eval$1("ContainerRenderObjectMixin.1"); child != null;) {
        child.layout$2$parentUsesSize(childConstraints, true);
        t3 = child.parentData;
        t3.toString;
        child = t2._as(t3).ContainerParentDataMixin_nextSibling;
      }
      for (; currentFirstIndex > targetFirstIndex;) {
        --currentFirstIndex;
        _this._createChild$1(currentFirstIndex);
        t2 = _this.ContainerRenderObjectMixin__firstChild;
        t2.toString;
        _this._layoutChild$3(t2, childConstraints, currentFirstIndex);
      }
      for (; currentLastIndex < targetLastIndex;) {
        ++currentLastIndex;
        _this._createChild$2$after(currentLastIndex, _this.ContainerRenderObjectMixin__lastChild);
        t2 = _this.ContainerRenderObjectMixin__lastChild;
        t2.toString;
        _this._layoutChild$3(t2, childConstraints, currentLastIndex);
      }
      minScrollExtent = t1.retrieveWidget$1(targetFirstIndex - 1) != null ? _this.get$_minEstimatedScrollExtent() : targetFirstIndex * _this._itemExtent;
      maxScrollExtent = t1.retrieveWidget$1(targetLastIndex + 1) != null ? _this.get$_maxEstimatedScrollExtent() : targetLastIndex * _this._itemExtent;
      _this._list_wheel_viewport$_offset.applyContentDimensions$2(minScrollExtent, maxScrollExtent);
    },
    _shouldClipAtCurrentOffset$0() {
      var _this = this,
        highestUntransformedPaintY = _this._getUntransformedPaintingCoordinateY$1(0);
      return highestUntransformedPaintY < 0 || _this._size._dy < highestUntransformedPaintY + _this.get$_maxEstimatedScrollExtent() + _this._itemExtent;
    },
    paint$2(context, offset) {
      var t1, t2, t3, _this = this;
      if (_this.ContainerRenderObjectMixin__childCount > 0) {
        t1 = _this._shouldClipAtCurrentOffset$0() && _this._list_wheel_viewport$_clipBehavior !== B.Clip_0;
        t2 = _this._list_wheel_viewport$_clipRectLayer;
        if (t1) {
          t1 = _this.__RenderObject__needsCompositing_A;
          t1 === $ && A.throwUnnamedLateFieldNI();
          t3 = _this._size;
          t2.set$layer(context.pushClipRect$6$clipBehavior$oldLayer(t1, offset, new A.Rect(0, 0, 0 + t3._dx, 0 + t3._dy), _this.get$_paintVisibleChildren(), _this._list_wheel_viewport$_clipBehavior, t2._layer));
        } else {
          t2.set$layer(null);
          _this._paintVisibleChildren$2(context, offset);
        }
      }
    },
    dispose$0() {
      this._list_wheel_viewport$_clipRectLayer.set$layer(null);
      this.super$RenderObject$dispose();
    },
    _paintVisibleChildren$2(context, offset) {
      var t1, t2, t3,
        childToPaint = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.ListWheelParentData, t2 = A._instanceType(this)._eval$1("ContainerRenderObjectMixin.1"); childToPaint != null;) {
        t3 = childToPaint.parentData;
        t3.toString;
        this._paintTransformedChild$4(childToPaint, context, offset, t1._as(t3).offset);
        t3 = childToPaint.parentData;
        t3.toString;
        childToPaint = t2._as(t3).ContainerParentDataMixin_nextSibling;
      }
    },
    _paintTransformedChild$4(child, context, offset, layoutOffset) {
      var t1, t2, t3, result, c, s, offsetToCenter, _this = this,
        untransformedPaintingCoordinates = offset.$add(0, new A.Offset(layoutOffset._dx, _this._getUntransformedPaintingCoordinateY$1(layoutOffset._dy))),
        angle = -((untransformedPaintingCoordinates._dy + _this._itemExtent / 2) / _this._size._dy - 0.5) * 2 * _this.get$_maxVisibleRadian() / _this._squeeze;
      if (angle > 1.5707963267948966 || angle < -1.5707963267948966)
        return;
      t1 = _this._size._dy * _this._diameterRatio / 2;
      t2 = _this._perspective;
      t3 = new Float64Array(16);
      result = new A.Matrix4(t3);
      result.setIdentity$0();
      t3[11] = -t2;
      t3[14] = -t1;
      t3[15] = t2 * t1 + 1;
      t2 = new Float64Array(16);
      t3 = new A.Matrix4(t2);
      t2[15] = 1;
      c = Math.cos(angle);
      s = Math.sin(angle);
      t2[0] = 1;
      t2[1] = 0;
      t2[2] = 0;
      t2[4] = 0;
      t2[5] = c;
      t2[6] = s;
      t2[8] = 0;
      t2[9] = -s;
      t2[10] = c;
      t2[3] = 0;
      t2[7] = 0;
      t2[11] = 0;
      t2 = t3;
      result = type$.Matrix4._as(result.$mul(0, t2.$mul(0, A.Matrix4_Matrix4$translationValues(0, 0, t1))));
      offsetToCenter = new A.Offset(untransformedPaintingCoordinates._dx, -_this.get$_topScrollMarginExtent());
      t1 = _this._overAndUnderCenterOpacity;
      if (t1 < 1)
        _this._paintChildWithMagnifier$6(context, offset, child, result, offsetToCenter, untransformedPaintingCoordinates);
      else
        _this._paintChildCylindrically$5(context, offset, child, result, offsetToCenter);
    },
    _paintChildWithMagnifier$6(context, offset, child, cylindricalTransform, offsetToCenter, untransformedPaintingCoordinates) {
      var isBeforeMagnifierBottomLine, topHalfRect, bottomHalfRect, _this = this,
        t1 = _this._size,
        t2 = t1._dy / 2,
        t3 = _this._itemExtent * _this._magnification,
        t4 = t3 / 2,
        magnifierTopLinePosition = t2 - t4,
        magnifierBottomLinePosition = t2 + t4;
      t4 = untransformedPaintingCoordinates._dy;
      isBeforeMagnifierBottomLine = t4 <= magnifierBottomLinePosition;
      if (t4 >= magnifierTopLinePosition - t3 && isBeforeMagnifierBottomLine) {
        t1 = 0 + t1._dx;
        topHalfRect = new A.Rect(0, 0, t1, 0 + magnifierTopLinePosition);
        bottomHalfRect = new A.Rect(0, magnifierBottomLinePosition, t1, magnifierBottomLinePosition + magnifierTopLinePosition);
        t2 = _this.__RenderObject__needsCompositing_A;
        t2 === $ && A.throwUnnamedLateFieldNI();
        context.pushClipRect$4(t2, offset, new A.Rect(0, magnifierTopLinePosition, t1, magnifierTopLinePosition + t3), new A.RenderListWheelViewport__paintChildWithMagnifier_closure(_this, child, untransformedPaintingCoordinates));
        t3 = _this.__RenderObject__needsCompositing_A;
        t1 = t4 <= magnifierTopLinePosition ? topHalfRect : bottomHalfRect;
        context.pushClipRect$4(t3, offset, t1, new A.RenderListWheelViewport__paintChildWithMagnifier_closure0(_this, child, cylindricalTransform, offsetToCenter));
      } else
        _this._paintChildCylindrically$5(context, offset, child, cylindricalTransform, offsetToCenter);
    },
    _paintChildCylindrically$5(context, offset, child, cylindricalTransform, offsetToCenter) {
      var result, t4, centerOriginTranslation, t5, _this = this,
        t1 = new A.RenderListWheelViewport__paintChildCylindrically_painter(child, offsetToCenter),
        t2 = new A.RenderListWheelViewport__paintChildCylindrically_opacityPainter(_this, t1),
        t3 = _this.__RenderObject__needsCompositing_A;
      t3 === $ && A.throwUnnamedLateFieldNI();
      result = new A.Matrix4(new Float64Array(16));
      result.setIdentity$0();
      t4 = _this._size;
      t4.toString;
      centerOriginTranslation = B.Alignment_0_0.alongSize$1(t4);
      t4 = centerOriginTranslation._dx;
      t5 = centerOriginTranslation._dy;
      result.translate$2(t4 * (-_this._offAxisFraction * 2 + 1), t5);
      result.multiply$1(cylindricalTransform);
      result.translate$2(-t4 * (-_this._offAxisFraction * 2 + 1), -t5);
      context.pushTransform$4(t3, offset, result, _this._overAndUnderCenterOpacity === 1 ? t1 : t2);
    },
    applyPaintTransform$2(child, transform) {
      var t1 = child.parentData;
      t1.toString;
      transform.translate$2(0, this._getUntransformedPaintingCoordinateY$1(type$.ListWheelParentData._as(t1).offset._dy));
    },
    describeApproximatePaintClip$1(child) {
      var t1;
      if (this._shouldClipAtCurrentOffset$0()) {
        t1 = this._size;
        return new A.Rect(0, 0, 0 + t1._dx, 0 + t1._dy);
      }
      return null;
    },
    hitTestChildren$2$position(result, position) {
      return false;
    },
    getOffsetToReveal$3$rect(target, alignment, rect) {
      var t1, child, t2;
      if (rect == null)
        rect = target.get$paintBounds();
      for (t1 = type$.RenderObject, child = target; t2 = child._node$_parent, t2 !== this; child = t2) {
        t2.toString;
        t1._as(t2);
      }
      t1 = child.parentData;
      t1.toString;
      return new A.RevealedOffset(type$.ListWheelParentData._as(t1).offset._dy, A.MatrixUtils_transformRect(target.getTransformTo$1(child), rect).translate$2(0, (this._size._dy - this._itemExtent) / 2));
    },
    showOnScreen$4$curve$descendant$duration$rect(curve, descendant, duration, rect) {
      var revealedOffset, t1, t2;
      if (descendant != null) {
        revealedOffset = this.getOffsetToReveal$3$rect(descendant, 0.5, rect);
        t1 = this._list_wheel_viewport$_offset;
        t2 = revealedOffset.offset;
        if (duration._duration === 0)
          t1.jumpTo$1(t2);
        else
          t1.animateTo$3$curve$duration(t2, curve, duration);
        rect = revealedOffset.rect;
      }
      this.super$RenderObject$showOnScreen(curve, null, duration, rect);
    },
    showOnScreen$0() {
      return this.showOnScreen$4$curve$descendant$duration$rect(B.Cubic_glB, null, B.Duration_0, null);
    }
  };
  A.RenderListWheelViewport__createChild_closure.prototype = {
    call$1(constraints) {
      this.$this.childManager.createChild$2$after(this.index, this.after);
    },
    $signature: 81
  };
  A.RenderListWheelViewport__destroyChild_closure.prototype = {
    call$1(constraints) {
      this.$this.childManager.removeChild$1(this.child);
    },
    $signature: 81
  };
  A.RenderListWheelViewport__paintChildWithMagnifier_closure.prototype = {
    call$2(context, offset) {
      var magnify, t3,
        t1 = this.$this,
        t2 = t1.__RenderObject__needsCompositing_A;
      t2 === $ && A.throwUnnamedLateFieldNI();
      magnify = new A.Matrix4(new Float64Array(16));
      magnify.setIdentity$0();
      t3 = t1._size;
      magnify.translate$2(t3._dx * (-t1._offAxisFraction + 0.5), t3._dy / 2);
      t3 = t1._magnification;
      magnify.scale$3(t3, t3, t3);
      t3 = t1._size;
      magnify.translate$2(-t3._dx * (-t1._offAxisFraction + 0.5), -t3._dy / 2);
      context.pushTransform$4(t2, offset, magnify, new A.RenderListWheelViewport__paintChildWithMagnifier__closure(this.child, this.untransformedPaintingCoordinates));
    },
    $signature: 3
  };
  A.RenderListWheelViewport__paintChildWithMagnifier__closure.prototype = {
    call$2(context, offset) {
      context.paintChild$2(this.child, offset.$add(0, this.untransformedPaintingCoordinates));
    },
    $signature: 3
  };
  A.RenderListWheelViewport__paintChildWithMagnifier_closure0.prototype = {
    call$2(context, offset) {
      var _this = this;
      _this.$this._paintChildCylindrically$5(context, offset, _this.child, _this.cylindricalTransform, _this.offsetToCenter);
    },
    $signature: 3
  };
  A.RenderListWheelViewport__paintChildCylindrically_painter.prototype = {
    call$2(context, offset) {
      context.paintChild$2(this.child, offset.$add(0, this.offsetToCenter));
    },
    $signature: 3
  };
  A.RenderListWheelViewport__paintChildCylindrically_opacityPainter.prototype = {
    call$2(context, offset) {
      context.pushOpacity$3(offset, B.JSNumber_methods.round$0(this.$this._overAndUnderCenterOpacity * 255), this.painter);
    },
    $signature: 3
  };
  A._RenderListWheelViewport_RenderBox_ContainerRenderObjectMixin.prototype = {
    attach$1(owner) {
      var child, t1, t2;
      this.super$RenderObject$attach(owner);
      child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.ListWheelParentData; child != null;) {
        child.attach$1(owner);
        t2 = child.parentData;
        t2.toString;
        child = t1._as(t2).ContainerParentDataMixin_nextSibling;
      }
    },
    detach$0() {
      var child, t1, t2;
      this.super$AbstractNode$detach();
      child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.ListWheelParentData; child != null;) {
        child.detach$0();
        t2 = child.parentData;
        t2.toString;
        child = t1._as(t2).ContainerParentDataMixin_nextSibling;
      }
    }
  };
  A._MouseState.prototype = {
    replaceAnnotations$1(value) {
      var previous = this._annotations;
      this._annotations = value;
      return previous;
    },
    toString$0(_) {
      var _s16_ = "<optimized out>#",
        t1 = A.shortHash(this._latestEvent),
        t2 = this._annotations.__js_helper$_length;
      return _s16_ + A.shortHash(this) + "(" + ("latestEvent: " + (_s16_ + t1)) + ", " + ("annotations: [list of " + t2 + "]") + ")";
    }
  };
  A._MouseTrackerUpdateDetails.prototype = {
    get$device() {
      return this.previousEvent.get$device();
    }
  };
  A.MouseTracker.prototype = {
    _hitTestResultToAnnotations$1(result) {
      var t2, t3, _i, entry, target, t4,
        t1 = type$.MouseTrackerAnnotation,
        annotations = A.LinkedHashMap_LinkedHashMap(t1, type$.Matrix4);
      for (t2 = result._path, t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, A.throwConcurrentModificationError)(t2), ++_i) {
        entry = t2[_i];
        target = entry.target;
        if (t1._is(target)) {
          t4 = entry._transform;
          t4.toString;
          annotations.$indexSet(0, target, t4);
        }
      }
      return annotations;
    },
    _findAnnotations$2(state, hitTest) {
      var globalPosition = state._latestEvent.get$position();
      if (!this._mouseStates.containsKey$1(state._latestEvent.get$device()))
        return A.LinkedHashMap_LinkedHashMap(type$.MouseTrackerAnnotation, type$.Matrix4);
      return this._hitTestResultToAnnotations$1(hitTest.call$1(globalPosition));
    },
    _handleDeviceUpdate$1(details) {
      var t1, t2;
      A.MouseTracker__handleDeviceUpdateMouseEvents(details);
      t1 = details.nextAnnotations;
      t2 = A._instanceType(t1)._eval$1("LinkedHashMapKeysIterable<1>");
      this._mouseCursorMixin.handleDeviceCursorUpdate$3(details.get$device(), details.triggeringEvent, A.MappedIterable_MappedIterable(new A.LinkedHashMapKeysIterable(t1, t2), new A.MouseTracker__handleDeviceUpdate_closure(), t2._eval$1("Iterable.E"), type$.MouseCursor));
    },
    updateWithEvent$2($event, getResult) {
      var result, device, t1, existingState, t2;
      if ($event.get$kind() !== B.PointerDeviceKind_1)
        return;
      if (type$.PointerSignalEvent._is($event))
        return;
      result = type$.PointerRemovedEvent._is($event) ? A.HitTestResult$() : getResult.call$0();
      device = $event.get$device();
      t1 = this._mouseStates;
      existingState = t1.$index(0, device);
      if (!A.MouseTracker__shouldMarkStateDirty(existingState, $event))
        return;
      t2 = t1.__js_helper$_length;
      new A.MouseTracker_updateWithEvent_closure(this, existingState, $event, device, result).call$0();
      if (t2 !== 0 !== (t1.__js_helper$_length !== 0))
        this.notifyListeners$0();
    },
    updateAllDevices$1(hitTest) {
      new A.MouseTracker_updateAllDevices_closure(this, hitTest).call$0();
    }
  };
  A.MouseTracker__handleDeviceUpdate_closure.prototype = {
    call$1(annotation) {
      return annotation.get$cursor();
    },
    $signature: 143
  };
  A.MouseTracker_updateWithEvent_closure.prototype = {
    call$0() {
      var _this = this;
      new A.MouseTracker_updateWithEvent__closure(_this.$this, _this.existingState, _this.event, _this.device, _this.result).call$0();
    },
    $signature: 0
  };
  A.MouseTracker_updateWithEvent__closure.prototype = {
    call$0() {
      var t2, t3, targetState, previous, nextAnnotations, _this = this,
        t1 = _this.existingState;
      if (t1 == null) {
        t2 = _this.event;
        if (type$.PointerRemovedEvent._is(t2))
          return;
        _this.$this._mouseStates.$indexSet(0, _this.device, new A._MouseState(A.LinkedHashMap_LinkedHashMap(type$.MouseTrackerAnnotation, type$.Matrix4), t2));
      } else {
        t2 = _this.event;
        if (type$.PointerRemovedEvent._is(t2))
          _this.$this._mouseStates.remove$1(0, t2.get$device());
      }
      t3 = _this.$this;
      targetState = t3._mouseStates.$index(0, _this.device);
      if (targetState == null) {
        t1.toString;
        targetState = t1;
      }
      previous = targetState._latestEvent;
      targetState._latestEvent = t2;
      nextAnnotations = type$.PointerRemovedEvent._is(t2) ? A.LinkedHashMap_LinkedHashMap(type$.MouseTrackerAnnotation, type$.Matrix4) : t3._hitTestResultToAnnotations$1(_this.result);
      t3._handleDeviceUpdate$1(new A._MouseTrackerUpdateDetails(targetState.replaceAnnotations$1(nextAnnotations), nextAnnotations, previous, t2));
    },
    $signature: 0
  };
  A.MouseTracker_updateAllDevices_closure.prototype = {
    call$0() {
      var t1, t2, t3, t4, lastEvent, nextAnnotations, previous;
      for (t1 = this.$this, t2 = t1._mouseStates, t2 = new A.LinkedHashMapValueIterator(t2, t2._modifications, t2._first), t3 = this.hitTest; t2.moveNext$0();) {
        t4 = t2.__js_helper$_current;
        lastEvent = t4._latestEvent;
        nextAnnotations = t1._findAnnotations$2(t4, t3);
        previous = t4._annotations;
        t4._annotations = nextAnnotations;
        t1._handleDeviceUpdate$1(new A._MouseTrackerUpdateDetails(previous, nextAnnotations, lastEvent, null));
      }
    },
    $signature: 0
  };
  A.MouseTracker__handleDeviceUpdateMouseEvents_closure.prototype = {
    call$2(annotation, transform) {
      var t1;
      if (!this.nextAnnotations.containsKey$1(annotation))
        if (annotation.get$validForMouseTracker() && annotation.get$onExit() != null) {
          t1 = annotation.get$onExit();
          t1.toString;
          t1.call$1(this.baseExitEvent.transformed$1(this.lastAnnotations.$index(0, annotation)));
        }
    },
    $signature: 144
  };
  A.MouseTracker__handleDeviceUpdateMouseEvents_closure0.prototype = {
    call$1(annotation) {
      return !this.lastAnnotations.containsKey$1(annotation);
    },
    $signature: 145
  };
  A.__MouseTrackerUpdateDetails_Object_Diagnosticable.prototype = {};
  A.ParentData.prototype = {
    detach$0() {
    },
    toString$0(_) {
      return "<none>";
    }
  };
  A.PaintingContext.prototype = {
    paintChild$2(child, offset) {
      var t1, _this = this;
      if (child.get$isRepaintBoundary()) {
        _this.stopRecordingIfNeeded$0();
        if (!child._needsPaint) {
          t1 = child.__RenderObject__wasRepaintBoundary_A;
          t1 === $ && A.throwUnnamedLateFieldNI();
          t1 = !t1;
        } else
          t1 = true;
        if (t1)
          A.PaintingContext__repaintCompositedChild(child, true);
        else if (child._needsCompositedLayerUpdate)
          A.PaintingContext_updateLayerProperties(child);
        t1 = child._layerHandle._layer;
        t1.toString;
        type$.OffsetLayer._as(t1);
        t1.set$offset(offset);
        t1.remove$0(0);
        _this._containerLayer.append$1(t1);
      } else {
        t1 = child.__RenderObject__wasRepaintBoundary_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
        if (t1) {
          child._layerHandle.set$layer(null);
          child._paintWithContext$2(_this, offset);
        } else
          child._paintWithContext$2(_this, offset);
      }
    },
    get$canvas() {
      var t1, t2, t3, t4, _this = this;
      if (_this._canvas == null) {
        _this._currentLayer = new A.PictureLayer(_this.estimatedBounds, A.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$.void_Function), A.LayerHandle$());
        t1 = _this._recorder = new A.PictureRecorder();
        t2 = new Uint8Array(10);
        t3 = new Float32Array(30);
        t4 = A._setArrayType([], type$.JSArray_Object);
        if (t1._ui$_canvas != null)
          A.throwExpression(A.ArgumentError$(string$.x22recor, null));
        _this._canvas = t1._ui$_canvas = new A.Canvas(t1, t2, t3, t4);
        t1 = _this._currentLayer;
        t1.toString;
        _this._containerLayer.append$1(t1);
      }
      t1 = _this._canvas;
      t1.toString;
      return t1;
    },
    _startRecording$0() {
      var t1, t2, t3, t4, _this = this;
      _this._currentLayer = new A.PictureLayer(_this.estimatedBounds, A.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$.void_Function), A.LayerHandle$());
      t1 = _this._recorder = new A.PictureRecorder();
      t2 = new Uint8Array(10);
      t3 = new Float32Array(30);
      t4 = A._setArrayType([], type$.JSArray_Object);
      if (t1._ui$_canvas != null)
        A.throwExpression(A.ArgumentError$(string$.x22recor, null));
      _this._canvas = t1._ui$_canvas = new A.Canvas(t1, t2, t3, t4);
      t1 = _this._currentLayer;
      t1.toString;
      _this._containerLayer.append$1(t1);
    },
    stopRecordingIfNeeded$0() {
      var t1, t2, t3, _this = this;
      if (_this._canvas == null)
        return;
      t1 = _this._currentLayer;
      t1.toString;
      t2 = _this._recorder;
      t3 = t2._ui$_canvas;
      if (t3 == null)
        A.throwExpression(A.StateError$("PictureRecorder did not start recording."));
      t2._ui$_canvas = t3._ui$_recorder = null;
      t1.set$picture(new A.Picture());
      _this._canvas = _this._recorder = _this._currentLayer = null;
    },
    setIsComplexHint$0() {
      var t1 = this._currentLayer;
      if (t1 != null)
        if (!t1._isComplexHint) {
          t1._isComplexHint = true;
          t1.markNeedsAddToScene$0();
        }
    },
    pushLayer$4$childPaintBounds(childLayer, painter, offset, childPaintBounds) {
      var childContext;
      if (childLayer._firstChild != null)
        childLayer.removeAllChildren$0();
      this.stopRecordingIfNeeded$0();
      childLayer.remove$0(0);
      this._containerLayer.append$1(childLayer);
      childContext = new A.PaintingContext(childLayer, childPaintBounds == null ? this.estimatedBounds : childPaintBounds);
      painter.call$2(childContext, offset);
      childContext.stopRecordingIfNeeded$0();
    },
    pushLayer$3(childLayer, painter, offset) {
      return this.pushLayer$4$childPaintBounds(childLayer, painter, offset, null);
    },
    pushClipRect$6$clipBehavior$oldLayer(needsCompositing, offset, clipRect, painter, clipBehavior, oldLayer) {
      var offsetClipRect, layer, _this = this;
      if (clipBehavior === B.Clip_0) {
        painter.call$2(_this, offset);
        return null;
      }
      offsetClipRect = clipRect.shift$1(offset);
      if (needsCompositing) {
        layer = oldLayer == null ? new A.ClipRectLayer(B.Clip_1, A.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$.void_Function), A.LayerHandle$()) : oldLayer;
        if (!offsetClipRect.$eq(0, layer._clipRect)) {
          layer._clipRect = offsetClipRect;
          layer.markNeedsAddToScene$0();
        }
        if (clipBehavior !== layer._layer$_clipBehavior) {
          layer._layer$_clipBehavior = clipBehavior;
          layer.markNeedsAddToScene$0();
        }
        _this.pushLayer$4$childPaintBounds(layer, painter, offset, offsetClipRect);
        return layer;
      } else {
        _this.clipRectAndPaint$4(offsetClipRect, clipBehavior, offsetClipRect, new A.PaintingContext_pushClipRect_closure(_this, painter, offset));
        return null;
      }
    },
    pushClipRect$4(needsCompositing, offset, clipRect, painter) {
      return this.pushClipRect$6$clipBehavior$oldLayer(needsCompositing, offset, clipRect, painter, B.Clip_1, null);
    },
    pushClipRRect$7$clipBehavior$oldLayer(needsCompositing, offset, bounds, clipRRect, painter, clipBehavior, oldLayer) {
      var offsetBounds, offsetClipRRect, layer, _this = this;
      if (clipBehavior === B.Clip_0) {
        painter.call$2(_this, offset);
        return null;
      }
      offsetBounds = bounds.shift$1(offset);
      offsetClipRRect = clipRRect.shift$1(offset);
      if (needsCompositing) {
        layer = oldLayer == null ? new A.ClipRRectLayer(B.Clip_2, A.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$.void_Function), A.LayerHandle$()) : oldLayer;
        if (!offsetClipRRect.$eq(0, layer._clipRRect)) {
          layer._clipRRect = offsetClipRRect;
          layer.markNeedsAddToScene$0();
        }
        if (clipBehavior !== layer._layer$_clipBehavior) {
          layer._layer$_clipBehavior = clipBehavior;
          layer.markNeedsAddToScene$0();
        }
        _this.pushLayer$4$childPaintBounds(layer, painter, offset, offsetBounds);
        return layer;
      } else {
        _this.clipRRectAndPaint$4(offsetClipRRect, clipBehavior, offsetBounds, new A.PaintingContext_pushClipRRect_closure(_this, painter, offset));
        return null;
      }
    },
    pushClipPath$7$clipBehavior$oldLayer(needsCompositing, offset, bounds, clipPath, painter, clipBehavior, oldLayer) {
      var offsetBounds, offsetClipPath, layer, _this = this;
      if (clipBehavior === B.Clip_0) {
        painter.call$2(_this, offset);
        return null;
      }
      offsetBounds = bounds.shift$1(offset);
      offsetClipPath = A.SurfacePath$shiftedFrom(clipPath, offset._dx, offset._dy);
      if (needsCompositing) {
        layer = oldLayer == null ? new A.ClipPathLayer(B.Clip_2, A.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$.void_Function), A.LayerHandle$()) : oldLayer;
        if (offsetClipPath !== layer._clipPath) {
          layer._clipPath = offsetClipPath;
          layer.markNeedsAddToScene$0();
        }
        if (clipBehavior !== layer._layer$_clipBehavior) {
          layer._layer$_clipBehavior = clipBehavior;
          layer.markNeedsAddToScene$0();
        }
        _this.pushLayer$4$childPaintBounds(layer, painter, offset, offsetBounds);
        return layer;
      } else {
        _this.clipPathAndPaint$4(offsetClipPath, clipBehavior, offsetBounds, new A.PaintingContext_pushClipPath_closure(_this, painter, offset));
        return null;
      }
    },
    pushTransform$5$oldLayer(needsCompositing, offset, transform, painter, oldLayer) {
      var layer, _this = this,
        t1 = offset._dx,
        t2 = offset._dy,
        effectiveTransform = A.Matrix4_Matrix4$translationValues(t1, t2, 0);
      effectiveTransform.multiply$1(transform);
      effectiveTransform.translate$2(-t1, -t2);
      if (needsCompositing) {
        layer = oldLayer == null ? A.TransformLayer$(null) : oldLayer;
        layer.set$transform(effectiveTransform);
        _this.pushLayer$4$childPaintBounds(layer, painter, offset, A.MatrixUtils_inverseTransformRect(effectiveTransform, _this.estimatedBounds));
        return layer;
      } else {
        t1 = _this.get$canvas();
        t1.save$0();
        t1.transform$1(effectiveTransform._m4storage);
        painter.call$2(_this, offset);
        _this.get$canvas().restore$0();
        return null;
      }
    },
    pushTransform$4(needsCompositing, offset, transform, painter) {
      return this.pushTransform$5$oldLayer(needsCompositing, offset, transform, painter, null);
    },
    pushOpacity$4$oldLayer(offset, alpha, painter, oldLayer) {
      var layer = oldLayer == null ? A.OpacityLayer$() : oldLayer;
      layer.set$alpha(alpha);
      layer.set$offset(offset);
      this.pushLayer$3(layer, painter, B.Offset_0_0);
      return layer;
    },
    pushOpacity$3(offset, alpha, painter) {
      return this.pushOpacity$4$oldLayer(offset, alpha, painter, null);
    },
    toString$0(_) {
      return "PaintingContext#" + A.Primitives_objectHashCode(this) + "(layer: " + this._containerLayer.toString$0(0) + ", canvas bounds: " + this.estimatedBounds.toString$0(0) + ")";
    }
  };
  A.PaintingContext_pushClipRect_closure.prototype = {
    call$0() {
      return this.painter.call$2(this.$this, this.offset);
    },
    $signature: 0
  };
  A.PaintingContext_pushClipRRect_closure.prototype = {
    call$0() {
      return this.painter.call$2(this.$this, this.offset);
    },
    $signature: 0
  };
  A.PaintingContext_pushClipPath_closure.prototype = {
    call$0() {
      return this.painter.call$2(this.$this, this.offset);
    },
    $signature: 0
  };
  A.Constraints.prototype = {};
  A._LocalSemanticsHandle.prototype = {
    dispose$0() {
      var t1 = this.listener;
      if (t1 != null)
        this._object$_owner._semanticsOwner.removeListener$1(t1);
      t1 = this._object$_owner;
      if (--t1._outstandingSemanticsHandles === 0) {
        t1._semanticsOwner.dispose$0();
        t1._semanticsOwner = null;
        t1.onSemanticsOwnerDisposed.call$0();
      }
    }
  };
  A.PipelineOwner.prototype = {
    requestVisualUpdate$0() {
      this.onNeedVisualUpdate.call$0();
    },
    set$rootNode(value) {
      var t1 = this._rootNode;
      if (t1 === value)
        return;
      if (t1 != null)
        t1.detach$0();
      this._rootNode = value;
      value.attach$1(this);
    },
    flushLayout$0() {
      var dirtyNodes, i, node, t1, t2, t3, t4, t5, t6, t7, t8, _this = this;
      try {
        for (t1 = type$.nullable_PipelineOwner, t2 = type$.JSArray_RenderObject; t3 = _this._nodesNeedingLayout, t3.length !== 0;) {
          dirtyNodes = t3;
          _this._nodesNeedingLayout = A._setArrayType([], t2);
          J.sort$1$ax(dirtyNodes, new A.PipelineOwner_flushLayout_closure());
          for (i = 0; i < J.get$length$asx(dirtyNodes); ++i) {
            if (_this._shouldMergeDirtyNodes) {
              _this._shouldMergeDirtyNodes = false;
              t3 = _this._nodesNeedingLayout;
              if (t3.length !== 0) {
                t4 = dirtyNodes;
                t5 = i;
                t6 = J.get$length$asx(dirtyNodes);
                A.RangeError_checkValidRange(t5, t6, J.get$length$asx(t4), null, null);
                t7 = A._arrayInstanceType(t4);
                t8 = new A.SubListIterable(t4, t5, t6, t7._eval$1("SubListIterable<1>"));
                t8.SubListIterable$3(t4, t5, t6, t7._precomputed1);
                B.JSArray_methods.addAll$1(t3, t8);
                break;
              }
            }
            node = J.$index$asx(dirtyNodes, i);
            if (node._needsLayout) {
              t3 = node;
              t3 = t1._as(A.AbstractNode.prototype.get$owner.call(t3)) === _this;
            } else
              t3 = false;
            if (t3)
              node._layoutWithoutResize$0();
          }
          _this._shouldMergeDirtyNodes = false;
        }
      } finally {
        _this._shouldMergeDirtyNodes = false;
      }
    },
    _enableMutationsToDirtySubtrees$1(callback) {
      try {
        callback.call$0();
      } finally {
        this._shouldMergeDirtyNodes = true;
      }
    },
    flushCompositingBits$0() {
      var t2, t3, _i, node,
        t1 = this._nodesNeedingCompositingBitsUpdate;
      B.JSArray_methods.sort$1(t1, new A.PipelineOwner_flushCompositingBits_closure());
      for (t2 = t1.length, t3 = type$.nullable_PipelineOwner, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
        node = t1[_i];
        if (node._needsCompositingBitsUpdate && t3._as(A.AbstractNode.prototype.get$owner.call(node)) === this)
          node._updateCompositingBits$0();
      }
      B.JSArray_methods.clear$0(t1);
    },
    flushPaint$0() {
      var dirtyNodes, node, t1, t2, t3, t4, _i, t5, t6;
      try {
        dirtyNodes = this._nodesNeedingPaint;
        this._nodesNeedingPaint = A._setArrayType([], type$.JSArray_RenderObject);
        for (t1 = dirtyNodes, J.sort$1$ax(t1, new A.PipelineOwner_flushPaint_closure()), t2 = t1.length, t3 = type$.nullable_PipelineOwner, t4 = type$.OffsetLayer, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
          node = t1[_i];
          if (node._needsPaint || node._needsCompositedLayerUpdate) {
            t5 = node;
            t5 = t3._as(A.AbstractNode.prototype.get$owner.call(t5)) === this;
          } else
            t5 = false;
          if (t5)
            if (node._layerHandle._layer._node$_owner != null)
              if (node._needsPaint)
                A.PaintingContext__repaintCompositedChild(node, false);
              else {
                t5 = node;
                t6 = t5._layerHandle._layer;
                t6.toString;
                t5.updateCompositedLayer$1$oldLayer(t4._as(t6));
                t5._needsCompositedLayerUpdate = false;
              }
            else
              node._skippedPaintingOnLayer$0();
        }
      } finally {
      }
    },
    ensureSemantics$1$listener(listener) {
      var t1, _this = this;
      if (++_this._outstandingSemanticsHandles === 1) {
        t1 = type$.SemanticsNode;
        _this._semanticsOwner = new A.SemanticsOwner(_this.onSemanticsUpdate, A.LinkedHashSet_LinkedHashSet$_empty(t1), A.LinkedHashMap_LinkedHashMap$_empty(type$.int, t1), A.LinkedHashSet_LinkedHashSet$_empty(t1), $.$get$ChangeNotifier__emptyListeners());
        _this.onSemanticsOwnerCreated.call$0();
      }
      if (listener != null)
        _this._semanticsOwner.addListener$1(listener);
      return new A._LocalSemanticsHandle(_this, listener);
    },
    ensureSemantics$0() {
      return this.ensureSemantics$1$listener(null);
    },
    flushSemantics$0() {
      var nodesToProcess, node, t1, nodesToProcess0, t2, t3, _i, t4, _this = this;
      if (_this._semanticsOwner == null)
        return;
      try {
        t1 = _this._nodesNeedingSemantics;
        nodesToProcess0 = A.List_List$_of(t1, A._instanceType(t1)._precomputed1);
        B.JSArray_methods.sort$1(nodesToProcess0, new A.PipelineOwner_flushSemantics_closure());
        nodesToProcess = nodesToProcess0;
        t1.clear$0(0);
        for (t1 = nodesToProcess, t2 = t1.length, t3 = type$.nullable_PipelineOwner, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
          node = t1[_i];
          if (node._needsSemanticsUpdate) {
            t4 = node;
            t4 = t3._as(A.AbstractNode.prototype.get$owner.call(t4)) === _this;
          } else
            t4 = false;
          if (t4)
            node._updateSemantics$0();
        }
        _this._semanticsOwner.sendSemanticsUpdate$0();
      } finally {
      }
    }
  };
  A.PipelineOwner_flushLayout_closure.prototype = {
    call$2(a, b) {
      return a._depth - b._depth;
    },
    $signature: 31
  };
  A.PipelineOwner_flushCompositingBits_closure.prototype = {
    call$2(a, b) {
      return a._depth - b._depth;
    },
    $signature: 31
  };
  A.PipelineOwner_flushPaint_closure.prototype = {
    call$2(a, b) {
      return b._depth - a._depth;
    },
    $signature: 31
  };
  A.PipelineOwner_flushSemantics_closure.prototype = {
    call$2(a, b) {
      return a._depth - b._depth;
    },
    $signature: 31
  };
  A.RenderObject.prototype = {
    RenderObject$0() {
      var _this = this;
      _this.__RenderObject__needsCompositing_A = _this.get$isRepaintBoundary() || _this.get$alwaysNeedsCompositing();
      _this.__RenderObject__wasRepaintBoundary_A = _this.get$isRepaintBoundary();
    },
    dispose$0() {
      this._layerHandle.set$layer(null);
    },
    setupParentData$1(child) {
      if (!(child.parentData instanceof A.ParentData))
        child.parentData = new A.ParentData();
    },
    adoptChild$1(child) {
      var _this = this;
      _this.setupParentData$1(child);
      _this.markNeedsLayout$0();
      _this.markNeedsCompositingBitsUpdate$0();
      _this.markNeedsSemanticsUpdate$0();
      _this.super$AbstractNode$adoptChild(child);
    },
    dropChild$1(child) {
      var _this = this;
      child._cleanRelayoutBoundary$0();
      child.parentData.detach$0();
      child.parentData = null;
      _this.super$AbstractNode$dropChild(child);
      _this.markNeedsLayout$0();
      _this.markNeedsCompositingBitsUpdate$0();
      _this.markNeedsSemanticsUpdate$0();
    },
    visitChildren$1(visitor) {
    },
    _reportException$3(method, exception, stack) {
      A.FlutterError_reportError(new A.FlutterErrorDetails(exception, stack, "rendering library", A.ErrorDescription$("during " + method + "()"), new A.RenderObject__reportException_closure(this), false));
    },
    attach$1(owner) {
      var _this = this;
      _this.super$AbstractNode$attach(owner);
      if (_this._needsLayout && _this._relayoutBoundary != null) {
        _this._needsLayout = false;
        _this.markNeedsLayout$0();
      }
      if (_this._needsCompositingBitsUpdate) {
        _this._needsCompositingBitsUpdate = false;
        _this.markNeedsCompositingBitsUpdate$0();
      }
      if (_this._needsPaint && _this._layerHandle._layer != null) {
        _this._needsPaint = false;
        _this.markNeedsPaint$0();
      }
      if (_this._needsSemanticsUpdate && _this.get$_semanticsConfiguration()._isSemanticBoundary) {
        _this._needsSemanticsUpdate = false;
        _this.markNeedsSemanticsUpdate$0();
      }
    },
    get$constraints() {
      var t1 = this._constraints;
      if (t1 == null)
        throw A.wrapException(A.StateError$("A RenderObject does not have any constraints before it has been laid out."));
      return t1;
    },
    markNeedsLayout$0() {
      var t1, _this = this;
      if (_this._needsLayout)
        return;
      t1 = _this._relayoutBoundary;
      if (t1 == null) {
        _this._needsLayout = true;
        if (_this._node$_parent != null)
          _this.markParentNeedsLayout$0();
        return;
      }
      if (t1 !== _this)
        _this.markParentNeedsLayout$0();
      else {
        _this._needsLayout = true;
        t1 = type$.nullable_PipelineOwner;
        if (t1._as(A.AbstractNode.prototype.get$owner.call(_this)) != null) {
          t1._as(A.AbstractNode.prototype.get$owner.call(_this))._nodesNeedingLayout.push(_this);
          t1._as(A.AbstractNode.prototype.get$owner.call(_this)).requestVisualUpdate$0();
        }
      }
    },
    markParentNeedsLayout$0() {
      this._needsLayout = true;
      var t1 = this._node$_parent;
      t1.toString;
      type$.RenderObject._as(t1);
      if (!this._doingThisLayoutWithCallback)
        t1.markNeedsLayout$0();
    },
    _cleanRelayoutBoundary$0() {
      var _this = this;
      if (_this._relayoutBoundary !== _this) {
        _this._relayoutBoundary = null;
        _this.visitChildren$1(A.object_RenderObject__cleanChildRelayoutBoundary$closure());
      }
    },
    _propagateRelayoutBoundary$0() {
      var t2, parentRelayoutBoundary, _this = this,
        t1 = _this._relayoutBoundary;
      if (t1 === _this)
        return;
      t2 = type$.nullable_RenderObject._as(_this._node$_parent);
      parentRelayoutBoundary = t2 == null ? null : t2._relayoutBoundary;
      if (parentRelayoutBoundary != t1) {
        _this._relayoutBoundary = parentRelayoutBoundary;
        _this.visitChildren$1(A.object_RenderObject__propagateRelayoutBoundaryToChild$closure());
      }
    },
    _layoutWithoutResize$0() {
      var e, stack, exception, _this = this;
      try {
        _this.performLayout$0();
        _this.markNeedsSemanticsUpdate$0();
      } catch (exception) {
        e = A.unwrapException(exception);
        stack = A.getTraceFromException(exception);
        _this._reportException$3("performLayout", e, stack);
      }
      _this._needsLayout = false;
      _this.markNeedsPaint$0();
    },
    layout$2$parentUsesSize(constraints, parentUsesSize) {
      var e, stack, e0, stack0, t1, relayoutBoundary, exception, _this = this,
        isRelayoutBoundary = true;
      if (parentUsesSize)
        if (!_this.get$sizedByParent()) {
          t1 = constraints.minWidth >= constraints.maxWidth && constraints.minHeight >= constraints.maxHeight || !(_this._node$_parent instanceof A.RenderObject);
          isRelayoutBoundary = t1;
        }
      if (isRelayoutBoundary)
        relayoutBoundary = _this;
      else {
        t1 = _this._node$_parent;
        t1.toString;
        t1 = type$.RenderObject._as(t1)._relayoutBoundary;
        t1.toString;
        relayoutBoundary = t1;
      }
      if (!_this._needsLayout && constraints.$eq(0, _this._constraints)) {
        if (relayoutBoundary !== _this._relayoutBoundary) {
          _this._relayoutBoundary = relayoutBoundary;
          _this.visitChildren$1(A.object_RenderObject__propagateRelayoutBoundaryToChild$closure());
        }
        return;
      }
      _this._constraints = constraints;
      t1 = _this._relayoutBoundary;
      if (t1 != null && relayoutBoundary !== t1)
        _this.visitChildren$1(A.object_RenderObject__cleanChildRelayoutBoundary$closure());
      _this._relayoutBoundary = relayoutBoundary;
      if (_this.get$sizedByParent())
        try {
          _this.performResize$0();
        } catch (exception) {
          e = A.unwrapException(exception);
          stack = A.getTraceFromException(exception);
          _this._reportException$3("performResize", e, stack);
        }
      try {
        _this.performLayout$0();
        _this.markNeedsSemanticsUpdate$0();
      } catch (exception) {
        e0 = A.unwrapException(exception);
        stack0 = A.getTraceFromException(exception);
        _this._reportException$3("performLayout", e0, stack0);
      }
      _this._needsLayout = false;
      _this.markNeedsPaint$0();
    },
    get$sizedByParent() {
      return false;
    },
    invokeLayoutCallback$1$1(callback, $T) {
      var _this = this;
      _this._doingThisLayoutWithCallback = true;
      try {
        type$.nullable_PipelineOwner._as(A.AbstractNode.prototype.get$owner.call(_this))._enableMutationsToDirtySubtrees$1(new A.RenderObject_invokeLayoutCallback_closure(_this, callback, $T));
      } finally {
        _this._doingThisLayoutWithCallback = false;
      }
    },
    get$isRepaintBoundary() {
      return false;
    },
    get$alwaysNeedsCompositing() {
      return false;
    },
    updateCompositedLayer$1$oldLayer(oldLayer) {
      return oldLayer == null ? A.OffsetLayer$(B.Offset_0_0) : oldLayer;
    },
    get$layer() {
      return this._layerHandle._layer;
    },
    markNeedsCompositingBitsUpdate$0() {
      var t1, t2, t3, _this = this;
      if (_this._needsCompositingBitsUpdate)
        return;
      t1 = _this._needsCompositingBitsUpdate = true;
      t2 = _this._node$_parent;
      if (t2 instanceof A.RenderObject) {
        if (t2._needsCompositingBitsUpdate)
          return;
        t3 = _this.__RenderObject__wasRepaintBoundary_A;
        t3 === $ && A.throwUnnamedLateFieldNI();
        if ((t3 ? !_this.get$isRepaintBoundary() : t1) && !t2.get$isRepaintBoundary()) {
          t2.markNeedsCompositingBitsUpdate$0();
          return;
        }
      }
      t1 = type$.nullable_PipelineOwner;
      if (t1._as(A.AbstractNode.prototype.get$owner.call(_this)) != null)
        t1._as(A.AbstractNode.prototype.get$owner.call(_this))._nodesNeedingCompositingBitsUpdate.push(_this);
    },
    _updateCompositingBits$0() {
      var t1, t2, _this = this;
      if (!_this._needsCompositingBitsUpdate)
        return;
      t1 = _this.__RenderObject__needsCompositing_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      _this.__RenderObject__needsCompositing_A = false;
      _this.visitChildren$1(new A.RenderObject__updateCompositingBits_closure(_this));
      if (_this.get$isRepaintBoundary() || _this.get$alwaysNeedsCompositing())
        _this.__RenderObject__needsCompositing_A = true;
      if (!_this.get$isRepaintBoundary()) {
        t2 = _this.__RenderObject__wasRepaintBoundary_A;
        t2 === $ && A.throwUnnamedLateFieldNI();
      } else
        t2 = false;
      if (t2) {
        _this._needsCompositedLayerUpdate = _this._needsPaint = false;
        t1 = type$.nullable_PipelineOwner._as(A.AbstractNode.prototype.get$owner.call(_this));
        if (t1 != null)
          B.JSArray_methods.remove$1(t1._nodesNeedingPaint, _this);
        _this._needsCompositingBitsUpdate = false;
        _this.markNeedsPaint$0();
      } else if (t1 !== _this.__RenderObject__needsCompositing_A) {
        _this._needsCompositingBitsUpdate = false;
        _this.markNeedsPaint$0();
      } else
        _this._needsCompositingBitsUpdate = false;
    },
    markNeedsPaint$0() {
      var t1, _this = this;
      if (_this._needsPaint)
        return;
      _this._needsPaint = true;
      if (_this.get$isRepaintBoundary()) {
        t1 = _this.__RenderObject__wasRepaintBoundary_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
      } else
        t1 = false;
      if (t1) {
        t1 = type$.nullable_PipelineOwner;
        if (t1._as(A.AbstractNode.prototype.get$owner.call(_this)) != null) {
          t1._as(A.AbstractNode.prototype.get$owner.call(_this))._nodesNeedingPaint.push(_this);
          t1._as(A.AbstractNode.prototype.get$owner.call(_this)).requestVisualUpdate$0();
        }
      } else {
        t1 = _this._node$_parent;
        if (t1 instanceof A.RenderObject)
          t1.markNeedsPaint$0();
        else {
          t1 = type$.nullable_PipelineOwner;
          if (t1._as(A.AbstractNode.prototype.get$owner.call(_this)) != null)
            t1._as(A.AbstractNode.prototype.get$owner.call(_this)).requestVisualUpdate$0();
        }
      }
    },
    markNeedsCompositedLayerUpdate$0() {
      var t1, _this = this;
      if (_this._needsCompositedLayerUpdate || _this._needsPaint)
        return;
      _this._needsCompositedLayerUpdate = true;
      if (_this.get$isRepaintBoundary()) {
        t1 = _this.__RenderObject__wasRepaintBoundary_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
      } else
        t1 = false;
      if (t1) {
        t1 = type$.nullable_PipelineOwner;
        if (t1._as(A.AbstractNode.prototype.get$owner.call(_this)) != null) {
          t1._as(A.AbstractNode.prototype.get$owner.call(_this))._nodesNeedingPaint.push(_this);
          t1._as(A.AbstractNode.prototype.get$owner.call(_this)).requestVisualUpdate$0();
        }
      } else
        _this.markNeedsPaint$0();
    },
    _skippedPaintingOnLayer$0() {
      var t1,
        node = this._node$_parent;
      for (; node instanceof A.RenderObject;) {
        if (node.get$isRepaintBoundary()) {
          t1 = node._layerHandle._layer;
          if (t1 == null)
            break;
          if (t1._node$_owner != null)
            break;
          node._needsPaint = true;
        }
        node = node._node$_parent;
      }
    },
    _paintWithContext$2(context, offset) {
      var e, stack, exception, _this = this;
      if (_this._needsLayout)
        return;
      _this._needsCompositedLayerUpdate = _this._needsPaint = false;
      _this.__RenderObject__wasRepaintBoundary_A = _this.get$isRepaintBoundary();
      try {
        _this.paint$2(context, offset);
      } catch (exception) {
        e = A.unwrapException(exception);
        stack = A.getTraceFromException(exception);
        _this._reportException$3("paint", e, stack);
      }
    },
    paint$2(context, offset) {
    },
    applyPaintTransform$2(child, transform) {
    },
    paintsChild$1(child) {
      return true;
    },
    getTransformTo$1(ancestor) {
      var rootNode, renderers, t2, renderer, t3, transform, index, index0,
        t1 = ancestor == null;
      if (t1) {
        rootNode = type$.nullable_PipelineOwner._as(A.AbstractNode.prototype.get$owner.call(this))._rootNode;
        if (rootNode instanceof A.RenderObject)
          ancestor = rootNode;
      }
      renderers = A._setArrayType([], type$.JSArray_RenderObject);
      t2 = type$.RenderObject;
      renderer = this;
      while (renderer !== ancestor) {
        renderers.push(renderer);
        t3 = renderer._node$_parent;
        t3.toString;
        t2._as(t3);
        renderer = t3;
      }
      if (!t1) {
        ancestor.toString;
        renderers.push(ancestor);
      }
      transform = new A.Matrix4(new Float64Array(16));
      transform.setIdentity$0();
      for (index = renderers.length - 1; index > 0; index = index0) {
        index0 = index - 1;
        renderers[index].applyPaintTransform$2(renderers[index0], transform);
      }
      return transform;
    },
    describeApproximatePaintClip$1(child) {
      return null;
    },
    describeSemanticsConfiguration$1(config) {
    },
    sendSemanticsEvent$1(semanticsEvent) {
      var t1;
      if (type$.nullable_PipelineOwner._as(A.AbstractNode.prototype.get$owner.call(this))._semanticsOwner == null)
        return;
      t1 = this._semantics;
      if (t1 != null && !t1._isMergedIntoParent)
        t1.sendEvent$1(semanticsEvent);
      else {
        t1 = this._node$_parent;
        if (t1 != null)
          type$.RenderObject._as(t1).sendSemanticsEvent$1(semanticsEvent);
      }
    },
    get$_semanticsConfiguration() {
      var t1, _this = this;
      if (_this._cachedSemanticsConfiguration == null) {
        t1 = A.SemanticsConfiguration$();
        _this._cachedSemanticsConfiguration = t1;
        _this.describeSemanticsConfiguration$1(t1);
      }
      t1 = _this._cachedSemanticsConfiguration;
      t1.toString;
      return t1;
    },
    clearSemantics$0() {
      this._needsSemanticsUpdate = true;
      this._semantics = null;
      this.visitChildren$1(new A.RenderObject_clearSemantics_closure());
    },
    markNeedsSemanticsUpdate$0() {
      var t1, wasSemanticsBoundary, mayProduceSiblingNodes, isEffectiveSemanticsBoundary, node, node0, _this = this;
      if (_this._node$_owner == null || type$.nullable_PipelineOwner._as(A.AbstractNode.prototype.get$owner.call(_this))._semanticsOwner == null) {
        _this._cachedSemanticsConfiguration = null;
        return;
      }
      if (_this._semantics != null) {
        t1 = _this._cachedSemanticsConfiguration;
        t1 = t1 == null ? null : t1._isSemanticBoundary;
        wasSemanticsBoundary = t1 === true;
      } else
        wasSemanticsBoundary = false;
      t1 = _this._cachedSemanticsConfiguration;
      mayProduceSiblingNodes = (t1 == null ? null : t1._childConfigurationsDelegate) != null || _this.get$_semanticsConfiguration()._childConfigurationsDelegate != null;
      _this._cachedSemanticsConfiguration = null;
      isEffectiveSemanticsBoundary = _this.get$_semanticsConfiguration()._isSemanticBoundary && wasSemanticsBoundary;
      node = _this;
      while (true) {
        node0 = node._node$_parent;
        if (node0 instanceof A.RenderObject)
          t1 = mayProduceSiblingNodes || !isEffectiveSemanticsBoundary;
        else
          t1 = false;
        if (!t1)
          break;
        if (node !== _this && node._needsSemanticsUpdate)
          break;
        node._needsSemanticsUpdate = true;
        if (isEffectiveSemanticsBoundary)
          mayProduceSiblingNodes = false;
        if (node0._cachedSemanticsConfiguration == null) {
          t1 = A.SemanticsConfiguration$();
          node0._cachedSemanticsConfiguration = t1;
          node0.describeSemanticsConfiguration$1(t1);
        }
        isEffectiveSemanticsBoundary = node0._cachedSemanticsConfiguration._isSemanticBoundary;
        if (isEffectiveSemanticsBoundary && node0._semantics == null)
          return;
        node = node0;
      }
      if (node !== _this && _this._semantics != null && _this._needsSemanticsUpdate)
        type$.nullable_PipelineOwner._as(A.AbstractNode.prototype.get$owner.call(_this))._nodesNeedingSemantics.remove$1(0, _this);
      if (!node._needsSemanticsUpdate) {
        node._needsSemanticsUpdate = true;
        t1 = type$.nullable_PipelineOwner;
        if (t1._as(A.AbstractNode.prototype.get$owner.call(_this)) != null) {
          t1._as(A.AbstractNode.prototype.get$owner.call(_this))._nodesNeedingSemantics.add$1(0, node);
          t1._as(A.AbstractNode.prototype.get$owner.call(_this)).requestVisualUpdate$0();
        }
      }
    },
    _updateSemantics$0() {
      var t1, t2, interestingFragment, result, siblingNodes, t3, t4, _this = this, _null = null;
      if (_this._needsLayout)
        return;
      t1 = _this._semantics;
      t2 = _null;
      if (t1 == null)
        t1 = t2;
      else {
        t1 = type$.nullable_SemanticsNode._as(A.AbstractNode.prototype.get$parent.call(t1));
        if (t1 == null)
          t1 = t2;
        else
          t1 = t1._mergeAllDescendantsIntoThisNode || t1._isMergedIntoParent;
      }
      interestingFragment = type$._InterestingSemanticsFragment._as(_this._getSemanticsForParent$1$mergeIntoParent(t1 === true));
      t1 = type$.JSArray_SemanticsNode;
      result = A._setArrayType([], t1);
      siblingNodes = A._setArrayType([], t1);
      t1 = _this._semantics;
      t2 = t1 == null;
      t3 = t2 ? _null : t1.parentSemanticsClipRect;
      t4 = t2 ? _null : t1.parentPaintClipRect;
      t1 = t2 ? _null : t1.elevationAdjustment;
      interestingFragment.compileChildren$5$elevationAdjustment$parentPaintClipRect$parentSemanticsClipRect$result$siblingNodes(t1 == null ? 0 : t1, t4, t3, result, siblingNodes);
    },
    _getSemanticsForParent$1$mergeIntoParent(mergeIntoParent) {
      var childrenMergeIntoParent, childConfigurations, explicitChildNode, hasChildConfigurationsDelegate, t1, configToFragment, t2, mergeUpFragments, siblingMergeFragmentGroups, t3, _i, result, _this = this, _box_0 = {},
        config = _this.get$_semanticsConfiguration();
      _box_0.dropSemanticsOfPreviousSiblings = config.isBlockingSemanticsOfPreviouslyPaintedNodes;
      _box_0.producesForkingFragment = !config._hasBeenAnnotated && !config._isSemanticBoundary;
      childrenMergeIntoParent = mergeIntoParent || config._isMergingSemanticsOfDescendants;
      childConfigurations = A._setArrayType([], type$.JSArray_SemanticsConfiguration);
      explicitChildNode = config.explicitChildNodes || !(_this._node$_parent instanceof A.RenderObject);
      hasChildConfigurationsDelegate = config._childConfigurationsDelegate != null;
      t1 = type$._InterestingSemanticsFragment;
      configToFragment = A.LinkedHashMap_LinkedHashMap$_empty(type$.SemanticsConfiguration, t1);
      t2 = type$.JSArray__InterestingSemanticsFragment;
      mergeUpFragments = A._setArrayType([], t2);
      siblingMergeFragmentGroups = A._setArrayType([], type$.JSArray_List__InterestingSemanticsFragment);
      t3 = config._tagsForChildren;
      t3 = t3 == null ? null : t3._collection$_length !== 0;
      _this.visitChildrenForSemantics$1(new A.RenderObject__getSemanticsForParent_closure(_box_0, _this, childrenMergeIntoParent, childConfigurations, mergeUpFragments, siblingMergeFragmentGroups, config, t3 === true, hasChildConfigurationsDelegate, configToFragment));
      if (explicitChildNode)
        for (t1 = mergeUpFragments.length, _i = 0; _i < mergeUpFragments.length; mergeUpFragments.length === t1 || (0, A.throwConcurrentModificationError)(mergeUpFragments), ++_i)
          mergeUpFragments[_i].markAsExplicit$0();
      else if (hasChildConfigurationsDelegate) {
        result = config._childConfigurationsDelegate.call$1(childConfigurations);
        t3 = result.mergeUp;
        B.JSArray_methods.addAll$1(mergeUpFragments, new A.MappedListIterable(t3, new A.RenderObject__getSemanticsForParent_closure0(_box_0, _this, configToFragment), A._arrayInstanceType(t3)._eval$1("MappedListIterable<1,_InterestingSemanticsFragment>")));
        for (t3 = result.siblingMergeGroups, _i = 0; false; ++_i)
          siblingMergeFragmentGroups.push(t3[_i].map$1$1(0, new A.RenderObject__getSemanticsForParent_closure1(_this, configToFragment), t1).toList$0(0));
      }
      _this._needsSemanticsUpdate = false;
      if (!(_this._node$_parent instanceof A.RenderObject)) {
        _this._marksExplicitInMergeGroup$2$isMergeUp(mergeUpFragments, true);
        B.JSArray_methods.forEach$1(siblingMergeFragmentGroups, _this.get$_marksExplicitInMergeGroup());
        t1 = _box_0.dropSemanticsOfPreviousSiblings;
        result = new A._RootSemanticsFragment(A._setArrayType([], t2), A._setArrayType([_this], type$.JSArray_RenderObject), t1);
      } else if (_box_0.producesForkingFragment) {
        t1 = _box_0.dropSemanticsOfPreviousSiblings;
        result = new A._ContainerSemanticsFragment(siblingMergeFragmentGroups, A._setArrayType([], t2), t1);
      } else {
        _this._marksExplicitInMergeGroup$2$isMergeUp(mergeUpFragments, true);
        B.JSArray_methods.forEach$1(siblingMergeFragmentGroups, _this.get$_marksExplicitInMergeGroup());
        t1 = _box_0.dropSemanticsOfPreviousSiblings;
        result = new A._SwitchableSemanticsFragment(mergeIntoParent, config, siblingMergeFragmentGroups, A._setArrayType([], t2), A._setArrayType([_this], type$.JSArray_RenderObject), t1);
        if (config._isSemanticBoundary)
          result._isExplicit = true;
      }
      result.addAll$1(0, mergeUpFragments);
      return result;
    },
    _marksExplicitInMergeGroup$2$isMergeUp(mergeGroup, isMergeUp) {
      var t1, i, fragment, t2, j, siblingFragment, t3, _this = this,
        toBeExplicit = A.LinkedHashSet_LinkedHashSet$_empty(type$._InterestingSemanticsFragment);
      for (t1 = J.getInterceptor$asx(mergeGroup), i = 0; i < t1.get$length(mergeGroup); ++i) {
        fragment = t1.$index(mergeGroup, i);
        if (fragment.get$config() == null)
          continue;
        if (isMergeUp) {
          if (_this._cachedSemanticsConfiguration == null) {
            t2 = A.SemanticsConfiguration$();
            _this._cachedSemanticsConfiguration = t2;
            _this.describeSemanticsConfiguration$1(t2);
          }
          t2 = _this._cachedSemanticsConfiguration;
          t2.toString;
          t2 = !t2.isCompatibleWith$1(fragment.get$config());
        } else
          t2 = false;
        if (t2)
          toBeExplicit.add$1(0, fragment);
        for (j = 0; j < i; ++j) {
          siblingFragment = t1.$index(mergeGroup, j);
          t2 = fragment.get$config();
          t2.toString;
          if (!t2.isCompatibleWith$1(siblingFragment.get$config())) {
            toBeExplicit.add$1(0, fragment);
            toBeExplicit.add$1(0, siblingFragment);
          }
        }
      }
      for (t1 = A._LinkedHashSetIterator$(toBeExplicit, toBeExplicit._collection$_modifications, toBeExplicit.$ti._precomputed1), t2 = t1.$ti._precomputed1; t1.moveNext$0();) {
        t3 = t1._current;
        (t3 == null ? t2._as(t3) : t3).markAsExplicit$0();
      }
    },
    _marksExplicitInMergeGroup$1(mergeGroup) {
      return this._marksExplicitInMergeGroup$2$isMergeUp(mergeGroup, false);
    },
    visitChildrenForSemantics$1(visitor) {
      this.visitChildren$1(visitor);
    },
    assembleSemanticsNode$3(node, config, children) {
      node.updateWith$2$childrenInInversePaintOrder$config(type$.List_SemanticsNode._as(children), config);
    },
    handleEvent$2($event, entry) {
    },
    toStringShort$0() {
      return "<optimized out>#" + A.shortHash(this);
    },
    toString$0(_) {
      return this.toStringShort$0();
    },
    showOnScreen$4$curve$descendant$duration$rect(curve, descendant, duration, rect) {
      var t1 = this._node$_parent;
      if (t1 instanceof A.RenderObject)
        t1.showOnScreen$4$curve$descendant$duration$rect(curve, descendant == null ? this : descendant, duration, rect);
    },
    showOnScreen$0() {
      return this.showOnScreen$4$curve$descendant$duration$rect(B.Cubic_glB, null, B.Duration_0, null);
    },
    $isHitTestTarget: 1
  };
  A.RenderObject__reportException_closure.prototype = {
    call$0() {
      var t1 = A._setArrayType([], type$.JSArray_DiagnosticsNode),
        t2 = this.$this;
      t1.push(A.DiagnosticableTreeNode$("The following RenderObject was being processed when the exception was fired", B.DiagnosticsTreeStyle_10, t2));
      t1.push(A.DiagnosticableTreeNode$("RenderObject", B.DiagnosticsTreeStyle_11, t2));
      return t1;
    },
    $signature: 5
  };
  A.RenderObject_invokeLayoutCallback_closure.prototype = {
    call$0() {
      this.callback.call$1(this.T._as(this.$this.get$constraints()));
    },
    $signature: 0
  };
  A.RenderObject__updateCompositingBits_closure.prototype = {
    call$1(child) {
      var t1;
      child._updateCompositingBits$0();
      t1 = child.__RenderObject__needsCompositing_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      if (t1)
        this.$this.__RenderObject__needsCompositing_A = true;
    },
    $signature: 16
  };
  A.RenderObject_clearSemantics_closure.prototype = {
    call$1(child) {
      child.clearSemantics$0();
    },
    $signature: 16
  };
  A.RenderObject__getSemanticsForParent_closure.prototype = {
    call$1(renderChild) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, _i, fragment, t10, siblingMergeGroup, _this = this,
        parentFragment = renderChild._getSemanticsForParent$1$mergeIntoParent(_this.childrenMergeIntoParent);
      if (parentFragment.dropsSemanticsOfPreviousSiblings) {
        B.JSArray_methods.clear$0(_this.childConfigurations);
        B.JSArray_methods.clear$0(_this.mergeUpFragments);
        B.JSArray_methods.clear$0(_this.siblingMergeFragmentGroups);
        if (!_this.config._isSemanticBoundary)
          _this._box_0.dropSemanticsOfPreviousSiblings = true;
      }
      for (t1 = parentFragment.get$mergeUpFragments(), t2 = t1.length, t3 = _this.mergeUpFragments, t4 = _this.hasChildConfigurationsDelegate, t5 = _this.hasTags, t6 = _this.$this, t7 = _this.config, t8 = _this.childConfigurations, t9 = _this.configToFragment, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
        fragment = t1[_i];
        fragment._ancestorChain.push(t6);
        if (t5) {
          t10 = t7._tagsForChildren;
          t10.toString;
          fragment.addTags$1(t10);
        }
        if (t4 && fragment.get$config() != null) {
          t10 = fragment.get$config();
          t10.toString;
          t8.push(t10);
          t10 = fragment.get$config();
          t10.toString;
          t9.$indexSet(0, t10, fragment);
        } else
          t3.push(fragment);
      }
      if (parentFragment instanceof A._ContainerSemanticsFragment)
        for (t1 = parentFragment.siblingMergeGroups, t2 = t1.length, t3 = _this.siblingMergeFragmentGroups, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
          siblingMergeGroup = t1[_i];
          for (t4 = J.get$iterator$ax(siblingMergeGroup); t4.moveNext$0();) {
            t8 = t4.get$current();
            t8._ancestorChain.push(t6);
            if (t5) {
              t9 = t7._tagsForChildren;
              t9.toString;
              t8.addTags$1(t9);
            }
          }
          t3.push(siblingMergeGroup);
        }
    },
    $signature: 16
  };
  A.RenderObject__getSemanticsForParent_closure0.prototype = {
    call$1(config) {
      var fragment = this.configToFragment.$index(0, config);
      if (fragment == null) {
        this._box_0.producesForkingFragment = false;
        return new A._IncompleteSemanticsFragment(config, A._setArrayType([this.$this], type$.JSArray_RenderObject), false);
      }
      return fragment;
    },
    $signature: 82
  };
  A.RenderObject__getSemanticsForParent_closure1.prototype = {
    call$1(config) {
      var t1 = this.configToFragment.$index(0, config);
      return t1 == null ? new A._IncompleteSemanticsFragment(config, A._setArrayType([this.$this], type$.JSArray_RenderObject), false) : t1;
    },
    $signature: 82
  };
  A.RenderObjectWithChildMixin.prototype = {
    set$child(value) {
      var _this = this,
        t1 = _this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        _this.dropChild$1(t1);
      _this.RenderObjectWithChildMixin__child = value;
      if (value != null)
        _this.adoptChild$1(value);
    },
    redepthChildren$0() {
      var t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        this.redepthChild$1(t1);
    },
    visitChildren$1(visitor) {
      var t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        visitor.call$1(t1);
    }
  };
  A.ContainerParentDataMixin.prototype = {$isParentData: 1};
  A.ContainerRenderObjectMixin.prototype = {
    get$childCount() {
      return this.ContainerRenderObjectMixin__childCount;
    },
    _insertIntoChildList$2$after(child, after) {
      var t2, t3, t4, _this = this,
        t1 = child.parentData;
      t1.toString;
      t2 = A._instanceType(_this)._eval$1("ContainerRenderObjectMixin.1");
      t2._as(t1);
      ++_this.ContainerRenderObjectMixin__childCount;
      if (after == null) {
        t1 = t1.ContainerParentDataMixin_nextSibling = _this.ContainerRenderObjectMixin__firstChild;
        if (t1 != null) {
          t1 = t1.parentData;
          t1.toString;
          t2._as(t1).ContainerParentDataMixin_previousSibling = child;
        }
        _this.ContainerRenderObjectMixin__firstChild = child;
        if (_this.ContainerRenderObjectMixin__lastChild == null)
          _this.ContainerRenderObjectMixin__lastChild = child;
      } else {
        t3 = after.parentData;
        t3.toString;
        t2._as(t3);
        t4 = t3.ContainerParentDataMixin_nextSibling;
        if (t4 == null) {
          t1.ContainerParentDataMixin_previousSibling = after;
          _this.ContainerRenderObjectMixin__lastChild = t3.ContainerParentDataMixin_nextSibling = child;
        } else {
          t1.ContainerParentDataMixin_nextSibling = t4;
          t1.ContainerParentDataMixin_previousSibling = after;
          t1 = t4.parentData;
          t1.toString;
          t2._as(t1).ContainerParentDataMixin_previousSibling = t3.ContainerParentDataMixin_nextSibling = child;
        }
      }
    },
    addAll$1(_, children) {
    },
    _removeFromChildList$1(child) {
      var t2, t3, t4, t5, _this = this,
        t1 = child.parentData;
      t1.toString;
      t2 = A._instanceType(_this)._eval$1("ContainerRenderObjectMixin.1");
      t2._as(t1);
      t3 = t1.ContainerParentDataMixin_previousSibling;
      t4 = t1.ContainerParentDataMixin_nextSibling;
      if (t3 == null)
        _this.ContainerRenderObjectMixin__firstChild = t4;
      else {
        t5 = t3.parentData;
        t5.toString;
        t2._as(t5).ContainerParentDataMixin_nextSibling = t4;
      }
      t4 = t1.ContainerParentDataMixin_nextSibling;
      if (t4 == null)
        _this.ContainerRenderObjectMixin__lastChild = t3;
      else {
        t4 = t4.parentData;
        t4.toString;
        t2._as(t4).ContainerParentDataMixin_previousSibling = t3;
      }
      t1.ContainerParentDataMixin_nextSibling = t1.ContainerParentDataMixin_previousSibling = null;
      --_this.ContainerRenderObjectMixin__childCount;
    },
    move$2$after(child, after) {
      var _this = this,
        t1 = child.parentData;
      t1.toString;
      if (A._instanceType(_this)._eval$1("ContainerRenderObjectMixin.1")._as(t1).ContainerParentDataMixin_previousSibling == after)
        return;
      _this._removeFromChildList$1(child);
      _this._insertIntoChildList$2$after(child, after);
      _this.markNeedsLayout$0();
    },
    redepthChildren$0() {
      var t1, t2, t3,
        child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = A._instanceType(this)._eval$1("ContainerRenderObjectMixin.1"); child != null;) {
        t2 = child._depth;
        t3 = this._depth;
        if (t2 <= t3) {
          child._depth = t3 + 1;
          child.redepthChildren$0();
        }
        t2 = child.parentData;
        t2.toString;
        child = t1._as(t2).ContainerParentDataMixin_nextSibling;
      }
    },
    visitChildren$1(visitor) {
      var t1, t2,
        child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = A._instanceType(this)._eval$1("ContainerRenderObjectMixin.1"); child != null;) {
        visitor.call$1(child);
        t2 = child.parentData;
        t2.toString;
        child = t1._as(t2).ContainerParentDataMixin_nextSibling;
      }
    },
    get$firstChild() {
      return this.ContainerRenderObjectMixin__firstChild;
    }
  };
  A.RelayoutWhenSystemFontsChangeMixin.prototype = {
    systemFontsDidChange$0() {
      this.markNeedsLayout$0();
    },
    _scheduleSystemFontsUpdate$0() {
      if (this.RelayoutWhenSystemFontsChangeMixin__hasPendingSystemFontsDidChangeCallBack)
        return;
      this.RelayoutWhenSystemFontsChangeMixin__hasPendingSystemFontsDidChangeCallBack = true;
      $.SchedulerBinding__instance.scheduleFrameCallback$1(new A.RelayoutWhenSystemFontsChangeMixin__scheduleSystemFontsUpdate_closure(this));
    }
  };
  A.RelayoutWhenSystemFontsChangeMixin__scheduleSystemFontsUpdate_closure.prototype = {
    call$1(timeStamp) {
      var t1 = this.$this;
      t1.RelayoutWhenSystemFontsChangeMixin__hasPendingSystemFontsDidChangeCallBack = false;
      if (t1._node$_owner != null)
        t1.systemFontsDidChange$0();
    },
    $signature: 1
  };
  A._SemanticsFragment.prototype = {};
  A._ContainerSemanticsFragment.prototype = {
    addAll$1(_, fragments) {
      B.JSArray_methods.addAll$1(this.mergeUpFragments, fragments);
    },
    get$mergeUpFragments() {
      return this.mergeUpFragments;
    }
  };
  A._InterestingSemanticsFragment.prototype = {
    get$mergeUpFragments() {
      return A._setArrayType([this], type$.JSArray__InterestingSemanticsFragment);
    },
    addTags$1(tags) {
      var t1 = this._object$_tagsForChildren;
      (t1 == null ? this._object$_tagsForChildren = A.LinkedHashSet_LinkedHashSet$_empty(type$.SemanticsTag) : t1).addAll$1(0, tags);
    }
  };
  A._RootSemanticsFragment.prototype = {
    compileChildren$5$elevationAdjustment$parentPaintClipRect$parentSemanticsClipRect$result$siblingNodes(elevationAdjustment, parentPaintClipRect, parentSemanticsClipRect, result, siblingNodes) {
      var t3, t4, t5, children, _i,
        t1 = this._ancestorChain,
        t2 = B.JSArray_methods.get$first(t1);
      if (t2._semantics == null) {
        t3 = B.JSArray_methods.get$first(t1).get$showOnScreen();
        t4 = B.JSArray_methods.get$first(t1);
        t4 = type$.nullable_PipelineOwner._as(A.AbstractNode.prototype.get$owner.call(t4))._semanticsOwner;
        t4.toString;
        t5 = $.$get$SemanticsNode__kEmptyConfig();
        t5 = new A.SemanticsNode(null, 0, t3, B.Rect_0_0_0_0, t5._isMergingSemanticsOfDescendants, t5._actions, t5._customSemanticsActions, t5._actionsAsBits, t5._flags, t5._semantics$_attributedLabel, t5._semantics$_attributedValue, t5._semantics$_attributedIncreasedValue, t5._semantics$_attributedDecreasedValue, t5._semantics$_attributedHint, t5._tooltip, t5._semantics$_elevation, t5._semantics$_thickness, t5._semantics$_textDirection);
        t5.attach$1(t4);
        t2._semantics = t5;
      }
      t2 = B.JSArray_methods.get$first(t1)._semantics;
      t2.toString;
      t2.set$rect(B.JSArray_methods.get$first(t1).get$semanticBounds());
      children = A._setArrayType([], type$.JSArray_SemanticsNode);
      for (t1 = this._object$_children, t3 = t1.length, _i = 0; _i < t1.length; t1.length === t3 || (0, A.throwConcurrentModificationError)(t1), ++_i)
        t1[_i].compileChildren$5$elevationAdjustment$parentPaintClipRect$parentSemanticsClipRect$result$siblingNodes(0, parentPaintClipRect, parentSemanticsClipRect, children, siblingNodes);
      t2.updateWith$2$childrenInInversePaintOrder$config(children, null);
      result.push(t2);
    },
    get$config() {
      return null;
    },
    markAsExplicit$0() {
    },
    addAll$1(_, fragments) {
      B.JSArray_methods.addAll$1(this._object$_children, fragments);
    }
  };
  A._IncompleteSemanticsFragment.prototype = {
    compileChildren$5$elevationAdjustment$parentPaintClipRect$parentSemanticsClipRect$result$siblingNodes(elevationAdjustment, parentPaintClipRect, parentSemanticsClipRect, result, siblingNodes) {
    },
    markAsExplicit$0() {
    },
    get$config() {
      return this.config;
    }
  };
  A._SwitchableSemanticsFragment.prototype = {
    _mergeSiblingGroup$4(parentSemanticsClipRect, parentPaintClipRect, result, usedSemanticsIds) {
      var t1, t2, t3, t4, t5, _i, group, tags, t6, t7, node, configuration, paintClipRect, semanticsClipRect, rect, t8, t9, geometry, t10, fragmentRect, rect0, _null = null;
      for (t1 = this._siblingMergeGroups, t2 = t1.length, t3 = type$._SwitchableSemanticsFragment, t4 = type$.SemanticsTag, t5 = this._ancestorChain, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
        group = t1[_i];
        tags = A.LinkedHashSet_LinkedHashSet$_empty(t4);
        for (t6 = J.getInterceptor$ax(group), t7 = t6.get$iterator(group), node = _null, configuration = node, paintClipRect = configuration, semanticsClipRect = paintClipRect, rect = semanticsClipRect; t7.moveNext$0();) {
          t8 = t7.get$current();
          if (t8.get$config() != null) {
            t3._as(t8);
            t8._mergesToSibling = true;
            if (node == null)
              node = B.JSArray_methods.get$first(t8._ancestorChain)._semantics;
            if (configuration == null) {
              if (!t8._isConfigWritable) {
                t8._config = t8._config.copy$0();
                t8._isConfigWritable = true;
              }
              configuration = t8._isExplicit ? _null : t8._config;
            } else {
              t9 = t8._isExplicit ? _null : t8._config;
              t9.toString;
              configuration.absorb$1(t9);
            }
            t9 = t8._ancestorChain;
            if (t9.length > 1) {
              geometry = new A._SemanticsGeometry();
              geometry._computeValues$3(parentSemanticsClipRect, parentPaintClipRect, t9);
            } else
              geometry = _null;
            t9 = geometry.___SemanticsGeometry__transform_A;
            t9 === $ && A.throwUnnamedLateFieldNI();
            t10 = geometry.___SemanticsGeometry__rect_A;
            t10 === $ && A.throwUnnamedLateFieldNI();
            fragmentRect = A.MatrixUtils_transformRect(t9, t10);
            rect = rect == null ? fragmentRect : rect.expandToInclude$1(fragmentRect);
            t9 = geometry._semanticsClipRect;
            if (t9 != null) {
              rect0 = A.MatrixUtils_transformRect(geometry.___SemanticsGeometry__transform_A, t9);
              semanticsClipRect = semanticsClipRect == null ? rect0 : semanticsClipRect.intersect$1(rect0);
            }
            t9 = geometry._paintClipRect;
            if (t9 != null) {
              rect0 = A.MatrixUtils_transformRect(geometry.___SemanticsGeometry__transform_A, t9);
              paintClipRect = paintClipRect == null ? rect0 : paintClipRect.intersect$1(rect0);
            }
            t8 = t8._object$_tagsForChildren;
            if (t8 != null)
              tags.addAll$1(0, t8);
          }
        }
        if (configuration != null)
          t7 = !(rect.left >= rect.right || rect.top >= rect.bottom);
        else
          t7 = false;
        if (t7) {
          if (node == null || usedSemanticsIds.contains$1(0, node._id))
            node = A.SemanticsNode$(_null, B.JSArray_methods.get$first(t5).get$showOnScreen());
          usedSemanticsIds.add$1(0, node._id);
          node.tags = tags;
          if (!node._semantics$_rect.$eq(0, rect)) {
            node._semantics$_rect = rect;
            node._semantics$_markDirty$0();
          }
          if (!A.MatrixUtils_matrixEquals(node._semantics$_transform, _null)) {
            node._semantics$_transform = null;
            node._semantics$_markDirty$0();
          }
          node.parentSemanticsClipRect = semanticsClipRect;
          node.parentPaintClipRect = paintClipRect;
          for (t6 = t6.get$iterator(group); t6.moveNext$0();) {
            t7 = t6.get$current();
            if (t7.get$config() != null)
              B.JSArray_methods.get$first(t7._ancestorChain)._semantics = node;
          }
          node.updateWith$1$config(configuration);
          result.push(node);
        }
      }
    },
    compileChildren$5$elevationAdjustment$parentPaintClipRect$parentSemanticsClipRect$result$siblingNodes(elevationAdjustment, parentPaintClipRect, parentSemanticsClipRect, result, siblingNodes) {
      var t1, t2, _i, t3, t4, t5, t6, t7, geometry, node, children, childSiblingNodes, siblingNode, _this = this, _null = null,
        usedSemanticsIds = A.LinkedHashSet_LinkedHashSet$_empty(type$.int),
        compilingFragments = _this._object$_children;
      for (t1 = _this._siblingMergeGroups, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i)
        compilingFragments = J.followedBy$1$ax(compilingFragments, t1[_i]);
      if (!_this._isExplicit) {
        if (!_this._mergesToSibling)
          B.JSArray_methods.get$first(_this._ancestorChain)._semantics = null;
        _this._mergeSiblingGroup$4(parentSemanticsClipRect, parentPaintClipRect, siblingNodes, usedSemanticsIds);
        for (t1 = J.get$iterator$ax(compilingFragments), t2 = _this._ancestorChain, t3 = A._arrayInstanceType(t2), t4 = t3._precomputed1, t3 = t3._eval$1("SubListIterable<1>"); t1.moveNext$0();) {
          t5 = t1.get$current();
          if (t5 instanceof A._SwitchableSemanticsFragment) {
            if (t5._isExplicit) {
              t6 = t5._ancestorChain;
              t6 = B.JSArray_methods.get$first(t6)._semantics != null && usedSemanticsIds.contains$1(0, B.JSArray_methods.get$first(t6)._semantics._id);
            } else
              t6 = false;
            if (t6)
              B.JSArray_methods.get$first(t5._ancestorChain)._semantics = null;
          }
          t6 = t5._ancestorChain;
          t7 = new A.SubListIterable(t2, 1, _null, t3);
          t7.SubListIterable$3(t2, 1, _null, t4);
          B.JSArray_methods.addAll$1(t6, t7);
          t5.compileChildren$5$elevationAdjustment$parentPaintClipRect$parentSemanticsClipRect$result$siblingNodes(elevationAdjustment + _this._config._semantics$_elevation, parentPaintClipRect, parentSemanticsClipRect, result, siblingNodes);
        }
        return;
      }
      t1 = _this._ancestorChain;
      geometry = t1.length > 1 ? A._SemanticsGeometry$(t1, parentPaintClipRect, parentSemanticsClipRect) : _null;
      t2 = _this._mergeIntoParent;
      t3 = !t2;
      if (t3) {
        if (geometry == null)
          t4 = _null;
        else {
          t4 = geometry.___SemanticsGeometry__rect_A;
          t4 === $ && A.throwUnnamedLateFieldNI();
          if (!t4.get$isEmpty(0)) {
            t4 = geometry.___SemanticsGeometry__transform_A;
            t4 === $ && A.throwUnnamedLateFieldNI();
            t4 = t4.isZero$0();
          } else
            t4 = true;
        }
        t4 = t4 === true;
      } else
        t4 = false;
      if (t4)
        return;
      t4 = B.JSArray_methods.get$first(t1);
      if (t4._semantics == null)
        t4._semantics = A.SemanticsNode$(_null, B.JSArray_methods.get$first(t1).get$showOnScreen());
      node = B.JSArray_methods.get$first(t1)._semantics;
      node.set$isMergedIntoParent(t2);
      node.tags = _this._object$_tagsForChildren;
      node.elevationAdjustment = elevationAdjustment;
      if (elevationAdjustment !== 0) {
        _this._ensureConfigIsWritable$0();
        t2 = _this._config;
        t2.set$elevation(t2._semantics$_elevation + elevationAdjustment);
      }
      if (geometry != null) {
        t2 = geometry.___SemanticsGeometry__rect_A;
        t2 === $ && A.throwUnnamedLateFieldNI();
        node.set$rect(t2);
        t2 = geometry.___SemanticsGeometry__transform_A;
        t2 === $ && A.throwUnnamedLateFieldNI();
        node.set$transform(t2);
        node.parentSemanticsClipRect = geometry._semanticsClipRect;
        node.parentPaintClipRect = geometry._paintClipRect;
        if (t3 && geometry._markAsHidden) {
          _this._ensureConfigIsWritable$0();
          _this._config._setFlag$2(B.SemanticsFlag_8192, true);
        }
      }
      t2 = type$.JSArray_SemanticsNode;
      children = A._setArrayType([], t2);
      _this._mergeSiblingGroup$4(node.parentSemanticsClipRect, node.parentPaintClipRect, siblingNodes, usedSemanticsIds);
      for (t3 = J.get$iterator$ax(compilingFragments); t3.moveNext$0();) {
        t4 = t3.get$current();
        if (t4 instanceof A._SwitchableSemanticsFragment) {
          if (t4._isExplicit) {
            t5 = t4._ancestorChain;
            t5 = B.JSArray_methods.get$first(t5)._semantics != null && usedSemanticsIds.contains$1(0, B.JSArray_methods.get$first(t5)._semantics._id);
          } else
            t5 = false;
          if (t5)
            B.JSArray_methods.get$first(t4._ancestorChain)._semantics = null;
        }
        childSiblingNodes = A._setArrayType([], t2);
        t5 = node.parentSemanticsClipRect;
        t4.compileChildren$5$elevationAdjustment$parentPaintClipRect$parentSemanticsClipRect$result$siblingNodes(0, node.parentPaintClipRect, t5, children, childSiblingNodes);
        B.JSArray_methods.addAll$1(siblingNodes, childSiblingNodes);
      }
      t2 = _this._config;
      if (t2._isSemanticBoundary)
        B.JSArray_methods.get$first(t1).assembleSemanticsNode$3(node, _this._config, children);
      else
        node.updateWith$2$childrenInInversePaintOrder$config(children, t2);
      result.push(node);
      for (t1 = siblingNodes.length, t2 = type$.SemanticsTag, _i = 0; _i < siblingNodes.length; siblingNodes.length === t1 || (0, A.throwConcurrentModificationError)(siblingNodes), ++_i) {
        siblingNode = siblingNodes[_i];
        t3 = node._semantics$_transform;
        if (!A.MatrixUtils_matrixEquals(siblingNode._semantics$_transform, t3)) {
          siblingNode._semantics$_transform = t3 == null || A.MatrixUtils_isIdentity(t3) ? _null : t3;
          siblingNode._semantics$_markDirty$0();
        }
        siblingNode.set$isMergedIntoParent(node._isMergedIntoParent);
        t3 = _this._object$_tagsForChildren;
        if (t3 != null) {
          t4 = siblingNode.tags;
          (t4 == null ? siblingNode.tags = A.LinkedHashSet_LinkedHashSet$_empty(t2) : t4).addAll$1(0, t3);
        }
      }
      B.JSArray_methods.addAll$1(result, siblingNodes);
      B.JSArray_methods.clear$0(siblingNodes);
    },
    get$config() {
      return this._isExplicit ? null : this._config;
    },
    addAll$1(_, fragments) {
      var t1, t2, _i, fragment, t3, t4, _this = this;
      for (t1 = fragments.length, t2 = _this._object$_children, _i = 0; _i < fragments.length; fragments.length === t1 || (0, A.throwConcurrentModificationError)(fragments), ++_i) {
        fragment = fragments[_i];
        t2.push(fragment);
        if (fragment.get$config() == null)
          continue;
        if (!_this._isConfigWritable) {
          _this._config = _this._config.copy$0();
          _this._isConfigWritable = true;
        }
        t3 = _this._config;
        t4 = fragment.get$config();
        t4.toString;
        t3.absorb$1(t4);
      }
    },
    addTags$1(tags) {
      this.super$_InterestingSemanticsFragment$addTags(tags);
      if (tags._collection$_length !== 0) {
        this._ensureConfigIsWritable$0();
        tags.forEach$1(0, this._config.get$addTagForChildren());
      }
    },
    _ensureConfigIsWritable$0() {
      var t1, t2, _this = this;
      if (!_this._isConfigWritable) {
        t1 = _this._config;
        t2 = A.SemanticsConfiguration$();
        t2._isSemanticBoundary = t1._isSemanticBoundary;
        t2.explicitChildNodes = t1.explicitChildNodes;
        t2.isBlockingSemanticsOfPreviouslyPaintedNodes = t1.isBlockingSemanticsOfPreviouslyPaintedNodes;
        t2._hasBeenAnnotated = t1._hasBeenAnnotated;
        t2._isMergingSemanticsOfDescendants = t1._isMergingSemanticsOfDescendants;
        t2._semantics$_textDirection = t1._semantics$_textDirection;
        t2._sortKey = t1._sortKey;
        t2._semantics$_attributedLabel = t1._semantics$_attributedLabel;
        t2._semantics$_attributedIncreasedValue = t1._semantics$_attributedIncreasedValue;
        t2._semantics$_attributedValue = t1._semantics$_attributedValue;
        t2._semantics$_attributedDecreasedValue = t1._semantics$_attributedDecreasedValue;
        t2._semantics$_attributedHint = t1._semantics$_attributedHint;
        t2._hintOverrides = t1._hintOverrides;
        t2._tooltip = t1._tooltip;
        t2._semantics$_elevation = t1._semantics$_elevation;
        t2._semantics$_thickness = t1._semantics$_thickness;
        t2._flags = t1._flags;
        t2._tagsForChildren = t1._tagsForChildren;
        t2._textSelection = t1._textSelection;
        t2._scrollPosition = t1._scrollPosition;
        t2._scrollExtentMax = t1._scrollExtentMax;
        t2._scrollExtentMin = t1._scrollExtentMin;
        t2._actionsAsBits = t1._actionsAsBits;
        t2._indexInParent = t1._indexInParent;
        t2._scrollIndex = t1._scrollIndex;
        t2._scrollChildCount = t1._scrollChildCount;
        t2._platformViewId = t1._platformViewId;
        t2._maxValueLength = t1._maxValueLength;
        t2._currentValueLength = t1._currentValueLength;
        t2._actions.addAll$1(0, t1._actions);
        t2._customSemanticsActions.addAll$1(0, t1._customSemanticsActions);
        _this._config = t2;
        _this._isConfigWritable = true;
      }
    },
    markAsExplicit$0() {
      this._isExplicit = true;
    }
  };
  A._SemanticsGeometry.prototype = {
    _computeValues$3(parentSemanticsClipRect, parentPaintClipRect, ancestors) {
      var index, $parent, child, owner, t2, paintRect, _this = this,
        t1 = new A.Matrix4(new Float64Array(16));
      t1.setIdentity$0();
      _this.___SemanticsGeometry__transform_A = t1;
      _this._semanticsClipRect = parentSemanticsClipRect;
      _this._paintClipRect = parentPaintClipRect;
      for (index = ancestors.length - 1; index > 0;) {
        $parent = ancestors[index];
        --index;
        child = ancestors[index];
        _this._semanticsClipRect = A._SemanticsGeometry__intersectRects(_this._semanticsClipRect, $parent.describeApproximatePaintClip$1(child));
        t1 = $.$get$_SemanticsGeometry__temporaryTransformHolder();
        t1.setIdentity$0();
        A._SemanticsGeometry__applyIntermediatePaintTransforms($parent, child, _this.___SemanticsGeometry__transform_A, t1);
        _this._semanticsClipRect = A._SemanticsGeometry__transformRect(_this._semanticsClipRect, t1);
        _this._paintClipRect = A._SemanticsGeometry__transformRect(_this._paintClipRect, t1);
      }
      owner = B.JSArray_methods.get$first(ancestors);
      t1 = _this._semanticsClipRect;
      t1 = t1 == null ? owner.get$semanticBounds() : t1.intersect$1(owner.get$semanticBounds());
      _this.___SemanticsGeometry__rect_A = t1;
      t2 = _this._paintClipRect;
      if (t2 != null) {
        paintRect = t2.intersect$1(t1);
        t1 = paintRect.get$isEmpty(0) && !t1.get$isEmpty(0);
        _this._markAsHidden = t1;
        if (!t1)
          _this.___SemanticsGeometry__rect_A = paintRect;
      }
    }
  };
  A._RenderObject_AbstractNode_DiagnosticableTreeMixin.prototype = {};
  A.TextParentData.prototype = {
    toString$0(_) {
      var t1 = A._setArrayType(["offset=" + this.offset.toString$0(0)], type$.JSArray_String);
      t1.push(this.super$BoxParentData$toString(0));
      return B.JSArray_methods.join$1(t1, "; ");
    }
  };
  A.RenderParagraph.prototype = {
    setupParentData$1(child) {
      if (!(child.parentData instanceof A.TextParentData))
        child.parentData = new A.TextParentData(null, null, B.Offset_0_0);
    },
    set$text(value) {
      var _this = this,
        t1 = _this._textPainter;
      switch (t1._text_painter$_text.compareTo$1(0, value).index) {
        case 0:
          return;
        case 1:
          t1.set$text(value);
          _this._cachedCombinedSemanticsInfos = null;
          _this.markNeedsSemanticsUpdate$0();
          break;
        case 2:
          t1.set$text(value);
          _this._cachedCombinedSemanticsInfos = _this._cachedAttributedLabels = null;
          _this._extractPlaceholderSpans$1(value);
          _this.markNeedsPaint$0();
          _this.markNeedsSemanticsUpdate$0();
          break;
        case 3:
          t1.set$text(value);
          _this._cachedCombinedSemanticsInfos = _this._cachedAttributedLabels = _this._overflowShader = null;
          _this._extractPlaceholderSpans$1(value);
          _this.markNeedsLayout$0();
          _this._paragraph$_removeSelectionRegistrarSubscription$0();
          _this._disposeSelectableFragments$0();
          _this._paragraph$_updateSelectionRegistrarSubscription$0();
          break;
      }
    },
    set$registrar(value) {
      var _this = this;
      if (value == _this._registrar)
        return;
      _this._paragraph$_removeSelectionRegistrarSubscription$0();
      _this._disposeSelectableFragments$0();
      _this._registrar = value;
      _this._paragraph$_updateSelectionRegistrarSubscription$0();
    },
    _paragraph$_updateSelectionRegistrarSubscription$0() {
      var t1, t2, _this = this;
      if (_this._registrar == null)
        return;
      t1 = _this._lastSelectableFragments;
      if (t1 == null)
        t1 = _this._lastSelectableFragments = _this._getSelectableFragments$0();
      t2 = _this._registrar;
      B.JSArray_methods.forEach$1(t1, t2.get$add(t2));
    },
    _paragraph$_removeSelectionRegistrarSubscription$0() {
      var t2,
        t1 = this._registrar;
      if (t1 == null || this._lastSelectableFragments == null)
        return;
      t2 = this._lastSelectableFragments;
      t2.toString;
      B.JSArray_methods.forEach$1(t2, t1.get$remove(t1));
    },
    _getSelectableFragments$0() {
      var end, start, end0, t1,
        plainText = this._textPainter._text_painter$_text.toPlainText$1$includeSemanticsLabels(false),
        result = A._setArrayType([], type$.JSArray__SelectableFragment);
      for (end = plainText.length, start = 0; start < end;) {
        end0 = B.JSString_methods.indexOf$2(plainText, $.$get$RenderParagraph__placeholderCharacter(), start);
        if (start !== end0) {
          if (end0 === -1)
            end0 = end;
          t1 = new A._SelectableFragment(new A.TextRange(start, end0), this, plainText, $.$get$ChangeNotifier__emptyListeners());
          t1.___SelectableFragment__selectionGeometry_A = t1._getSelectionGeometry$0();
          result.push(t1);
          start = end0;
        }
        ++start;
      }
      return result;
    },
    _disposeSelectableFragments$0() {
      var t2, _i, fragment,
        t1 = this._lastSelectableFragments;
      if (t1 == null)
        return;
      for (t2 = t1.length, _i = 0; _i < t2; ++_i) {
        fragment = t1[_i];
        fragment.ChangeNotifier__listeners = $.$get$ChangeNotifier__emptyListeners();
        fragment.ChangeNotifier__count = 0;
      }
      this._lastSelectableFragments = null;
    },
    markNeedsLayout$0() {
      var t1 = this._lastSelectableFragments;
      if (t1 != null)
        B.JSArray_methods.forEach$1(t1, new A.RenderParagraph_markNeedsLayout_closure());
      this.super$RenderBox$markNeedsLayout();
    },
    dispose$0() {
      var _this = this;
      _this._paragraph$_removeSelectionRegistrarSubscription$0();
      _this._lastSelectableFragments = null;
      _this._textPainter.dispose$0();
      _this.super$RenderObject$dispose();
    },
    _extractPlaceholderSpans$1(span) {
      this.__RenderParagraph__placeholderSpans_A = A._setArrayType([], type$.JSArray_PlaceholderSpan);
      span.visitChildren$1(new A.RenderParagraph__extractPlaceholderSpans_closure(this));
    },
    set$textAlign(value) {
      var t1 = this._textPainter;
      if (t1._textAlign === value)
        return;
      t1.set$textAlign(value);
      this.markNeedsPaint$0();
    },
    set$textDirection(value) {
      var t1 = this._textPainter;
      if (t1._text_painter$_textDirection === value)
        return;
      t1.set$textDirection(value);
      this.markNeedsLayout$0();
    },
    set$softWrap(value) {
      if (this._softWrap === value)
        return;
      this._softWrap = value;
      this.markNeedsLayout$0();
    },
    set$overflow(value) {
      var t1, _this = this;
      if (_this._overflow === value)
        return;
      _this._overflow = value;
      t1 = value === B.TextOverflow_2 ? "\u2026" : null;
      _this._textPainter.set$ellipsis(t1);
      _this.markNeedsLayout$0();
    },
    set$textScaleFactor(value) {
      var t1 = this._textPainter;
      if (t1._text_painter$_textScaleFactor === value)
        return;
      t1.set$textScaleFactor(value);
      this._overflowShader = null;
      this.markNeedsLayout$0();
    },
    set$maxLines(value) {
      var t1 = this._textPainter;
      if (t1._text_painter$_maxLines == value)
        return;
      t1.set$maxLines(value);
      this._overflowShader = null;
      this.markNeedsLayout$0();
    },
    set$locale(value) {
      var t1 = this._textPainter;
      if (J.$eq$(t1._text_painter$_locale, value))
        return;
      t1.set$locale(value);
      this._overflowShader = null;
      this.markNeedsLayout$0();
    },
    set$strutStyle(value) {
      return;
    },
    set$textWidthBasis(value) {
      var t1 = this._textPainter;
      if (t1._textWidthBasis === value)
        return;
      t1.set$textWidthBasis(value);
      this._overflowShader = null;
      this.markNeedsLayout$0();
    },
    set$textHeightBehavior(value) {
      return;
    },
    set$selectionColor(value) {
      var t1, _this = this;
      if (J.$eq$(_this._selectionColor, value))
        return;
      _this._selectionColor = value;
      t1 = _this._lastSelectableFragments;
      t1 = t1 == null ? null : B.JSArray_methods.any$1(t1, new A.RenderParagraph_selectionColor_closure());
      if (t1 === true)
        _this.markNeedsPaint$0();
    },
    _getOffsetForPosition$1(position) {
      var t2, _this = this,
        t1 = _this.getOffsetForCaret$2(position, B.Rect_0_0_0_0);
      _this._layoutTextWithConstraints$1(A.RenderObject.prototype.get$constraints.call(_this));
      t2 = _this._textPainter;
      t2._computeCaretMetrics$2(position, B.Rect_0_0_0_0);
      t2 = t2.__TextPainter__caretMetrics_A;
      t2 === $ && A.throwUnnamedLateFieldNI();
      t2 = t2.fullHeight;
      return t1.$add(0, new A.Offset(0, t2 == null ? 0 : t2));
    },
    computeDistanceToActualBaseline$1(baseline) {
      this._layoutTextWithConstraints$1(A.RenderObject.prototype.get$constraints.call(this));
      return this._textPainter.computeDistanceToActualBaseline$1(B.TextBaseline_0);
    },
    hitTestSelf$1(position) {
      return true;
    },
    hitTestChildren$2$position(result, position) {
      this._textPainter.getPositionForOffset$1(position);
    },
    _layoutText$2$maxWidth$minWidth(maxWidth, minWidth) {
      var t1 = this._softWrap || this._overflow === B.TextOverflow_2 ? maxWidth : 1 / 0;
      this._textPainter.layout$2$maxWidth$minWidth(t1, minWidth);
    },
    systemFontsDidChange$0() {
      this.super$RelayoutWhenSystemFontsChangeMixin$systemFontsDidChange();
      this._textPainter.markNeedsLayout$0();
    },
    _layoutTextWithConstraints$1(constraints) {
      this._textPainter.setPlaceholderDimensions$1(this._paragraph$_placeholderDimensions);
      this._layoutText$2$maxWidth$minWidth(constraints.maxWidth, constraints.minWidth);
    },
    _layoutChildren$2$dry(constraints, dry) {
      var child, placeholderDimensions, t2, boxConstraints, childIndex, baselineOffset, t3, childSize, _this = this,
        t1 = _this.ContainerRenderObjectMixin__childCount;
      if (t1 === 0)
        return A._setArrayType([], type$.JSArray_PlaceholderDimensions);
      child = _this.ContainerRenderObjectMixin__firstChild;
      placeholderDimensions = A.List_List$filled(t1, B.PlaceholderDimensions_9am, false, type$.PlaceholderDimensions);
      t1 = _this._textPainter._text_painter$_textScaleFactor;
      t2 = 0 / t1;
      boxConstraints = new A.BoxConstraints(t2, constraints.maxWidth / t1, t2, 1 / 0 / t1);
      for (t1 = A._instanceType(_this)._eval$1("ContainerRenderObjectMixin.1"), childIndex = 0; child != null;) {
        baselineOffset = null;
        if (!dry) {
          child.layout$2$parentUsesSize(boxConstraints, true);
          t2 = child._size;
          t2.toString;
          t3 = _this.__RenderParagraph__placeholderSpans_A;
          t3 === $ && A.throwUnnamedLateFieldNI();
          switch (t3[childIndex].get$alignment()) {
            case B.PlaceholderAlignment_0:
              baselineOffset = child.getDistanceToBaseline$1(_this.__RenderParagraph__placeholderSpans_A[childIndex].get$baseline());
              break;
            case B.PlaceholderAlignment_1:
            case B.PlaceholderAlignment_2:
            case B.PlaceholderAlignment_4:
            case B.PlaceholderAlignment_5:
            case B.PlaceholderAlignment_3:
              break;
          }
          childSize = t2;
          dry = false;
        } else
          childSize = child.getDryLayout$1(boxConstraints);
        t2 = _this.__RenderParagraph__placeholderSpans_A;
        t2 === $ && A.throwUnnamedLateFieldNI();
        placeholderDimensions[childIndex] = new A.PlaceholderDimensions(childSize, t2[childIndex].get$alignment(), baselineOffset, _this.__RenderParagraph__placeholderSpans_A[childIndex].get$baseline());
        t2 = child.parentData;
        t2.toString;
        child = t1._as(t2).ContainerParentDataMixin_nextSibling;
        ++childIndex;
      }
      return placeholderDimensions;
    },
    _layoutChildren$1(constraints) {
      return this._layoutChildren$2$dry(constraints, false);
    },
    _setParentData$0() {
      var t4, t5,
        child = this.ContainerRenderObjectMixin__firstChild,
        t1 = type$.TextParentData,
        t2 = this._textPainter,
        t3 = A._instanceType(this)._eval$1("ContainerRenderObjectMixin.1"),
        childIndex = 0;
      while (true) {
        if (!(child != null && childIndex < t2._inlinePlaceholderBoxes.length))
          break;
        t4 = child.parentData;
        t4.toString;
        t1._as(t4);
        t5 = t2._inlinePlaceholderBoxes[childIndex];
        t4.offset = new A.Offset(t5.left, t5.top);
        t4.scale = t2._inlinePlaceholderScales[childIndex];
        child = t3._as(t4).ContainerParentDataMixin_nextSibling;
        ++childIndex;
      }
    },
    _canComputeDryLayout$0() {
      var t2, _i,
        t1 = this.__RenderParagraph__placeholderSpans_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t2 = t1.length;
      _i = 0;
      $label0$1:
        for (; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i)
          switch (t1[_i].get$alignment()) {
            case B.PlaceholderAlignment_0:
            case B.PlaceholderAlignment_1:
            case B.PlaceholderAlignment_2:
              return false;
            case B.PlaceholderAlignment_3:
            case B.PlaceholderAlignment_5:
            case B.PlaceholderAlignment_4:
              continue $label0$1;
          }
      return true;
    },
    computeDryLayout$1(constraints) {
      var t1, _this = this;
      if (!_this._canComputeDryLayout$0())
        return B.Size_0_0;
      t1 = _this._textPainter;
      t1.setPlaceholderDimensions$1(_this._layoutChildren$2$dry(constraints, true));
      _this._layoutText$2$maxWidth$minWidth(constraints.maxWidth, constraints.minWidth);
      return constraints.constrain$1(new A.Size(t1.get$width(), Math.ceil(t1._paragraph._height)));
    },
    performLayout$0() {
      var t1, t2, t3, textDidExceedMaxLines, t4, didOverflowHeight, didOverflowWidth, fadeSizePainter, fadeStart, fadeEnd, _this = this, _null = null,
        constraints = A.RenderObject.prototype.get$constraints.call(_this);
      _this._paragraph$_placeholderDimensions = _this._layoutChildren$1(constraints);
      _this._layoutTextWithConstraints$1(constraints);
      _this._setParentData$0();
      t1 = _this._textPainter;
      t2 = t1.get$width();
      t3 = Math.ceil(t1._paragraph._height);
      textDidExceedMaxLines = t1._paragraph._didExceedMaxLines;
      t4 = _this._size = constraints.constrain$1(new A.Size(t2, t3));
      didOverflowHeight = t4._dy < t3 || textDidExceedMaxLines;
      didOverflowWidth = t4._dx < t2;
      if (didOverflowWidth || didOverflowHeight)
        switch (_this._overflow.index) {
          case 3:
            _this._needsClipping = false;
            _this._overflowShader = null;
            break;
          case 0:
          case 2:
            _this._needsClipping = true;
            _this._overflowShader = null;
            break;
          case 1:
            _this._needsClipping = true;
            t2 = A.TextSpan$(_null, t1._text_painter$_text.style, "\u2026");
            t3 = t1._text_painter$_textDirection;
            t3.toString;
            t4 = t1._text_painter$_textScaleFactor;
            fadeSizePainter = A.TextPainter$(_null, t1._text_painter$_locale, _null, _null, t2, B.TextAlign_4, t3, _null, t4, B.TextWidthBasis_0);
            fadeSizePainter.layout$0();
            if (didOverflowWidth) {
              switch (t1._text_painter$_textDirection.index) {
                case 0:
                  fadeStart = fadeSizePainter.get$width();
                  fadeEnd = 0;
                  break;
                case 1:
                  fadeEnd = _this._size._dx;
                  fadeStart = fadeEnd - fadeSizePainter.get$width();
                  break;
                default:
                  fadeStart = _null;
                  fadeEnd = fadeStart;
              }
              _this._overflowShader = A.Gradient$linear(new A.Offset(fadeStart, 0), new A.Offset(fadeEnd, 0), A._setArrayType([B.Color_4294967295, B.Color_16777215], type$.JSArray_Color));
            } else {
              fadeEnd = _this._size._dy;
              _this._overflowShader = A.Gradient$linear(new A.Offset(0, fadeEnd - Math.ceil(fadeSizePainter._paragraph._height) / 2), new A.Offset(0, fadeEnd), A._setArrayType([B.Color_4294967295, B.Color_16777215], type$.JSArray_Color));
            }
            fadeSizePainter.dispose$0();
            break;
        }
      else {
        _this._needsClipping = false;
        _this._overflowShader = null;
      }
    },
    paint$2(context, offset) {
      var t1, t2, t3, bounds, t4, t5, t6, childIndex, t7, t8, child, paint, _i, _this = this, _box_0 = {};
      _this._layoutTextWithConstraints$1(A.RenderObject.prototype.get$constraints.call(_this));
      if (_this._needsClipping) {
        t1 = _this._size;
        t2 = offset._dx;
        t3 = offset._dy;
        bounds = new A.Rect(t2, t3, t2 + t1._dx, t3 + t1._dy);
        if (_this._overflowShader != null)
          context.get$canvas().saveLayer$2(bounds, A.Paint$());
        else
          context.get$canvas().save$0();
        context.get$canvas().clipRect$1(bounds);
      }
      t1 = _this._textPainter;
      t1.paint$2(context.get$canvas(), offset);
      t2 = _box_0.child = _this.ContainerRenderObjectMixin__firstChild;
      t3 = type$.TextParentData;
      t4 = offset._dx;
      t5 = offset._dy;
      t6 = A._instanceType(_this)._eval$1("ContainerRenderObjectMixin.1");
      childIndex = 0;
      while (true) {
        if (!(t2 != null && childIndex < t1._inlinePlaceholderBoxes.length))
          break;
        t2 = t2.parentData;
        t2.toString;
        t3._as(t2);
        t7 = t2.scale;
        t7.toString;
        t8 = _this.__RenderObject__needsCompositing_A;
        t8 === $ && A.throwUnnamedLateFieldNI();
        t2 = t2.offset;
        context.pushTransform$4(t8, new A.Offset(t4 + t2._dx, t5 + t2._dy), A.Matrix4_Matrix4$diagonal3Values(t7, t7, t7), new A.RenderParagraph_paint_closure(_box_0));
        t7 = _box_0.child.parentData;
        t7.toString;
        child = t6._as(t7).ContainerParentDataMixin_nextSibling;
        _box_0.child = child;
        ++childIndex;
        t2 = child;
      }
      if (_this._needsClipping) {
        if (_this._overflowShader != null) {
          t1 = context.get$canvas();
          t1._addMethod$1(3);
          t1._addData2$2(t4, t5);
          paint = A.Paint$();
          paint.set$blendMode(B.BlendMode_13);
          t5 = _this._overflowShader;
          paint._ensureObjectsInitialized$0()[0] = t5;
          t5 = context.get$canvas();
          t4 = _this._size;
          t5.drawRect$2(new A.Rect(0, 0, 0 + t4._dx, 0 + t4._dy), paint);
        }
        context.get$canvas().restore$0();
      }
      t1 = _this._lastSelectableFragments;
      if (t1 != null)
        for (t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i)
          t1[_i].paint$2(context, offset);
      _this.super$RenderObject$paint(context, offset);
    },
    getOffsetForCaret$2(position, caretPrototype) {
      var t1;
      this._layoutTextWithConstraints$1(A.RenderObject.prototype.get$constraints.call(this));
      t1 = this._textPainter;
      t1._computeCaretMetrics$2(position, caretPrototype);
      t1 = t1.__TextPainter__caretMetrics_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      return t1.offset;
    },
    getBoxesForSelection$1(selection) {
      this._layoutTextWithConstraints$1(A.RenderObject.prototype.get$constraints.call(this));
      return this._textPainter.getBoxesForSelection$3$boxHeightStyle$boxWidthStyle(selection, B.BoxHeightStyle_0, B.BoxWidthStyle_0);
    },
    getPositionForOffset$1(offset) {
      this._layoutTextWithConstraints$1(A.RenderObject.prototype.get$constraints.call(this));
      return this._textPainter.getPositionForOffset$1(offset);
    },
    _getLineAtOffset$1(position) {
      return this._textPainter.getLineBoundary$1(position);
    },
    describeSemanticsConfiguration$1(config) {
      var t1, t2, collector, _i, buffer, attributes, t3, offset, t4, info, label, t5, _i0, infoAttribute, originalRange, _this = this;
      _this.super$RenderObject$describeSemanticsConfiguration(config);
      t1 = _this._textPainter;
      t2 = t1._text_painter$_text;
      t2.toString;
      collector = A._setArrayType([], type$.JSArray_InlineSpanSemanticsInformation);
      t2.computeSemanticsInformation$1(collector);
      _this._semanticsInfo = collector;
      for (t2 = collector.length, _i = 0; _i < t2; ++_i)
        ;
      t2 = _this._cachedAttributedLabels;
      if (t2 == null) {
        buffer = new A.StringBuffer("");
        attributes = A._setArrayType([], type$.JSArray_StringAttribute);
        for (t2 = _this._semanticsInfo, t3 = t2.length, offset = 0, _i = 0, t4 = ""; _i < t2.length; t2.length === t3 || (0, A.throwConcurrentModificationError)(t2), ++_i) {
          info = t2[_i];
          label = info.semanticsLabel;
          if (label == null)
            label = info.text;
          for (t4 = info.stringAttributes, t5 = t4.length, _i0 = 0; _i0 < t4.length; t4.length === t5 || (0, A.throwConcurrentModificationError)(t4), ++_i0) {
            infoAttribute = t4[_i0];
            originalRange = infoAttribute.range;
            attributes.push(infoAttribute.copy$1$range(new A.TextRange(offset + originalRange.start, offset + originalRange.end)));
          }
          t4 = buffer._contents += label;
          offset += label.length;
        }
        t2 = _this._cachedAttributedLabels = A._setArrayType([new A.AttributedString(t4.charCodeAt(0) == 0 ? t4 : t4, attributes)], type$.JSArray_AttributedString);
      }
      config._semantics$_attributedLabel = t2[0];
      config._hasBeenAnnotated = true;
      t1 = t1._text_painter$_textDirection;
      t1.toString;
      config._semantics$_textDirection = t1;
    },
    assembleSemanticsNode$3(node, config, children) {
      var newChildCache, t1, t2, start, _i, start0, t3, t4, _this = this,
        newChildren = A._setArrayType([], type$.JSArray_SemanticsNode);
      _this._textPainter._text_painter$_textDirection.toString;
      newChildCache = A.LinkedHashMap_LinkedHashMap(type$.Key, type$.SemanticsNode);
      t1 = _this._cachedCombinedSemanticsInfos;
      if (t1 == null) {
        t1 = _this._semanticsInfo;
        t1.toString;
        t1 = _this._cachedCombinedSemanticsInfos = A.combineSemanticsInfo(t1);
      }
      for (t2 = t1.length, start = 0, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i, start = start0) {
        start0 = start + t1[_i].text.length;
        t3 = start < start0;
        t4 = t3 ? start : start0;
        _this.getBoxesForSelection$1(new A.TextSelection(start, start0, B.TextAffinity_1, false, t4, t3 ? start0 : start));
      }
      _this._cachedChildNodes = newChildCache;
      node.updateWith$2$childrenInInversePaintOrder$config(newChildren, config);
    },
    clearSemantics$0() {
      this.super$RenderObject$clearSemantics();
      this._cachedChildNodes = null;
    }
  };
  A.RenderParagraph_markNeedsLayout_closure.prototype = {
    call$1(element) {
      return element._cachedRect = null;
    },
    $signature: 150
  };
  A.RenderParagraph__extractPlaceholderSpans_closure.prototype = {
    call$1(span) {
      return true;
    },
    $signature: 45
  };
  A.RenderParagraph_selectionColor_closure.prototype = {
    call$1(fragment) {
      var t1 = fragment.___SelectableFragment__selectionGeometry_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      return t1.status !== B.SelectionStatus_2;
    },
    $signature: 151
  };
  A.RenderParagraph_paint_closure.prototype = {
    call$2(context, offset) {
      var t1 = this._box_0.child;
      t1.toString;
      context.paintChild$2(t1, offset);
    },
    $signature: 3
  };
  A._SelectableFragment.prototype = {
    get$value() {
      var t1 = this.___SelectableFragment__selectionGeometry_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      return t1;
    },
    _paragraph$_updateSelectionGeometry$0() {
      var _this = this,
        newValue = _this._getSelectionGeometry$0(),
        t1 = _this.___SelectableFragment__selectionGeometry_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      if (t1.$eq(0, newValue))
        return;
      _this.___SelectableFragment__selectionGeometry_A = newValue;
      _this.notifyListeners$0();
    },
    _getSelectionGeometry$0() {
      var selectionStart, selectionEnd, startOffsetInParagraphCoordinates, endOffsetInParagraphCoordinates, t2, flipHandles, paragraphToFragmentTransform, t3, t4, t5, t6, t7, _this = this,
        t1 = _this._textSelectionStart;
      if (t1 == null || _this._textSelectionEnd == null)
        return B.SelectionGeometry_Egn;
      selectionStart = t1.offset;
      selectionEnd = _this._textSelectionEnd.offset;
      t1 = _this.paragraph;
      startOffsetInParagraphCoordinates = t1._getOffsetForPosition$1(new A.TextPosition(selectionStart, B.TextAffinity_1));
      endOffsetInParagraphCoordinates = selectionStart === selectionEnd ? startOffsetInParagraphCoordinates : t1._getOffsetForPosition$1(new A.TextPosition(selectionEnd, B.TextAffinity_1));
      t1 = t1._textPainter;
      t2 = t1._text_painter$_textDirection;
      t2.toString;
      flipHandles = selectionStart > selectionEnd !== (B.TextDirection_0 === t2);
      paragraphToFragmentTransform = A.Matrix4_Matrix4$translationValues(_this.get$_rect().left, _this.get$_rect().top, 0);
      paragraphToFragmentTransform.copyInverse$1(paragraphToFragmentTransform);
      t2 = A.MatrixUtils_transformPoint(paragraphToFragmentTransform, startOffsetInParagraphCoordinates);
      t3 = t1.get$preferredLineHeight();
      t4 = flipHandles ? B.TextSelectionHandleType_1 : B.TextSelectionHandleType_0;
      t5 = A.MatrixUtils_transformPoint(paragraphToFragmentTransform, endOffsetInParagraphCoordinates);
      t1 = t1.get$preferredLineHeight();
      t6 = flipHandles ? B.TextSelectionHandleType_0 : B.TextSelectionHandleType_1;
      t7 = _this._textSelectionStart.offset === _this._textSelectionEnd.offset ? B.SelectionStatus_1 : B.SelectionStatus_0;
      return new A.SelectionGeometry(new A.SelectionPoint(t2, t3, t4), new A.SelectionPoint(t5, t1, t6), t7, true);
    },
    dispatchSelectionEvent$1($event) {
      var _this = this,
        result = A._Cell$(),
        existingSelectionStart = _this._textSelectionStart,
        existingSelectionEnd = _this._textSelectionEnd,
        t1 = $event.type;
      switch (t1.index) {
        case 0:
        case 1:
          result.set$finalLocalValue(_this._updateSelectionEdge$2$isEnd(type$.SelectionEdgeUpdateEvent._as($event).globalPosition, t1 === B.SelectionEventType_1));
          break;
        case 2:
          _this._textSelectionEnd = _this._textSelectionStart = null;
          result.set$finalLocalValue(B.SelectionResult_4);
          break;
        case 3:
          t1 = _this.range;
          _this._textSelectionStart = new A.TextPosition(t1.start, B.TextAffinity_1);
          _this._textSelectionEnd = new A.TextPosition(t1.end, B.TextAffinity_0);
          result.set$finalLocalValue(B.SelectionResult_4);
          break;
        case 4:
          result.set$finalLocalValue(_this._handleSelectWord$1(type$.SelectWordSelectionEvent._as($event).get$globalPosition()));
          break;
        case 5:
          type$.GranularlyExtendSelectionEvent._as($event);
          result.set$finalLocalValue(_this._handleGranularlyExtendSelection$3($event.get$forward(), $event.get$isEnd(), $event.get$granularity()));
          break;
        case 6:
          type$.DirectionallyExtendSelectionEvent._as($event);
          result.set$finalLocalValue(_this._handleDirectionallyExtendSelection$3($event.get$dx(), $event.get$isEnd(), $event.get$direction()));
          break;
      }
      if (!J.$eq$(existingSelectionStart, _this._textSelectionStart) || !J.$eq$(existingSelectionEnd, _this._textSelectionEnd)) {
        _this.paragraph.markNeedsPaint$0();
        _this._paragraph$_updateSelectionGeometry$0();
      }
      return result._readLocal$0();
    },
    _updateSelectionEdge$2$isEnd(globalPosition, isEnd) {
      var t1, transform, localPosition, t2, t3, _this = this;
      if (isEnd)
        _this._textSelectionEnd = null;
      else
        _this._textSelectionStart = null;
      t1 = _this.paragraph;
      transform = t1.getTransformTo$1(null);
      transform.copyInverse$1(transform);
      localPosition = A.MatrixUtils_transformPoint(transform, globalPosition);
      if (_this.get$_rect().get$isEmpty(0))
        return A.SelectionUtils_getResultBasedOnRect(_this.get$_rect(), localPosition);
      t2 = _this.get$_rect();
      t3 = t1._textPainter._text_painter$_textDirection;
      t3.toString;
      _this._clampTextPosition$1(t1.getPositionForOffset$1(A.SelectionUtils_adjustDragOffset(t2, localPosition, t3)));
    },
    _clampTextPosition$1(position) {
      var t1 = this.range,
        t2 = t1.end,
        t3 = position.get$offset().$gt(0, t2);
      if (!t3)
        position.get$offset();
      if (t3)
        return new A.TextPosition(t2, B.TextAffinity_0);
      t1 = t1.start;
      if (position.get$offset().$lt(0, t1))
        return new A.TextPosition(t1, B.TextAffinity_1);
      return position;
    },
    _handleSelectWord$1(globalPosition) {
      var t1 = this.paragraph;
      t1.getPositionForOffset$1(t1.globalToLocal$1(globalPosition));
    },
    _handleDirectionallyExtendSelection$3(horizontalBaseline, isExtent, movement) {
      var baselineInParagraphCoordinates, result, targetedEdge, moveResult, newPosition, t2, targetedEdge0, _this = this,
        t1 = _this.paragraph,
        transform = t1.getTransformTo$1(null);
      if (transform.copyInverse$1(transform) === 0)
        switch (movement) {
          case B.SelectionExtendDirection_0:
          case B.SelectionExtendDirection_3:
            return B.SelectionResult_1;
          case B.SelectionExtendDirection_1:
          case B.SelectionExtendDirection_2:
            return B.SelectionResult_0;
        }
      baselineInParagraphCoordinates = A.MatrixUtils_transformPoint(transform, new A.Offset(horizontalBaseline, 0))._dx;
      result = null;
      switch (movement) {
        case B.SelectionExtendDirection_0:
        case B.SelectionExtendDirection_1:
          if (isExtent) {
            t1 = _this._textSelectionEnd;
            t1.toString;
            targetedEdge = t1;
          } else {
            t1 = _this._textSelectionStart;
            t1.toString;
            targetedEdge = t1;
          }
          moveResult = _this._handleVerticalMovement$3$below$horizontalBaselineInParagraphCoordinates(targetedEdge, false, baselineInParagraphCoordinates);
          newPosition = moveResult.key;
          result = moveResult.value;
          break;
        case B.SelectionExtendDirection_2:
        case B.SelectionExtendDirection_3:
          t2 = _this._textSelectionEnd;
          if (t2 == null) {
            t2 = new A.TextPosition(_this.range.end, B.TextAffinity_0);
            _this._textSelectionEnd = t2;
            targetedEdge = t2;
          } else
            targetedEdge = t2;
          t2 = _this._textSelectionStart;
          if (t2 == null) {
            _this._textSelectionStart = targetedEdge;
            targetedEdge0 = targetedEdge;
          } else
            targetedEdge0 = t2;
          newPosition = t1.getPositionForOffset$1(new A.Offset(baselineInParagraphCoordinates, t1._getOffsetForPosition$1(isExtent ? targetedEdge : targetedEdge0)._dy - t1._textPainter.get$preferredLineHeight() / 2));
          break;
        default:
          newPosition = null;
      }
      if (isExtent)
        _this._textSelectionEnd = newPosition;
      else
        _this._textSelectionStart = newPosition;
      return result;
    },
    _handleGranularlyExtendSelection$3($forward, isExtent, granularity) {
      var targetedEdge, targetedEdge0, newPosition, result, t2, t3, _this = this,
        t1 = _this._textSelectionEnd;
      if (t1 == null) {
        t1 = _this.range;
        t1 = $forward ? new A.TextPosition(t1.start, B.TextAffinity_1) : new A.TextPosition(t1.end, B.TextAffinity_0);
        _this._textSelectionEnd = t1;
        targetedEdge = t1;
      } else
        targetedEdge = t1;
      t1 = _this._textSelectionStart;
      if (t1 == null) {
        _this._textSelectionStart = targetedEdge;
        targetedEdge0 = targetedEdge;
      } else
        targetedEdge0 = t1;
      targetedEdge = isExtent ? targetedEdge : targetedEdge0;
      if ($forward && targetedEdge.offset === _this.range.end)
        return B.SelectionResult_0;
      t1 = !$forward;
      if (t1 && targetedEdge.offset === _this.range.start)
        return B.SelectionResult_1;
      switch (granularity) {
        case B.TextGranularity_0:
          t1 = _this.range;
          newPosition = _this._moveBeyondTextBoundaryAtDirection$3(targetedEdge, $forward, new A.CharacterBoundary(B.JSString_methods.substring$2(_this.fullText, t1.start, t1.end)));
          result = B.SelectionResult_2;
          break;
        case B.TextGranularity_1:
          t1 = _this.paragraph._textPainter;
          t2 = t1._text_painter$_text;
          t2.toString;
          t1 = t1._paragraph;
          t1.toString;
          t1 = new A.WordBoundary(t2, t1);
          result = new A._UntilTextBoundary(t1.get$_skipSpacesAndPunctuations(), t1);
          t1.__WordBoundary_moveByWordBoundary_FI = result;
          newPosition = _this._moveBeyondTextBoundaryAtDirection$3(targetedEdge, $forward, result);
          result = B.SelectionResult_2;
          break;
        case B.TextGranularity_2:
          newPosition = _this._moveToTextBoundaryAtDirection$3(targetedEdge, $forward, new A.LineBoundary(_this));
          result = B.SelectionResult_2;
          break;
        case B.TextGranularity_3:
          t2 = _this.range;
          t3 = t2.start;
          t2 = t2.end;
          newPosition = _this._moveBeyondTextBoundaryAtDirection$3(targetedEdge, $forward, new A.DocumentBoundary(B.JSString_methods.substring$2(_this.fullText, t3, t2)));
          if ($forward && newPosition.offset === t2)
            result = B.SelectionResult_0;
          else
            result = t1 && newPosition.offset === t3 ? B.SelectionResult_1 : B.SelectionResult_2;
          break;
        default:
          result = null;
          newPosition = null;
      }
      if (isExtent)
        _this._textSelectionEnd = newPosition;
      else
        _this._textSelectionStart = newPosition;
      return result;
    },
    _moveBeyondTextBoundaryAtDirection$3(end, $forward, textBoundary) {
      var newOffset,
        t1 = end.offset;
      if ($forward) {
        t1 = textBoundary.getTrailingTextBoundaryAt$1(t1);
        newOffset = t1 == null ? this.range.end : t1;
      } else {
        t1 = textBoundary.getLeadingTextBoundaryAt$1(t1 - 1);
        newOffset = t1 == null ? this.range.start : t1;
      }
      return new A.TextPosition(newOffset, B.TextAffinity_1);
    },
    _moveToTextBoundaryAtDirection$3(end, $forward, textBoundary) {
      var t1, t2, caretOffset, offset, _this = this;
      switch (end.affinity.index) {
        case 0:
          t1 = end.offset;
          if (t1 < 1 && !$forward)
            return B.TextPosition_0_TextAffinity_1;
          t2 = _this.range.start;
          t1 = new A.CharacterBoundary(_this.fullText).getLeadingTextBoundaryAt$1(t2 + t1);
          if (t1 == null)
            t1 = t2;
          caretOffset = Math.max(0, t1) - 1;
          break;
        case 1:
          caretOffset = end.offset;
          break;
        default:
          caretOffset = null;
      }
      if ($forward) {
        t1 = textBoundary.getTrailingTextBoundaryAt$1(caretOffset);
        offset = t1 == null ? _this.range.end : t1;
      } else {
        t1 = textBoundary.getLeadingTextBoundaryAt$1(caretOffset);
        offset = t1 == null ? _this.range.start : t1;
      }
      return new A.TextPosition(offset, B.TextAffinity_1);
    },
    _handleVerticalMovement$3$below$horizontalBaselineInParagraphCoordinates(position, below, horizontalBaselineInParagraphCoordinates) {
      var offset, currentLine, t3, _i, lineMetrics, newPosition, result, _this = this,
        t1 = _this.paragraph,
        t2 = t1._textPainter,
        lines = t2._lineMetricsCache;
      if (lines == null)
        lines = t2._lineMetricsCache = t2._paragraph.computeLineMetrics$0();
      offset = t1.getOffsetForCaret$2(position, B.Rect_0_0_0_0);
      t2 = lines.length;
      currentLine = t2 - 1;
      for (t3 = offset._dy, _i = 0; _i < lines.length; lines.length === t2 || (0, A.throwConcurrentModificationError)(lines), ++_i) {
        lineMetrics = lines[_i];
        if (lineMetrics.baseline.$gt(0, t3)) {
          currentLine = lineMetrics.lineNumber;
          break;
        }
      }
      if (below && currentLine === lines.length - 1)
        newPosition = new A.TextPosition(_this.range.end, B.TextAffinity_0);
      else if (!below && currentLine === 0)
        newPosition = new A.TextPosition(_this.range.start, B.TextAffinity_1);
      else
        newPosition = _this._clampTextPosition$1(t1.getPositionForOffset$1(new A.Offset(horizontalBaselineInParagraphCoordinates, lines[below ? currentLine + 1 : currentLine - 1].baseline)));
      t1 = newPosition.offset;
      t2 = _this.range;
      if (t1 === t2.start)
        result = B.SelectionResult_1;
      else
        result = t1 === t2.end ? B.SelectionResult_0 : B.SelectionResult_2;
      return new A.MapEntry(newPosition, result, type$.MapEntry_TextPosition_SelectionResult);
    },
    getTransformTo$1(ancestor) {
      var t1 = A.Matrix4_Matrix4$translationValues(this.get$_rect().left, this.get$_rect().top, 0);
      t1.multiply$1(this.paragraph.getTransformTo$1(ancestor));
      return t1;
    },
    pushHandleLayers$2(startHandle, endHandle) {
      if (this.paragraph._node$_owner == null)
        return;
    },
    get$_rect() {
      var t1, _this = this;
      if (_this._cachedRect == null) {
        t1 = _this.range;
        _this.paragraph.getBoxesForSelection$1(A.TextSelection$(B.TextAffinity_1, t1.start, t1.end, false));
      }
      t1 = _this._cachedRect;
      t1.toString;
      return t1;
    },
    get$size() {
      var t1 = this.get$_rect();
      return new A.Size(t1.right - t1.left, t1.bottom - t1.top);
    },
    paint$2(context, offset) {
      var t2, selection, selectionPaint, _i, textBox, t3, t4, _this = this,
        t1 = _this._textSelectionStart;
      if (t1 == null || _this._textSelectionEnd == null)
        return;
      t2 = _this.paragraph;
      if (t2._selectionColor != null) {
        selection = A.TextSelection$(B.TextAffinity_1, t1.offset, _this._textSelectionEnd.offset, false);
        selectionPaint = A.Paint$();
        t1 = selectionPaint._ui$_data;
        t1.$flags & 2 && A.throwUnsupportedOperation(t1, 8);
        t1.setInt32(12, 0, true);
        t1 = t2._selectionColor;
        t1.toString;
        selectionPaint.set$color(t1);
        for (t1 = t2.getBoxesForSelection$1(selection), t2 = t1.length, _i = 0; _i < t2; ++_i) {
          textBox = t1[_i];
          if (context._canvas == null)
            context._startRecording$0();
          t3 = context._canvas;
          t3.toString;
          t4 = textBox.toRect$0().shift$1(offset);
          t3._addMethod$1(14);
          t3._objects.push(selectionPaint);
          t3._addData4$4(t4.left, t4.top, t4.right, t4.bottom);
        }
      }
      A.Matrix4_Matrix4$translationValues(_this.get$_rect().left, _this.get$_rect().top, 0);
    },
    $isListenable: 1
  };
  A._RenderParagraph_RenderBox_ContainerRenderObjectMixin.prototype = {
    attach$1(owner) {
      var child, t1, t2;
      this.super$RenderObject$attach(owner);
      child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.TextParentData; child != null;) {
        child.attach$1(owner);
        t2 = child.parentData;
        t2.toString;
        child = t1._as(t2).ContainerParentDataMixin_nextSibling;
      }
    },
    detach$0() {
      var child, t1, t2;
      this.super$AbstractNode$detach();
      child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.TextParentData; child != null;) {
        child.detach$0();
        t2 = child.parentData;
        t2.toString;
        child = t1._as(t2).ContainerParentDataMixin_nextSibling;
      }
    }
  };
  A._RenderParagraph_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin.prototype = {};
  A._RenderParagraph_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_RelayoutWhenSystemFontsChangeMixin.prototype = {
    attach$1(owner) {
      this.super$_RenderParagraph_RenderBox_ContainerRenderObjectMixin$attach(owner);
      $.PaintingBinding__instance.PaintingBinding__systemFonts._systemFontsCallbacks.add$1(0, this.get$_scheduleSystemFontsUpdate());
    },
    detach$0() {
      $.PaintingBinding__instance.PaintingBinding__systemFonts._systemFontsCallbacks.remove$1(0, this.get$_scheduleSystemFontsUpdate());
      this.super$_RenderParagraph_RenderBox_ContainerRenderObjectMixin$detach();
    }
  };
  A.__SelectableFragment_Object_Selectable.prototype = {};
  A.__SelectableFragment_Object_Selectable_ChangeNotifier.prototype = {};
  A.RenderProxyBox.prototype = {};
  A.RenderProxyBoxMixin.prototype = {
    setupParentData$1(child) {
      if (!(child.parentData instanceof A.ParentData))
        child.parentData = new A.ParentData();
    },
    computeDryLayout$1(constraints) {
      var t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        return t1.getDryLayout$1(constraints);
      return this.computeSizeForNoChild$1(constraints);
    },
    performLayout$0() {
      var _this = this,
        t1 = _this.RenderObjectWithChildMixin__child;
      if (t1 != null) {
        t1.layout$2$parentUsesSize(A.RenderObject.prototype.get$constraints.call(_this), true);
        t1 = _this.RenderObjectWithChildMixin__child._size;
        t1.toString;
        _this._size = t1;
      } else
        _this._size = _this.computeSizeForNoChild$1(A.RenderObject.prototype.get$constraints.call(_this));
    },
    computeSizeForNoChild$1(constraints) {
      return new A.Size(A.clampDouble(0, constraints.minWidth, constraints.maxWidth), A.clampDouble(0, constraints.minHeight, constraints.maxHeight));
    },
    hitTestChildren$2$position(result, position) {
      var t1 = this.RenderObjectWithChildMixin__child;
      t1 = t1 == null ? null : t1.hitTest$2$position(result, position);
      return t1 === true;
    },
    applyPaintTransform$2(child, transform) {
    },
    paint$2(context, offset) {
      var t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        context.paintChild$2(t1, offset);
    }
  };
  A.HitTestBehavior.prototype = {
    _enumToString$0() {
      return "HitTestBehavior." + this._name;
    }
  };
  A.RenderProxyBoxWithHitTestBehavior.prototype = {
    hitTest$2$position(result, position) {
      var hitTarget, _this = this;
      if (_this._size.contains$1(0, position)) {
        hitTarget = _this.hitTestChildren$2$position(result, position) || _this.behavior === B.HitTestBehavior_1;
        if (hitTarget || _this.behavior === B.HitTestBehavior_2)
          result.add$1(0, new A.BoxHitTestEntry(position, _this));
      } else
        hitTarget = false;
      return hitTarget;
    },
    hitTestSelf$1(position) {
      return this.behavior === B.HitTestBehavior_1;
    }
  };
  A.RenderConstrainedBox.prototype = {
    set$additionalConstraints(value) {
      if (this._additionalConstraints.$eq(0, value))
        return;
      this._additionalConstraints = value;
      this.markNeedsLayout$0();
    },
    performLayout$0() {
      var _this = this,
        constraints = A.RenderObject.prototype.get$constraints.call(_this),
        t1 = _this.RenderObjectWithChildMixin__child,
        t2 = _this._additionalConstraints;
      if (t1 != null) {
        t1.layout$2$parentUsesSize(t2.enforce$1(constraints), true);
        t1 = _this.RenderObjectWithChildMixin__child._size;
        t1.toString;
        _this._size = t1;
      } else
        _this._size = t2.enforce$1(constraints).constrain$1(B.Size_0_0);
    },
    computeDryLayout$1(constraints) {
      var t1 = this.RenderObjectWithChildMixin__child,
        t2 = this._additionalConstraints;
      if (t1 != null)
        return t1.getDryLayout$1(t2.enforce$1(constraints));
      else
        return t2.enforce$1(constraints).constrain$1(B.Size_0_0);
    }
  };
  A.RenderLimitedBox.prototype = {
    set$maxWidth(value) {
      if (this._maxWidth === value)
        return;
      this._maxWidth = value;
      this.markNeedsLayout$0();
    },
    set$maxHeight(value) {
      if (this._maxHeight === value)
        return;
      this._maxHeight = value;
      this.markNeedsLayout$0();
    },
    _limitConstraints$1(constraints) {
      var t3, t4,
        t1 = constraints.minWidth,
        t2 = constraints.maxWidth;
      t2 = t2 < 1 / 0 ? t2 : A.clampDouble(this._maxWidth, t1, t2);
      t3 = constraints.minHeight;
      t4 = constraints.maxHeight;
      return new A.BoxConstraints(t1, t2, t3, t4 < 1 / 0 ? t4 : A.clampDouble(this._maxHeight, t3, t4));
    },
    _proxy_box$_computeSize$2$constraints$layoutChild(constraints, layoutChild) {
      var t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        return constraints.constrain$1(layoutChild.call$2(t1, this._limitConstraints$1(constraints)));
      return this._limitConstraints$1(constraints).constrain$1(B.Size_0_0);
    },
    computeDryLayout$1(constraints) {
      return this._proxy_box$_computeSize$2$constraints$layoutChild(constraints, A.layout_helper_ChildLayoutHelper_dryLayoutChild$closure());
    },
    performLayout$0() {
      this._size = this._proxy_box$_computeSize$2$constraints$layoutChild(A.RenderObject.prototype.get$constraints.call(this), A.layout_helper_ChildLayoutHelper_layoutChild$closure());
    }
  };
  A.RenderAnimatedOpacityMixin.prototype = {
    get$isRepaintBoundary() {
      if (this.RenderObjectWithChildMixin__child != null) {
        var t1 = this.RenderAnimatedOpacityMixin__currentlyIsRepaintBoundary;
        t1.toString;
      } else
        t1 = false;
      return t1;
    },
    updateCompositedLayer$1$oldLayer(oldLayer) {
      var updatedLayer = oldLayer == null ? A.OpacityLayer$() : oldLayer;
      updatedLayer.set$alpha(this.RenderAnimatedOpacityMixin__alpha);
      return updatedLayer;
    },
    set$opacity(value) {
      var _this = this,
        t1 = _this.RenderAnimatedOpacityMixin__opacity;
      if (t1 === value)
        return;
      if (_this._node$_owner != null && t1 != null)
        t1.removeListener$1(_this.get$_updateOpacity());
      _this.RenderAnimatedOpacityMixin__opacity = value;
      if (_this._node$_owner != null)
        value.addListener$1(_this.get$_updateOpacity());
      _this._updateOpacity$0();
    },
    set$alwaysIncludeSemantics(value) {
      if (false === this.RenderAnimatedOpacityMixin__alwaysIncludeSemantics)
        return;
      this.RenderAnimatedOpacityMixin__alwaysIncludeSemantics = false;
      this.markNeedsSemanticsUpdate$0();
    },
    _updateOpacity$0() {
      var wasRepaintBoundary, _this = this,
        oldAlpha = _this.RenderAnimatedOpacityMixin__alpha,
        t1 = _this.RenderAnimatedOpacityMixin__alpha = B.JSNumber_methods.round$0(A._clampDouble(_this.RenderAnimatedOpacityMixin__opacity.get$value(), 0, 1) * 255);
      if (oldAlpha !== t1) {
        wasRepaintBoundary = _this.RenderAnimatedOpacityMixin__currentlyIsRepaintBoundary;
        t1 = t1 > 0;
        _this.RenderAnimatedOpacityMixin__currentlyIsRepaintBoundary = t1;
        if (_this.RenderObjectWithChildMixin__child != null && wasRepaintBoundary !== t1)
          _this.markNeedsCompositingBitsUpdate$0();
        _this.markNeedsCompositedLayerUpdate$0();
        if (oldAlpha === 0 || _this.RenderAnimatedOpacityMixin__alpha === 0)
          _this.markNeedsSemanticsUpdate$0();
      }
    },
    paintsChild$1(child) {
      return this.RenderAnimatedOpacityMixin__opacity.get$value() > 0;
    },
    visitChildrenForSemantics$1(visitor) {
      var t2,
        t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        if (this.RenderAnimatedOpacityMixin__alpha === 0) {
          t2 = this.RenderAnimatedOpacityMixin__alwaysIncludeSemantics;
          t2.toString;
        } else
          t2 = true;
      else
        t2 = false;
      if (t2)
        visitor.call$1(t1);
    }
  };
  A.RenderAnimatedOpacity.prototype = {};
  A.CustomClipper.prototype = {
    addListener$1(listener) {
      return null;
    },
    removeListener$1(listener) {
      return null;
    },
    toString$0(_) {
      return "CustomClipper";
    }
  };
  A.ShapeBorderClipper.prototype = {
    getClip$1(size) {
      return this.shape.getOuterPath$2$textDirection(new A.Rect(0, 0, 0 + size._dx, 0 + size._dy), this.textDirection);
    },
    shouldReclip$1(oldClipper) {
      if (A.getRuntimeTypeOfDartObject(oldClipper) !== B.Type_ShapeBorderClipper_uKx)
        return true;
      type$.ShapeBorderClipper._as(oldClipper);
      return !oldClipper.shape.$eq(0, this.shape) || oldClipper.textDirection != this.textDirection;
    }
  };
  A._RenderCustomClip.prototype = {
    set$clipper(newClipper) {
      var t2, _this = this,
        t1 = _this._clipper;
      if (t1 == newClipper)
        return;
      _this._clipper = newClipper;
      t2 = newClipper == null;
      if (t2 || t1 == null || A.getRuntimeTypeOfDartObject(newClipper) !== A.getRuntimeTypeOfDartObject(t1) || newClipper.shouldReclip$1(t1))
        _this._markNeedsClip$0();
      if (_this._node$_owner != null) {
        if (t1 != null)
          t1.removeListener$1(_this.get$_markNeedsClip());
        if (!t2)
          newClipper.addListener$1(_this.get$_markNeedsClip());
      }
    },
    attach$1(owner) {
      var t1;
      this.super$_RenderProxyBox_RenderBox_RenderObjectWithChildMixin$attach(owner);
      t1 = this._clipper;
      if (t1 != null)
        t1.addListener$1(this.get$_markNeedsClip());
    },
    detach$0() {
      var t1 = this._clipper;
      if (t1 != null)
        t1.removeListener$1(this.get$_markNeedsClip());
      this.super$_RenderProxyBox_RenderBox_RenderObjectWithChildMixin$detach();
    },
    _markNeedsClip$0() {
      this._clip = null;
      this.markNeedsPaint$0();
      this.markNeedsSemanticsUpdate$0();
    },
    set$clipBehavior(value) {
      if (value !== this._clipBehavior) {
        this._clipBehavior = value;
        this.markNeedsPaint$0();
      }
    },
    performLayout$0() {
      var t1, _this = this,
        oldSize = _this._size;
      oldSize = oldSize != null ? oldSize : null;
      _this.super$RenderProxyBoxMixin$performLayout();
      t1 = _this._size;
      t1.toString;
      if (!J.$eq$(oldSize, t1))
        _this._clip = null;
    },
    _updateClip$0() {
      var t1, t2, _this = this;
      if (_this._clip == null) {
        t1 = _this._clipper;
        if (t1 == null)
          t1 = null;
        else {
          t2 = _this._size;
          t2.toString;
          t2 = t1.getClip$1(t2);
          t1 = t2;
        }
        _this._clip = t1 == null ? _this.get$_defaultClip() : t1;
      }
    },
    describeApproximatePaintClip$1(child) {
      var t1, _this = this;
      switch (_this._clipBehavior.index) {
        case 0:
          return null;
        case 1:
        case 2:
        case 3:
          if (_this._clipper == null)
            t1 = null;
          else {
            t1 = _this._size;
            t1 = new A.Rect(0, 0, 0 + t1._dx, 0 + t1._dy);
          }
          if (t1 == null) {
            t1 = _this._size;
            t1 = new A.Rect(0, 0, 0 + t1._dx, 0 + t1._dy);
          }
          return t1;
      }
    },
    dispose$0() {
      this._debugText = null;
      this.super$RenderObject$dispose();
    }
  };
  A.RenderClipRect.prototype = {
    get$_defaultClip() {
      var t1 = this._size;
      return new A.Rect(0, 0, 0 + t1._dx, 0 + t1._dy);
    },
    hitTest$2$position(result, position) {
      var _this = this;
      if (_this._clipper != null) {
        _this._updateClip$0();
        if (!_this._clip.contains$1(0, position))
          return false;
      }
      return _this.super$RenderBox$hitTest(result, position);
    },
    paint$2(context, offset) {
      var t2, t3, _this = this,
        t1 = _this.RenderObjectWithChildMixin__child;
      if (t1 != null) {
        t2 = _this._layerHandle;
        if (_this._clipBehavior !== B.Clip_0) {
          _this._updateClip$0();
          t1 = _this.__RenderObject__needsCompositing_A;
          t1 === $ && A.throwUnnamedLateFieldNI();
          t3 = _this._clip;
          t3.toString;
          t2.set$layer(context.pushClipRect$6$clipBehavior$oldLayer(t1, offset, t3, A.RenderProxyBoxMixin.prototype.get$paint.call(_this), _this._clipBehavior, type$.nullable_ClipRectLayer._as(t2._layer)));
        } else {
          context.paintChild$2(t1, offset);
          t2.set$layer(null);
        }
      } else
        _this._layerHandle.set$layer(null);
    }
  };
  A.RenderClipPath.prototype = {
    get$_defaultClip() {
      var t1 = A.SurfacePath$(),
        t2 = this._size;
      t1.addRectWithDirection$3(new A.Rect(0, 0, 0 + t2._dx, 0 + t2._dy), 0, 0);
      return t1;
    },
    hitTest$2$position(result, position) {
      var _this = this;
      if (_this._clipper != null) {
        _this._updateClip$0();
        if (!_this._clip.contains$1(0, position))
          return false;
      }
      return _this.super$RenderBox$hitTest(result, position);
    },
    paint$2(context, offset) {
      var t2, t3, t4, t5, _this = this,
        t1 = _this.RenderObjectWithChildMixin__child;
      if (t1 != null) {
        t2 = _this._layerHandle;
        if (_this._clipBehavior !== B.Clip_0) {
          _this._updateClip$0();
          t1 = _this.__RenderObject__needsCompositing_A;
          t1 === $ && A.throwUnnamedLateFieldNI();
          t3 = _this._size;
          t4 = t3._dx;
          t3 = t3._dy;
          t5 = _this._clip;
          t5.toString;
          t2.set$layer(context.pushClipPath$7$clipBehavior$oldLayer(t1, offset, new A.Rect(0, 0, 0 + t4, 0 + t3), t5, A.RenderProxyBoxMixin.prototype.get$paint.call(_this), _this._clipBehavior, type$.nullable_ClipPathLayer._as(t2._layer)));
        } else {
          context.paintChild$2(t1, offset);
          t2.set$layer(null);
        }
      } else
        _this._layerHandle.set$layer(null);
    }
  };
  A._RenderPhysicalModelBase.prototype = {
    set$elevation(value) {
      if (this._proxy_box$_elevation === value)
        return;
      this._proxy_box$_elevation = value;
      this.markNeedsPaint$0();
    },
    set$shadowColor(value) {
      if (this._proxy_box$_shadowColor.$eq(0, value))
        return;
      this._proxy_box$_shadowColor = value;
      this.markNeedsPaint$0();
    },
    set$color(value) {
      if (this._proxy_box$_color.$eq(0, value))
        return;
      this._proxy_box$_color = value;
      this.markNeedsPaint$0();
    },
    describeSemanticsConfiguration$1(config) {
      this.super$RenderObject$describeSemanticsConfiguration(config);
      config.set$elevation(this._proxy_box$_elevation);
    }
  };
  A.RenderPhysicalModel.prototype = {
    set$shape(value) {
      if (this._shape === value)
        return;
      this._shape = value;
      this._markNeedsClip$0();
    },
    set$borderRadius(value) {
      if (J.$eq$(this._proxy_box$_borderRadius, value))
        return;
      this._proxy_box$_borderRadius = value;
      this._markNeedsClip$0();
    },
    get$_defaultClip() {
      var t3, t4,
        t1 = this._size,
        t2 = 0 + t1._dx;
      t1 = 0 + t1._dy;
      switch (this._shape.index) {
        case 0:
          t3 = this._proxy_box$_borderRadius;
          if (t3 == null)
            t3 = B.BorderRadius_tUf;
          return t3.toRRect$1(new A.Rect(0, 0, t2, t1));
        case 1:
          t3 = t2 / 2;
          t4 = t1 / 2;
          return new A.RRect(0, 0, t2, t1, t3, t4, t3, t4, t3, t4, t3, t4);
      }
    },
    hitTest$2$position(result, position) {
      var _this = this;
      if (_this._clipper != null) {
        _this._updateClip$0();
        if (!_this._clip.contains$1(0, position))
          return false;
      }
      return _this.super$RenderBox$hitTest(result, position);
    },
    paint$2(context, offset) {
      var offsetRRect, offsetRRectAsPath, canvas, t1, usesSaveLayer, t2, t3, t4, t5, t6, _this = this;
      if (_this.RenderObjectWithChildMixin__child == null) {
        _this._layerHandle.set$layer(null);
        return;
      }
      _this._updateClip$0();
      offsetRRect = _this._clip.shift$1(offset);
      offsetRRectAsPath = A.SurfacePath$();
      offsetRRectAsPath._addRRect$3(offsetRRect, 0, 6);
      canvas = context.get$canvas();
      t1 = _this._proxy_box$_elevation;
      if (t1 !== 0) {
        canvas.drawRect$2(new A.Rect(offsetRRect.left, offsetRRect.top, offsetRRect.right, offsetRRect.bottom).inflate$1(20), $.$get$_transparentPaint());
        canvas.drawShadow$4(offsetRRectAsPath, _this._proxy_box$_shadowColor, _this._proxy_box$_elevation, (_this._proxy_box$_color.get$value() >>> 24 & 255) !== 255);
      }
      usesSaveLayer = _this._clipBehavior === B.Clip_3;
      if (!usesSaveLayer) {
        t1 = A.Paint$();
        t1.set$color(_this._proxy_box$_color);
        canvas.drawRRect$2(offsetRRect, t1);
      }
      t1 = _this.__RenderObject__needsCompositing_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t2 = _this._size;
      t3 = t2._dx;
      t2 = t2._dy;
      t4 = _this._clip;
      t4.toString;
      t5 = _this._layerHandle;
      t6 = type$.nullable_ClipRRectLayer._as(t5._layer);
      t5.set$layer(context.pushClipRRect$7$clipBehavior$oldLayer(t1, offset, new A.Rect(0, 0, 0 + t3, 0 + t2), t4, new A.RenderPhysicalModel_paint_closure(_this, usesSaveLayer), _this._clipBehavior, t6));
    }
  };
  A.RenderPhysicalModel_paint_closure.prototype = {
    call$2(context, offset) {
      var t1, t2;
      if (this.usesSaveLayer) {
        t1 = context.get$canvas();
        t2 = A.Paint$();
        t2.set$color(this.$this._proxy_box$_color);
        t1._addMethod$1(13);
        t1._objects.push(t2);
      }
      this.$this.super$RenderProxyBoxMixin$paint(context, offset);
    },
    $signature: 3
  };
  A.RenderPhysicalShape.prototype = {
    get$_defaultClip() {
      var t1 = A.SurfacePath$(),
        t2 = this._size;
      t1.addRectWithDirection$3(new A.Rect(0, 0, 0 + t2._dx, 0 + t2._dy), 0, 0);
      return t1;
    },
    hitTest$2$position(result, position) {
      var _this = this;
      if (_this._clipper != null) {
        _this._updateClip$0();
        if (!_this._clip.contains$1(0, position))
          return false;
      }
      return _this.super$RenderBox$hitTest(result, position);
    },
    paint$2(context, offset) {
      var t1, t2, t3, t4, t5, offsetPath, canvas, usesSaveLayer, t6, _this = this;
      if (_this.RenderObjectWithChildMixin__child == null) {
        _this._layerHandle.set$layer(null);
        return;
      }
      _this._updateClip$0();
      t1 = _this._size;
      t2 = offset._dx;
      t3 = offset._dy;
      t4 = t1._dx;
      t1 = t1._dy;
      t5 = _this._clip;
      t5.toString;
      offsetPath = A.SurfacePath$shiftedFrom(t5, t2, t3);
      canvas = context.get$canvas();
      t5 = _this._proxy_box$_elevation;
      if (t5 !== 0) {
        canvas.drawRect$2(new A.Rect(t2, t3, t2 + t4, t3 + t1).inflate$1(20), $.$get$_transparentPaint());
        canvas.drawShadow$4(offsetPath, _this._proxy_box$_shadowColor, _this._proxy_box$_elevation, (_this._proxy_box$_color.get$value() >>> 24 & 255) !== 255);
      }
      usesSaveLayer = _this._clipBehavior === B.Clip_3;
      if (!usesSaveLayer) {
        t1 = A.Paint$();
        t1.set$color(_this._proxy_box$_color);
        canvas.drawPath$2(offsetPath, t1);
      }
      t1 = _this.__RenderObject__needsCompositing_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t2 = _this._size;
      t3 = t2._dx;
      t2 = t2._dy;
      t4 = _this._clip;
      t4.toString;
      t5 = _this._layerHandle;
      t6 = type$.nullable_ClipPathLayer._as(t5._layer);
      t5.set$layer(context.pushClipPath$7$clipBehavior$oldLayer(t1, offset, new A.Rect(0, 0, 0 + t3, 0 + t2), t4, new A.RenderPhysicalShape_paint_closure(_this, usesSaveLayer), _this._clipBehavior, t6));
    }
  };
  A.RenderPhysicalShape_paint_closure.prototype = {
    call$2(context, offset) {
      var t1, t2;
      if (this.usesSaveLayer) {
        t1 = context.get$canvas();
        t2 = A.Paint$();
        t2.set$color(this.$this._proxy_box$_color);
        t1._addMethod$1(13);
        t1._objects.push(t2);
      }
      this.$this.super$RenderProxyBoxMixin$paint(context, offset);
    },
    $signature: 3
  };
  A.DecorationPosition.prototype = {
    _enumToString$0() {
      return "DecorationPosition." + this._name;
    }
  };
  A.RenderDecoratedBox.prototype = {
    set$decoration(value) {
      var t1, _this = this;
      if (value.$eq(0, _this._proxy_box$_decoration))
        return;
      t1 = _this._proxy_box$_painter;
      if (t1 != null)
        t1.dispose$0();
      _this._proxy_box$_painter = null;
      _this._proxy_box$_decoration = value;
      _this.markNeedsPaint$0();
    },
    set$position(value) {
      if (value === this._proxy_box$_position)
        return;
      this._proxy_box$_position = value;
      this.markNeedsPaint$0();
    },
    set$configuration(value) {
      if (value.$eq(0, this._configuration))
        return;
      this._configuration = value;
      this.markNeedsPaint$0();
    },
    detach$0() {
      var _this = this,
        t1 = _this._proxy_box$_painter;
      if (t1 != null)
        t1.dispose$0();
      _this._proxy_box$_painter = null;
      _this.super$_RenderProxyBox_RenderBox_RenderObjectWithChildMixin$detach();
      _this.markNeedsPaint$0();
    },
    hitTestSelf$1(position) {
      var t1 = this._proxy_box$_decoration,
        t2 = this._size;
      t2.toString;
      return t1.hitTest$3$textDirection(t2, position, this._configuration.textDirection);
    },
    paint$2(context, offset) {
      var t2, t3, filledConfiguration, _this = this,
        t1 = _this._proxy_box$_painter;
      if (t1 == null)
        t1 = _this._proxy_box$_painter = _this._proxy_box$_decoration.createBoxPainter$1(_this.get$markNeedsPaint());
      t2 = _this._configuration;
      t3 = _this._size;
      t3.toString;
      filledConfiguration = new A.ImageConfiguration(t2.bundle, t2.devicePixelRatio, t2.locale, t2.textDirection, t3, t2.platform);
      if (_this._proxy_box$_position === B.DecorationPosition_0) {
        t1.paint$3(context.get$canvas(), offset, filledConfiguration);
        if (_this._proxy_box$_decoration.get$isComplex())
          context.setIsComplexHint$0();
      }
      _this.super$RenderProxyBoxMixin$paint(context, offset);
      if (_this._proxy_box$_position === B.DecorationPosition_1) {
        t1 = _this._proxy_box$_painter;
        t1.toString;
        t1.paint$3(context.get$canvas(), offset, filledConfiguration);
        if (_this._proxy_box$_decoration.get$isComplex())
          context.setIsComplexHint$0();
      }
    }
  };
  A.RenderTransform.prototype = {
    set$origin(value) {
      return;
    },
    set$alignment(value) {
      var _this = this;
      if (J.$eq$(_this._alignment, value))
        return;
      _this._alignment = value;
      _this.markNeedsPaint$0();
      _this.markNeedsSemanticsUpdate$0();
    },
    set$textDirection(value) {
      var _this = this;
      if (_this._textDirection == value)
        return;
      _this._textDirection = value;
      _this.markNeedsPaint$0();
      _this.markNeedsSemanticsUpdate$0();
    },
    get$alwaysNeedsCompositing() {
      return false;
    },
    set$transform(value) {
      var t1, _this = this;
      if (J.$eq$(_this._proxy_box$_transform, value))
        return;
      t1 = new A.Matrix4(new Float64Array(16));
      t1.setFrom$1(value);
      _this._proxy_box$_transform = t1;
      _this.markNeedsPaint$0();
      _this.markNeedsSemanticsUpdate$0();
    },
    set$filterQuality(value) {
      return;
    },
    get$_effectiveTransform() {
      var result, translation, _this = this,
        t1 = _this._alignment,
        resolvedAlignment = t1 == null ? null : t1.resolve$1(_this._textDirection);
      if (resolvedAlignment == null)
        return _this._proxy_box$_transform;
      result = new A.Matrix4(new Float64Array(16));
      result.setIdentity$0();
      t1 = _this._size;
      t1.toString;
      translation = resolvedAlignment.alongSize$1(t1);
      result.translate$2(translation._dx, translation._dy);
      t1 = _this._proxy_box$_transform;
      t1.toString;
      result.multiply$1(t1);
      result.translate$2(-translation._dx, -translation._dy);
      return result;
    },
    hitTest$2$position(result, position) {
      return this.hitTestChildren$2$position(result, position);
    },
    hitTestChildren$2$position(result, position) {
      var t1 = this.transformHitTests ? this.get$_effectiveTransform() : null;
      return result.addWithPaintTransform$3$hitTest$position$transform(new A.RenderTransform_hitTestChildren_closure(this), position, t1);
    },
    paint$2(context, offset) {
      var t1, childOffset, t2, t3, t4, t5, t6, det2_01_01, t7, t8, det2_01_02, t9, t10, det2_01_03, det2_01_12, det2_01_13, det2_01_23, det, _this = this;
      if (_this.RenderObjectWithChildMixin__child != null) {
        t1 = _this.get$_effectiveTransform();
        t1.toString;
        childOffset = A.MatrixUtils_getAsTranslation(t1);
        if (childOffset == null) {
          t2 = t1._m4storage;
          t3 = t2[0];
          t4 = t2[5];
          t5 = t2[1];
          t6 = t2[4];
          det2_01_01 = t3 * t4 - t5 * t6;
          t7 = t2[6];
          t8 = t2[2];
          det2_01_02 = t3 * t7 - t8 * t6;
          t9 = t2[7];
          t10 = t2[3];
          det2_01_03 = t3 * t9 - t10 * t6;
          det2_01_12 = t5 * t7 - t8 * t4;
          det2_01_13 = t5 * t9 - t10 * t4;
          det2_01_23 = t8 * t9 - t10 * t7;
          t7 = t2[8];
          t10 = t2[9];
          t9 = t2[10];
          t8 = t2[11];
          det = -(t10 * det2_01_23 - t9 * det2_01_13 + t8 * det2_01_12) * t2[12] + (t7 * det2_01_23 - t9 * det2_01_03 + t8 * det2_01_02) * t2[13] - (t7 * det2_01_13 - t10 * det2_01_03 + t8 * det2_01_01) * t2[14] + (t7 * det2_01_12 - t10 * det2_01_02 + t9 * det2_01_01) * t2[15];
          if (det === 0 || !isFinite(det)) {
            _this._layerHandle.set$layer(null);
            return;
          }
          t2 = _this.__RenderObject__needsCompositing_A;
          t2 === $ && A.throwUnnamedLateFieldNI();
          t3 = A.RenderProxyBoxMixin.prototype.get$paint.call(_this);
          t4 = _this._layerHandle;
          t5 = t4._layer;
          t4.set$layer(context.pushTransform$5$oldLayer(t2, offset, t1, t3, t5 instanceof A.TransformLayer ? t5 : null));
        } else {
          _this.super$RenderProxyBoxMixin$paint(context, offset.$add(0, childOffset));
          _this._layerHandle.set$layer(null);
        }
      }
    },
    applyPaintTransform$2(child, transform) {
      var t1 = this.get$_effectiveTransform();
      t1.toString;
      transform.multiply$1(t1);
    }
  };
  A.RenderTransform_hitTestChildren_closure.prototype = {
    call$2(result, position) {
      return this.$this.super$RenderProxyBoxMixin$hitTestChildren(result, position);
    },
    $signature: 13
  };
  A.RenderFractionalTranslation.prototype = {
    set$translation(value) {
      var _this = this;
      if (_this._translation.$eq(0, value))
        return;
      _this._translation = value;
      _this.markNeedsPaint$0();
      _this.markNeedsSemanticsUpdate$0();
    },
    hitTest$2$position(result, position) {
      return this.hitTestChildren$2$position(result, position);
    },
    hitTestChildren$2$position(result, position) {
      var t1, t2, _this = this;
      if (_this.transformHitTests) {
        t1 = _this._translation;
        t2 = _this._size;
        t2 = new A.Offset(t1._dx * t2._dx, t1._dy * t2._dy);
        t1 = t2;
      } else
        t1 = null;
      return result.addWithPaintOffset$3$hitTest$offset$position(new A.RenderFractionalTranslation_hitTestChildren_closure(_this), t1, position);
    },
    paint$2(context, offset) {
      var t1, t2, _this = this;
      if (_this.RenderObjectWithChildMixin__child != null) {
        t1 = _this._translation;
        t2 = _this._size;
        _this.super$RenderProxyBoxMixin$paint(context, new A.Offset(offset._dx + t1._dx * t2._dx, offset._dy + t1._dy * t2._dy));
      }
    },
    applyPaintTransform$2(child, transform) {
      var t1 = this._translation,
        t2 = this._size;
      transform.translate$2(t1._dx * t2._dx, t1._dy * t2._dy);
    }
  };
  A.RenderFractionalTranslation_hitTestChildren_closure.prototype = {
    call$2(result, position) {
      return this.$this.super$RenderProxyBoxMixin$hitTestChildren(result, position);
    },
    $signature: 13
  };
  A.RenderPointerListener.prototype = {
    computeSizeForNoChild$1(constraints) {
      return new A.Size(A.clampDouble(1 / 0, constraints.minWidth, constraints.maxWidth), A.clampDouble(1 / 0, constraints.minHeight, constraints.maxHeight));
    },
    handleEvent$2($event, entry) {
      var t1, _this = this, _null = null;
      if (type$.PointerDownEvent._is($event)) {
        t1 = _this.onPointerDown;
        return t1 == null ? _null : t1.call$1($event);
      }
      if (type$.PointerMoveEvent._is($event))
        return _null;
      if (type$.PointerUpEvent._is($event)) {
        t1 = _this.onPointerUp;
        return t1 == null ? _null : t1.call$1($event);
      }
      if (type$.PointerHoverEvent._is($event))
        return _null;
      if (type$.PointerCancelEvent._is($event)) {
        t1 = _this.onPointerCancel;
        return t1 == null ? _null : t1.call$1($event);
      }
      if (type$.PointerPanZoomStartEvent._is($event)) {
        t1 = _this.onPointerPanZoomStart;
        return t1 == null ? _null : t1.call$1($event);
      }
      if (type$.PointerPanZoomUpdateEvent._is($event))
        return _null;
      if (type$.PointerPanZoomEndEvent._is($event))
        return _null;
      if (type$.PointerSignalEvent._is($event)) {
        t1 = _this.onPointerSignal;
        return t1 == null ? _null : t1.call$1($event);
      }
    }
  };
  A.RenderMouseRegion.prototype = {
    hitTest$2$position(result, position) {
      var t1 = this.super$RenderProxyBoxWithHitTestBehavior$hitTest(result, position);
      return t1;
    },
    handleEvent$2($event, entry) {
      var t1 = this.onHover;
      if (t1 != null && type$.PointerHoverEvent._is($event))
        return t1.call$1($event);
    },
    get$cursor() {
      return this._cursor;
    },
    get$validForMouseTracker() {
      return this._validForMouseTracker;
    },
    attach$1(owner) {
      this.super$_RenderProxyBox_RenderBox_RenderObjectWithChildMixin$attach(owner);
      this._validForMouseTracker = true;
    },
    detach$0() {
      this._validForMouseTracker = false;
      this.super$_RenderProxyBox_RenderBox_RenderObjectWithChildMixin$detach();
    },
    computeSizeForNoChild$1(constraints) {
      return new A.Size(A.clampDouble(1 / 0, constraints.minWidth, constraints.maxWidth), A.clampDouble(1 / 0, constraints.minHeight, constraints.maxHeight));
    },
    $isMouseTrackerAnnotation: 1,
    get$onEnter() {
      return this.onEnter;
    },
    get$onExit() {
      return this.onExit;
    }
  };
  A.RenderRepaintBoundary.prototype = {
    get$isRepaintBoundary() {
      return true;
    }
  };
  A.RenderIgnorePointer.prototype = {
    set$ignoring(value) {
      var t1, _this = this;
      if (value === _this._ignoring)
        return;
      _this._ignoring = value;
      t1 = _this._ignoringSemantics;
      if (t1 == null || !t1)
        _this.markNeedsSemanticsUpdate$0();
    },
    set$ignoringSemantics(value) {
      var _this = this,
        oldEffectiveValue = _this._ignoringSemantics;
      if (value == oldEffectiveValue)
        return;
      if (oldEffectiveValue == null)
        oldEffectiveValue = _this._ignoring;
      _this._ignoringSemantics = value;
      if (oldEffectiveValue !== (value == null ? _this._ignoring : value))
        _this.markNeedsSemanticsUpdate$0();
    },
    hitTest$2$position(result, position) {
      return !this._ignoring && this.super$RenderBox$hitTest(result, position);
    },
    visitChildrenForSemantics$1(visitor) {
      var t2,
        t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null) {
        t2 = this._ignoringSemantics;
        t2 = !(t2 == null ? this._ignoring : t2);
      } else
        t2 = false;
      if (t2)
        visitor.call$1(t1);
    }
  };
  A.RenderOffstage.prototype = {
    set$offstage(value) {
      var _this = this;
      if (value === _this._proxy_box$_offstage)
        return;
      _this._proxy_box$_offstage = value;
      _this.markNeedsLayout$0();
      _this.markParentNeedsLayout$0();
    },
    computeDistanceToActualBaseline$1(baseline) {
      if (this._proxy_box$_offstage)
        return null;
      return this.super$_RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin$computeDistanceToActualBaseline(baseline);
    },
    get$sizedByParent() {
      return this._proxy_box$_offstage;
    },
    computeDryLayout$1(constraints) {
      if (this._proxy_box$_offstage)
        return new A.Size(A.clampDouble(0, constraints.minWidth, constraints.maxWidth), A.clampDouble(0, constraints.minHeight, constraints.maxHeight));
      return this.super$RenderProxyBoxMixin$computeDryLayout(constraints);
    },
    performResize$0() {
      this.super$RenderBox$performResize();
    },
    performLayout$0() {
      var t1, _this = this;
      if (_this._proxy_box$_offstage) {
        t1 = _this.RenderObjectWithChildMixin__child;
        if (t1 != null)
          t1.layout$1(A.RenderObject.prototype.get$constraints.call(_this));
      } else
        _this.super$RenderProxyBoxMixin$performLayout();
    },
    hitTest$2$position(result, position) {
      return !this._proxy_box$_offstage && this.super$RenderBox$hitTest(result, position);
    },
    paintsChild$1(child) {
      return !this._proxy_box$_offstage;
    },
    paint$2(context, offset) {
      if (this._proxy_box$_offstage)
        return;
      this.super$RenderProxyBoxMixin$paint(context, offset);
    },
    visitChildrenForSemantics$1(visitor) {
      if (this._proxy_box$_offstage)
        return;
      this.super$RenderObject$visitChildrenForSemantics(visitor);
    }
  };
  A.RenderAbsorbPointer.prototype = {
    set$absorbing(value) {
      if (this._absorbing === value)
        return;
      this._absorbing = value;
      this.markNeedsSemanticsUpdate$0();
    },
    set$ignoringSemantics(value) {
      return;
    },
    hitTest$2$position(result, position) {
      return this._absorbing ? this._size.contains$1(0, position) : this.super$RenderBox$hitTest(result, position);
    },
    visitChildrenForSemantics$1(visitor) {
      var t2,
        t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null) {
        t2 = this._absorbing;
        t2 = !t2;
      } else
        t2 = false;
      if (t2)
        visitor.call$1(t1);
    }
  };
  A.RenderSemanticsGestureHandler.prototype = {
    set$validActions(value) {
      if (A.setEquals(value, this._validActions))
        return;
      this._validActions = value;
      this.markNeedsSemanticsUpdate$0();
    },
    set$onTap(value) {
      var t1, _this = this;
      if (J.$eq$(_this._onTap, value))
        return;
      t1 = _this._onTap;
      _this._onTap = value;
      if (value != null !== (t1 != null))
        _this.markNeedsSemanticsUpdate$0();
    },
    set$onLongPress(value) {
      var t1, _this = this;
      if (J.$eq$(_this._onLongPress, value))
        return;
      t1 = _this._onLongPress;
      _this._onLongPress = value;
      if (value != null !== (t1 != null))
        _this.markNeedsSemanticsUpdate$0();
    },
    set$onHorizontalDragUpdate(value) {
      var t1, _this = this;
      if (J.$eq$(_this._onHorizontalDragUpdate, value))
        return;
      t1 = _this._onHorizontalDragUpdate;
      _this._onHorizontalDragUpdate = value;
      if (value != null !== (t1 != null))
        _this.markNeedsSemanticsUpdate$0();
    },
    set$onVerticalDragUpdate(value) {
      var t1, _this = this;
      if (J.$eq$(_this._onVerticalDragUpdate, value))
        return;
      t1 = _this._onVerticalDragUpdate;
      _this._onVerticalDragUpdate = value;
      if (value != null !== (t1 != null))
        _this.markNeedsSemanticsUpdate$0();
    },
    describeSemanticsConfiguration$1(config) {
      var t1, _this = this;
      _this.super$RenderObject$describeSemanticsConfiguration(config);
      if (_this._onTap != null) {
        t1 = _this._validActions;
        t1 = t1 == null || t1.contains$1(0, B.SemanticsAction_1);
      } else
        t1 = false;
      if (t1)
        config.set$onTap(_this._onTap);
      if (_this._onLongPress != null) {
        t1 = _this._validActions;
        t1 = t1 == null || t1.contains$1(0, B.SemanticsAction_2);
      } else
        t1 = false;
      if (t1)
        config.set$onLongPress(_this._onLongPress);
      if (_this._onHorizontalDragUpdate != null) {
        t1 = _this._validActions;
        if (t1 == null || t1.contains$1(0, B.SemanticsAction_8))
          config.set$onScrollRight(_this.get$_performSemanticScrollRight());
        t1 = _this._validActions;
        if (t1 == null || t1.contains$1(0, B.SemanticsAction_4))
          config.set$onScrollLeft(_this.get$_performSemanticScrollLeft());
      }
      if (_this._onVerticalDragUpdate != null) {
        t1 = _this._validActions;
        if (t1 == null || t1.contains$1(0, B.SemanticsAction_16))
          config.set$onScrollUp(_this.get$_performSemanticScrollUp());
        t1 = _this._validActions;
        if (t1 == null || t1.contains$1(0, B.SemanticsAction_32))
          config.set$onScrollDown(_this.get$_performSemanticScrollDown());
      }
    },
    _performSemanticScrollLeft$0() {
      var t2, primaryDelta,
        t1 = this._onHorizontalDragUpdate;
      if (t1 != null) {
        t2 = this._size;
        primaryDelta = t2._dx * -0.8;
        t2 = t2.center$1(B.Offset_0_0);
        t2 = A.MatrixUtils_transformPoint(this.getTransformTo$1(null), t2);
        t1.call$1(new A.DragUpdateDetails(null, new A.Offset(primaryDelta, 0), primaryDelta, t2));
      }
    },
    _performSemanticScrollRight$0() {
      var t2, primaryDelta,
        t1 = this._onHorizontalDragUpdate;
      if (t1 != null) {
        t2 = this._size;
        primaryDelta = t2._dx * 0.8;
        t2 = t2.center$1(B.Offset_0_0);
        t2 = A.MatrixUtils_transformPoint(this.getTransformTo$1(null), t2);
        t1.call$1(new A.DragUpdateDetails(null, new A.Offset(primaryDelta, 0), primaryDelta, t2));
      }
    },
    _performSemanticScrollUp$0() {
      var t2, primaryDelta,
        t1 = this._onVerticalDragUpdate;
      if (t1 != null) {
        t2 = this._size;
        primaryDelta = t2._dy * -0.8;
        t2 = t2.center$1(B.Offset_0_0);
        t2 = A.MatrixUtils_transformPoint(this.getTransformTo$1(null), t2);
        t1.call$1(new A.DragUpdateDetails(null, new A.Offset(0, primaryDelta), primaryDelta, t2));
      }
    },
    _performSemanticScrollDown$0() {
      var t2, primaryDelta,
        t1 = this._onVerticalDragUpdate;
      if (t1 != null) {
        t2 = this._size;
        primaryDelta = t2._dy * 0.8;
        t2 = t2.center$1(B.Offset_0_0);
        t2 = A.MatrixUtils_transformPoint(this.getTransformTo$1(null), t2);
        t1.call$1(new A.DragUpdateDetails(null, new A.Offset(0, primaryDelta), primaryDelta, t2));
      }
    }
  };
  A.RenderSemanticsAnnotations.prototype = {
    set$properties(value) {
      var _this = this;
      if (_this._properties === value)
        return;
      _this._properties = value;
      _this._updateAttributedFields$1(value);
      _this.markNeedsSemanticsUpdate$0();
    },
    set$container(value) {
      if (this._container === value)
        return;
      this._container = value;
      this.markNeedsSemanticsUpdate$0();
    },
    set$explicitChildNodes(value) {
      if (this._explicitChildNodes === value)
        return;
      this._explicitChildNodes = value;
      this.markNeedsSemanticsUpdate$0();
    },
    set$excludeSemantics(value) {
      if (this._excludeSemantics === value)
        return;
      this._excludeSemantics = value;
      this.markNeedsSemanticsUpdate$0();
    },
    _updateAttributedFields$1(value) {
      var _this = this,
        t1 = value.attributedLabel;
      t1 = value.label;
      t1 = t1 == null ? null : new A.AttributedString(t1, B.List_empty0);
      _this._attributedLabel = t1;
      t1 = value.attributedValue;
      t1 = value.value;
      t1 = t1 == null ? null : new A.AttributedString(t1, B.List_empty0);
      _this._attributedValue = t1;
      _this._attributedIncreasedValue = null;
      _this._attributedDecreasedValue = null;
      _this._attributedHint = null;
    },
    set$textDirection(value) {
      if (this._textDirection == value)
        return;
      this._textDirection = value;
      this.markNeedsSemanticsUpdate$0();
    },
    visitChildrenForSemantics$1(visitor) {
      if (this._excludeSemantics)
        return;
      this.super$RenderObject$visitChildrenForSemantics(visitor);
    },
    describeSemanticsConfiguration$1(config) {
      var t1, t2, _this = this;
      _this.super$RenderObject$describeSemanticsConfiguration(config);
      config._isSemanticBoundary = _this._container;
      config.explicitChildNodes = _this._explicitChildNodes;
      t1 = _this._properties.enabled;
      if (t1 != null) {
        config._setFlag$2(B.SemanticsFlag_64, true);
        config._setFlag$2(B.SemanticsFlag_128, t1);
      }
      t1 = _this._properties.checked;
      if (t1 != null) {
        config._setFlag$2(B.SemanticsFlag_1, true);
        config._setFlag$2(B.SemanticsFlag_2, t1);
      }
      t1 = _this._properties.mixed;
      if (t1 != null) {
        config._setFlag$2(B.SemanticsFlag_1, true);
        config._setFlag$2(B.SemanticsFlag_33554432, t1);
      }
      t1 = _this._properties.button;
      if (t1 != null)
        config._setFlag$2(B.SemanticsFlag_8, t1);
      t1 = _this._properties.slider;
      if (t1 != null)
        config._setFlag$2(B.SemanticsFlag_8388608, t1);
      t1 = _this._properties.header;
      if (t1 != null)
        config._setFlag$2(B.SemanticsFlag_512, t1);
      t1 = _this._properties.focusable;
      if (t1 != null)
        config._setFlag$2(B.SemanticsFlag_2097152, t1);
      t1 = _this._properties.focused;
      if (t1 != null)
        config._setFlag$2(B.SemanticsFlag_32, t1);
      t1 = _this._attributedLabel;
      if (t1 != null) {
        config._semantics$_attributedLabel = t1;
        config._hasBeenAnnotated = true;
      }
      t1 = _this._attributedValue;
      if (t1 != null) {
        config._semantics$_attributedValue = t1;
        config._hasBeenAnnotated = true;
      }
      t1 = _this._attributedIncreasedValue;
      if (t1 != null) {
        config._semantics$_attributedIncreasedValue = t1;
        config._hasBeenAnnotated = true;
      }
      t1 = _this._attributedDecreasedValue;
      if (t1 != null) {
        config._semantics$_attributedDecreasedValue = t1;
        config._hasBeenAnnotated = true;
      }
      t1 = _this._attributedHint;
      if (t1 != null) {
        config._semantics$_attributedHint = t1;
        config._hasBeenAnnotated = true;
      }
      t1 = _this._properties;
      t2 = t1.tooltip;
      if (t2 != null) {
        config._tooltip = t2;
        config._hasBeenAnnotated = true;
      }
      t1 = t1.scopesRoute;
      if (t1 != null)
        config._setFlag$2(B.SemanticsFlag_2048, t1);
      t1 = _this._properties.namesRoute;
      if (t1 != null)
        config._setFlag$2(B.SemanticsFlag_4096, t1);
      t1 = _this._textDirection;
      if (t1 != null) {
        config._semantics$_textDirection = t1;
        config._hasBeenAnnotated = true;
      }
      t1 = _this._properties;
      t2 = t1.sortKey;
      if (t2 != null) {
        config._sortKey = t2;
        config._hasBeenAnnotated = true;
      }
      t1 = t1.tagForChildren;
      if (t1 != null)
        config.addTagForChildren$1(t1);
      if (_this._properties.onTap != null)
        config.set$onTap(_this.get$_performTap());
      if (_this._properties.onLongPress != null)
        config.set$onLongPress(_this.get$_performLongPress());
      if (_this._properties.onDismiss != null)
        config.set$onDismiss(_this.get$_performDismiss());
      if (_this._properties.onDidGainAccessibilityFocus != null)
        config.set$onDidGainAccessibilityFocus(_this.get$_performDidGainAccessibilityFocus());
    },
    _performTap$0() {
      var t1 = this._properties.onTap;
      if (t1 != null)
        t1.call$0();
    },
    _performLongPress$0() {
      var t1 = this._properties.onLongPress;
      if (t1 != null)
        t1.call$0();
    },
    _performDismiss$0() {
      var t1 = this._properties.onDismiss;
      if (t1 != null)
        t1.call$0();
    },
    _performDidGainAccessibilityFocus$0() {
      var t1 = this._properties.onDidGainAccessibilityFocus;
      if (t1 != null)
        t1.call$0();
    }
  };
  A.RenderBlockSemantics.prototype = {
    set$blocking(value) {
      return;
    },
    describeSemanticsConfiguration$1(config) {
      this.super$RenderObject$describeSemanticsConfiguration(config);
      config.isBlockingSemanticsOfPreviouslyPaintedNodes = true;
    }
  };
  A.RenderExcludeSemantics.prototype = {
    set$excluding(value) {
      if (value === this._excluding)
        return;
      this._excluding = value;
      this.markNeedsSemanticsUpdate$0();
    },
    visitChildrenForSemantics$1(visitor) {
      if (this._excluding)
        return;
      this.super$RenderObject$visitChildrenForSemantics(visitor);
    }
  };
  A.RenderIndexedSemantics.prototype = {
    set$index(value) {
      if (value === this._proxy_box$_index)
        return;
      this._proxy_box$_index = value;
      this.markNeedsSemanticsUpdate$0();
    },
    describeSemanticsConfiguration$1(config) {
      this.super$RenderObject$describeSemanticsConfiguration(config);
      config._indexInParent = this._proxy_box$_index;
      config._hasBeenAnnotated = true;
    }
  };
  A.RenderLeaderLayer.prototype = {
    set$link(value) {
      var _this = this,
        t1 = _this._link;
      if (t1 === value)
        return;
      t1.leaderSize = null;
      _this._link = value;
      t1 = _this._previousLayoutSize;
      if (t1 != null)
        value.leaderSize = t1;
      _this.markNeedsPaint$0();
    },
    get$alwaysNeedsCompositing() {
      return true;
    },
    performLayout$0() {
      var t1, _this = this;
      _this.super$RenderProxyBoxMixin$performLayout();
      t1 = _this._size;
      t1.toString;
      _this._previousLayoutSize = t1;
      _this._link.leaderSize = t1;
    },
    paint$2(context, offset) {
      var t1 = this._layerHandle,
        t2 = t1._layer,
        t3 = this._link;
      if (t2 == null)
        t1.set$layer(A.LeaderLayer$(t3, offset));
      else {
        type$.LeaderLayer._as(t2);
        t2.set$link(t3);
        t2.set$offset(offset);
      }
      t1 = t1._layer;
      t1.toString;
      context.pushLayer$3(t1, A.RenderProxyBoxMixin.prototype.get$paint.call(this), B.Offset_0_0);
    }
  };
  A.RenderFollowerLayer.prototype = {
    set$link(value) {
      if (this._link === value)
        return;
      this._link = value;
      this.markNeedsPaint$0();
    },
    set$showWhenUnlinked(value) {
      return;
    },
    set$offset(value) {
      if (this._proxy_box$_offset.$eq(0, value))
        return;
      this._proxy_box$_offset = value;
      this.markNeedsPaint$0();
    },
    set$leaderAnchor(value) {
      if (this._leaderAnchor.$eq(0, value))
        return;
      this._leaderAnchor = value;
      this.markNeedsPaint$0();
    },
    set$followerAnchor(value) {
      if (this._followerAnchor.$eq(0, value))
        return;
      this._followerAnchor = value;
      this.markNeedsPaint$0();
    },
    detach$0() {
      this._layerHandle.set$layer(null);
      this.super$_RenderProxyBox_RenderBox_RenderObjectWithChildMixin$detach();
    },
    get$alwaysNeedsCompositing() {
      return true;
    },
    getCurrentTransform$0() {
      var t1 = type$.nullable_FollowerLayer._as(A.RenderObject.prototype.get$layer.call(this));
      t1 = t1 == null ? null : t1.getLastTransform$0();
      if (t1 == null) {
        t1 = new A.Matrix4(new Float64Array(16));
        t1.setIdentity$0();
      }
      return t1;
    },
    hitTest$2$position(result, position) {
      return this.hitTestChildren$2$position(result, position);
    },
    hitTestChildren$2$position(result, position) {
      return result.addWithPaintTransform$3$hitTest$position$transform(new A.RenderFollowerLayer_hitTestChildren_closure(this), position, this.getCurrentTransform$0());
    },
    paint$2(context, offset) {
      var t1, t2, t3, _this = this,
        leaderSize = _this._link.leaderSize,
        effectiveLinkedOffset = _this._proxy_box$_offset;
      if (!(leaderSize == null)) {
        t1 = _this._leaderAnchor.alongSize$1(leaderSize);
        t2 = _this._followerAnchor;
        t3 = _this._size;
        t3.toString;
        effectiveLinkedOffset = t1.$sub(0, t2.alongSize$1(t3)).$add(0, effectiveLinkedOffset);
      }
      t1 = type$.nullable_FollowerLayer;
      if (t1._as(A.RenderObject.prototype.get$layer.call(_this)) == null)
        _this._layerHandle.set$layer(new A.FollowerLayer(_this._link, true, offset, effectiveLinkedOffset, A.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$.void_Function), A.LayerHandle$()));
      else {
        t2 = t1._as(A.RenderObject.prototype.get$layer.call(_this));
        if (t2 != null) {
          t2.link = _this._link;
          t2.showWhenUnlinked = true;
          t2.linkedOffset = effectiveLinkedOffset;
          t2.unlinkedOffset = offset;
        }
      }
      t1 = t1._as(A.RenderObject.prototype.get$layer.call(_this));
      t1.toString;
      context.pushLayer$4$childPaintBounds(t1, A.RenderProxyBoxMixin.prototype.get$paint.call(_this), B.Offset_0_0, B.Rect_895);
    },
    applyPaintTransform$2(child, transform) {
      transform.multiply$1(this.getCurrentTransform$0());
    }
  };
  A.RenderFollowerLayer_hitTestChildren_closure.prototype = {
    call$2(result, position) {
      return this.$this.super$RenderProxyBoxMixin$hitTestChildren(result, position);
    },
    $signature: 13
  };
  A.RenderAnnotatedRegion.prototype = {
    set$value(newValue) {
      if (this._proxy_box$_value.$eq(0, newValue))
        return;
      this._proxy_box$_value = newValue;
      this.markNeedsPaint$0();
    },
    set$sized(value) {
      return;
    },
    paint$2(context, offset) {
      var _this = this,
        t1 = _this._proxy_box$_value,
        t2 = _this._size;
      t2.toString;
      context.pushLayer$3(new A.AnnotatedRegionLayer(t1, t2, offset, A.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$.void_Function), A.LayerHandle$(), _this.$ti._eval$1("AnnotatedRegionLayer<1>")), A.RenderProxyBoxMixin.prototype.get$paint.call(_this), offset);
    },
    get$alwaysNeedsCompositing() {
      return true;
    }
  };
  A._RenderAnimatedOpacity_RenderProxyBox_RenderAnimatedOpacityMixin.prototype = {
    attach$1(owner) {
      var _this = this;
      _this.super$_RenderProxyBox_RenderBox_RenderObjectWithChildMixin$attach(owner);
      _this.RenderAnimatedOpacityMixin__opacity.addListener$1(_this.get$_updateOpacity());
      _this._updateOpacity$0();
    },
    detach$0() {
      this.RenderAnimatedOpacityMixin__opacity.removeListener$1(this.get$_updateOpacity());
      this.super$_RenderProxyBox_RenderBox_RenderObjectWithChildMixin$detach();
    },
    paint$2(context, offset) {
      if (this.RenderAnimatedOpacityMixin__alpha === 0)
        return;
      this.super$RenderProxyBoxMixin$paint(context, offset);
    }
  };
  A._RenderProxyBox_RenderBox_RenderObjectWithChildMixin.prototype = {
    attach$1(owner) {
      var t1;
      this.super$RenderObject$attach(owner);
      t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        t1.attach$1(owner);
    },
    detach$0() {
      this.super$AbstractNode$detach();
      var t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        t1.detach$0();
    }
  };
  A._RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin.prototype = {
    computeDistanceToActualBaseline$1(baseline) {
      var t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        return t1.getDistanceToActualBaseline$1(baseline);
      return this.super$RenderBox$computeDistanceToActualBaseline(baseline);
    }
  };
  A.SelectionResult.prototype = {
    _enumToString$0() {
      return "SelectionResult." + this._name;
    }
  };
  A.Selectable.prototype = {$isListenable: 1};
  A.SelectionRegistrant.prototype = {
    set$registrar(value) {
      var _this = this,
        t1 = _this.SelectionRegistrant__registrar;
      if (value == t1)
        return;
      if (value == null)
        _this.removeListener$1(_this.get$_updateSelectionRegistrarSubscription());
      else if (t1 == null)
        _this.addListener$1(_this.get$_updateSelectionRegistrarSubscription());
      _this._removeSelectionRegistrarSubscription$0();
      _this.SelectionRegistrant__registrar = value;
      _this._updateSelectionRegistrarSubscription$0();
    },
    _updateSelectionRegistrarSubscription$0() {
      var t2, _this = this,
        t1 = _this.SelectionRegistrant__registrar;
      if (t1 == null) {
        _this.SelectionRegistrant__subscribedToSelectionRegistrar = false;
        return;
      }
      t2 = _this.SelectionRegistrant__subscribedToSelectionRegistrar;
      if (t2 && !_this.get$value().hasContent) {
        t1.remove$1(0, _this);
        _this.SelectionRegistrant__subscribedToSelectionRegistrar = false;
      } else if (!t2 && _this.get$value().hasContent) {
        t1._additions.add$1(0, _this);
        t1._scheduleSelectableUpdate$0();
        _this.SelectionRegistrant__subscribedToSelectionRegistrar = true;
      }
    },
    _removeSelectionRegistrarSubscription$0() {
      var _this = this;
      if (_this.SelectionRegistrant__subscribedToSelectionRegistrar) {
        _this.SelectionRegistrant__registrar.remove$1(0, _this);
        _this.SelectionRegistrant__subscribedToSelectionRegistrar = false;
      }
    }
  };
  A.SelectionEventType.prototype = {
    _enumToString$0() {
      return "SelectionEventType." + this._name;
    }
  };
  A.TextGranularity.prototype = {
    _enumToString$0() {
      return "TextGranularity." + this._name;
    }
  };
  A.SelectionEvent.prototype = {};
  A.ClearSelectionEvent.prototype = {};
  A.SelectionEdgeUpdateEvent.prototype = {};
  A.SelectionExtendDirection.prototype = {
    _enumToString$0() {
      return "SelectionExtendDirection." + this._name;
    }
  };
  A.SelectionStatus.prototype = {
    _enumToString$0() {
      return "SelectionStatus." + this._name;
    }
  };
  A.SelectionGeometry.prototype = {
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      return other instanceof A.SelectionGeometry && J.$eq$(other.startSelectionPoint, _this.startSelectionPoint) && J.$eq$(other.endSelectionPoint, _this.endSelectionPoint) && other.status === _this.status && other.hasContent === _this.hasContent;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(_this.startSelectionPoint, _this.endSelectionPoint, _this.status, _this.hasContent, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    }
  };
  A.SelectionPoint.prototype = {
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      return other instanceof A.SelectionPoint && other.localPosition.$eq(0, _this.localPosition) && other.lineHeight === _this.lineHeight && other.handleType === _this.handleType;
    },
    get$hashCode(_) {
      return A.Object_hash(this.localPosition, this.lineHeight, this.handleType, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    }
  };
  A.TextSelectionHandleType.prototype = {
    _enumToString$0() {
      return "TextSelectionHandleType." + this._name;
    }
  };
  A.RenderShiftedBox.prototype = {
    computeDistanceToActualBaseline$1(baseline) {
      var result, t1,
        child = this.RenderObjectWithChildMixin__child;
      if (child != null) {
        result = child.getDistanceToActualBaseline$1(baseline);
        t1 = child.parentData;
        t1.toString;
        type$.BoxParentData._as(t1);
        if (result != null)
          result += t1.offset._dy;
      } else
        result = this.super$RenderBox$computeDistanceToActualBaseline(baseline);
      return result;
    },
    paint$2(context, offset) {
      var t1,
        child = this.RenderObjectWithChildMixin__child;
      if (child != null) {
        t1 = child.parentData;
        t1.toString;
        context.paintChild$2(child, type$.BoxParentData._as(t1).offset.$add(0, offset));
      }
    },
    hitTestChildren$2$position(result, position) {
      var t1,
        child = this.RenderObjectWithChildMixin__child;
      if (child != null) {
        t1 = child.parentData;
        t1.toString;
        return result.addWithPaintOffset$3$hitTest$offset$position(new A.RenderShiftedBox_hitTestChildren_closure(child), type$.BoxParentData._as(t1).offset, position);
      }
      return false;
    }
  };
  A.RenderShiftedBox_hitTestChildren_closure.prototype = {
    call$2(result, transformed) {
      return this.child.hitTest$2$position(result, transformed);
    },
    $signature: 13
  };
  A.RenderPadding.prototype = {
    _shifted_box$_resolve$0() {
      var _this = this;
      if (_this._resolvedPadding != null)
        return;
      _this._resolvedPadding = _this._padding.resolve$1(_this._shifted_box$_textDirection);
    },
    set$padding(value) {
      var _this = this;
      if (_this._padding.$eq(0, value))
        return;
      _this._padding = value;
      _this._resolvedPadding = null;
      _this.markNeedsLayout$0();
    },
    set$textDirection(value) {
      var _this = this;
      if (_this._shifted_box$_textDirection == value)
        return;
      _this._shifted_box$_textDirection = value;
      _this._resolvedPadding = null;
      _this.markNeedsLayout$0();
    },
    computeDryLayout$1(constraints) {
      var t1, t2, childSize, _this = this;
      _this._shifted_box$_resolve$0();
      t1 = _this.RenderObjectWithChildMixin__child;
      if (t1 == null) {
        t1 = _this._resolvedPadding;
        return constraints.constrain$1(new A.Size(t1.left + t1.right, t1.top + t1.bottom));
      }
      t2 = _this._resolvedPadding;
      t2.toString;
      childSize = t1.getDryLayout$1(constraints.deflate$1(t2));
      t2 = _this._resolvedPadding;
      return constraints.constrain$1(new A.Size(t2.left + childSize._dx + t2.right, t2.top + childSize._dy + t2.bottom));
    },
    performLayout$0() {
      var t1, t2, t3, t4, t5, _this = this,
        constraints = A.RenderObject.prototype.get$constraints.call(_this);
      _this._shifted_box$_resolve$0();
      t1 = _this.RenderObjectWithChildMixin__child;
      if (t1 == null) {
        t1 = _this._resolvedPadding;
        _this._size = constraints.constrain$1(new A.Size(t1.left + t1.right, t1.top + t1.bottom));
        return;
      }
      t2 = _this._resolvedPadding;
      t2.toString;
      t1.layout$2$parentUsesSize(constraints.deflate$1(t2), true);
      t2 = _this.RenderObjectWithChildMixin__child;
      t1 = t2.parentData;
      t1.toString;
      type$.BoxParentData._as(t1);
      t3 = _this._resolvedPadding;
      t4 = t3.left;
      t5 = t3.top;
      t1.offset = new A.Offset(t4, t5);
      t2 = t2._size;
      _this._size = constraints.constrain$1(new A.Size(t4 + t2._dx + t3.right, t5 + t2._dy + t3.bottom));
    }
  };
  A.RenderAligningShiftedBox.prototype = {
    _shifted_box$_resolve$0() {
      var _this = this;
      if (_this._shifted_box$_resolvedAlignment != null)
        return;
      _this._shifted_box$_resolvedAlignment = _this._shifted_box$_alignment.resolve$1(_this._shifted_box$_textDirection);
    },
    set$alignment(value) {
      var _this = this;
      if (_this._shifted_box$_alignment.$eq(0, value))
        return;
      _this._shifted_box$_alignment = value;
      _this._shifted_box$_resolvedAlignment = null;
      _this.markNeedsLayout$0();
    },
    set$textDirection(value) {
      var _this = this;
      if (_this._shifted_box$_textDirection == value)
        return;
      _this._shifted_box$_textDirection = value;
      _this._shifted_box$_resolvedAlignment = null;
      _this.markNeedsLayout$0();
    },
    alignChild$0() {
      var t1, t2, t3, t4, _this = this;
      _this._shifted_box$_resolve$0();
      t1 = _this.RenderObjectWithChildMixin__child;
      t2 = t1.parentData;
      t2.toString;
      type$.BoxParentData._as(t2);
      t3 = _this._shifted_box$_resolvedAlignment;
      t3.toString;
      t4 = _this._size;
      t4.toString;
      t1 = t1._size;
      t1.toString;
      t2.offset = t3.alongOffset$1(type$.Offset._as(t4.$sub(0, t1)));
    }
  };
  A.RenderPositionedBox.prototype = {
    set$widthFactor(value) {
      if (this._widthFactor == value)
        return;
      this._widthFactor = value;
      this.markNeedsLayout$0();
    },
    set$heightFactor(value) {
      if (this._heightFactor == value)
        return;
      this._heightFactor = value;
      this.markNeedsLayout$0();
    },
    computeDryLayout$1(constraints) {
      var childSize, t2, _this = this,
        shrinkWrapWidth = _this._widthFactor != null || constraints.maxWidth === 1 / 0,
        shrinkWrapHeight = _this._heightFactor != null || constraints.maxHeight === 1 / 0,
        t1 = _this.RenderObjectWithChildMixin__child;
      if (t1 != null) {
        childSize = t1.getDryLayout$1(new A.BoxConstraints(0, constraints.maxWidth, 0, constraints.maxHeight));
        if (shrinkWrapWidth) {
          t1 = _this._widthFactor;
          if (t1 == null)
            t1 = 1;
          t1 = childSize._dx * t1;
        } else
          t1 = 1 / 0;
        if (shrinkWrapHeight) {
          t2 = _this._heightFactor;
          if (t2 == null)
            t2 = 1;
          t2 = childSize._dy * t2;
        } else
          t2 = 1 / 0;
        return constraints.constrain$1(new A.Size(t1, t2));
      }
      t1 = shrinkWrapWidth ? 0 : 1 / 0;
      return constraints.constrain$1(new A.Size(t1, shrinkWrapHeight ? 0 : 1 / 0));
    },
    performLayout$0() {
      var t2, t3, _this = this,
        constraints = A.RenderObject.prototype.get$constraints.call(_this),
        shrinkWrapWidth = _this._widthFactor != null || constraints.maxWidth === 1 / 0,
        shrinkWrapHeight = _this._heightFactor != null || constraints.maxHeight === 1 / 0,
        t1 = _this.RenderObjectWithChildMixin__child;
      if (t1 != null) {
        t1.layout$2$parentUsesSize(new A.BoxConstraints(0, constraints.maxWidth, 0, constraints.maxHeight), true);
        if (shrinkWrapWidth) {
          t1 = _this.RenderObjectWithChildMixin__child._size._dx;
          t2 = _this._widthFactor;
          t1 *= t2 == null ? 1 : t2;
        } else
          t1 = 1 / 0;
        if (shrinkWrapHeight) {
          t2 = _this.RenderObjectWithChildMixin__child._size._dy;
          t3 = _this._heightFactor;
          t2 *= t3 == null ? 1 : t3;
        } else
          t2 = 1 / 0;
        _this._size = constraints.constrain$1(new A.Size(t1, t2));
        _this.alignChild$0();
      } else {
        t1 = shrinkWrapWidth ? 0 : 1 / 0;
        _this._size = constraints.constrain$1(new A.Size(t1, shrinkWrapHeight ? 0 : 1 / 0));
      }
    }
  };
  A.SingleChildLayoutDelegate.prototype = {
    getSize$1(constraints) {
      return new A.Size(A.clampDouble(1 / 0, constraints.minWidth, constraints.maxWidth), A.clampDouble(1 / 0, constraints.minHeight, constraints.maxHeight));
    }
  };
  A.RenderCustomSingleChildLayoutBox.prototype = {
    set$delegate(newDelegate) {
      var t1 = this._shifted_box$_delegate;
      if (t1 === newDelegate)
        return;
      if (A.getRuntimeTypeOfDartObject(newDelegate) !== A.getRuntimeTypeOfDartObject(t1) || newDelegate.shouldRelayout$1(t1))
        this.markNeedsLayout$0();
      this._shifted_box$_delegate = newDelegate;
    },
    attach$1(owner) {
      this.super$_RenderShiftedBox_RenderBox_RenderObjectWithChildMixin$attach(owner);
    },
    detach$0() {
      this.super$_RenderShiftedBox_RenderBox_RenderObjectWithChildMixin$detach();
    },
    computeDryLayout$1(constraints) {
      return constraints.constrain$1(this._shifted_box$_delegate.getSize$1(constraints));
    },
    performLayout$0() {
      var childConstraints, t2, t3, t4, t5, t6, t7, _this = this,
        t1 = A.RenderObject.prototype.get$constraints.call(_this);
      _this._size = t1.constrain$1(_this._shifted_box$_delegate.getSize$1(t1));
      if (_this.RenderObjectWithChildMixin__child != null) {
        childConstraints = _this._shifted_box$_delegate.getConstraintsForChild$1(A.RenderObject.prototype.get$constraints.call(_this));
        t1 = _this.RenderObjectWithChildMixin__child;
        t1.toString;
        t2 = childConstraints.minWidth;
        t3 = childConstraints.maxWidth;
        t4 = t2 >= t3;
        t1.layout$2$parentUsesSize(childConstraints, !(t4 && childConstraints.minHeight >= childConstraints.maxHeight));
        t1 = _this.RenderObjectWithChildMixin__child;
        t5 = t1.parentData;
        t5.toString;
        type$.BoxParentData._as(t5);
        t6 = _this._shifted_box$_delegate;
        t7 = _this._size;
        t7.toString;
        if (t4 && childConstraints.minHeight >= childConstraints.maxHeight)
          t1 = new A.Size(A.clampDouble(0, t2, t3), A.clampDouble(0, childConstraints.minHeight, childConstraints.maxHeight));
        else {
          t1 = t1._size;
          t1.toString;
        }
        t5.offset = t6.getPositionForChild$2(t7, t1);
      }
    }
  };
  A.RenderBaseline.prototype = {
    set$baseline(value) {
      if (this._baseline === value)
        return;
      this._baseline = value;
      this.markNeedsLayout$0();
    },
    set$baselineType(value) {
      if (this._baselineType === value)
        return;
      this._baselineType = value;
      this.markNeedsLayout$0();
    },
    computeDryLayout$1(constraints) {
      if (this.RenderObjectWithChildMixin__child != null)
        return B.Size_0_0;
      return new A.Size(A.clampDouble(0, constraints.minWidth, constraints.maxWidth), A.clampDouble(0, constraints.minHeight, constraints.maxHeight));
    },
    performLayout$0() {
      var constraints, t1, $top, t2, childSize, _this = this;
      if (_this.RenderObjectWithChildMixin__child != null) {
        constraints = A.RenderObject.prototype.get$constraints.call(_this);
        _this.RenderObjectWithChildMixin__child.layout$2$parentUsesSize(new A.BoxConstraints(0, constraints.maxWidth, 0, constraints.maxHeight), true);
        t1 = _this.RenderObjectWithChildMixin__child.getDistanceToBaseline$1(_this._baselineType);
        t1.toString;
        $top = _this._baseline - t1;
        t1 = _this.RenderObjectWithChildMixin__child;
        t2 = t1.parentData;
        t2.toString;
        type$.BoxParentData._as(t2).offset = new A.Offset(0, $top);
        childSize = t1._size;
        _this._size = constraints.constrain$1(new A.Size(childSize._dx, $top + childSize._dy));
      } else {
        t1 = A.RenderObject.prototype.get$constraints.call(_this);
        _this._size = new A.Size(A.clampDouble(0, t1.minWidth, t1.maxWidth), A.clampDouble(0, t1.minHeight, t1.maxHeight));
      }
    }
  };
  A._RenderShiftedBox_RenderBox_RenderObjectWithChildMixin.prototype = {
    attach$1(owner) {
      var t1;
      this.super$RenderObject$attach(owner);
      t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        t1.attach$1(owner);
    },
    detach$0() {
      this.super$AbstractNode$detach();
      var t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        t1.detach$0();
    }
  };
  A.GrowthDirection.prototype = {
    _enumToString$0() {
      return "GrowthDirection." + this._name;
    }
  };
  A.RelativeRect.prototype = {
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      return other instanceof A.RelativeRect && other.left === _this.left && other.top === _this.top && other.right === _this.right && other.bottom === _this.bottom;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(_this.left, _this.top, _this.right, _this.bottom, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this;
      return "RelativeRect.fromLTRB(" + B.JSNumber_methods.toStringAsFixed$1(_this.left, 1) + ", " + B.JSNumber_methods.toStringAsFixed$1(_this.top, 1) + ", " + B.JSNumber_methods.toStringAsFixed$1(_this.right, 1) + ", " + B.JSNumber_methods.toStringAsFixed$1(_this.bottom, 1) + ")";
    }
  };
  A.StackParentData.prototype = {
    get$isPositioned() {
      var _this = this,
        t1 = true;
      if (_this.top == null)
        if (_this.right == null)
          if (_this.bottom == null)
            if (_this.left == null) {
              t1 = _this.width;
              t1 = t1 != null;
            }
      return t1;
    },
    toString$0(_) {
      var _this = this,
        t1 = A._setArrayType([], type$.JSArray_String),
        t2 = _this.top;
      if (t2 != null)
        t1.push("top=" + A.debugFormatDouble(t2));
      t2 = _this.right;
      if (t2 != null)
        t1.push("right=" + A.debugFormatDouble(t2));
      t2 = _this.bottom;
      if (t2 != null)
        t1.push("bottom=" + A.debugFormatDouble(t2));
      t2 = _this.left;
      if (t2 != null)
        t1.push("left=" + A.debugFormatDouble(t2));
      t2 = _this.width;
      if (t2 != null)
        t1.push("width=" + A.debugFormatDouble(t2));
      if (t1.length === 0)
        t1.push("not positioned");
      t1.push(_this.super$BoxParentData$toString(0));
      return B.JSArray_methods.join$1(t1, "; ");
    }
  };
  A.StackFit.prototype = {
    _enumToString$0() {
      return "StackFit." + this._name;
    }
  };
  A.RenderStack.prototype = {
    setupParentData$1(child) {
      if (!(child.parentData instanceof A.StackParentData))
        child.parentData = new A.StackParentData(null, null, B.Offset_0_0);
    },
    _stack$_resolve$0() {
      var _this = this;
      if (_this._resolvedAlignment != null)
        return;
      _this._resolvedAlignment = _this._stack$_alignment.resolve$1(_this._stack$_textDirection);
    },
    set$alignment(value) {
      var _this = this;
      if (_this._stack$_alignment.$eq(0, value))
        return;
      _this._stack$_alignment = value;
      _this._resolvedAlignment = null;
      _this.markNeedsLayout$0();
    },
    set$textDirection(value) {
      var _this = this;
      if (_this._stack$_textDirection == value)
        return;
      _this._stack$_textDirection = value;
      _this._resolvedAlignment = null;
      _this.markNeedsLayout$0();
    },
    computeDistanceToActualBaseline$1(baseline) {
      return this.defaultComputeDistanceToHighestActualBaseline$1(baseline);
    },
    computeDryLayout$1(constraints) {
      return this._stack$_computeSize$2$constraints$layoutChild(constraints, A.layout_helper_ChildLayoutHelper_dryLayoutChild$closure());
    },
    _stack$_computeSize$2$constraints$layoutChild(constraints, layoutChild) {
      var t1, t2, t3, t4, t5, t6, width, height, nonPositionedConstraints, child, height0, width0, hasNonPositionedChildren, childSize, _this = this;
      _this._stack$_resolve$0();
      if (_this.ContainerRenderObjectMixin__childCount === 0) {
        t1 = constraints.minWidth;
        t2 = constraints.maxWidth;
        t3 = A.clampDouble(1 / 0, t1, t2);
        t4 = constraints.minHeight;
        t5 = constraints.maxHeight;
        t6 = A.clampDouble(1 / 0, t4, t5);
        return isFinite(t3) && isFinite(t6) ? new A.Size(A.clampDouble(1 / 0, t1, t2), A.clampDouble(1 / 0, t4, t5)) : new A.Size(A.clampDouble(0, t1, t2), A.clampDouble(0, t4, t5));
      }
      width = constraints.minWidth;
      height = constraints.minHeight;
      switch (_this._fit.index) {
        case 0:
          nonPositionedConstraints = new A.BoxConstraints(0, constraints.maxWidth, 0, constraints.maxHeight);
          break;
        case 1:
          nonPositionedConstraints = A.BoxConstraints$tight(new A.Size(A.clampDouble(1 / 0, width, constraints.maxWidth), A.clampDouble(1 / 0, height, constraints.maxHeight)));
          break;
        case 2:
          nonPositionedConstraints = constraints;
          break;
        default:
          nonPositionedConstraints = null;
      }
      child = _this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.StackParentData, height0 = height, width0 = width, hasNonPositionedChildren = false; child != null;) {
        t2 = child.parentData;
        t2.toString;
        t1._as(t2);
        if (!t2.get$isPositioned()) {
          childSize = layoutChild.call$2(child, nonPositionedConstraints);
          width0 = Math.max(width0, childSize._dx);
          height0 = Math.max(height0, childSize._dy);
          hasNonPositionedChildren = true;
        }
        child = t2.ContainerParentDataMixin_nextSibling;
      }
      return hasNonPositionedChildren ? new A.Size(width0, height0) : new A.Size(A.clampDouble(1 / 0, width, constraints.maxWidth), A.clampDouble(1 / 0, height, constraints.maxHeight));
    },
    performLayout$0() {
      var child, t1, t2, t3, t4, t5, t6, _this = this,
        constraints = A.RenderObject.prototype.get$constraints.call(_this);
      _this._hasVisualOverflow = false;
      _this._size = _this._stack$_computeSize$2$constraints$layoutChild(constraints, A.layout_helper_ChildLayoutHelper_layoutChild$closure());
      child = _this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.StackParentData, t2 = type$.Offset; child != null;) {
        t3 = child.parentData;
        t3.toString;
        t1._as(t3);
        if (!t3.get$isPositioned()) {
          t4 = _this._resolvedAlignment;
          t4.toString;
          t5 = _this._size;
          t5.toString;
          t6 = child._size;
          t6.toString;
          t3.offset = t4.alongOffset$1(t2._as(t5.$sub(0, t6)));
        } else {
          t4 = _this._size;
          t4.toString;
          t5 = _this._resolvedAlignment;
          t5.toString;
          _this._hasVisualOverflow = A.RenderStack_layoutPositionedChild(child, t3, t4, t5) || _this._hasVisualOverflow;
        }
        child = t3.ContainerParentDataMixin_nextSibling;
      }
    },
    hitTestChildren$2$position(result, position) {
      return this.defaultHitTestChildren$2$position(result, position);
    },
    paintStack$2(context, offset) {
      this.defaultPaint$2(context, offset);
    },
    paint$2(context, offset) {
      var t4, _this = this,
        t1 = _this._stack$_clipBehavior,
        t2 = t1 !== B.Clip_0 && _this._hasVisualOverflow,
        t3 = _this._stack$_clipRectLayer;
      if (t2) {
        t2 = _this.__RenderObject__needsCompositing_A;
        t2 === $ && A.throwUnnamedLateFieldNI();
        t4 = _this._size;
        t3.set$layer(context.pushClipRect$6$clipBehavior$oldLayer(t2, offset, new A.Rect(0, 0, 0 + t4._dx, 0 + t4._dy), _this.get$paintStack(), t1, t3._layer));
      } else {
        t3.set$layer(null);
        _this.defaultPaint$2(context, offset);
      }
    },
    dispose$0() {
      this._stack$_clipRectLayer.set$layer(null);
      this.super$RenderObject$dispose();
    },
    describeApproximatePaintClip$1(child) {
      var t1;
      switch (this._stack$_clipBehavior.index) {
        case 0:
          return null;
        case 1:
        case 2:
        case 3:
          if (this._hasVisualOverflow) {
            t1 = this._size;
            t1 = new A.Rect(0, 0, 0 + t1._dx, 0 + t1._dy);
          } else
            t1 = null;
          return t1;
      }
    }
  };
  A._RenderStack_RenderBox_ContainerRenderObjectMixin.prototype = {
    attach$1(owner) {
      var child, t1, t2;
      this.super$RenderObject$attach(owner);
      child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.StackParentData; child != null;) {
        child.attach$1(owner);
        t2 = child.parentData;
        t2.toString;
        child = t1._as(t2).ContainerParentDataMixin_nextSibling;
      }
    },
    detach$0() {
      var child, t1, t2;
      this.super$AbstractNode$detach();
      child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.StackParentData; child != null;) {
        child.detach$0();
        t2 = child.parentData;
        t2.toString;
        child = t1._as(t2).ContainerParentDataMixin_nextSibling;
      }
    }
  };
  A._RenderStack_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin.prototype = {};
  A.ViewConfiguration.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(this))
        return false;
      return other instanceof A.ViewConfiguration && other.size.$eq(0, this.size) && other.devicePixelRatio === this.devicePixelRatio;
    },
    get$hashCode(_) {
      return A.Object_hash(this.size, this.devicePixelRatio, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return this.size.toString$0(0) + " at " + A.debugFormatDouble(this.devicePixelRatio) + "x";
    }
  };
  A.RenderView.prototype = {
    set$configuration(value) {
      var oldConfiguration, t1, t2, _this = this;
      if (_this._view$_configuration.$eq(0, value))
        return;
      oldConfiguration = _this._view$_configuration;
      _this._view$_configuration = value;
      t1 = oldConfiguration.devicePixelRatio;
      t1 = A.Matrix4_Matrix4$diagonal3Values(t1, t1, 1);
      t2 = _this._view$_configuration.devicePixelRatio;
      if (!t1.$eq(0, A.Matrix4_Matrix4$diagonal3Values(t2, t2, 1))) {
        t1 = _this._updateMatricesAndCreateNewRootLayer$0();
        t2 = _this._layerHandle;
        t2._layer.detach$0();
        t2.set$layer(t1);
        _this.markNeedsPaint$0();
      }
      _this.markNeedsLayout$0();
    },
    _updateMatricesAndCreateNewRootLayer$0() {
      var rootLayer,
        t1 = this._view$_configuration.devicePixelRatio;
      t1 = A.Matrix4_Matrix4$diagonal3Values(t1, t1, 1);
      this._rootTransform = t1;
      rootLayer = A.TransformLayer$(t1);
      rootLayer.attach$1(this);
      return rootLayer;
    },
    performResize$0() {
    },
    performLayout$0() {
      var t2,
        t1 = this._view$_configuration.size;
      this._view$_size = t1;
      t2 = this.RenderObjectWithChildMixin__child;
      if (t2 != null)
        t2.layout$1(A.BoxConstraints$tight(t1));
    },
    hitTest$2$position(result, position) {
      var t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        t1.hitTest$2$position(new A.BoxHitTestResult(result._path, result._transforms, result._localTransforms), position);
      result.add$1(0, new A.HitTestEntry(this, type$.HitTestEntry_HitTestTarget));
      return true;
    },
    hitTestMouseTrackers$1(position) {
      var result,
        t1 = A._setArrayType([], type$.JSArray_HitTestEntry_HitTestTarget),
        t2 = new A.Matrix4(new Float64Array(16));
      t2.setIdentity$0();
      result = new A.BoxHitTestResult(t1, A._setArrayType([t2], type$.JSArray_Matrix4), A._setArrayType([], type$.JSArray__TransformPart));
      this.hitTest$2$position(result, position);
      return result;
    },
    get$isRepaintBoundary() {
      return true;
    },
    paint$2(context, offset) {
      var t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        context.paintChild$2(t1, offset);
    },
    applyPaintTransform$2(child, transform) {
      var t1 = this._rootTransform;
      t1.toString;
      transform.multiply$1(t1);
      this.super$RenderObject$applyPaintTransform(child, transform);
    },
    compositeFrame$0() {
      var builder, scene;
      try {
        builder = new A.SceneBuilder(A.LinkedHashMap_LinkedHashMap$_empty(type$.EngineLayer, type$.String), A._setArrayType([], type$.JSArray__EngineLayerWrapper));
        scene = this._layerHandle._layer.buildScene$1(builder);
        this._updateSystemChrome$0();
      } finally {
      }
    },
    _updateSystemChrome$0() {
      var t5, t6, upperOverlayStyle, lowerOverlayStyle, isAndroid, definedOverlayStyle, t7, _null = null,
        bounds = this.get$paintBounds(),
        t1 = bounds.get$center(),
        t2 = this._window,
        t3 = t2.get$_viewConfiguration(),
        t4 = bounds.get$center();
      t2 = t2.get$_viewConfiguration();
      t5 = this._layerHandle;
      t6 = type$.SystemUiOverlayStyle;
      upperOverlayStyle = t5._layer.find$1$1(new A.Offset(t1._dx, t3.padding.top / 2), t6);
      lowerOverlayStyle = _null;
      switch (A.defaultTargetPlatform().index) {
        case 0:
          lowerOverlayStyle = t5._layer.find$1$1(new A.Offset(t4._dx, bounds.bottom - 1 - t2.padding.bottom / 2), t6);
          break;
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
          break;
      }
      t1 = upperOverlayStyle == null;
      if (t1 && lowerOverlayStyle == null)
        return;
      if (!t1 && lowerOverlayStyle != null) {
        t1 = upperOverlayStyle.statusBarBrightness;
        t2 = upperOverlayStyle.statusBarIconBrightness;
        t3 = upperOverlayStyle.statusBarColor;
        t4 = upperOverlayStyle.systemStatusBarContrastEnforced;
        A.SystemChrome_setSystemUIOverlayStyle(new A.SystemUiOverlayStyle(lowerOverlayStyle.systemNavigationBarColor, lowerOverlayStyle.systemNavigationBarDividerColor, lowerOverlayStyle.systemNavigationBarIconBrightness, lowerOverlayStyle.systemNavigationBarContrastEnforced, t3, t1, t2, t4));
        return;
      }
      isAndroid = A.defaultTargetPlatform() === B.TargetPlatform_0;
      definedOverlayStyle = t1 ? lowerOverlayStyle : upperOverlayStyle;
      t1 = definedOverlayStyle.statusBarBrightness;
      t2 = definedOverlayStyle.statusBarIconBrightness;
      t3 = definedOverlayStyle.statusBarColor;
      t4 = definedOverlayStyle.systemStatusBarContrastEnforced;
      t5 = isAndroid ? definedOverlayStyle.systemNavigationBarColor : _null;
      t6 = isAndroid ? definedOverlayStyle.systemNavigationBarDividerColor : _null;
      t7 = isAndroid ? definedOverlayStyle.systemNavigationBarIconBrightness : _null;
      A.SystemChrome_setSystemUIOverlayStyle(new A.SystemUiOverlayStyle(t5, t6, t7, isAndroid ? definedOverlayStyle.systemNavigationBarContrastEnforced : _null, t3, t1, t2, t4));
    },
    get$paintBounds() {
      var t1 = this._view$_size.$mul(0, this._view$_configuration.devicePixelRatio);
      return new A.Rect(0, 0, 0 + t1._dx, 0 + t1._dy);
    },
    get$semanticBounds() {
      var t2,
        t1 = this._rootTransform;
      t1.toString;
      t2 = this._view$_size;
      return A.MatrixUtils_transformRect(t1, new A.Rect(0, 0, 0 + t2._dx, 0 + t2._dy));
    }
  };
  A._RenderView_RenderObject_RenderObjectWithChildMixin.prototype = {
    attach$1(owner) {
      var t1;
      this.super$RenderObject$attach(owner);
      t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        t1.attach$1(owner);
    },
    detach$0() {
      this.super$AbstractNode$detach();
      var t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        t1.detach$0();
    }
  };
  A.RevealedOffset.prototype = {
    toString$0(_) {
      return "RevealedOffset(offset: " + A.S(this.offset) + ", rect: " + this.rect.toString$0(0) + ")";
    }
  };
  A.ScrollDirection.prototype = {
    _enumToString$0() {
      return "ScrollDirection." + this._name;
    }
  };
  A.ViewportOffset.prototype = {
    moveTo$3$curve$duration(to, curve, duration) {
      var t1 = duration._duration === 0;
      if (t1) {
        this.jumpTo$1(to);
        return A.Future_Future$value(null, type$.void);
      } else
        return this.animateTo$3$curve$duration(to, curve, duration);
    },
    toString$0(_) {
      var _this = this,
        description = A._setArrayType([], type$.JSArray_String);
      _this.super$ScrollPosition$debugFillDescription(description);
      description.push(A.getRuntimeTypeOfDartObject(_this.context).toString$0(0));
      description.push(_this.physics.toString$0(0));
      description.push(A.S(_this._activity));
      description.push(_this._userScrollDirection.toString$0(0));
      return "<optimized out>#" + A.shortHash(_this) + "(" + B.JSArray_methods.join$1(description, ", ") + ")";
    },
    debugFillDescription$1(description) {
      var t1 = this._scroll_position$_pixels;
      if (t1 != null)
        description.push("offset: " + B.JSNumber_methods.toStringAsFixed$1(t1, 1));
    }
  };
  A._FrameCallbackEntry.prototype = {};
  A.SchedulerPhase.prototype = {
    _enumToString$0() {
      return "SchedulerPhase." + this._name;
    }
  };
  A.PerformanceModeRequestHandle.prototype = {};
  A.SchedulerBinding.prototype = {
    removeTimingsCallback$1(callback) {
      var t1 = this.SchedulerBinding__timingsCallbacks;
      B.JSArray_methods.remove$1(t1, callback);
      if (t1.length === 0)
        $.$get$PlatformDispatcher__instance().set$onReportTimings(null);
    },
    _executeTimingsCallbacks$1(timings) {
      var callback, exception, stack, collector, t2, _i, exception0, t3, t4,
        t1 = this.SchedulerBinding__timingsCallbacks,
        clonedCallbacks = A.List_List$_of(t1, type$.void_Function_List_FrameTiming);
      for (t2 = clonedCallbacks.length, _i = 0; _i < clonedCallbacks.length; clonedCallbacks.length === t2 || (0, A.throwConcurrentModificationError)(clonedCallbacks), ++_i) {
        callback = clonedCallbacks[_i];
        try {
          if (B.JSArray_methods.contains$1(t1, callback))
            callback.call$1(timings);
        } catch (exception0) {
          exception = A.unwrapException(exception0);
          stack = A.getTraceFromException(exception0);
          collector = null;
          t3 = A.ErrorDescription$("while executing callbacks for FrameTiming");
          t4 = $.FlutterError_onError;
          if (t4 != null)
            t4.call$1(new A.FlutterErrorDetails(exception, stack, "Flutter framework", t3, collector, false));
        }
      }
    },
    handleAppLifecycleStateChanged$1(state) {
      this.SchedulerBinding__lifecycleState = state;
      switch (state.index) {
        case 0:
        case 1:
          this._setFramesEnabledState$1(true);
          break;
        case 2:
        case 3:
          this._setFramesEnabledState$1(false);
          break;
      }
    },
    _ensureEventLoopCallback$0() {
      if (this.SchedulerBinding__hasRequestedAnEventLoopCallback)
        return;
      this.SchedulerBinding__hasRequestedAnEventLoopCallback = true;
      A.Timer_Timer(B.Duration_0, this.get$_runTasks());
    },
    _runTasks$0() {
      this.SchedulerBinding__hasRequestedAnEventLoopCallback = false;
      if (this.handleEventLoopCallback$0())
        this._ensureEventLoopCallback$0();
    },
    handleEventLoopCallback$0() {
      var entry, exception, exceptionStack, callbackStack, newLength, last, exception0, t3, _this = this,
        _s10_ = "No element",
        t1 = _this.SchedulerBinding__taskQueue,
        t2 = t1._priority_queue$_length === 0;
      if (t2 || _this._lockCount > 0)
        return false;
      if (t2)
        A.throwExpression(A.StateError$(_s10_));
      entry = t1._elementAt$1(0);
      t2 = entry.get$priority();
      if (_this.SchedulerBinding_schedulingStrategy.call$2$priority$scheduler(t2, _this)) {
        try {
          if (t1._priority_queue$_length === 0)
            A.throwExpression(A.StateError$(_s10_));
          ++t1._priority_queue$_modificationCount;
          t1._elementAt$1(0);
          newLength = t1._priority_queue$_length - 1;
          last = t1._elementAt$1(newLength);
          t1._priority_queue$_queue[newLength] = null;
          t1._priority_queue$_length = newLength;
          if (newLength > 0)
            t1._bubbleDown$2(last, 0);
          entry.run$0();
        } catch (exception0) {
          exception = A.unwrapException(exception0);
          exceptionStack = A.getTraceFromException(exception0);
          callbackStack = null;
          t2 = A.ErrorDescription$("during a task callback");
          t3 = callbackStack == null ? null : new A.SchedulerBinding_handleEventLoopCallback_closure(callbackStack);
          A.FlutterError_reportError(new A.FlutterErrorDetails(exception, exceptionStack, "scheduler library", t2, t3, false));
        }
        return t1._priority_queue$_length !== 0;
      }
      return false;
    },
    scheduleFrameCallback$2$rescheduling(callback, rescheduling) {
      var t1, _this = this;
      _this.scheduleFrame$0();
      t1 = ++_this.SchedulerBinding__nextFrameCallbackId;
      _this.SchedulerBinding__transientCallbacks.$indexSet(0, t1, new A._FrameCallbackEntry(callback));
      return _this.SchedulerBinding__nextFrameCallbackId;
    },
    scheduleFrameCallback$1(callback) {
      return this.scheduleFrameCallback$2$rescheduling(callback, false);
    },
    get$endOfFrame() {
      var _this = this;
      if (_this.SchedulerBinding__nextFrameCompleter == null) {
        if (_this.SchedulerBinding__schedulerPhase === B.SchedulerPhase_0)
          _this.scheduleFrame$0();
        _this.SchedulerBinding__nextFrameCompleter = new A._AsyncCompleter(new A._Future($.Zone__current, type$._Future_void), type$._AsyncCompleter_void);
        _this.SchedulerBinding__postFrameCallbacks.push(new A.SchedulerBinding_endOfFrame_closure(_this));
      }
      return _this.SchedulerBinding__nextFrameCompleter.future;
    },
    get$framesEnabled() {
      return this.SchedulerBinding__framesEnabled;
    },
    _setFramesEnabledState$1(enabled) {
      if (this.SchedulerBinding__framesEnabled === enabled)
        return;
      this.SchedulerBinding__framesEnabled = enabled;
      if (enabled)
        this.scheduleFrame$0();
    },
    ensureFrameCallbacksRegistered$0() {
      var t1 = $.$get$PlatformDispatcher__instance();
      if (t1._onBeginFrame == null) {
        t1._onBeginFrame = this.get$_handleBeginFrame();
        t1._onBeginFrameZone = $.Zone__current;
      }
      if (t1._onDrawFrame == null) {
        t1._onDrawFrame = this.get$_handleDrawFrame();
        t1._onDrawFrameZone = $.Zone__current;
      }
    },
    ensureVisualUpdate$0() {
      switch (this.SchedulerBinding__schedulerPhase.index) {
        case 0:
        case 4:
          this.scheduleFrame$0();
          return;
        case 1:
        case 2:
        case 3:
          return;
      }
    },
    scheduleFrame$0() {
      var t1, _this = this;
      if (!_this.SchedulerBinding__hasScheduledFrame)
        t1 = !(A.SchedulerBinding.prototype.get$framesEnabled.call(_this) && _this.WidgetsBinding__readyToProduceFrames);
      else
        t1 = true;
      if (t1)
        return;
      _this.ensureFrameCallbacksRegistered$0();
      $.$get$PlatformDispatcher__instance().scheduleFrame$0();
      _this.SchedulerBinding__hasScheduledFrame = true;
    },
    scheduleForcedFrame$0() {
      if (this.SchedulerBinding__hasScheduledFrame)
        return;
      this.ensureFrameCallbacksRegistered$0();
      $.$get$PlatformDispatcher__instance().scheduleFrame$0();
      this.SchedulerBinding__hasScheduledFrame = true;
    },
    scheduleWarmUpFrame$0() {
      var hadScheduledFrame, _this = this;
      if (_this.SchedulerBinding__warmUpFrame || _this.SchedulerBinding__schedulerPhase !== B.SchedulerPhase_0)
        return;
      _this.SchedulerBinding__warmUpFrame = true;
      hadScheduledFrame = _this.SchedulerBinding__hasScheduledFrame;
      A.Timer_Timer(B.Duration_0, new A.SchedulerBinding_scheduleWarmUpFrame_closure(_this));
      A.Timer_Timer(B.Duration_0, new A.SchedulerBinding_scheduleWarmUpFrame_closure0(_this, hadScheduledFrame));
      _this.lockEvents$1(new A.SchedulerBinding_scheduleWarmUpFrame_closure1(_this));
    },
    _adjustForEpoch$1(rawTimeStamp) {
      var t1 = this.SchedulerBinding__firstRawTimeStampInEpoch;
      return A.Duration$(0, B.JSNumber_methods.round$0((t1 == null ? B.Duration_0 : new A.Duration(rawTimeStamp._duration - t1._duration))._duration / 1) + this.SchedulerBinding__epochStart._duration, 0, 0, 0);
    },
    _handleBeginFrame$1(rawTimeStamp) {
      if (this.SchedulerBinding__warmUpFrame) {
        this.SchedulerBinding__rescheduleAfterWarmUpFrame = true;
        return;
      }
      this.handleBeginFrame$1(rawTimeStamp);
    },
    _handleDrawFrame$0() {
      var _this = this;
      if (_this.SchedulerBinding__rescheduleAfterWarmUpFrame) {
        _this.SchedulerBinding__rescheduleAfterWarmUpFrame = false;
        _this.SchedulerBinding__postFrameCallbacks.push(new A.SchedulerBinding__handleDrawFrame_closure(_this));
        return;
      }
      _this.handleDrawFrame$0();
    },
    handleBeginFrame$1(rawTimeStamp) {
      var callbacks, t1, _this = this;
      if (_this.SchedulerBinding__firstRawTimeStampInEpoch == null)
        _this.SchedulerBinding__firstRawTimeStampInEpoch = rawTimeStamp;
      t1 = rawTimeStamp == null;
      _this.SchedulerBinding__currentFrameTimeStamp = _this._adjustForEpoch$1(t1 ? _this.SchedulerBinding__lastRawTimeStamp : rawTimeStamp);
      if (!t1)
        _this.SchedulerBinding__lastRawTimeStamp = rawTimeStamp;
      _this.SchedulerBinding__hasScheduledFrame = false;
      try {
        _this.SchedulerBinding__schedulerPhase = B.SchedulerPhase_1;
        callbacks = _this.SchedulerBinding__transientCallbacks;
        _this.SchedulerBinding__transientCallbacks = A.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$._FrameCallbackEntry);
        J.forEach$1$ax(callbacks, new A.SchedulerBinding_handleBeginFrame_closure(_this));
        _this.SchedulerBinding__removedIds.clear$0(0);
      } finally {
        _this.SchedulerBinding__schedulerPhase = B.SchedulerPhase_2;
      }
    },
    requestPerformanceMode$1(mode) {
      var _this = this,
        t1 = _this.SchedulerBinding__performanceMode,
        t2 = t1 == null;
      if (!t2 && t1 !== mode)
        return null;
      if (t1 === mode)
        ++_this.SchedulerBinding__numPerformanceModeRequests;
      else if (t2) {
        _this.SchedulerBinding__performanceMode = mode;
        _this.SchedulerBinding__numPerformanceModeRequests = 1;
      }
      return new A.PerformanceModeRequestHandle(_this.get$_disposePerformanceModeRequest());
    },
    _disposePerformanceModeRequest$0() {
      if (--this.SchedulerBinding__numPerformanceModeRequests === 0) {
        this.SchedulerBinding__performanceMode = null;
        $.$get$PlatformDispatcher__instance();
      }
    },
    handleDrawFrame$0() {
      var callback, localPostFrameCallbacks, callback0, t1, t2, _i, t3, localPostFrameCallbacks0, _this = this;
      try {
        _this.SchedulerBinding__schedulerPhase = B.SchedulerPhase_3;
        for (t1 = _this.SchedulerBinding__persistentCallbacks, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
          callback = t1[_i];
          t3 = _this.SchedulerBinding__currentFrameTimeStamp;
          t3.toString;
          _this._invokeFrameCallback$2(callback, t3);
        }
        _this.SchedulerBinding__schedulerPhase = B.SchedulerPhase_4;
        t1 = _this.SchedulerBinding__postFrameCallbacks;
        localPostFrameCallbacks0 = A.List_List$_of(t1, type$.void_Function_Duration);
        localPostFrameCallbacks = localPostFrameCallbacks0;
        B.JSArray_methods.clear$0(t1);
        for (t1 = localPostFrameCallbacks, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
          callback0 = t1[_i];
          t3 = _this.SchedulerBinding__currentFrameTimeStamp;
          t3.toString;
          _this._invokeFrameCallback$2(callback0, t3);
        }
      } finally {
        _this.SchedulerBinding__schedulerPhase = B.SchedulerPhase_0;
        _this.SchedulerBinding__currentFrameTimeStamp = null;
      }
    },
    _invokeFrameCallback$3(callback, timeStamp, callbackStack) {
      var exception, exceptionStack, exception0, t1;
      try {
        callback.call$1(timeStamp);
      } catch (exception0) {
        exception = A.unwrapException(exception0);
        exceptionStack = A.getTraceFromException(exception0);
        t1 = A.ErrorDescription$("during a scheduler callback");
        A.FlutterError_reportError(new A.FlutterErrorDetails(exception, exceptionStack, "scheduler library", t1, null, false));
      }
    },
    _invokeFrameCallback$2(callback, timeStamp) {
      return this._invokeFrameCallback$3(callback, timeStamp, null);
    }
  };
  A.SchedulerBinding_handleEventLoopCallback_closure.prototype = {
    call$0() {
      return A._setArrayType([A.DiagnosticsStackTrace$("\nThis exception was thrown in the context of a scheduler callback. When the scheduler callback was _registered_ (as opposed to when the exception was thrown), this was the stack", this.callbackStack, null)], type$.JSArray_DiagnosticsNode);
    },
    $signature: 5
  };
  A.SchedulerBinding_endOfFrame_closure.prototype = {
    call$1(timeStamp) {
      var t1 = this.$this;
      t1.SchedulerBinding__nextFrameCompleter.complete$0();
      t1.SchedulerBinding__nextFrameCompleter = null;
    },
    $signature: 1
  };
  A.SchedulerBinding_scheduleWarmUpFrame_closure.prototype = {
    call$0() {
      this.$this.handleBeginFrame$1(null);
    },
    $signature: 0
  };
  A.SchedulerBinding_scheduleWarmUpFrame_closure0.prototype = {
    call$0() {
      var t1 = this.$this;
      t1.handleDrawFrame$0();
      t1.SchedulerBinding__epochStart = t1._adjustForEpoch$1(t1.SchedulerBinding__lastRawTimeStamp);
      t1.SchedulerBinding__firstRawTimeStampInEpoch = null;
      t1.SchedulerBinding__warmUpFrame = false;
      if (this.hadScheduledFrame)
        t1.scheduleFrame$0();
    },
    $signature: 0
  };
  A.SchedulerBinding_scheduleWarmUpFrame_closure1.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$self = this;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 2;
              return A._asyncAwait($async$self.$this.get$endOfFrame(), $async$call$0);
            case 2:
              // returning from await.
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 43
  };
  A.SchedulerBinding__handleDrawFrame_closure.prototype = {
    call$1(timeStamp) {
      var t1 = this.$this;
      t1.SchedulerBinding__hasScheduledFrame = false;
      t1.scheduleFrame$0();
    },
    $signature: 1
  };
  A.SchedulerBinding_handleBeginFrame_closure.prototype = {
    call$2(id, callbackEntry) {
      var t2,
        t1 = this.$this;
      if (!t1.SchedulerBinding__removedIds.contains$1(0, id)) {
        t2 = t1.SchedulerBinding__currentFrameTimeStamp;
        t2.toString;
        t1._invokeFrameCallback$3(callbackEntry.callback, t2, null);
      }
    },
    $signature: 154
  };
  A.Ticker.prototype = {
    set$muted(value) {
      var _this = this;
      if (value === _this._muted)
        return;
      _this._muted = value;
      if (value)
        _this.unscheduleTick$0();
      else if (_this._ticker$_future != null && _this._animationId == null)
        _this._animationId = $.SchedulerBinding__instance.scheduleFrameCallback$2$rescheduling(_this.get$_ticker$_tick(), false);
    },
    get$isTicking() {
      if (this._ticker$_future == null)
        return false;
      if (this._muted)
        return false;
      var t1 = $.SchedulerBinding__instance;
      t1.toString;
      if (A.SchedulerBinding.prototype.get$framesEnabled.call(t1) && t1.WidgetsBinding__readyToProduceFrames)
        return true;
      if ($.SchedulerBinding__instance.SchedulerBinding__schedulerPhase !== B.SchedulerPhase_0)
        return true;
      return false;
    },
    start$0() {
      var t1, t2, _this = this;
      _this._ticker$_future = new A.TickerFuture(new A._AsyncCompleter(new A._Future($.Zone__current, type$._Future_void), type$._AsyncCompleter_void));
      if (!_this._muted)
        t1 = _this._animationId == null;
      else
        t1 = false;
      if (t1)
        _this._animationId = $.SchedulerBinding__instance.scheduleFrameCallback$2$rescheduling(_this.get$_ticker$_tick(), false);
      t1 = $.SchedulerBinding__instance;
      t2 = t1.SchedulerBinding__schedulerPhase.index;
      if (t2 > 0 && t2 < 4) {
        t1 = t1.SchedulerBinding__currentFrameTimeStamp;
        t1.toString;
        _this._startTime = t1;
      }
      t1 = _this._ticker$_future;
      t1.toString;
      return t1;
    },
    stop$1$canceled(canceled) {
      var _this = this,
        t1 = _this._ticker$_future;
      if (t1 == null)
        return;
      _this._startTime = _this._ticker$_future = null;
      _this.unscheduleTick$0();
      if (canceled)
        t1._cancel$1(_this);
      else
        t1._complete$0();
    },
    stop$0() {
      return this.stop$1$canceled(false);
    },
    _ticker$_tick$1(timeStamp) {
      var t1, _this = this;
      _this._animationId = null;
      t1 = _this._startTime;
      if (t1 == null)
        t1 = _this._startTime = timeStamp;
      _this._onTick.call$1(new A.Duration(timeStamp._duration - t1._duration));
      if (!_this._muted && _this._ticker$_future != null && _this._animationId == null)
        _this._animationId = $.SchedulerBinding__instance.scheduleFrameCallback$2$rescheduling(_this.get$_ticker$_tick(), true);
    },
    unscheduleTick$0() {
      var t2,
        t1 = this._animationId;
      if (t1 != null) {
        t2 = $.SchedulerBinding__instance;
        t2.SchedulerBinding__transientCallbacks.remove$1(0, t1);
        t2.SchedulerBinding__removedIds.add$1(0, t1);
        this._animationId = null;
      }
    },
    dispose$0() {
      var _this = this,
        t1 = _this._ticker$_future;
      if (t1 != null) {
        _this._ticker$_future = null;
        _this.unscheduleTick$0();
        t1._cancel$1(_this);
      }
    },
    toString$0(_) {
      return "Ticker()".charCodeAt(0) == 0 ? "Ticker()" : "Ticker()";
    }
  };
  A.TickerFuture.prototype = {
    _complete$0() {
      this._completed = true;
      this._primaryCompleter.complete$0();
      var t1 = this._secondaryCompleter;
      if (t1 != null)
        t1.complete$0();
    },
    _cancel$1(ticker) {
      var t1;
      this._completed = false;
      t1 = this._secondaryCompleter;
      if (t1 != null)
        t1.completeError$1(new A.TickerCanceled(ticker));
    },
    whenCompleteOrCancel$1(callback) {
      var t2, t3, _this = this,
        t1 = new A.TickerFuture_whenCompleteOrCancel_thunk(callback);
      if (_this._secondaryCompleter == null) {
        t2 = _this._secondaryCompleter = new A._AsyncCompleter(new A._Future($.Zone__current, type$._Future_void), type$._AsyncCompleter_void);
        t3 = _this._completed;
        if (t3 != null)
          if (t3)
            t2.complete$0();
          else
            t2.completeError$1(B.TickerCanceled_null);
      }
      _this._secondaryCompleter.future.then$1$2$onError(t1, t1, type$.void);
    },
    then$1$2$onError(onValue, onError, $R) {
      return this._primaryCompleter.future.then$1$2$onError(onValue, onError, $R);
    },
    then$1$1(onValue, $R) {
      return this.then$1$2$onError(onValue, null, $R);
    },
    whenComplete$1(action) {
      return this._primaryCompleter.future.whenComplete$1(action);
    },
    toString$0(_) {
      var t1 = A.shortHash(this),
        t2 = this._completed;
      if (t2 == null)
        t2 = "active";
      else
        t2 = t2 ? "complete" : "canceled";
      return "<optimized out>#" + t1 + "(" + t2 + ")";
    },
    $isFuture: 1
  };
  A.TickerFuture_whenCompleteOrCancel_thunk.prototype = {
    call$1(value) {
      this.callback.call$0();
    },
    $signature: 29
  };
  A.TickerCanceled.prototype = {
    toString$0(_) {
      var t1 = this.ticker;
      if (t1 != null)
        return "This ticker was canceled: " + t1.toString$0(0);
      return 'The ticker was canceled before the "orCancel" property was first used.';
    },
    $isException: 1
  };
  A.SemanticsBinding.prototype = {
    get$_semanticsEnabled() {
      var result,
        value = this.SemanticsBinding___SemanticsBinding__semanticsEnabled_FI;
      if (value === $) {
        $.$get$PlatformDispatcher__instance();
        result = A.ValueNotifier$(false);
        this.SemanticsBinding___SemanticsBinding__semanticsEnabled_FI !== $ && A.throwUnnamedLateFieldADI();
        this.SemanticsBinding___SemanticsBinding__semanticsEnabled_FI = result;
        value = result;
      }
      return value;
    },
    _binding0$_handleSemanticsEnabledChanged$0() {
      $.$get$PlatformDispatcher__instance();
      var t1 = this.SemanticsBinding__semanticsHandle;
      if (t1 != null)
        t1._onDispose.call$0();
      this.SemanticsBinding__semanticsHandle = null;
    }
  };
  A.SemanticsTag.prototype = {
    toString$0(_) {
      return "SemanticsTag(" + this.name + ")";
    }
  };
  A.AttributedString.prototype = {
    $add(_, other) {
      var t3, newAttributes, t4, t5, _i, attribute, t6,
        t1 = this.string,
        t2 = t1.length;
      if (t2 === 0)
        return other;
      t3 = other.string;
      if (t3.length === 0)
        return this;
      newAttributes = A.List_List$_of(this.attributes, type$.StringAttribute);
      t4 = other.attributes;
      t5 = t4.length;
      if (t5 !== 0)
        for (_i = 0; _i < t4.length; t4.length === t5 || (0, A.throwConcurrentModificationError)(t4), ++_i) {
          attribute = t4[_i];
          t6 = attribute.range;
          newAttributes.push(attribute.copy$1$range(new A.TextRange(t6.start + t2, t6.end + t2)));
        }
      return new A.AttributedString(t1 + t3, newAttributes);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(this) && other instanceof A.AttributedString && other.string === this.string && A.listEquals(other.attributes, this.attributes);
    },
    get$hashCode(_) {
      return A.Object_hash(this.string, this.attributes, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "AttributedString('" + this.string + "', attributes: " + A.S(this.attributes) + ")";
    }
  };
  A._SemanticsDiagnosticableNode.prototype = {};
  A.SemanticsProperties.prototype = {
    toStringShort$0() {
      return "SemanticsProperties";
    }
  };
  A.SemanticsNode.prototype = {
    set$transform(value) {
      if (!A.MatrixUtils_matrixEquals(this._semantics$_transform, value)) {
        this._semantics$_transform = value == null || A.MatrixUtils_isIdentity(value) ? null : value;
        this._semantics$_markDirty$0();
      }
    },
    set$rect(value) {
      if (!this._semantics$_rect.$eq(0, value)) {
        this._semantics$_rect = value;
        this._semantics$_markDirty$0();
      }
    },
    set$isMergedIntoParent(value) {
      if (this._isMergedIntoParent === value)
        return;
      this._isMergedIntoParent = value;
      this._semantics$_markDirty$0();
    },
    _replaceChildren$1(newChildren) {
      var t2, _i, sawChange, t3, child, t4, i, _this = this,
        t1 = _this._semantics$_children;
      if (t1 != null)
        for (t2 = t1.length, _i = 0; _i < t2; ++_i)
          t1[_i]._dead = true;
      for (t1 = newChildren.length, _i = 0; _i < t1; ++_i)
        newChildren[_i]._dead = false;
      t1 = _this._semantics$_children;
      sawChange = false;
      if (t1 != null)
        for (t2 = t1.length, t3 = type$.nullable_SemanticsNode, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
          child = t1[_i];
          if (child._dead) {
            if (t3._as(A.AbstractNode.prototype.get$parent.call(child)) === _this) {
              child._node$_parent = null;
              if (_this._node$_owner != null)
                child.detach$0();
            }
            sawChange = true;
          }
        }
      for (t1 = newChildren.length, t2 = type$.nullable_SemanticsNode, _i = 0; _i < newChildren.length; newChildren.length === t1 || (0, A.throwConcurrentModificationError)(newChildren), ++_i) {
        child = newChildren[_i];
        if (t2._as(A.AbstractNode.prototype.get$parent.call(child)) !== _this) {
          if (t2._as(A.AbstractNode.prototype.get$parent.call(child)) != null) {
            t3 = t2._as(A.AbstractNode.prototype.get$parent.call(child));
            if (t3 != null) {
              child._node$_parent = null;
              if (t3._node$_owner != null)
                child.detach$0();
            }
          }
          child._node$_parent = _this;
          t3 = _this._node$_owner;
          if (t3 != null)
            child.attach$1(t3);
          t3 = child._depth;
          t4 = _this._depth;
          if (t3 <= t4) {
            child._depth = t4 + 1;
            child.redepthChildren$0();
          }
          sawChange = true;
        }
      }
      if (!sawChange && _this._semantics$_children != null)
        for (t1 = _this._semantics$_children, t2 = t1.length, i = 0; i < t2; ++i)
          if (t1[i]._id !== newChildren[i]._id) {
            sawChange = true;
            break;
          }
      _this._semantics$_children = newChildren;
      if (sawChange)
        _this._semantics$_markDirty$0();
    },
    visitChildren$1(visitor) {
      var t2, _i,
        t1 = this._semantics$_children;
      if (t1 != null)
        for (t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i)
          if (!visitor.call$1(t1[_i]))
            return;
    },
    redepthChildren$0() {
      var t1 = this._semantics$_children;
      if (t1 != null)
        B.JSArray_methods.forEach$1(t1, this.get$redepthChild());
    },
    attach$1(owner) {
      var t1, t2, _i, _this = this;
      _this.super$AbstractNode$attach(owner);
      for (t1 = owner._nodes; t1.containsKey$1(_this._id);)
        _this._id = $.SemanticsNode__lastIdentifier = ($.SemanticsNode__lastIdentifier + 1) % 65535;
      t1.$indexSet(0, _this._id, _this);
      owner._detachedNodes.remove$1(0, _this);
      if (_this._semantics$_dirty) {
        _this._semantics$_dirty = false;
        _this._semantics$_markDirty$0();
      }
      t1 = _this._semantics$_children;
      if (t1 != null)
        for (t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i)
          t1[_i].attach$1(owner);
    },
    detach$0() {
      var t2, t3, _i, child, _this = this,
        t1 = type$.nullable_SemanticsOwner;
      t1._as(A.AbstractNode.prototype.get$owner.call(_this))._nodes.remove$1(0, _this._id);
      t1._as(A.AbstractNode.prototype.get$owner.call(_this))._detachedNodes.add$1(0, _this);
      _this.super$AbstractNode$detach();
      t1 = _this._semantics$_children;
      if (t1 != null)
        for (t2 = t1.length, t3 = type$.nullable_SemanticsNode, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
          child = t1[_i];
          if (t3._as(A.AbstractNode.prototype.get$parent.call(child)) === _this)
            child.detach$0();
        }
      _this._semantics$_markDirty$0();
    },
    _semantics$_markDirty$0() {
      var _this = this;
      if (_this._semantics$_dirty)
        return;
      _this._semantics$_dirty = true;
      if (_this._node$_owner != null)
        type$.nullable_SemanticsOwner._as(A.AbstractNode.prototype.get$owner.call(_this))._semantics$_dirtyNodes.add$1(0, _this);
    },
    updateWith$2$childrenInInversePaintOrder$config(childrenInInversePaintOrder, config) {
      var t1, _this = this;
      if (config == null)
        config = $.$get$SemanticsNode__kEmptyConfig();
      t1 = true;
      if (_this._semantics$_attributedLabel.$eq(0, config._semantics$_attributedLabel))
        if (_this._semantics$_attributedHint.$eq(0, config._semantics$_attributedHint))
          if (_this._semantics$_elevation === config._semantics$_elevation)
            if (_this._semantics$_thickness === config._semantics$_thickness)
              if (_this._semantics$_attributedValue.$eq(0, config._semantics$_attributedValue))
                if (_this._semantics$_attributedIncreasedValue.$eq(0, config._semantics$_attributedIncreasedValue))
                  if (_this._semantics$_attributedDecreasedValue.$eq(0, config._semantics$_attributedDecreasedValue))
                    if (_this._tooltip === config._tooltip)
                      if (_this._flags === config._flags)
                        if (_this._semantics$_textDirection == config._semantics$_textDirection)
                          if (_this._sortKey == config._sortKey)
                            if (_this._scrollPosition == config._scrollPosition)
                              if (_this._scrollExtentMax == config._scrollExtentMax)
                                if (_this._scrollExtentMin == config._scrollExtentMin)
                                  if (_this._actionsAsBits === config._actionsAsBits)
                                    if (_this.indexInParent == config._indexInParent)
                                      t1 = _this._mergeAllDescendantsIntoThisNode !== config._isMergingSemanticsOfDescendants;
      if (t1)
        _this._semantics$_markDirty$0();
      _this._semantics$_attributedLabel = config._semantics$_attributedLabel;
      _this._semantics$_attributedValue = config._semantics$_attributedValue;
      _this._semantics$_attributedIncreasedValue = config._semantics$_attributedIncreasedValue;
      _this._semantics$_attributedDecreasedValue = config._semantics$_attributedDecreasedValue;
      _this._semantics$_attributedHint = config._semantics$_attributedHint;
      _this._tooltip = config._tooltip;
      _this._hintOverrides = config._hintOverrides;
      _this._semantics$_elevation = config._semantics$_elevation;
      _this._semantics$_thickness = config._semantics$_thickness;
      _this._flags = config._flags;
      _this._semantics$_textDirection = config._semantics$_textDirection;
      _this._sortKey = config._sortKey;
      _this._actions = A.LinkedHashMap_LinkedHashMap$of(config._actions, type$.SemanticsAction, type$.void_Function_nullable_Object);
      _this._customSemanticsActions = A.LinkedHashMap_LinkedHashMap$of(config._customSemanticsActions, type$.CustomSemanticsAction, type$.void_Function);
      _this._actionsAsBits = config._actionsAsBits;
      _this._textSelection = config._textSelection;
      _this._scrollPosition = config._scrollPosition;
      _this._scrollExtentMax = config._scrollExtentMax;
      _this._scrollExtentMin = config._scrollExtentMin;
      _this._mergeAllDescendantsIntoThisNode = config._isMergingSemanticsOfDescendants;
      _this._scrollChildCount = config._scrollChildCount;
      _this._scrollIndex = config._scrollIndex;
      _this.indexInParent = config._indexInParent;
      _this._platformViewId = config._platformViewId;
      _this._maxValueLength = config._maxValueLength;
      _this._currentValueLength = config._currentValueLength;
      _this._replaceChildren$1(childrenInInversePaintOrder == null ? B.List_empty9 : childrenInInversePaintOrder);
    },
    updateWith$1$config(config) {
      return this.updateWith$2$childrenInInversePaintOrder$config(null, config);
    },
    sendEvent$1($event) {
      if (this._node$_owner == null)
        return;
      B.BasicMessageChannel_vKF.send$1($event.toMap$1$nodeId(this._id));
    },
    toStringShort$0() {
      return "SemanticsNode#" + this._id;
    },
    toDiagnosticsNode$1$style(style) {
      return new A._SemanticsDiagnosticableNode();
    }
  };
  A.SemanticsOwner.prototype = {
    dispose$0() {
      var _this = this;
      _this._semantics$_dirtyNodes.clear$0(0);
      _this._nodes.clear$0(0);
      _this._detachedNodes.clear$0(0);
      _this.super$ChangeNotifier$dispose();
    },
    sendSemanticsUpdate$0() {
      var visitedNodes, t2, t3, t4, t5, localDirtyNodes, t6, _i, node, t7,
        t1 = this._semantics$_dirtyNodes;
      if (t1._collection$_length === 0)
        return;
      visitedNodes = A._setArrayType([], type$.JSArray_SemanticsNode);
      for (t2 = type$.nullable_SemanticsNode, t3 = this._detachedNodes, t4 = A._instanceType(t1)._eval$1("WhereIterable<1>"), t5 = t4._eval$1("Iterable.E"); t1._collection$_length !== 0;) {
        localDirtyNodes = A.List_List$_of(new A.WhereIterable(t1, new A.SemanticsOwner_sendSemanticsUpdate_closure(this), t4), t5);
        t1.clear$0(0);
        t3.clear$0(0);
        B.JSArray_methods.sort$1(localDirtyNodes, new A.SemanticsOwner_sendSemanticsUpdate_closure0());
        B.JSArray_methods.addAll$1(visitedNodes, localDirtyNodes);
        for (t6 = localDirtyNodes.length, _i = 0; _i < localDirtyNodes.length; localDirtyNodes.length === t6 || (0, A.throwConcurrentModificationError)(localDirtyNodes), ++_i) {
          node = localDirtyNodes[_i];
          if (node._mergeAllDescendantsIntoThisNode || node._isMergedIntoParent) {
            if (t2._as(A.AbstractNode.prototype.get$parent.call(node)) != null) {
              t7 = t2._as(A.AbstractNode.prototype.get$parent.call(node));
              t7 = t7._mergeAllDescendantsIntoThisNode || t7._isMergedIntoParent;
            } else
              t7 = false;
            if (t7) {
              t2._as(A.AbstractNode.prototype.get$parent.call(node))._semantics$_markDirty$0();
              node._semantics$_dirty = false;
            }
          }
        }
      }
      B.JSArray_methods.sort$1(visitedNodes, new A.SemanticsOwner_sendSemanticsUpdate_closure1());
      $.SemanticsBinding__instance.toString;
      new A.SemanticsUpdateBuilder()._ui$_constructor$0();
    },
    toString$0(_) {
      return "<optimized out>#" + A.shortHash(this);
    }
  };
  A.SemanticsOwner_sendSemanticsUpdate_closure.prototype = {
    call$1(node) {
      return !this.$this._detachedNodes.contains$1(0, node);
    },
    $signature: 75
  };
  A.SemanticsOwner_sendSemanticsUpdate_closure0.prototype = {
    call$2(a, b) {
      return a._depth - b._depth;
    },
    $signature: 84
  };
  A.SemanticsOwner_sendSemanticsUpdate_closure1.prototype = {
    call$2(a, b) {
      return a._depth - b._depth;
    },
    $signature: 84
  };
  A.SemanticsConfiguration.prototype = {
    _addAction$2(action, handler) {
      var _this = this;
      _this._actions.$indexSet(0, action, handler);
      _this._actionsAsBits = _this._actionsAsBits | action.index;
      _this._hasBeenAnnotated = true;
    },
    _addArgumentlessAction$2(action, handler) {
      this._addAction$2(action, new A.SemanticsConfiguration__addArgumentlessAction_closure(handler));
    },
    set$onTap(value) {
      value.toString;
      this._addArgumentlessAction$2(B.SemanticsAction_1, value);
    },
    set$onLongPress(value) {
      value.toString;
      this._addArgumentlessAction$2(B.SemanticsAction_2, value);
    },
    set$onScrollLeft(value) {
      this._addArgumentlessAction$2(B.SemanticsAction_4, value);
    },
    set$onDismiss(value) {
      this._addArgumentlessAction$2(B.SemanticsAction_262144, value);
    },
    set$onScrollRight(value) {
      this._addArgumentlessAction$2(B.SemanticsAction_8, value);
    },
    set$onScrollUp(value) {
      this._addArgumentlessAction$2(B.SemanticsAction_16, value);
    },
    set$onScrollDown(value) {
      this._addArgumentlessAction$2(B.SemanticsAction_32, value);
    },
    set$onIncrease(value) {
      this._addArgumentlessAction$2(B.SemanticsAction_64, value);
    },
    set$onDecrease(value) {
      this._addArgumentlessAction$2(B.SemanticsAction_128, value);
    },
    set$onCopy(value) {
      this._addArgumentlessAction$2(B.SemanticsAction_4096, value);
    },
    set$onCut(value) {
      this._addArgumentlessAction$2(B.SemanticsAction_8192, value);
    },
    set$onPaste(value) {
      this._addArgumentlessAction$2(B.SemanticsAction_16384, value);
    },
    set$onMoveCursorForwardByCharacter(value) {
      this._addAction$2(B.SemanticsAction_512, new A.SemanticsConfiguration_onMoveCursorForwardByCharacter_closure(value));
    },
    set$onMoveCursorBackwardByCharacter(value) {
      this._addAction$2(B.SemanticsAction_1024, new A.SemanticsConfiguration_onMoveCursorBackwardByCharacter_closure(value));
    },
    set$onMoveCursorForwardByWord(value) {
      this._addAction$2(B.SemanticsAction_524288, new A.SemanticsConfiguration_onMoveCursorForwardByWord_closure(value));
    },
    set$onMoveCursorBackwardByWord(value) {
      this._addAction$2(B.SemanticsAction_1048576, new A.SemanticsConfiguration_onMoveCursorBackwardByWord_closure(value));
    },
    set$onSetSelection(value) {
      this._addAction$2(B.SemanticsAction_2048, new A.SemanticsConfiguration_onSetSelection_closure(value));
    },
    set$onSetText(value) {
      this._addAction$2(B.SemanticsAction_2097152, new A.SemanticsConfiguration_onSetText_closure(value));
    },
    set$onDidGainAccessibilityFocus(value) {
      this._addArgumentlessAction$2(B.SemanticsAction_32768, value);
    },
    set$onDidLoseAccessibilityFocus(value) {
      this._addArgumentlessAction$2(B.SemanticsAction_65536, value);
    },
    set$scrollChildCount(value) {
      return;
    },
    set$scrollIndex(value) {
      if (value == this._scrollIndex)
        return;
      this._scrollIndex = value;
      this._hasBeenAnnotated = true;
    },
    set$maxValueLength(value) {
      return;
    },
    set$currentValueLength(value) {
      return;
    },
    set$elevation(value) {
      if (value === this._semantics$_elevation)
        return;
      this._semantics$_elevation = value;
      this._hasBeenAnnotated = true;
    },
    addTagForChildren$1(tag) {
      var t1 = this._tagsForChildren;
      (t1 == null ? this._tagsForChildren = A.LinkedHashSet_LinkedHashSet$_empty(type$.SemanticsTag) : t1).add$1(0, tag);
    },
    _setFlag$2(flag, value) {
      var _this = this,
        t1 = _this._flags,
        t2 = flag.index;
      if (value)
        _this._flags = t1 | t2;
      else
        _this._flags = t1 & ~t2;
      _this._hasBeenAnnotated = true;
    },
    isCompatibleWith$1(other) {
      var _this = this;
      if (other == null || !other._hasBeenAnnotated || !_this._hasBeenAnnotated)
        return true;
      if ((_this._actionsAsBits & other._actionsAsBits) !== 0)
        return false;
      if ((_this._flags & other._flags) !== 0)
        return false;
      if (_this._semantics$_attributedValue.string.length !== 0 && other._semantics$_attributedValue.string.length !== 0)
        return false;
      return true;
    },
    absorb$1(child) {
      var t1, t2, _this = this;
      if (!child._hasBeenAnnotated)
        return;
      _this._actions.addAll$1(0, child._actions);
      _this._customSemanticsActions.addAll$1(0, child._customSemanticsActions);
      _this._actionsAsBits = _this._actionsAsBits | child._actionsAsBits;
      _this._flags = _this._flags | child._flags;
      _this._textSelection = child._textSelection;
      if (_this._scrollPosition == null)
        _this._scrollPosition = child._scrollPosition;
      if (_this._scrollExtentMax == null)
        _this._scrollExtentMax = child._scrollExtentMax;
      if (_this._scrollExtentMin == null)
        _this._scrollExtentMin = child._scrollExtentMin;
      if (_this._hintOverrides == null)
        _this._hintOverrides = child._hintOverrides;
      if (_this._indexInParent == null)
        _this._indexInParent = child._indexInParent;
      if (_this._scrollIndex == null)
        _this._scrollIndex = child._scrollIndex;
      _this._scrollChildCount = child._scrollChildCount;
      _this._platformViewId = child._platformViewId;
      _this._maxValueLength = child._maxValueLength;
      _this._currentValueLength = child._currentValueLength;
      t1 = _this._semantics$_textDirection;
      if (t1 == null) {
        t1 = _this._semantics$_textDirection = child._semantics$_textDirection;
        _this._hasBeenAnnotated = true;
      }
      if (_this._sortKey == null)
        _this._sortKey = child._sortKey;
      t2 = _this._semantics$_attributedLabel;
      _this._semantics$_attributedLabel = A._concatAttributedString(child._semantics$_attributedLabel, child._semantics$_textDirection, t2, t1);
      if (_this._semantics$_attributedValue.string === "")
        _this._semantics$_attributedValue = child._semantics$_attributedValue;
      if (_this._semantics$_attributedIncreasedValue.string === "")
        _this._semantics$_attributedIncreasedValue = child._semantics$_attributedIncreasedValue;
      if (_this._semantics$_attributedDecreasedValue.string === "")
        _this._semantics$_attributedDecreasedValue = child._semantics$_attributedDecreasedValue;
      t1 = _this._semantics$_attributedHint;
      t2 = _this._semantics$_textDirection;
      _this._semantics$_attributedHint = A._concatAttributedString(child._semantics$_attributedHint, child._semantics$_textDirection, t1, t2);
      if (_this._tooltip === "")
        _this._tooltip = child._tooltip;
      _this._semantics$_thickness = Math.max(_this._semantics$_thickness, child._semantics$_thickness + child._semantics$_elevation);
      _this._hasBeenAnnotated = _this._hasBeenAnnotated || child._hasBeenAnnotated;
    },
    copy$0() {
      var _this = this,
        t1 = A.SemanticsConfiguration$();
      t1._isSemanticBoundary = _this._isSemanticBoundary;
      t1.explicitChildNodes = _this.explicitChildNodes;
      t1.isBlockingSemanticsOfPreviouslyPaintedNodes = _this.isBlockingSemanticsOfPreviouslyPaintedNodes;
      t1._hasBeenAnnotated = _this._hasBeenAnnotated;
      t1._isMergingSemanticsOfDescendants = _this._isMergingSemanticsOfDescendants;
      t1._semantics$_textDirection = _this._semantics$_textDirection;
      t1._sortKey = _this._sortKey;
      t1._semantics$_attributedLabel = _this._semantics$_attributedLabel;
      t1._semantics$_attributedIncreasedValue = _this._semantics$_attributedIncreasedValue;
      t1._semantics$_attributedValue = _this._semantics$_attributedValue;
      t1._semantics$_attributedDecreasedValue = _this._semantics$_attributedDecreasedValue;
      t1._semantics$_attributedHint = _this._semantics$_attributedHint;
      t1._hintOverrides = _this._hintOverrides;
      t1._tooltip = _this._tooltip;
      t1._semantics$_elevation = _this._semantics$_elevation;
      t1._semantics$_thickness = _this._semantics$_thickness;
      t1._flags = _this._flags;
      t1._tagsForChildren = _this._tagsForChildren;
      t1._textSelection = _this._textSelection;
      t1._scrollPosition = _this._scrollPosition;
      t1._scrollExtentMax = _this._scrollExtentMax;
      t1._scrollExtentMin = _this._scrollExtentMin;
      t1._actionsAsBits = _this._actionsAsBits;
      t1._indexInParent = _this._indexInParent;
      t1._scrollIndex = _this._scrollIndex;
      t1._scrollChildCount = _this._scrollChildCount;
      t1._platformViewId = _this._platformViewId;
      t1._maxValueLength = _this._maxValueLength;
      t1._currentValueLength = _this._currentValueLength;
      t1._actions.addAll$1(0, _this._actions);
      t1._customSemanticsActions.addAll$1(0, _this._customSemanticsActions);
      return t1;
    }
  };
  A.SemanticsConfiguration__addArgumentlessAction_closure.prototype = {
    call$1(args) {
      this.handler.call$0();
    },
    $signature: 8
  };
  A.SemanticsConfiguration_onMoveCursorForwardByCharacter_closure.prototype = {
    call$1(args) {
      args.toString;
      this.value.call$1(A._asBool(args));
    },
    $signature: 8
  };
  A.SemanticsConfiguration_onMoveCursorBackwardByCharacter_closure.prototype = {
    call$1(args) {
      args.toString;
      this.value.call$1(A._asBool(args));
    },
    $signature: 8
  };
  A.SemanticsConfiguration_onMoveCursorForwardByWord_closure.prototype = {
    call$1(args) {
      args.toString;
      this.value.call$1(A._asBool(args));
    },
    $signature: 8
  };
  A.SemanticsConfiguration_onMoveCursorBackwardByWord_closure.prototype = {
    call$1(args) {
      args.toString;
      this.value.call$1(A._asBool(args));
    },
    $signature: 8
  };
  A.SemanticsConfiguration_onSetSelection_closure.prototype = {
    call$1(args) {
      var selection, t1, t2;
      args.toString;
      selection = type$.Map_dynamic_dynamic._as(args).cast$2$0(0, type$.String, type$.int);
      t1 = selection.$index(0, "base");
      t1.toString;
      t2 = selection.$index(0, "extent");
      t2.toString;
      this.value.call$1(A.TextSelection$(B.TextAffinity_1, t1, t2, false));
    },
    $signature: 8
  };
  A.SemanticsConfiguration_onSetText_closure.prototype = {
    call$1(args) {
      args.toString;
      this.value.call$1(A._asString(args));
    },
    $signature: 8
  };
  A.DebugSemanticsDumpOrder.prototype = {
    _enumToString$0() {
      return "DebugSemanticsDumpOrder." + this._name;
    }
  };
  A.SemanticsSortKey.prototype = {
    compareTo$1(_, other) {
      var t1 = this.doCompare$1(other);
      return t1;
    },
    $isComparable: 1
  };
  A.OrdinalSortKey.prototype = {
    doCompare$1(other) {
      var t1 = other.order,
        t2 = this.order;
      if (t1 === t2)
        return 0;
      return B.JSInt_methods.compareTo$1(t2, t1);
    }
  };
  A._SemanticsNode_AbstractNode_DiagnosticableTreeMixin.prototype = {};
  A._SemanticsSortKey_Object_Diagnosticable.prototype = {};
  A.SemanticsEvent.prototype = {
    toMap$1$nodeId(nodeId) {
      var $event = A.LinkedHashMap_LinkedHashMap$_literal(["type", this.type, "data", this.getDataMap$0()], type$.String, type$.dynamic);
      if (nodeId != null)
        $event.$indexSet(0, "nodeId", nodeId);
      return $event;
    },
    toMap$0() {
      return this.toMap$1$nodeId(null);
    },
    toString$0(_) {
      var _i, key,
        pairs = A._setArrayType([], type$.JSArray_String),
        dataMap = this.getDataMap$0(),
        t1 = dataMap.get$keys(),
        sortedKeys = A.List_List$_of(t1, A._instanceType(t1)._eval$1("Iterable.E"));
      B.JSArray_methods.sort$0(sortedKeys);
      for (t1 = sortedKeys.length, _i = 0; _i < sortedKeys.length; sortedKeys.length === t1 || (0, A.throwConcurrentModificationError)(sortedKeys), ++_i) {
        key = sortedKeys[_i];
        pairs.push(key + ": " + A.S(dataMap.$index(0, key)));
      }
      return "SemanticsEvent(" + B.JSArray_methods.join$1(pairs, ", ") + ")";
    }
  };
  A.TooltipSemanticsEvent.prototype = {
    getDataMap$0() {
      return A.LinkedHashMap_LinkedHashMap$_literal(["message", this.message], type$.String, type$.dynamic);
    }
  };
  A.LongPressSemanticsEvent.prototype = {
    getDataMap$0() {
      return B.Map_empty2;
    }
  };
  A.TapSemanticEvent.prototype = {
    getDataMap$0() {
      return B.Map_empty2;
    }
  };
  A.AssetBundle.prototype = {
    loadString$2$cache(key, cache) {
      return this.loadString$body$AssetBundle(key, true);
    },
    loadString$body$AssetBundle(key, cache) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.String),
        $async$returnValue, $async$self = this, data;
      var $async$loadString$2$cache = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return A._asyncAwait($async$self.load$1(key), $async$loadString$2$cache);
            case 3:
              // returning from await.
              data = $async$result;
              if (data.byteLength < 51200) {
                $async$returnValue = B.C_Utf8Codec.decode$1(J.asUint8List$0$x(B.NativeByteData_methods.get$buffer(data)));
                // goto return
                $async$goto = 1;
                break;
              }
              $async$returnValue = A.compute(A.asset_bundle_AssetBundle__utf8decode$closure(), data, 'UTF8 decode for "' + key + '"', type$.ByteData, type$.String);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$loadString$2$cache, $async$completer);
    },
    toString$0(_) {
      return "<optimized out>#" + A.shortHash(this) + "()";
    }
  };
  A.CachingAssetBundle.prototype = {
    loadString$2$cache(key, cache) {
      return this.super$AssetBundle$loadString(key, true);
    }
  };
  A.PlatformAssetBundle.prototype = {
    load$1(key) {
      var future,
        encoded = B.C_Utf8Encoder.convert$1(A._Uri__Uri(A._Uri__uriEncode(4, key, B.C_Utf8Codec, false)).path),
        t1 = $.ServicesBinding__instance.ServicesBinding___ServicesBinding__defaultBinaryMessenger_F;
      t1 === $ && A.throwUnnamedLateFieldNI();
      future = t1.send$2("flutter/assets", J.asByteData$0$x(B.NativeUint8List_methods.get$buffer(encoded))).then$1$1(new A.PlatformAssetBundle_load_closure(key), type$.ByteData);
      return future;
    }
  };
  A.PlatformAssetBundle_load_closure.prototype = {
    call$1(asset) {
      if (asset == null)
        throw A.wrapException(A.FlutterError$fromParts(A._setArrayType([A._errorSummaryWithKey(this.key), A.ErrorDescription$("The asset does not exist or has empty data.")], type$.JSArray_DiagnosticsNode)));
      return asset;
    },
    $signature: 157
  };
  A.BinaryMessenger.prototype = {};
  A.ServicesBinding.prototype = {
    handleMemoryPressure$0() {
      var t1 = $.$get$rootBundle();
      t1._stringCache.clear$0(0);
      t1._structuredDataCache.clear$0(0);
      t1._structuredBinaryDataCache.clear$0(0);
    },
    handleSystemMessage$1(systemMessage) {
      return this.handleSystemMessage$body$ServicesBinding(systemMessage);
    },
    handleSystemMessage$body$ServicesBinding(systemMessage) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this;
      var $async$handleSystemMessage$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              switch (A._asString(type$.Map_String_dynamic._as(systemMessage).$index(0, "type"))) {
                case "memoryPressure":
                  $async$self.handleMemoryPressure$0();
                  break;
              }
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$handleSystemMessage$1, $async$completer);
    },
    _addLicenses$0() {
      var t1,
        controller = A._Cell$();
      controller.set$finalLocalValue(new A._AsyncStreamController(new A.ServicesBinding__addLicenses_closure(controller), null, null, null, type$._AsyncStreamController_LicenseEntry));
      t1 = controller._readLocal$0();
      return new A._ControllerStream(t1, A._instanceType(t1)._eval$1("_ControllerStream<1>"));
    },
    readInitialLifecycleStateFromNativeWindow$0() {
      var t1, value, state;
      if (this.SchedulerBinding__lifecycleState != null)
        return;
      t1 = $.$get$PlatformDispatcher__instance();
      t1._initialLifecycleStateAccessed = true;
      value = t1.__PlatformDispatcher__initialLifecycleState_AI;
      state = A.ServicesBinding__parseAppLifecycleMessage(value === $ ? t1.__PlatformDispatcher__initialLifecycleState_AI = "AppLifecycleState.resumed" : value);
      if (state != null)
        this.handleAppLifecycleStateChanged$1(state);
    },
    _handleLifecycleMessage$1(message) {
      return this._handleLifecycleMessage$body$ServicesBinding(message);
    },
    _handleLifecycleMessage$body$ServicesBinding(message) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.nullable_String),
        $async$returnValue, $async$self = this, t1;
      var $async$_handleLifecycleMessage$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              message.toString;
              t1 = A.ServicesBinding__parseAppLifecycleMessage(message);
              t1.toString;
              $async$self.handleAppLifecycleStateChanged$1(t1);
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$_handleLifecycleMessage$1, $async$completer);
    },
    _handlePlatformMessage$1(methodCall) {
      return this._handlePlatformMessage$body$ServicesBinding(methodCall);
    },
    _handlePlatformMessage$body$ServicesBinding(methodCall) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void);
      var $async$_handlePlatformMessage$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              type$.List_dynamic._as(methodCall.$arguments);
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$_handlePlatformMessage$1, $async$completer);
    }
  };
  A.ServicesBinding__addLicenses_closure.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, t1, rawLicenses, $async$temp1;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              rawLicenses = A._Cell$();
              $async$temp1 = rawLicenses;
              $async$goto = 2;
              return A._asyncAwait($.$get$rootBundle().loadString$2$cache("NOTICES", false), $async$call$0);
            case 2:
              // returning from await.
              $async$temp1.set$finalLocalValue($async$result);
              t1 = $async$self.controller;
              $async$temp1 = J;
              $async$goto = 3;
              return A._asyncAwait(A.compute(A.binding1_ServicesBinding__parseLicenses$closure(), rawLicenses._readLocal$0(), "parseLicenses", type$.String, type$.List_LicenseEntry), $async$call$0);
            case 3:
              // returning from await.
              $async$temp1.forEach$1$ax($async$result, J.get$add$ax(t1._readLocal$0()));
              $async$goto = 4;
              return A._asyncAwait(t1._readLocal$0().close$0(), $async$call$0);
            case 4:
              // returning from await.
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 43
  };
  A._DefaultBinaryMessenger.prototype = {
    send$2(channel, message) {
      var t1 = new A._Future($.Zone__current, type$._Future_nullable_ByteData);
      $.$get$PlatformDispatcher__instance();
      A.PlatformDispatcher__zonedPlatformMessageResponseCallback(new A._DefaultBinaryMessenger_send_closure(new A._AsyncCompleter(t1, type$._AsyncCompleter_nullable_ByteData)));
      return t1;
    },
    setMessageHandler$2(channel, handler) {
      if (handler == null) {
        channel = $.$get$channelBuffers()._channels.$index(0, channel);
        if (channel != null)
          channel._channelCallbackRecord = null;
      } else
        $.$get$channelBuffers().setListener$2(channel, new A._DefaultBinaryMessenger_setMessageHandler_closure(handler));
    }
  };
  A._DefaultBinaryMessenger_send_closure.prototype = {
    call$1(reply) {
      var exception, stack, exception0, t1;
      try {
        this.completer.complete$1(reply);
      } catch (exception0) {
        exception = A.unwrapException(exception0);
        stack = A.getTraceFromException(exception0);
        t1 = A.ErrorDescription$("during a platform message response callback");
        A.FlutterError_reportError(new A.FlutterErrorDetails(exception, stack, "services library", t1, null, false));
      }
    },
    $signature: 98
  };
  A._DefaultBinaryMessenger_setMessageHandler_closure.prototype = {
    call$2(data, callback) {
      return this.$call$body$_DefaultBinaryMessenger_setMessageHandler_closure(data, callback);
    },
    $call$body$_DefaultBinaryMessenger_setMessageHandler_closure(data, callback) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$handler = 1, $async$errorStack = [], $async$next = [], $async$self = this, exception, stack, t1, exception0, response, $async$exception0;
      var $async$call$2 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$errorStack.push($async$result);
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              response = null;
              $async$handler = 3;
              t1 = $async$self.handler.call$1(data);
              $async$goto = 6;
              return A._asyncAwait(type$.Future_nullable_ByteData._is(t1) ? t1 : A._Future$value(t1, type$.nullable_ByteData), $async$call$2);
            case 6:
              // returning from await.
              response = $async$result;
              $async$next.push(5);
              // goto finally
              $async$goto = 4;
              break;
            case 3:
              // catch
              $async$handler = 2;
              $async$exception0 = $async$errorStack.pop();
              exception = A.unwrapException($async$exception0);
              stack = A.getTraceFromException($async$exception0);
              t1 = A.ErrorDescription$("during a platform message callback");
              A.FlutterError_reportError(new A.FlutterErrorDetails(exception, stack, "services library", t1, null, false));
              $async$next.push(5);
              // goto finally
              $async$goto = 4;
              break;
            case 2:
              // uncaught
              $async$next = [1];
            case 4:
              // finally
              $async$handler = 1;
              callback.call$1(response);
              // goto the next finally handler
              $async$goto = $async$next.pop();
              break;
            case 5:
              // after finally
              // implicit return
              return A._asyncReturn(null, $async$completer);
            case 1:
              // rethrow
              return A._asyncRethrow($async$errorStack.at(-1), $async$completer);
          }
      });
      return A._asyncStartSync($async$call$2, $async$completer);
    },
    $signature: 161
  };
  A.KeyboardLockMode.prototype = {
    _enumToString$0() {
      return "KeyboardLockMode." + this._name;
    }
  };
  A.KeyEvent.prototype = {};
  A.KeyDownEvent.prototype = {};
  A.KeyUpEvent.prototype = {};
  A.KeyRepeatEvent.prototype = {};
  A.HardwareKeyboard.prototype = {
    _dispatchKeyEvent$1($event) {
      var handler, thisResult, exception, stack, collector, t1, _i, exception0, t2, t3,
        handled = false;
      for (t1 = this._handlers, _i = 0; false; ++_i) {
        handler = t1[_i];
        try {
          thisResult = handler.call$1($event);
          handled = handled || thisResult;
        } catch (exception0) {
          exception = A.unwrapException(exception0);
          stack = A.getTraceFromException(exception0);
          collector = null;
          t2 = A.ErrorDescription$("while processing a key handler");
          t3 = $.FlutterError_onError;
          if (t3 != null)
            t3.call$1(new A.FlutterErrorDetails(exception, stack, "services library", t2, collector, false));
        }
      }
      return handled;
    },
    handleKeyEvent$1($event) {
      var lockMode, t1, _this = this,
        physicalKey = $event.physicalKey,
        logicalKey = $event.logicalKey;
      if ($event instanceof A.KeyDownEvent) {
        _this._pressedKeys.$indexSet(0, physicalKey, logicalKey);
        lockMode = $.$get$KeyboardLockMode__knownLockModes().$index(0, logicalKey.keyId);
        if (lockMode != null) {
          t1 = _this._lockModes;
          if (t1.contains$1(0, lockMode))
            t1.remove$1(0, lockMode);
          else
            t1.add$1(0, lockMode);
        }
      } else if ($event instanceof A.KeyUpEvent)
        _this._pressedKeys.remove$1(0, physicalKey);
      return _this._dispatchKeyEvent$1($event);
    }
  };
  A.KeyDataTransitMode.prototype = {
    _enumToString$0() {
      return "KeyDataTransitMode." + this._name;
    }
  };
  A.KeyMessage.prototype = {
    toString$0(_) {
      return "KeyMessage(" + A.S(this.events) + ")";
    }
  };
  A.KeyEventManager.prototype = {
    _dispatchKeyMessage$2(keyEvents, rawEvent) {
      var message, exception, stack, collector, exception0,
        t1 = this.keyMessageHandler;
      if (t1 != null) {
        message = new A.KeyMessage(keyEvents, rawEvent);
        try {
          t1 = t1.call$1(message);
          return t1;
        } catch (exception0) {
          exception = A.unwrapException(exception0);
          stack = A.getTraceFromException(exception0);
          collector = null;
          t1 = A.ErrorDescription$("while processing the key message handler");
          A.FlutterError_reportError(new A.FlutterErrorDetails(exception, stack, "services library", t1, collector, false));
        }
      }
      return false;
    },
    handleRawKeyMessage$1(message) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Map_String_dynamic),
        $async$returnValue, $async$self = this, rawEvent, shouldDispatch, t1, t2, t3, handled, _i;
      var $async$handleRawKeyMessage$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if ($async$self._transitMode == null) {
                $async$self._transitMode = B.KeyDataTransitMode_0;
                $async$self._rawKeyboard._raw_keyboard$_listeners.push($async$self.get$_convertRawEventAndStore());
              }
              rawEvent = A.RawKeyEvent_RawKeyEvent$fromMessage(type$.Map_String_dynamic._as(message));
              shouldDispatch = true;
              if (rawEvent instanceof A.RawKeyDownEvent)
                $async$self._skippedRawKeysPressed.remove$1(0, rawEvent.data.get$physicalKey());
              else if (rawEvent instanceof A.RawKeyUpEvent) {
                t1 = $async$self._skippedRawKeysPressed;
                t2 = rawEvent.data;
                t3 = t1.contains$1(0, t2.get$physicalKey());
                if (t3)
                  t1.remove$1(0, t2.get$physicalKey());
                shouldDispatch = !t3;
              }
              if (shouldDispatch) {
                $async$self._rawKeyboard.handleRawKeyEvent$1(rawEvent);
                for (t1 = $async$self._keyEventsSinceLastMessage, t2 = t1.length, t3 = $async$self._hardwareKeyboard, handled = false, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i)
                  handled = t3.handleKeyEvent$1(t1[_i]) || handled;
                handled = $async$self._dispatchKeyMessage$2(t1, rawEvent) || handled;
                B.JSArray_methods.clear$0(t1);
              } else
                handled = true;
              $async$returnValue = A.LinkedHashMap_LinkedHashMap$_literal(["handled", handled], type$.String, type$.dynamic);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$handleRawKeyMessage$1, $async$completer);
    },
    _convertRawEventAndStore$1(rawEvent) {
      var t2, physicalKeysPressed, eventAfterwards, recordedLogicalMain, timeStamp, character, mainEvent, t3, t4, t5, t6, t7, t8, _null = null,
        t1 = rawEvent.data,
        physicalKey = t1.get$physicalKey(),
        logicalKey = t1.get$logicalKey();
      t1 = this._hardwareKeyboard._pressedKeys;
      t2 = A._instanceType(t1)._eval$1("LinkedHashMapKeysIterable<1>");
      physicalKeysPressed = A.LinkedHashSet_LinkedHashSet$of(new A.LinkedHashMapKeysIterable(t1, t2), t2._eval$1("Iterable.E"));
      eventAfterwards = A._setArrayType([], type$.JSArray_KeyEvent);
      recordedLogicalMain = t1.$index(0, physicalKey);
      timeStamp = $.ServicesBinding__instance.SchedulerBinding__lastRawTimeStamp;
      character = rawEvent.character;
      if (character === "")
        character = _null;
      if (rawEvent instanceof A.RawKeyDownEvent)
        if (recordedLogicalMain == null) {
          mainEvent = new A.KeyDownEvent(physicalKey, logicalKey, character, timeStamp, false);
          physicalKeysPressed.add$1(0, physicalKey);
        } else
          mainEvent = new A.KeyRepeatEvent(physicalKey, recordedLogicalMain, character, timeStamp, false);
      else if (recordedLogicalMain == null)
        mainEvent = _null;
      else {
        mainEvent = new A.KeyUpEvent(physicalKey, recordedLogicalMain, _null, timeStamp, false);
        physicalKeysPressed.remove$1(0, physicalKey);
      }
      for (t2 = this._rawKeyboard._keysPressed, t3 = A._instanceType(t2)._eval$1("LinkedHashMapKeysIterable<1>"), t4 = t3._eval$1("Iterable.E"), t5 = physicalKeysPressed.difference$1(A.LinkedHashSet_LinkedHashSet$of(new A.LinkedHashMapKeysIterable(t2, t3), t4)), t5 = t5.get$iterator(t5), t6 = this._keyEventsSinceLastMessage; t5.moveNext$0();) {
        t7 = t5.get$current();
        if (t7.$eq(0, physicalKey))
          eventAfterwards.push(new A.KeyUpEvent(t7, logicalKey, _null, timeStamp, true));
        else {
          t8 = t1.$index(0, t7);
          t8.toString;
          t6.push(new A.KeyUpEvent(t7, t8, _null, timeStamp, true));
        }
      }
      for (t1 = A.LinkedHashSet_LinkedHashSet$of(new A.LinkedHashMapKeysIterable(t2, t3), t4).difference$1(physicalKeysPressed), t1 = t1.get$iterator(t1); t1.moveNext$0();) {
        t3 = t1.get$current();
        t4 = t2.$index(0, t3);
        t4.toString;
        t6.push(new A.KeyDownEvent(t3, t4, _null, timeStamp, true));
      }
      if (mainEvent != null)
        t6.push(mainEvent);
      B.JSArray_methods.addAll$1(t6, eventAfterwards);
    }
  };
  A._KeyEvent_Object_Diagnosticable.prototype = {};
  A.KeyboardKey.prototype = {};
  A.LogicalKeyboardKey.prototype = {
    get$hashCode(_) {
      return B.JSInt_methods.get$hashCode(this.keyId);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(this))
        return false;
      return other instanceof A.LogicalKeyboardKey && other.keyId === this.keyId;
    }
  };
  A.PhysicalKeyboardKey.prototype = {
    get$hashCode(_) {
      return B.JSInt_methods.get$hashCode(this.usbHidUsage);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(this))
        return false;
      return other instanceof A.PhysicalKeyboardKey && other.usbHidUsage === this.usbHidUsage;
    }
  };
  A._KeyboardKey_Object_Diagnosticable.prototype = {};
  A.MethodCall.prototype = {
    toString$0(_) {
      return "MethodCall(" + this.method + ", " + A.S(this.$arguments) + ")";
    }
  };
  A.PlatformException.prototype = {
    toString$0(_) {
      var _this = this;
      return "PlatformException(" + _this.code + ", " + A.S(_this.message) + ", " + A.S(_this.details) + ", " + A.S(_this.stacktrace) + ")";
    },
    $isException: 1
  };
  A.MissingPluginException.prototype = {
    toString$0(_) {
      return "MissingPluginException(" + A.S(this.message) + ")";
    },
    $isException: 1
  };
  A.StringCodec.prototype = {
    decodeMessage$1(message) {
      if (message == null)
        return null;
      return B.Utf8Decoder_false.convert$1(J.asUint8List$2$x(B.NativeByteData_methods.get$buffer(message), message.byteOffset, message.byteLength));
    },
    encodeMessage$1(message) {
      if (message == null)
        return null;
      return J.asByteData$0$x(B.NativeUint8List_methods.get$buffer(B.C_Utf8Encoder.convert$1(message)));
    }
  };
  A.JSONMessageCodec.prototype = {
    encodeMessage$1(message) {
      if (message == null)
        return null;
      return B.C_StringCodec.encodeMessage$1(B.C_JsonCodec.encode$1(message));
    },
    decodeMessage$1(message) {
      var t1;
      if (message == null)
        return message;
      t1 = B.C_StringCodec.decodeMessage$1(message);
      t1.toString;
      return B.C_JsonCodec.decode$1(t1);
    }
  };
  A.JSONMethodCodec.prototype = {
    encodeMethodCall$1(methodCall) {
      var t1 = B.C_JSONMessageCodec.encodeMessage$1(A.LinkedHashMap_LinkedHashMap$_literal(["method", methodCall.method, "args", methodCall.$arguments], type$.String, type$.nullable_Object));
      t1.toString;
      return t1;
    },
    decodeMethodCall$1(methodCall) {
      var method, $arguments, _null = null,
        decoded = B.C_JSONMessageCodec.decodeMessage$1(methodCall);
      if (!type$.Map_dynamic_dynamic._is(decoded))
        throw A.wrapException(A.FormatException$("Expected method call Map, got " + A.S(decoded), _null, _null));
      method = decoded.$index(0, "method");
      $arguments = decoded.$index(0, "args");
      if (typeof method == "string")
        return new A.MethodCall(method, $arguments);
      throw A.wrapException(A.FormatException$("Invalid method call: " + decoded.toString$0(0), _null, _null));
    },
    decodeEnvelope$1(envelope) {
      var t1, t2, t3, _null = null,
        decoded = B.C_JSONMessageCodec.decodeMessage$1(envelope);
      if (!type$.List_dynamic._is(decoded))
        throw A.wrapException(A.FormatException$("Expected envelope List, got " + A.S(decoded), _null, _null));
      t1 = J.getInterceptor$asx(decoded);
      if (t1.get$length(decoded) === 1)
        return t1.$index(decoded, 0);
      t2 = false;
      if (t1.get$length(decoded) === 3)
        if (typeof t1.$index(decoded, 0) == "string")
          t2 = t1.$index(decoded, 1) == null || typeof t1.$index(decoded, 1) == "string";
      if (t2) {
        t2 = A._asString(t1.$index(decoded, 0));
        t3 = A._asStringQ(t1.$index(decoded, 1));
        throw A.wrapException(A.PlatformException$(t2, t1.$index(decoded, 2), t3, _null));
      }
      t2 = false;
      if (t1.get$length(decoded) === 4)
        if (typeof t1.$index(decoded, 0) == "string")
          if (t1.$index(decoded, 1) == null || typeof t1.$index(decoded, 1) == "string")
            t2 = t1.$index(decoded, 3) == null || typeof t1.$index(decoded, 3) == "string";
      if (t2) {
        t2 = A._asString(t1.$index(decoded, 0));
        t3 = A._asStringQ(t1.$index(decoded, 1));
        throw A.wrapException(A.PlatformException$(t2, t1.$index(decoded, 2), t3, A._asStringQ(t1.$index(decoded, 3))));
      }
      throw A.wrapException(A.FormatException$("Invalid envelope: " + A.S(decoded), _null, _null));
    },
    encodeSuccessEnvelope$1(result) {
      var t1 = B.C_JSONMessageCodec.encodeMessage$1([result]);
      t1.toString;
      return t1;
    },
    encodeErrorEnvelope$3$code$details$message(code, details, message) {
      var t1 = B.C_JSONMessageCodec.encodeMessage$1([code, message, details]);
      t1.toString;
      return t1;
    },
    encodeErrorEnvelope$2$code$message(code, message) {
      return this.encodeErrorEnvelope$3$code$details$message(code, null, message);
    }
  };
  A.StandardMessageCodec.prototype = {
    encodeMessage$1(message) {
      var buffer;
      if (message == null)
        return null;
      buffer = A.WriteBuffer_WriteBuffer(64);
      this.writeValue$2(buffer, message);
      return buffer.done$0();
    },
    decodeMessage$1(message) {
      var buffer, result;
      if (message == null)
        return null;
      buffer = new A.ReadBuffer(message);
      result = this.readValue$1(buffer);
      if (buffer._serialization$_position < message.byteLength)
        throw A.wrapException(B.FormatException_j1B);
      return result;
    },
    writeValue$2(buffer, value) {
      var t1, t2, asciiBytes, utf8Bytes, utf8Offset, i, char, elementSize, end, _this = this, _null = null;
      if (value == null)
        buffer._serialization$_add$1(0);
      else if (A._isBool(value))
        buffer._serialization$_add$1(value ? 1 : 2);
      else if (typeof value == "number") {
        buffer._serialization$_add$1(6);
        buffer._alignTo$1(8);
        t1 = buffer._eightBytes;
        t2 = $.$get$Endian_host();
        t1.$flags & 2 && A.throwUnsupportedOperation(t1, 13);
        t1.setFloat64(0, value, B.C_Endian === t2);
        buffer._addAll$1(buffer._eightBytesAsList);
      } else if (A._isInt(value)) {
        t1 = -2147483648 <= value && value <= 2147483647;
        t2 = buffer._eightBytes;
        if (t1) {
          buffer._serialization$_add$1(3);
          t1 = $.$get$Endian_host();
          t2.$flags & 2 && A.throwUnsupportedOperation(t2, 8);
          t2.setInt32(0, value, B.C_Endian === t1);
          buffer._addAll$3(buffer._eightBytesAsList, 0, 4);
        } else {
          buffer._serialization$_add$1(4);
          t1 = $.$get$Endian_host();
          B.NativeByteData_methods.setInt64$3(t2, 0, value, t1);
        }
      } else if (typeof value == "string") {
        buffer._serialization$_add$1(7);
        t1 = value.length;
        asciiBytes = new Uint8Array(t1);
        i = 0;
        while (true) {
          if (!(i < t1)) {
            utf8Bytes = _null;
            utf8Offset = 0;
            break;
          }
          char = value.charCodeAt(i);
          if (char <= 127)
            asciiBytes[i] = char;
          else {
            utf8Bytes = B.C_Utf8Encoder.convert$1(B.JSString_methods.substring$1(value, i));
            utf8Offset = i;
            break;
          }
          ++i;
        }
        if (utf8Bytes != null) {
          _this.writeSize$2(buffer, utf8Offset + utf8Bytes.length);
          elementSize = asciiBytes.BYTES_PER_ELEMENT;
          end = A.RangeError_checkValidRange(0, utf8Offset, B.JSInt_methods.$tdiv(asciiBytes.byteLength, elementSize), _null, _null);
          buffer._append$1(J.asUint8List$2$x(B.NativeUint8List_methods.get$buffer(asciiBytes), asciiBytes.byteOffset + 0 * elementSize, end * elementSize));
          buffer._append$1(utf8Bytes);
        } else {
          _this.writeSize$2(buffer, t1);
          buffer._append$1(asciiBytes);
        }
      } else if (type$.Uint8List._is(value)) {
        buffer._serialization$_add$1(8);
        _this.writeSize$2(buffer, value.length);
        buffer._append$1(value);
      } else if (type$.Int32List._is(value)) {
        buffer._serialization$_add$1(9);
        t1 = value.length;
        _this.writeSize$2(buffer, t1);
        buffer._alignTo$1(4);
        buffer._append$1(J.asUint8List$2$x(B.NativeInt32List_methods.get$buffer(value), value.byteOffset, 4 * t1));
      } else if (type$.Float32List._is(value)) {
        buffer._serialization$_add$1(14);
        t1 = value.length;
        _this.writeSize$2(buffer, t1);
        buffer._alignTo$1(4);
        buffer._append$1(J.asUint8List$2$x(B.NativeFloat32List_methods.get$buffer(value), value.byteOffset, 4 * t1));
      } else if (type$.Float64List._is(value)) {
        buffer._serialization$_add$1(11);
        t1 = value.length;
        _this.writeSize$2(buffer, t1);
        buffer._alignTo$1(8);
        buffer._append$1(J.asUint8List$2$x(B.NativeFloat64List_methods.get$buffer(value), value.byteOffset, 8 * t1));
      } else if (type$.List_dynamic._is(value)) {
        buffer._serialization$_add$1(12);
        t1 = J.getInterceptor$asx(value);
        _this.writeSize$2(buffer, t1.get$length(value));
        for (t1 = t1.get$iterator(value); t1.moveNext$0();)
          _this.writeValue$2(buffer, t1.get$current());
      } else if (type$.Map_dynamic_dynamic._is(value)) {
        buffer._serialization$_add$1(13);
        _this.writeSize$2(buffer, value.get$length(value));
        value.forEach$1(0, new A.StandardMessageCodec_writeValue_closure(_this, buffer));
      } else
        throw A.wrapException(A.ArgumentError$value(value, _null, _null));
    },
    readValue$1(buffer) {
      if (buffer._serialization$_position >= buffer.data.byteLength)
        throw A.wrapException(B.FormatException_j1B);
      return this.readValueOfType$2(buffer.getUint8$0(0), buffer);
    },
    readValueOfType$2(type, buffer) {
      var t1, t2, value, $length, list, result, i, t3, _this = this;
      switch (type) {
        case 0:
          return null;
        case 1:
          return true;
        case 2:
          return false;
        case 3:
          t1 = buffer._serialization$_position;
          t2 = $.$get$Endian_host();
          value = buffer.data.getInt32(t1, B.C_Endian === t2);
          buffer._serialization$_position += 4;
          return value;
        case 4:
          return buffer.getInt64$0(0);
        case 6:
          buffer._alignTo$1(8);
          t1 = buffer._serialization$_position;
          t2 = $.$get$Endian_host();
          value = buffer.data.getFloat64(t1, B.C_Endian === t2);
          buffer._serialization$_position += 8;
          return value;
        case 5:
        case 7:
          $length = _this.readSize$1(buffer);
          return B.Utf8Decoder_false.convert$1(buffer.getUint8List$1($length));
        case 8:
          return buffer.getUint8List$1(_this.readSize$1(buffer));
        case 9:
          $length = _this.readSize$1(buffer);
          buffer._alignTo$1(4);
          t1 = buffer.data;
          list = J.asInt32List$2$x(B.NativeByteData_methods.get$buffer(t1), t1.byteOffset + buffer._serialization$_position, $length);
          buffer._serialization$_position = buffer._serialization$_position + 4 * $length;
          return list;
        case 10:
          return buffer.getInt64List$1(_this.readSize$1(buffer));
        case 14:
          $length = _this.readSize$1(buffer);
          buffer._alignTo$1(4);
          t1 = buffer.data;
          list = J.asFloat32List$2$x(B.NativeByteData_methods.get$buffer(t1), t1.byteOffset + buffer._serialization$_position, $length);
          buffer._serialization$_position = buffer._serialization$_position + 4 * $length;
          return list;
        case 11:
          $length = _this.readSize$1(buffer);
          buffer._alignTo$1(8);
          t1 = buffer.data;
          list = J.asFloat64List$2$x(B.NativeByteData_methods.get$buffer(t1), t1.byteOffset + buffer._serialization$_position, $length);
          buffer._serialization$_position = buffer._serialization$_position + 8 * $length;
          return list;
        case 12:
          $length = _this.readSize$1(buffer);
          result = A.List_List$filled($length, null, false, type$.nullable_Object);
          for (t1 = buffer.data, i = 0; i < $length; ++i) {
            t2 = buffer._serialization$_position;
            if (t2 >= t1.byteLength)
              A.throwExpression(B.FormatException_j1B);
            buffer._serialization$_position = t2 + 1;
            result[i] = _this.readValueOfType$2(t1.getUint8(t2), buffer);
          }
          return result;
        case 13:
          $length = _this.readSize$1(buffer);
          t1 = type$.nullable_Object;
          result = A.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
          for (t1 = buffer.data, i = 0; i < $length; ++i) {
            t2 = buffer._serialization$_position;
            if (t2 >= t1.byteLength)
              A.throwExpression(B.FormatException_j1B);
            buffer._serialization$_position = t2 + 1;
            t2 = _this.readValueOfType$2(t1.getUint8(t2), buffer);
            t3 = buffer._serialization$_position;
            if (t3 >= t1.byteLength)
              A.throwExpression(B.FormatException_j1B);
            buffer._serialization$_position = t3 + 1;
            result.$indexSet(0, t2, _this.readValueOfType$2(t1.getUint8(t3), buffer));
          }
          return result;
        default:
          throw A.wrapException(B.FormatException_j1B);
      }
    },
    writeSize$2(buffer, value) {
      var t1, t2;
      if (value < 254)
        buffer._serialization$_add$1(value);
      else {
        t1 = buffer._eightBytes;
        if (value <= 65535) {
          buffer._serialization$_add$1(254);
          t2 = $.$get$Endian_host();
          t1.$flags & 2 && A.throwUnsupportedOperation(t1, 10);
          t1.setUint16(0, value, B.C_Endian === t2);
          buffer._addAll$3(buffer._eightBytesAsList, 0, 2);
        } else {
          buffer._serialization$_add$1(255);
          t2 = $.$get$Endian_host();
          t1.$flags & 2 && A.throwUnsupportedOperation(t1, 11);
          t1.setUint32(0, value, B.C_Endian === t2);
          buffer._addAll$3(buffer._eightBytesAsList, 0, 4);
        }
      }
    },
    readSize$1(buffer) {
      var t1, t2,
        value = buffer.getUint8$0(0);
      switch (value) {
        case 254:
          t1 = buffer._serialization$_position;
          t2 = $.$get$Endian_host();
          value = buffer.data.getUint16(t1, B.C_Endian === t2);
          buffer._serialization$_position += 2;
          return value;
        case 255:
          t1 = buffer._serialization$_position;
          t2 = $.$get$Endian_host();
          value = buffer.data.getUint32(t1, B.C_Endian === t2);
          buffer._serialization$_position += 4;
          return value;
        default:
          return value;
      }
    }
  };
  A.StandardMessageCodec_writeValue_closure.prototype = {
    call$2(key, value) {
      var t1 = this.$this,
        t2 = this.buffer;
      t1.writeValue$2(t2, key);
      t1.writeValue$2(t2, value);
    },
    $signature: 58
  };
  A.StandardMethodCodec.prototype = {
    encodeMethodCall$1(methodCall) {
      var buffer = A.WriteBuffer_WriteBuffer(64);
      B.C_StandardMessageCodec.writeValue$2(buffer, methodCall.method);
      B.C_StandardMessageCodec.writeValue$2(buffer, methodCall.$arguments);
      return buffer.done$0();
    },
    decodeMethodCall$1(methodCall) {
      var buffer = new A.ReadBuffer(methodCall),
        method = B.C_StandardMessageCodec.readValue$1(buffer),
        $arguments = B.C_StandardMessageCodec.readValue$1(buffer);
      if (typeof method == "string" && buffer._serialization$_position >= methodCall.byteLength)
        return new A.MethodCall(method, $arguments);
      else
        throw A.wrapException(B.FormatException_6Jp);
    },
    encodeSuccessEnvelope$1(result) {
      var buffer = A.WriteBuffer_WriteBuffer(64);
      buffer._serialization$_add$1(0);
      B.C_StandardMessageCodec.writeValue$2(buffer, result);
      return buffer.done$0();
    },
    encodeErrorEnvelope$3$code$details$message(code, details, message) {
      var buffer = A.WriteBuffer_WriteBuffer(64);
      buffer._serialization$_add$1(1);
      B.C_StandardMessageCodec.writeValue$2(buffer, code);
      B.C_StandardMessageCodec.writeValue$2(buffer, message);
      B.C_StandardMessageCodec.writeValue$2(buffer, details);
      return buffer.done$0();
    },
    encodeErrorEnvelope$2$code$message(code, message) {
      return this.encodeErrorEnvelope$3$code$details$message(code, null, message);
    },
    decodeEnvelope$1(envelope) {
      var buffer, errorCode, errorMessage, errorDetails, errorStacktrace, t1;
      if (envelope.byteLength === 0)
        throw A.wrapException(B.FormatException_aN3);
      buffer = new A.ReadBuffer(envelope);
      if (buffer.getUint8$0(0) === 0)
        return B.C_StandardMessageCodec.readValue$1(buffer);
      errorCode = B.C_StandardMessageCodec.readValue$1(buffer);
      errorMessage = B.C_StandardMessageCodec.readValue$1(buffer);
      errorDetails = B.C_StandardMessageCodec.readValue$1(buffer);
      errorStacktrace = buffer._serialization$_position < envelope.byteLength ? A._asStringQ(B.C_StandardMessageCodec.readValue$1(buffer)) : null;
      if (typeof errorCode == "string")
        t1 = (errorMessage == null || typeof errorMessage == "string") && buffer._serialization$_position >= envelope.byteLength;
      else
        t1 = false;
      if (t1)
        throw A.wrapException(A.PlatformException$(errorCode, errorDetails, A._asStringQ(errorMessage), errorStacktrace));
      else
        throw A.wrapException(B.FormatException_852);
    }
  };
  A.MouseCursorManager.prototype = {
    handleDeviceCursorUpdate$3(device, triggeringEvent, cursorCandidates) {
      var t1, lastSession, nextCursor, nextSession;
      if (type$.PointerRemovedEvent._is(triggeringEvent)) {
        this._lastSession.remove$1(0, device);
        return;
      }
      t1 = this._lastSession;
      lastSession = t1.$index(0, device);
      nextCursor = A._DeferringMouseCursor_firstNonDeferred(cursorCandidates);
      if (nextCursor == null)
        nextCursor = this.fallbackMouseCursor;
      if (J.$eq$(lastSession == null ? null : type$.SystemMouseCursor._as(lastSession.cursor), nextCursor))
        return;
      nextSession = nextCursor.createSession$1(device);
      t1.$indexSet(0, device, nextSession);
      B.OptionalMethodChannel_OvF.invokeMethod$1$2("activateSystemCursor", A.LinkedHashMap_LinkedHashMap$_literal(["device", nextSession.device, "kind", type$.SystemMouseCursor._as(nextSession.cursor).kind], type$.String, type$.dynamic), type$.void);
    }
  };
  A.MouseCursorSession.prototype = {};
  A.MouseCursor.prototype = {
    toString$0(_) {
      var debugDescription = this.get$debugDescription();
      return debugDescription;
    }
  };
  A._DeferringMouseCursor.prototype = {
    createSession$1(device) {
      throw A.wrapException(A.UnimplementedError$(null));
    },
    get$debugDescription() {
      return "defer";
    }
  };
  A._SystemMouseCursorSession.prototype = {};
  A.SystemMouseCursor.prototype = {
    get$debugDescription() {
      return "SystemMouseCursor(" + this.kind + ")";
    },
    createSession$1(device) {
      return new A._SystemMouseCursorSession(this, device);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(this))
        return false;
      return other instanceof A.SystemMouseCursor && other.kind === this.kind;
    },
    get$hashCode(_) {
      return B.JSString_methods.get$hashCode(this.kind);
    }
  };
  A._MouseCursor_Object_Diagnosticable.prototype = {};
  A.BasicMessageChannel.prototype = {
    get$binaryMessenger() {
      var t1 = $.ServicesBinding__instance.ServicesBinding___ServicesBinding__defaultBinaryMessenger_F;
      t1 === $ && A.throwUnnamedLateFieldNI();
      return t1;
    },
    send$1(message) {
      return this.send$body$BasicMessageChannel(message, this.$ti._eval$1("1?"));
    },
    send$body$BasicMessageChannel(message, $async$type) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter($async$type),
        $async$returnValue, $async$self = this, t1, t2, $async$temp1;
      var $async$send$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.codec;
              t2 = $async$self.get$binaryMessenger().send$2($async$self.name, t1.encodeMessage$1(message));
              $async$temp1 = t1;
              $async$goto = 3;
              return A._asyncAwait(type$.Future_nullable_ByteData._is(t2) ? t2 : A._Future$value(t2, type$.nullable_ByteData), $async$send$1);
            case 3:
              // returning from await.
              $async$returnValue = $async$temp1.decodeMessage$1($async$result);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$send$1, $async$completer);
    },
    setMessageHandler$1(handler) {
      this.get$binaryMessenger().setMessageHandler$2(this.name, new A.BasicMessageChannel_setMessageHandler_closure(this, handler));
    }
  };
  A.BasicMessageChannel_setMessageHandler_closure.prototype = {
    call$1(message) {
      return this.$call$body$BasicMessageChannel_setMessageHandler_closure(message);
    },
    $call$body$BasicMessageChannel_setMessageHandler_closure(message) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.nullable_ByteData),
        $async$returnValue, $async$self = this, t1, $async$temp1;
      var $async$call$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this.codec;
              $async$temp1 = t1;
              $async$goto = 3;
              return A._asyncAwait($async$self.handler.call$1(t1.decodeMessage$1(message)), $async$call$1);
            case 3:
              // returning from await.
              $async$returnValue = $async$temp1.encodeMessage$1($async$result);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 85
  };
  A.MethodChannel.prototype = {
    get$binaryMessenger() {
      var t1 = $.ServicesBinding__instance.ServicesBinding___ServicesBinding__defaultBinaryMessenger_F;
      t1 === $ && A.throwUnnamedLateFieldNI();
      return t1;
    },
    _invokeMethod$1$3$arguments$missingOk(method, $arguments, missingOk, $T) {
      return this._invokeMethod$body$MethodChannel(method, $arguments, missingOk, $T, $T._eval$1("0?"));
    },
    _invokeMethod$body$MethodChannel(method, $arguments, missingOk, $T, $async$type) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter($async$type),
        $async$returnValue, $async$self = this, t1, input, t2, t3, result;
      var $async$_invokeMethod$1$3$arguments$missingOk = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.codec;
              input = t1.encodeMethodCall$1(new A.MethodCall(method, $arguments));
              t2 = $async$self.name;
              t3 = $async$self.get$binaryMessenger().send$2(t2, input);
              $async$goto = 3;
              return A._asyncAwait(type$.Future_nullable_ByteData._is(t3) ? t3 : A._Future$value(t3, type$.nullable_ByteData), $async$_invokeMethod$1$3$arguments$missingOk);
            case 3:
              // returning from await.
              result = $async$result;
              if (result == null) {
                if (missingOk) {
                  $async$returnValue = null;
                  // goto return
                  $async$goto = 1;
                  break;
                }
                throw A.wrapException(A.MissingPluginException$("No implementation found for method " + method + " on channel " + t2));
              }
              $async$returnValue = $T._eval$1("0?")._as(t1.decodeEnvelope$1(result));
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$_invokeMethod$1$3$arguments$missingOk, $async$completer);
    },
    setMethodCallHandler$1(handler) {
      var t1 = this.get$binaryMessenger();
      t1.setMessageHandler$2(this.name, new A.MethodChannel_setMethodCallHandler_closure(this, handler));
    },
    _handleAsMethodCall$2(message, handler) {
      return this._handleAsMethodCall$body$MethodChannel(message, handler);
    },
    _handleAsMethodCall$body$MethodChannel(message, handler) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.nullable_ByteData),
        $async$returnValue, $async$handler = 2, $async$errorStack = [], $async$self = this, e, error, t2, exception, t3, t1, $call, $async$exception, $async$temp1;
      var $async$_handleAsMethodCall$2 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$errorStack.push($async$result);
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.codec;
              $call = t1.decodeMethodCall$1(message);
              $async$handler = 4;
              $async$temp1 = t1;
              $async$goto = 7;
              return A._asyncAwait(handler.call$1($call), $async$_handleAsMethodCall$2);
            case 7:
              // returning from await.
              t2 = $async$temp1.encodeSuccessEnvelope$1($async$result);
              $async$returnValue = t2;
              // goto return
              $async$goto = 1;
              break;
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$errorStack.pop();
              t2 = A.unwrapException($async$exception);
              if (t2 instanceof A.PlatformException) {
                e = t2;
                t2 = e.code;
                t3 = e.message;
                $async$returnValue = t1.encodeErrorEnvelope$3$code$details$message(t2, e.details, t3);
                // goto return
                $async$goto = 1;
                break;
              } else if (t2 instanceof A.MissingPluginException) {
                $async$returnValue = null;
                // goto return
                $async$goto = 1;
                break;
              } else {
                error = t2;
                t1 = t1.encodeErrorEnvelope$2$code$message("error", J.toString$0$(error));
                $async$returnValue = t1;
                // goto return
                $async$goto = 1;
                break;
              }
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return A._asyncRethrow($async$errorStack.at(-1), $async$completer);
          }
      });
      return A._asyncStartSync($async$_handleAsMethodCall$2, $async$completer);
    }
  };
  A.MethodChannel_setMethodCallHandler_closure.prototype = {
    call$1(message) {
      return this.$this._handleAsMethodCall$2(message, this.handler);
    },
    $signature: 85
  };
  A.OptionalMethodChannel.prototype = {
    invokeMethod$1$2(method, $arguments, $T) {
      return this.invokeMethod$body$OptionalMethodChannel(method, $arguments, $T, $T._eval$1("0?"));
    },
    invokeMethod$1$1(method, $T) {
      return this.invokeMethod$1$2(method, null, $T);
    },
    invokeMethod$body$OptionalMethodChannel(method, $arguments, $T, $async$type) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter($async$type),
        $async$returnValue, $async$self = this;
      var $async$invokeMethod$1$2 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = $async$self.super$MethodChannel$_invokeMethod(method, $arguments, true, $T);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$invokeMethod$1$2, $async$completer);
    }
  };
  A.KeyboardSide.prototype = {
    _enumToString$0() {
      return "KeyboardSide." + this._name;
    }
  };
  A.ModifierKey.prototype = {
    _enumToString$0() {
      return "ModifierKey." + this._name;
    }
  };
  A.RawKeyEventData.prototype = {
    get$modifiersPressed() {
      var _i, key,
        result = A.LinkedHashMap_LinkedHashMap$_empty(type$.ModifierKey, type$.KeyboardSide);
      for (_i = 0; _i < 9; ++_i) {
        key = B.List_swa[_i];
        if (this.isModifierPressed$1(key))
          result.$indexSet(0, key, B.KeyboardSide_0);
      }
      return result;
    }
  };
  A.RawKeyEvent.prototype = {};
  A.RawKeyEvent_RawKeyEvent$fromMessage_dataFromWeb.prototype = {
    call$0() {
      var t3, t4, t5,
        t1 = this.message,
        key = A._asStringQ(t1.$index(0, "key")),
        t2 = key == null;
      if (!t2) {
        t3 = key.length;
        t3 = t3 !== 0 && t3 === 1;
      } else
        t3 = false;
      if (t3)
        this._box_0.character = key;
      t3 = A._asStringQ(t1.$index(0, "code"));
      if (t3 == null)
        t3 = "";
      t2 = t2 ? "" : key;
      t4 = A._asIntQ(t1.$index(0, "location"));
      if (t4 == null)
        t4 = 0;
      t5 = A._asIntQ(t1.$index(0, "metaState"));
      if (t5 == null)
        t5 = 0;
      t1 = A._asIntQ(t1.$index(0, "keyCode"));
      return new A.RawKeyEventDataWeb(t3, t2, t4, t5, t1 == null ? 0 : t1);
    },
    $signature: 165
  };
  A.RawKeyDownEvent.prototype = {};
  A.RawKeyUpEvent.prototype = {};
  A.RawKeyboard.prototype = {
    handleRawKeyEvent$1($event) {
      var listener, exception, stack, collector, t1, t2, t3, _i, exception0, t4, t5, _this = this;
      if ($event instanceof A.RawKeyDownEvent) {
        t1 = $event.data;
        _this._keysPressed.$indexSet(0, t1.get$physicalKey(), t1.get$logicalKey());
      } else if ($event instanceof A.RawKeyUpEvent)
        _this._keysPressed.remove$1(0, $event.data.get$physicalKey());
      _this._synchronizeModifiers$1($event);
      t1 = _this._raw_keyboard$_listeners;
      t2 = A.List_List$_of(t1, type$.void_Function_RawKeyEvent);
      t3 = t2.length;
      _i = 0;
      for (; _i < t2.length; t2.length === t3 || (0, A.throwConcurrentModificationError)(t2), ++_i) {
        listener = t2[_i];
        try {
          if (B.JSArray_methods.contains$1(t1, listener))
            listener.call$1($event);
        } catch (exception0) {
          exception = A.unwrapException(exception0);
          stack = A.getTraceFromException(exception0);
          collector = null;
          t4 = A.ErrorDescription$("while processing a raw key listener");
          t5 = $.FlutterError_onError;
          if (t5 != null)
            t5.call$1(new A.FlutterErrorDetails(exception, stack, "services library", t4, collector, false));
        }
      }
      return false;
    },
    _synchronizeModifiers$1($event) {
      var t6, thisKeyModifier, _i, key, t7, thisModifierKeys, t8, mappedKeys, t9, t10, nonModifierCapsLock, skipReleasingKey,
        t1 = $event.data,
        modifiersPressed = t1.get$modifiersPressed(),
        t2 = type$.PhysicalKeyboardKey,
        modifierKeys = A.LinkedHashMap_LinkedHashMap$_empty(t2, type$.LogicalKeyboardKey),
        anySideKeys = A.LinkedHashSet_LinkedHashSet$_empty(t2),
        t3 = this._keysPressed,
        t4 = A.LinkedHashSet_LinkedHashSet$of(new A.LinkedHashMapKeysIterable(t3, A._instanceType(t3)._eval$1("LinkedHashMapKeysIterable<1>")), t2),
        t5 = $event instanceof A.RawKeyDownEvent;
      if (t5)
        t4.add$1(0, t1.get$physicalKey());
      for (t6 = t1.code, thisKeyModifier = null, _i = 0; _i < 9; ++_i) {
        key = B.List_swa[_i];
        t7 = $.$get$RawKeyboard__modifierKeyMap();
        thisModifierKeys = t7.$index(0, new A._ModifierSidePair(key, B.KeyboardSide_3));
        if (thisModifierKeys == null)
          continue;
        t8 = B.Map_udsmM.$index(0, t6);
        if (thisModifierKeys.contains$1(0, t8 == null ? new A.PhysicalKeyboardKey(98784247808 + B.JSString_methods.get$hashCode(t6)) : t8))
          thisKeyModifier = key;
        if (modifiersPressed.$index(0, key) === B.KeyboardSide_0) {
          anySideKeys.addAll$1(0, thisModifierKeys);
          if (thisModifierKeys.any$1(0, t4.get$contains(t4)))
            continue;
        }
        mappedKeys = modifiersPressed.$index(0, key) == null ? A.LinkedHashSet_LinkedHashSet$_empty(t2) : t7.$index(0, new A._ModifierSidePair(key, modifiersPressed.$index(0, key)));
        if (mappedKeys == null)
          continue;
        for (t7 = A._instanceType(mappedKeys), t8 = new A._LinkedHashSetIterator(mappedKeys, mappedKeys._collection$_modifications, t7._eval$1("_LinkedHashSetIterator<1>")), t8._collection$_cell = mappedKeys._collection$_first, t7 = t7._precomputed1; t8.moveNext$0();) {
          t9 = t8._current;
          if (t9 == null)
            t9 = t7._as(t9);
          t10 = $.$get$RawKeyboard__allModifiers().$index(0, t9);
          t10.toString;
          modifierKeys.$indexSet(0, t9, t10);
        }
      }
      nonModifierCapsLock = t3.$index(0, B.PhysicalKeyboardKey_458809) != null && !J.$eq$(t3.$index(0, B.PhysicalKeyboardKey_458809), B.LogicalKeyboardKey_4294967556);
      for (t2 = $.$get$RawKeyboard__allModifiersExceptFn(), t2 = new A.LinkedHashMapKeyIterator(t2, t2._modifications, t2._first); t2.moveNext$0();) {
        t4 = t2.__js_helper$_current;
        skipReleasingKey = nonModifierCapsLock && t4.$eq(0, B.PhysicalKeyboardKey_458809);
        if (!anySideKeys.contains$1(0, t4) && !skipReleasingKey)
          t3.remove$1(0, t4);
      }
      t3.remove$1(0, B.PhysicalKeyboardKey_18);
      t3.addAll$1(0, modifierKeys);
      if (t5 && thisKeyModifier != null && !t3.containsKey$1(t1.get$physicalKey())) {
        t2 = t1.get$physicalKey().$eq(0, B.PhysicalKeyboardKey_458982);
        if (t2)
          t3.$indexSet(0, t1.get$physicalKey(), t1.get$logicalKey());
      }
    }
  };
  A._ModifierSidePair.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(this))
        return false;
      return other instanceof A._ModifierSidePair && other.modifier === this.modifier && other.side == this.side;
    },
    get$hashCode(_) {
      return A.Object_hash(this.modifier, this.side, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    }
  };
  A._RawKeyEvent_Object_Diagnosticable.prototype = {};
  A._RawKeyEventData_Object_Diagnosticable.prototype = {};
  A.RawKeyEventDataWeb.prototype = {
    get$physicalKey() {
      var t1 = this.code,
        t2 = B.Map_udsmM.$index(0, t1);
      return t2 == null ? new A.PhysicalKeyboardKey(98784247808 + B.JSString_methods.get$hashCode(t1)) : t2;
    },
    get$logicalKey() {
      var newKey,
        t1 = this.key,
        t2 = B.Map_f9wiw.$index(0, t1),
        maybeLocationKey = t2 == null ? null : t2[this.location];
      if (maybeLocationKey != null)
        return maybeLocationKey;
      newKey = B.Map_Ig9Xq.$index(0, t1);
      if (newKey != null)
        return newKey;
      if (t1.length === 1)
        return new A.LogicalKeyboardKey(t1.toLowerCase().charCodeAt(0));
      return new A.LogicalKeyboardKey(B.JSString_methods.get$hashCode(this.code) + 98784247808);
    },
    isModifierPressed$1(key) {
      var _this = this;
      switch (key.index) {
        case 0:
          return (_this.metaState & 4) !== 0;
        case 1:
          return (_this.metaState & 1) !== 0;
        case 2:
          return (_this.metaState & 2) !== 0;
        case 3:
          return (_this.metaState & 8) !== 0;
        case 5:
          return (_this.metaState & 16) !== 0;
        case 4:
          return (_this.metaState & 32) !== 0;
        case 6:
          return (_this.metaState & 64) !== 0;
        case 7:
        case 8:
          return false;
      }
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      return other instanceof A.RawKeyEventDataWeb && other.code === _this.code && other.key === _this.key && other.location === _this.location && other.metaState === _this.metaState && other.keyCode === _this.keyCode;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(_this.code, _this.key, _this.location, _this.metaState, _this.keyCode, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    }
  };
  A.RestorationManager.prototype = {
    get$rootBucket() {
      var _this = this;
      if (_this._rootBucketIsValid)
        return new A.SynchronousFuture(_this._rootBucket, type$.SynchronousFuture_nullable_RestorationBucket);
      if (_this._pendingRootBucket == null) {
        _this._pendingRootBucket = new A._AsyncCompleter(new A._Future($.Zone__current, type$._Future_nullable_RestorationBucket), type$._AsyncCompleter_nullable_RestorationBucket);
        _this._getRootBucketFromEngine$0();
      }
      return _this._pendingRootBucket.future;
    },
    _getRootBucketFromEngine$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, config;
      var $async$_getRootBucketFromEngine$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return A._asyncAwait(B.OptionalMethodChannel_02D.invokeMethod$1$1("get", type$.Map_of_nullable_Object_and_nullable_Object), $async$_getRootBucketFromEngine$0);
            case 3:
              // returning from await.
              config = $async$result;
              if ($async$self._pendingRootBucket == null) {
                // goto return
                $async$goto = 1;
                break;
              }
              $async$self._parseAndHandleRestorationUpdateFromEngine$1(config);
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$_getRootBucketFromEngine$0, $async$completer);
    },
    _parseAndHandleRestorationUpdateFromEngine$1(update) {
      var t2,
        t1 = update == null;
      if (!t1) {
        t2 = update.$index(0, "enabled");
        t2.toString;
        A._asBool(t2);
      } else
        t2 = false;
      this.handleRestorationUpdateFromEngine$2$data$enabled(t1 ? null : type$.nullable_Uint8List._as(update.$index(0, "data")), t2);
    },
    handleRestorationUpdateFromEngine$2$data$enabled(data, enabled) {
      var oldRoot, t2, _this = this,
        t1 = _this._rootBucketIsValid && enabled;
      _this._isReplacing = t1;
      if (t1)
        $.SchedulerBinding__instance.SchedulerBinding__postFrameCallbacks.push(new A.RestorationManager_handleRestorationUpdateFromEngine_closure(_this));
      oldRoot = _this._rootBucket;
      if (enabled) {
        t1 = _this._decodeRestorationData$1(data);
        t2 = type$.String;
        if (t1 == null) {
          t1 = type$.nullable_Object;
          t1 = A.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
        }
        t2 = new A.RestorationBucket(t1, _this, null, "root", A.LinkedHashMap_LinkedHashMap$_empty(t2, type$.RestorationBucket), A.LinkedHashMap_LinkedHashMap$_empty(t2, type$.List_RestorationBucket));
        t1 = t2;
      } else
        t1 = null;
      _this._rootBucket = t1;
      _this._rootBucketIsValid = true;
      t2 = _this._pendingRootBucket;
      if (t2 != null)
        t2.complete$1(t1);
      _this._pendingRootBucket = null;
      if (_this._rootBucket != oldRoot) {
        _this.notifyListeners$0();
        if (oldRoot != null)
          oldRoot.dispose$0();
      }
    },
    _methodHandler$1($call) {
      return this._methodHandler$body$RestorationManager($call);
    },
    _methodHandler$body$RestorationManager($call) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, t1;
      var $async$_methodHandler$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $call.method;
              switch (t1) {
                case "push":
                  $async$self._parseAndHandleRestorationUpdateFromEngine$1(type$.Map_of_nullable_Object_and_nullable_Object._as($call.$arguments));
                  break;
                default:
                  throw A.wrapException(A.UnimplementedError$(t1 + " was invoked but isn't implemented by " + A.getRuntimeTypeOfDartObject($async$self).toString$0(0)));
              }
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$_methodHandler$1, $async$completer);
    },
    _decodeRestorationData$1(data) {
      if (data == null)
        return null;
      return type$.nullable_Map_of_nullable_Object_and_nullable_Object._as(B.C_StandardMessageCodec.decodeMessage$1(J.asByteData$2$x(B.NativeUint8List_methods.get$buffer(data), data.byteOffset, data.byteLength)));
    },
    scheduleSerializationFor$1(bucket) {
      var _this = this;
      _this._bucketsNeedingSerialization.add$1(0, bucket);
      if (!_this._serializationScheduled) {
        _this._serializationScheduled = true;
        $.SchedulerBinding__instance.SchedulerBinding__postFrameCallbacks.push(new A.RestorationManager_scheduleSerializationFor_closure(_this));
      }
    },
    _doSerialization$0() {
      var t1, t2, t3, t4, _this = this;
      if (!_this._serializationScheduled)
        return;
      _this._serializationScheduled = false;
      for (t1 = _this._bucketsNeedingSerialization, t2 = A._LinkedHashSetIterator$(t1, t1._collection$_modifications, A._instanceType(t1)._precomputed1), t3 = t2.$ti._precomputed1; t2.moveNext$0();) {
        t4 = t2._current;
        (t4 == null ? t3._as(t4) : t4)._needsSerialization = false;
      }
      t1.clear$0(0);
      t1 = B.C_StandardMessageCodec.encodeMessage$1(_this._rootBucket._rawData);
      t1.toString;
      B.OptionalMethodChannel_02D.invokeMethod$1$2("put", J.asUint8List$2$x(B.NativeByteData_methods.get$buffer(t1), t1.byteOffset, t1.byteLength), type$.void);
    },
    flushData$0() {
      if ($.SchedulerBinding__instance.SchedulerBinding__hasScheduledFrame)
        return;
      this._doSerialization$0();
    }
  };
  A.RestorationManager_handleRestorationUpdateFromEngine_closure.prototype = {
    call$1(_) {
      this.$this._isReplacing = false;
    },
    $signature: 1
  };
  A.RestorationManager_scheduleSerializationFor_closure.prototype = {
    call$1(_) {
      return this.$this._doSerialization$0();
    },
    $signature: 1
  };
  A.RestorationBucket.prototype = {
    get$_rawChildren() {
      var t1 = this._rawData.putIfAbsent$2("c", new A.RestorationBucket__rawChildren_closure());
      t1.toString;
      return type$.Map_of_nullable_Object_and_nullable_Object._as(t1);
    },
    get$_rawValues() {
      var t1 = this._rawData.putIfAbsent$2("v", new A.RestorationBucket__rawValues_closure());
      t1.toString;
      return type$.Map_of_nullable_Object_and_nullable_Object._as(t1);
    },
    claimChild$2$debugOwner(restorationId, debugOwner) {
      var child, t2, t3, t4, _this = this,
        t1 = _this._claimedChildren;
      if (t1.containsKey$1(restorationId) || !_this.get$_rawChildren().containsKey$1(restorationId)) {
        t1 = type$.String;
        child = new A.RestorationBucket(A.LinkedHashMap_LinkedHashMap$_empty(t1, type$.nullable_Object), null, null, restorationId, A.LinkedHashMap_LinkedHashMap$_empty(t1, type$.RestorationBucket), A.LinkedHashMap_LinkedHashMap$_empty(t1, type$.List_RestorationBucket));
        _this.adoptChild$1(child);
        return child;
      }
      t2 = type$.String;
      t3 = _this._manager;
      t4 = _this.get$_rawChildren().$index(0, restorationId);
      t4.toString;
      child = new A.RestorationBucket(type$.Map_of_nullable_Object_and_nullable_Object._as(t4), t3, _this, restorationId, A.LinkedHashMap_LinkedHashMap$_empty(t2, type$.RestorationBucket), A.LinkedHashMap_LinkedHashMap$_empty(t2, type$.List_RestorationBucket));
      t1.$indexSet(0, restorationId, child);
      return child;
    },
    adoptChild$1(child) {
      var _this = this,
        t1 = child._restoration$_parent;
      if (t1 !== _this) {
        if (t1 != null)
          t1._removeChildData$1(child);
        child._restoration$_parent = _this;
        _this._addChildData$1(child);
        if (child._manager != _this._manager)
          _this._recursivelyUpdateManager$1(child);
      }
    },
    _dropChild$1(child) {
      this._removeChildData$1(child);
      child._restoration$_parent = null;
      if (child._manager != null) {
        child._updateManager$1(null);
        child._visitChildren$1(this.get$_recursivelyUpdateManager());
      }
    },
    _markNeedsSerialization$0() {
      var t1, _this = this;
      if (!_this._needsSerialization) {
        _this._needsSerialization = true;
        t1 = _this._manager;
        if (t1 != null)
          t1.scheduleSerializationFor$1(_this);
      }
    },
    _recursivelyUpdateManager$1(bucket) {
      bucket._updateManager$1(this._manager);
      bucket._visitChildren$1(this.get$_recursivelyUpdateManager());
    },
    _updateManager$1(newManager) {
      var _this = this,
        t1 = _this._manager;
      if (t1 == newManager)
        return;
      if (_this._needsSerialization)
        if (t1 != null)
          t1._bucketsNeedingSerialization.remove$1(0, _this);
      _this._manager = newManager;
      if (_this._needsSerialization && newManager != null) {
        _this._needsSerialization = false;
        _this._markNeedsSerialization$0();
      }
    },
    _removeChildData$1(child) {
      var t1, pendingChildren, t2, _this = this;
      if (_this._claimedChildren.remove$1(0, child._restorationId) === child) {
        _this.get$_rawChildren().remove$1(0, child._restorationId);
        t1 = _this._childrenToAdd;
        pendingChildren = t1.$index(0, child._restorationId);
        if (pendingChildren != null) {
          t2 = J.getInterceptor$ax(pendingChildren);
          _this._finalizeAddChildData$1(t2.removeLast$0(pendingChildren));
          if (t2.get$isEmpty(pendingChildren))
            t1.remove$1(0, child._restorationId);
        }
        t1 = _this.get$_rawChildren();
        if (t1.get$isEmpty(t1))
          _this._rawData.remove$1(0, "c");
        _this._markNeedsSerialization$0();
        return;
      }
      t1 = _this._childrenToAdd;
      t2 = t1.$index(0, child._restorationId);
      if (t2 != null)
        J.remove$1$ax(t2, child);
      t2 = t1.$index(0, child._restorationId);
      t2 = t2 == null ? null : J.get$isEmpty$asx(t2);
      if (t2 === true)
        t1.remove$1(0, child._restorationId);
    },
    _addChildData$1(child) {
      var _this = this;
      if (_this._claimedChildren.containsKey$1(child._restorationId)) {
        J.add$1$ax(_this._childrenToAdd.putIfAbsent$2(child._restorationId, new A.RestorationBucket__addChildData_closure()), child);
        _this._markNeedsSerialization$0();
        return;
      }
      _this._finalizeAddChildData$1(child);
      _this._markNeedsSerialization$0();
    },
    _finalizeAddChildData$1(child) {
      this._claimedChildren.$indexSet(0, child._restorationId, child);
      this.get$_rawChildren().$indexSet(0, child._restorationId, child._rawData);
    },
    _visitChildren$2$concurrentModification(visitor, concurrentModification) {
      var t1 = this._claimedChildren,
        t2 = this._childrenToAdd,
        t3 = A._instanceType(t2)._eval$1("LinkedHashMapValuesIterable<2>"),
        children = new A.LinkedHashMapValuesIterable(t1, A._instanceType(t1)._eval$1("LinkedHashMapValuesIterable<2>")).followedBy$1(0, new A.ExpandIterable(new A.LinkedHashMapValuesIterable(t2, t3), new A.RestorationBucket__visitChildren_closure(), t3._eval$1("ExpandIterable<Iterable.E,RestorationBucket>")));
      if (concurrentModification) {
        t1 = A.List_List$_of(children, A._instanceType(children)._eval$1("Iterable.E"));
        t1.$flags = 1;
        children = t1;
      }
      J.forEach$1$ax(children, visitor);
    },
    _visitChildren$1(visitor) {
      return this._visitChildren$2$concurrentModification(visitor, false);
    },
    rename$1(newRestorationId) {
      var t1, _this = this;
      if (newRestorationId === _this._restorationId)
        return;
      t1 = _this._restoration$_parent;
      if (t1 != null)
        t1._removeChildData$1(_this);
      _this._restorationId = newRestorationId;
      t1 = _this._restoration$_parent;
      if (t1 != null)
        t1._addChildData$1(_this);
    },
    dispose$0() {
      var t1, _this = this;
      _this._visitChildren$2$concurrentModification(_this.get$_dropChild(), true);
      _this._claimedChildren.clear$0(0);
      _this._childrenToAdd.clear$0(0);
      t1 = _this._restoration$_parent;
      if (t1 != null)
        t1._removeChildData$1(_this);
      _this._restoration$_parent = null;
      _this._updateManager$1(null);
    },
    toString$0(_) {
      return "RestorationBucket(restorationId: " + this._restorationId + ", owner: null)";
    }
  };
  A.RestorationBucket__rawChildren_closure.prototype = {
    call$0() {
      var t1 = type$.nullable_Object;
      return A.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
    },
    $signature: 87
  };
  A.RestorationBucket__rawValues_closure.prototype = {
    call$0() {
      var t1 = type$.nullable_Object;
      return A.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
    },
    $signature: 87
  };
  A.RestorationBucket__addChildData_closure.prototype = {
    call$0() {
      return A._setArrayType([], type$.JSArray_RestorationBucket);
    },
    $signature: 168
  };
  A.RestorationBucket__visitChildren_closure.prototype = {
    call$1(buckets) {
      return buckets;
    },
    $signature: 169
  };
  A.ApplicationSwitcherDescription.prototype = {};
  A.SystemUiOverlayStyle.prototype = {
    _toMap$0() {
      var t2, t3, t4, t5, _this = this,
        t1 = _this.systemNavigationBarColor;
      t1 = t1 == null ? null : t1.value;
      t2 = _this.statusBarColor;
      t2 = t2 == null ? null : t2.value;
      t3 = _this.statusBarBrightness._enumToString$0();
      t4 = _this.statusBarIconBrightness._enumToString$0();
      t5 = _this.systemNavigationBarIconBrightness;
      t5 = t5 == null ? null : t5._enumToString$0();
      return A.LinkedHashMap_LinkedHashMap$_literal(["systemNavigationBarColor", t1, "systemNavigationBarDividerColor", null, "systemStatusBarContrastEnforced", _this.systemStatusBarContrastEnforced, "statusBarColor", t2, "statusBarBrightness", t3, "statusBarIconBrightness", t4, "systemNavigationBarIconBrightness", t5, "systemNavigationBarContrastEnforced", _this.systemNavigationBarContrastEnforced], type$.String, type$.dynamic);
    },
    toString$0(_) {
      return "SystemUiOverlayStyle(" + this._toMap$0().toString$0(0) + ")";
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(_this.systemNavigationBarColor, _this.systemNavigationBarDividerColor, _this.systemNavigationBarContrastEnforced, _this.statusBarColor, _this.statusBarBrightness, _this.statusBarIconBrightness, _this.systemStatusBarContrastEnforced, _this.systemNavigationBarIconBrightness, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      t1 = false;
      if (other instanceof A.SystemUiOverlayStyle)
        if (J.$eq$(other.systemNavigationBarColor, _this.systemNavigationBarColor))
          if (J.$eq$(other.statusBarColor, _this.statusBarColor))
            if (other.statusBarIconBrightness === _this.statusBarIconBrightness)
              if (other.statusBarBrightness === _this.statusBarBrightness)
                t1 = other.systemNavigationBarIconBrightness == _this.systemNavigationBarIconBrightness;
      return t1;
    }
  };
  A.SystemChrome_setSystemUIOverlayStyle_closure.prototype = {
    call$0() {
      if (!J.$eq$($.SystemChrome__pendingStyle, $.SystemChrome__latestStyle)) {
        B.OptionalMethodChannel_ZFR.invokeMethod$1$2("SystemChrome.setSystemUIOverlayStyle", $.SystemChrome__pendingStyle._toMap$0(), type$.void);
        $.SystemChrome__latestStyle = $.SystemChrome__pendingStyle;
      }
      $.SystemChrome__pendingStyle = null;
    },
    $signature: 0
  };
  A.SystemSoundType.prototype = {
    _enumToString$0() {
      return "SystemSoundType." + this._name;
    }
  };
  A.TextBoundary.prototype = {
    getLeadingTextBoundaryAt$1(position) {
      var start;
      if (position < 0)
        return null;
      start = this.getTextBoundaryAt$1(position).start;
      return start >= 0 ? start : null;
    },
    getTrailingTextBoundaryAt$1(position) {
      var end = this.getTextBoundaryAt$1(Math.max(0, position)).end;
      return end >= 0 ? end : null;
    },
    getTextBoundaryAt$1(position) {
      var end,
        start = this.getLeadingTextBoundaryAt$1(position);
      if (start == null)
        start = -1;
      end = this.getTrailingTextBoundaryAt$1(position);
      return new A.TextRange(start, end == null ? -1 : end);
    }
  };
  A.CharacterBoundary.prototype = {
    getLeadingTextBoundaryAt$1(position) {
      var t1;
      if (position < 0)
        return null;
      t1 = this._text_boundary$_text;
      return A.StringCharacterRange_StringCharacterRange$at(t1, Math.min(position, t1.length))._characters_impl$_start;
    },
    getTrailingTextBoundaryAt$1(position) {
      var rangeAtPosition,
        t1 = this._text_boundary$_text;
      if (position >= t1.length)
        return null;
      rangeAtPosition = A.StringCharacterRange_StringCharacterRange$at(t1, Math.max(0, position + 1));
      return rangeAtPosition._characters_impl$_start + rangeAtPosition.get$current().length;
    },
    getTextBoundaryAt$1(position) {
      var t1, rangeAtPosition, t2, _this = this;
      if (position < 0) {
        t1 = _this.getTrailingTextBoundaryAt$1(position);
        return new A.TextRange(-1, t1 == null ? -1 : t1);
      } else {
        t1 = _this._text_boundary$_text;
        if (position >= t1.length) {
          t1 = _this.getLeadingTextBoundaryAt$1(position);
          return new A.TextRange(t1 == null ? -1 : t1, -1);
        }
      }
      rangeAtPosition = A.StringCharacterRange_StringCharacterRange$at(t1, position);
      t1 = rangeAtPosition._characters_impl$_start;
      if (t1 !== rangeAtPosition._characters_impl$_end)
        t1 = new A.TextRange(t1, t1 + rangeAtPosition.get$current().length);
      else {
        t2 = _this.getTrailingTextBoundaryAt$1(position);
        t1 = new A.TextRange(t1, t2 == null ? -1 : t2);
      }
      return t1;
    }
  };
  A.LineBoundary.prototype = {
    getTextBoundaryAt$1(position) {
      this._textLayout.paragraph._getLineAtOffset$1(new A.TextPosition(Math.max(position, 0), B.TextAffinity_1));
      return null;
    }
  };
  A.DocumentBoundary.prototype = {
    getLeadingTextBoundaryAt$1(position) {
      return position < 0 ? null : 0;
    },
    getTrailingTextBoundaryAt$1(position) {
      var t1 = this._text_boundary$_text.length;
      return position >= t1 ? null : t1;
    }
  };
  A.TextSelection.prototype = {
    toString$0(_) {
      var t1, t2, _this = this,
        _s17_ = ", isDirectional: ";
      if (!_this.get$isValid())
        return "TextSelection.invalid";
      t1 = "" + _this.baseOffset;
      t2 = "" + _this.isDirectional;
      return _this.start === _this.end ? "TextSelection.collapsed(offset: " + t1 + ", affinity: " + _this.affinity.toString$0(0) + _s17_ + t2 + ")" : "TextSelection(baseOffset: " + t1 + ", extentOffset: " + _this.extentOffset + _s17_ + t2 + ")";
    },
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!(other instanceof A.TextSelection))
        return false;
      if (!_this.get$isValid())
        return !other.get$isValid();
      t1 = false;
      if (other.baseOffset === _this.baseOffset)
        if (other.extentOffset === _this.extentOffset)
          t1 = (_this.start !== _this.end || other.affinity === _this.affinity) && other.isDirectional === _this.isDirectional;
      return t1;
    },
    get$hashCode(_) {
      var affinityHash, _this = this;
      if (!_this.get$isValid())
        return A.Object_hash(-B.JSInt_methods.get$hashCode(1), -B.JSInt_methods.get$hashCode(1), A.Primitives_objectHashCode(B.TextAffinity_1), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
      affinityHash = _this.start === _this.end ? A.Primitives_objectHashCode(_this.affinity) : A.Primitives_objectHashCode(B.TextAffinity_1);
      return A.Object_hash(B.JSInt_methods.get$hashCode(_this.baseOffset), B.JSInt_methods.get$hashCode(_this.extentOffset), affinityHash, B.JSBool_methods.get$hashCode(_this.isDirectional), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    }
  };
  A.SelectionChangedCause.prototype = {
    _enumToString$0() {
      return "SelectionChangedCause." + this._name;
    }
  };
  A.TextInput.prototype = {
    get$_channel() {
      var t1 = this.__TextInput__channel_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      return t1;
    },
    _loudlyHandleTextInputInvocation$1($call) {
      return this._loudlyHandleTextInputInvocation$body$TextInput($call);
    },
    _loudlyHandleTextInputInvocation$body$TextInput($call) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.dynamic),
        $async$returnValue, $async$handler = 2, $async$errorStack = [], $async$self = this, exception, stack, t1, exception0, $async$exception0;
      var $async$_loudlyHandleTextInputInvocation$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$errorStack.push($async$result);
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$handler = 4;
              $async$goto = 7;
              return A._asyncAwait($async$self._handleTextInputInvocation$1($call), $async$_loudlyHandleTextInputInvocation$1);
            case 7:
              // returning from await.
              t1 = $async$result;
              $async$returnValue = t1;
              // goto return
              $async$goto = 1;
              break;
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception0 = $async$errorStack.pop();
              exception = A.unwrapException($async$exception0);
              stack = A.getTraceFromException($async$exception0);
              t1 = A.ErrorDescription$("during method call " + $call.method);
              A.FlutterError_reportError(new A.FlutterErrorDetails(exception, stack, "services library", t1, new A.TextInput__loudlyHandleTextInputInvocation_closure($call), false));
              throw $async$exception0;
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return A._asyncRethrow($async$errorStack.at(-1), $async$completer);
          }
      });
      return A._asyncStartSync($async$_loudlyHandleTextInputInvocation$1, $async$completer);
    },
    _handleTextInputInvocation$1(methodCall) {
      return this._handleTextInputInvocation$body$TextInput(methodCall);
    },
    _handleTextInputInvocation$body$TextInput(methodCall) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.dynamic),
        $async$returnValue, $async$self = this, t1, t2, args, t3, method;
      var $async$_handleTextInputInvocation$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              method = methodCall.method;
              if (method === "TextInputClient.focusElement") {
                $async$self._scribbleClients.$index(0, J.$index$asx(type$.List_dynamic._as(methodCall.$arguments), 0));
                // goto return
                $async$goto = 1;
                break;
              } else if (method === "TextInputClient.requestElementsInRect") {
                t1 = J.cast$1$0$ax(type$.List_dynamic._as(methodCall.$arguments), type$.num);
                t2 = t1.$ti._eval$1("MappedListIterable<ListBase.E,double>");
                args = A.List_List$_of(new A.MappedListIterable(t1, new A.TextInput__handleTextInputInvocation_closure(), t2), t2._eval$1("ListIterable.E"));
                t1 = $async$self._scribbleClients;
                t2 = A._instanceType(t1)._eval$1("LinkedHashMapKeysIterable<1>");
                t3 = t2._eval$1("MappedIterable<Iterable.E,List<@>>");
                t1 = A.List_List$_of(new A.MappedIterable(new A.WhereIterable(new A.LinkedHashMapKeysIterable(t1, t2), new A.TextInput__handleTextInputInvocation_closure0($async$self, args), t2._eval$1("WhereIterable<Iterable.E>")), new A.TextInput__handleTextInputInvocation_closure1($async$self), t3), t3._eval$1("Iterable.E"));
                $async$returnValue = t1;
                // goto return
                $async$goto = 1;
                break;
              } else if (method === "TextInputClient.scribbleInteractionBegan") {
                // goto return
                $async$goto = 1;
                break;
              } else if (method === "TextInputClient.scribbleInteractionFinished") {
                // goto return
                $async$goto = 1;
                break;
              }
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$_handleTextInputInvocation$1, $async$completer);
    }
  };
  A.TextInput__loudlyHandleTextInputInvocation_closure.prototype = {
    call$0() {
      var _null = null;
      return A._setArrayType([A.DiagnosticsProperty$("call", this.$call, true, B.C__NoDefaultValue, _null, _null, _null, B.DiagnosticLevel_3, false, true, true, B.DiagnosticsTreeStyle_9, _null)], type$.JSArray_DiagnosticsNode);
    },
    $signature: 5
  };
  A.TextInput__handleTextInputInvocation_closure.prototype = {
    call$1(value) {
      return value;
    },
    $signature: 171
  };
  A.TextInput__handleTextInputInvocation_closure0.prototype = {
    call$1(elementIdentifier) {
      this.$this._scribbleClients.$index(0, elementIdentifier);
      return false;
    },
    $signature: 44
  };
  A.TextInput__handleTextInputInvocation_closure1.prototype = {
    call$1(elementIdentifier) {
      var bounds = this.$this._scribbleClients.$index(0, elementIdentifier).get$bounds(),
        t1 = [elementIdentifier];
      B.JSArray_methods.addAll$1(t1, [bounds.get$left(), bounds.get$top(), bounds.get$width(), bounds.get$height()]);
      return t1;
    },
    $signature: 172
  };
  A.TextInputControl.prototype = {};
  A._PlatformTextInputControl.prototype = {};
  A.__PlatformTextInputControl_Object_TextInputControl.prototype = {};
  A._getParent_closure.prototype = {
    call$1(ancestor) {
      this.parent.set$finalLocalValue(ancestor);
      return false;
    },
    $signature: 20
  };
  A.Intent.prototype = {};
  A.Action.prototype = {
    _updateCallingAction$1(value) {
      this._currentCallingAction = value;
    },
    isEnabled$1(intent) {
      this.get$isActionEnabled();
      return true;
    },
    get$isActionEnabled() {
      return true;
    },
    consumesKey$1(intent) {
      return true;
    },
    toKeyEventResult$2(intent, invokeResult) {
      return this.consumesKey$1(intent) ? B.KeyEventResult_0 : B.KeyEventResult_2;
    },
    addActionListener$1(listener) {
      var t1 = this._actions$_listeners;
      t1._isDirty = true;
      t1._observer_list$_list.push(listener);
      return null;
    },
    removeActionListener$1(listener) {
      return this._actions$_listeners.remove$1(0, listener);
    }
  };
  A.ContextAction.prototype = {};
  A.CallbackAction.prototype = {
    invoke$1(intent) {
      return this.onInvoke.call$1(intent);
    }
  };
  A.ActionDispatcher.prototype = {
    invokeAction$3(action, intent, context) {
      if (action instanceof A.ContextAction)
        return action.invoke$2(intent, context);
      else
        return action.invoke$1(intent);
    }
  };
  A.Actions.prototype = {
    createState$0() {
      return new A._ActionsState(A.LinkedHashSet_LinkedHashSet$_empty(type$.Action_Intent), new A.Object());
    }
  };
  A.Actions__findDispatcher_closure.prototype = {
    call$1(element) {
      var t1 = element._widget;
      t1.toString;
      type$._ActionsScope._as(t1);
      return false;
    },
    $signature: 34
  };
  A.Actions_maybeFind_closure.prototype = {
    call$1(element) {
      var result, _this = this,
        t1 = element._widget;
      t1.toString;
      result = A.Actions__castAction(type$._ActionsScope._as(t1), _this.intent, _this.T);
      if (result != null) {
        _this.context.super$Element$dependOnInheritedElement(element, null);
        _this._box_0.action = result;
        return true;
      }
      return false;
    },
    $signature: 34
  };
  A.Actions__maybeFindWithoutDependingOn_closure.prototype = {
    call$1(element) {
      var result,
        t1 = element._widget;
      t1.toString;
      result = A.Actions__castAction(type$._ActionsScope._as(t1), this.intent, this.T);
      if (result != null) {
        this._box_0.action = result;
        return true;
      }
      return false;
    },
    $signature: 34
  };
  A.Actions_maybeInvoke_closure.prototype = {
    call$1(element) {
      var t2, result, _this = this,
        t1 = element._widget;
      t1.toString;
      t2 = _this.intent;
      result = A.Actions__castAction(type$._ActionsScope._as(t1), t2, _this.T);
      t1 = result != null;
      if (t1 && result.isEnabled$1(t2))
        _this._box_0.returnValue = A.Actions__findDispatcher(element).invokeAction$3(result, t2, _this.context);
      return t1;
    },
    $signature: 34
  };
  A._ActionsState.prototype = {
    initState$0() {
      this.super$State$initState();
      this._updateActionListeners$0();
    },
    _handleActionChanged$1(action) {
      this.setState$1(new A._ActionsState__handleActionChanged_closure(this));
    },
    _updateActionListeners$0() {
      var addedActions, _this = this,
        t1 = _this._widget.actions,
        t2 = A._instanceType(t1)._eval$1("LinkedHashMapValuesIterable<2>"),
        widgetActions = A.LinkedHashSet_LinkedHashSet$of(new A.LinkedHashMapValuesIterable(t1, t2), t2._eval$1("Iterable.E")),
        removedActions = _this.listenedActions.difference$1(widgetActions);
      t2 = _this.listenedActions;
      t2.toString;
      addedActions = widgetActions.difference$1(t2);
      for (t1 = removedActions.get$iterator(removedActions), t2 = _this.get$_handleActionChanged(); t1.moveNext$0();)
        t1.get$current().removeActionListener$1(t2);
      for (t1 = addedActions.get$iterator(addedActions); t1.moveNext$0();)
        t1.get$current().addActionListener$1(t2);
      _this.listenedActions = widgetActions;
    },
    didUpdateWidget$1(oldWidget) {
      this.super$State$didUpdateWidget(oldWidget);
      this._updateActionListeners$0();
    },
    dispose$0() {
      var t1, t2, t3, t4, _this = this;
      _this.super$State$dispose();
      for (t1 = _this.listenedActions, t1 = A._LinkedHashSetIterator$(t1, t1._collection$_modifications, A._instanceType(t1)._precomputed1), t2 = _this.get$_handleActionChanged(), t3 = t1.$ti._precomputed1; t1.moveNext$0();) {
        t4 = t1._current;
        (t4 == null ? t3._as(t4) : t4).removeActionListener$1(t2);
      }
      _this.listenedActions = null;
    },
    build$1(context) {
      var t1 = this._widget;
      return new A._ActionsScope(null, t1.actions, this.rebuildKey, t1.child, null);
    }
  };
  A._ActionsState__handleActionChanged_closure.prototype = {
    call$0() {
      this.$this.rebuildKey = new A.Object();
    },
    $signature: 0
  };
  A._ActionsScope.prototype = {
    updateShouldNotify$1(oldWidget) {
      var t1;
      if (this.rebuildKey === oldWidget.rebuildKey)
        t1 = !A.mapEquals(oldWidget.actions, this.actions);
      else
        t1 = true;
      return t1;
    }
  };
  A.FocusableActionDetector.prototype = {
    createState$0() {
      return new A._FocusableActionDetectorState(new A.LabeledGlobalKey(null, type$.LabeledGlobalKey_State_StatefulWidget));
    }
  };
  A._FocusableActionDetectorState.prototype = {
    initState$0() {
      this.super$State$initState();
      $.SchedulerBinding__instance.SchedulerBinding__postFrameCallbacks.push(new A._FocusableActionDetectorState_initState_closure(this));
      $.WidgetsBinding__instance.WidgetsBinding__buildOwner.focusManager._highlightManager._focus_manager$_listeners.add$1(0, this.get$_handleFocusHighlightModeChange());
    },
    dispose$0() {
      $.WidgetsBinding__instance.WidgetsBinding__buildOwner.focusManager._highlightManager._focus_manager$_listeners.remove$1(0, this.get$_handleFocusHighlightModeChange());
      this.super$State$dispose();
    },
    _updateHighlightMode$1(mode) {
      this._mayTriggerCallback$1$task(new A._FocusableActionDetectorState__updateHighlightMode_closure(this));
    },
    _handleFocusHighlightModeChange$1(mode) {
      if (this._element == null)
        return;
      this._updateHighlightMode$1(mode);
    },
    _handleMouseEnter$1($event) {
      if (!this._actions$_hovering)
        this._mayTriggerCallback$1$task(new A._FocusableActionDetectorState__handleMouseEnter_closure(this));
    },
    _handleMouseExit$1($event) {
      if (this._actions$_hovering)
        this._mayTriggerCallback$1$task(new A._FocusableActionDetectorState__handleMouseExit_closure(this));
    },
    _handleFocusChange$1(focused) {
      var _this = this;
      if (_this._actions$_focused !== focused) {
        _this._mayTriggerCallback$1$task(new A._FocusableActionDetectorState__handleFocusChange_closure(_this, focused));
        _this._widget.toString;
      }
    },
    _mayTriggerCallback$2$oldWidget$task(oldWidget, task) {
      var t3, oldTarget, didShowHoverHighlight, didShowFocusHighlight, doShowHoverHighlight, doShowFocusHighlight, _this = this,
        t1 = new A._FocusableActionDetectorState__mayTriggerCallback_shouldShowHoverHighlight(_this),
        t2 = new A._FocusableActionDetectorState__mayTriggerCallback_shouldShowFocusHighlight(_this, new A._FocusableActionDetectorState__mayTriggerCallback_canRequestFocus(_this));
      if (oldWidget == null) {
        t3 = _this._widget;
        t3.toString;
        oldTarget = t3;
      } else
        oldTarget = oldWidget;
      didShowHoverHighlight = t1.call$1(oldTarget);
      didShowFocusHighlight = t2.call$1(oldTarget);
      if (task != null)
        task.call$0();
      t3 = _this._widget;
      t3.toString;
      doShowHoverHighlight = t1.call$1(t3);
      t3 = _this._widget;
      t3.toString;
      doShowFocusHighlight = t2.call$1(t3);
      if (didShowFocusHighlight !== doShowFocusHighlight)
        _this._widget.onShowFocusHighlight.call$1(doShowFocusHighlight);
      if (didShowHoverHighlight !== doShowHoverHighlight)
        _this._widget.onShowHoverHighlight.call$1(doShowHoverHighlight);
    },
    _mayTriggerCallback$1$task(task) {
      return this._mayTriggerCallback$2$oldWidget$task(null, task);
    },
    _mayTriggerCallback$1$oldWidget(oldWidget) {
      return this._mayTriggerCallback$2$oldWidget$task(oldWidget, null);
    },
    didUpdateWidget$1(oldWidget) {
      this.super$State$didUpdateWidget(oldWidget);
      if (this._widget.enabled !== oldWidget.enabled)
        $.SchedulerBinding__instance.SchedulerBinding__postFrameCallbacks.push(new A._FocusableActionDetectorState_didUpdateWidget_closure(this, oldWidget));
    },
    get$_canRequestFocus() {
      var mode,
        t1 = this._element;
      t1.toString;
      t1 = A.MediaQuery__maybeOf(t1, B._MediaQueryAspect_15);
      mode = t1 == null ? null : t1.navigationMode;
      switch ((mode == null ? B.NavigationMode_0 : mode).index) {
        case 0:
          return this._widget.enabled;
        case 1:
          return true;
      }
    },
    build$1(context) {
      var t3, t4, child, _this = this, _null = null,
        t1 = _this._widget,
        t2 = t1.mouseCursor;
      t1 = t1.focusNode;
      t3 = _this.get$_canRequestFocus();
      t4 = _this._widget;
      child = A.MouseRegion$(A.Focus$(false, t3, t4.child, _null, true, true, t1, true, _null, _this.get$_handleFocusChange(), _null, _null, _null, _null), t2, _this._mouseRegionKey, _this.get$_handleMouseEnter(), _this.get$_handleMouseExit(), _null);
      t1 = t4.enabled;
      if (t1)
        t2 = t4.actions.__js_helper$_length !== 0;
      else
        t2 = false;
      if (t2)
        child = A.Actions$(t4.actions, child);
      if (t1) {
        t1 = t4.shortcuts;
        t1 = t1 != null && t1.get$isNotEmpty(t1);
      } else
        t1 = false;
      if (t1) {
        t1 = _this._widget.shortcuts;
        t1.toString;
        child = A.Shortcuts$(child, _null, t1);
      }
      return child;
    }
  };
  A._FocusableActionDetectorState_initState_closure.prototype = {
    call$1(duration) {
      var t1 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner.focusManager._highlightManager._highlightMode;
      if (t1 == null)
        t1 = A._HighlightModeManager__defaultModeForPlatform();
      this.$this._updateHighlightMode$1(t1);
    },
    $signature: 1
  };
  A._FocusableActionDetectorState__updateHighlightMode_closure.prototype = {
    call$0() {
      var t1 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner.focusManager._highlightManager._highlightMode;
      switch ((t1 == null ? A._HighlightModeManager__defaultModeForPlatform() : t1).index) {
        case 0:
          this.$this._canShowHighlight = false;
          break;
        case 1:
          this.$this._canShowHighlight = true;
          break;
      }
    },
    $signature: 0
  };
  A._FocusableActionDetectorState__handleMouseEnter_closure.prototype = {
    call$0() {
      this.$this._actions$_hovering = true;
    },
    $signature: 0
  };
  A._FocusableActionDetectorState__handleMouseExit_closure.prototype = {
    call$0() {
      this.$this._actions$_hovering = false;
    },
    $signature: 0
  };
  A._FocusableActionDetectorState__handleFocusChange_closure.prototype = {
    call$0() {
      this.$this._actions$_focused = this.focused;
    },
    $signature: 0
  };
  A._FocusableActionDetectorState__mayTriggerCallback_shouldShowHoverHighlight.prototype = {
    call$1(target) {
      var t1 = this.$this;
      return t1._actions$_hovering && target.enabled && t1._canShowHighlight;
    },
    $signature: 52
  };
  A._FocusableActionDetectorState__mayTriggerCallback_canRequestFocus.prototype = {
    call$1(target) {
      var mode,
        t1 = this.$this._element;
      t1.toString;
      t1 = A.MediaQuery__maybeOf(t1, B._MediaQueryAspect_15);
      mode = t1 == null ? null : t1.navigationMode;
      switch ((mode == null ? B.NavigationMode_0 : mode).index) {
        case 0:
          return target.enabled;
        case 1:
          return true;
      }
    },
    $signature: 52
  };
  A._FocusableActionDetectorState__mayTriggerCallback_shouldShowFocusHighlight.prototype = {
    call$1(target) {
      var t1 = this.$this;
      return t1._actions$_focused && t1._canShowHighlight && this.canRequestFocus.call$1(target);
    },
    $signature: 52
  };
  A._FocusableActionDetectorState_didUpdateWidget_closure.prototype = {
    call$1(duration) {
      this.$this._mayTriggerCallback$1$oldWidget(this.oldWidget);
    },
    $signature: 1
  };
  A.VoidCallbackAction.prototype = {
    invoke$1(intent) {
      intent.callback$0();
      return null;
    }
  };
  A.DoNothingAction.prototype = {
    consumesKey$1(intent) {
      return this._consumesKey;
    },
    invoke$1(intent) {
    }
  };
  A.ActivateIntent.prototype = {};
  A.ButtonActivateIntent.prototype = {};
  A.DismissIntent.prototype = {};
  A.DismissAction.prototype = {};
  A.PrioritizedIntents.prototype = {};
  A.PrioritizedAction.prototype = {
    isEnabled$1(intent) {
      var t1, _i, candidateIntent, t2, candidateAction,
        $focus = $.WidgetsBinding__instance.WidgetsBinding__buildOwner.focusManager._primaryFocus;
      if ($focus == null || $focus._context == null)
        return false;
      for (t1 = type$.Intent, _i = 0; _i < 2; ++_i) {
        candidateIntent = B.List_d7X[_i];
        t2 = $focus._context;
        t2.toString;
        candidateAction = A.Actions_maybeFind(t2, candidateIntent, t1);
        if (candidateAction != null && candidateAction.isEnabled$1(candidateIntent)) {
          this.__PrioritizedAction__selectedAction_A = candidateAction;
          this.__PrioritizedAction__selectedIntent_A = candidateIntent;
          return true;
        }
      }
      return false;
    },
    invoke$1(intent) {
      var t2,
        t1 = this.__PrioritizedAction__selectedAction_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t2 = this.__PrioritizedAction__selectedIntent_A;
      t2 === $ && A.throwUnnamedLateFieldNI();
      t1.invoke$1(t2);
    }
  };
  A._OverridableActionMixin.prototype = {
    _invokeOverride$3(overrideAction, intent, context) {
      var $returnValue;
      overrideAction._updateCallingAction$1(this.get$defaultAction());
      $returnValue = overrideAction instanceof A.ContextAction ? overrideAction.invoke$2(intent, context) : overrideAction.invoke$1(intent);
      overrideAction._updateCallingAction$1(null);
      return $returnValue;
    },
    invoke$2(intent, context) {
      var _this = this,
        override = A.Actions__maybeFindWithoutDependingOn(_this.get$lookupContext(), A._instanceType(_this)._precomputed1);
      return override == null ? _this.invokeDefaultAction$3(intent, _this._currentCallingAction, context) : _this._invokeOverride$3(override, intent, context);
    },
    invoke$1(intent) {
      return this.invoke$2(intent, null);
    },
    get$isActionEnabled() {
      var _this = this,
        override = A.Actions_maybeFind(_this.get$lookupContext(), null, A._instanceType(_this)._precomputed1);
      if (override != null) {
        override._updateCallingAction$1(_this.get$defaultAction());
        override.get$isActionEnabled();
        override._updateCallingAction$1(null);
      } else
        _this.get$defaultAction().get$isActionEnabled();
      return true;
    },
    isEnabled$1(intent) {
      var $returnValue, _this = this,
        override = A.Actions__maybeFindWithoutDependingOn(_this.get$lookupContext(), A._instanceType(_this)._precomputed1),
        t1 = override == null;
      if (!t1)
        override._updateCallingAction$1(_this.get$defaultAction());
      $returnValue = (t1 ? _this.get$defaultAction() : override).isEnabled$1(intent);
      if (!t1)
        override._updateCallingAction$1(null);
      return $returnValue;
    },
    consumesKey$1(intent) {
      var isEnabled, _this = this,
        override = A.Actions__maybeFindWithoutDependingOn(_this.get$lookupContext(), A._instanceType(_this)._precomputed1),
        t1 = override == null;
      if (!t1)
        override._updateCallingAction$1(_this.get$defaultAction());
      isEnabled = (t1 ? _this.get$defaultAction() : override).consumesKey$1(intent);
      if (!t1)
        override._updateCallingAction$1(null);
      return isEnabled;
    }
  };
  A._OverridableAction.prototype = {
    invokeDefaultAction$3(intent, fromAction, context) {
      var t1 = this.defaultAction;
      if (fromAction == null)
        return t1.invoke$1(intent);
      else
        return t1.invoke$1(intent);
    },
    get$defaultAction() {
      return this.defaultAction;
    },
    get$lookupContext() {
      return this.lookupContext;
    }
  };
  A._Action_Object_Diagnosticable.prototype = {};
  A._ActionDispatcher_Object_Diagnosticable.prototype = {};
  A._Intent_Object_Diagnosticable.prototype = {};
  A.__OverridableAction_ContextAction__OverridableActionMixin.prototype = {
    _updateCallingAction$1(value) {
      this.super$Action$_updateCallingAction(value);
      this.defaultAction._updateCallingAction$1(value);
    }
  };
  A.AnnotatedRegion.prototype = {
    createRenderObject$1(context) {
      var t1 = new A.RenderAnnotatedRegion(this.value, true, null, A.LayerHandle$(), this.$ti._eval$1("RenderAnnotatedRegion<1>"));
      t1.RenderObject$0();
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      renderObject.set$value(this.value);
      renderObject.set$sized(true);
    }
  };
  A.WidgetsApp.prototype = {
    createState$0() {
      return new A._WidgetsAppState();
    }
  };
  A._WidgetsAppState.prototype = {
    get$_initialRouteName() {
      $.WidgetsBinding__instance.toString;
      $.$get$PlatformDispatcher__instance();
      this._widget.toString;
      return "/";
    },
    initState$0() {
      var _this = this;
      _this.super$State$initState();
      _this._updateRouting$0();
      $.WidgetsBinding__instance.toString;
      $.$get$PlatformDispatcher__instance();
      _this._app$_locale = _this._resolveLocales$2(B.List_empty6, _this._widget.supportedLocales);
      $.WidgetsBinding__instance.WidgetsBinding__observers.push(_this);
    },
    didUpdateWidget$1(oldWidget) {
      this.super$State$didUpdateWidget(oldWidget);
      this._updateRouting$1$oldWidget(oldWidget);
    },
    dispose$0() {
      B.JSArray_methods.remove$1($.WidgetsBinding__instance.WidgetsBinding__observers, this);
      var t1 = this._defaultRouteInformationProvider;
      if (t1 != null)
        t1.dispose$0();
      this.super$State$dispose();
    },
    _clearRouterResource$0() {
      var t1 = this._defaultRouteInformationProvider;
      if (t1 != null)
        t1.dispose$0();
      this._defaultBackButtonDispatcher = this._defaultRouteInformationProvider = null;
    },
    _updateRouting$1$oldWidget(oldWidget) {
      var t1, _this = this;
      _this._widget.toString;
      if (_this.get$_usesNavigator()) {
        _this._clearRouterResource$0();
        t1 = _this._app$_navigator == null;
        if (!t1) {
          _this._widget.toString;
          oldWidget.toString;
        }
        if (t1) {
          _this._widget.toString;
          _this._app$_navigator = new A.GlobalObjectKey(_this, type$.GlobalObjectKey_NavigatorState);
        }
      } else {
        _this._clearRouterResource$0();
        _this._app$_navigator = null;
      }
    },
    _updateRouting$0() {
      return this._updateRouting$1$oldWidget(null);
    },
    get$_usesNavigator() {
      var t1 = this._widget;
      if (t1.home == null) {
        t1 = t1.routes;
        t1 = t1 == null ? null : t1.get$isNotEmpty(t1);
        t1 = t1 === true;
        if (!t1)
          this._widget.toString;
      } else
        t1 = true;
      return t1;
    },
    _onGenerateRoute$1(settings) {
      var _this = this,
        $name = settings.name,
        pageContentBuilder = $name === "/" && _this._widget.home != null ? new A._WidgetsAppState__onGenerateRoute_closure(_this) : _this._widget.routes.$index(0, $name);
      if (pageContentBuilder != null)
        return _this._widget.pageRouteBuilder.call$1$2(settings, pageContentBuilder, type$.dynamic);
      _this._widget.toString;
      return null;
    },
    _onUnknownRoute$1(settings) {
      return this._widget.onUnknownRoute.call$1(settings);
    },
    didPopRoute$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.bool),
        $async$returnValue, $async$self = this, t1, $navigator;
      var $async$didPopRoute$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$self._widget.toString;
              t1 = $async$self._app$_navigator;
              $navigator = t1 == null ? null : t1.get$currentState();
              if ($navigator == null) {
                $async$returnValue = false;
                // goto return
                $async$goto = 1;
                break;
              }
              $async$returnValue = $navigator.maybePop$0();
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$didPopRoute$0, $async$completer);
    },
    didPushRoute$1(route) {
      return this.didPushRoute$body$_WidgetsAppState(route);
    },
    didPushRoute$body$_WidgetsAppState(route) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.bool),
        $async$returnValue, $async$self = this, t1, $navigator;
      var $async$didPushRoute$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$self._widget.toString;
              t1 = $async$self._app$_navigator;
              $navigator = t1 == null ? null : t1.get$currentState();
              if ($navigator == null) {
                $async$returnValue = false;
                // goto return
                $async$goto = 1;
                break;
              }
              t1 = $navigator._routeNamed$1$2$arguments(route, null, type$.nullable_Object);
              t1.toString;
              t1 = A._RouteEntry$(t1, B._RouteLifecycle_3, false, null);
              $navigator._history.push(t1);
              $navigator._flushHistoryUpdates$0();
              $navigator._cancelActivePointers$0();
              $async$returnValue = true;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$didPushRoute$1, $async$completer);
    },
    _resolveLocales$2(preferredLocales, supportedLocales) {
      this._widget.toString;
      return A.basicLocaleListResolution(preferredLocales, supportedLocales);
    },
    build$1(context) {
      var t2, t3, t4, t5, result, t6, t7, t8, t9, _this = this, _null = null, t1 = {};
      t1.routing = null;
      t2 = _this._widget;
      t2.toString;
      if (_this.get$_usesNavigator()) {
        t2 = _this._app$_navigator;
        t3 = _this.get$_initialRouteName();
        t4 = _this._widget;
        t5 = t4.navigatorObservers;
        t5.toString;
        t1.routing = A.FocusScope$(true, new A.Navigator(t3, _this.get$_onGenerateRoute(), _this.get$_onUnknownRoute(), t5, "nav", A.navigator_Navigator_defaultGenerateInitialRoutes$closure(), true, B.Clip_0, t2), "Navigator Scope", _null, _null);
        t2 = t4;
      } else {
        t2 = _this._widget;
        t2.toString;
      }
      t1.result = null;
      result = new A.Builder(new A._WidgetsAppState_build_closure(t1, _this), _null);
      t1.result = result;
      t1.result = A.DefaultTextStyle$(result, _null, B.TextOverflow_0, true, t2.textStyle, _null, _null, B.TextWidthBasis_0);
      t2 = _this._widget;
      t3 = t2.title;
      t2 = t2.color;
      t2 = A.Color$fromARGB(255, t2.get$value() >>> 16 & 255, t2.get$value() >>> 8 & 255, t2.get$value() & 255);
      t1 = t1.result;
      t4 = _this._widget;
      t4.toString;
      t5 = _this._app$_locale;
      t5.toString;
      t6 = A.WidgetsApp_defaultShortcuts();
      t7 = A.LinkedHashMap_LinkedHashMap$of($.$get$WidgetsApp_defaultActions(), type$.Type, type$.Action_Intent);
      t8 = type$.JSArray_of_void_Function_Action_Intent;
      t9 = type$.ObserverList_of_void_Function_Action_Intent;
      t7.$indexSet(0, B.Type_ScrollIntent_Fx9, new A._OverridableAction(new A.ScrollAction(new A.ObserverList(A._setArrayType([], t8), t9)), context, false, false, false, false, new A.ObserverList(A._setArrayType([], t8), t9), type$.ScrollAction._eval$1("_OverridableAction<Action.T>")));
      t8 = type$.JSArray_LocalizationsDelegate_dynamic;
      t9 = A._setArrayType([], t8);
      B.JSArray_methods.addAll$1(t9, _this._widget.localizationsDelegates);
      t9.push(B.C__WidgetsLocalizationsDelegate);
      t8 = A._setArrayType(t9.slice(0), t8);
      return new A.RootRestorationScope(new A.SharedAppData(A.Shortcuts$(new A.DefaultTextEditingShortcuts(A.Actions$(t7, A.FocusTraversalGroup$(new A.TapRegionSurface(new A.ShortcutRegistrar(new A.Localizations(t5, t8, new A.Title(t3, t2, t1, _null), _null), _null), _null), new A.ReadingOrderTraversalPolicy(A.LinkedHashMap_LinkedHashMap$_empty(type$.FocusScopeNode, type$._DirectionalPolicyData)))), _null), "<Default WidgetsApp Shortcuts>", t6), _null), t4.restorationScopeId, _null);
    }
  };
  A._WidgetsAppState__onGenerateRoute_closure.prototype = {
    call$1(context) {
      var t1 = this.$this._widget.home;
      t1.toString;
      return t1;
    },
    $signature: 12
  };
  A._WidgetsAppState_build_closure.prototype = {
    call$1(context) {
      return this.$this._widget.builder.call$2(context, this._box_0.routing);
    },
    $signature: 12
  };
  A.__WidgetsAppState_State_WidgetsBindingObserver.prototype = {};
  A.KeepAliveNotification.prototype = {};
  A.KeepAliveHandle.prototype = {};
  A.AutomaticKeepAliveClientMixin.prototype = {
    _ensureKeepAlive$0() {
      this.AutomaticKeepAliveClientMixin__keepAliveHandle = new A.KeepAliveHandle($.$get$ChangeNotifier__emptyListeners());
      this._element.dispatchNotification$1(new A.KeepAliveNotification());
    },
    updateKeepAlive$0() {
      var t1, _this = this;
      if (_this.get$wantKeepAlive()) {
        if (_this.AutomaticKeepAliveClientMixin__keepAliveHandle == null)
          _this._ensureKeepAlive$0();
      } else {
        t1 = _this.AutomaticKeepAliveClientMixin__keepAliveHandle;
        if (t1 != null) {
          t1.notifyListeners$0();
          t1.super$ChangeNotifier$dispose();
          _this.AutomaticKeepAliveClientMixin__keepAliveHandle = null;
        }
      }
    },
    build$1(context) {
      if (this.get$wantKeepAlive() && this.AutomaticKeepAliveClientMixin__keepAliveHandle == null)
        this._ensureKeepAlive$0();
      return B._NullWidget_null0;
    }
  };
  A._NullWidget.prototype = {
    build$1(context) {
      throw A.wrapException(A.FlutterError_FlutterError("Widgets that mix AutomaticKeepAliveClientMixin into their State must call super.build() but must ignore the return value of the superclass."));
    }
  };
  A._UbiquitousInheritedElement.prototype = {
    setDependencies$2(dependent, value) {
    },
    notifyClients$1(oldWidget) {
      A._UbiquitousInheritedElement__recurseChildren(this, new A._UbiquitousInheritedElement_notifyClients_closure(this, oldWidget));
    }
  };
  A._UbiquitousInheritedElement_notifyClients_closure.prototype = {
    call$1(element) {
      var t1 = element._dependencies;
      if (t1 != null && t1.contains$1(0, this.$this))
        element.didChangeDependencies$0();
    },
    $signature: 4
  };
  A._UbiquitousInheritedElement__recurseChildren_closure.prototype = {
    call$1(child) {
      A._UbiquitousInheritedElement__recurseChildren(child, this.visitor);
    },
    $signature: 4
  };
  A._UbiquitousInheritedWidget.prototype = {
    createElement$0() {
      return new A._UbiquitousInheritedElement(A.HashMap_HashMap(type$.Element, type$.nullable_Object), this, B._ElementLifecycle_0);
    }
  };
  A.Directionality.prototype = {
    updateShouldNotify$1(oldWidget) {
      return this.textDirection !== oldWidget.textDirection;
    }
  };
  A.CustomPaint.prototype = {
    createRenderObject$1(context) {
      var t1 = new A.RenderCustomPaint(this.painter, this.foregroundPainter, this.size, false, false, null, A.LayerHandle$());
      t1.RenderObject$0();
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      renderObject.set$painter(this.painter);
      renderObject.set$foregroundPainter(this.foregroundPainter);
      renderObject.set$preferredSize(this.size);
      renderObject.willChange = renderObject.isComplex = false;
    },
    didUnmountRenderObject$1(renderObject) {
      renderObject.set$painter(null);
      renderObject.set$foregroundPainter(null);
    }
  };
  A.ClipRect.prototype = {
    createRenderObject$1(context) {
      var t1 = new A.RenderClipRect(null, this.clipBehavior, null, A.LayerHandle$());
      t1.RenderObject$0();
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      renderObject.set$clipper(null);
      renderObject.set$clipBehavior(this.clipBehavior);
    },
    didUnmountRenderObject$1(renderObject) {
      renderObject.set$clipper(null);
    }
  };
  A.ClipPath.prototype = {
    createRenderObject$1(context) {
      var t1 = new A.RenderClipPath(this.clipper, this.clipBehavior, null, A.LayerHandle$());
      t1.RenderObject$0();
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      renderObject.set$clipper(this.clipper);
      renderObject.set$clipBehavior(this.clipBehavior);
    },
    didUnmountRenderObject$1(renderObject) {
      renderObject.set$clipper(null);
    }
  };
  A.PhysicalModel.prototype = {
    createRenderObject$1(context) {
      var _this = this,
        t1 = new A.RenderPhysicalModel(_this.shape, _this.borderRadius, _this.elevation, _this.shadowColor, _this.color, null, _this.clipBehavior, null, A.LayerHandle$());
      t1.RenderObject$0();
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      var _this = this;
      renderObject.set$shape(_this.shape);
      renderObject.set$clipBehavior(_this.clipBehavior);
      renderObject.set$borderRadius(_this.borderRadius);
      renderObject.set$elevation(_this.elevation);
      renderObject.set$color(_this.color);
      renderObject.set$shadowColor(_this.shadowColor);
    }
  };
  A.PhysicalShape.prototype = {
    createRenderObject$1(context) {
      var _this = this,
        t1 = new A.RenderPhysicalShape(_this.elevation, _this.shadowColor, _this.color, _this.clipper, _this.clipBehavior, null, A.LayerHandle$());
      t1.RenderObject$0();
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      var _this = this;
      renderObject.set$clipper(_this.clipper);
      renderObject.set$clipBehavior(_this.clipBehavior);
      renderObject.set$elevation(_this.elevation);
      renderObject.set$color(_this.color);
      renderObject.set$shadowColor(_this.shadowColor);
    }
  };
  A.Transform.prototype = {
    createRenderObject$1(context) {
      var _this = this,
        t1 = A.Directionality_maybeOf(context),
        t2 = new A.RenderTransform(_this.transformHitTests, null, A.LayerHandle$());
      t2.RenderObject$0();
      t2.set$child(null);
      t2.set$transform(_this.transform);
      t2.set$alignment(_this.alignment);
      t2.set$textDirection(t1);
      t2.set$filterQuality(_this.filterQuality);
      t2.set$origin(null);
      return t2;
    },
    updateRenderObject$2(context, renderObject) {
      var _this = this;
      renderObject.set$transform(_this.transform);
      renderObject.set$origin(null);
      renderObject.set$alignment(_this.alignment);
      renderObject.set$textDirection(A.Directionality_maybeOf(context));
      renderObject.transformHitTests = _this.transformHitTests;
      renderObject.set$filterQuality(_this.filterQuality);
    }
  };
  A.CompositedTransformTarget.prototype = {
    createRenderObject$1(context) {
      var t1 = new A.RenderLeaderLayer(this.link, null, A.LayerHandle$());
      t1.RenderObject$0();
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      renderObject.set$link(this.link);
    }
  };
  A.CompositedTransformFollower.prototype = {
    createRenderObject$1(context) {
      var t1 = new A.RenderFollowerLayer(this.link, true, B.Offset_0_0, B.Alignment_m1_m1, B.Alignment_m1_m1, null, A.LayerHandle$());
      t1.RenderObject$0();
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      renderObject.set$link(this.link);
      renderObject.set$showWhenUnlinked(true);
      renderObject.set$offset(B.Offset_0_0);
      renderObject.set$leaderAnchor(B.Alignment_m1_m1);
      renderObject.set$followerAnchor(B.Alignment_m1_m1);
    }
  };
  A.FractionalTranslation.prototype = {
    createRenderObject$1(context) {
      var t1 = new A.RenderFractionalTranslation(this.translation, this.transformHitTests, null, A.LayerHandle$());
      t1.RenderObject$0();
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      renderObject.set$translation(this.translation);
      renderObject.transformHitTests = this.transformHitTests;
    }
  };
  A.Padding.prototype = {
    createRenderObject$1(context) {
      var t1 = new A.RenderPadding(this.padding, A.Directionality_maybeOf(context), null, A.LayerHandle$());
      t1.RenderObject$0();
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      renderObject.set$padding(this.padding);
      renderObject.set$textDirection(A.Directionality_maybeOf(context));
    }
  };
  A.Align.prototype = {
    createRenderObject$1(context) {
      var t1 = new A.RenderPositionedBox(this.widthFactor, this.heightFactor, this.alignment, A.Directionality_maybeOf(context), null, A.LayerHandle$());
      t1.RenderObject$0();
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      renderObject.set$alignment(this.alignment);
      renderObject.set$widthFactor(this.widthFactor);
      renderObject.set$heightFactor(this.heightFactor);
      renderObject.set$textDirection(A.Directionality_maybeOf(context));
    }
  };
  A.Center.prototype = {};
  A.CustomSingleChildLayout.prototype = {
    createRenderObject$1(context) {
      var t1 = new A.RenderCustomSingleChildLayoutBox(this.delegate, null, A.LayerHandle$());
      t1.RenderObject$0();
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      renderObject.set$delegate(this.delegate);
    }
  };
  A.LayoutId.prototype = {
    applyParentData$1(renderObject) {
      var t2, targetParent,
        t1 = renderObject.parentData;
      t1.toString;
      type$.MultiChildLayoutParentData._as(t1);
      t2 = this.id;
      if (t1.id !== t2) {
        t1.id = t2;
        targetParent = renderObject._node$_parent;
        if (targetParent instanceof A.RenderObject)
          targetParent.markNeedsLayout$0();
      }
    }
  };
  A.CustomMultiChildLayout.prototype = {
    createRenderObject$1(context) {
      var t1 = new A.RenderCustomMultiChildLayoutBox(this.delegate, 0, null, null, A.LayerHandle$());
      t1.RenderObject$0();
      t1.addAll$1(0, null);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      renderObject.set$delegate(this.delegate);
    }
  };
  A.SizedBox.prototype = {
    createRenderObject$1(context) {
      return A.RenderConstrainedBox$(A.BoxConstraints$tightFor(this.height, this.width));
    },
    updateRenderObject$2(context, renderObject) {
      renderObject.set$additionalConstraints(A.BoxConstraints$tightFor(this.height, this.width));
    },
    toStringShort$0() {
      var type, _this = this,
        t1 = _this.width;
      if (t1 === 1 / 0 && _this.height === 1 / 0)
        type = "SizedBox.expand";
      else
        type = t1 === 0 && _this.height === 0 ? "SizedBox.shrink" : "SizedBox";
      t1 = _this.key;
      return t1 == null ? type : type + "-" + t1.toString$0(0);
    }
  };
  A.ConstrainedBox.prototype = {
    createRenderObject$1(context) {
      return A.RenderConstrainedBox$(this.constraints);
    },
    updateRenderObject$2(context, renderObject) {
      renderObject.set$additionalConstraints(this.constraints);
    }
  };
  A.LimitedBox.prototype = {
    createRenderObject$1(context) {
      var t1 = new A.RenderLimitedBox(this.maxWidth, this.maxHeight, null, A.LayerHandle$());
      t1.RenderObject$0();
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      renderObject.set$maxWidth(this.maxWidth);
      renderObject.set$maxHeight(this.maxHeight);
    }
  };
  A.Offstage.prototype = {
    createRenderObject$1(context) {
      var t1 = new A.RenderOffstage(this.offstage, null, A.LayerHandle$());
      t1.RenderObject$0();
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      renderObject.set$offstage(this.offstage);
    },
    createElement$0() {
      return new A._OffstageElement(this, B._ElementLifecycle_0);
    }
  };
  A._OffstageElement.prototype = {};
  A.Baseline.prototype = {
    createRenderObject$1(context) {
      var t1 = new A.RenderBaseline(this.baseline, this.baselineType, null, A.LayerHandle$());
      t1.RenderObject$0();
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      renderObject.set$baseline(this.baseline);
      renderObject.set$baselineType(this.baselineType);
    }
  };
  A.Stack.prototype = {
    createRenderObject$1(context) {
      var t1 = A.Directionality_maybeOf(context);
      t1 = new A.RenderStack(this.alignment, t1, this.fit, B.Clip_1, A.LayerHandle$(), 0, null, null, A.LayerHandle$());
      t1.RenderObject$0();
      t1.addAll$1(0, null);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      var t1;
      renderObject.set$alignment(this.alignment);
      t1 = A.Directionality_maybeOf(context);
      renderObject.set$textDirection(t1);
      t1 = this.fit;
      if (renderObject._fit !== t1) {
        renderObject._fit = t1;
        renderObject.markNeedsLayout$0();
      }
      if (B.Clip_1 !== renderObject._stack$_clipBehavior) {
        renderObject._stack$_clipBehavior = B.Clip_1;
        renderObject.markNeedsPaint$0();
        renderObject.markNeedsSemanticsUpdate$0();
      }
    }
  };
  A.Positioned.prototype = {
    applyParentData$1(renderObject) {
      var t2, needsLayout, targetParent, _this = this,
        t1 = renderObject.parentData;
      t1.toString;
      type$.StackParentData._as(t1);
      t2 = _this.left;
      needsLayout = t1.left != t2;
      if (needsLayout)
        t1.left = t2;
      t2 = _this.top;
      if (t1.top !== t2) {
        t1.top = t2;
        needsLayout = true;
      }
      t2 = _this.right;
      if (t1.right != t2) {
        t1.right = t2;
        needsLayout = true;
      }
      t2 = _this.bottom;
      if (t1.bottom != t2) {
        t1.bottom = t2;
        needsLayout = true;
      }
      t2 = _this.width;
      if (t1.width != t2) {
        t1.width = t2;
        needsLayout = true;
      }
      if (needsLayout) {
        targetParent = renderObject._node$_parent;
        if (targetParent instanceof A.RenderObject)
          targetParent.markNeedsLayout$0();
      }
    }
  };
  A.PositionedDirectional.prototype = {
    build$1(context) {
      var _this = this;
      return A.Positioned_Positioned$directional(_this.bottom, _this.child, null, null, _this.start, context.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality).textDirection, _this.top, _this.width);
    }
  };
  A.Flex.prototype = {
    get$_needTextDirection() {
      switch (this.direction.index) {
        case 0:
          return true;
        case 1:
          var t1 = this.crossAxisAlignment;
          return t1 === B.CrossAxisAlignment_0 || t1 === B.CrossAxisAlignment_1;
      }
    },
    getEffectiveTextDirection$1(context) {
      var t1 = this.textDirection;
      t1 = this.get$_needTextDirection() ? A.Directionality_maybeOf(context) : null;
      return t1;
    },
    createRenderObject$1(context) {
      var _this = this, _null = null,
        t1 = new A.RenderFlex(_this.direction, _this.mainAxisAlignment, _this.mainAxisSize, _this.crossAxisAlignment, _this.getEffectiveTextDirection$1(context), _this.verticalDirection, _this.textBaseline, B.Clip_0, A.LayerHandle$(), A.List_List$filled(4, A.TextPainter$(_null, _null, _null, _null, _null, B.TextAlign_4, B.TextDirection_1, _null, 1, B.TextWidthBasis_0), false, type$.TextPainter), true, 0, _null, _null, A.LayerHandle$());
      t1.RenderObject$0();
      t1.addAll$1(0, _null);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      var _this = this,
        t1 = _this.direction;
      if (renderObject._flex$_direction !== t1) {
        renderObject._flex$_direction = t1;
        renderObject.markNeedsLayout$0();
      }
      t1 = _this.mainAxisAlignment;
      if (renderObject._mainAxisAlignment !== t1) {
        renderObject._mainAxisAlignment = t1;
        renderObject.markNeedsLayout$0();
      }
      t1 = _this.mainAxisSize;
      if (renderObject._mainAxisSize !== t1) {
        renderObject._mainAxisSize = t1;
        renderObject.markNeedsLayout$0();
      }
      t1 = _this.crossAxisAlignment;
      if (renderObject._crossAxisAlignment !== t1) {
        renderObject._crossAxisAlignment = t1;
        renderObject.markNeedsLayout$0();
      }
      t1 = _this.getEffectiveTextDirection$1(context);
      if (renderObject._flex$_textDirection != t1) {
        renderObject._flex$_textDirection = t1;
        renderObject.markNeedsLayout$0();
      }
      t1 = _this.verticalDirection;
      if (renderObject._verticalDirection !== t1) {
        renderObject._verticalDirection = t1;
        renderObject.markNeedsLayout$0();
      }
      if (B.Clip_0 !== renderObject._flex$_clipBehavior) {
        renderObject._flex$_clipBehavior = B.Clip_0;
        renderObject.markNeedsPaint$0();
        renderObject.markNeedsSemanticsUpdate$0();
      }
    }
  };
  A.Row.prototype = {};
  A.Column.prototype = {};
  A.Flexible.prototype = {
    applyParentData$1(renderObject) {
      var t2, needsLayout, targetParent,
        t1 = renderObject.parentData;
      t1.toString;
      type$.FlexParentData._as(t1);
      t2 = this.flex;
      needsLayout = t1.flex !== t2;
      if (needsLayout)
        t1.flex = t2;
      t2 = this.fit;
      if (t1.fit !== t2) {
        t1.fit = t2;
        needsLayout = true;
      }
      if (needsLayout) {
        targetParent = renderObject._node$_parent;
        if (targetParent instanceof A.RenderObject)
          targetParent.markNeedsLayout$0();
      }
    }
  };
  A.Expanded.prototype = {};
  A.RichText.prototype = {
    createRenderObject$1(context) {
      var t3, t4, t5, _this = this, _null = null,
        t1 = _this.text,
        t2 = _this.textDirection;
      if (t2 == null)
        t2 = context.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality).textDirection;
      t3 = _this.overflow;
      t4 = A.Localizations_maybeLocaleOf(context);
      t5 = t3 === B.TextOverflow_2 ? "\u2026" : _null;
      t3 = new A.RenderParagraph(A.TextPainter$(t5, t4, _this.maxLines, _this.strutStyle, t1, _this.textAlign, t2, _this.textHeightBehavior, _this.textScaleFactor, _this.textWidthBasis), _this.softWrap, t3, _this.selectionColor, false, 0, _null, _null, A.LayerHandle$());
      t3.RenderObject$0();
      t3.addAll$1(0, _null);
      t3._extractPlaceholderSpans$1(t1);
      t3.set$registrar(_this.selectionRegistrar);
      return t3;
    },
    updateRenderObject$2(context, renderObject) {
      var t1, _this = this;
      renderObject.set$text(_this.text);
      renderObject.set$textAlign(_this.textAlign);
      t1 = _this.textDirection;
      renderObject.set$textDirection(t1 == null ? context.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality).textDirection : t1);
      renderObject.set$softWrap(_this.softWrap);
      renderObject.set$overflow(_this.overflow);
      renderObject.set$textScaleFactor(_this.textScaleFactor);
      renderObject.set$maxLines(_this.maxLines);
      renderObject.set$strutStyle(_this.strutStyle);
      renderObject.set$textWidthBasis(_this.textWidthBasis);
      renderObject.set$textHeightBehavior(_this.textHeightBehavior);
      t1 = A.Localizations_maybeLocaleOf(context);
      renderObject.set$locale(t1);
      renderObject.set$registrar(_this.selectionRegistrar);
      renderObject.set$selectionColor(_this.selectionColor);
    }
  };
  A.RichText__extractChildren_closure.prototype = {
    call$1(span) {
      return true;
    },
    $signature: 45
  };
  A.Listener.prototype = {
    createRenderObject$1(context) {
      var _this = this, _null = null,
        t1 = new A.RenderPointerListener(_this.onPointerDown, _null, _this.onPointerUp, _null, _this.onPointerCancel, _this.onPointerPanZoomStart, _null, _null, _this.onPointerSignal, _this.behavior, _null, A.LayerHandle$());
      t1.RenderObject$0();
      t1.set$child(_null);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      var _this = this;
      renderObject.onPointerDown = _this.onPointerDown;
      renderObject.onPointerMove = null;
      renderObject.onPointerUp = _this.onPointerUp;
      renderObject.onPointerHover = null;
      renderObject.onPointerCancel = _this.onPointerCancel;
      renderObject.onPointerPanZoomStart = _this.onPointerPanZoomStart;
      renderObject.onPointerPanZoomEnd = renderObject.onPointerPanZoomUpdate = null;
      renderObject.onPointerSignal = _this.onPointerSignal;
      renderObject.behavior = _this.behavior;
    }
  };
  A.MouseRegion.prototype = {
    createRenderObject$1(context) {
      var _this = this,
        t1 = new A.RenderMouseRegion(true, _this.onEnter, _this.onHover, _this.onExit, _this.cursor, B.HitTestBehavior_1, null, A.LayerHandle$());
      t1.RenderObject$0();
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      var t1, _this = this;
      renderObject.onEnter = _this.onEnter;
      renderObject.onHover = _this.onHover;
      renderObject.onExit = _this.onExit;
      t1 = _this.cursor;
      if (!renderObject._cursor.$eq(0, t1)) {
        renderObject._cursor = t1;
        renderObject.markNeedsPaint$0();
      }
      if (renderObject.behavior !== B.HitTestBehavior_1) {
        renderObject.behavior = B.HitTestBehavior_1;
        renderObject.markNeedsPaint$0();
      }
    }
  };
  A.RepaintBoundary.prototype = {
    createRenderObject$1(context) {
      var t1 = new A.RenderRepaintBoundary(null, A.LayerHandle$());
      t1.RenderObject$0();
      t1.set$child(null);
      return t1;
    }
  };
  A.IgnorePointer.prototype = {
    createRenderObject$1(context) {
      var t1 = new A.RenderIgnorePointer(this.ignoring, this.ignoringSemantics, null, A.LayerHandle$());
      t1.RenderObject$0();
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      renderObject.set$ignoring(this.ignoring);
      renderObject.set$ignoringSemantics(this.ignoringSemantics);
    }
  };
  A.AbsorbPointer.prototype = {
    createRenderObject$1(context) {
      var t1 = new A.RenderAbsorbPointer(false, null, null, A.LayerHandle$());
      t1.RenderObject$0();
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      renderObject.set$absorbing(false);
      renderObject.set$ignoringSemantics(null);
    }
  };
  A.Semantics.prototype = {
    createRenderObject$1(context) {
      var _this = this,
        t1 = new A.RenderSemanticsAnnotations(_this.properties, _this.container, _this.explicitChildNodes, _this.excludeSemantics, _this._getTextDirection$1(context), null, A.LayerHandle$());
      t1.RenderObject$0();
      t1.set$child(null);
      t1._updateAttributedFields$1(t1._properties);
      return t1;
    },
    _getTextDirection$1(context) {
      var containsText,
        t1 = this.properties,
        t2 = t1.textDirection;
      if (t2 != null)
        return t2;
      containsText = true;
      if (t1.label == null) {
        if (t1.value == null)
          t1 = t1.tooltip != null;
        else
          t1 = containsText;
        containsText = t1;
      }
      if (!containsText)
        return null;
      return A.Directionality_maybeOf(context);
    },
    updateRenderObject$2(context, renderObject) {
      var _this = this;
      renderObject.set$container(_this.container);
      renderObject.set$explicitChildNodes(_this.explicitChildNodes);
      renderObject.set$excludeSemantics(_this.excludeSemantics);
      renderObject.set$properties(_this.properties);
      renderObject.set$textDirection(_this._getTextDirection$1(context));
    }
  };
  A.BlockSemantics.prototype = {
    createRenderObject$1(context) {
      var t1 = new A.RenderBlockSemantics(true, null, A.LayerHandle$());
      t1.RenderObject$0();
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      renderObject.set$blocking(true);
    }
  };
  A.ExcludeSemantics.prototype = {
    createRenderObject$1(context) {
      var t1 = new A.RenderExcludeSemantics(this.excluding, null, A.LayerHandle$());
      t1.RenderObject$0();
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      renderObject.set$excluding(this.excluding);
    }
  };
  A.IndexedSemantics.prototype = {
    createRenderObject$1(context) {
      var t1 = new A.RenderIndexedSemantics(this.index, null, A.LayerHandle$());
      t1.RenderObject$0();
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      renderObject.set$index(this.index);
    }
  };
  A.KeyedSubtree.prototype = {
    build$1(context) {
      return this.child;
    }
  };
  A.Builder.prototype = {
    build$1(context) {
      return this.builder.call$1(context);
    }
  };
  A.ColoredBox.prototype = {
    createRenderObject$1(context) {
      var t1 = new A._RenderColoredBox(this.color, B.HitTestBehavior_1, null, A.LayerHandle$());
      t1.RenderObject$0();
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      type$._RenderColoredBox._as(renderObject).set$color(this.color);
    }
  };
  A._RenderColoredBox.prototype = {
    set$color(value) {
      if (value.$eq(0, this._basic$_color))
        return;
      this._basic$_color = value;
      this.markNeedsPaint$0();
    },
    paint$2(context, offset) {
      var t2, t3, t4, t5, t6, _this = this,
        t1 = _this._size;
      if (t1._dx > 0 && t1._dy > 0) {
        t1 = context.get$canvas();
        t2 = _this._size;
        t3 = offset._dx;
        t4 = offset._dy;
        t5 = t2._dx;
        t2 = t2._dy;
        t6 = A.Paint$();
        t6.set$color(_this._basic$_color);
        t1.drawRect$2(new A.Rect(t3, t4, t3 + t5, t4 + t2), t6);
      }
      t1 = _this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        context.paintChild$2(t1, offset);
    }
  };
  A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_dispatchEvent_closure.prototype = {
    call$0() {
      var t2, result, _this = this,
        t1 = _this.hitTestResult;
      if (t1 == null || type$.PointerMoveEvent._is(_this.event)) {
        t1 = _this.$this.RendererBinding___RendererBinding__pipelineOwner_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
        t1 = t1._rootNode;
        t1.toString;
        t2 = _this.event.get$position();
        result = A.BoxHitTestResult$();
        t1.hitTest$2$position(result, t2);
        t1 = result;
      }
      return t1;
    },
    $signature: 180
  };
  A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_initInstances_closure.prototype = {
    call$1(message) {
      var t1 = message == null ? A._asObject(message) : message;
      return this.$this.handleSystemMessage$1(t1);
    },
    $signature: 181
  };
  A.WidgetsBindingObserver.prototype = {
    didPopRoute$0() {
      return A.Future_Future$value(false, type$.bool);
    },
    didPushRoute$1(route) {
      return A.Future_Future$value(false, type$.bool);
    },
    didPushRouteInformation$1(routeInformation) {
      var t1 = routeInformation.location;
      t1.toString;
      return this.didPushRoute$1(t1);
    },
    didChangeMetrics$0() {
    }
  };
  A.WidgetsBinding.prototype = {
    handlePopRoute$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, t1, t2, _i;
      var $async$handlePopRoute$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = A.List_List$_of($async$self.WidgetsBinding__observers, type$.WidgetsBindingObserver);
              t2 = t1.length;
              _i = 0;
            case 3:
              // for condition
              if (!(_i < t1.length)) {
                // goto after for
                $async$goto = 5;
                break;
              }
              $async$goto = 6;
              return A._asyncAwait(t1[_i].didPopRoute$0(), $async$handlePopRoute$0);
            case 6:
              // returning from await.
              if ($async$result) {
                // goto return
                $async$goto = 1;
                break;
              }
            case 4:
              // for update
              t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i;
              // goto for condition
              $async$goto = 3;
              break;
            case 5:
              // after for
              A.SystemNavigator_pop();
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$handlePopRoute$0, $async$completer);
    },
    handlePushRoute$1(route) {
      return this.handlePushRoute$body$WidgetsBinding(route);
    },
    handlePushRoute$body$WidgetsBinding(route) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, t1, t2, _i;
      var $async$handlePushRoute$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = A.List_List$_of($async$self.WidgetsBinding__observers, type$.WidgetsBindingObserver);
              t2 = t1.length;
              _i = 0;
            case 3:
              // for condition
              if (!(_i < t1.length)) {
                // goto after for
                $async$goto = 5;
                break;
              }
              $async$goto = 6;
              return A._asyncAwait(t1[_i].didPushRoute$1(route), $async$handlePushRoute$1);
            case 6:
              // returning from await.
              if ($async$result) {
                // goto return
                $async$goto = 1;
                break;
              }
            case 4:
              // for update
              t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i;
              // goto for condition
              $async$goto = 3;
              break;
            case 5:
              // after for
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$handlePushRoute$1, $async$completer);
    },
    _handlePushRouteInformation$1(routeArguments) {
      return this._handlePushRouteInformation$body$WidgetsBinding(routeArguments);
    },
    _handlePushRouteInformation$body$WidgetsBinding(routeArguments) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, t1, t2, _i;
      var $async$_handlePushRouteInformation$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = A.List_List$_of($async$self.WidgetsBinding__observers, type$.WidgetsBindingObserver);
              t2 = t1.length;
              _i = 0;
            case 3:
              // for condition
              if (!(_i < t1.length)) {
                // goto after for
                $async$goto = 5;
                break;
              }
              $async$goto = 6;
              return A._asyncAwait(t1[_i].didPushRouteInformation$1(new A.RouteInformation(A._asString(routeArguments.$index(0, "location")), routeArguments.$index(0, "state"))), $async$_handlePushRouteInformation$1);
            case 6:
              // returning from await.
              if ($async$result) {
                // goto return
                $async$goto = 1;
                break;
              }
            case 4:
              // for update
              t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i;
              // goto for condition
              $async$goto = 3;
              break;
            case 5:
              // after for
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$_handlePushRouteInformation$1, $async$completer);
    },
    _handleNavigationInvocation$1(methodCall) {
      switch (methodCall.method) {
        case "popRoute":
          return this.handlePopRoute$0();
        case "pushRoute":
          return this.handlePushRoute$1(A._asString(methodCall.$arguments));
        case "pushRouteInformation":
          return this._handlePushRouteInformation$1(type$.Map_dynamic_dynamic._as(methodCall.$arguments));
      }
      return A.Future_Future$value(null, type$.dynamic);
    },
    _handleBuildScheduled$0() {
      this.ensureVisualUpdate$0();
    },
    scheduleAttachRootWidget$1(rootWidget) {
      A.Timer_Timer(B.Duration_0, new A.WidgetsBinding_scheduleAttachRootWidget_closure(this, rootWidget));
    }
  };
  A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_drawFrame_closure.prototype = {
    call$1(timings) {
      var t2, t3,
        t1 = $.SchedulerBinding__instance;
      t1.toString;
      t2 = this._box_0;
      t3 = t2.firstFrameCallback;
      t3.toString;
      t1.removeTimingsCallback$1(t3);
      t2.firstFrameCallback = null;
      this.$this.WidgetsBinding__firstFrameCompleter.complete$0();
    },
    $signature: 83
  };
  A.WidgetsBinding_scheduleAttachRootWidget_closure.prototype = {
    call$0() {
      var t3, t4,
        t1 = this.$this,
        t2 = t1.WidgetsBinding__renderViewElement;
      t1.WidgetsBinding__readyToProduceFrames = true;
      t3 = t1.RendererBinding___RendererBinding__pipelineOwner_A;
      t3 === $ && A.throwUnnamedLateFieldNI();
      t3 = t3._rootNode;
      t3.toString;
      t4 = t1.WidgetsBinding__buildOwner;
      t4.toString;
      t1.WidgetsBinding__renderViewElement = new A.RenderObjectToWidgetAdapter(this.rootWidget, t3, "[root]", new A.GlobalObjectKey(t3, type$.GlobalObjectKey_State_StatefulWidget), type$.RenderObjectToWidgetAdapter_RenderBox).attachToRenderTree$2(t4, type$.nullable_RenderObjectToWidgetElement_RenderBox._as(t2));
      if (t2 == null)
        $.SchedulerBinding__instance.ensureVisualUpdate$0();
    },
    $signature: 0
  };
  A.RenderObjectToWidgetAdapter.prototype = {
    createElement$0() {
      return new A.RenderObjectToWidgetElement(this, B._ElementLifecycle_0, this.$ti._eval$1("RenderObjectToWidgetElement<1>"));
    },
    createRenderObject$1(context) {
      return this.container;
    },
    updateRenderObject$2(context, renderObject) {
    },
    attachToRenderTree$2(owner, element) {
      var t2, t1 = {};
      t1.element = element;
      if (element == null) {
        owner.lockState$1(new A.RenderObjectToWidgetAdapter_attachToRenderTree_closure(t1, this, owner));
        t2 = t1.element;
        t2.toString;
        owner.buildScope$2(t2, new A.RenderObjectToWidgetAdapter_attachToRenderTree_closure0(t1));
      } else {
        element._newWidget = this;
        element.markNeedsBuild$0();
      }
      t1 = t1.element;
      t1.toString;
      return t1;
    },
    toStringShort$0() {
      return this.debugShortDescription;
    }
  };
  A.RenderObjectToWidgetAdapter_attachToRenderTree_closure.prototype = {
    call$0() {
      var t1 = this.$this,
        element = A.RenderObjectToWidgetElement$(t1, t1.$ti._precomputed1);
      this._box_0.element = element;
      element._owner = this.owner;
    },
    $signature: 0
  };
  A.RenderObjectToWidgetAdapter_attachToRenderTree_closure0.prototype = {
    call$0() {
      var t1 = this._box_0.element;
      t1.toString;
      t1.super$RootRenderObjectElement$mount(null, null);
      t1._rebuild$0();
    },
    $signature: 0
  };
  A.RenderObjectToWidgetElement.prototype = {
    visitChildren$1(visitor) {
      var t1 = this._child;
      if (t1 != null)
        visitor.call$1(t1);
    },
    forgetChild$1(child) {
      this._child = null;
      this.super$Element$forgetChild(child);
    },
    mount$2($parent, newSlot) {
      this.super$RootRenderObjectElement$mount($parent, newSlot);
      this._rebuild$0();
    },
    update$1(newWidget) {
      this.super$RenderObjectElement$update(newWidget);
      this._rebuild$0();
    },
    performRebuild$0() {
      var _this = this,
        t1 = _this._newWidget;
      if (t1 != null) {
        _this._newWidget = null;
        _this.super$RenderObjectElement$update(_this.$ti._eval$1("RenderObjectToWidgetAdapter<1>")._as(t1));
        _this._rebuild$0();
      }
      _this.super$RenderObjectElement$performRebuild();
    },
    _rebuild$0() {
      var exception, stack, details, error, t1, t2, exception0, _this = this;
      try {
        t1 = _this._child;
        t2 = _this._widget;
        t2.toString;
        _this._child = _this.updateChild$3(t1, _this.$ti._eval$1("RenderObjectToWidgetAdapter<1>")._as(t2).child, B.C_Object);
      } catch (exception0) {
        exception = A.unwrapException(exception0);
        stack = A.getTraceFromException(exception0);
        t1 = A.ErrorDescription$("attaching to the render tree");
        details = new A.FlutterErrorDetails(exception, stack, "widgets library", t1, null, false);
        A.FlutterError_reportError(details);
        error = A.ErrorWidget__defaultErrorWidgetBuilder(details);
        _this._child = _this.updateChild$3(null, error, B.C_Object);
      }
    },
    get$renderObject() {
      return this.$ti._eval$1("RenderObjectWithChildMixin<1>")._as(A.RenderObjectElement.prototype.get$renderObject.call(this));
    },
    insertRenderObjectChild$2(child, slot) {
      var t1 = this.$ti;
      t1._eval$1("RenderObjectWithChildMixin<1>")._as(A.RenderObjectElement.prototype.get$renderObject.call(this)).set$child(t1._precomputed1._as(child));
    },
    moveRenderObjectChild$3(child, oldSlot, newSlot) {
    },
    removeRenderObjectChild$2(child, slot) {
      this.$ti._eval$1("RenderObjectWithChildMixin<1>")._as(A.RenderObjectElement.prototype.get$renderObject.call(this)).set$child(null);
    }
  };
  A.WidgetsFlutterBinding.prototype = {$isHitTestTarget: 1};
  A._WidgetsFlutterBinding_BindingBase_GestureBinding.prototype = {
    initInstances$0() {
      this.super$BindingBase$initInstances();
      $.GestureBinding__instance = this;
      $.$get$PlatformDispatcher__instance();
    },
    unlocked$0() {
      this.super$BindingBase$unlocked();
      this._flushPointerEventQueue$0();
    }
  };
  A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding.prototype = {
    initInstances$0() {
      this.super$_WidgetsFlutterBinding_BindingBase_GestureBinding$initInstances();
      $.SchedulerBinding__instance = this;
    },
    initServiceExtensions$0() {
      this.super$BindingBase$initServiceExtensions();
    }
  };
  A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding.prototype = {
    initInstances$0() {
      var t1, t2, _this = this;
      _this.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding$initInstances();
      $.ServicesBinding__instance = _this;
      _this.ServicesBinding___ServicesBinding__defaultBinaryMessenger_F !== $ && A.throwUnnamedLateFieldAI();
      _this.ServicesBinding___ServicesBinding__defaultBinaryMessenger_F = B.C__DefaultBinaryMessenger;
      t1 = new A.RestorationManager(A.LinkedHashSet_LinkedHashSet$_empty(type$.RestorationBucket), $.$get$ChangeNotifier__emptyListeners());
      B.OptionalMethodChannel_02D.setMethodCallHandler$1(t1.get$_methodHandler());
      _this.ServicesBinding___ServicesBinding__restorationManager_A = t1;
      t1 = type$.PhysicalKeyboardKey;
      t2 = new A.HardwareKeyboard(A.LinkedHashMap_LinkedHashMap$_empty(t1, type$.LogicalKeyboardKey), A.LinkedHashSet_LinkedHashSet$_empty(type$.KeyboardLockMode), A._setArrayType([], type$.JSArray_of_bool_Function_KeyEvent));
      _this.ServicesBinding___ServicesBinding__keyboard_F !== $ && A.throwUnnamedLateFieldAI();
      _this.ServicesBinding___ServicesBinding__keyboard_F = t2;
      t1 = new A.KeyEventManager(t2, $.$get$RawKeyboard_instance(), A._setArrayType([], type$.JSArray_KeyEvent), A.LinkedHashSet_LinkedHashSet$_empty(t1));
      _this.ServicesBinding___ServicesBinding__keyEventManager_F !== $ && A.throwUnnamedLateFieldAI();
      _this.ServicesBinding___ServicesBinding__keyEventManager_F = t1;
      $.$get$PlatformDispatcher__instance();
      B.BasicMessageChannel_Umt.setMessageHandler$1(t1.get$handleRawKeyMessage());
      t1 = $.LicenseRegistry__collectors;
      if (t1 == null)
        t1 = $.LicenseRegistry__collectors = A._setArrayType([], type$.JSArray_of_Stream_LicenseEntry_Function);
      t1.push(_this.get$_addLicenses());
      B.BasicMessageChannel_qHv.setMessageHandler$1(new A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_initInstances_closure(_this));
      B.BasicMessageChannel_bqZ.setMessageHandler$1(_this.get$_handleLifecycleMessage());
      B.OptionalMethodChannel_ZFR.setMethodCallHandler$1(_this.get$_handlePlatformMessage());
      $.$get$TextInput__instance();
      _this.readInitialLifecycleStateFromNativeWindow$0();
    },
    initServiceExtensions$0() {
      this.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding$initServiceExtensions();
    }
  };
  A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding.prototype = {
    initInstances$0() {
      this.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding$initInstances();
      $.PaintingBinding__instance = this;
      var t1 = type$.Object;
      this.PaintingBinding___PaintingBinding__imageCache_A = new A.ImageCache(A.LinkedHashMap_LinkedHashMap$_empty(t1, type$._PendingImage), A.LinkedHashMap_LinkedHashMap$_empty(t1, type$._CachedImage), A.LinkedHashMap_LinkedHashMap$_empty(t1, type$._LiveImage));
    },
    handleMemoryPressure$0() {
      this.super$ServicesBinding$handleMemoryPressure();
      var t1 = this.PaintingBinding___PaintingBinding__imageCache_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.clear$0(0);
    },
    handleSystemMessage$1(systemMessage) {
      return this.handleSystemMessage$body$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding(systemMessage);
    },
    handleSystemMessage$body$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding(systemMessage) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this;
      var $async$handleSystemMessage$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return A._asyncAwait($async$self.super$ServicesBinding$handleSystemMessage(systemMessage), $async$handleSystemMessage$1);
            case 3:
              // returning from await.
              switch (A._asString(type$.Map_String_dynamic._as(systemMessage).$index(0, "type"))) {
                case "fontsChange":
                  $async$self.PaintingBinding__systemFonts.notifyListeners$0();
                  break;
              }
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$handleSystemMessage$1, $async$completer);
    }
  };
  A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding.prototype = {
    initInstances$0() {
      var _this = this;
      _this.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding$initInstances();
      $.SemanticsBinding__instance = _this;
      $.$get$PlatformDispatcher__instance();
      _this.SemanticsBinding___SemanticsBinding__accessibilityFeatures_A = B.C_AccessibilityFeatures;
      _this._binding0$_handleSemanticsEnabledChanged$0();
    }
  };
  A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding.prototype = {
    initInstances$0() {
      var t1, t2, t3, _this = this;
      _this.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding$initInstances();
      $.RendererBinding__instance = _this;
      t1 = type$.JSArray_RenderObject;
      _this.RendererBinding___RendererBinding__pipelineOwner_A = new A.PipelineOwner(_this.get$ensureVisualUpdate(), _this.get$_handleSemanticsOwnerCreated(), _this.get$_handleSemanticsUpdate(), _this.get$_handleSemanticsOwnerDisposed(), A._setArrayType([], t1), A._setArrayType([], t1), A._setArrayType([], t1), A.LinkedHashSet_LinkedHashSet$_empty(type$.RenderObject));
      t1 = $.$get$PlatformDispatcher__instance();
      t1._onMetricsChanged = _this.get$handleMetricsChanged();
      t1._onMetricsChangedZone = $.Zone__current;
      t1 = new A.RenderView(B.Size_0_0, _this.createViewConfiguration$0(), $.$get$window(), null, A.LayerHandle$());
      t1.RenderObject$0();
      t1.set$child(null);
      t2 = _this.RendererBinding___RendererBinding__pipelineOwner_A;
      t2 === $ && A.throwUnnamedLateFieldNI();
      t2.set$rootNode(t1);
      t1 = _this.RendererBinding___RendererBinding__pipelineOwner_A._rootNode;
      t1._relayoutBoundary = t1;
      t2 = type$.nullable_PipelineOwner;
      t2._as(A.AbstractNode.prototype.get$owner.call(t1))._nodesNeedingLayout.push(t1);
      t3 = t1._updateMatricesAndCreateNewRootLayer$0();
      t1._layerHandle.set$layer(t3);
      t2._as(A.AbstractNode.prototype.get$owner.call(t1))._nodesNeedingPaint.push(t1);
      _this.SchedulerBinding__persistentCallbacks.push(_this.get$_handlePersistentFrameCallback());
      t1 = _this.RendererBinding__mouseTracker;
      if (t1 != null) {
        t1.ChangeNotifier__listeners = $.$get$ChangeNotifier__emptyListeners();
        t1.ChangeNotifier__count = 0;
      }
      t1 = type$.int;
      t2 = $.$get$ChangeNotifier__emptyListeners();
      _this.RendererBinding__mouseTracker = new A.MouseTracker(new A.MouseCursorManager(B.SystemMouseCursor_basic, A.LinkedHashMap_LinkedHashMap$_empty(t1, type$.MouseCursorSession)), A.LinkedHashMap_LinkedHashMap$_empty(t1, type$._MouseState), t2);
      _this.SchedulerBinding__postFrameCallbacks.push(_this.get$_handleWebFirstFrame());
      _this.get$_semanticsEnabled().addListener$1(_this.get$_handleSemanticsEnabledChanged());
      _this._handleSemanticsEnabledChanged$0();
    },
    initServiceExtensions$0() {
      this.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding$initServiceExtensions();
    },
    dispatchEvent$2($event, hitTestResult) {
      this.RendererBinding__mouseTracker.updateWithEvent$2($event, new A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_dispatchEvent_closure(this, hitTestResult, $event));
      this.super$GestureBinding$dispatchEvent($event, hitTestResult);
    }
  };
  A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding.prototype = {
    initInstances$0() {
      var t1, t2, t3, t4, t5, t6, t7, _this = this;
      _this.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding$initInstances();
      $.WidgetsBinding__instance = _this;
      t1 = type$.Element;
      t2 = A.HashSet_HashSet(t1);
      t3 = A._setArrayType([], type$.JSArray_Element);
      t4 = type$.int;
      t5 = new A._HighlightModeManager(new A.HashedObserverList(A.LinkedHashMap_LinkedHashMap(type$.void_Function_FocusHighlightMode, t4), type$.HashedObserverList_of_void_Function_FocusHighlightMode));
      t6 = A.FocusScopeNode$(true, "Root Focus Scope", false);
      t7 = new A.FocusManager(t5, t6, A.LinkedHashSet_LinkedHashSet$_empty(type$.FocusNode), A._setArrayType([], type$.JSArray__Autofocus), $.$get$ChangeNotifier__emptyListeners());
      t6._focus_manager$_manager = t7;
      t6 = $.ServicesBinding__instance.ServicesBinding___ServicesBinding__keyEventManager_F;
      t6 === $ && A.throwUnnamedLateFieldNI();
      t6.keyMessageHandler = t5.get$handleKeyMessage();
      $.GestureBinding__instance.GestureBinding_pointerRouter._globalRoutes.$indexSet(0, t5.get$handlePointerEvent(), null);
      t1 = new A.BuildOwner(new A._InactiveElements(t2), t3, t7, A.LinkedHashMap_LinkedHashMap$_empty(type$.GlobalKey_State_StatefulWidget, t1));
      _this.WidgetsBinding__buildOwner = t1;
      t1.onBuildScheduled = _this.get$_handleBuildScheduled();
      $.$get$PlatformDispatcher__instance();
      B.OptionalMethodChannel_sjf.setMethodCallHandler$1(_this.get$_handleNavigationInvocation());
      t1 = new A.DefaultPlatformMenuDelegate(A.LinkedHashMap_LinkedHashMap$_empty(t4, type$.PlatformMenuItem), B.OptionalMethodChannel_D3N);
      B.OptionalMethodChannel_D3N.setMethodCallHandler$1(t1.get$_methodCallHandler());
      _this.WidgetsBinding___WidgetsBinding_platformMenuDelegate_A = t1;
    },
    handleMetricsChanged$0() {
      var t1, t2, _i;
      this.super$RendererBinding$handleMetricsChanged();
      for (t1 = this.WidgetsBinding__observers, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i)
        t1[_i].didChangeMetrics$0();
    },
    handleAppLifecycleStateChanged$1(state) {
      var t1, _i;
      this.super$SchedulerBinding$handleAppLifecycleStateChanged(state);
      for (t1 = this.WidgetsBinding__observers.length, _i = 0; _i < t1; ++_i)
        ;
    },
    handleMemoryPressure$0() {
      var t1, _i;
      this.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding$handleMemoryPressure();
      for (t1 = this.WidgetsBinding__observers.length, _i = 0; _i < t1; ++_i)
        ;
    },
    drawFrame$0() {
      var firstFrameCallback, t2, t3, _this = this, t1 = {};
      t1.firstFrameCallback = null;
      if (_this.WidgetsBinding__needToReportFirstFrame) {
        firstFrameCallback = new A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_drawFrame_closure(t1, _this);
        t1.firstFrameCallback = firstFrameCallback;
        t2 = $.SchedulerBinding__instance;
        t3 = t2.SchedulerBinding__timingsCallbacks;
        t3.push(firstFrameCallback);
        if (t3.length === 1)
          $.$get$PlatformDispatcher__instance().set$onReportTimings(t2.get$_executeTimingsCallbacks());
      }
      try {
        t2 = _this.WidgetsBinding__renderViewElement;
        if (t2 != null)
          _this.WidgetsBinding__buildOwner.buildScope$1(t2);
        _this.super$RendererBinding$drawFrame();
        _this.WidgetsBinding__buildOwner.finalizeTree$0();
      } finally {
      }
      t2 = _this.WidgetsBinding__needToReportFirstFrame = false;
      t1 = t1.firstFrameCallback;
      if (t1 != null)
        t2 = !(_this.RendererBinding__firstFrameSent || _this.RendererBinding__firstFrameDeferredCount === 0);
      if (t2) {
        _this.WidgetsBinding__needToReportFirstFrame = true;
        $.SchedulerBinding__instance.removeTimingsCallback$1(t1);
      }
    }
  };
  A.DecoratedBox.prototype = {
    createRenderObject$1(context) {
      var t1 = new A.RenderDecoratedBox(this.decoration, this.position, A.createLocalImageConfiguration(context), null, A.LayerHandle$());
      t1.RenderObject$0();
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      renderObject.set$decoration(this.decoration);
      renderObject.set$configuration(A.createLocalImageConfiguration(context));
      renderObject.set$position(this.position);
    }
  };
  A.Container.prototype = {
    get$_paddingIncludingDecoration() {
      var decorationPadding,
        t1 = this.decoration;
      if (t1 == null)
        return this.padding;
      decorationPadding = t1.get$padding();
      t1 = this.padding;
      if (t1 == null)
        return decorationPadding;
      return t1.add$1(0, decorationPadding);
    },
    build$1(context) {
      var t1, effectivePadding, _this = this, _null = null,
        current = _this.child;
      if (current == null) {
        t1 = _this.constraints;
        if (t1 != null)
          t1 = !(t1.minWidth >= t1.maxWidth && t1.minHeight >= t1.maxHeight);
        else
          t1 = true;
      } else
        t1 = false;
      if (t1)
        current = new A.LimitedBox(0, 0, new A.ConstrainedBox(B.BoxConstraints_vYx, _null, _null), _null);
      else {
        t1 = _this.alignment;
        if (t1 != null)
          current = new A.Align(t1, _null, _null, current, _null);
      }
      effectivePadding = _this.get$_paddingIncludingDecoration();
      if (effectivePadding != null)
        current = new A.Padding(effectivePadding, current, _null);
      t1 = _this.color;
      if (t1 != null)
        current = new A.ColoredBox(t1, current, _null);
      t1 = _this.decoration;
      if (t1 != null)
        current = A.DecoratedBox$(current, t1, B.DecorationPosition_0);
      t1 = _this.constraints;
      if (t1 != null)
        current = new A.ConstrainedBox(t1, current, _null);
      t1 = _this.margin;
      if (t1 != null)
        current = new A.Padding(t1, current, _null);
      current.toString;
      return current;
    }
  };
  A.DefaultSelectionStyle.prototype = {
    updateShouldNotify$1(oldWidget) {
      return !J.$eq$(this.cursorColor, oldWidget.cursorColor) || !J.$eq$(this.selectionColor, oldWidget.selectionColor);
    }
  };
  A._NullWidget0.prototype = {
    build$1(context) {
      throw A.wrapException(A.FlutterError_FlutterError("A DefaultSelectionStyle constructed with DefaultSelectionStyle.fallback cannot be incorporated into the widget tree, it is meant only to provide a fallback value returned by DefaultSelectionStyle.of() when no enclosing default selection style is present in a BuildContext."));
    }
  };
  A.DefaultTextEditingShortcuts.prototype = {
    _getDisablingShortcut$0() {
      return $.$get$DefaultTextEditingShortcuts__webDisablingTextShortcuts();
    },
    build$1(context) {
      var result = A.Shortcuts$(this.child, "<Web Disabling Text Editing Shortcuts>", this._getDisablingShortcut$0());
      return A.Shortcuts$(result, "<Default Text Editing Shortcuts>", A.DefaultTextEditingShortcuts__shortcuts());
    }
  };
  A.DualTransitionBuilder.prototype = {
    createState$0() {
      return new A._DualTransitionBuilderState(A.ProxyAnimation$(null), A.ProxyAnimation$(null));
    },
    forwardBuilder$3(arg0, arg1, arg2) {
      return this.forwardBuilder.call$3(arg0, arg1, arg2);
    },
    reverseBuilder$3(arg0, arg1, arg2) {
      return this.reverseBuilder.call$3(arg0, arg1, arg2);
    }
  };
  A._DualTransitionBuilderState.prototype = {
    initState$0() {
      var t1, _this = this;
      _this.super$State$initState();
      _this.___DualTransitionBuilderState__effectiveAnimationStatus_A = _this._widget.animation.get$status();
      t1 = _this._widget.animation;
      t1.didRegisterListener$0();
      t1 = t1.AnimationLocalStatusListenersMixin__statusListeners;
      t1._isDirty = true;
      t1._observer_list$_list.push(_this.get$_animationListener());
      _this._dual_transition_builder$_updateAnimations$0();
    },
    _animationListener$1(animationStatus) {
      var t2, _this = this,
        t1 = _this.___DualTransitionBuilderState__effectiveAnimationStatus_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t2 = _this._calculateEffectiveAnimationStatus$2$current$lastEffective(animationStatus, t1);
      _this.___DualTransitionBuilderState__effectiveAnimationStatus_A = t2;
      if (t1 !== t2)
        _this._dual_transition_builder$_updateAnimations$0();
    },
    didUpdateWidget$1(oldWidget) {
      var t1, t2, _this = this;
      _this.super$State$didUpdateWidget(oldWidget);
      t1 = oldWidget.animation;
      if (t1 !== _this._widget.animation) {
        t2 = _this.get$_animationListener();
        t1.removeStatusListener$1(t2);
        t1 = _this._widget.animation;
        t1.didRegisterListener$0();
        t1 = t1.AnimationLocalStatusListenersMixin__statusListeners;
        t1._isDirty = true;
        t1._observer_list$_list.push(t2);
        _this._animationListener$1(_this._widget.animation.get$status());
      }
    },
    _calculateEffectiveAnimationStatus$2$current$lastEffective(current, lastEffective) {
      switch (current.index) {
        case 0:
        case 3:
          return current;
        case 1:
          switch (lastEffective.index) {
            case 0:
            case 3:
            case 1:
              return current;
            case 2:
              return lastEffective;
          }
          break;
        case 2:
          switch (lastEffective.index) {
            case 0:
            case 3:
            case 2:
              return current;
            case 1:
              return lastEffective;
          }
          break;
      }
    },
    _dual_transition_builder$_updateAnimations$0() {
      var _this = this,
        t1 = _this.___DualTransitionBuilderState__effectiveAnimationStatus_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      switch (t1.index) {
        case 0:
        case 1:
          _this._forwardAnimation.set$parent(_this._widget.animation);
          _this._reverseAnimation.set$parent(B.C__AlwaysDismissedAnimation);
          break;
        case 2:
        case 3:
          _this._forwardAnimation.set$parent(B.C__AlwaysCompleteAnimation);
          _this._reverseAnimation.set$parent(new A.ReverseAnimation(_this._widget.animation, new A.ObserverList(A._setArrayType([], type$.JSArray_of_void_Function_AnimationStatus), type$.ObserverList_of_void_Function_AnimationStatus), 0));
          break;
      }
    },
    dispose$0() {
      this._widget.animation.removeStatusListener$1(this.get$_animationListener());
      this.super$State$dispose();
    },
    build$1(context) {
      var t1 = this._widget;
      return t1.forwardBuilder$3(context, this._forwardAnimation, t1.reverseBuilder$3(context, this._reverseAnimation, t1.child));
    }
  };
  A.KeyEventResult.prototype = {
    _enumToString$0() {
      return "KeyEventResult." + this._name;
    }
  };
  A._Autofocus.prototype = {};
  A.FocusAttachment.prototype = {
    detach$0() {
      var t2,
        t1 = this._node;
      if (t1._attachment === this) {
        if (!t1.get$hasPrimaryFocus()) {
          t2 = t1._focus_manager$_manager;
          t2 = t2 != null && t2._markedForFocus === t1;
        } else
          t2 = true;
        if (t2)
          t1.unfocus$1$disposition(B.UnfocusDisposition_1);
        t2 = t1._focus_manager$_manager;
        if (t2 != null) {
          if (t2._primaryFocus === t1)
            t2._primaryFocus = null;
          t2._dirtyNodes.remove$1(0, t1);
        }
        t2 = t1._focus_manager$_parent;
        if (t2 != null)
          t2._removeChild$1(t1);
        t1._attachment = null;
      }
    },
    reparent$1$parent($parent) {
      var t2,
        t1 = this._node;
      if (t1._attachment === this) {
        t2 = t1._context;
        t2.toString;
        $parent = A.Focus_maybeOf(t2, true, true);
        ($parent == null ? t1._context._owner.focusManager.rootScope : $parent)._reparent$1(t1);
      }
    },
    reparent$0() {
      return this.reparent$1$parent(null);
    }
  };
  A.UnfocusDisposition.prototype = {
    _enumToString$0() {
      return "UnfocusDisposition." + this._name;
    }
  };
  A.FocusNode.prototype = {
    get$skipTraversal() {
      var t1, _i;
      if (this._skipTraversal)
        return true;
      for (t1 = this.get$ancestors().length, _i = 0; _i < t1; ++_i)
        ;
      return false;
    },
    set$skipTraversal(value) {
      var t1, _this = this;
      if (value !== _this._skipTraversal) {
        _this._skipTraversal = value;
        t1 = _this._focus_manager$_manager;
        if (t1 != null) {
          t1._markNeedsUpdate$0();
          t1._dirtyNodes.add$1(0, _this);
        }
      }
    },
    get$canRequestFocus() {
      var scope, t1, _i;
      if (!this._focus_manager$_canRequestFocus)
        return false;
      scope = this.get$enclosingScope();
      if (scope != null && !scope.get$canRequestFocus())
        return false;
      for (t1 = this.get$ancestors().length, _i = 0; _i < t1; ++_i)
        ;
      return true;
    },
    set$canRequestFocus(value) {
      var t1, _this = this;
      if (value !== _this._focus_manager$_canRequestFocus) {
        _this._focus_manager$_canRequestFocus = value;
        if (_this.get$hasFocus() && !value)
          _this.unfocus$1$disposition(B.UnfocusDisposition_1);
        t1 = _this._focus_manager$_manager;
        if (t1 != null) {
          t1._markNeedsUpdate$0();
          t1._dirtyNodes.add$1(0, _this);
        }
      }
    },
    set$descendantsAreFocusable(value) {
      return;
    },
    set$descendantsAreTraversable(value) {
    },
    get$descendants() {
      var result, t2, _i, child,
        t1 = this._descendants;
      if (t1 == null) {
        result = A._setArrayType([], type$.JSArray_FocusNode);
        for (t1 = this._children, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
          child = t1[_i];
          B.JSArray_methods.addAll$1(result, child.get$descendants());
          result.push(child);
        }
        this._descendants = result;
        t1 = result;
      }
      return t1;
    },
    get$traversalDescendants() {
      var t1 = this.get$descendants();
      return new A.WhereIterable(t1, new A.FocusNode_traversalDescendants_closure(), A._arrayInstanceType(t1)._eval$1("WhereIterable<1>"));
    },
    get$ancestors() {
      var result, $parent,
        t1 = this._ancestors;
      if (t1 == null) {
        result = A._setArrayType([], type$.JSArray_FocusNode);
        $parent = this._focus_manager$_parent;
        for (; $parent != null;) {
          result.push($parent);
          $parent = $parent._focus_manager$_parent;
        }
        this._ancestors = result;
        t1 = result;
      }
      return t1;
    },
    get$hasFocus() {
      if (!this.get$hasPrimaryFocus()) {
        var t1 = this._focus_manager$_manager;
        if (t1 == null)
          t1 = null;
        else {
          t1 = t1._primaryFocus;
          t1 = t1 == null ? null : B.JSArray_methods.contains$1(t1.get$ancestors(), this);
        }
        t1 = t1 === true;
      } else
        t1 = true;
      return t1;
    },
    get$hasPrimaryFocus() {
      var t1 = this._focus_manager$_manager;
      return (t1 == null ? null : t1._primaryFocus) === this;
    },
    get$nearestScope() {
      return this.get$enclosingScope();
    },
    get$enclosingScope() {
      var t1, t2, _i, node;
      for (t1 = this.get$ancestors(), t2 = t1.length, _i = 0; _i < t2; ++_i) {
        node = t1[_i];
        if (node instanceof A.FocusScopeNode)
          return node;
      }
      return null;
    },
    get$rect() {
      var bottomRight,
        object = this._context.get$renderObject(),
        t1 = object.getTransformTo$1(null),
        t2 = object.get$semanticBounds(),
        topLeft = A.MatrixUtils_transformPoint(t1, new A.Offset(t2.left, t2.top));
      t2 = object.getTransformTo$1(null);
      t1 = object.get$semanticBounds();
      bottomRight = A.MatrixUtils_transformPoint(t2, new A.Offset(t1.right, t1.bottom));
      return new A.Rect(topLeft._dx, topLeft._dy, bottomRight._dx, bottomRight._dy);
    },
    unfocus$1$disposition(disposition) {
      var t1, scope, _this = this;
      if (!_this.get$hasFocus()) {
        t1 = _this._focus_manager$_manager;
        t1 = t1 == null || t1._markedForFocus !== _this;
      } else
        t1 = false;
      if (t1)
        return;
      scope = _this.get$enclosingScope();
      if (scope == null)
        return;
      switch (disposition.index) {
        case 0:
          if (scope.get$canRequestFocus())
            B.JSArray_methods.clear$0(scope._focusedChildren);
          for (; !scope.get$canRequestFocus();) {
            scope = scope.get$enclosingScope();
            if (scope == null) {
              t1 = _this._focus_manager$_manager;
              scope = t1 == null ? null : t1.rootScope;
            }
          }
          scope._doRequestFocus$1$findFirstFocus(false);
          break;
        case 1:
          if (scope.get$canRequestFocus())
            B.JSArray_methods.remove$1(scope._focusedChildren, _this);
          for (; !scope.get$canRequestFocus();) {
            t1 = scope.get$enclosingScope();
            if (t1 != null)
              B.JSArray_methods.remove$1(t1._focusedChildren, scope);
            scope = scope.get$enclosingScope();
            if (scope == null) {
              t1 = _this._focus_manager$_manager;
              scope = t1 == null ? null : t1.rootScope;
            }
          }
          scope._doRequestFocus$1$findFirstFocus(true);
          break;
      }
    },
    unfocus$0() {
      return this.unfocus$1$disposition(B.UnfocusDisposition_0);
    },
    _markNextFocus$1(newFocus) {
      var _this = this,
        t1 = _this._focus_manager$_manager;
      if (t1 != null) {
        if (t1._primaryFocus === _this)
          t1._markedForFocus = null;
        else {
          t1._markedForFocus = _this;
          t1._markNeedsUpdate$0();
        }
        return;
      }
      newFocus._setAsFocusedChildForScope$0();
      newFocus._notify$0();
      if (newFocus !== _this)
        _this._notify$0();
    },
    _removeChild$2$removeScopeFocus(node, removeScopeFocus) {
      var t1, t2, _i;
      if (removeScopeFocus) {
        t1 = node.get$enclosingScope();
        if (t1 != null)
          B.JSArray_methods.remove$1(t1._focusedChildren, node);
      }
      node._focus_manager$_parent = null;
      B.JSArray_methods.remove$1(this._children, node);
      for (t1 = this.get$ancestors(), t2 = t1.length, _i = 0; _i < t2; ++_i)
        t1[_i]._descendants = null;
      this._descendants = null;
    },
    _removeChild$1(node) {
      return this._removeChild$2$removeScopeFocus(node, true);
    },
    _focus_manager$_updateManager$1(manager) {
      var t1, t2, _i, descendant;
      this._focus_manager$_manager = manager;
      for (t1 = this.get$descendants(), t2 = t1.length, _i = 0; _i < t2; ++_i) {
        descendant = t1[_i];
        descendant._focus_manager$_manager = manager;
        descendant._ancestors = null;
      }
    },
    _reparent$1(child) {
      var oldScope, hadFocus, t1, t2, _i, _this = this;
      if (child._focus_manager$_parent === _this)
        return;
      oldScope = child.get$enclosingScope();
      hadFocus = child.get$hasFocus();
      t1 = child._focus_manager$_parent;
      if (t1 != null)
        t1._removeChild$2$removeScopeFocus(child, oldScope != _this.get$nearestScope());
      _this._children.push(child);
      child._focus_manager$_parent = _this;
      child._ancestors = null;
      child._focus_manager$_updateManager$1(_this._focus_manager$_manager);
      for (t1 = child.get$ancestors(), t2 = t1.length, _i = 0; _i < t2; ++_i)
        t1[_i]._descendants = null;
      if (hadFocus) {
        t1 = _this._focus_manager$_manager;
        if (t1 != null) {
          t1 = t1._primaryFocus;
          if (t1 != null)
            t1._setAsFocusedChildForScope$0();
        }
      }
      if (oldScope != null && child._context != null && child.get$enclosingScope() !== oldScope) {
        t1 = child._context;
        t1.toString;
        t1 = A.FocusTraversalGroup_maybeOf(t1);
        if (t1 != null)
          t1.changedScope$2$node$oldScope(child, oldScope);
      }
      if (child._requestFocusWhenReparented) {
        child._doRequestFocus$1$findFirstFocus(true);
        child._requestFocusWhenReparented = false;
      }
    },
    dispose$0() {
      var t1 = this._attachment;
      if (t1 != null)
        t1.detach$0();
      this.super$ChangeNotifier$dispose();
    },
    _notify$0() {
      var _this = this;
      if (_this._focus_manager$_parent == null)
        return;
      if (_this.get$hasPrimaryFocus())
        _this._setAsFocusedChildForScope$0();
      _this.notifyListeners$0();
    },
    requestFocus$0() {
      this._doRequestFocus$1$findFirstFocus(true);
    },
    _doRequestFocus$1$findFirstFocus(findFirstFocus) {
      var t1, _this = this;
      if (!_this.get$canRequestFocus())
        return;
      if (_this._focus_manager$_parent == null) {
        _this._requestFocusWhenReparented = true;
        return;
      }
      _this._setAsFocusedChildForScope$0();
      if (_this.get$hasPrimaryFocus()) {
        t1 = _this._focus_manager$_manager._markedForFocus;
        t1 = t1 == null || t1 === _this;
      } else
        t1 = false;
      if (t1)
        return;
      _this._markNextFocus$1(_this);
    },
    _setAsFocusedChildForScope$0() {
      var t1, t2, t3, scopeFocus, scopeFocus0, t4;
      for (t1 = B.JSArray_methods.get$iterator(this.get$ancestors()), t2 = new A.WhereTypeIterator(t1, type$.WhereTypeIterator_FocusScopeNode), t3 = type$.FocusScopeNode, scopeFocus = this; t2.moveNext$0(); scopeFocus = scopeFocus0) {
        scopeFocus0 = t3._as(t1.get$current());
        t4 = scopeFocus0._focusedChildren;
        B.JSArray_methods.remove$1(t4, scopeFocus);
        t4.push(scopeFocus);
      }
    },
    toStringShort$0() {
      var t1, extraData, t2, _this = this;
      _this.get$hasFocus();
      t1 = _this.get$hasFocus() && !_this.get$hasPrimaryFocus() ? "[IN FOCUS PATH]" : "";
      extraData = t1 + (_this.get$hasPrimaryFocus() ? "[PRIMARY FOCUS]" : "");
      t1 = A.shortHash(_this);
      t2 = extraData.length !== 0 ? "(" + extraData + ")" : "";
      return "<optimized out>#" + t1 + t2;
    },
    $isListenable: 1
  };
  A.FocusNode_traversalDescendants_closure.prototype = {
    call$1(node) {
      return !node.get$skipTraversal() && node.get$canRequestFocus();
    },
    $signature: 7
  };
  A.FocusScopeNode.prototype = {
    get$nearestScope() {
      return this;
    },
    get$traversalDescendants() {
      if (!this.get$canRequestFocus())
        return B.C_EmptyIterable;
      return A.FocusNode.prototype.get$traversalDescendants.call(this);
    },
    setFirstFocus$1(scope) {
      if (scope._focus_manager$_parent == null)
        this._reparent$1(scope);
      if (this.get$hasFocus())
        scope._doRequestFocus$1$findFirstFocus(true);
      else
        scope._setAsFocusedChildForScope$0();
    },
    _doRequestFocus$1$findFirstFocus(findFirstFocus) {
      var t2, focusedChild, _this = this,
        t1 = _this._focusedChildren;
      while (true) {
        if ((t1.length !== 0 ? B.JSArray_methods.get$last(t1) : null) != null)
          t2 = !(t1.length !== 0 ? B.JSArray_methods.get$last(t1) : null).get$canRequestFocus();
        else
          t2 = false;
        if (!t2)
          break;
        t1.pop();
      }
      focusedChild = t1.length !== 0 ? B.JSArray_methods.get$last(t1) : null;
      if (!findFirstFocus || focusedChild == null) {
        if (_this.get$canRequestFocus()) {
          _this._setAsFocusedChildForScope$0();
          _this._markNextFocus$1(_this);
        }
        return;
      }
      focusedChild._doRequestFocus$1$findFirstFocus(true);
    }
  };
  A.FocusHighlightMode.prototype = {
    _enumToString$0() {
      return "FocusHighlightMode." + this._name;
    }
  };
  A.FocusHighlightStrategy.prototype = {
    _enumToString$0() {
      return "FocusHighlightStrategy." + this._name;
    }
  };
  A.FocusManager.prototype = {
    _markNeedsUpdate$0() {
      if (this._haveScheduledUpdate)
        return;
      this._haveScheduledUpdate = true;
      A.scheduleMicrotask(this.get$_applyFocusChange());
    },
    _applyFocusChange$0() {
      var previousFocus, t1, t2, t3, _i, autofocus, t4, shouldApply, t5, previousPath, nextPath, _this = this;
      _this._haveScheduledUpdate = false;
      previousFocus = _this._primaryFocus;
      for (t1 = _this._pendingAutofocuses, t2 = t1.length, t3 = _this.rootScope, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
        autofocus = t1[_i];
        t4 = autofocus.scope;
        shouldApply = false;
        if (t4._focus_manager$_parent != null || t4 === t3)
          if (t4._focus_manager$_manager === _this) {
            t5 = t4._focusedChildren;
            t4 = (t5.length !== 0 ? B.JSArray_methods.get$last(t5) : null) == null && B.JSArray_methods.contains$1(autofocus.autofocusNode.get$ancestors(), t4);
            shouldApply = t4;
          }
        if (shouldApply)
          autofocus.autofocusNode._doRequestFocus$1$findFirstFocus(true);
      }
      B.JSArray_methods.clear$0(t1);
      t1 = _this._primaryFocus;
      if (t1 == null && _this._markedForFocus == null)
        _this._markedForFocus = t3;
      t2 = _this._markedForFocus;
      if (t2 != null && t2 !== t1) {
        if (previousFocus == null)
          previousPath = null;
        else {
          t1 = previousFocus.get$ancestors();
          t1 = A.LinkedHashSet_LinkedHashSet$from(t1, A._arrayInstanceType(t1)._precomputed1);
          previousPath = t1;
        }
        if (previousPath == null)
          previousPath = A.LinkedHashSet_LinkedHashSet$_empty(type$.FocusNode);
        t1 = _this._markedForFocus.get$ancestors();
        nextPath = A.LinkedHashSet_LinkedHashSet$from(t1, A._arrayInstanceType(t1)._precomputed1);
        t1 = _this._dirtyNodes;
        t1.addAll$1(0, nextPath.difference$1(previousPath));
        t1.addAll$1(0, previousPath.difference$1(nextPath));
        t1 = _this._primaryFocus = _this._markedForFocus;
        _this._markedForFocus = null;
      }
      if (previousFocus != t1) {
        if (previousFocus != null)
          _this._dirtyNodes.add$1(0, previousFocus);
        t1 = _this._primaryFocus;
        if (t1 != null)
          _this._dirtyNodes.add$1(0, t1);
      }
      for (t1 = _this._dirtyNodes, t2 = A._LinkedHashSetIterator$(t1, t1._collection$_modifications, A._instanceType(t1)._precomputed1), t3 = t2.$ti._precomputed1; t2.moveNext$0();) {
        t4 = t2._current;
        (t4 == null ? t3._as(t4) : t4)._notify$0();
      }
      t1.clear$0(0);
      if (previousFocus != _this._primaryFocus)
        _this.notifyListeners$0();
    },
    $isListenable: 1
  };
  A._HighlightModeManager.prototype = {
    notifyListeners$0() {
      var listener, exception, stack, collector, localListeners, _i, t3, exception0, t4,
        t1 = this._focus_manager$_listeners,
        t2 = t1._observer_list$_map;
      if (t2.__js_helper$_length === 0)
        return;
      localListeners = A.List_List$_of(t1, type$.void_Function_FocusHighlightMode);
      for (t1 = localListeners.length, _i = 0; _i < localListeners.length; localListeners.length === t1 || (0, A.throwConcurrentModificationError)(localListeners), ++_i) {
        listener = localListeners[_i];
        try {
          if (t2.containsKey$1(listener)) {
            t3 = this._highlightMode;
            if (t3 == null)
              t3 = A._HighlightModeManager__defaultModeForPlatform();
            listener.call$1(t3);
          }
        } catch (exception0) {
          exception = A.unwrapException(exception0);
          stack = A.getTraceFromException(exception0);
          collector = null;
          t3 = A.ErrorDescription$("while dispatching notifications for " + A.getRuntimeTypeOfDartObject(this).toString$0(0));
          t4 = $.FlutterError_onError;
          if (t4 != null)
            t4.call$1(new A.FlutterErrorDetails(exception, stack, "widgets library", t3, collector, false));
        }
      }
    },
    handlePointerEvent$1($event) {
      var expectedMode, t1, _this = this;
      switch ($event.get$kind().index) {
        case 0:
        case 2:
        case 3:
          _this._lastInteractionWasTouch = true;
          expectedMode = B.FocusHighlightMode_0;
          break;
        case 1:
        case 4:
        case 5:
          _this._lastInteractionWasTouch = false;
          expectedMode = B.FocusHighlightMode_1;
          break;
        default:
          expectedMode = null;
      }
      t1 = _this._highlightMode;
      if (expectedMode !== (t1 == null ? A._HighlightModeManager__defaultModeForPlatform() : t1))
        _this.updateMode$0();
    },
    handleKeyMessage$1(message) {
      var t1, t2, t3, t4, t5, _i, handled, node, results, t6;
      this._lastInteractionWasTouch = false;
      this.updateMode$0();
      t1 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner.focusManager._primaryFocus;
      if (t1 == null)
        return false;
      $label0$1:
        for (t1 = A._setArrayType([t1], type$.JSArray_FocusNode), B.JSArray_methods.addAll$1(t1, $.WidgetsBinding__instance.WidgetsBinding__buildOwner.focusManager._primaryFocus.get$ancestors()), t2 = t1.length, t3 = type$.JSArray_KeyEventResult, t4 = message.rawEvent, t5 = t4 != null, _i = 0; handled = false, _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
          node = t1[_i];
          results = A._setArrayType([], t3);
          t6 = node.onKey;
          if (t6 != null && t5)
            results.push(t6.call$2(node, t4));
          switch (A.combineKeyEventResults(results).index) {
            case 1:
              continue $label0$1;
            case 0:
              handled = true;
              break;
            case 2:
              break;
          }
          break $label0$1;
        }
      return handled;
    },
    updateMode$0() {
      var t1, newMode, oldMode, _this = this;
      switch (0) {
        case 0:
          t1 = _this._lastInteractionWasTouch;
          if (t1 == null)
            return;
          newMode = t1 ? B.FocusHighlightMode_0 : B.FocusHighlightMode_1;
          break;
      }
      oldMode = _this._highlightMode;
      if (oldMode == null)
        oldMode = A._HighlightModeManager__defaultModeForPlatform();
      _this._highlightMode = newMode;
      if ((newMode == null ? A._HighlightModeManager__defaultModeForPlatform() : newMode) !== oldMode)
        _this.notifyListeners$0();
    }
  };
  A._FocusManager_Object_DiagnosticableTreeMixin.prototype = {};
  A._FocusManager_Object_DiagnosticableTreeMixin_ChangeNotifier.prototype = {};
  A._FocusNode_Object_DiagnosticableTreeMixin.prototype = {};
  A._FocusNode_Object_DiagnosticableTreeMixin_ChangeNotifier.prototype = {};
  A.Focus.prototype = {
    get$onKeyEvent() {
      var t1 = this._onKeyEvent,
        t2 = this.focusNode;
      t1 = t2 == null ? null : t2.onKeyEvent;
      return t1;
    },
    get$onKey() {
      var t1 = this._onKey;
      if (t1 == null) {
        t1 = this.focusNode;
        t1 = t1 == null ? null : t1.onKey;
      }
      return t1;
    },
    get$canRequestFocus() {
      var t1 = this._focus_scope$_canRequestFocus;
      if (t1 == null) {
        t1 = this.focusNode;
        t1 = t1 == null ? null : t1.get$canRequestFocus();
      }
      return t1 !== false;
    },
    get$skipTraversal() {
      var t1 = this._focus_scope$_skipTraversal;
      if (t1 == null) {
        t1 = this.focusNode;
        t1 = t1 == null ? null : t1.get$skipTraversal();
      }
      return t1 === true;
    },
    get$descendantsAreFocusable() {
      var t1 = this._descendantsAreFocusable;
      if (t1 == null)
        t1 = this.focusNode != null || null;
      return t1 !== false;
    },
    get$descendantsAreTraversable() {
      var t1 = this._descendantsAreTraversable;
      if (t1 == null)
        t1 = this.focusNode != null || null;
      return t1 !== false;
    },
    get$debugLabel() {
      var t1 = this._focus_scope$_debugLabel;
      if (t1 == null)
        t1 = null;
      return t1;
    },
    createState$0() {
      return A._FocusState$();
    }
  };
  A._FocusState.prototype = {
    get$focusNode() {
      var t1 = this._widget.focusNode;
      if (t1 == null) {
        t1 = this._internalNode;
        t1.toString;
      }
      return t1;
    },
    initState$0() {
      this.super$State$initState();
      this._initNode$0();
    },
    _initNode$0() {
      var t1, t2, t3, _this = this;
      if (_this._widget.focusNode == null)
        if (_this._internalNode == null)
          _this._internalNode = _this._createNode$0();
      t1 = _this.get$focusNode();
      _this._widget.get$descendantsAreFocusable();
      t1.set$descendantsAreFocusable(true);
      t1 = _this.get$focusNode();
      _this._widget.get$descendantsAreTraversable();
      t1.set$descendantsAreTraversable(true);
      _this.get$focusNode().set$skipTraversal(_this._widget.get$skipTraversal());
      t1 = _this._widget._focus_scope$_canRequestFocus;
      if (t1 != null)
        _this.get$focusNode().set$canRequestFocus(t1);
      _this.___FocusState__couldRequestFocus_A = _this.get$focusNode().get$canRequestFocus();
      _this.get$focusNode();
      _this.___FocusState__descendantsWereFocusable_A = true;
      _this.get$focusNode();
      _this.___FocusState__descendantsWereTraversable_A = true;
      _this.___FocusState__hadPrimaryFocus_A = _this.get$focusNode().get$hasPrimaryFocus();
      t1 = _this.get$focusNode();
      t2 = _this._element;
      t2.toString;
      t3 = _this._widget;
      t3.get$onKeyEvent();
      t3 = t3.get$onKey();
      t1._context = t2;
      t1.onKey = t3 == null ? t1.onKey : t3;
      t2 = t1.onKeyEvent;
      t1.onKeyEvent = t2;
      _this._focusAttachment = t1._attachment = new A.FocusAttachment(t1);
      _this.get$focusNode().addListener$1(_this.get$_handleFocusChanged());
    },
    _createNode$0() {
      var t3,
        t1 = this._widget,
        t2 = t1.get$debugLabel();
      t1 = t1.get$canRequestFocus();
      t3 = this._widget;
      t3.get$descendantsAreFocusable();
      t3.get$descendantsAreTraversable();
      return A.FocusNode$(t1, t2, true, true, null, null, t3.get$skipTraversal());
    },
    dispose$0() {
      var t1, _this = this;
      _this.get$focusNode().removeListener$1(_this.get$_handleFocusChanged());
      _this._focusAttachment.detach$0();
      t1 = _this._internalNode;
      if (t1 != null)
        t1.dispose$0();
      _this.super$State$dispose();
    },
    didChangeDependencies$0() {
      this.super$State$didChangeDependencies();
      var t1 = this._focusAttachment;
      if (t1 != null)
        t1.reparent$0();
      this._handleAutofocus$0();
    },
    _handleAutofocus$0() {
      var t1, t2, t3, _this = this;
      if (!_this._didAutofocus && _this._widget.autofocus) {
        t1 = _this._element;
        t1.toString;
        t1 = A.FocusScope_of(t1);
        t2 = _this.get$focusNode();
        if (t2._focus_manager$_parent == null)
          t1._reparent$1(t2);
        t3 = t1._focus_manager$_manager;
        if (t3 != null)
          t3._pendingAutofocuses.push(new A._Autofocus(t1, t2));
        t1 = t1._focus_manager$_manager;
        if (t1 != null)
          t1._markNeedsUpdate$0();
        _this._didAutofocus = true;
      }
    },
    deactivate$0() {
      this.super$State$deactivate();
      var t1 = this._focusAttachment;
      if (t1 != null)
        t1.reparent$0();
      this._didAutofocus = false;
    },
    didUpdateWidget$1(oldWidget) {
      var t1, t2, _this = this;
      _this.super$State$didUpdateWidget(oldWidget);
      t1 = oldWidget.focusNode;
      t2 = _this._widget;
      if (t1 == t2.focusNode) {
        if (!J.$eq$(t2.get$onKey(), _this.get$focusNode().onKey))
          _this.get$focusNode().onKey = _this._widget.get$onKey();
        t1 = _this._widget;
        t1.get$onKeyEvent();
        _this.get$focusNode();
        _this.get$focusNode().set$skipTraversal(t1.get$skipTraversal());
        t1 = _this._widget._focus_scope$_canRequestFocus;
        if (t1 != null)
          _this.get$focusNode().set$canRequestFocus(t1);
        t1 = _this.get$focusNode();
        _this._widget.get$descendantsAreFocusable();
        t1.set$descendantsAreFocusable(true);
        t1 = _this.get$focusNode();
        _this._widget.get$descendantsAreTraversable();
        t1.set$descendantsAreTraversable(true);
      } else {
        _this._focusAttachment.detach$0();
        if (t1 != null)
          t1.removeListener$1(_this.get$_handleFocusChanged());
        _this._initNode$0();
      }
      if (oldWidget.autofocus !== _this._widget.autofocus)
        _this._handleAutofocus$0();
    },
    _handleFocusChanged$0() {
      var t1, _this = this,
        hasPrimaryFocus = _this.get$focusNode().get$hasPrimaryFocus(),
        canRequestFocus = _this.get$focusNode().get$canRequestFocus();
      _this.get$focusNode();
      _this.get$focusNode();
      t1 = _this._widget.onFocusChange;
      if (t1 != null)
        t1.call$1(_this.get$focusNode().get$hasFocus());
      t1 = _this.___FocusState__hadPrimaryFocus_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      if (t1 !== hasPrimaryFocus)
        _this.setState$1(new A._FocusState__handleFocusChanged_closure(_this, hasPrimaryFocus));
      t1 = _this.___FocusState__couldRequestFocus_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      if (t1 !== canRequestFocus)
        _this.setState$1(new A._FocusState__handleFocusChanged_closure0(_this, canRequestFocus));
      t1 = _this.___FocusState__descendantsWereFocusable_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      if (!t1)
        _this.setState$1(new A._FocusState__handleFocusChanged_closure1(_this, true));
      t1 = _this.___FocusState__descendantsWereTraversable_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      if (!t1)
        _this.setState$1(new A._FocusState__handleFocusChanged_closure2(_this, true));
    },
    build$1(context) {
      var child, t2, _this = this, _null = null,
        t1 = _this._focusAttachment;
      t1.toString;
      t1.reparent$1$parent(_this._widget.parentNode);
      t1 = _this._widget;
      child = t1.child;
      if (t1.includeSemantics) {
        t1 = _this.___FocusState__couldRequestFocus_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
        t2 = _this.___FocusState__hadPrimaryFocus_A;
        t2 === $ && A.throwUnnamedLateFieldNI();
        child = A.Semantics$(_null, _null, child, false, _null, false, false, t1, t2, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
      }
      return A._FocusInheritedScope$(child, _this.get$focusNode());
    }
  };
  A._FocusState__handleFocusChanged_closure.prototype = {
    call$0() {
      this.$this.___FocusState__hadPrimaryFocus_A = this.hasPrimaryFocus;
    },
    $signature: 0
  };
  A._FocusState__handleFocusChanged_closure0.prototype = {
    call$0() {
      this.$this.___FocusState__couldRequestFocus_A = this.canRequestFocus;
    },
    $signature: 0
  };
  A._FocusState__handleFocusChanged_closure1.prototype = {
    call$0() {
      this.$this.___FocusState__descendantsWereFocusable_A = this.descendantsAreFocusable;
    },
    $signature: 0
  };
  A._FocusState__handleFocusChanged_closure2.prototype = {
    call$0() {
      this.$this.___FocusState__descendantsWereTraversable_A = this.descendantsAreTraversable;
    },
    $signature: 0
  };
  A.FocusScope.prototype = {
    createState$0() {
      return new A._FocusScopeState();
    }
  };
  A._FocusScopeState.prototype = {
    _createNode$0() {
      var t1 = this._widget,
        t2 = t1.get$debugLabel();
      return A.FocusScopeNode$(t1.get$canRequestFocus(), t2, this._widget.get$skipTraversal());
    },
    build$1(context) {
      var _this = this, _null = null,
        t1 = _this._focusAttachment;
      t1.toString;
      t1.reparent$1$parent(_this._widget.parentNode);
      t1 = _this.get$focusNode();
      return A.Semantics$(_null, _null, A._FocusInheritedScope$(_this._widget.child, t1), false, _null, false, true, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
    }
  };
  A._FocusInheritedScope.prototype = {};
  A._getAncestor_closure.prototype = {
    call$1(ancestor) {
      var t1 = this._box_0;
      if (--t1.count === 0) {
        t1.target = ancestor;
        return false;
      }
      return true;
    },
    $signature: 20
  };
  A._FocusTraversalGroupInfo.prototype = {};
  A.TraversalDirection.prototype = {
    _enumToString$0() {
      return "TraversalDirection." + this._name;
    }
  };
  A.TraversalEdgeBehavior.prototype = {
    _enumToString$0() {
      return "TraversalEdgeBehavior." + this._name;
    }
  };
  A.FocusTraversalPolicy.prototype = {
    _findInitialFocus$3$fromEnd$ignoreCurrentFocus(currentNode, fromEnd, ignoreCurrentFocus) {
      var sorted,
        scope = currentNode.get$nearestScope(),
        t1 = scope._focusedChildren,
        candidate = t1.length !== 0 ? B.JSArray_methods.get$last(t1) : null;
      t1 = candidate == null && scope.get$descendants().length !== 0;
      if (t1) {
        sorted = this._sortAllDescendants$2(scope, currentNode);
        if (sorted.length === 0)
          candidate = null;
        else
          candidate = fromEnd ? B.JSArray_methods.get$last(sorted) : B.JSArray_methods.get$first(sorted);
      }
      return candidate == null ? currentNode : candidate;
    },
    _findInitialFocus$2$ignoreCurrentFocus(currentNode, ignoreCurrentFocus) {
      return this._findInitialFocus$3$fromEnd$ignoreCurrentFocus(currentNode, false, ignoreCurrentFocus);
    },
    invalidateScopeData$1(node) {
    },
    changedScope$2$node$oldScope(node, oldScope) {
    },
    _findGroups$2(scope, scopeGroupNode) {
      var groups, t1, t2, t3, _i, node, groupNode, t4, parentGroup,
        defaultPolicy = scopeGroupNode == null ? null : scopeGroupNode.policy;
      if (defaultPolicy == null)
        defaultPolicy = new A.ReadingOrderTraversalPolicy(A.LinkedHashMap_LinkedHashMap$_empty(type$.FocusScopeNode, type$._DirectionalPolicyData));
      groups = A.LinkedHashMap_LinkedHashMap$_empty(type$.nullable_FocusNode, type$._FocusTraversalGroupInfo);
      for (t1 = scope.get$descendants(), t2 = t1.length, t3 = type$.JSArray_FocusNode, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
        node = t1[_i];
        groupNode = A.FocusTraversalGroup__getGroupNode(node);
        if (node === groupNode) {
          t4 = groupNode._focus_manager$_parent;
          t4.toString;
          parentGroup = A.FocusTraversalGroup__getGroupNode(t4);
          if (groups.$index(0, parentGroup) == null)
            groups.$indexSet(0, parentGroup, A._FocusTraversalGroupInfo$(parentGroup, defaultPolicy, A._setArrayType([], t3)));
          groups.$index(0, parentGroup).members.push(groupNode);
          continue;
        }
        if (node.get$canRequestFocus() && !node.get$skipTraversal()) {
          if (groups.$index(0, groupNode) == null)
            groups.$indexSet(0, groupNode, A._FocusTraversalGroupInfo$(groupNode, defaultPolicy, A._setArrayType([], t3)));
          groups.$index(0, groupNode).members.push(node);
        }
      }
      return groups;
    },
    _sortAllDescendants$2(scope, currentNode) {
      var t1, t2, t3, sortedDescendants,
        scopeGroupNode = A.FocusTraversalGroup__getGroupNode(scope),
        groups = this._findGroups$2(scope, scopeGroupNode);
      for (t1 = new A.LinkedHashMapKeyIterator(groups, groups._modifications, groups._first); t1.moveNext$0();) {
        t2 = t1.__js_helper$_current;
        t3 = groups.$index(0, t2).policy.sortDescendants$2(groups.$index(0, t2).members, currentNode);
        t3 = A._setArrayType(t3.slice(0), A._arrayInstanceType(t3));
        B.JSArray_methods.clear$0(groups.$index(0, t2).members);
        B.JSArray_methods.addAll$1(groups.$index(0, t2).members, t3);
      }
      sortedDescendants = A._setArrayType([], type$.JSArray_FocusNode);
      if (groups.__js_helper$_length !== 0 && groups.containsKey$1(scopeGroupNode)) {
        t1 = groups.$index(0, scopeGroupNode);
        t1.toString;
        new A.FocusTraversalPolicy__sortAllDescendants_visitGroups(groups, sortedDescendants).call$1(t1);
      }
      B.JSArray_methods.removeWhere$1(sortedDescendants, new A.FocusTraversalPolicy__sortAllDescendants_closure());
      return sortedDescendants;
    },
    _moveFocus$2$forward(currentNode, $forward) {
      var t2, focusedChild, firstFocus, sortedNodes, previousNode, previousNode0, _this = this,
        t1 = currentNode.get$nearestScope();
      t1.toString;
      _this.super$FocusTraversalPolicy$invalidateScopeData(t1);
      _this.DirectionalFocusTraversalPolicyMixin__policyData.remove$1(0, t1);
      t2 = t1._focusedChildren;
      focusedChild = t2.length !== 0 ? B.JSArray_methods.get$last(t2) : null;
      if (focusedChild == null) {
        firstFocus = $forward ? _this._findInitialFocus$2$ignoreCurrentFocus(currentNode, false) : _this._findInitialFocus$3$fromEnd$ignoreCurrentFocus(currentNode, true, false);
        A._focusAndEnsureVisible(firstFocus, $forward ? B.ScrollPositionAlignmentPolicy_1 : B.ScrollPositionAlignmentPolicy_2);
        return true;
      }
      sortedNodes = _this._sortAllDescendants$2(t1, currentNode);
      if (sortedNodes.length === 0)
        return false;
      if ($forward && focusedChild === B.JSArray_methods.get$last(sortedNodes))
        switch (t1.traversalEdgeBehavior.index) {
          case 1:
            focusedChild.unfocus$0();
            return false;
          case 0:
            A._focusAndEnsureVisible(B.JSArray_methods.get$first(sortedNodes), B.ScrollPositionAlignmentPolicy_1);
            return true;
        }
      if (!$forward && focusedChild === B.JSArray_methods.get$first(sortedNodes))
        switch (t1.traversalEdgeBehavior.index) {
          case 1:
            focusedChild.unfocus$0();
            return false;
          case 0:
            A._focusAndEnsureVisible(B.JSArray_methods.get$last(sortedNodes), B.ScrollPositionAlignmentPolicy_2);
            return true;
        }
      for (t1 = J.get$iterator$ax($forward ? sortedNodes : new A.ReversedListIterable(sortedNodes, A._arrayInstanceType(sortedNodes)._eval$1("ReversedListIterable<1>"))), previousNode = null; t1.moveNext$0(); previousNode = previousNode0) {
        previousNode0 = t1.get$current();
        if (previousNode == focusedChild) {
          t1 = $forward ? B.ScrollPositionAlignmentPolicy_1 : B.ScrollPositionAlignmentPolicy_2;
          previousNode0.requestFocus$0();
          t2 = previousNode0._context;
          t2.toString;
          A.Scrollable_ensureVisible(t2, 1, t1);
          return true;
        }
      }
      return false;
    }
  };
  A.FocusTraversalPolicy__sortAllDescendants_visitGroups.prototype = {
    call$1(info) {
      var t1, t2, t3, t4, _i, node, t5;
      for (t1 = info.members, t2 = t1.length, t3 = this.sortedDescendants, t4 = this.groups, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
        node = t1[_i];
        if (t4.containsKey$1(node)) {
          t5 = t4.$index(0, node);
          t5.toString;
          this.call$1(t5);
        } else
          t3.push(node);
      }
    },
    $signature: 184
  };
  A.FocusTraversalPolicy__sortAllDescendants_closure.prototype = {
    call$1(node) {
      return !node.get$canRequestFocus() || node.get$skipTraversal();
    },
    $signature: 7
  };
  A._DirectionalPolicyDataEntry.prototype = {};
  A._DirectionalPolicyData.prototype = {};
  A.DirectionalFocusTraversalPolicyMixin.prototype = {
    findFirstFocusInDirection$2(currentNode, direction) {
      var _this = this;
      switch (direction) {
        case B.TraversalDirection_0:
          return _this._sortAndFindInitial$3$first$vertical(currentNode, false, true);
        case B.TraversalDirection_2:
          return _this._sortAndFindInitial$3$first$vertical(currentNode, true, true);
        case B.TraversalDirection_3:
          return _this._sortAndFindInitial$3$first$vertical(currentNode, false, false);
        case B.TraversalDirection_1:
          return _this._sortAndFindInitial$3$first$vertical(currentNode, true, false);
      }
    },
    _sortAndFindInitial$3$first$vertical(currentNode, first, vertical) {
      var sorted = currentNode.get$nearestScope().get$traversalDescendants().toList$0(0);
      A.mergeSort(sorted, new A.DirectionalFocusTraversalPolicyMixin__sortAndFindInitial_closure(vertical, first), type$.FocusNode);
      if (sorted.length !== 0)
        return B.JSArray_methods.get$first(sorted);
      return null;
    },
    _sortAndFilterHorizontally$3(direction, target, nodes) {
      var filtered, sorted;
      switch (direction) {
        case B.TraversalDirection_3:
          filtered = nodes.where$1(0, new A.DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure(target));
          break;
        case B.TraversalDirection_1:
          filtered = nodes.where$1(0, new A.DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure0(target));
          break;
        case B.TraversalDirection_0:
        case B.TraversalDirection_2:
          throw A.wrapException(A.ArgumentError$("Invalid direction " + A.S(direction), null));
        default:
          filtered = null;
      }
      sorted = filtered.toList$0(0);
      A.mergeSort(sorted, new A.DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure1(), type$.FocusNode);
      return sorted;
    },
    _sortAndFilterVertically$3(direction, target, nodes) {
      var filtered, sorted;
      switch (direction) {
        case B.TraversalDirection_0:
          filtered = nodes.where$1(0, new A.DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure(target));
          break;
        case B.TraversalDirection_2:
          filtered = nodes.where$1(0, new A.DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure0(target));
          break;
        case B.TraversalDirection_3:
        case B.TraversalDirection_1:
          throw A.wrapException(A.ArgumentError$("Invalid direction " + A.S(direction), null));
        default:
          filtered = null;
      }
      sorted = filtered.toList$0(0);
      A.mergeSort(sorted, new A.DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure1(), type$.FocusNode);
      return sorted;
    },
    _popPolicyDataIfNeeded$3(direction, nearestScope, focusedChild) {
      var t3, t4, popOrInvalidate, _this = this,
        t1 = _this.DirectionalFocusTraversalPolicyMixin__policyData,
        policyData = t1.$index(0, nearestScope),
        t2 = policyData != null;
      if (t2) {
        t3 = policyData.history;
        t4 = t3.length !== 0;
        if (t4)
          B.JSArray_methods.get$first(t3);
        t3 = t4;
      } else
        t3 = false;
      if (t3) {
        t3 = policyData.history;
        if (B.JSArray_methods.get$last(t3).node._focus_manager$_parent == null) {
          _this.super$FocusTraversalPolicy$invalidateScopeData(nearestScope);
          t1.remove$1(0, nearestScope);
          return false;
        }
        popOrInvalidate = new A.DirectionalFocusTraversalPolicyMixin__popPolicyDataIfNeeded_popOrInvalidate(_this, policyData, nearestScope);
        switch (direction) {
          case B.TraversalDirection_2:
          case B.TraversalDirection_0:
            switch (B.JSArray_methods.get$first(t3).direction) {
              case B.TraversalDirection_3:
              case B.TraversalDirection_1:
                _this.super$FocusTraversalPolicy$invalidateScopeData(nearestScope);
                t1.remove$1(0, nearestScope);
                break;
              case B.TraversalDirection_0:
              case B.TraversalDirection_2:
                if (popOrInvalidate.call$1(direction))
                  return true;
                break;
            }
            break;
          case B.TraversalDirection_3:
          case B.TraversalDirection_1:
            switch (B.JSArray_methods.get$first(t3).direction) {
              case B.TraversalDirection_3:
              case B.TraversalDirection_1:
                if (popOrInvalidate.call$1(direction))
                  return true;
                break;
              case B.TraversalDirection_0:
              case B.TraversalDirection_2:
                _this.super$FocusTraversalPolicy$invalidateScopeData(nearestScope);
                t1.remove$1(0, nearestScope);
                break;
            }
            break;
        }
      }
      if (t2 && policyData.history.length === 0) {
        _this.super$FocusTraversalPolicy$invalidateScopeData(nearestScope);
        t1.remove$1(0, nearestScope);
      }
      return false;
    },
    inDirection$2(currentNode, direction) {
      var firstFocus, focusedScrollable, found, eligibleNodes, filteredEligibleNodes, inBand, policyData, newEntry, _this = this,
        nearestScope = currentNode.get$nearestScope(),
        t1 = nearestScope._focusedChildren,
        focusedChild = t1.length !== 0 ? B.JSArray_methods.get$last(t1) : null;
      if (focusedChild == null) {
        firstFocus = _this.findFirstFocusInDirection$2(currentNode, direction);
        if (firstFocus == null)
          firstFocus = currentNode;
        switch (direction) {
          case B.TraversalDirection_0:
          case B.TraversalDirection_3:
            A._focusAndEnsureVisible(firstFocus, B.ScrollPositionAlignmentPolicy_2);
            break;
          case B.TraversalDirection_1:
          case B.TraversalDirection_2:
            A._focusAndEnsureVisible(firstFocus, B.ScrollPositionAlignmentPolicy_1);
            break;
        }
        return true;
      }
      if (_this._popPolicyDataIfNeeded$3(direction, nearestScope, focusedChild))
        return true;
      t1 = focusedChild._context;
      t1.toString;
      focusedScrollable = A.Scrollable_maybeOf(t1);
      found = null;
      switch (direction) {
        case B.TraversalDirection_2:
        case B.TraversalDirection_0:
          eligibleNodes = _this._sortAndFilterVertically$3(direction, focusedChild.get$rect(), nearestScope.get$traversalDescendants());
          if (eligibleNodes.length === 0)
            break;
          if (focusedScrollable != null && !focusedScrollable._scrollable$_position.get$atEdge()) {
            filteredEligibleNodes = new A.WhereIterable(eligibleNodes, new A.DirectionalFocusTraversalPolicyMixin_inDirection_closure(focusedScrollable), A._arrayInstanceType(eligibleNodes)._eval$1("WhereIterable<1>"));
            if (!filteredEligibleNodes.get$isEmpty(0))
              eligibleNodes = filteredEligibleNodes;
          }
          inBand = J.where$1$ax(eligibleNodes, new A.DirectionalFocusTraversalPolicyMixin_inDirection_closure0(new A.Rect(focusedChild.get$rect().left, -1 / 0, focusedChild.get$rect().right, 1 / 0)));
          if (!inBand.get$isEmpty(0)) {
            found = B.JSArray_methods.get$first(A.DirectionalFocusTraversalPolicyMixin__sortByDistancePreferVertical(focusedChild.get$rect().get$center(), inBand));
            break;
          }
          found = B.JSArray_methods.get$first(A.DirectionalFocusTraversalPolicyMixin__sortByDistancePreferHorizontal(focusedChild.get$rect().get$center(), eligibleNodes));
          break;
        case B.TraversalDirection_1:
        case B.TraversalDirection_3:
          eligibleNodes = _this._sortAndFilterHorizontally$3(direction, focusedChild.get$rect(), nearestScope.get$traversalDescendants());
          if (eligibleNodes.length === 0)
            break;
          if (focusedScrollable != null && !focusedScrollable._scrollable$_position.get$atEdge()) {
            filteredEligibleNodes = new A.WhereIterable(eligibleNodes, new A.DirectionalFocusTraversalPolicyMixin_inDirection_closure1(focusedScrollable), A._arrayInstanceType(eligibleNodes)._eval$1("WhereIterable<1>"));
            if (!filteredEligibleNodes.get$isEmpty(0))
              eligibleNodes = filteredEligibleNodes;
          }
          inBand = J.where$1$ax(eligibleNodes, new A.DirectionalFocusTraversalPolicyMixin_inDirection_closure2(new A.Rect(-1 / 0, focusedChild.get$rect().top, 1 / 0, focusedChild.get$rect().bottom)));
          if (!inBand.get$isEmpty(0)) {
            found = B.JSArray_methods.get$first(A.DirectionalFocusTraversalPolicyMixin__sortByDistancePreferHorizontal(focusedChild.get$rect().get$center(), inBand));
            break;
          }
          found = B.JSArray_methods.get$first(A.DirectionalFocusTraversalPolicyMixin__sortByDistancePreferVertical(focusedChild.get$rect().get$center(), eligibleNodes));
          break;
      }
      if (found != null) {
        t1 = _this.DirectionalFocusTraversalPolicyMixin__policyData;
        policyData = t1.$index(0, nearestScope);
        newEntry = new A._DirectionalPolicyDataEntry(direction, focusedChild);
        if (policyData != null)
          policyData.history.push(newEntry);
        else
          t1.$indexSet(0, nearestScope, new A._DirectionalPolicyData(A._setArrayType([newEntry], type$.JSArray__DirectionalPolicyDataEntry)));
        switch (direction) {
          case B.TraversalDirection_0:
          case B.TraversalDirection_3:
            A._focusAndEnsureVisible(found, B.ScrollPositionAlignmentPolicy_2);
            break;
          case B.TraversalDirection_2:
          case B.TraversalDirection_1:
            A._focusAndEnsureVisible(found, B.ScrollPositionAlignmentPolicy_1);
            break;
        }
        return true;
      }
      return false;
    }
  };
  A._ReadingOrderTraversalPolicy_FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin_changedScope_closure.prototype = {
    call$1(entry) {
      return entry.node === this.node;
    },
    $signature: 185
  };
  A.DirectionalFocusTraversalPolicyMixin__sortAndFindInitial_closure.prototype = {
    call$2(a, b) {
      if (this.vertical)
        if (this.first)
          return B.JSNumber_methods.compareTo$1(a.get$rect().top, b.get$rect().top);
        else
          return B.JSNumber_methods.compareTo$1(b.get$rect().bottom, a.get$rect().bottom);
      else if (this.first)
        return B.JSNumber_methods.compareTo$1(a.get$rect().left, b.get$rect().left);
      else
        return B.JSNumber_methods.compareTo$1(b.get$rect().right, a.get$rect().right);
    },
    $signature: 19
  };
  A.DirectionalFocusTraversalPolicyMixin__sortByDistancePreferVertical_closure.prototype = {
    call$2(nodeA, nodeB) {
      var a = nodeA.get$rect().get$center(),
        b = nodeB.get$rect().get$center(),
        t1 = this.target,
        vertical = A.DirectionalFocusTraversalPolicyMixin__verticalCompare(t1, a, b);
      if (vertical === 0)
        return A.DirectionalFocusTraversalPolicyMixin__horizontalCompare(t1, a, b);
      return vertical;
    },
    $signature: 19
  };
  A.DirectionalFocusTraversalPolicyMixin__sortByDistancePreferHorizontal_closure.prototype = {
    call$2(nodeA, nodeB) {
      var a = nodeA.get$rect().get$center(),
        b = nodeB.get$rect().get$center(),
        t1 = this.target,
        horizontal = A.DirectionalFocusTraversalPolicyMixin__horizontalCompare(t1, a, b);
      if (horizontal === 0)
        return A.DirectionalFocusTraversalPolicyMixin__verticalCompare(t1, a, b);
      return horizontal;
    },
    $signature: 19
  };
  A.DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure.prototype = {
    call$1(node) {
      var t1 = this.target;
      return !node.get$rect().$eq(0, t1) && node.get$rect().get$center()._dx <= t1.left;
    },
    $signature: 7
  };
  A.DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure0.prototype = {
    call$1(node) {
      var t1 = this.target;
      return !node.get$rect().$eq(0, t1) && node.get$rect().get$center()._dx >= t1.right;
    },
    $signature: 7
  };
  A.DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure1.prototype = {
    call$2(a, b) {
      return B.JSNumber_methods.compareTo$1(a.get$rect().get$center()._dx, b.get$rect().get$center()._dx);
    },
    $signature: 19
  };
  A.DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure.prototype = {
    call$1(node) {
      var t1 = this.target;
      return !node.get$rect().$eq(0, t1) && node.get$rect().get$center()._dy <= t1.top;
    },
    $signature: 7
  };
  A.DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure0.prototype = {
    call$1(node) {
      var t1 = this.target;
      return !node.get$rect().$eq(0, t1) && node.get$rect().get$center()._dy >= t1.bottom;
    },
    $signature: 7
  };
  A.DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure1.prototype = {
    call$2(a, b) {
      return B.JSNumber_methods.compareTo$1(a.get$rect().get$center()._dy, b.get$rect().get$center()._dy);
    },
    $signature: 19
  };
  A.DirectionalFocusTraversalPolicyMixin__popPolicyDataIfNeeded_popOrInvalidate.prototype = {
    call$1(direction) {
      var t2, alignmentPolicy,
        lastNode = this.policyData.history.pop().node,
        t1 = lastNode._context;
      t1.toString;
      t1 = A.Scrollable_maybeOf(t1);
      t2 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner.focusManager._primaryFocus._context;
      t2.toString;
      if (t1 != A.Scrollable_maybeOf(t2)) {
        t1 = this.$this;
        t2 = this.nearestScope;
        t1.super$FocusTraversalPolicy$invalidateScopeData(t2);
        t1.DirectionalFocusTraversalPolicyMixin__policyData.remove$1(0, t2);
        return false;
      }
      switch (direction) {
        case B.TraversalDirection_0:
        case B.TraversalDirection_3:
          alignmentPolicy = B.ScrollPositionAlignmentPolicy_2;
          break;
        case B.TraversalDirection_1:
        case B.TraversalDirection_2:
          alignmentPolicy = B.ScrollPositionAlignmentPolicy_1;
          break;
        default:
          alignmentPolicy = null;
      }
      A._focusAndEnsureVisible(lastNode, alignmentPolicy);
      return true;
    },
    $signature: 187
  };
  A.DirectionalFocusTraversalPolicyMixin_inDirection_closure.prototype = {
    call$1(node) {
      var t1 = node._context;
      t1.toString;
      return A.Scrollable_maybeOf(t1) === this.focusedScrollable;
    },
    $signature: 7
  };
  A.DirectionalFocusTraversalPolicyMixin_inDirection_closure0.prototype = {
    call$1(node) {
      return !node.get$rect().intersect$1(this.band).get$isEmpty(0);
    },
    $signature: 7
  };
  A.DirectionalFocusTraversalPolicyMixin_inDirection_closure1.prototype = {
    call$1(node) {
      var t1 = node._context;
      t1.toString;
      return A.Scrollable_maybeOf(t1) === this.focusedScrollable;
    },
    $signature: 7
  };
  A.DirectionalFocusTraversalPolicyMixin_inDirection_closure2.prototype = {
    call$1(node) {
      return !node.get$rect().intersect$1(this.band).get$isEmpty(0);
    },
    $signature: 7
  };
  A._ReadingOrderSortData.prototype = {
    get$directionalAncestors() {
      var t1 = this._directionalAncestors;
      if (t1 == null) {
        t1 = this.node._context;
        t1.toString;
        t1 = this._directionalAncestors = new A._ReadingOrderSortData_directionalAncestors_getDirectionalityAncestors().call$1(t1);
      }
      t1.toString;
      return t1;
    }
  };
  A._ReadingOrderSortData_commonDirectionalityOf_closure.prototype = {
    call$1(member) {
      var t1 = member.get$directionalAncestors();
      return A.LinkedHashSet_LinkedHashSet$from(t1, A._arrayInstanceType(t1)._precomputed1);
    },
    $signature: 188
  };
  A._ReadingOrderSortData_sortWithDirectionality_closure.prototype = {
    call$2(a, b) {
      switch (this.directionality.index) {
        case 1:
          return B.JSNumber_methods.compareTo$1(a.rect.left, b.rect.left);
        case 0:
          return B.JSNumber_methods.compareTo$1(b.rect.right, a.rect.right);
      }
    },
    $signature: 91
  };
  A._ReadingOrderSortData_directionalAncestors_getDirectionalityAncestors.prototype = {
    call$1(context) {
      var t2, ancestor,
        result = A._setArrayType([], type$.JSArray_Directionality),
        t1 = type$.Directionality,
        directionalityElement = context.getElementForInheritedWidgetOfExactType$1$0(t1);
      for (; directionalityElement != null;) {
        t2 = directionalityElement._widget;
        t2.toString;
        result.push(t1._as(t2));
        t2 = A._getAncestor(directionalityElement);
        if (t2 == null)
          directionalityElement = null;
        else {
          t2 = t2._inheritedElements;
          ancestor = t2 == null ? null : t2.$index(0, A.createRuntimeType(t1));
          directionalityElement = ancestor;
        }
      }
      return result;
    },
    $signature: 190
  };
  A._ReadingOrderDirectionalGroupData.prototype = {
    get$rect() {
      var t1, t2, t3, t4, _this = this;
      if (_this._focus_traversal$_rect == null)
        for (t1 = _this.members, t2 = A._arrayInstanceType(t1)._eval$1("MappedListIterable<1,Rect>"), t1 = new A.MappedListIterable(t1, new A._ReadingOrderDirectionalGroupData_rect_closure(), t2), t1 = new A.ListIterator(t1, t1.get$length(0), t2._eval$1("ListIterator<ListIterable.E>")), t2 = t2._eval$1("ListIterable.E"); t1.moveNext$0();) {
          t3 = t1.__internal$_current;
          if (t3 == null)
            t3 = t2._as(t3);
          t4 = _this._focus_traversal$_rect;
          if (t4 == null) {
            _this._focus_traversal$_rect = t3;
            t4 = t3;
          }
          _this._focus_traversal$_rect = t4.expandToInclude$1(t3);
        }
      t1 = _this._focus_traversal$_rect;
      t1.toString;
      return t1;
    }
  };
  A._ReadingOrderDirectionalGroupData_rect_closure.prototype = {
    call$1(data) {
      return data.rect;
    },
    $signature: 191
  };
  A._ReadingOrderDirectionalGroupData_sortWithDirectionality_closure.prototype = {
    call$2(a, b) {
      switch (this.directionality.index) {
        case 1:
          return B.JSNumber_methods.compareTo$1(a.get$rect().left, b.get$rect().left);
        case 0:
          return B.JSNumber_methods.compareTo$1(b.get$rect().right, a.get$rect().right);
      }
    },
    $signature: 289
  };
  A.ReadingOrderTraversalPolicy.prototype = {
    _collectDirectionalityGroups$1(candidates) {
      var t2, _i, candidate, currentDirection0, t3,
        currentDirection = B.JSArray_methods.get$first(candidates).directionality,
        t1 = type$.JSArray__ReadingOrderSortData,
        currentGroup = A._setArrayType([], t1),
        result = A._setArrayType([], type$.JSArray__ReadingOrderDirectionalGroupData);
      for (t2 = candidates.length, _i = 0; _i < candidates.length; candidates.length === t2 || (0, A.throwConcurrentModificationError)(candidates), ++_i) {
        candidate = candidates[_i];
        currentDirection0 = candidate.directionality;
        if (currentDirection0 == currentDirection) {
          currentGroup.push(candidate);
          continue;
        }
        result.push(new A._ReadingOrderDirectionalGroupData(currentGroup));
        currentGroup = A._setArrayType([candidate], t1);
        currentDirection = currentDirection0;
      }
      if (currentGroup.length !== 0)
        result.push(new A._ReadingOrderDirectionalGroupData(currentGroup));
      for (t1 = result.length, _i = 0; _i < result.length; result.length === t1 || (0, A.throwConcurrentModificationError)(result), ++_i) {
        t2 = result[_i].members;
        if (t2.length === 1)
          continue;
        t3 = B.JSArray_methods.get$first(t2).directionality;
        t3.toString;
        A._ReadingOrderSortData_sortWithDirectionality(t2, t3);
      }
      return result;
    },
    _pickNext$1(candidates) {
      var topmost, inBandOfTop, nearestCommonDirectionality, bandGroups;
      A.mergeSort(candidates, new A.ReadingOrderTraversalPolicy__pickNext_closure(), type$._ReadingOrderSortData);
      topmost = B.JSArray_methods.get$first(candidates);
      inBandOfTop = new A.ReadingOrderTraversalPolicy__pickNext_inBand().call$2(topmost, candidates);
      if (J.get$length$asx(inBandOfTop) <= 1)
        return topmost;
      nearestCommonDirectionality = A._ReadingOrderSortData_commonDirectionalityOf(inBandOfTop);
      nearestCommonDirectionality.toString;
      A._ReadingOrderSortData_sortWithDirectionality(inBandOfTop, nearestCommonDirectionality);
      bandGroups = this._collectDirectionalityGroups$1(inBandOfTop);
      if (bandGroups.length === 1)
        return B.JSArray_methods.get$first(B.JSArray_methods.get$first(bandGroups).members);
      A._ReadingOrderDirectionalGroupData_sortWithDirectionality(bandGroups, nearestCommonDirectionality);
      return B.JSArray_methods.get$first(B.JSArray_methods.get$first(bandGroups).members);
    },
    sortDescendants$2(descendants, currentNode) {
      var t1, t2, t3, t4, _i, node, t5, t6, ancestor, sortedList, current, next;
      if (descendants.length <= 1)
        return descendants;
      t1 = A._setArrayType([], type$.JSArray__ReadingOrderSortData);
      for (t2 = descendants.length, t3 = type$.nullable_Directionality, t4 = type$.Directionality, _i = 0; _i < descendants.length; descendants.length === t2 || (0, A.throwConcurrentModificationError)(descendants), ++_i) {
        node = descendants[_i];
        t5 = node.get$rect();
        t6 = node._context._inheritedElements;
        ancestor = t6 == null ? null : t6.$index(0, A.createRuntimeType(t4));
        if (ancestor == null)
          t6 = null;
        else {
          t6 = ancestor._widget;
          t6.toString;
        }
        t3._as(t6);
        t1.push(new A._ReadingOrderSortData(t6 == null ? null : t6.textDirection, t5, node));
      }
      sortedList = A._setArrayType([], type$.JSArray_FocusNode);
      current = this._pickNext$1(t1);
      sortedList.push(current.node);
      B.JSArray_methods.remove$1(t1, current);
      for (; t1.length !== 0;) {
        next = this._pickNext$1(t1);
        sortedList.push(next.node);
        B.JSArray_methods.remove$1(t1, next);
      }
      return sortedList;
    }
  };
  A.ReadingOrderTraversalPolicy__pickNext_closure.prototype = {
    call$2(a, b) {
      return B.JSNumber_methods.compareTo$1(a.rect.top, b.rect.top);
    },
    $signature: 91
  };
  A.ReadingOrderTraversalPolicy__pickNext_inBand.prototype = {
    call$2(current, candidates) {
      var t1 = current.rect,
        t2 = A._arrayInstanceType(candidates)._eval$1("WhereIterable<1>");
      t1 = A.List_List$_of(new A.WhereIterable(candidates, new A.ReadingOrderTraversalPolicy__pickNext_inBand_closure(new A.Rect(-1 / 0, t1.top, 1 / 0, t1.bottom)), t2), t2._eval$1("Iterable.E"));
      return t1;
    },
    $signature: 193
  };
  A.ReadingOrderTraversalPolicy__pickNext_inBand_closure.prototype = {
    call$1(item) {
      return !item.rect.intersect$1(this.band).get$isEmpty(0);
    },
    $signature: 194
  };
  A.FocusTraversalGroup.prototype = {
    createState$0() {
      return new A._FocusTraversalGroupState();
    }
  };
  A._FocusTraversalGroupNode.prototype = {};
  A._FocusTraversalGroupState.prototype = {
    get$focusNode() {
      var t1, t2, t3, _this = this,
        value = _this.___FocusTraversalGroupState_focusNode_FI;
      if (value === $) {
        t1 = _this._widget.policy;
        t2 = A._setArrayType([], type$.JSArray_FocusNode);
        t3 = $.$get$ChangeNotifier__emptyListeners();
        _this.___FocusTraversalGroupState_focusNode_FI !== $ && A.throwUnnamedLateFieldADI();
        value = _this.___FocusTraversalGroupState_focusNode_FI = new A._FocusTraversalGroupNode(t1, false, true, true, true, null, null, t2, t3);
      }
      return value;
    },
    dispose$0() {
      this.get$focusNode().dispose$0();
      this.super$State$dispose();
    },
    didUpdateWidget$1(oldWidget) {
      var _this = this;
      _this.super$State$didUpdateWidget(oldWidget);
      if (oldWidget.policy !== _this._widget.policy)
        _this.get$focusNode().policy = _this._widget.policy;
    },
    build$1(context) {
      var _null = null,
        t1 = this.get$focusNode();
      return A.Focus$(false, false, this._widget.child, _null, true, true, t1, false, _null, _null, _null, _null, _null, true);
    }
  };
  A.RequestFocusAction.prototype = {
    invoke$1(intent) {
      A._focusAndEnsureVisible(intent.get$focusNode(), B.ScrollPositionAlignmentPolicy_0);
    }
  };
  A.NextFocusIntent.prototype = {};
  A.NextFocusAction.prototype = {
    invoke$1(intent) {
      var t1 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner.focusManager._primaryFocus,
        t2 = t1._context;
      t2.toString;
      return A.FocusTraversalGroup_maybeOf(t2)._moveFocus$2$forward(t1, true);
    },
    toKeyEventResult$2(intent, invokeResult) {
      return invokeResult ? B.KeyEventResult_0 : B.KeyEventResult_2;
    }
  };
  A.PreviousFocusIntent.prototype = {};
  A.PreviousFocusAction.prototype = {
    invoke$1(intent) {
      var t1 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner.focusManager._primaryFocus,
        t2 = t1._context;
      t2.toString;
      return A.FocusTraversalGroup_maybeOf(t2)._moveFocus$2$forward(t1, false);
    },
    toKeyEventResult$2(intent, invokeResult) {
      return invokeResult ? B.KeyEventResult_0 : B.KeyEventResult_2;
    }
  };
  A.DirectionalFocusAction.prototype = {
    invoke$1(intent) {
      var t1 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner.focusManager._primaryFocus,
        t2 = t1._context;
      t2.toString;
      A.FocusTraversalGroup_maybeOf(t2).inDirection$2(t1, intent.direction);
    }
  };
  A._FocusTraversalPolicy_Object_Diagnosticable.prototype = {};
  A._ReadingOrderTraversalPolicy_FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin.prototype = {
    changedScope$2$node$oldScope(node, oldScope) {
      var t1;
      this.super$FocusTraversalPolicy$changedScope(node, oldScope);
      t1 = this.DirectionalFocusTraversalPolicyMixin__policyData.$index(0, oldScope);
      if (t1 != null)
        B.JSArray_methods.removeWhere$1(t1.history, new A._ReadingOrderTraversalPolicy_FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin_changedScope_closure(node));
    }
  };
  A.__ReadingOrderDirectionalGroupData_Object_Diagnosticable.prototype = {};
  A.__ReadingOrderSortData_Object_Diagnosticable.prototype = {};
  A.GlobalKey.prototype = {
    get$currentState() {
      var t1,
        element = $.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, this);
      if (element instanceof A.StatefulElement) {
        t1 = element._framework$_state;
        t1.toString;
        if (A._instanceType(this)._precomputed1._is(t1))
          return t1;
      }
      return null;
    }
  };
  A.LabeledGlobalKey.prototype = {
    toString$0(_) {
      var label, _this = this,
        t1 = _this._debugLabel;
      if (t1 != null)
        label = " " + t1;
      else
        label = "";
      if (A.getRuntimeTypeOfDartObject(_this) === B.Type_LabeledGlobalKey_78g)
        return "[GlobalKey#" + A.shortHash(_this) + label + "]";
      return "[" + ("<optimized out>#" + A.shortHash(_this)) + label + "]";
    }
  };
  A.GlobalObjectKey.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(this))
        return false;
      return this.$ti._is(other) && other.value === this.value;
    },
    get$hashCode(_) {
      return A.objectHashCode(this.value);
    },
    toString$0(_) {
      var _s15_ = "GlobalObjectKey",
        selfType = B.JSString_methods.endsWith$1(_s15_, "<State<StatefulWidget>>") ? B.JSString_methods.substring$2(_s15_, 0, -8) : _s15_;
      return "[" + selfType + " " + ("<optimized out>#" + A.shortHash(this.value)) + "]";
    }
  };
  A.Widget.prototype = {
    toStringShort$0() {
      var t1 = this.key;
      return t1 == null ? "Widget" : "Widget-" + t1.toString$0(0);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return this.super$Object$$eq(0, other);
    },
    get$hashCode(_) {
      return A.Object.prototype.get$hashCode.call(this, 0);
    }
  };
  A.StatelessWidget.prototype = {
    createElement$0() {
      return new A.StatelessElement(this, B._ElementLifecycle_0);
    }
  };
  A.StatefulWidget.prototype = {
    createElement$0() {
      var t1 = this.createState$0(),
        t2 = new A.StatefulElement(t1, this, B._ElementLifecycle_0);
      t1._element = t2;
      t1._widget = this;
      return t2;
    }
  };
  A.State.prototype = {
    initState$0() {
    },
    didUpdateWidget$1(oldWidget) {
    },
    setState$1(fn) {
      fn.call$0();
      this._element.markNeedsBuild$0();
    },
    deactivate$0() {
    },
    activate$0() {
    },
    dispose$0() {
    },
    didChangeDependencies$0() {
    }
  };
  A.ProxyWidget.prototype = {};
  A.ParentDataWidget.prototype = {
    createElement$0() {
      return new A.ParentDataElement(this, B._ElementLifecycle_0, A._instanceType(this)._eval$1("ParentDataElement<ParentDataWidget.T>"));
    }
  };
  A.InheritedWidget.prototype = {
    createElement$0() {
      return A.InheritedElement$(this);
    }
  };
  A.RenderObjectWidget.prototype = {
    updateRenderObject$2(context, renderObject) {
    },
    didUnmountRenderObject$1(renderObject) {
    }
  };
  A.LeafRenderObjectWidget.prototype = {
    createElement$0() {
      return new A.LeafRenderObjectElement(this, B._ElementLifecycle_0);
    }
  };
  A.SingleChildRenderObjectWidget.prototype = {
    createElement$0() {
      return new A.SingleChildRenderObjectElement(this, B._ElementLifecycle_0);
    }
  };
  A.MultiChildRenderObjectWidget.prototype = {
    createElement$0() {
      return A.MultiChildRenderObjectElement$(this);
    }
  };
  A._ElementLifecycle.prototype = {
    _enumToString$0() {
      return "_ElementLifecycle." + this._name;
    }
  };
  A._InactiveElements.prototype = {
    _unmount$1(element) {
      element.visitChildren$1(new A._InactiveElements__unmount_closure(this));
      element.unmount$0();
    },
    _unmountAll$0() {
      var elements,
        t1 = this._framework$_elements,
        elements0 = A.List_List$_of(t1, A._instanceType(t1)._precomputed1);
      B.JSArray_methods.sort$1(elements0, A.framework_Element__sort$closure());
      elements = elements0;
      t1.clear$0(0);
      try {
        t1 = elements;
        new A.ReversedListIterable(t1, A._arrayInstanceType(t1)._eval$1("ReversedListIterable<1>")).forEach$1(0, this.get$_unmount());
      } finally {
      }
    }
  };
  A._InactiveElements__unmount_closure.prototype = {
    call$1(child) {
      this.$this._unmount$1(child);
    },
    $signature: 4
  };
  A.BuildOwner.prototype = {
    scheduleBuildFor$1(element) {
      var _this = this;
      if (element._inDirtyList) {
        _this._dirtyElementsNeedsResorting = true;
        return;
      }
      if (!_this._scheduledFlushDirtyElements && _this.onBuildScheduled != null) {
        _this._scheduledFlushDirtyElements = true;
        _this.onBuildScheduled.call$0();
      }
      _this._dirtyElements.push(element);
      element._inDirtyList = true;
    },
    lockState$1(callback) {
      try {
        callback.call$0();
      } finally {
      }
    },
    buildScope$2(context, callback) {
      var element, e, stack, element0, _box_0, t2, exception, t3, _i, _this = this,
        t1 = callback == null;
      if (t1 && _this._dirtyElements.length === 0)
        return;
      try {
        _box_0 = {};
        _this._scheduledFlushDirtyElements = true;
        if (!t1) {
          _this._dirtyElementsNeedsResorting = false;
          try {
            callback.call$0();
          } finally {
          }
        }
        t1 = _this._dirtyElements;
        B.JSArray_methods.sort$1(t1, A.framework_Element__sort$closure());
        _this._dirtyElementsNeedsResorting = false;
        _box_0.dirtyCount = t1.length;
        _box_0.index = 0;
        for (t2 = 0; t2 < _box_0.dirtyCount;) {
          element = t1[t2];
          try {
            element.rebuild$0();
          } catch (exception) {
            e = A.unwrapException(exception);
            stack = A.getTraceFromException(exception);
            t2 = A.ErrorDescription$("while rebuilding dirty elements");
            t3 = $.FlutterError_onError;
            if (t3 != null)
              t3.call$1(new A.FlutterErrorDetails(e, stack, "widgets library", t2, new A.BuildOwner_buildScope_closure(_box_0, _this, element), false));
          }
          t2 = ++_box_0.index;
          if (_box_0.dirtyCount >= t1.length) {
            t3 = _this._dirtyElementsNeedsResorting;
            t3.toString;
          } else
            t3 = true;
          if (t3) {
            B.JSArray_methods.sort$1(t1, A.framework_Element__sort$closure());
            t2 = _this._dirtyElementsNeedsResorting = false;
            _box_0.dirtyCount = t1.length;
            while (true) {
              t3 = _box_0.index;
              if (!(t3 > 0 ? t1[t3 - 1]._dirty : t2))
                break;
              _box_0.index = t3 - 1;
            }
            t2 = t3;
          }
        }
      } finally {
        for (t1 = _this._dirtyElements, t2 = t1.length, _i = 0; _i < t2; ++_i) {
          element0 = t1[_i];
          element0._inDirtyList = false;
        }
        B.JSArray_methods.clear$0(t1);
        _this._scheduledFlushDirtyElements = false;
        _this._dirtyElementsNeedsResorting = null;
      }
    },
    buildScope$1(context) {
      return this.buildScope$2(context, null);
    },
    finalizeTree$0() {
      var e, stack, exception;
      try {
        this.lockState$1(this._inactiveElements.get$_unmountAll());
      } catch (exception) {
        e = A.unwrapException(exception);
        stack = A.getTraceFromException(exception);
        A._reportException(A.ErrorSummary$("while finalizing the widget tree"), e, stack, null);
      } finally {
      }
    }
  };
  A.BuildOwner_buildScope_closure.prototype = {
    call$0() {
      var _null = null,
        t1 = A._setArrayType([], type$.JSArray_DiagnosticsNode),
        t2 = this._box_0,
        t3 = t2.index,
        t4 = this.$this._dirtyElements.length,
        t5 = "The element being rebuilt at the time was index " + t3;
      t2 = "" + t2.dirtyCount;
      if (t3 < t4)
        J.add$1$ax(t1, A.DiagnosticsProperty$(t5 + " of " + t2, this.element, true, B.C__NoDefaultValue, _null, _null, _null, B.DiagnosticLevel_3, false, true, true, B.DiagnosticsTreeStyle_9, _null));
      else
        J.add$1$ax(t1, A.ErrorHint$(t5 + " of " + t2 + ", but _dirtyElements only had " + t4 + " entries. This suggests some confusion in the framework internals."));
      return t1;
    },
    $signature: 5
  };
  A.NotifiableElementMixin.prototype = {
    attachNotificationTree$0() {
      var t1 = this._parent;
      this._notificationTree = new A._NotificationNode(this, t1 == null ? null : t1._notificationTree);
    }
  };
  A._NotificationNode.prototype = {
    dispatchNotification$1(notification) {
      var t1 = this.current.onNotification$1(notification);
      if (t1)
        return;
      t1 = this.parent;
      if (t1 != null)
        t1.dispatchNotification$1(notification);
    }
  };
  A.Element.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      return this === other;
    },
    get$renderObject() {
      var current, t1;
      for (current = this; current != null;)
        if (current._lifecycleState === B._ElementLifecycle_3)
          break;
        else if (current instanceof A.RenderObjectElement)
          return current.get$renderObject();
        else {
          t1 = {};
          t1.next = null;
          current.visitChildren$1(new A.Element_renderObject_closure(t1));
          current = t1.next;
        }
      return null;
    },
    describeElement$1($name) {
      var _null = null;
      return A.DiagnosticsProperty$($name, this, true, B.C__NoDefaultValue, _null, _null, _null, B.DiagnosticLevel_3, false, true, true, B.DiagnosticsTreeStyle_9, _null);
    },
    visitChildren$1(visitor) {
    },
    updateChild$3(child, newWidget, newSlot) {
      var t1, newChild, _this = this;
      if (newWidget == null) {
        if (child != null)
          _this.deactivateChild$1(child);
        return null;
      }
      if (child != null) {
        t1 = child._widget;
        t1.toString;
        t1 = t1.super$Object$$eq(0, newWidget);
        if (t1) {
          if (!J.$eq$(child._slot, newSlot))
            _this.updateSlotForChild$2(child, newSlot);
          newChild = child;
        } else {
          t1 = child._widget;
          t1.toString;
          if (A.getRuntimeTypeOfDartObject(t1) === A.getRuntimeTypeOfDartObject(newWidget) && J.$eq$(t1.key, newWidget.key)) {
            if (!J.$eq$(child._slot, newSlot))
              _this.updateSlotForChild$2(child, newSlot);
            child.update$1(newWidget);
            newChild = child;
          } else {
            _this.deactivateChild$1(child);
            newChild = _this.inflateWidget$2(newWidget, newSlot);
          }
        }
      } else
        newChild = _this.inflateWidget$2(newWidget, newSlot);
      return newChild;
    },
    mount$2($parent, newSlot) {
      var t1, t2, key, _this = this;
      _this._parent = $parent;
      _this._slot = newSlot;
      _this._lifecycleState = B._ElementLifecycle_1;
      t1 = $parent != null;
      if (t1) {
        t2 = $parent.__Element__depth_A;
        t2 === $ && A.throwUnnamedLateFieldNI();
        ++t2;
      } else
        t2 = 1;
      _this.__Element__depth_A = t2;
      if (t1)
        _this._owner = $parent._owner;
      key = _this._widget.key;
      if (key instanceof A.GlobalKey)
        _this._owner._globalKeyRegistry.$indexSet(0, key, _this);
      _this._updateInheritance$0();
      _this.attachNotificationTree$0();
    },
    update$1(newWidget) {
      this._widget = newWidget;
    },
    updateSlotForChild$2(child, newSlot) {
      new A.Element_updateSlotForChild_visit(newSlot).call$1(child);
    },
    _updateSlot$1(newSlot) {
      this._slot = newSlot;
    },
    _updateDepth$1(parentDepth) {
      var expectedDepth = parentDepth + 1,
        t1 = this.__Element__depth_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      if (t1 < expectedDepth) {
        this.__Element__depth_A = expectedDepth;
        this.visitChildren$1(new A.Element__updateDepth_closure(expectedDepth));
      }
    },
    detachRenderObject$0() {
      this.visitChildren$1(new A.Element_detachRenderObject_closure());
      this._slot = null;
    },
    attachRenderObject$1(newSlot) {
      this.visitChildren$1(new A.Element_attachRenderObject_closure(newSlot));
      this._slot = newSlot;
    },
    _retakeInactiveElement$2(key, newWidget) {
      var t1, $parent,
        element = $.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, key);
      if (element == null)
        return null;
      t1 = element._widget;
      t1.toString;
      if (!(A.getRuntimeTypeOfDartObject(t1) === A.getRuntimeTypeOfDartObject(newWidget) && J.$eq$(t1.key, newWidget.key)))
        return null;
      $parent = element._parent;
      if ($parent != null) {
        $parent.forgetChild$1(element);
        $parent.deactivateChild$1(element);
      }
      this._owner._inactiveElements._framework$_elements.remove$1(0, element);
      return element;
    },
    inflateWidget$2(newWidget, newSlot) {
      var key, newChild, updatedChild, newChild0, t1, t2, _this = this;
      try {
        key = newWidget.key;
        if (key instanceof A.GlobalKey) {
          newChild = _this._retakeInactiveElement$2(key, newWidget);
          if (newChild != null) {
            t1 = newChild;
            t1._parent = _this;
            t2 = _this.__Element__depth_A;
            t2 === $ && A.throwUnnamedLateFieldNI();
            t1._updateDepth$1(t2);
            t1.activate$0();
            t1.visitChildren$1(A.framework_Element__activateRecursively$closure());
            t1.attachRenderObject$1(newSlot);
            updatedChild = _this.updateChild$3(newChild, newWidget, newSlot);
            t1 = updatedChild;
            t1.toString;
            return t1;
          }
        }
        newChild0 = newWidget.createElement$0();
        newChild0.mount$2(_this, newSlot);
        return newChild0;
      } finally {
      }
    },
    deactivateChild$1(child) {
      var t1;
      child._parent = null;
      child.detachRenderObject$0();
      t1 = this._owner._inactiveElements;
      if (child._lifecycleState === B._ElementLifecycle_1) {
        child.deactivate$0();
        child.visitChildren$1(A.framework__InactiveElements__deactivateRecursively$closure());
      }
      t1._framework$_elements.add$1(0, child);
    },
    forgetChild$1(child) {
    },
    activate$0() {
      var _this = this,
        t1 = _this._dependencies,
        t2 = t1 == null,
        hadDependencies = !t2 && t1._collection$_length !== 0 || _this._hadUnsatisfiedDependencies;
      _this._lifecycleState = B._ElementLifecycle_1;
      if (!t2)
        t1.clear$0(0);
      _this._hadUnsatisfiedDependencies = false;
      _this._updateInheritance$0();
      _this.attachNotificationTree$0();
      if (_this._dirty)
        _this._owner.scheduleBuildFor$1(_this);
      if (hadDependencies)
        _this.didChangeDependencies$0();
    },
    deactivate$0() {
      var t2, t3, _this = this,
        t1 = _this._dependencies;
      if (t1 != null && t1._collection$_length !== 0)
        for (t2 = A._instanceType(t1), t1 = new A._HashSetIterator(t1, t1._computeElements$0(), t2._eval$1("_HashSetIterator<1>")), t2 = t2._precomputed1; t1.moveNext$0();) {
          t3 = t1._current;
          (t3 == null ? t2._as(t3) : t3)._dependents.remove$1(0, _this);
        }
      _this._inheritedElements = null;
      _this._lifecycleState = B._ElementLifecycle_2;
    },
    unmount$0() {
      var _this = this,
        t1 = _this._widget,
        key = t1 == null ? null : t1.key;
      if (key instanceof A.GlobalKey) {
        t1 = _this._owner._globalKeyRegistry;
        if (J.$eq$(t1.$index(0, key), _this))
          t1.remove$1(0, key);
      }
      _this._dependencies = _this._widget = null;
      _this._lifecycleState = B._ElementLifecycle_3;
    },
    get$size() {
      var t1,
        renderObject = this.get$renderObject();
      if (renderObject instanceof A.RenderBox) {
        t1 = renderObject._size;
        t1.toString;
        return t1;
      }
      return null;
    },
    dependOnInheritedElement$2$aspect(ancestor, aspect) {
      var t1 = this._dependencies;
      (t1 == null ? this._dependencies = A.HashSet_HashSet(type$.InheritedElement) : t1).add$1(0, ancestor);
      ancestor.updateDependencies$2(this, aspect);
      t1 = ancestor._widget;
      t1.toString;
      return type$.InheritedWidget._as(t1);
    },
    dependOnInheritedWidgetOfExactType$1$0($T) {
      var t1 = this._inheritedElements,
        ancestor = t1 == null ? null : t1.$index(0, A.createRuntimeType($T));
      if (ancestor != null)
        return $T._as(this.dependOnInheritedElement$2$aspect(ancestor, null));
      this._hadUnsatisfiedDependencies = true;
      return null;
    },
    getInheritedWidgetOfExactType$1$0($T) {
      var t1 = this.getElementForInheritedWidgetOfExactType$1$0($T);
      if (t1 == null)
        t1 = null;
      else {
        t1 = t1._widget;
        t1.toString;
      }
      return $T._eval$1("0?")._as(t1);
    },
    getElementForInheritedWidgetOfExactType$1$0($T) {
      var t1 = this._inheritedElements;
      return t1 == null ? null : t1.$index(0, A.createRuntimeType($T));
    },
    attachNotificationTree$0() {
      var t1 = this._parent;
      this._notificationTree = t1 == null ? null : t1._notificationTree;
    },
    _updateInheritance$0() {
      var t1 = this._parent;
      this._inheritedElements = t1 == null ? null : t1._inheritedElements;
    },
    findAncestorWidgetOfExactType$1$0($T) {
      var t1, t2,
        ancestor = this._parent;
      while (true) {
        t1 = ancestor == null;
        if (!t1) {
          t2 = ancestor._widget;
          t2.toString;
          t2 = A.getRuntimeTypeOfDartObject(t2) !== A.createRuntimeType($T);
        } else
          t2 = false;
        if (!t2)
          break;
        ancestor = ancestor._parent;
      }
      if (t1)
        t1 = null;
      else {
        t1 = ancestor._widget;
        t1.toString;
      }
      return $T._eval$1("0?")._as(t1);
    },
    findAncestorStateOfType$1$0($T) {
      var t1, t2,
        ancestor = this._parent;
      for (; t1 = ancestor == null, !t1;) {
        if (ancestor instanceof A.StatefulElement) {
          t2 = ancestor._framework$_state;
          t2.toString;
          t2 = $T._is(t2);
        } else
          t2 = false;
        if (t2)
          break;
        ancestor = ancestor._parent;
      }
      type$.nullable_StatefulElement._as(ancestor);
      if (t1)
        t1 = null;
      else {
        t1 = ancestor._framework$_state;
        t1.toString;
      }
      return $T._eval$1("0?")._as(t1);
    },
    findAncestorRenderObjectOfType$1$0($T) {
      var ancestor = this._parent;
      for (; ancestor != null;) {
        if (ancestor instanceof A.RenderObjectElement && $T._is(ancestor.get$renderObject()))
          return $T._as(ancestor.get$renderObject());
        ancestor = ancestor._parent;
      }
      return null;
    },
    visitAncestorElements$1(visitor) {
      var ancestor = this._parent;
      while (true) {
        if (!(ancestor != null && visitor.call$1(ancestor)))
          break;
        ancestor = ancestor._parent;
      }
    },
    didChangeDependencies$0() {
      this.markNeedsBuild$0();
    },
    dispatchNotification$1(notification) {
      var t1 = this._notificationTree;
      if (t1 != null)
        t1.dispatchNotification$1(notification);
    },
    toStringShort$0() {
      var t1 = this._widget;
      t1 = t1 == null ? null : t1.toStringShort$0();
      return t1 == null ? "<optimized out>#" + A.shortHash(this) + "(DEFUNCT)" : t1;
    },
    markNeedsBuild$0() {
      var _this = this;
      if (_this._lifecycleState !== B._ElementLifecycle_1)
        return;
      if (_this._dirty)
        return;
      _this._dirty = true;
      _this._owner.scheduleBuildFor$1(_this);
    },
    rebuild$1$force(force) {
      var t1;
      if (this._lifecycleState === B._ElementLifecycle_1)
        t1 = !this._dirty && !force;
      else
        t1 = true;
      if (t1)
        return;
      try {
        this.performRebuild$0();
      } finally {
      }
    },
    rebuild$0() {
      return this.rebuild$1$force(false);
    },
    performRebuild$0() {
      this._dirty = false;
    },
    $isBuildContext: 1
  };
  A.Element_renderObject_closure.prototype = {
    call$1(child) {
      this._box_0.next = child;
    },
    $signature: 4
  };
  A.Element_updateSlotForChild_visit.prototype = {
    call$1(element) {
      element._updateSlot$1(this.newSlot);
      if (!(element instanceof A.RenderObjectElement))
        element.visitChildren$1(this);
    },
    $signature: 4
  };
  A.Element__updateDepth_closure.prototype = {
    call$1(child) {
      child._updateDepth$1(this.expectedDepth);
    },
    $signature: 4
  };
  A.Element_detachRenderObject_closure.prototype = {
    call$1(child) {
      child.detachRenderObject$0();
    },
    $signature: 4
  };
  A.Element_attachRenderObject_closure.prototype = {
    call$1(child) {
      child.attachRenderObject$1(this.newSlot);
    },
    $signature: 4
  };
  A.ErrorWidget.prototype = {
    createRenderObject$1(context) {
      var t1 = this.message,
        t2 = new A.RenderErrorBox(t1, A.LayerHandle$());
      t2.RenderObject$0();
      t2.RenderErrorBox$1(t1);
      return t2;
    }
  };
  A.ComponentElement.prototype = {
    mount$2($parent, newSlot) {
      this.super$Element$mount($parent, newSlot);
      this._firstBuild$0();
    },
    _firstBuild$0() {
      this.rebuild$0();
    },
    performRebuild$0() {
      var e, stack, e0, stack0, exception, built0, _this = this, built = null;
      try {
        built = _this.build$0();
        _this._widget.toString;
      } catch (exception) {
        e = A.unwrapException(exception);
        stack = A.getTraceFromException(exception);
        built0 = A.ErrorWidget__defaultErrorWidgetBuilder(A._reportException(A.ErrorDescription$("building " + _this.toString$0(0)), e, stack, new A.ComponentElement_performRebuild_closure()));
        built = built0;
      } finally {
        _this.super$Element$performRebuild();
      }
      try {
        _this._framework$_child = _this.updateChild$3(_this._framework$_child, built, _this._slot);
      } catch (exception) {
        e0 = A.unwrapException(exception);
        stack0 = A.getTraceFromException(exception);
        built0 = A.ErrorWidget__defaultErrorWidgetBuilder(A._reportException(A.ErrorDescription$("building " + _this.toString$0(0)), e0, stack0, new A.ComponentElement_performRebuild_closure0()));
        built = built0;
        _this._framework$_child = _this.updateChild$3(null, built, _this._slot);
      }
    },
    visitChildren$1(visitor) {
      var t1 = this._framework$_child;
      if (t1 != null)
        visitor.call$1(t1);
    },
    forgetChild$1(child) {
      this._framework$_child = null;
      this.super$Element$forgetChild(child);
    }
  };
  A.ComponentElement_performRebuild_closure.prototype = {
    call$0() {
      var t1 = A._setArrayType([], type$.JSArray_DiagnosticsNode);
      return t1;
    },
    $signature: 5
  };
  A.ComponentElement_performRebuild_closure0.prototype = {
    call$0() {
      var t1 = A._setArrayType([], type$.JSArray_DiagnosticsNode);
      return t1;
    },
    $signature: 5
  };
  A.StatelessElement.prototype = {
    build$0() {
      var t1 = this._widget;
      t1.toString;
      return type$.StatelessWidget._as(t1).build$1(this);
    },
    update$1(newWidget) {
      this.super$Element$update(newWidget);
      this.rebuild$1$force(true);
    }
  };
  A.StatefulElement.prototype = {
    build$0() {
      return this._framework$_state.build$1(this);
    },
    _firstBuild$0() {
      this._framework$_state.initState$0();
      this._framework$_state.didChangeDependencies$0();
      this.super$ComponentElement$_firstBuild();
    },
    performRebuild$0() {
      var _this = this;
      if (_this._didChangeDependencies) {
        _this._framework$_state.didChangeDependencies$0();
        _this._didChangeDependencies = false;
      }
      _this.super$ComponentElement$performRebuild();
    },
    update$1(newWidget) {
      var t1, t2, t3, _this = this;
      _this.super$Element$update(newWidget);
      t1 = _this._framework$_state;
      t2 = t1._widget;
      t2.toString;
      t3 = _this._widget;
      t3.toString;
      t1._widget = type$.StatefulWidget._as(t3);
      t1.didUpdateWidget$1(t2);
      _this.rebuild$1$force(true);
    },
    activate$0() {
      this.super$Element$activate();
      this._framework$_state.activate$0();
      this.markNeedsBuild$0();
    },
    deactivate$0() {
      this._framework$_state.deactivate$0();
      this.super$Element$deactivate();
    },
    unmount$0() {
      var _this = this;
      _this.super$Element$unmount();
      _this._framework$_state.dispose$0();
      _this._framework$_state = _this._framework$_state._element = null;
    },
    dependOnInheritedElement$2$aspect(ancestor, aspect) {
      return this.super$Element$dependOnInheritedElement(ancestor, aspect);
    },
    didChangeDependencies$0() {
      this.super$Element$didChangeDependencies();
      this._didChangeDependencies = true;
    }
  };
  A.ProxyElement.prototype = {
    build$0() {
      var t1 = this._widget;
      t1.toString;
      return type$.ProxyWidget._as(t1).child;
    },
    update$1(newWidget) {
      var _this = this,
        t1 = _this._widget;
      t1.toString;
      type$.ProxyWidget._as(t1);
      _this.super$Element$update(newWidget);
      _this.updated$1(t1);
      _this.rebuild$1$force(true);
    },
    updated$1(oldWidget) {
      this.notifyClients$1(oldWidget);
    }
  };
  A.ParentDataElement.prototype = {
    _applyParentData$1(widget) {
      this.visitChildren$1(new A.ParentDataElement__applyParentData_applyParentDataToChild(widget));
    },
    notifyClients$1(oldWidget) {
      var t1 = this._widget;
      t1.toString;
      this._applyParentData$1(this.$ti._eval$1("ParentDataWidget<1>")._as(t1));
    }
  };
  A.ParentDataElement__applyParentData_applyParentDataToChild.prototype = {
    call$1(child) {
      if (child instanceof A.RenderObjectElement)
        this.widget.applyParentData$1(child.get$renderObject());
      else
        child.visitChildren$1(this);
    },
    $signature: 4
  };
  A.InheritedElement.prototype = {
    _updateInheritance$0() {
      var _this = this,
        t1 = _this._parent,
        incomingWidgets = t1 == null ? null : t1._inheritedElements;
      if (incomingWidgets == null)
        incomingWidgets = B.PersistentHashMap_null;
      t1 = _this._widget;
      t1.toString;
      _this._inheritedElements = incomingWidgets.put$2(A.getRuntimeTypeOfDartObject(t1), _this);
    },
    setDependencies$2(dependent, value) {
      this._dependents.$indexSet(0, dependent, value);
    },
    updateDependencies$2(dependent, aspect) {
      this.setDependencies$2(dependent, null);
    },
    notifyDependent$2(oldWidget, dependent) {
      dependent.didChangeDependencies$0();
    },
    updated$1(oldWidget) {
      var t1 = this._widget;
      t1.toString;
      if (type$.InheritedWidget._as(t1).updateShouldNotify$1(oldWidget))
        this.super$ProxyElement$updated(oldWidget);
    },
    notifyClients$1(oldWidget) {
      var t1, t2, t3;
      for (t1 = this._dependents, t2 = A._instanceType(t1), t1 = new A._HashMapKeyIterator(t1, t1._computeKeys$0(), t2._eval$1("_HashMapKeyIterator<1>")), t2 = t2._precomputed1; t1.moveNext$0();) {
        t3 = t1._current;
        this.notifyDependent$2(oldWidget, t3 == null ? t2._as(t3) : t3);
      }
    }
  };
  A.RenderObjectElement.prototype = {
    get$renderObject() {
      var t1 = this._renderObject;
      t1.toString;
      return t1;
    },
    _findAncestorRenderObjectElement$0() {
      var ancestor = this._parent;
      while (true) {
        if (!(ancestor != null && !(ancestor instanceof A.RenderObjectElement)))
          break;
        ancestor = ancestor._parent;
      }
      return type$.nullable_RenderObjectElement._as(ancestor);
    },
    _findAncestorParentDataElement$0() {
      var result,
        ancestor = this._parent;
      while (true) {
        if (!(ancestor != null && !(ancestor instanceof A.RenderObjectElement))) {
          result = null;
          break;
        }
        if (ancestor instanceof A.ParentDataElement) {
          result = ancestor;
          break;
        }
        ancestor = ancestor._parent;
      }
      return result;
    },
    mount$2($parent, newSlot) {
      var t1, _this = this;
      _this.super$Element$mount($parent, newSlot);
      t1 = _this._widget;
      t1.toString;
      _this._renderObject = type$.RenderObjectWidget._as(t1).createRenderObject$1(_this);
      _this.attachRenderObject$1(newSlot);
      _this.super$Element$performRebuild();
    },
    update$1(newWidget) {
      this.super$Element$update(newWidget);
      this._performRebuild$0();
    },
    performRebuild$0() {
      this._performRebuild$0();
    },
    _performRebuild$0() {
      var _this = this,
        t1 = _this._widget;
      t1.toString;
      type$.RenderObjectWidget._as(t1).updateRenderObject$2(_this, _this.get$renderObject());
      _this.super$Element$performRebuild();
    },
    updateChildren$3$forgottenChildren(oldChildren, newWidgets, forgottenChildren) {
      var oldChild, newWidget, oldChildrenBottom0, t3, oldKeyedChildren, key, oldChild0, _this = this, _null = null,
        replaceWithNullIfForgotten = new A.RenderObjectElement_updateChildren_replaceWithNullIfForgotten(forgottenChildren),
        slotFor = new A.RenderObjectElement_updateChildren_slotFor(_null),
        t1 = newWidgets.length,
        newChildrenBottom = t1 - 1,
        oldChildrenBottom = oldChildren.length - 1,
        t2 = type$.Element,
        newChildren = A.List_List$filled(t1, $.$get$_NullElement_instance(), false, t2),
        previousChild = _null,
        newChildrenTop = 0, oldChildrenTop = 0;
      while (true) {
        if (!(oldChildrenTop <= oldChildrenBottom && newChildrenTop <= newChildrenBottom))
          break;
        oldChild = replaceWithNullIfForgotten.call$1(oldChildren[oldChildrenTop]);
        newWidget = newWidgets[newChildrenTop];
        if (oldChild != null) {
          t1 = oldChild._widget;
          t1.toString;
          t1 = !(A.getRuntimeTypeOfDartObject(t1) === A.getRuntimeTypeOfDartObject(newWidget) && J.$eq$(t1.key, newWidget.key));
        } else
          t1 = true;
        if (t1)
          break;
        t1 = _this.updateChild$3(oldChild, newWidget, slotFor.call$2(newChildrenTop, previousChild));
        t1.toString;
        newChildren[newChildrenTop] = t1;
        ++newChildrenTop;
        ++oldChildrenTop;
        previousChild = t1;
      }
      oldChildrenBottom0 = oldChildrenBottom;
      while (true) {
        t1 = oldChildrenTop <= oldChildrenBottom0;
        if (!(t1 && newChildrenTop <= newChildrenBottom))
          break;
        oldChild = replaceWithNullIfForgotten.call$1(oldChildren[oldChildrenBottom0]);
        newWidget = newWidgets[newChildrenBottom];
        if (oldChild != null) {
          t3 = oldChild._widget;
          t3.toString;
          t3 = !(A.getRuntimeTypeOfDartObject(t3) === A.getRuntimeTypeOfDartObject(newWidget) && J.$eq$(t3.key, newWidget.key));
        } else
          t3 = true;
        if (t3)
          break;
        --oldChildrenBottom0;
        --newChildrenBottom;
      }
      if (t1) {
        oldKeyedChildren = A.LinkedHashMap_LinkedHashMap$_empty(type$.Key, t2);
        for (; oldChildrenTop <= oldChildrenBottom0;) {
          oldChild = replaceWithNullIfForgotten.call$1(oldChildren[oldChildrenTop]);
          if (oldChild != null) {
            t2 = oldChild._widget.key;
            if (t2 != null)
              oldKeyedChildren.$indexSet(0, t2, oldChild);
            else {
              oldChild._parent = null;
              oldChild.detachRenderObject$0();
              t2 = _this._owner._inactiveElements;
              if (oldChild._lifecycleState === B._ElementLifecycle_1) {
                oldChild.deactivate$0();
                oldChild.visitChildren$1(A.framework__InactiveElements__deactivateRecursively$closure());
              }
              t2._framework$_elements.add$1(0, oldChild);
            }
          }
          ++oldChildrenTop;
        }
      } else
        oldKeyedChildren = _null;
      for (; newChildrenTop <= newChildrenBottom; previousChild = t2) {
        newWidget = newWidgets[newChildrenTop];
        oldChild = _null;
        if (t1) {
          key = newWidget.key;
          if (key != null) {
            oldChild0 = oldKeyedChildren.$index(0, key);
            if (oldChild0 != null) {
              t2 = oldChild0._widget;
              t2.toString;
              if (A.getRuntimeTypeOfDartObject(t2) === A.getRuntimeTypeOfDartObject(newWidget) && J.$eq$(t2.key, key)) {
                oldKeyedChildren.remove$1(0, key);
                oldChild = oldChild0;
              }
            } else
              oldChild = oldChild0;
          }
        }
        t2 = _this.updateChild$3(oldChild, newWidget, slotFor.call$2(newChildrenTop, previousChild));
        t2.toString;
        newChildren[newChildrenTop] = t2;
        ++newChildrenTop;
      }
      newChildrenBottom = newWidgets.length - 1;
      while (true) {
        if (!(oldChildrenTop <= oldChildrenBottom && newChildrenTop <= newChildrenBottom))
          break;
        t2 = _this.updateChild$3(oldChildren[oldChildrenTop], newWidgets[newChildrenTop], slotFor.call$2(newChildrenTop, previousChild));
        t2.toString;
        newChildren[newChildrenTop] = t2;
        ++newChildrenTop;
        ++oldChildrenTop;
        previousChild = t2;
      }
      if (t1 && oldKeyedChildren.__js_helper$_length !== 0)
        for (t1 = new A.LinkedHashMapValueIterator(oldKeyedChildren, oldKeyedChildren._modifications, oldKeyedChildren._first); t1.moveNext$0();) {
          t2 = t1.__js_helper$_current;
          t3 = forgottenChildren.contains$1(0, t2);
          if (!t3) {
            t2._parent = null;
            t2.detachRenderObject$0();
            t3 = _this._owner._inactiveElements;
            if (t2._lifecycleState === B._ElementLifecycle_1) {
              t2.deactivate$0();
              t2.visitChildren$1(A.framework__InactiveElements__deactivateRecursively$closure());
            }
            t3._framework$_elements.add$1(0, t2);
          }
        }
      return newChildren;
    },
    deactivate$0() {
      this.super$Element$deactivate();
    },
    unmount$0() {
      var _this = this,
        t1 = _this._widget;
      t1.toString;
      type$.RenderObjectWidget._as(t1);
      _this.super$Element$unmount();
      t1.didUnmountRenderObject$1(_this.get$renderObject());
      _this._renderObject.dispose$0();
      _this._renderObject = null;
    },
    _updateSlot$1(newSlot) {
      var t1, _this = this,
        oldSlot = _this._slot;
      _this.super$Element$_updateSlot(newSlot);
      t1 = _this._ancestorRenderObjectElement;
      t1.toString;
      t1.moveRenderObjectChild$3(_this.get$renderObject(), oldSlot, _this._slot);
    },
    attachRenderObject$1(newSlot) {
      var t1, parentDataElement, _this = this;
      _this._slot = newSlot;
      t1 = _this._ancestorRenderObjectElement = _this._findAncestorRenderObjectElement$0();
      if (t1 != null)
        t1.insertRenderObjectChild$2(_this.get$renderObject(), newSlot);
      parentDataElement = _this._findAncestorParentDataElement$0();
      if (parentDataElement != null) {
        t1 = parentDataElement._widget;
        t1.toString;
        type$.ParentDataWidget_ParentData._as(t1).applyParentData$1(_this.get$renderObject());
      }
    },
    detachRenderObject$0() {
      var _this = this,
        t1 = _this._ancestorRenderObjectElement;
      if (t1 != null) {
        t1.removeRenderObjectChild$2(_this.get$renderObject(), _this._slot);
        _this._ancestorRenderObjectElement = null;
      }
      _this._slot = null;
    },
    insertRenderObjectChild$2(child, slot) {
    },
    moveRenderObjectChild$3(child, oldSlot, newSlot) {
    },
    removeRenderObjectChild$2(child, slot) {
    }
  };
  A.RenderObjectElement_updateChildren_replaceWithNullIfForgotten.prototype = {
    call$1(child) {
      var t1 = this.forgottenChildren.contains$1(0, child);
      return t1 ? null : child;
    },
    $signature: 195
  };
  A.RenderObjectElement_updateChildren_slotFor.prototype = {
    call$2(newChildIndex, previousChild) {
      return new A.IndexedSlot(previousChild, newChildIndex, type$.IndexedSlot_nullable_Element);
    },
    $signature: 196
  };
  A.RootRenderObjectElement.prototype = {
    mount$2($parent, newSlot) {
      this.super$RenderObjectElement$mount($parent, newSlot);
    }
  };
  A.LeafRenderObjectElement.prototype = {
    forgetChild$1(child) {
      this.super$Element$forgetChild(child);
    },
    insertRenderObjectChild$2(child, slot) {
    },
    moveRenderObjectChild$3(child, oldSlot, newSlot) {
    },
    removeRenderObjectChild$2(child, slot) {
    }
  };
  A.SingleChildRenderObjectElement.prototype = {
    visitChildren$1(visitor) {
      var t1 = this._framework$_child;
      if (t1 != null)
        visitor.call$1(t1);
    },
    forgetChild$1(child) {
      this._framework$_child = null;
      this.super$Element$forgetChild(child);
    },
    mount$2($parent, newSlot) {
      var t1, t2, _this = this;
      _this.super$RenderObjectElement$mount($parent, newSlot);
      t1 = _this._framework$_child;
      t2 = _this._widget;
      t2.toString;
      _this._framework$_child = _this.updateChild$3(t1, type$.SingleChildRenderObjectWidget._as(t2).child, null);
    },
    update$1(newWidget) {
      var t1, t2, _this = this;
      _this.super$RenderObjectElement$update(newWidget);
      t1 = _this._framework$_child;
      t2 = _this._widget;
      t2.toString;
      _this._framework$_child = _this.updateChild$3(t1, type$.SingleChildRenderObjectWidget._as(t2).child, null);
    },
    insertRenderObjectChild$2(child, slot) {
      var t1 = this._renderObject;
      t1.toString;
      type$.RenderObjectWithChildMixin_RenderObject._as(t1).set$child(child);
    },
    moveRenderObjectChild$3(child, oldSlot, newSlot) {
    },
    removeRenderObjectChild$2(child, slot) {
      var t1 = this._renderObject;
      t1.toString;
      type$.RenderObjectWithChildMixin_RenderObject._as(t1).set$child(null);
    }
  };
  A.MultiChildRenderObjectElement.prototype = {
    get$renderObject() {
      return type$.ContainerRenderObjectMixin_of_RenderObject_and_ContainerParentDataMixin_RenderObject._as(A.RenderObjectElement.prototype.get$renderObject.call(this));
    },
    insertRenderObjectChild$2(child, slot) {
      var renderObject = this.get$renderObject(),
        t1 = slot.value;
      t1 = t1 == null ? null : t1.get$renderObject();
      renderObject.adoptChild$1(child);
      renderObject._insertIntoChildList$2$after(child, t1);
    },
    moveRenderObjectChild$3(child, oldSlot, newSlot) {
      var renderObject = this.get$renderObject(),
        t1 = newSlot.value;
      renderObject.move$2$after(child, t1 == null ? null : t1.get$renderObject());
    },
    removeRenderObjectChild$2(child, slot) {
      var renderObject = this.get$renderObject();
      renderObject._removeFromChildList$1(child);
      renderObject.dropChild$1(child);
    },
    visitChildren$1(visitor) {
      var t2, t3, _i, child,
        t1 = this.__MultiChildRenderObjectElement__children_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t2 = t1.length;
      t3 = this._forgottenChildren;
      _i = 0;
      for (; _i < t2; ++_i) {
        child = t1[_i];
        if (!t3.contains$1(0, child))
          visitor.call$1(child);
      }
    },
    forgetChild$1(child) {
      this._forgottenChildren.add$1(0, child);
      this.super$Element$forgetChild(child);
    },
    inflateWidget$2(newWidget, newSlot) {
      return this.super$Element$inflateWidget(newWidget, newSlot);
    },
    mount$2($parent, newSlot) {
      var t1, t2, children, t3, previousChild, i, newChild, _this = this;
      _this.super$RenderObjectElement$mount($parent, newSlot);
      t1 = _this._widget;
      t1.toString;
      t1 = type$.MultiChildRenderObjectWidget._as(t1).children;
      t2 = t1.length;
      children = A.List_List$filled(t2, $.$get$_NullElement_instance(), false, type$.Element);
      for (t3 = type$.IndexedSlot_nullable_Element, previousChild = null, i = 0; i < t2; ++i, previousChild = newChild) {
        newChild = _this.super$Element$inflateWidget(t1[i], new A.IndexedSlot(previousChild, i, t3));
        children[i] = newChild;
      }
      _this.__MultiChildRenderObjectElement__children_A = children;
    },
    update$1(newWidget) {
      var t1, t2, t3, _this = this;
      _this.super$RenderObjectElement$update(newWidget);
      t1 = _this._widget;
      t1.toString;
      type$.MultiChildRenderObjectWidget._as(t1);
      t2 = _this.__MultiChildRenderObjectElement__children_A;
      t2 === $ && A.throwUnnamedLateFieldNI();
      t3 = _this._forgottenChildren;
      _this.__MultiChildRenderObjectElement__children_A = _this.updateChildren$3$forgottenChildren(t2, t1.children, t3);
      t3.clear$0(0);
    }
  };
  A.IndexedSlot.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(this))
        return false;
      return other instanceof A.IndexedSlot && this.index === other.index && J.$eq$(this.value, other.value);
    },
    get$hashCode(_) {
      return A.Object_hash(this.index, this.value, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    }
  };
  A._NullElement.prototype = {};
  A._NullWidget1.prototype = {
    createElement$0() {
      return A.throwExpression(A.UnimplementedError$(null));
    }
  };
  A._State_Object_Diagnosticable.prototype = {};
  A.GestureRecognizerFactory.prototype = {};
  A.GestureRecognizerFactoryWithHandlers.prototype = {
    constructor$0() {
      return this._constructor.call$0();
    },
    initializer$1(instance) {
      return this._initializer.call$1(instance);
    }
  };
  A.GestureDetector.prototype = {
    build$1(context) {
      var _this = this,
        gestures = A.LinkedHashMap_LinkedHashMap$_empty(type$.Type, type$.GestureRecognizerFactory_GestureRecognizer),
        t1 = A.MediaQuery__maybeOf(context, B._MediaQueryAspect_16),
        gestureSettings = t1 == null ? null : t1.gestureSettings;
      t1 = true;
      if (_this.onTapDown == null)
        if (_this.onTapUp == null)
          if (_this.onTap == null)
            t1 = _this.onTapCancel != null;
      if (t1)
        gestures.$indexSet(0, B.Type_TapGestureRecognizer_mu4, new A.GestureRecognizerFactoryWithHandlers(new A.GestureDetector_build_closure(_this), new A.GestureDetector_build_closure0(_this, gestureSettings), type$.GestureRecognizerFactoryWithHandlers_TapGestureRecognizer));
      if (_this.onDoubleTap != null)
        gestures.$indexSet(0, B.Type_DoubleTapGestureRecognizer_V92, new A.GestureRecognizerFactoryWithHandlers(new A.GestureDetector_build_closure1(_this), new A.GestureDetector_build_closure2(_this, gestureSettings), type$.GestureRecognizerFactoryWithHandlers_DoubleTapGestureRecognizer));
      t1 = true;
      t1 = _this.onLongPress != null;
      if (t1)
        gestures.$indexSet(0, B.Type_LongPressGestureRecognizer_rMW, new A.GestureRecognizerFactoryWithHandlers(new A.GestureDetector_build_closure3(_this), new A.GestureDetector_build_closure4(_this, gestureSettings), type$.GestureRecognizerFactoryWithHandlers_LongPressGestureRecognizer));
      t1 = true;
      if (_this.onVerticalDragStart == null)
        if (_this.onVerticalDragUpdate == null)
          t1 = _this.onVerticalDragEnd != null;
      if (t1)
        gestures.$indexSet(0, B.Type_yGg, new A.GestureRecognizerFactoryWithHandlers(new A.GestureDetector_build_closure5(_this), new A.GestureDetector_build_closure6(_this, gestureSettings), type$.GestureRecognizerFactoryWithHandlers_VerticalDragGestureRecognizer));
      if (_this.onHorizontalDragDown != null || _this.onHorizontalDragUpdate != null || _this.onHorizontalDragEnd != null || _this.onHorizontalDragCancel != null)
        gestures.$indexSet(0, B.Type_btT, new A.GestureRecognizerFactoryWithHandlers(new A.GestureDetector_build_closure7(_this), new A.GestureDetector_build_closure8(_this, gestureSettings), type$.GestureRecognizerFactoryWithHandlers_HorizontalDragGestureRecognizer));
      t1 = true;
      t1 = _this.onPanEnd != null;
      if (t1)
        gestures.$indexSet(0, B.Type_PanGestureRecognizer_9Ie, new A.GestureRecognizerFactoryWithHandlers(new A.GestureDetector_build_closure9(_this), new A.GestureDetector_build_closure10(_this, gestureSettings), type$.GestureRecognizerFactoryWithHandlers_PanGestureRecognizer));
      return new A.RawGestureDetector(_this.child, gestures, _this.behavior, _this.excludeFromSemantics, null);
    }
  };
  A.GestureDetector_build_closure.prototype = {
    call$0() {
      return A.TapGestureRecognizer$(this.$this, null);
    },
    $signature: 197
  };
  A.GestureDetector_build_closure0.prototype = {
    call$1(instance) {
      var t1 = this.$this;
      instance.onTapDown = t1.onTapDown;
      instance.onTapUp = t1.onTapUp;
      instance.onTap = t1.onTap;
      instance.onTapCancel = t1.onTapCancel;
      instance.onTertiaryTapCancel = instance.onTertiaryTapUp = instance.onTertiaryTapDown = instance.onSecondaryTapCancel = instance.onSecondaryTapUp = instance.onSecondaryTapDown = instance.onSecondaryTap = null;
      instance.gestureSettings = this.gestureSettings;
      instance.supportedDevices = null;
    },
    $signature: 198
  };
  A.GestureDetector_build_closure1.prototype = {
    call$0() {
      var t1 = type$.int;
      return new A.DoubleTapGestureRecognizer(A.LinkedHashMap_LinkedHashMap$_empty(t1, type$._TapTracker), this.$this, null, A.multitap_DoubleTapGestureRecognizer__defaultButtonAcceptBehavior$closure(), A.LinkedHashMap_LinkedHashMap$_empty(t1, type$.PointerDeviceKind));
    },
    $signature: 199
  };
  A.GestureDetector_build_closure2.prototype = {
    call$1(instance) {
      instance.onDoubleTapDown = null;
      instance.onDoubleTap = this.$this.onDoubleTap;
      instance.onDoubleTapCancel = null;
      instance.gestureSettings = this.gestureSettings;
      instance.supportedDevices = null;
    },
    $signature: 200
  };
  A.GestureDetector_build_closure3.prototype = {
    call$0() {
      return A.LongPressGestureRecognizer$(this.$this, null, null);
    },
    $signature: 201
  };
  A.GestureDetector_build_closure4.prototype = {
    call$1(instance) {
      instance.onLongPressCancel = instance.onLongPressDown = null;
      instance.onLongPress = this.$this.onLongPress;
      instance.onTertiaryLongPressEnd = instance.onTertiaryLongPressUp = instance.onTertiaryLongPressMoveUpdate = instance.onTertiaryLongPressStart = instance.onTertiaryLongPress = instance.onTertiaryLongPressCancel = instance.onTertiaryLongPressDown = instance.onSecondaryLongPressEnd = instance.onSecondaryLongPressUp = instance.onSecondaryLongPressMoveUpdate = instance.onSecondaryLongPressStart = instance.onSecondaryLongPress = instance.onSecondaryLongPressCancel = instance.onSecondaryLongPressDown = instance.onLongPressEnd = instance.onLongPressUp = instance.onLongPressMoveUpdate = instance.onLongPressStart = null;
      instance.gestureSettings = this.gestureSettings;
      instance.supportedDevices = null;
    },
    $signature: 202
  };
  A.GestureDetector_build_closure5.prototype = {
    call$0() {
      return A.VerticalDragGestureRecognizer$(this.$this, null);
    },
    $signature: 93
  };
  A.GestureDetector_build_closure6.prototype = {
    call$1(instance) {
      var t1;
      instance.onDown = null;
      t1 = this.$this;
      instance.onStart = t1.onVerticalDragStart;
      instance.onUpdate = t1.onVerticalDragUpdate;
      instance.onEnd = t1.onVerticalDragEnd;
      instance.onCancel = null;
      instance.dragStartBehavior = t1.dragStartBehavior;
      instance.gestureSettings = this.gestureSettings;
      instance.supportedDevices = null;
    },
    $signature: 94
  };
  A.GestureDetector_build_closure7.prototype = {
    call$0() {
      return A.HorizontalDragGestureRecognizer$(this.$this, null);
    },
    $signature: 95
  };
  A.GestureDetector_build_closure8.prototype = {
    call$1(instance) {
      var t1 = this.$this;
      instance.onDown = t1.onHorizontalDragDown;
      instance.onStart = null;
      instance.onUpdate = t1.onHorizontalDragUpdate;
      instance.onEnd = t1.onHorizontalDragEnd;
      instance.onCancel = t1.onHorizontalDragCancel;
      instance.dragStartBehavior = t1.dragStartBehavior;
      instance.gestureSettings = this.gestureSettings;
      instance.supportedDevices = null;
    },
    $signature: 96
  };
  A.GestureDetector_build_closure9.prototype = {
    call$0() {
      var t1 = type$.int,
        t2 = A.HashSet_HashSet(t1);
      return new A.PanGestureRecognizer(B.DragStartBehavior_1, A.monodrag_DragGestureRecognizer__defaultBuilder$closure(), B._DragState_0, A.LinkedHashMap_LinkedHashMap$_empty(t1, type$.VelocityTracker), A.LinkedHashSet_LinkedHashSet$_empty(t1), A.LinkedHashMap_LinkedHashMap$_empty(t1, type$.GestureArenaEntry), t2, this.$this, null, A.monodrag_DragGestureRecognizer__defaultButtonAcceptBehavior$closure(), A.LinkedHashMap_LinkedHashMap$_empty(t1, type$.PointerDeviceKind));
    },
    $signature: 207
  };
  A.GestureDetector_build_closure10.prototype = {
    call$1(instance) {
      var t1;
      instance.onUpdate = instance.onStart = instance.onDown = null;
      t1 = this.$this;
      instance.onEnd = t1.onPanEnd;
      instance.onCancel = null;
      instance.dragStartBehavior = t1.dragStartBehavior;
      instance.gestureSettings = this.gestureSettings;
      instance.supportedDevices = null;
    },
    $signature: 208
  };
  A.RawGestureDetector.prototype = {
    createState$0() {
      return new A.RawGestureDetectorState(B.Map_empty);
    }
  };
  A.RawGestureDetectorState.prototype = {
    initState$0() {
      var t1, _this = this;
      _this.super$State$initState();
      t1 = _this._widget;
      t1.toString;
      _this._gesture_detector$_semantics = new A._DefaultSemanticsGestureDelegate(_this);
      _this._syncAll$1(t1.gestures);
    },
    didUpdateWidget$1(oldWidget) {
      var t1;
      this.super$State$didUpdateWidget(oldWidget);
      t1 = this._widget;
      this._syncAll$1(t1.gestures);
    },
    replaceSemanticsActions$1(actions) {
      if (this._widget.excludeFromSemantics)
        return;
      type$.nullable_RenderSemanticsGestureHandler._as(this._element.get$renderObject()).set$validActions(actions);
    },
    dispose$0() {
      for (var t1 = this._recognizers.get$values(), t1 = t1.get$iterator(t1); t1.moveNext$0();)
        t1.get$current().dispose$0();
      this._recognizers = null;
      this.super$State$dispose();
    },
    _syncAll$1(gestures) {
      var t2, t3, t4, t5, _this = this,
        t1 = _this._recognizers;
      t1.toString;
      _this._recognizers = A.LinkedHashMap_LinkedHashMap$_empty(type$.Type, type$.GestureRecognizer);
      for (t2 = gestures.get$keys(), t2 = t2.get$iterator(t2); t2.moveNext$0();) {
        t3 = t2.get$current();
        t4 = _this._recognizers;
        t4.toString;
        t5 = t1.$index(0, t3);
        t4.$indexSet(0, t3, t5 == null ? gestures.$index(0, t3).constructor$0() : t5);
        t4 = gestures.$index(0, t3);
        t4.toString;
        t3 = _this._recognizers.$index(0, t3);
        t3.toString;
        t4.initializer$1(t3);
      }
      for (t2 = t1.get$keys(), t2 = t2.get$iterator(t2); t2.moveNext$0();) {
        t3 = t2.get$current();
        if (!_this._recognizers.containsKey$1(t3))
          t1.$index(0, t3).dispose$0();
      }
    },
    _handlePointerDown$1($event) {
      var t1, t2;
      for (t1 = this._recognizers.get$values(), t1 = t1.get$iterator(t1); t1.moveNext$0();) {
        t2 = t1.get$current();
        t2._pointerToKind.$indexSet(0, $event.get$pointer(), $event.get$kind());
        if (t2.isPointerAllowed$1($event))
          t2.addAllowedPointer$1($event);
        else
          t2.handleNonAllowedPointer$1($event);
      }
    },
    _handlePointerPanZoomStart$1($event) {
      var t1, t2;
      for (t1 = this._recognizers.get$values(), t1 = t1.get$iterator(t1); t1.moveNext$0();) {
        t2 = t1.get$current();
        t2._pointerToKind.$indexSet(0, $event.get$pointer(), $event.get$kind());
        if (t2.isPointerPanZoomAllowed$1($event))
          t2.addAllowedPointerPanZoom$1($event);
      }
    },
    _updateSemanticsForRenderObject$1(renderObject) {
      var t1 = this._gesture_detector$_semantics,
        t2 = t1.detectorState._recognizers;
      t2.toString;
      renderObject.set$onTap(t1._getTapHandler$1(t2));
      renderObject.set$onLongPress(t1._getLongPressHandler$1(t2));
      renderObject.set$onHorizontalDragUpdate(t1._getHorizontalDragUpdateHandler$1(t2));
      renderObject.set$onVerticalDragUpdate(t1._getVerticalDragUpdateHandler$1(t2));
    },
    build$1(context) {
      var t4, t5, result, _this = this, _null = null,
        t1 = _this._widget,
        t2 = t1.behavior,
        t3 = t2 == null;
      if (t3)
        t4 = t1.child == null ? B.HitTestBehavior_2 : B.HitTestBehavior_0;
      else
        t4 = t2;
      t5 = t1.child;
      result = A.Listener$(t4, t5, _null, _this.get$_handlePointerDown(), _this.get$_handlePointerPanZoomStart(), _null, _null);
      if (!t1.excludeFromSemantics) {
        if (t3)
          t1 = t5 == null ? B.HitTestBehavior_2 : B.HitTestBehavior_0;
        else
          t1 = t2;
        result = new A._GestureSemantics(t1, _this.get$_updateSemanticsForRenderObject(), result, _null);
      }
      return result;
    }
  };
  A._GestureSemantics.prototype = {
    createRenderObject$1(context) {
      var renderObject = new A.RenderSemanticsGestureHandler(B.HitTestBehavior_0, null, A.LayerHandle$());
      renderObject.RenderObject$0();
      renderObject.set$child(null);
      renderObject.behavior = this.behavior;
      this.assignSemantics.call$1(renderObject);
      return renderObject;
    },
    updateRenderObject$2(context, renderObject) {
      renderObject.behavior = this.behavior;
      this.assignSemantics.call$1(renderObject);
    }
  };
  A.SemanticsGestureDelegate.prototype = {
    toString$0(_) {
      return "SemanticsGestureDelegate()";
    }
  };
  A._DefaultSemanticsGestureDelegate.prototype = {
    assignSemantics$1(renderObject) {
      var _this = this,
        t1 = _this.detectorState._recognizers;
      t1.toString;
      renderObject.set$onTap(_this._getTapHandler$1(t1));
      renderObject.set$onLongPress(_this._getLongPressHandler$1(t1));
      renderObject.set$onHorizontalDragUpdate(_this._getHorizontalDragUpdateHandler$1(t1));
      renderObject.set$onVerticalDragUpdate(_this._getVerticalDragUpdateHandler$1(t1));
    },
    _getTapHandler$1(recognizers) {
      var tap = type$.nullable_TapGestureRecognizer._as(recognizers.$index(0, B.Type_TapGestureRecognizer_mu4));
      if (tap == null)
        return null;
      return new A._DefaultSemanticsGestureDelegate__getTapHandler_closure(tap);
    },
    _getLongPressHandler$1(recognizers) {
      var longPress = type$.nullable_LongPressGestureRecognizer._as(recognizers.$index(0, B.Type_LongPressGestureRecognizer_rMW));
      if (longPress == null)
        return null;
      return new A._DefaultSemanticsGestureDelegate__getLongPressHandler_closure(longPress);
    },
    _getHorizontalDragUpdateHandler$1(recognizers) {
      var horizontal = type$.nullable_HorizontalDragGestureRecognizer._as(recognizers.$index(0, B.Type_btT)),
        pan = type$.nullable_PanGestureRecognizer._as(recognizers.$index(0, B.Type_PanGestureRecognizer_9Ie)),
        horizontalHandler = horizontal == null ? null : new A._DefaultSemanticsGestureDelegate__getHorizontalDragUpdateHandler_closure(horizontal),
        panHandler = pan == null ? null : new A._DefaultSemanticsGestureDelegate__getHorizontalDragUpdateHandler_closure0(pan);
      if (horizontalHandler == null && panHandler == null)
        return null;
      return new A._DefaultSemanticsGestureDelegate__getHorizontalDragUpdateHandler_closure1(horizontalHandler, panHandler);
    },
    _getVerticalDragUpdateHandler$1(recognizers) {
      var vertical = type$.nullable_VerticalDragGestureRecognizer._as(recognizers.$index(0, B.Type_yGg)),
        pan = type$.nullable_PanGestureRecognizer._as(recognizers.$index(0, B.Type_PanGestureRecognizer_9Ie)),
        verticalHandler = vertical == null ? null : new A._DefaultSemanticsGestureDelegate__getVerticalDragUpdateHandler_closure(vertical),
        panHandler = pan == null ? null : new A._DefaultSemanticsGestureDelegate__getVerticalDragUpdateHandler_closure0(pan);
      if (verticalHandler == null && panHandler == null)
        return null;
      return new A._DefaultSemanticsGestureDelegate__getVerticalDragUpdateHandler_closure1(verticalHandler, panHandler);
    }
  };
  A._DefaultSemanticsGestureDelegate__getTapHandler_closure.prototype = {
    call$0() {
      var t1 = this.tap,
        t2 = t1.onTapDown;
      if (t2 != null)
        t2.call$1(new A.TapDownDetails(B.Offset_0_0, B.Offset_0_0));
      t2 = t1.onTapUp;
      if (t2 != null)
        t2.call$1(new A.TapUpDetails());
      t1 = t1.onTap;
      if (t1 != null)
        t1.call$0();
    },
    $signature: 0
  };
  A._DefaultSemanticsGestureDelegate__getLongPressHandler_closure.prototype = {
    call$0() {
      var t1 = this.longPress,
        t2 = t1.onLongPressStart;
      if (t2 != null)
        t2.call$1(B.LongPressStartDetails_Offset_0_0);
      t2 = t1.onLongPress;
      if (t2 != null)
        t2.call$0();
      t1 = t1.onLongPressEnd;
      if (t1 != null)
        t1.call$1(B.LongPressEndDetails_pU8);
    },
    $signature: 0
  };
  A._DefaultSemanticsGestureDelegate__getHorizontalDragUpdateHandler_closure.prototype = {
    call$1(details) {
      var t1 = this.horizontal,
        t2 = t1.onDown;
      if (t2 != null)
        t2.call$1(new A.DragDownDetails(B.Offset_0_0));
      t2 = t1.onStart;
      if (t2 != null)
        t2.call$1(new A.DragStartDetails(null, B.Offset_0_0, null));
      t2 = t1.onUpdate;
      if (t2 != null)
        t2.call$1(details);
      t1 = t1.onEnd;
      if (t1 != null)
        t1.call$1(new A.DragEndDetails(B.Velocity_Offset_0_0, 0));
    },
    $signature: 10
  };
  A._DefaultSemanticsGestureDelegate__getHorizontalDragUpdateHandler_closure0.prototype = {
    call$1(details) {
      var t1 = this.pan,
        t2 = t1.onDown;
      if (t2 != null)
        t2.call$1(new A.DragDownDetails(B.Offset_0_0));
      t2 = t1.onStart;
      if (t2 != null)
        t2.call$1(new A.DragStartDetails(null, B.Offset_0_0, null));
      t2 = t1.onUpdate;
      if (t2 != null)
        t2.call$1(details);
      t1 = t1.onEnd;
      if (t1 != null)
        t1.call$1(new A.DragEndDetails(B.Velocity_Offset_0_0, null));
    },
    $signature: 10
  };
  A._DefaultSemanticsGestureDelegate__getHorizontalDragUpdateHandler_closure1.prototype = {
    call$1(details) {
      var t1 = this.horizontalHandler;
      if (t1 != null)
        t1.call$1(details);
      t1 = this.panHandler;
      if (t1 != null)
        t1.call$1(details);
    },
    $signature: 10
  };
  A._DefaultSemanticsGestureDelegate__getVerticalDragUpdateHandler_closure.prototype = {
    call$1(details) {
      var t1 = this.vertical,
        t2 = t1.onDown;
      if (t2 != null)
        t2.call$1(new A.DragDownDetails(B.Offset_0_0));
      t2 = t1.onStart;
      if (t2 != null)
        t2.call$1(new A.DragStartDetails(null, B.Offset_0_0, null));
      t2 = t1.onUpdate;
      if (t2 != null)
        t2.call$1(details);
      t1 = t1.onEnd;
      if (t1 != null)
        t1.call$1(new A.DragEndDetails(B.Velocity_Offset_0_0, 0));
    },
    $signature: 10
  };
  A._DefaultSemanticsGestureDelegate__getVerticalDragUpdateHandler_closure0.prototype = {
    call$1(details) {
      var t1 = this.pan,
        t2 = t1.onDown;
      if (t2 != null)
        t2.call$1(new A.DragDownDetails(B.Offset_0_0));
      t2 = t1.onStart;
      if (t2 != null)
        t2.call$1(new A.DragStartDetails(null, B.Offset_0_0, null));
      t2 = t1.onUpdate;
      if (t2 != null)
        t2.call$1(details);
      t1 = t1.onEnd;
      if (t1 != null)
        t1.call$1(new A.DragEndDetails(B.Velocity_Offset_0_0, null));
    },
    $signature: 10
  };
  A._DefaultSemanticsGestureDelegate__getVerticalDragUpdateHandler_closure1.prototype = {
    call$1(details) {
      var t1 = this.verticalHandler;
      if (t1 != null)
        t1.call$1(details);
      t1 = this.panHandler;
      if (t1 != null)
        t1.call$1(details);
    },
    $signature: 10
  };
  A.HeroFlightDirection.prototype = {
    _enumToString$0() {
      return "HeroFlightDirection." + this._name;
    }
  };
  A.Hero.prototype = {};
  A.Hero__allHeroesFor_inviteHero.prototype = {
    call$2(hero, tag) {
      var t1 = hero._widget;
      t1.toString;
      type$.Hero._as(t1);
      t1 = hero._framework$_state;
      t1.toString;
      type$._HeroState._as(t1);
      if (!this.isUserGestureTransition)
        this.result.$indexSet(0, tag, t1);
      else
        t1.endFlight$0();
    },
    $signature: 211
  };
  A.Hero__allHeroesFor_visitor.prototype = {
    call$1(element) {
      var tag, heroRoute, _this = this,
        t1 = element._widget;
      t1.toString;
      if (t1 instanceof A.Hero) {
        type$.StatefulElement._as(element);
        tag = t1.tag;
        if (A.Navigator_of(element) === _this.navigator)
          _this.inviteHero.call$2(element, tag);
        else {
          heroRoute = A.ModalRoute_of(element, type$.nullable_Object);
          if (heroRoute != null && heroRoute.get$isCurrent())
            _this.inviteHero.call$2(element, tag);
        }
      }
      element.visitChildren$1(_this);
    },
    $signature: 4
  };
  A._HeroState_startFlight_closure.prototype = {
    call$0() {
      var t1 = this.box._size;
      t1.toString;
      this.$this._placeholderSize = t1;
    },
    $signature: 0
  };
  A._HeroState_endFlight_closure.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A._HeroFlightManifest.prototype = {
    get$animation() {
      var t1, _this = this;
      if (_this.type === B.HeroFlightDirection_0) {
        t1 = _this.toRoute._animationProxy;
        t1.toString;
      } else {
        t1 = _this.fromRoute._animationProxy;
        t1.toString;
      }
      return A.CurvedAnimation$(B.Cubic_Dkk, t1, _this.isDiverted ? null : new A.FlippedCurve(B.Cubic_Dkk));
    },
    createHeroRectTween$2$begin$end(begin, end) {
      var t1;
      this.toHero._widget.toString;
      t1 = this.createRectTween.call$2(begin, end);
      return t1 == null ? new A.RectTween(begin, end) : t1;
    },
    get$fromHeroLocation() {
      var t1, result, _this = this,
        value = _this.___HeroFlightManifest_fromHeroLocation_FI;
      if (value === $) {
        t1 = _this.fromHero._element;
        t1.toString;
        result = A._HeroFlightManifest__boundingBoxFor(t1, $.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, _this.fromRoute._subtreeKey));
        _this.___HeroFlightManifest_fromHeroLocation_FI !== $ && A.throwUnnamedLateFieldADI();
        _this.___HeroFlightManifest_fromHeroLocation_FI = result;
        value = result;
      }
      return value;
    },
    get$toHeroLocation() {
      var t1, result, _this = this,
        value = _this.___HeroFlightManifest_toHeroLocation_FI;
      if (value === $) {
        t1 = _this.toHero._element;
        t1.toString;
        result = A._HeroFlightManifest__boundingBoxFor(t1, $.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, _this.toRoute._subtreeKey));
        _this.___HeroFlightManifest_toHeroLocation_FI !== $ && A.throwUnnamedLateFieldADI();
        _this.___HeroFlightManifest_toHeroLocation_FI = result;
        value = result;
      }
      return value;
    },
    get$isValid() {
      var result, _this = this,
        value = _this.___HeroFlightManifest_isValid_FI;
      if (value === $) {
        if (_this.get$toHeroLocation().get$isFinite(0))
          result = _this.isDiverted || _this.get$fromHeroLocation().get$isFinite(0);
        else
          result = false;
        _this.___HeroFlightManifest_isValid_FI !== $ && A.throwUnnamedLateFieldADI();
        value = _this.___HeroFlightManifest_isValid_FI = result;
      }
      return value;
    },
    toString$0(_) {
      var t6, t7, _this = this,
        t1 = _this.type.toString$0(0),
        t2 = _this.fromHero,
        t3 = t2._widget.tag.toString$0(0),
        t4 = _this.fromRoute._settings.toString$0(0),
        t5 = _this.toRoute._settings.toString$0(0);
      t2 = t2.toString$0(0);
      t6 = _this.toHero.toString$0(0);
      t7 = _this.get$isValid() ? "" : ", INVALID";
      return "_HeroFlightManifest(" + t1 + " tag: " + t3 + " from route: " + t4 + " to route: " + t5 + " with hero: " + t2 + " to " + t6 + ")" + t7;
    }
  };
  A._HeroFlight.prototype = {
    _buildOverlay$1(context) {
      var t2, t3, t4, t5, _this = this,
        t1 = _this.shuttle;
      if (t1 == null) {
        t1 = _this.___HeroFlight_manifest_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
        t2 = t1.get$animation();
        t3 = _this.___HeroFlight_manifest_A;
        t4 = t3.fromHero._element;
        t4.toString;
        t5 = t3.toHero._element;
        t5.toString;
        t5 = _this.shuttle = t1.shuttleBuilder.call$5(context, t2, t3.type, t4, t5);
        t1 = t5;
      }
      t2 = _this.___HeroFlight__proxyAnimation_A;
      t2 === $ && A.throwUnnamedLateFieldNI();
      return A.AnimatedBuilder$(t2, new A._HeroFlight__buildOverlay_closure(_this), t1);
    },
    _performAnimationUpdate$1($status) {
      var t2, _this = this,
        t1 = $status === B.AnimationStatus_3;
      if (t1 || $status === B.AnimationStatus_0) {
        t2 = _this.___HeroFlight__proxyAnimation_A;
        t2 === $ && A.throwUnnamedLateFieldNI();
        t2.set$parent(null);
        _this.overlayEntry.remove$0(0);
        _this.overlayEntry = null;
        t2 = _this.___HeroFlight_manifest_A;
        t2 === $ && A.throwUnnamedLateFieldNI();
        t2.fromHero.endFlight$1$keepPlaceholder(t1);
        _this.___HeroFlight_manifest_A.toHero.endFlight$1$keepPlaceholder($status === B.AnimationStatus_0);
        _this.onFlightEnded.call$1(_this);
        _this.___HeroFlight__proxyAnimation_A.removeListener$1(_this.get$onTick());
      }
    },
    _handleAnimationUpdate$1($status) {
      var _this = this,
        t1 = _this.___HeroFlight_manifest_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1 = t1.fromRoute._navigator;
      if ((t1 == null ? null : t1.userGestureInProgressNotifier._change_notifier$_value) !== true) {
        _this._performAnimationUpdate$1($status);
        return;
      }
      if (_this._scheduledPerformAnimationUpdate)
        return;
      t1.toString;
      _this._scheduledPerformAnimationUpdate = true;
      t1.userGestureInProgressNotifier.addListener$1(new A._HeroFlight__handleAnimationUpdate_delayedPerformAnimationUpdate(_this, t1));
    },
    onTick$0() {
      var t1, toHeroBox, toHeroOrigin, t2, t3, t4, t5, t6, t7, t8, t9, _this = this;
      if (!_this._aborted) {
        t1 = _this.___HeroFlight_manifest_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
        t1 = t1.toHero._element != null;
      } else
        t1 = false;
      if (t1) {
        t1 = _this.___HeroFlight_manifest_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
        toHeroBox = type$.nullable_RenderBox._as(t1.toHero._element.get$renderObject());
      } else
        toHeroBox = null;
      if (toHeroBox != null && toHeroBox._node$_owner != null && toHeroBox._size != null) {
        t1 = _this.___HeroFlight_manifest_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
        t1 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, t1.toRoute._subtreeKey);
        t1 = t1 == null ? null : t1.get$renderObject();
        toHeroOrigin = A.MatrixUtils_transformPoint(toHeroBox.getTransformTo$1(type$.nullable_RenderBox._as(t1)), B.Offset_0_0);
      } else
        toHeroOrigin = null;
      t1 = toHeroOrigin != null;
      if (t1 && isFinite(toHeroOrigin._dx) && isFinite(toHeroOrigin._dy)) {
        t2 = _this.___HeroFlight_heroRectTween_A;
        t2 === $ && A.throwUnnamedLateFieldNI();
        t3 = t2.end;
        t4 = t3.left;
        t5 = t3.top;
        if (!toHeroOrigin.$eq(0, new A.Offset(t4, t5))) {
          t6 = t3.right;
          t3 = t3.bottom;
          t7 = toHeroOrigin._dx;
          t8 = toHeroOrigin._dy;
          t9 = _this.___HeroFlight_manifest_A;
          t9 === $ && A.throwUnnamedLateFieldNI();
          _this.___HeroFlight_heroRectTween_A = t9.createHeroRectTween$2$begin$end(t2.begin, new A.Rect(t7, t8, t7 + (t6 - t4), t8 + (t3 - t5)));
        }
      } else if (_this._heroOpacity.get$status() === B.AnimationStatus_3) {
        t2 = _this.___HeroFlight__proxyAnimation_A;
        t2 === $ && A.throwUnnamedLateFieldNI();
        t3 = $.$get$_HeroFlight__reverseTween();
        t4 = t2.get$value();
        t5 = t3.$ti._eval$1("_ChainedEvaluation<Animatable.T>");
        _this._heroOpacity = new A._AnimatedEvaluation(type$.Animation_double._as(t2), new A._ChainedEvaluation(new A.CurveTween(new A.Interval(t4, 1, B.C__Linear)), t3, t5), t5._eval$1("_AnimatedEvaluation<Animatable.T>"));
      }
      if (t1)
        t1 = !(isFinite(toHeroOrigin._dx) && isFinite(toHeroOrigin._dy));
      else
        t1 = true;
      _this._aborted = t1;
    },
    start$1(initialManifest) {
      var t1, shouldIncludeChildInPlaceholder, t2, _this = this;
      _this.___HeroFlight_manifest_A = initialManifest;
      switch (initialManifest.type.index) {
        case 1:
          t1 = _this.___HeroFlight__proxyAnimation_A;
          t1 === $ && A.throwUnnamedLateFieldNI();
          t1.set$parent(new A.ReverseAnimation(initialManifest.get$animation(), new A.ObserverList(A._setArrayType([], type$.JSArray_of_void_Function_AnimationStatus), type$.ObserverList_of_void_Function_AnimationStatus), 0));
          shouldIncludeChildInPlaceholder = false;
          break;
        case 0:
          t1 = _this.___HeroFlight__proxyAnimation_A;
          t1 === $ && A.throwUnnamedLateFieldNI();
          t1.set$parent(initialManifest.get$animation());
          shouldIncludeChildInPlaceholder = true;
          break;
        default:
          shouldIncludeChildInPlaceholder = null;
      }
      t1 = _this.___HeroFlight_manifest_A;
      _this.___HeroFlight_heroRectTween_A = t1.createHeroRectTween$2$begin$end(t1.get$fromHeroLocation(), _this.___HeroFlight_manifest_A.get$toHeroLocation());
      _this.___HeroFlight_manifest_A.fromHero.startFlight$1$shouldIncludedChildInPlaceholder(shouldIncludeChildInPlaceholder);
      _this.___HeroFlight_manifest_A.toHero.startFlight$0();
      t1 = _this.___HeroFlight_manifest_A;
      t2 = A.OverlayEntry$(_this.get$_buildOverlay(), false);
      _this.overlayEntry = t2;
      t1.overlay.insert$1(0, t2);
      t2 = _this.___HeroFlight__proxyAnimation_A;
      t2 === $ && A.throwUnnamedLateFieldNI();
      t2.didRegisterListener$0();
      t2 = t2.AnimationLocalListenersMixin__listeners;
      t2._isDirty = true;
      t2._observer_list$_list.push(_this.get$onTick());
    },
    toString$0(_) {
      var from, to, t2, t3, t4,
        t1 = this.___HeroFlight_manifest_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      from = t1.fromRoute._settings;
      to = t1.toRoute._settings;
      t1 = t1.fromHero._widget.tag.toString$0(0);
      t2 = from.toString$0(0);
      t3 = to.toString$0(0);
      t4 = this.___HeroFlight__proxyAnimation_A;
      t4 === $ && A.throwUnnamedLateFieldNI();
      return "HeroFlight(for: " + t1 + ", from: " + t2 + ", to: " + t3 + " " + A.S(t4._animations$_parent) + ")";
    }
  };
  A._HeroFlight__buildOverlay_closure.prototype = {
    call$2(context, child) {
      var t3, _null = null,
        t1 = this.$this,
        t2 = t1.___HeroFlight_heroRectTween_A;
      t2 === $ && A.throwUnnamedLateFieldNI();
      t3 = t1.___HeroFlight__proxyAnimation_A;
      t3 === $ && A.throwUnnamedLateFieldNI();
      t3 = t2.transform$1(t3.get$value());
      t3.toString;
      t2 = t1.___HeroFlight_manifest_A;
      t2 === $ && A.throwUnnamedLateFieldNI();
      t2 = t2.navigatorSize;
      return A.Positioned$(t2._dy - t3.bottom, new A.IgnorePointer(true, _null, A.FadeTransition$(child, t1._heroOpacity), _null), _null, _null, t3.left, t2._dx - t3.right, t3.top, _null);
    },
    $signature: 288
  };
  A._HeroFlight__handleAnimationUpdate_delayedPerformAnimationUpdate.prototype = {
    call$0() {
      var t2,
        t1 = this.$this;
      t1._scheduledPerformAnimationUpdate = false;
      this.navigator.userGestureInProgressNotifier.removeListener$1(this);
      t2 = t1.___HeroFlight__proxyAnimation_A;
      t2 === $ && A.throwUnnamedLateFieldNI();
      t1._performAnimationUpdate$1(t2.get$status());
    },
    $signature: 0
  };
  A.HeroController.prototype = {
    didStopUserGesture$0() {
      var t2, t3, invalidFlights, _i,
        t1 = $.$get$NavigatorObserver__navigators();
      A.Expando__checkType(this);
      if (t1._jsWeakMap.get(this).userGestureInProgressNotifier._change_notifier$_value)
        return;
      t1 = this._flights;
      t2 = A._instanceType(t1)._eval$1("LinkedHashMapValuesIterable<2>");
      t3 = t2._eval$1("WhereIterable<Iterable.E>");
      t1 = A.List_List$_of(new A.WhereIterable(new A.LinkedHashMapValuesIterable(t1, t2), new A.HeroController_didStopUserGesture_isInvalidFlight(), t3), t3._eval$1("Iterable.E"));
      t1.$flags = 1;
      invalidFlights = t1;
      for (t1 = invalidFlights.length, _i = 0; _i < invalidFlights.length; invalidFlights.length === t1 || (0, A.throwConcurrentModificationError)(invalidFlights), ++_i)
        invalidFlights[_i]._handleAnimationUpdate$1(B.AnimationStatus_0);
    },
    _maybeStartHeroTransition$4(fromRoute, toRoute, flightType, isUserGestureTransition) {
      var t1;
      if (toRoute != fromRoute && toRoute instanceof A.MaterialPageRoute && fromRoute instanceof A.MaterialPageRoute) {
        switch (flightType.index) {
          case 1:
            if (fromRoute._animationProxy.get$value() === 0)
              return;
            break;
          case 0:
            if (toRoute._animationProxy.get$value() === 1)
              return;
            break;
        }
        if (isUserGestureTransition)
          t1 = flightType === B.HeroFlightDirection_1;
        else
          t1 = false;
        if (t1)
          this._startHeroTransition$4(fromRoute, toRoute, flightType, isUserGestureTransition);
        else {
          toRoute.set$offstage(toRoute._animationProxy.get$value() === 0);
          $.WidgetsBinding__instance.SchedulerBinding__postFrameCallbacks.push(new A.HeroController__maybeStartHeroTransition_closure(this, fromRoute, toRoute, flightType, isUserGestureTransition));
        }
      }
    },
    _startHeroTransition$4(from, to, flightType, isUserGestureTransition) {
      var t1, t2, overlay, t3, navigatorRenderObject, fromSubtreeContext, fromHeroes, toSubtreeContext, toHeroes, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, tag, fromHero, toHero, existingFlight, manifest, t15, t16, t17, _this = this;
      to.set$offstage(false);
      t1 = $.$get$NavigatorObserver__navigators();
      A.Expando__checkType(_this);
      t1 = t1._jsWeakMap.get(_this);
      t2 = t1 == null;
      if (t2)
        overlay = null;
      else {
        t3 = t1.__NavigatorState__overlayKey_A;
        t3 === $ && A.throwUnnamedLateFieldNI();
        overlay = t3.get$currentState();
      }
      if (t2 || overlay == null)
        return;
      navigatorRenderObject = t1._element.get$renderObject();
      if (!(navigatorRenderObject instanceof A.RenderBox))
        return;
      fromSubtreeContext = $.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, from._subtreeKey);
      fromHeroes = fromSubtreeContext != null ? A.Hero__allHeroesFor(fromSubtreeContext, isUserGestureTransition, t1) : B.Map_empty4;
      toSubtreeContext = $.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, to._subtreeKey);
      toHeroes = toSubtreeContext != null ? A.Hero__allHeroesFor(toSubtreeContext, isUserGestureTransition, t1) : B.Map_empty4;
      for (t1 = fromHeroes.get$entries(), t1 = t1.get$iterator(t1), t2 = _this.get$_defaultHeroFlightShuttleBuilder(), t3 = _this.createRectTween, t4 = _this._flights, t5 = _this.get$_handleFlightEnded(), t6 = type$.JSArray_of_void_Function_AnimationStatus, t7 = type$.ObserverList_of_void_Function_AnimationStatus, t8 = type$.JSArray_of_void_Function, t9 = type$.ObserverList_of_void_Function, t10 = type$.Tween_double, t11 = type$.Animation_double, t12 = t10._eval$1("_AnimatedEvaluation<Animatable.T>"), t13 = type$.ReverseTween_nullable_Rect; t1.moveNext$0();) {
        t14 = t1.get$current();
        tag = t14.key;
        fromHero = t14.value;
        toHero = toHeroes.$index(0, tag);
        existingFlight = t4.$index(0, tag);
        if (toHero == null)
          manifest = null;
        else {
          t14 = navigatorRenderObject._size;
          t14.toString;
          toHero._widget.toString;
          fromHero._widget.toString;
          manifest = new A._HeroFlightManifest(flightType, overlay, t14, from, to, fromHero, toHero, t3, t2, isUserGestureTransition, existingFlight != null);
        }
        if (manifest != null && manifest.get$isValid()) {
          toHeroes.remove$1(0, tag);
          if (existingFlight != null) {
            t14 = existingFlight.___HeroFlight_manifest_A;
            t14 === $ && A.throwUnnamedLateFieldNI();
            t15 = t14.type;
            if (t15 === B.HeroFlightDirection_0 && manifest.type === B.HeroFlightDirection_1) {
              t14 = existingFlight.___HeroFlight__proxyAnimation_A;
              t14 === $ && A.throwUnnamedLateFieldNI();
              t14.set$parent(new A.ReverseAnimation(manifest.get$animation(), new A.ObserverList(A._setArrayType([], t6), t7), 0));
              t14 = existingFlight.___HeroFlight_heroRectTween_A;
              t14 === $ && A.throwUnnamedLateFieldNI();
              existingFlight.___HeroFlight_heroRectTween_A = new A.ReverseTween(t14, t14.end, t14.begin, t13);
            } else {
              t15 = t15 === B.HeroFlightDirection_1 && manifest.type === B.HeroFlightDirection_0;
              t16 = existingFlight.___HeroFlight__proxyAnimation_A;
              if (t15) {
                t16 === $ && A.throwUnnamedLateFieldNI();
                t14 = manifest.get$animation();
                t15 = existingFlight.___HeroFlight_manifest_A.get$animation().get$value();
                t16.set$parent(new A._AnimatedEvaluation(t11._as(t14), new A.Tween(t15, 1, t10), t12));
                t14 = existingFlight.___HeroFlight_manifest_A;
                t15 = t14.fromHero;
                t16 = manifest.toHero;
                if (t15 !== t16) {
                  t15.endFlight$1$keepPlaceholder(true);
                  t16.startFlight$0();
                  t14 = existingFlight.___HeroFlight_manifest_A;
                  t15 = existingFlight.___HeroFlight_heroRectTween_A;
                  t15 === $ && A.throwUnnamedLateFieldNI();
                  existingFlight.___HeroFlight_heroRectTween_A = t14.createHeroRectTween$2$begin$end(t15.end, manifest.get$toHeroLocation());
                } else {
                  t15 = existingFlight.___HeroFlight_heroRectTween_A;
                  t15 === $ && A.throwUnnamedLateFieldNI();
                  existingFlight.___HeroFlight_heroRectTween_A = t14.createHeroRectTween$2$begin$end(t15.end, t15.begin);
                }
              } else {
                t15 = existingFlight.___HeroFlight_heroRectTween_A;
                t15 === $ && A.throwUnnamedLateFieldNI();
                t16 === $ && A.throwUnnamedLateFieldNI();
                existingFlight.___HeroFlight_heroRectTween_A = t14.createHeroRectTween$2$begin$end(t15.transform$1(t16.get$value()), manifest.get$toHeroLocation());
                existingFlight.shuttle = null;
                t14 = manifest.type;
                t15 = existingFlight.___HeroFlight__proxyAnimation_A;
                if (t14 === B.HeroFlightDirection_1)
                  t15.set$parent(new A.ReverseAnimation(manifest.get$animation(), new A.ObserverList(A._setArrayType([], t6), t7), 0));
                else
                  t15.set$parent(manifest.get$animation());
                existingFlight.___HeroFlight_manifest_A.fromHero.endFlight$1$keepPlaceholder(true);
                existingFlight.___HeroFlight_manifest_A.toHero.endFlight$1$keepPlaceholder(true);
                manifest.fromHero.startFlight$1$shouldIncludedChildInPlaceholder(t14 === B.HeroFlightDirection_0);
                manifest.toHero.startFlight$0();
                t14 = existingFlight.overlayEntry._key.get$currentState();
                if (t14 != null)
                  t14._markNeedsBuild$0();
              }
            }
            existingFlight.___HeroFlight_manifest_A = manifest;
          } else {
            t14 = new A._HeroFlight(t5, B.C__AlwaysCompleteAnimation);
            t15 = A._setArrayType([], t6);
            t16 = new A.ObserverList(t15, t7);
            t17 = new A.ProxyAnimation(t16, new A.ObserverList(A._setArrayType([], t8), t9), 0);
            t17._status = B.AnimationStatus_0;
            t17._animations$_value = 0;
            t17.didRegisterListener$0();
            t16._isDirty = true;
            t15.push(t14.get$_handleAnimationUpdate());
            t14.___HeroFlight__proxyAnimation_A = t17;
            t14.start$1(manifest);
            t4.$indexSet(0, tag, t14);
          }
        } else if (existingFlight != null)
          existingFlight._aborted = true;
      }
      for (t1 = toHeroes.get$values(), t1 = t1.get$iterator(t1); t1.moveNext$0();)
        t1.get$current().endFlight$0();
    },
    _handleFlightEnded$1(flight) {
      var t1 = flight.___HeroFlight_manifest_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      this._flights.remove$1(0, t1.fromHero._widget.tag);
    },
    _defaultHeroFlightShuttleBuilder$5(flightContext, animation, flightDirection, fromHeroContext, toHeroContext) {
      var toMediaQueryData, fromMediaQueryData,
        t1 = toHeroContext._widget;
      t1.toString;
      type$.Hero._as(t1);
      toMediaQueryData = A.MediaQuery__maybeOf(toHeroContext, null);
      fromMediaQueryData = A.MediaQuery__maybeOf(fromHeroContext, null);
      if (toMediaQueryData == null || fromMediaQueryData == null)
        return t1.child;
      return A.AnimatedBuilder$(animation, new A.HeroController__defaultHeroFlightShuttleBuilder_closure(toMediaQueryData, flightDirection, fromMediaQueryData.padding, toMediaQueryData.padding, animation, t1), null);
    }
  };
  A.HeroController_didStopUserGesture_isInvalidFlight.prototype = {
    call$1(flight) {
      var t2,
        t1 = flight.___HeroFlight_manifest_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t2 = false;
      if (t1.isUserGestureTransition)
        if (t1.type === B.HeroFlightDirection_1) {
          t1 = flight.___HeroFlight__proxyAnimation_A;
          t1 === $ && A.throwUnnamedLateFieldNI();
          t1 = t1.get$status() === B.AnimationStatus_0;
        } else
          t1 = t2;
      else
        t1 = t2;
      return t1;
    },
    $signature: 215
  };
  A.HeroController__maybeStartHeroTransition_closure.prototype = {
    call$1(value) {
      var _this = this;
      _this.$this._startHeroTransition$4(_this.from, _this.to, _this.flightType, _this.isUserGestureTransition);
    },
    $signature: 1
  };
  A.HeroController__defaultHeroFlightShuttleBuilder_closure.prototype = {
    call$2(context, child) {
      var _this = this,
        t1 = _this.fromHeroPadding,
        t2 = _this.toHeroPadding,
        t3 = _this.animation;
      t1 = _this.flightDirection === B.HeroFlightDirection_0 ? new A.EdgeInsetsTween(t1, t2).transform$1(t3.get$value()) : new A.EdgeInsetsTween(t2, t1).transform$1(t3.get$value());
      return A.MediaQuery$(_this.toHero.child, _this.toMediaQueryData.copyWith$1$padding(t1), null);
    },
    $signature: 216
  };
  A.Icon.prototype = {
    build$1(context) {
      var t1, iconColor, t2, t3, iconWidget, _null = null,
        textDirection = context.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality).textDirection,
        iconTheme = A.IconTheme_of(context),
        iconSize = iconTheme.size,
        iconFill = iconTheme.fill,
        iconWeight = iconTheme.weight,
        iconGrade = iconTheme.grade,
        iconOpticalSize = iconTheme.opticalSize,
        iconOpacity = iconTheme.get$opacity();
      if (iconOpacity == null)
        iconOpacity = 1;
      t1 = iconTheme.color;
      t1.toString;
      if (iconOpacity !== 1)
        iconColor = A.Color$fromARGB(B.JSNumber_methods.round$0(255 * ((t1.get$value() >>> 24 & 255) / 255 * iconOpacity)), t1.get$value() >>> 16 & 255, t1.get$value() >>> 8 & 255, t1.get$value() & 255);
      else
        iconColor = t1;
      t1 = this.icon;
      t2 = A.Primitives_stringFromCharCode(t1.codePoint);
      t3 = A._setArrayType([], type$.JSArray_FontVariation);
      if (iconFill != null)
        t3.push(new A.FontVariation("FILL", iconFill));
      if (iconWeight != null)
        t3.push(new A.FontVariation("wght", iconWeight));
      if (iconGrade != null)
        t3.push(new A.FontVariation("GRAD", iconGrade));
      if (iconOpticalSize != null)
        t3.push(new A.FontVariation("opsz", iconOpticalSize));
      iconWidget = A.RichText$(_null, _null, B.TextOverflow_3, _null, _null, true, _null, A.TextSpan$(_null, A.TextStyle$0(_null, _null, iconColor, _null, _null, _null, _null, _null, "MaterialIcons", _null, _null, iconSize, _null, t3, _null, _null, _null, false, _null, _null, _null, _null, _null, iconTheme.shadows, _null, _null), t2), B.TextAlign_4, textDirection, _null, 1, B.TextWidthBasis_0);
      if (t1.matchTextDirection)
        switch (textDirection.index) {
          case 0:
            t1 = new A.Matrix4(new Float64Array(16));
            t1.setIdentity$0();
            t1.scale$3(-1, 1, 1);
            iconWidget = A.Transform$(B.Alignment_0_0, iconWidget, t1, false);
            break;
          case 1:
            break;
        }
      return A.Semantics$(_null, _null, new A.ExcludeSemantics(true, A.SizedBox$(A.Center$(iconWidget, _null, _null), iconSize, iconSize), _null), false, _null, false, false, _null, _null, _null, this.semanticLabel, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
    }
  };
  A.IconData.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(this))
        return false;
      t1 = false;
      if (other instanceof A.IconData)
        if (other.codePoint === this.codePoint)
          t1 = other.matchTextDirection === this.matchTextDirection;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(this.codePoint, "MaterialIcons", null, this.matchTextDirection, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "IconData(U+" + B.JSString_methods.padLeft$2(B.JSInt_methods.toRadixString$1(this.codePoint, 16).toUpperCase(), 5, "0") + ")";
    }
  };
  A.IconTheme.prototype = {
    updateShouldNotify$1(oldWidget) {
      return !this.data.$eq(0, oldWidget.data);
    }
  };
  A.IconTheme_merge_closure.prototype = {
    call$1(context) {
      return A.IconTheme$(this.child, A.IconTheme__getInheritedIconThemeData(context).merge$1(this.data), this.key);
    },
    $signature: 217
  };
  A.IconThemeData.prototype = {
    copyWith$8$color$fill$grade$opacity$opticalSize$shadows$size$weight(color, fill, grade, opacity, opticalSize, shadows, size, weight) {
      var _this = this,
        t1 = size == null ? _this.size : size,
        t2 = fill == null ? _this.fill : fill,
        t3 = weight == null ? _this.weight : weight,
        t4 = grade == null ? _this.grade : grade,
        t5 = opticalSize == null ? _this.opticalSize : opticalSize,
        t6 = color == null ? _this.color : color,
        t7 = opacity == null ? _this.get$opacity() : opacity;
      return new A.IconThemeData(t1, t2, t3, t4, t5, t6, t7, shadows == null ? _this.shadows : shadows);
    },
    copyWith$1$color(color) {
      var _null = null;
      return this.copyWith$8$color$fill$grade$opacity$opticalSize$shadows$size$weight(color, _null, _null, _null, _null, _null, _null, _null);
    },
    merge$1(other) {
      return this.copyWith$8$color$fill$grade$opacity$opticalSize$shadows$size$weight(other.color, other.fill, other.grade, other.get$opacity(), other.opticalSize, other.shadows, other.size, other.weight);
    },
    resolve$1(context) {
      return this;
    },
    get$opacity() {
      var t1 = this._opacity;
      if (t1 == null)
        t1 = null;
      else
        t1 = A.clampDouble(t1, 0, 1);
      return t1;
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      return other instanceof A.IconThemeData && other.size == _this.size && other.fill == _this.fill && other.weight == _this.weight && other.grade == _this.grade && other.opticalSize == _this.opticalSize && J.$eq$(other.color, _this.color) && other.get$opacity() == _this.get$opacity() && A.listEquals(other.shadows, _this.shadows);
    },
    get$hashCode(_) {
      var _this = this,
        t1 = _this.get$opacity(),
        t2 = _this.shadows;
      t2 = t2 == null ? null : A.Object_hashAll(t2);
      return A.Object_hash(_this.size, _this.fill, _this.weight, _this.grade, _this.opticalSize, _this.color, t1, t2, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    }
  };
  A._IconThemeData_Object_Diagnosticable.prototype = {};
  A.DecorationTween.prototype = {
    lerp$1(t) {
      var t1 = A.Decoration_lerp(this.begin, this.end, t);
      t1.toString;
      return t1;
    }
  };
  A.EdgeInsetsTween.prototype = {
    lerp$1(t) {
      var t1 = A.EdgeInsets_lerp(this.begin, this.end, t);
      t1.toString;
      return t1;
    }
  };
  A.BorderRadiusTween.prototype = {
    lerp$1(t) {
      return A.BorderRadius_lerp(this.begin, this.end, t);
    }
  };
  A.TextStyleTween.prototype = {
    lerp$1(t) {
      var t1 = A.TextStyle_lerp(this.begin, this.end, t);
      t1.toString;
      return t1;
    }
  };
  A.ImplicitlyAnimatedWidget.prototype = {};
  A.ImplicitlyAnimatedWidgetState.prototype = {
    get$_controller() {
      var result, _this = this,
        value = _this.__ImplicitlyAnimatedWidgetState__controller_FI;
      if (value === $) {
        result = A.AnimationController$(null, _this._widget.duration, null, null, _this);
        _this.__ImplicitlyAnimatedWidgetState__controller_FI !== $ && A.throwUnnamedLateFieldADI();
        _this.__ImplicitlyAnimatedWidgetState__controller_FI = result;
        value = result;
      }
      return value;
    },
    get$_animation() {
      var t1, _this = this,
        value = _this.__ImplicitlyAnimatedWidgetState__animation_AI;
      if (value === $) {
        t1 = _this.get$_controller();
        value = _this.__ImplicitlyAnimatedWidgetState__animation_AI = A.CurvedAnimation$(_this._widget.curve, t1, null);
      }
      return value;
    },
    initState$0() {
      var t1, _this = this;
      _this.super$State$initState();
      t1 = _this.get$_controller();
      t1.didRegisterListener$0();
      t1 = t1.AnimationLocalStatusListenersMixin__statusListeners;
      t1._isDirty = true;
      t1._observer_list$_list.push(new A.ImplicitlyAnimatedWidgetState_initState_closure(_this));
      _this._constructTweens$0();
    },
    didUpdateWidget$1(oldWidget) {
      var t1, _this = this;
      _this.super$State$didUpdateWidget(oldWidget);
      if (_this._widget.curve !== oldWidget.curve) {
        _this.get$_animation().dispose$0();
        t1 = _this.get$_controller();
        _this.__ImplicitlyAnimatedWidgetState__animation_AI = A.CurvedAnimation$(_this._widget.curve, t1, null);
      }
      t1 = _this.get$_controller();
      t1.duration = _this._widget.duration;
      if (_this._constructTweens$0()) {
        _this.forEachTween$1(new A.ImplicitlyAnimatedWidgetState_didUpdateWidget_closure(_this));
        t1.set$value(0);
        t1.forward$0();
      }
    },
    dispose$0() {
      this.get$_animation().dispose$0();
      this.get$_controller().dispose$0();
      this.super$_ImplicitlyAnimatedWidgetState_State_SingleTickerProviderStateMixin$dispose();
    },
    _updateTween$2(tween, targetValue) {
      if (tween == null)
        return;
      tween.set$begin(tween.transform$1(this.get$_animation().get$value()));
      tween.set$end(targetValue);
    },
    _constructTweens$0() {
      var t1 = {};
      t1.shouldStartAnimation = false;
      this.forEachTween$1(new A.ImplicitlyAnimatedWidgetState__constructTweens_closure(t1, this));
      return t1.shouldStartAnimation;
    }
  };
  A.ImplicitlyAnimatedWidgetState_initState_closure.prototype = {
    call$1($status) {
      switch ($status.index) {
        case 3:
          this.$this._widget.toString;
          break;
        case 0:
        case 1:
        case 2:
          break;
      }
    },
    $signature: 2
  };
  A.ImplicitlyAnimatedWidgetState_didUpdateWidget_closure.prototype = {
    call$3(tween, targetValue, $constructor) {
      this.$this._updateTween$2(tween, targetValue);
      return tween;
    },
    $signature: 97
  };
  A.ImplicitlyAnimatedWidgetState__constructTweens_closure.prototype = {
    call$3(tween, targetValue, $constructor) {
      var t1;
      if (targetValue != null) {
        if (tween == null)
          tween = $constructor.call$1(targetValue);
        t1 = tween.end;
        if (!J.$eq$(targetValue, t1 == null ? tween.begin : t1))
          this._box_0.shouldStartAnimation = true;
        else if (tween.end == null)
          tween.set$end(tween.begin);
      } else
        tween = null;
      return tween;
    },
    $signature: 97
  };
  A.AnimatedWidgetBaseState.prototype = {
    initState$0() {
      this.super$ImplicitlyAnimatedWidgetState$initState();
      var t1 = this.get$_controller();
      t1.didRegisterListener$0();
      t1 = t1.AnimationLocalListenersMixin__listeners;
      t1._isDirty = true;
      t1._observer_list$_list.push(this.get$_handleAnimationChanged());
    },
    _handleAnimationChanged$0() {
      this.setState$1(new A.AnimatedWidgetBaseState__handleAnimationChanged_closure());
    }
  };
  A.AnimatedWidgetBaseState__handleAnimationChanged_closure.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A.AnimatedDefaultTextStyle.prototype = {
    createState$0() {
      return new A._AnimatedDefaultTextStyleState(null, null);
    }
  };
  A._AnimatedDefaultTextStyleState.prototype = {
    forEachTween$1(visitor) {
      this._implicit_animations$_style = type$.nullable_TextStyleTween._as(visitor.call$3(this._implicit_animations$_style, this._widget.style, new A._AnimatedDefaultTextStyleState_forEachTween_closure()));
    },
    build$1(context) {
      var t1 = this._implicit_animations$_style;
      t1.toString;
      t1 = t1.transform$1(this.get$_animation().get$value());
      return A.DefaultTextStyle$(this._widget.child, null, B.TextOverflow_0, true, t1, null, null, B.TextWidthBasis_0);
    }
  };
  A._AnimatedDefaultTextStyleState_forEachTween_closure.prototype = {
    call$1(value) {
      return new A.TextStyleTween(type$.TextStyle._as(value), null);
    },
    $signature: 219
  };
  A.AnimatedPhysicalModel.prototype = {
    createState$0() {
      return new A._AnimatedPhysicalModelState(null, null);
    }
  };
  A._AnimatedPhysicalModelState.prototype = {
    forEachTween$1(visitor) {
      var _this = this,
        t1 = _this._borderRadius;
      _this._widget.toString;
      _this._borderRadius = type$.nullable_BorderRadiusTween._as(visitor.call$3(t1, B.BorderRadius_tUf, new A._AnimatedPhysicalModelState_forEachTween_closure()));
      _this._implicit_animations$_elevation = type$.nullable_Tween_double._as(visitor.call$3(_this._implicit_animations$_elevation, _this._widget.elevation, new A._AnimatedPhysicalModelState_forEachTween_closure0()));
      t1 = type$.nullable_ColorTween;
      _this._implicit_animations$_color = t1._as(visitor.call$3(_this._implicit_animations$_color, _this._widget.color, new A._AnimatedPhysicalModelState_forEachTween_closure1()));
      _this._implicit_animations$_shadowColor = t1._as(visitor.call$3(_this._implicit_animations$_shadowColor, _this._widget.shadowColor, new A._AnimatedPhysicalModelState_forEachTween_closure2()));
    },
    build$1(context) {
      var t3, t4, t5, t6, _this = this,
        t1 = _this._widget,
        t2 = t1.shape;
      t1 = t1.clipBehavior;
      t3 = _this._borderRadius;
      t3.toString;
      t3 = t3.transform$1(_this.get$_animation().get$value());
      t4 = _this._implicit_animations$_elevation;
      t4.toString;
      t4 = t4.transform$1(_this.get$_animation().get$value());
      t5 = _this._widget.color;
      t6 = _this._implicit_animations$_shadowColor;
      t6.toString;
      t6 = t6.transform$1(_this.get$_animation().get$value());
      t6.toString;
      return new A.PhysicalModel(t2, t1, t3, t4, t5, t6, _this._widget.child, null);
    }
  };
  A._AnimatedPhysicalModelState_forEachTween_closure.prototype = {
    call$1(value) {
      return new A.BorderRadiusTween(type$.BorderRadius._as(value), null);
    },
    $signature: 220
  };
  A._AnimatedPhysicalModelState_forEachTween_closure0.prototype = {
    call$1(value) {
      return new A.Tween(A._asDouble(value), null, type$.Tween_double);
    },
    $signature: 72
  };
  A._AnimatedPhysicalModelState_forEachTween_closure1.prototype = {
    call$1(value) {
      return new A.ColorTween(type$.Color._as(value), null);
    },
    $signature: 33
  };
  A._AnimatedPhysicalModelState_forEachTween_closure2.prototype = {
    call$1(value) {
      return new A.ColorTween(type$.Color._as(value), null);
    },
    $signature: 33
  };
  A._ImplicitlyAnimatedWidgetState_State_SingleTickerProviderStateMixin.prototype = {
    dispose$0() {
      var _this = this,
        t1 = _this.SingleTickerProviderStateMixin__tickerModeNotifier;
      if (t1 != null)
        t1.removeListener$1(_this.get$_updateTicker());
      _this.SingleTickerProviderStateMixin__tickerModeNotifier = null;
      _this.super$State$dispose();
    },
    activate$0() {
      this.super$State$activate();
      this._updateTickerModeNotifier$0();
      this._updateTicker$0();
    }
  };
  A.InheritedModel.prototype = {
    createElement$0() {
      return new A.InheritedModelElement(A.HashMap_HashMap(type$.Element, type$.nullable_Object), this, B._ElementLifecycle_0, A._instanceType(this)._eval$1("InheritedModelElement<InheritedModel.T>"));
    }
  };
  A.InheritedModelElement.prototype = {
    updateDependencies$2(dependent, aspect) {
      var t1 = this._dependents,
        t2 = this.$ti,
        dependencies = t2._eval$1("Set<1>?")._as(t1.$index(0, dependent)),
        t3 = dependencies == null;
      if (!t3 && dependencies.get$isEmpty(dependencies))
        return;
      if (aspect == null)
        t1.$indexSet(0, dependent, A.HashSet_HashSet(t2._precomputed1));
      else {
        t3 = t3 ? A.HashSet_HashSet(t2._precomputed1) : dependencies;
        t3.add$1(0, t2._precomputed1._as(aspect));
        t1.$indexSet(0, dependent, t3);
      }
    },
    notifyDependent$2(oldWidget, dependent) {
      var t2,
        t1 = this.$ti,
        dependencies = t1._eval$1("Set<1>?")._as(this._dependents.$index(0, dependent));
      if (dependencies == null)
        return;
      if (!dependencies.get$isEmpty(dependencies)) {
        t2 = this._widget;
        t2.toString;
        t2 = t1._eval$1("InheritedModel<1>")._as(t2).updateShouldNotifyDependent$2(oldWidget, dependencies);
        t1 = t2;
      } else
        t1 = true;
      if (t1)
        dependent.didChangeDependencies$0();
    }
  };
  A.InheritedNotifier.prototype = {
    updateShouldNotify$1(oldWidget) {
      return oldWidget.notifier !== this.notifier;
    },
    createElement$0() {
      var t1 = new A._InheritedNotifierElement(A.HashMap_HashMap(type$.Element, type$.nullable_Object), this, B._ElementLifecycle_0, A._instanceType(this)._eval$1("_InheritedNotifierElement<InheritedNotifier.T>"));
      this.notifier.addListener$1(t1.get$_handleUpdate());
      return t1;
    }
  };
  A._InheritedNotifierElement.prototype = {
    update$1(newWidget) {
      var oldNotifier, newNotifier, _this = this,
        t1 = _this._widget;
      t1.toString;
      oldNotifier = _this.$ti._eval$1("InheritedNotifier<1>")._as(t1).notifier;
      newNotifier = newWidget.notifier;
      if (oldNotifier !== newNotifier) {
        t1 = _this.get$_handleUpdate();
        oldNotifier.removeListener$1(t1);
        newNotifier.addListener$1(t1);
      }
      _this.super$ProxyElement$update(newWidget);
    },
    build$0() {
      var t1, _this = this;
      if (_this._inherited_notifier$_dirty) {
        t1 = _this._widget;
        t1.toString;
        _this.super$InheritedElement$notifyClients(_this.$ti._eval$1("InheritedNotifier<1>")._as(t1));
        _this._inherited_notifier$_dirty = false;
      }
      return _this.super$ProxyElement$build();
    },
    _handleUpdate$0() {
      this._inherited_notifier$_dirty = true;
      this.markNeedsBuild$0();
    },
    notifyClients$1(oldWidget) {
      this.super$InheritedElement$notifyClients(oldWidget);
      this._inherited_notifier$_dirty = false;
    },
    unmount$0() {
      var _this = this,
        t1 = _this._widget;
      t1.toString;
      _this.$ti._eval$1("InheritedNotifier<1>")._as(t1).notifier.removeListener$1(_this.get$_handleUpdate());
      _this.super$Element$unmount();
    }
  };
  A.InheritedTheme.prototype = {};
  A.ConstrainedLayoutBuilder.prototype = {
    createElement$0() {
      return new A._LayoutBuilderElement(this, B._ElementLifecycle_0, A._instanceType(this)._eval$1("_LayoutBuilderElement<ConstrainedLayoutBuilder.0>"));
    }
  };
  A._LayoutBuilderElement.prototype = {
    get$renderObject() {
      return this.$ti._eval$1("RenderConstrainedLayoutBuilder<1,RenderObject>")._as(A.RenderObjectElement.prototype.get$renderObject.call(this));
    },
    visitChildren$1(visitor) {
      var t1 = this._layout_builder$_child;
      if (t1 != null)
        visitor.call$1(t1);
    },
    forgetChild$1(child) {
      this._layout_builder$_child = null;
      this.super$Element$forgetChild(child);
    },
    mount$2($parent, newSlot) {
      var _this = this;
      _this.super$RenderObjectElement$mount($parent, newSlot);
      _this.$ti._eval$1("RenderConstrainedLayoutBuilder<1,RenderObject>")._as(A.RenderObjectElement.prototype.get$renderObject.call(_this)).updateCallback$1(_this.get$_layout());
    },
    update$1(newWidget) {
      var t1, _this = this;
      _this.super$RenderObjectElement$update(newWidget);
      t1 = _this.$ti._eval$1("RenderConstrainedLayoutBuilder<1,RenderObject>");
      t1._as(A.RenderObjectElement.prototype.get$renderObject.call(_this)).updateCallback$1(_this.get$_layout());
      t1 = t1._as(A.RenderObjectElement.prototype.get$renderObject.call(_this));
      t1.RenderConstrainedLayoutBuilder__needsBuild = true;
      t1.markNeedsLayout$0();
    },
    performRebuild$0() {
      var t1 = this.$ti._eval$1("RenderConstrainedLayoutBuilder<1,RenderObject>")._as(A.RenderObjectElement.prototype.get$renderObject.call(this));
      t1.RenderConstrainedLayoutBuilder__needsBuild = true;
      t1.markNeedsLayout$0();
      this.super$RenderObjectElement$performRebuild();
    },
    unmount$0() {
      this.$ti._eval$1("RenderConstrainedLayoutBuilder<1,RenderObject>")._as(A.RenderObjectElement.prototype.get$renderObject.call(this)).updateCallback$1(null);
      this.super$RenderObjectElement$unmount();
    },
    _layout$1(constraints) {
      this._owner.buildScope$2(this, new A._LayoutBuilderElement__layout_layoutCallback(this, constraints));
    },
    insertRenderObjectChild$2(child, slot) {
      this.$ti._eval$1("RenderConstrainedLayoutBuilder<1,RenderObject>")._as(A.RenderObjectElement.prototype.get$renderObject.call(this)).set$child(child);
    },
    moveRenderObjectChild$3(child, oldSlot, newSlot) {
    },
    removeRenderObjectChild$2(child, slot) {
      this.$ti._eval$1("RenderConstrainedLayoutBuilder<1,RenderObject>")._as(A.RenderObjectElement.prototype.get$renderObject.call(this)).set$child(null);
    }
  };
  A._LayoutBuilderElement__layout_layoutCallback.prototype = {
    call$0() {
      var e, stack, e0, stack0, t1, t2, exception, built0, _this = this, built = null;
      try {
        t1 = _this.$this;
        t2 = t1._widget;
        t2.toString;
        built = t1.$ti._eval$1("ConstrainedLayoutBuilder<1>")._as(t2).builder.call$2(t1, _this.constraints);
        t1._widget.toString;
      } catch (exception) {
        e = A.unwrapException(exception);
        stack = A.getTraceFromException(exception);
        built0 = A.ErrorWidget__defaultErrorWidgetBuilder(A._reportException0(A.ErrorDescription$("building " + _this.$this._widget.toString$0(0)), e, stack, new A._LayoutBuilderElement__layout_layoutCallback_closure()));
        built = built0;
      }
      try {
        t1 = _this.$this;
        t1._layout_builder$_child = t1.updateChild$3(t1._layout_builder$_child, built, null);
      } catch (exception) {
        e0 = A.unwrapException(exception);
        stack0 = A.getTraceFromException(exception);
        t1 = _this.$this;
        built0 = A.ErrorWidget__defaultErrorWidgetBuilder(A._reportException0(A.ErrorDescription$("building " + t1._widget.toString$0(0)), e0, stack0, new A._LayoutBuilderElement__layout_layoutCallback_closure0()));
        built = built0;
        t1._layout_builder$_child = t1.updateChild$3(null, built, t1._slot);
      }
    },
    $signature: 0
  };
  A._LayoutBuilderElement__layout_layoutCallback_closure.prototype = {
    call$0() {
      var t1 = A._setArrayType([], type$.JSArray_DiagnosticsNode);
      return t1;
    },
    $signature: 5
  };
  A._LayoutBuilderElement__layout_layoutCallback_closure0.prototype = {
    call$0() {
      var t1 = A._setArrayType([], type$.JSArray_DiagnosticsNode);
      return t1;
    },
    $signature: 5
  };
  A.RenderConstrainedLayoutBuilder.prototype = {
    updateCallback$1(value) {
      if (J.$eq$(value, this.RenderConstrainedLayoutBuilder__callback))
        return;
      this.RenderConstrainedLayoutBuilder__callback = value;
      this.markNeedsLayout$0();
    }
  };
  A.LayoutBuilder.prototype = {
    createRenderObject$1(context) {
      var t1 = new A._RenderLayoutBuilder(null, true, null, null, A.LayerHandle$());
      t1.RenderObject$0();
      return t1;
    }
  };
  A._RenderLayoutBuilder.prototype = {
    computeDryLayout$1(constraints) {
      return B.Size_0_0;
    },
    performLayout$0() {
      var t1, _this = this,
        constraints = A.RenderObject.prototype.get$constraints.call(_this);
      if (_this.RenderConstrainedLayoutBuilder__needsBuild || !A.RenderObject.prototype.get$constraints.call(_this).$eq(0, _this.RenderConstrainedLayoutBuilder__previousConstraints)) {
        _this.RenderConstrainedLayoutBuilder__previousConstraints = A.RenderObject.prototype.get$constraints.call(_this);
        _this.RenderConstrainedLayoutBuilder__needsBuild = false;
        t1 = _this.RenderConstrainedLayoutBuilder__callback;
        t1.toString;
        _this.invokeLayoutCallback$1$1(t1, A._instanceType(_this)._eval$1("RenderConstrainedLayoutBuilder.0"));
      }
      t1 = _this.RenderObjectWithChildMixin__child;
      if (t1 != null) {
        t1.layout$2$parentUsesSize(constraints, true);
        t1 = _this.RenderObjectWithChildMixin__child._size;
        t1.toString;
        _this._size = constraints.constrain$1(t1);
      } else
        _this._size = new A.Size(A.clampDouble(1 / 0, constraints.minWidth, constraints.maxWidth), A.clampDouble(1 / 0, constraints.minHeight, constraints.maxHeight));
    },
    computeDistanceToActualBaseline$1(baseline) {
      var t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        return t1.getDistanceToActualBaseline$1(baseline);
      return this.super$RenderBox$computeDistanceToActualBaseline(baseline);
    },
    hitTestChildren$2$position(result, position) {
      var t1 = this.RenderObjectWithChildMixin__child;
      t1 = t1 == null ? null : t1.hitTest$2$position(result, position);
      return t1 === true;
    },
    paint$2(context, offset) {
      var t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        context.paintChild$2(t1, offset);
    }
  };
  A.__RenderLayoutBuilder_RenderBox_RenderObjectWithChildMixin.prototype = {
    attach$1(owner) {
      var t1;
      this.super$RenderObject$attach(owner);
      t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        t1.attach$1(owner);
    },
    detach$0() {
      this.super$AbstractNode$detach();
      var t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        t1.detach$0();
    }
  };
  A.__RenderLayoutBuilder_RenderBox_RenderObjectWithChildMixin_RenderConstrainedLayoutBuilder.prototype = {};
  A.ListWheelChildDelegate.prototype = {
    trueIndexOf$1(index) {
      return index;
    }
  };
  A.ListWheelChildListDelegate.prototype = {
    get$estimatedChildCount() {
      return this.children.length;
    },
    build$2(context, index) {
      if (index < 0 || index >= this.children.length)
        return null;
      return new A.IndexedSemantics(index, this.children[index], null);
    },
    shouldRebuild$1(oldDelegate) {
      return this.children !== oldDelegate.children;
    }
  };
  A.ListWheelChildLoopingListDelegate.prototype = {
    get$estimatedChildCount() {
      return null;
    },
    trueIndexOf$1(index) {
      return B.JSInt_methods.$mod(index, this.children.length);
    },
    build$2(context, index) {
      var t1 = this.children,
        t2 = t1.length;
      if (t2 === 0)
        return null;
      return new A.IndexedSemantics(index, t1[B.JSInt_methods.$mod(index, t2)], null);
    },
    shouldRebuild$1(oldDelegate) {
      return this.children !== oldDelegate.children;
    }
  };
  A.FixedExtentScrollController.prototype = {
    jumpToItem$1(itemIndex) {
      var t1, t2, t3, t4, t5, t6;
      for (t1 = this._positions, t2 = A._arrayInstanceType(t1)._eval$1("CastList<1,_FixedExtentScrollPosition>"), t1 = new A.CastList(t1, t2), t1 = new A.ListIterator(t1, t1.get$length(0), t2._eval$1("ListIterator<ListBase.E>")), t3 = type$._FixedExtentScrollableState, t4 = type$._FixedExtentScrollable, t2 = t2._eval$1("ListBase.E"); t1.moveNext$0();) {
        t5 = t1.__internal$_current;
        if (t5 == null)
          t5 = t2._as(t5);
        t6 = t3._as(t5.context)._widget;
        t6.toString;
        t5.jumpTo$1(itemIndex * t4._as(t6).itemExtent);
      }
    },
    createScrollPosition$3(physics, context, oldPosition) {
      var t1, t2;
      type$._FixedExtentScrollableState._as(context);
      t1 = context._widget;
      t1.toString;
      type$._FixedExtentScrollable._as(t1);
      t2 = new A._FixedExtentScrollPosition(B.ScrollDirection_0, physics, context, true, null, A.ValueNotifier$(false), $.$get$ChangeNotifier__emptyListeners());
      t2.ScrollPosition$5$context$debugLabel$keepScrollOffset$oldPosition$physics(context, null, true, oldPosition, physics);
      t2.ScrollPositionWithSingleContext$6$context$debugLabel$initialPixels$keepScrollOffset$oldPosition$physics(context, null, t1.itemExtent * this.initialItem, true, oldPosition, physics);
      return t2;
    }
  };
  A.FixedExtentMetrics.prototype = {};
  A._FixedExtentScrollPosition.prototype = {
    get$itemIndex() {
      var t2, t3, t4, _this = this,
        t1 = _this._scroll_position$_pixels;
      t1.toString;
      t2 = type$._FixedExtentScrollableState._as(_this.context)._widget;
      t2.toString;
      type$._FixedExtentScrollable._as(t2);
      t3 = _this._scroll_position$_minScrollExtent;
      t3.toString;
      t4 = _this._scroll_position$_maxScrollExtent;
      t4.toString;
      return B.JSNumber_methods.round$0(Math.min(Math.max(t1, t3), t4) / t2.itemExtent);
    },
    copyWith$0() {
      var t2, t3, t4, t5, t6, _this = this, _null = null,
        t1 = _this._scroll_position$_minScrollExtent;
      t1 = t1 != null && _this._scroll_position$_maxScrollExtent != null ? t1 : _null;
      t2 = _null;
      if (_this._scroll_position$_minScrollExtent != null && _this._scroll_position$_maxScrollExtent != null) {
        t2 = _this._scroll_position$_maxScrollExtent;
        t2.toString;
      }
      t3 = _this._scroll_position$_pixels;
      t3 = t3 != null ? t3 : _null;
      t4 = _this._viewportDimension;
      t4 = t4 != null ? t4 : _null;
      _this.context._widget.toString;
      t5 = _this.get$itemIndex();
      t6 = _this.get$devicePixelRatio();
      return new A.FixedExtentMetrics(t5, t1, t2, t3, t4, B.AxisDirection_2, t6);
    },
    $isFixedExtentMetrics: 1
  };
  A._FixedExtentScrollable.prototype = {
    createState$0() {
      var _null = null,
        t1 = type$.LabeledGlobalKey_State_StatefulWidget;
      return new A._FixedExtentScrollableState(new A._RestorableScrollOffset($.$get$ChangeNotifier__emptyListeners()), new A.LabeledGlobalKey(_null, t1), new A.LabeledGlobalKey(_null, type$.LabeledGlobalKey_RawGestureDetectorState), new A.LabeledGlobalKey(_null, t1), B.Map_empty1, _null, A.LinkedHashMap_LinkedHashMap$_empty(type$.RestorableProperty_nullable_Object, type$.void_Function), _null, true, _null, _null, _null);
    }
  };
  A._FixedExtentScrollableState.prototype = {};
  A.FixedExtentScrollPhysics.prototype = {
    applyTo$1(ancestor) {
      return new A.FixedExtentScrollPhysics(this.buildParent$1(ancestor));
    },
    createBallisticSimulation$2(position, velocity) {
      var t1, t2, testFrictionSimulation, t3, t4, settlingItemIndex, settlingPixels, _this = this;
      type$._FixedExtentScrollPosition._as(position);
      if (velocity <= 0) {
        t1 = position._scroll_position$_pixels;
        t1.toString;
        t2 = position._scroll_position$_minScrollExtent;
        t2.toString;
        t2 = t1 <= t2;
        t1 = t2;
      } else
        t1 = false;
      if (!t1)
        if (velocity >= 0) {
          t1 = position._scroll_position$_pixels;
          t1.toString;
          t2 = position._scroll_position$_maxScrollExtent;
          t2.toString;
          t2 = t1 >= t2;
          t1 = t2;
        } else
          t1 = false;
      else
        t1 = true;
      if (t1)
        return _this.super$ScrollPhysics$createBallisticSimulation(position, velocity);
      testFrictionSimulation = _this.super$ScrollPhysics$createBallisticSimulation(position, velocity);
      t1 = testFrictionSimulation == null;
      if (!t1) {
        t2 = testFrictionSimulation.x$1(1 / 0);
        t3 = position._scroll_position$_minScrollExtent;
        t3.toString;
        if (t2 !== t3) {
          t2 = testFrictionSimulation.x$1(1 / 0);
          t3 = position._scroll_position$_maxScrollExtent;
          t3.toString;
          t3 = t2 === t3;
          t2 = t3;
        } else
          t2 = true;
      } else
        t2 = false;
      if (t2)
        return _this.super$ScrollPhysics$createBallisticSimulation(position, velocity);
      t1 = t1 ? null : testFrictionSimulation.x$1(1 / 0);
      if (t1 == null) {
        t1 = position._scroll_position$_pixels;
        t1.toString;
      }
      t2 = type$._FixedExtentScrollableState._as(position.context)._widget;
      t2.toString;
      t2 = type$._FixedExtentScrollable._as(t2).itemExtent;
      t3 = position._scroll_position$_minScrollExtent;
      t3.toString;
      t4 = position._scroll_position$_maxScrollExtent;
      t4.toString;
      settlingItemIndex = B.JSNumber_methods.round$0(Math.min(Math.max(t1, t3), t4) / t2);
      settlingPixels = settlingItemIndex * t2;
      if (Math.abs(velocity) < _this.toleranceFor$1(position).velocity) {
        t1 = position._scroll_position$_pixels;
        t1.toString;
        t1 = Math.abs(settlingPixels - t1) < _this.toleranceFor$1(position).distance;
      } else
        t1 = false;
      if (t1)
        return null;
      if (settlingItemIndex === position.get$itemIndex()) {
        t1 = _this.get$spring();
        t2 = position._scroll_position$_pixels;
        t2.toString;
        t3 = _this.toleranceFor$1(position);
        return new A.SpringSimulation(settlingPixels, A._SpringSolution__SpringSolution(t1, t2 - settlingPixels, velocity), t3);
      }
      t1 = position._scroll_position$_pixels;
      t1.toString;
      t2 = _this.toleranceFor$1(position).velocity * J.get$sign$in(velocity);
      return A.FrictionSimulation$(Math.pow(2.718281828459045, (velocity - t2) / (t1 - settlingPixels)), t1, velocity, 0, new A.Tolerance(0.001, Math.abs(t2)));
    }
  };
  A.ListWheelScrollView.prototype = {
    createState$0() {
      return new A._ListWheelScrollViewState();
    }
  };
  A._ListWheelScrollViewState.prototype = {
    initState$0() {
      var t1, _this = this;
      _this.super$State$initState();
      t1 = _this._widget.controller;
      _this.scrollController = t1 == null ? A.FixedExtentScrollController$(0) : t1;
      if (t1 instanceof A.FixedExtentScrollController)
        _this._lastReportedItemIndex = t1.initialItem;
    },
    didUpdateWidget$1(oldWidget) {
      var t1, oldScrollController, _this = this;
      _this.super$State$didUpdateWidget(oldWidget);
      t1 = _this._widget.controller;
      if (t1 != null && t1 !== _this.scrollController) {
        oldScrollController = _this.scrollController;
        $.SchedulerBinding__instance.SchedulerBinding__postFrameCallbacks.push(new A._ListWheelScrollViewState_didUpdateWidget_closure(oldScrollController));
        _this.scrollController = _this._widget.controller;
      }
    },
    _handleScrollNotification$1(notification) {
      var t1, currentItemIndex, trueIndex, _this = this;
      if (notification.ViewportNotificationMixin__depth === 0) {
        _this._widget.toString;
        t1 = notification instanceof A.ScrollUpdateNotification && type$.FixedExtentMetrics._is(notification.metrics);
      } else
        t1 = false;
      if (t1) {
        currentItemIndex = type$.FixedExtentMetrics._as(notification.metrics).itemIndex;
        if (currentItemIndex !== _this._lastReportedItemIndex) {
          _this._lastReportedItemIndex = currentItemIndex;
          trueIndex = _this._widget.childDelegate.trueIndexOf$1(currentItemIndex);
          _this._widget.onSelectedItemChanged.call$1(trueIndex);
        }
      }
      return false;
    },
    build$1(context) {
      var t4, _this = this,
        t1 = _this.scrollController,
        t2 = _this._widget,
        t3 = t2.physics;
      t2 = t2.itemExtent;
      t4 = A.ScrollConfiguration_of(context).copyWith$1$scrollbars(false);
      return new A.NotificationListener(_this.get$_handleScrollNotification(), new A._FixedExtentScrollable(t2, t1, t3, new A._ListWheelScrollViewState_build_closure(_this), null, t4, null), null, type$.NotificationListener_ScrollNotification);
    }
  };
  A._ListWheelScrollViewState_didUpdateWidget_closure.prototype = {
    call$1(_) {
      this.oldScrollController.dispose$0();
    },
    $signature: 1
  };
  A._ListWheelScrollViewState_build_closure.prototype = {
    call$2(context, offset) {
      var t1 = this.$this._widget;
      return new A.ListWheelViewport(t1.diameterRatio, 0.003, t1.offAxisFraction, false, t1.magnification, t1.overAndUnderCenterOpacity, t1.itemExtent, t1.squeeze, false, offset, t1.childDelegate, B.Clip_1, null);
    },
    $signature: 222
  };
  A.ListWheelElement.prototype = {
    get$renderObject() {
      return type$.RenderListWheelViewport._as(A.RenderObjectElement.prototype.get$renderObject.call(this));
    },
    update$1(newWidget) {
      var newDelegate, oldDelegate, _this = this,
        t1 = _this._widget;
      t1.toString;
      type$.ListWheelViewport._as(t1);
      _this.super$RenderObjectElement$update(newWidget);
      newDelegate = newWidget.childDelegate;
      oldDelegate = t1.childDelegate;
      if (newDelegate !== oldDelegate)
        t1 = A.getRuntimeTypeOfDartObject(newDelegate) !== A.getRuntimeTypeOfDartObject(oldDelegate) || newDelegate.shouldRebuild$1(oldDelegate);
      else
        t1 = false;
      if (t1) {
        _this.performRebuild$0();
        type$.RenderListWheelViewport._as(A.RenderObjectElement.prototype.get$renderObject.call(_this)).markNeedsLayout$0();
      }
    },
    performRebuild$0() {
      var t1, t2, t3, index, newChild, _this = this;
      _this._childWidgets.clear$0(0);
      _this.super$RenderObjectElement$performRebuild();
      t1 = _this._childElements;
      if (t1._collection$_root == null)
        return;
      t2 = t1.firstKey$0();
      t2.toString;
      t3 = t1.lastKey$0();
      t3.toString;
      for (index = t2; index <= t3; ++index) {
        t2 = t1._untypedLookup$1(index);
        t2 = t2 == null ? null : t2.value;
        newChild = _this.updateChild$3(t2, _this.retrieveWidget$1(index), index);
        if (newChild != null)
          t1.$indexSet(0, index, newChild);
        else
          t1.remove$1(0, index);
      }
    },
    retrieveWidget$1(index) {
      return this._childWidgets.putIfAbsent$2(index, new A.ListWheelElement_retrieveWidget_closure(this, index));
    },
    createChild$2$after(index, after) {
      this._owner.buildScope$2(this, new A.ListWheelElement_createChild_closure(this, after, index));
    },
    removeChild$1(child) {
      var t1, _this = this;
      type$.RenderListWheelViewport._as(A.RenderObjectElement.prototype.get$renderObject.call(_this));
      t1 = child.parentData;
      t1.toString;
      t1 = type$.ListWheelParentData._as(t1).index;
      t1.toString;
      _this._owner.buildScope$2(_this, new A.ListWheelElement_removeChild_closure(_this, t1));
    },
    updateChild$3(child, newWidget, newSlot) {
      var t1, t2, newChild, t3, _null = null;
      if (child == null)
        t1 = _null;
      else {
        t1 = child.get$renderObject();
        t1 = t1 == null ? _null : t1.parentData;
      }
      t2 = type$.nullable_ListWheelParentData;
      t2._as(t1);
      newChild = this.super$Element$updateChild(child, newWidget, newSlot);
      if (newChild == null)
        t3 = _null;
      else {
        t3 = newChild.get$renderObject();
        t3 = t3 == null ? _null : t3.parentData;
      }
      t2._as(t3);
      if (t3 != null) {
        newSlot.toString;
        t3.index = A._asInt(newSlot);
        if (t1 != null)
          t3.offset = t1.offset;
      }
      return newChild;
    },
    insertRenderObjectChild$2(child, slot) {
      var t1,
        renderObject = type$.RenderListWheelViewport._as(A.RenderObjectElement.prototype.get$renderObject.call(this));
      type$.RenderBox._as(child);
      t1 = this._childElements.$index(0, slot - 1);
      t1 = t1 == null ? null : t1.get$renderObject();
      type$.nullable_RenderBox._as(t1);
      renderObject.adoptChild$1(child);
      renderObject._insertIntoChildList$2$after(child, t1);
    },
    moveRenderObjectChild$3(child, oldSlot, newSlot) {
    },
    removeRenderObjectChild$2(child, slot) {
      var t1 = type$.RenderListWheelViewport._as(A.RenderObjectElement.prototype.get$renderObject.call(this));
      type$.RenderBox._as(child);
      t1._removeFromChildList$1(child);
      t1.dropChild$1(child);
    },
    visitChildren$1(visitor) {
      this._childElements.forEach$1(0, new A.ListWheelElement_visitChildren_closure(visitor));
    },
    forgetChild$1(child) {
      this._childElements.remove$1(0, child._slot);
      this.super$Element$forgetChild(child);
    }
  };
  A.ListWheelElement_retrieveWidget_closure.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = t1._widget;
      t2.toString;
      return type$.ListWheelViewport._as(t2).childDelegate.build$2(t1, this.index);
    },
    $signature: 223
  };
  A.ListWheelElement_createChild_closure.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = t1._childElements,
        t3 = this.index,
        newChild = t1.updateChild$3(t2.$index(0, t3), t1.retrieveWidget$1(t3), t3);
      if (newChild != null)
        t2.$indexSet(0, t3, newChild);
      else
        t2.remove$1(0, t3);
    },
    $signature: 0
  };
  A.ListWheelElement_removeChild_closure.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = t1._childElements,
        t3 = this.index;
      t1.updateChild$3(t2.$index(0, t3), null, t3);
      t2.remove$1(0, t3);
    },
    $signature: 0
  };
  A.ListWheelElement_visitChildren_closure.prototype = {
    call$2(key, child) {
      this.visitor.call$1(child);
    },
    $signature: 224
  };
  A.ListWheelViewport.prototype = {
    createElement$0() {
      var t1 = type$.int,
        t2 = A.HashMap_HashMap(t1, type$.nullable_Widget);
      t1 = A._defaultCompare(t1);
      return new A.ListWheelElement(t2, new A.SplayTreeMap(t1, type$.SplayTreeMap_int_Element), this, B._ElementLifecycle_0);
    },
    createRenderObject$1(context) {
      var _this = this,
        t1 = new A.RenderListWheelViewport(type$.ListWheelElement._as(context), _this.offset, _this.diameterRatio, _this.perspective, _this.offAxisFraction, false, _this.magnification, _this.overAndUnderCenterOpacity, _this.itemExtent, _this.squeeze, false, _this.clipBehavior, A.LayerHandle$(), 0, null, null, A.LayerHandle$());
      t1.RenderObject$0();
      t1.addAll$1(0, null);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      var t1, _this = this;
      renderObject.set$offset(_this.offset);
      renderObject.set$diameterRatio(_this.diameterRatio);
      renderObject.set$perspective(_this.perspective);
      renderObject.set$offAxisFraction(_this.offAxisFraction);
      renderObject.set$useMagnifier(false);
      renderObject.set$magnification(_this.magnification);
      renderObject.set$overAndUnderCenterOpacity(_this.overAndUnderCenterOpacity);
      renderObject.set$itemExtent(_this.itemExtent);
      renderObject.set$squeeze(_this.squeeze);
      renderObject.set$renderChildrenOutsideViewport(false);
      t1 = _this.clipBehavior;
      if (t1 !== renderObject._list_wheel_viewport$_clipBehavior) {
        renderObject._list_wheel_viewport$_clipBehavior = t1;
        renderObject.markNeedsPaint$0();
        renderObject.markNeedsSemanticsUpdate$0();
      }
    }
  };
  A._Pending.prototype = {};
  A._loadAll_closure.prototype = {
    call$1(value) {
      return this._box_0.completedValue = value;
    },
    $signature: 57
  };
  A._loadAll_closure0.prototype = {
    call$1(p) {
      return p.futureValue;
    },
    $signature: 225
  };
  A._loadAll_closure1.prototype = {
    call$1(values) {
      var t1, t2, t3, i;
      for (t1 = J.getInterceptor$asx(values), t2 = this._box_1, t3 = this.output, i = 0; i < t1.get$length(values); ++i)
        t3.$indexSet(0, A.createRuntimeType(A._instanceType(t2.pendingList[i].delegate)._eval$1("LocalizationsDelegate.T")), t1.$index(values, i));
      return t3;
    },
    $signature: 226
  };
  A.LocalizationsDelegate.prototype = {
    toString$0(_) {
      return "LocalizationsDelegate[" + A.createRuntimeType(A._instanceType(this)._eval$1("LocalizationsDelegate.T")).toString$0(0) + "]";
    }
  };
  A._WidgetsLocalizationsDelegate.prototype = {
    isSupported$1(locale) {
      return true;
    },
    load$1(locale) {
      return new A.SynchronousFuture(B.C_DefaultWidgetsLocalizations, type$.SynchronousFuture_WidgetsLocalizations);
    },
    shouldReload$1(old) {
      return false;
    },
    toString$0(_) {
      return "DefaultWidgetsLocalizations.delegate(en_US)";
    }
  };
  A.DefaultWidgetsLocalizations.prototype = {$isWidgetsLocalizations: 1};
  A._LocalizationsScope.prototype = {
    updateShouldNotify$1(old) {
      return this.typeToResources !== old.typeToResources;
    }
  };
  A.Localizations.prototype = {
    createState$0() {
      return new A._LocalizationsState(new A.LabeledGlobalKey(null, type$.LabeledGlobalKey_State_StatefulWidget), A.LinkedHashMap_LinkedHashMap$_empty(type$.Type, type$.dynamic));
    }
  };
  A._LocalizationsState.prototype = {
    initState$0() {
      this.super$State$initState();
      this.load$1(this._widget.locale);
    },
    _anyDelegatesShouldReload$1(old) {
      var delegates, oldDelegates, i, delegate, oldDelegate,
        t1 = this._widget.delegates,
        t2 = old.delegates;
      if (t1.length !== t2.length)
        return true;
      delegates = A._setArrayType(t1.slice(0), A._arrayInstanceType(t1));
      oldDelegates = A._setArrayType(t2.slice(0), A._arrayInstanceType(t2));
      for (i = 0; i < delegates.length; ++i) {
        delegate = delegates[i];
        oldDelegate = oldDelegates[i];
        t1 = A.getRuntimeTypeOfDartObject(delegate) === A.getRuntimeTypeOfDartObject(oldDelegate);
        if (t1)
          delegate.shouldReload$1(oldDelegate);
        if (!t1)
          return true;
      }
      return false;
    },
    didUpdateWidget$1(old) {
      var _this = this;
      _this.super$State$didUpdateWidget(old);
      if (!_this._widget.locale.$eq(0, old.locale) || _this._anyDelegatesShouldReload$1(old))
        _this.load$1(_this._widget.locale);
    },
    load$1(locale) {
      var typeToResourcesFuture, _this = this, t1 = {},
        delegates = _this._widget.delegates;
      if (delegates.length === 0) {
        _this._localizations$_locale = locale;
        return;
      }
      t1.typeToResources = null;
      typeToResourcesFuture = A._loadAll(locale, delegates).then$1$1(new A._LocalizationsState_load_closure(t1), type$.Map_Type_dynamic);
      t1 = t1.typeToResources;
      if (t1 != null) {
        _this._typeToResources = t1;
        _this._localizations$_locale = locale;
      } else {
        ++$.RendererBinding__instance.RendererBinding__firstFrameDeferredCount;
        typeToResourcesFuture.then$1$1(new A._LocalizationsState_load_closure0(_this, locale), type$.void);
      }
    },
    get$_localizations$_textDirection() {
      type$.WidgetsLocalizations._as(this._typeToResources.$index(0, B.Type_WidgetsLocalizations_JUU));
      return B.TextDirection_1;
    },
    build$1(context) {
      var t1, t2, t3, _this = this, _null = null;
      if (_this._localizations$_locale == null)
        return B.SizedBox_0_0_null_null;
      t1 = _this.get$_localizations$_textDirection();
      _this._localizations$_locale.toString;
      t2 = _this._typeToResources;
      t3 = _this.get$_localizations$_textDirection();
      return A.Semantics$(_null, _null, new A._LocalizationsScope(_this, t2, A.Directionality$(_this._widget.child, t3), _this._localizedResourcesScopeKey), false, _null, false, false, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, t1, _null, _null);
    }
  };
  A._LocalizationsState_load_closure.prototype = {
    call$1(value) {
      return this._box_0.typeToResources = value;
    },
    $signature: 227
  };
  A._LocalizationsState_load_closure0.prototype = {
    call$1(value) {
      var t1 = this.$this;
      if (t1._element != null)
        t1.setState$1(new A._LocalizationsState_load__closure(t1, value, this.locale));
      $.RendererBinding__instance.allowFirstFrame$0();
    },
    $signature: 228
  };
  A._LocalizationsState_load__closure.prototype = {
    call$0() {
      var t1 = this.$this;
      t1._typeToResources = this.value;
      t1._localizations$_locale = this.locale;
    },
    $signature: 0
  };
  A.LookupBoundary_findAncestorStateOfType_closure.prototype = {
    call$1(ancestor) {
      var t1;
      if (ancestor instanceof A.StatefulElement) {
        t1 = ancestor._framework$_state;
        t1.toString;
        t1 = this.T._is(t1);
      } else
        t1 = false;
      if (t1) {
        this._box_0.target = ancestor;
        return false;
      }
      t1 = ancestor._widget;
      t1.toString;
      return A.getRuntimeTypeOfDartObject(t1) !== B.Type_LookupBoundary_YmL;
    },
    $signature: 20
  };
  A.LookupBoundary_findAncestorRenderObjectOfType_closure.prototype = {
    call$1(ancestor) {
      var t1;
      if (ancestor instanceof A.RenderObjectElement && this.T._is(ancestor.get$renderObject())) {
        this._box_0.target = ancestor;
        return false;
      }
      t1 = ancestor._widget;
      t1.toString;
      return A.getRuntimeTypeOfDartObject(t1) !== B.Type_LookupBoundary_YmL;
    },
    $signature: 20
  };
  A.Orientation.prototype = {
    _enumToString$0() {
      return "Orientation." + this._name;
    }
  };
  A._MediaQueryAspect.prototype = {
    _enumToString$0() {
      return "_MediaQueryAspect." + this._name;
    }
  };
  A.MediaQueryData.prototype = {
    copyWith$4$padding$textScaleFactor$viewInsets$viewPadding(padding, textScaleFactor, viewInsets, viewPadding) {
      var _this = this,
        t1 = textScaleFactor == null ? _this.textScaleFactor : textScaleFactor,
        t2 = padding == null ? _this.padding : padding,
        t3 = viewPadding == null ? _this.viewPadding : viewPadding,
        t4 = viewInsets == null ? _this.viewInsets : viewInsets;
      return new A.MediaQueryData(_this.size, _this.devicePixelRatio, t1, _this.platformBrightness, t4, t2, t3, _this.systemGestureInsets, false, _this.accessibleNavigation, _this.invertColors, _this.highContrast, _this.disableAnimations, _this.boldText, _this.navigationMode, _this.gestureSettings, _this.displayFeatures);
    },
    copyWith$1$padding(padding) {
      return this.copyWith$4$padding$textScaleFactor$viewInsets$viewPadding(padding, null, null, null);
    },
    copyWith$2$viewInsets$viewPadding(viewInsets, viewPadding) {
      return this.copyWith$4$padding$textScaleFactor$viewInsets$viewPadding(null, null, viewInsets, viewPadding);
    },
    copyWith$2$padding$viewPadding(padding, viewPadding) {
      return this.copyWith$4$padding$textScaleFactor$viewInsets$viewPadding(padding, null, null, viewPadding);
    },
    copyWith$1$textScaleFactor(textScaleFactor) {
      return this.copyWith$4$padding$textScaleFactor$viewInsets$viewPadding(null, textScaleFactor, null, null);
    },
    removePadding$4$removeBottom$removeLeft$removeRight$removeTop(removeBottom, removeLeft, removeRight, removeTop) {
      var t1, t2, t3, t4, t5, t6, _this = this, _null = null;
      if (!(removeLeft || removeTop || removeRight || removeBottom))
        return _this;
      t1 = _this.padding;
      t2 = removeLeft ? 0 : _null;
      t3 = removeTop ? 0 : _null;
      t4 = removeRight ? 0 : _null;
      t2 = t1.copyWith$4$bottom$left$right$top(removeBottom ? 0 : _null, t2, t4, t3);
      t3 = _this.viewPadding;
      t4 = removeLeft ? Math.max(0, t3.left - t1.left) : _null;
      t5 = removeTop ? Math.max(0, t3.top - t1.top) : _null;
      t6 = removeRight ? Math.max(0, t3.right - t1.right) : _null;
      return _this.copyWith$2$padding$viewPadding(t2, t3.copyWith$4$bottom$left$right$top(removeBottom ? Math.max(0, t3.bottom - t1.bottom) : _null, t4, t6, t5));
    },
    removeViewInsets$1$removeBottom(removeBottom) {
      var _this = this, _null = null,
        t1 = _this.viewPadding,
        t2 = _this.viewInsets,
        t3 = Math.max(0, t1.bottom - t2.bottom);
      t1 = t1.copyWith$4$bottom$left$right$top(t3, _null, _null, _null);
      return _this.copyWith$2$viewInsets$viewPadding(t2.copyWith$4$bottom$left$right$top(0, _null, _null, _null), t1);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      return other instanceof A.MediaQueryData && other.size.$eq(0, _this.size) && other.devicePixelRatio === _this.devicePixelRatio && other.textScaleFactor === _this.textScaleFactor && other.platformBrightness === _this.platformBrightness && other.padding.$eq(0, _this.padding) && other.viewPadding.$eq(0, _this.viewPadding) && other.viewInsets.$eq(0, _this.viewInsets) && other.systemGestureInsets.$eq(0, _this.systemGestureInsets) && other.highContrast === _this.highContrast && other.disableAnimations === _this.disableAnimations && other.invertColors === _this.invertColors && other.accessibleNavigation === _this.accessibleNavigation && other.boldText === _this.boldText && other.navigationMode === _this.navigationMode && other.gestureSettings.$eq(0, _this.gestureSettings) && A.listEquals(other.displayFeatures, _this.displayFeatures);
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(_this.size, _this.devicePixelRatio, _this.textScaleFactor, _this.platformBrightness, _this.padding, _this.viewPadding, _this.viewInsets, false, _this.highContrast, _this.disableAnimations, _this.invertColors, _this.accessibleNavigation, _this.boldText, _this.navigationMode, _this.gestureSettings, A.Object_hashAll(_this.displayFeatures), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this;
      return "MediaQueryData(" + B.JSArray_methods.join$1(A._setArrayType(["size: " + _this.size.toString$0(0), "devicePixelRatio: " + B.JSInt_methods.toStringAsFixed$1(_this.devicePixelRatio, 1), "textScaleFactor: " + B.JSNumber_methods.toStringAsFixed$1(_this.textScaleFactor, 1), "platformBrightness: " + _this.platformBrightness.toString$0(0), "padding: " + _this.padding.toString$0(0), "viewPadding: " + _this.viewPadding.toString$0(0), "viewInsets: " + _this.viewInsets.toString$0(0), "systemGestureInsets: " + _this.systemGestureInsets.toString$0(0), "alwaysUse24HourFormat: false", "accessibleNavigation: " + _this.accessibleNavigation, "highContrast: " + _this.highContrast, "disableAnimations: " + _this.disableAnimations, "invertColors: " + _this.invertColors, "boldText: " + _this.boldText, "navigationMode: " + _this.navigationMode._name, "gestureSettings: " + _this.gestureSettings.toString$0(0), "displayFeatures: " + A.S(_this.displayFeatures)], type$.JSArray_String), ", ") + ")";
    }
  };
  A.MediaQuery.prototype = {
    updateShouldNotify$1(oldWidget) {
      return !this.data.$eq(0, oldWidget.data);
    },
    updateShouldNotifyDependent$2(oldWidget, dependencies) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28;
      for (t1 = dependencies.get$iterator(dependencies), t2 = this.data, t3 = oldWidget.data, t4 = t2.displayFeatures !== t3.displayFeatures, t5 = t2.gestureSettings, t6 = t3.gestureSettings, t7 = t2.navigationMode !== t3.navigationMode, t8 = t2.boldText !== t3.boldText, t9 = t2.disableAnimations !== t3.disableAnimations, t10 = t2.highContrast !== t3.highContrast, t11 = t2.invertColors !== t3.invertColors, t12 = t2.accessibleNavigation !== t3.accessibleNavigation, t13 = t2.viewPadding, t14 = t3.viewPadding, t15 = t2.systemGestureInsets, t16 = t3.systemGestureInsets, t17 = t2.viewInsets, t18 = t3.viewInsets, t19 = t2.padding, t20 = t3.padding, t21 = t2.platformBrightness !== t3.platformBrightness, t22 = t2.textScaleFactor !== t3.textScaleFactor, t23 = t2.devicePixelRatio !== t3.devicePixelRatio, t2 = t2.size, t3 = t3.size, t24 = t3._dx, t25 = t2._dx, t26 = t24 === t25, t3 = t3._dy, t2 = t2._dy, t27 = t3 === t2; t1.moveNext$0();) {
        t28 = t1.get$current();
        if (t28 instanceof A._MediaQueryAspect)
          switch (t28.index) {
            case 0:
              if (!(t26 && t27))
                return true;
              break;
            case 1:
              t28 = t25 > t2 ? B.Orientation_1 : B.Orientation_0;
              if (t28 !== (t24 > t3 ? B.Orientation_1 : B.Orientation_0))
                return true;
              break;
            case 2:
              if (t23)
                return true;
              break;
            case 3:
              if (t22)
                return true;
              break;
            case 4:
              if (t21)
                return true;
              break;
            case 5:
              if (!t19.$eq(0, t20))
                return true;
              break;
            case 6:
              if (!t17.$eq(0, t18))
                return true;
              break;
            case 7:
              if (!t15.$eq(0, t16))
                return true;
              break;
            case 8:
              if (!t13.$eq(0, t14))
                return true;
              break;
            case 9:
              break;
            case 10:
              if (t12)
                return true;
              break;
            case 11:
              if (t11)
                return true;
              break;
            case 12:
              if (t10)
                return true;
              break;
            case 13:
              if (t9)
                return true;
              break;
            case 14:
              if (t8)
                return true;
              break;
            case 15:
              if (t7)
                return true;
              break;
            case 16:
              if (!t5.$eq(0, t6))
                return true;
              break;
            case 17:
              if (t4)
                return true;
              break;
          }
      }
      return false;
    }
  };
  A.NavigationMode.prototype = {
    _enumToString$0() {
      return "NavigationMode." + this._name;
    }
  };
  A._MediaQueryFromView.prototype = {
    createState$0() {
      return new A._MediaQueryFromViewState();
    }
  };
  A._MediaQueryFromViewState.prototype = {
    initState$0() {
      this.super$State$initState();
      $.WidgetsBinding__instance.WidgetsBinding__observers.push(this);
    },
    didChangeDependencies$0() {
      this.super$State$didChangeDependencies();
      this._updateParentData$0();
      this._updateData$0();
    },
    didUpdateWidget$1(oldWidget) {
      var t1, _this = this;
      _this.super$State$didUpdateWidget(oldWidget);
      t1 = _this._widget;
      t1.toString;
      if (_this._media_query$_data == null || oldWidget.view !== t1.view)
        _this._updateData$0();
    },
    _updateParentData$0() {
      var t1, _this = this;
      _this._widget.toString;
      t1 = _this._element;
      t1.toString;
      t1 = A.MediaQuery__maybeOf(t1, null);
      _this._parentData = t1;
      _this._media_query$_data = null;
    },
    _updateData$0() {
      var t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, physicalTouchSlop, newData, _this = this, _null = null,
        t1 = _this._widget.view,
        t2 = _this._parentData,
        t3 = t1.get$_viewConfiguration().geometry;
      t3 = new A.Size(t3.right - t3.left, t3.bottom - t3.top).$div(0, t1.get$_viewConfiguration().devicePixelRatio);
      t4 = t1.get$_viewConfiguration();
      t5 = t2 == null;
      t6 = t5 ? _null : t2.textScaleFactor;
      if (t6 == null)
        t6 = 1;
      t7 = t5 ? _null : t2.platformBrightness;
      if (t7 == null)
        t7 = B.Brightness_1;
      t8 = A.EdgeInsets$fromViewPadding(t1.get$_viewConfiguration().padding, t1.get$_viewConfiguration().devicePixelRatio);
      t9 = A.EdgeInsets$fromViewPadding(t1.get$_viewConfiguration().viewPadding, t1.get$_viewConfiguration().devicePixelRatio);
      t10 = A.EdgeInsets$fromViewPadding(t1.get$_viewConfiguration().viewInsets, t1.get$_viewConfiguration().devicePixelRatio);
      t11 = A.EdgeInsets$fromViewPadding(t1.get$_viewConfiguration().systemGestureInsets, t1.get$_viewConfiguration().devicePixelRatio);
      t12 = t5 ? _null : t2.accessibleNavigation;
      t13 = t5 ? _null : t2.invertColors;
      t14 = t5 ? _null : t2.disableAnimations;
      t15 = t5 ? _null : t2.boldText;
      t16 = t5 ? _null : t2.highContrast;
      t17 = t5 && _null;
      t2 = t5 ? _null : t2.navigationMode;
      if (t2 == null)
        t2 = B.NavigationMode_0;
      physicalTouchSlop = t1.get$_viewConfiguration().gestureSettings.physicalTouchSlop;
      t5 = physicalTouchSlop == null ? _null : physicalTouchSlop / t1.get$_viewConfiguration().devicePixelRatio;
      newData = new A.MediaQueryData(t3, t4.devicePixelRatio, t6, t7, t10, t8, t9, t11, t17 === true, t12 === true, t13 === true, t16 === true, t14 === true, t15 === true, t2, new A.DeviceGestureSettings(t5), t1.get$_viewConfiguration().displayFeatures);
      if (!newData.$eq(0, _this._media_query$_data))
        _this.setState$1(new A._MediaQueryFromViewState__updateData_closure(_this, newData));
    },
    didChangeMetrics$0() {
      this._updateData$0();
    },
    dispose$0() {
      B.JSArray_methods.remove$1($.WidgetsBinding__instance.WidgetsBinding__observers, this);
      this.super$State$dispose();
    },
    build$1(context) {
      var t1 = this._media_query$_data;
      t1.toString;
      return A.MediaQuery$(this._widget.child, t1, null);
    }
  };
  A._MediaQueryFromViewState__updateData_closure.prototype = {
    call$0() {
      this.$this._media_query$_data = this.newData;
    },
    $signature: 0
  };
  A.__MediaQueryFromViewState_State_WidgetsBindingObserver.prototype = {};
  A.ModalBarrier.prototype = {
    build$1(context) {
      var t1, barrier, _null = null;
      switch (A.defaultTargetPlatform().index) {
        case 1:
        case 3:
        case 5:
          break;
        case 0:
        case 2:
        case 4:
          break;
      }
      t1 = this.color;
      barrier = A.Semantics$(_null, _null, A.MouseRegion$(new A.ConstrainedBox(B.BoxConstraints_vYx, t1 == null ? _null : new A.ColoredBox(t1, _null, _null), _null), B.SystemMouseCursor_basic, _null, _null, _null, _null), false, _null, false, false, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, this.semanticsOnTapHint, _null, _null, _null, _null, _null, _null, _null);
      return A.BlockSemantics$(new A.ExcludeSemantics(true, new A._ModalBarrierGestureDetector(barrier, new A.ModalBarrier_build_handleDismiss(this, context), _null), _null));
    }
  };
  A.ModalBarrier_build_handleDismiss.prototype = {
    call$0() {
      A.SystemSound_play(B.SystemSoundType_1);
    },
    $signature: 0
  };
  A._AnyTapGestureRecognizer.prototype = {
    isPointerAllowed$1($event) {
      if (this.onAnyTapUp == null)
        return false;
      return this.super$GestureRecognizer$isPointerAllowed($event);
    },
    handleTapDown$1$down(down) {
    },
    handleTapUp$2$down$up(down, up) {
      var t1 = this.onAnyTapUp;
      if (t1 != null)
        t1.call$0();
    },
    handleTapCancel$3$cancel$down$reason(cancel, down, reason) {
    }
  };
  A._AnyTapGestureRecognizerFactory.prototype = {
    constructor$0() {
      var t1 = type$.int,
        t2 = A.HashSet_HashSet(t1);
      return new A._AnyTapGestureRecognizer(B.Duration_100000, 18, B.GestureRecognizerState_0, A.LinkedHashMap_LinkedHashMap$_empty(t1, type$.GestureArenaEntry), t2, null, null, A.recognizer_GestureRecognizer__defaultButtonAcceptBehavior$closure(), A.LinkedHashMap_LinkedHashMap$_empty(t1, type$.PointerDeviceKind));
    },
    initializer$1(instance) {
      instance.onAnyTapUp = this.onAnyTapUp;
    }
  };
  A._ModalBarrierGestureDetector.prototype = {
    build$1(context) {
      return new A.RawGestureDetector(this.child, A.LinkedHashMap_LinkedHashMap$_literal([B.Type__AnyTapGestureRecognizer_Cvf, new A._AnyTapGestureRecognizerFactory(this.onDismiss)], type$.Type, type$.GestureRecognizerFactory_GestureRecognizer), B.HitTestBehavior_1, false, null);
    }
  };
  A.NavigationToolbar.prototype = {
    build$1(context) {
      var _this = this,
        textDirection = context.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality).textDirection,
        t1 = A._setArrayType([], type$.JSArray_Widget),
        t2 = _this.leading;
      if (t2 != null)
        t1.push(A.LayoutId$(t2, B._ToolbarSlot_0));
      t2 = _this.middle;
      if (t2 != null)
        t1.push(A.LayoutId$(t2, B._ToolbarSlot_1));
      t2 = _this.trailing;
      if (t2 != null)
        t1.push(A.LayoutId$(t2, B._ToolbarSlot_2));
      return new A.CustomMultiChildLayout(new A._ToolbarLayout(_this.centerMiddle, _this.middleSpacing, textDirection), t1, null);
    }
  };
  A._ToolbarSlot.prototype = {
    _enumToString$0() {
      return "_ToolbarSlot." + this._name;
    }
  };
  A._ToolbarLayout.prototype = {
    performLayout$1(size) {
      var t1, t2, leadingWidth, leadingX, trailingSize, trailingX, trailingWidth, maxWidth, middleSize, middleStartMargin, t3, middleStart, t4, middleX, _this = this;
      if (_this._idToChild.$index(0, B._ToolbarSlot_0) != null) {
        t1 = size._dx;
        t2 = size._dy;
        leadingWidth = _this.layoutChild$2(B._ToolbarSlot_0, new A.BoxConstraints(0, t1, t2, t2))._dx;
        switch (_this.textDirection.index) {
          case 0:
            leadingX = t1 - leadingWidth;
            break;
          case 1:
            leadingX = 0;
            break;
          default:
            leadingX = null;
        }
        _this.positionChild$2(B._ToolbarSlot_0, new A.Offset(leadingX, 0));
      } else
        leadingWidth = 0;
      if (_this._idToChild.$index(0, B._ToolbarSlot_2) != null) {
        trailingSize = _this.layoutChild$2(B._ToolbarSlot_2, A.BoxConstraints$loose(size));
        switch (_this.textDirection.index) {
          case 0:
            trailingX = 0;
            break;
          case 1:
            trailingX = size._dx - trailingSize._dx;
            break;
          default:
            trailingX = null;
        }
        trailingWidth = trailingSize._dx;
        _this.positionChild$2(B._ToolbarSlot_2, new A.Offset(trailingX, (size._dy - trailingSize._dy) / 2));
      } else
        trailingWidth = 0;
      if (_this._idToChild.$index(0, B._ToolbarSlot_1) != null) {
        t1 = size._dx;
        t2 = _this.middleSpacing;
        maxWidth = Math.max(t1 - leadingWidth - trailingWidth - t2 * 2, 0);
        middleSize = _this.layoutChild$2(B._ToolbarSlot_1, A.BoxConstraints$loose(size).copyWith$1$maxWidth(maxWidth));
        middleStartMargin = leadingWidth + t2;
        if (_this.centerMiddle) {
          t3 = middleSize._dx;
          middleStart = (t1 - t3) / 2;
          t4 = t1 - trailingWidth;
          if (middleStart + t3 > t4)
            middleStart = t4 - t3 - t2;
          else if (middleStart < middleStartMargin)
            middleStart = middleStartMargin;
        } else
          middleStart = middleStartMargin;
        switch (_this.textDirection.index) {
          case 0:
            middleX = t1 - middleSize._dx - middleStart;
            break;
          case 1:
            middleX = middleStart;
            break;
          default:
            middleX = null;
        }
        _this.positionChild$2(B._ToolbarSlot_1, new A.Offset(middleX, (size._dy - middleSize._dy) / 2));
      }
    },
    shouldRelayout$1(oldDelegate) {
      return oldDelegate.centerMiddle !== this.centerMiddle || oldDelegate.middleSpacing !== this.middleSpacing || oldDelegate.textDirection !== this.textDirection;
    }
  };
  A.RoutePopDisposition.prototype = {
    _enumToString$0() {
      return "RoutePopDisposition." + this._name;
    }
  };
  A.Route.prototype = {
    get$overlayEntries() {
      return B.List_empty4;
    },
    install$0() {
    },
    didPush$0() {
      var t1 = A.TickerFuture$complete();
      t1.then$1$1(new A.Route_didPush_closure(this), type$.void);
      return t1;
    },
    didAdd$0() {
      var t1 = this._navigator;
      if (t1 == null)
        t1 = null;
      else {
        t1._widget.toString;
        t1 = true;
      }
      if (t1 === true)
        A.TickerFuture$complete().then$1$1(new A.Route_didAdd_closure(this), type$.void);
    },
    didReplace$1(oldRoute) {
    },
    willPop$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.RoutePopDisposition),
        $async$returnValue, $async$self = this;
      var $async$willPop$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = $async$self.get$isFirst() ? B.RoutePopDisposition_2 : B.RoutePopDisposition_0;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$willPop$0, $async$completer);
    },
    get$willHandlePopInternally() {
      return false;
    },
    didPop$1(result) {
      this.didComplete$1(result);
      return true;
    },
    didComplete$1(result) {
      this._popCompleter.complete$1(null);
    },
    didPopNext$1(nextRoute) {
    },
    didChangeNext$1(nextRoute) {
    },
    didChangePrevious$1(previousRoute) {
    },
    changedInternalState$0() {
    },
    changedExternalState$0() {
    },
    dispose$0() {
      this._navigator = null;
    },
    get$isCurrent() {
      var currentRouteEntry,
        t1 = this._navigator;
      if (t1 == null)
        return false;
      t1 = t1._history;
      t1 = new A.CastList(t1, A._arrayInstanceType(t1)._eval$1("CastList<1,_RouteEntry?>"));
      currentRouteEntry = t1.lastWhere$2$orElse(t1, new A.Route_isCurrent_closure(), new A.Route_isCurrent_closure0());
      if (currentRouteEntry == null)
        return false;
      return currentRouteEntry.route === this;
    },
    get$isFirst() {
      var currentRouteEntry,
        t1 = this._navigator;
      if (t1 == null)
        return false;
      t1 = t1._history;
      t1 = new A.CastList(t1, A._arrayInstanceType(t1)._eval$1("CastList<1,_RouteEntry?>"));
      currentRouteEntry = t1.firstWhere$2$orElse(t1, new A.Route_isFirst_closure(), new A.Route_isFirst_closure0());
      if (currentRouteEntry == null)
        return false;
      return currentRouteEntry.route === this;
    },
    get$hasActiveRouteBelow() {
      var t2, _i, entry, t3,
        t1 = this._navigator;
      if (t1 == null)
        return false;
      for (t1 = t1._history, t2 = t1.length, _i = 0; _i < t2; ++_i) {
        entry = t1[_i];
        if (entry.route === this)
          return false;
        t3 = entry.currentState.index;
        if (t3 <= 10 && t3 >= 1)
          return true;
      }
      return false;
    },
    get$isActive() {
      var t1 = this._navigator;
      if (t1 == null)
        return false;
      t1 = t1._history;
      t1 = new A.CastList(t1, A._arrayInstanceType(t1)._eval$1("CastList<1,_RouteEntry?>"));
      t1 = t1.firstWhere$2$orElse(t1, new A.Route_isActive_closure(this), new A.Route_isActive_closure0());
      t1 = t1 == null ? null : t1.get$isPresent();
      return t1 === true;
    }
  };
  A.Route_didPush_closure.prototype = {
    call$1(_) {
      var t2,
        t1 = this.$this._navigator;
      if (t1 == null)
        t2 = null;
      else {
        t1._widget.toString;
        t2 = true;
      }
      if (t2 === true) {
        t1 = t1.focusNode.get$enclosingScope();
        if (t1 != null)
          t1.requestFocus$0();
      }
    },
    $signature: 41
  };
  A.Route_didAdd_closure.prototype = {
    call$1(_) {
      var t1 = this.$this._navigator;
      if (t1 != null) {
        t1 = t1.focusNode.get$enclosingScope();
        if (t1 != null)
          t1.requestFocus$0();
      }
    },
    $signature: 41
  };
  A.Route_isCurrent_closure.prototype = {
    call$1(e) {
      return e != null && e.get$isPresent();
    },
    $signature: 14
  };
  A.Route_isCurrent_closure0.prototype = {
    call$0() {
      return null;
    },
    $signature: 9
  };
  A.Route_isFirst_closure.prototype = {
    call$1(e) {
      return e != null && e.get$isPresent();
    },
    $signature: 14
  };
  A.Route_isFirst_closure0.prototype = {
    call$0() {
      return null;
    },
    $signature: 9
  };
  A.Route_isActive_closure.prototype = {
    call$1(e) {
      return e != null && A._RouteEntry_isRoutePredicate(this.$this).call$1(e);
    },
    $signature: 14
  };
  A.Route_isActive_closure0.prototype = {
    call$0() {
      return null;
    },
    $signature: 9
  };
  A.RouteSettings.prototype = {
    toString$0(_) {
      var t1 = this.name;
      t1 = t1 == null ? "none" : '"' + t1 + '"';
      return "RouteSettings(" + t1 + ", " + A.S(this.$arguments) + ")";
    }
  };
  A.NavigatorObserver.prototype = {};
  A.HeroControllerScope.prototype = {
    updateShouldNotify$1(oldWidget) {
      return oldWidget.controller != this.controller;
    }
  };
  A.RouteTransitionRecord.prototype = {};
  A.TransitionDelegate.prototype = {};
  A.DefaultTransitionDelegate.prototype = {};
  A.Navigator.prototype = {
    createState$0() {
      var _null = null,
        t1 = A._setArrayType([], type$.JSArray__RouteEntry),
        t2 = $.$get$ChangeNotifier__emptyListeners(),
        t3 = type$._NavigatorObservation;
      return new A.NavigatorState(t1, new A._HistoryProperty(t2), A.ListQueue$(_null, t3), A.ListQueue$(_null, t3), A.FocusNode$(true, "Navigator", true, true, _null, _null, false), new A.RestorableNum(0, t2, type$.RestorableNum_int), A.ValueNotifier$(false), A.LinkedHashSet_LinkedHashSet$_empty(type$.int), _null, A.LinkedHashMap_LinkedHashMap$_empty(type$.RestorableProperty_nullable_Object, type$.void_Function), _null, true, _null, _null, _null);
    },
    onGenerateInitialRoutes$2(arg0, arg1) {
      return this.onGenerateInitialRoutes.call$2(arg0, arg1);
    }
  };
  A.Navigator_defaultGenerateInitialRoutes_closure.prototype = {
    call$1(route) {
      return route == null;
    },
    $signature: 230
  };
  A._RouteLifecycle.prototype = {
    _enumToString$0() {
      return "_RouteLifecycle." + this._name;
    }
  };
  A._NotAnnounced.prototype = {};
  A._RouteEntry.prototype = {
    get$restorationId() {
      var page, t1;
      if (this.pageBased) {
        page = type$.Page_nullable_Object._as(this.route._settings);
        page.get$restorationId();
        t1 = A.S(page.get$restorationId());
        return "p+" + t1;
      }
      t1 = this.restorationInformation;
      if (t1 != null)
        return "r+" + t1.get$restorationScopeId();
      return null;
    },
    handlePush$4$isNewFirst$navigator$previous$previousPresent(isNewFirst, $navigator, previous, previousPresent) {
      var t2, routeFuture, t3, _this = this,
        previousState = _this.currentState,
        t1 = _this.route;
      t1._navigator = $navigator;
      t1.install$0();
      t2 = _this.currentState;
      if (t2 === B._RouteLifecycle_3 || t2 === B._RouteLifecycle_4) {
        routeFuture = t1.didPush$0();
        _this.currentState = B._RouteLifecycle_5;
        routeFuture.whenCompleteOrCancel$1(new A._RouteEntry_handlePush_closure(_this, $navigator));
      } else {
        t1.didReplace$1(previous);
        _this.currentState = B._RouteLifecycle_7;
      }
      if (isNewFirst)
        t1.didChangeNext$1(null);
      t2 = previousState === B._RouteLifecycle_6 || previousState === B._RouteLifecycle_4;
      t3 = $navigator._observedRouteAdditions;
      if (t2)
        t3._add$1(new A._NavigatorReplaceObservation(t1, previousPresent));
      else
        t3._add$1(new A._NavigatorPushObservation(t1, previousPresent));
    },
    handlePop$2$navigator$previousPresent($navigator, previousPresent) {
      var t1, _this = this;
      _this.currentState = B._RouteLifecycle_11;
      t1 = _this.route;
      if ((t1._popCompleter.future._state & 30) !== 0)
        return true;
      if (!t1.didPop$1(_this.pendingResult)) {
        _this.currentState = B._RouteLifecycle_7;
        return false;
      }
      _this.pendingResult = null;
      return true;
    },
    dispose$0() {
      var t1, t2, t3, mountedEntries, _box_0, listener, t4;
      this.currentState = B._RouteLifecycle_14;
      t1 = this.route;
      t2 = t1.get$overlayEntries();
      t3 = new A._RouteEntry_dispose_closure();
      mountedEntries = new A.WhereIterable(t2, t3, A._arrayInstanceType(t2)._eval$1("WhereIterable<1>"));
      if (!mountedEntries.get$iterator(0).moveNext$0())
        t1.dispose$0();
      else {
        _box_0 = {};
        _box_0.mounted = mountedEntries.get$length(0);
        for (t1 = B.JSArray_methods.get$iterator(t2), t3 = new A.WhereIterator(t1, t3); t3.moveNext$0();) {
          t2 = t1.get$current();
          listener = A._Cell$();
          t4 = new A._RouteEntry_dispose_closure0(_box_0, this, t2, listener);
          listener.__late_helper$_value = t4;
          t2._overlayEntryStateNotifier.addListener$1(t4);
        }
      }
    },
    get$willBePresent() {
      var t1 = this.currentState.index;
      return t1 <= 7 && t1 >= 1;
    },
    get$isPresent() {
      var t1 = this.currentState.index;
      return t1 <= 10 && t1 >= 1;
    }
  };
  A._RouteEntry_handlePush_closure.prototype = {
    call$0() {
      var t1 = this.$this;
      if (t1.currentState === B._RouteLifecycle_5) {
        t1.currentState = B._RouteLifecycle_7;
        this.navigator._flushHistoryUpdates$0();
      }
    },
    $signature: 0
  };
  A._RouteEntry_dispose_closure.prototype = {
    call$1(e) {
      return e._overlayEntryStateNotifier._change_notifier$_value != null;
    },
    $signature: 231
  };
  A._RouteEntry_dispose_closure0.prototype = {
    call$0() {
      var _this = this,
        t1 = _this._box_0;
      --t1.mounted;
      _this.entry._overlayEntryStateNotifier.removeListener$1(_this.listener._readLocal$0());
      if (t1.mounted === 0)
        _this.$this.route.dispose$0();
    },
    $signature: 0
  };
  A._RouteEntry_isRoutePredicate_closure.prototype = {
    call$1(entry) {
      return entry.route === this.route;
    },
    $signature: 27
  };
  A._NavigatorObservation.prototype = {};
  A._NavigatorPushObservation.prototype = {
    notify$1(observer) {
      observer._maybeStartHeroTransition$4(this.secondaryRoute, this.primaryRoute, B.HeroFlightDirection_0, false);
    }
  };
  A._NavigatorPopObservation.prototype = {
    notify$1(observer) {
      var t1 = $.$get$NavigatorObserver__navigators();
      A.Expando__checkType(observer);
      if (!t1._jsWeakMap.get(observer).userGestureInProgressNotifier._change_notifier$_value)
        observer._maybeStartHeroTransition$4(this.primaryRoute, this.secondaryRoute, B.HeroFlightDirection_1, false);
    }
  };
  A._NavigatorRemoveObservation.prototype = {
    notify$1(observer) {
    }
  };
  A._NavigatorReplaceObservation.prototype = {
    notify$1(observer) {
      var t1 = this.primaryRoute,
        t2 = t1.get$isCurrent();
      if (t2)
        observer._maybeStartHeroTransition$4(this.secondaryRoute, t1, B.HeroFlightDirection_0, false);
    }
  };
  A.NavigatorState.prototype = {
    initState$0() {
      var t1, _i, observer, t2, _this = this;
      _this.super$State$initState();
      for (t1 = _this._widget.observers, _i = 0; false; ++_i) {
        observer = t1[_i];
        t2 = $.$get$NavigatorObserver__navigators();
        A.Expando__badExpandoKey(observer);
        t2._jsWeakMap.set(observer, _this);
      }
      _this.__NavigatorState__effectiveObservers_A = _this._widget.observers;
      t1 = _this._element.getElementForInheritedWidgetOfExactType$1$0(type$.HeroControllerScope);
      if (t1 == null)
        t1 = null;
      else {
        t1 = t1._widget;
        t1.toString;
      }
      type$.nullable_HeroControllerScope._as(t1);
      _this._updateHeroController$1(t1 == null ? null : t1.controller);
      _this._widget.toString;
      B.OptionalMethodChannel_sjf.invokeMethod$1$1("selectSingleEntryHistory", type$.void);
    },
    restoreState$2(oldBucket, initialRestore) {
      var t1, t2, _i, page, t3, entry, _this = this;
      _this.registerForRestoration$2(_this._rawNextPagelessRestorationScopeId, "id");
      t1 = _this._serializableHistory;
      _this.registerForRestoration$2(t1, "history");
      for (; t2 = _this._history, t2.length !== 0;)
        t2.pop().dispose$0();
      _this.__NavigatorState__overlayKey_A = new A.LabeledGlobalKey(null, type$.LabeledGlobalKey_OverlayState);
      B.JSArray_methods.addAll$1(t2, t1.restoreEntriesForPage$2(null, _this));
      _this._widget.toString;
      _i = 0;
      for (; false; ++_i) {
        page = B.List_empty2[_i];
        t2 = _this._element;
        t2.toString;
        t2 = page.createRoute$1(t2);
        t3 = $.$get$_RouteEntry_notAnnounced();
        entry = new A._RouteEntry(t2, null, true, B._RouteLifecycle_1, t3, t3, t3);
        _this._history.push(entry);
        B.JSArray_methods.addAll$1(_this._history, t1.restoreEntriesForPage$2(entry, _this));
      }
      if (t1._pageToPagelessRoutes == null) {
        t1 = _this._widget;
        t2 = _this._history;
        t3 = t1.initialRoute;
        B.JSArray_methods.addAll$1(t2, J.map$1$1$ax(t1.onGenerateInitialRoutes$2(_this, t3), new A.NavigatorState_restoreState_closure(_this), type$._RouteEntry));
      }
      _this._flushHistoryUpdates$0();
    },
    didToggleBucket$1(oldBucket) {
      var t1, _this = this;
      _this.super$RestorationMixin$didToggleBucket(oldBucket);
      t1 = _this._serializableHistory;
      if (_this.RestorationMixin__bucket != null)
        t1.update$1(_this._history);
      else
        t1.clear$0(0);
    },
    get$restorationId() {
      return this._widget.restorationScopeId;
    },
    didChangeDependencies$0() {
      var host, t1, t2, _i, _this = this;
      _this.super$_NavigatorState_State_TickerProviderStateMixin_RestorationMixin$didChangeDependencies();
      host = _this._element.dependOnInheritedWidgetOfExactType$1$0(type$.HeroControllerScope);
      _this._updateHeroController$1(host == null ? null : host.controller);
      for (t1 = _this._history, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i)
        t1[_i].route.changedExternalState$0();
    },
    _updateHeroController$1(newHeroController) {
      var t1, t2, _this = this;
      if (_this._heroControllerFromScope != newHeroController) {
        if (newHeroController != null)
          $.$get$NavigatorObserver__navigators().$indexSet(0, newHeroController, _this);
        t1 = _this._heroControllerFromScope;
        if (t1 == null)
          t1 = null;
        else {
          t2 = $.$get$NavigatorObserver__navigators();
          A.Expando__checkType(t1);
          t1 = t2._jsWeakMap.get(t1);
        }
        if (t1 === _this) {
          t1 = $.$get$NavigatorObserver__navigators();
          t2 = _this._heroControllerFromScope;
          t2.toString;
          t1.$indexSet(0, t2, null);
        }
        _this._heroControllerFromScope = newHeroController;
        _this._updateEffectiveObservers$0();
      }
    },
    _updateEffectiveObservers$0() {
      var _this = this,
        t1 = _this._heroControllerFromScope,
        t2 = _this._widget;
      if (t1 != null)
        _this.__NavigatorState__effectiveObservers_A = B.JSArray_methods.$add(t2.observers, A._setArrayType([t1], type$.JSArray_NavigatorObserver));
      else
        _this.__NavigatorState__effectiveObservers_A = t2.observers;
    },
    didUpdateWidget$1(oldWidget) {
      var t1, _i, observer, t2, _this = this;
      _this.super$_NavigatorState_State_TickerProviderStateMixin_RestorationMixin$didUpdateWidget(oldWidget);
      t1 = oldWidget.observers;
      if (t1 !== _this._widget.observers) {
        for (_i = 0; false; ++_i) {
          observer = t1[_i];
          t2 = $.$get$NavigatorObserver__navigators();
          A.Expando__badExpandoKey(observer);
          t2._jsWeakMap.set(observer, null);
        }
        for (t1 = _this._widget.observers, _i = 0; false; ++_i) {
          observer = t1[_i];
          t2 = $.$get$NavigatorObserver__navigators();
          A.Expando__badExpandoKey(observer);
          t2._jsWeakMap.set(observer, _this);
        }
        _this._updateEffectiveObservers$0();
      }
      _this._widget.toString;
      for (t1 = _this._history, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i)
        t1[_i].route.changedExternalState$0();
    },
    deactivate$0() {
      var t2, _i, observer, t3,
        t1 = this.__NavigatorState__effectiveObservers_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t2 = t1.length;
      _i = 0;
      for (; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
        observer = t1[_i];
        t3 = $.$get$NavigatorObserver__navigators();
        t3._jsWeakMap.set(observer, null);
      }
      this.super$State$deactivate();
    },
    activate$0() {
      var t1, t2, _i, observer, t3;
      this.super$_NavigatorState_State_TickerProviderStateMixin$activate();
      t1 = this.__NavigatorState__effectiveObservers_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t2 = t1.length;
      _i = 0;
      for (; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
        observer = t1[_i];
        t3 = $.$get$NavigatorObserver__navigators();
        t3._jsWeakMap.set(observer, this);
      }
    },
    dispose$0() {
      var t1, t2, _i, _this = this;
      _this._updateHeroController$1(null);
      _this.focusNode.dispose$0();
      for (t1 = _this._history, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i)
        t1[_i].dispose$0();
      _this.super$_NavigatorState_State_TickerProviderStateMixin_RestorationMixin$dispose();
    },
    get$_allRouteOverlayEntries() {
      var t2, t3, _i,
        t1 = A._setArrayType([], type$.JSArray_OverlayEntry);
      for (t2 = this._history, t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, A.throwConcurrentModificationError)(t2), ++_i)
        B.JSArray_methods.addAll$1(t1, t2[_i].route.get$overlayEntries());
      return t1;
    },
    _flushHistoryUpdates$1$rearrangeOverlay(rearrangeOverlay) {
      var t1, index, entry, previous, toBeDisposed, t2, poppedRoute, next, canRemoveOrAdd, seenTopActiveRoute, canRemoveOrAdd0, seenTopActiveRoute0, index0, t3, t4, previous0, lastEntry, routeName, _i, _i0, _this = this, _null = null;
      _this._flushingHistory = true;
      t1 = _this._history;
      index = t1.length - 1;
      entry = t1[index];
      previous = index > 0 ? t1[index - 1] : _null;
      toBeDisposed = A._setArrayType([], type$.JSArray__RouteEntry);
      $label0$1:
        for (t1 = _this._observedRouteDeletions, t2 = _this._observedRouteAdditions, poppedRoute = _null, next = poppedRoute, canRemoveOrAdd = false, seenTopActiveRoute = false; index >= 0;) {
          canRemoveOrAdd0 = true;
          seenTopActiveRoute0 = true;
          switch (entry.currentState.index) {
            case 1:
              index0 = _this._getIndexBefore$2(index - 1, A.navigator__RouteEntry_isPresentPredicate$closure());
              t3 = index0 >= 0 ? _this._history[index0] : _null;
              t3 = t3 == null ? _null : t3.route;
              t4 = entry.route;
              t4._navigator = _this;
              t4.install$0();
              entry.currentState = B._RouteLifecycle_2;
              t2._add$1(new A._NavigatorPushObservation(t4, t3));
              continue $label0$1;
            case 2:
              if (canRemoveOrAdd || next == null) {
                t3 = entry.route;
                t3.didAdd$0();
                entry.currentState = B._RouteLifecycle_7;
                if (next == null)
                  t3.didChangeNext$1(_null);
                continue $label0$1;
              }
              break;
            case 3:
            case 4:
            case 6:
              t3 = previous == null ? _null : previous.route;
              index0 = _this._getIndexBefore$2(index - 1, A.navigator__RouteEntry_isPresentPredicate$closure());
              t4 = index0 >= 0 ? _this._history[index0] : _null;
              t4 = t4 == null ? _null : t4.route;
              entry.handlePush$4$isNewFirst$navigator$previous$previousPresent(next == null, _this, t3, t4);
              if (entry.currentState === B._RouteLifecycle_7)
                continue $label0$1;
              break;
            case 5:
              if (!seenTopActiveRoute && poppedRoute != null) {
                entry.route.didPopNext$1(poppedRoute);
                entry.lastAnnouncedPoppedNextRoute = poppedRoute;
              }
              seenTopActiveRoute = seenTopActiveRoute0;
              break;
            case 7:
              if (!seenTopActiveRoute && poppedRoute != null) {
                entry.route.didPopNext$1(poppedRoute);
                entry.lastAnnouncedPoppedNextRoute = poppedRoute;
              }
              seenTopActiveRoute = seenTopActiveRoute0;
              canRemoveOrAdd = canRemoveOrAdd0;
              break;
            case 8:
              index0 = _this._getIndexBefore$2(index, A.navigator__RouteEntry_willBePresentPredicate$closure());
              t3 = index0 >= 0 ? _this._history[index0] : _null;
              if (!entry.handlePop$2$navigator$previousPresent(_this, t3 == null ? _null : t3.route))
                continue $label0$1;
              if (!seenTopActiveRoute) {
                if (poppedRoute != null) {
                  entry.route.didPopNext$1(poppedRoute);
                  entry.lastAnnouncedPoppedNextRoute = poppedRoute;
                }
                poppedRoute = entry.route;
              }
              t3 = entry.route;
              index0 = _this._getIndexBefore$2(index, A.navigator__RouteEntry_willBePresentPredicate$closure());
              t4 = index0 >= 0 ? _this._history[index0] : _null;
              t1._add$1(new A._NavigatorPopObservation(t3, t4 == null ? _null : t4.route));
              if (entry.currentState === B._RouteLifecycle_13)
                continue $label0$1;
              canRemoveOrAdd = canRemoveOrAdd0;
              break;
            case 11:
              break;
            case 9:
              t3 = entry.route;
              t3 = t3._popCompleter.future;
              if ((t3._state & 30) !== 0)
                A.throwExpression(A.StateError$("Future already completed"));
              t3._asyncComplete$1(_null);
              entry.pendingResult = null;
              entry.currentState = B._RouteLifecycle_10;
              continue $label0$1;
            case 10:
              if (!seenTopActiveRoute) {
                if (poppedRoute != null)
                  entry.route.didPopNext$1(poppedRoute);
                poppedRoute = _null;
              }
              index0 = _this._getIndexBefore$2(index, A.navigator__RouteEntry_willBePresentPredicate$closure());
              t3 = index0 >= 0 ? _this._history[index0] : _null;
              t3 = t3 == null ? _null : t3.route;
              entry.currentState = B._RouteLifecycle_12;
              if (entry._reportRemovalToObserver)
                t1._add$1(new A._NavigatorRemoveObservation(entry.route, t3));
              continue $label0$1;
            case 12:
              if (!canRemoveOrAdd && next != null)
                break;
              entry.currentState = B._RouteLifecycle_13;
              continue $label0$1;
            case 13:
              toBeDisposed.push(B.JSArray_methods.removeAt$1(_this._history, index));
              entry = next;
              break;
            case 14:
            case 0:
              break;
          }
          --index;
          previous0 = index > 0 ? _this._history[index - 1] : _null;
          next = entry;
          entry = previous;
          previous = previous0;
        }
      _this._flushObserverNotifications$0();
      _this._flushRouteAnnouncement$0();
      _this._widget.toString;
      t1 = _this._history;
      t1 = new A.CastList(t1, A._arrayInstanceType(t1)._eval$1("CastList<1,_RouteEntry?>"));
      lastEntry = t1.lastWhere$2$orElse(t1, new A.NavigatorState__flushHistoryUpdates_closure(), new A.NavigatorState__flushHistoryUpdates_closure0());
      routeName = lastEntry == null ? _null : lastEntry.route._settings.name;
      if (routeName != null && routeName !== _this._lastAnnouncedRouteName) {
        A.SystemNavigator_routeInformationUpdated(routeName, false, _null);
        _this._lastAnnouncedRouteName = routeName;
      }
      for (t1 = toBeDisposed.length, _i = 0; _i < toBeDisposed.length; toBeDisposed.length === t1 || (0, A.throwConcurrentModificationError)(toBeDisposed), ++_i) {
        entry = toBeDisposed[_i];
        for (t2 = entry.route.get$overlayEntries(), t3 = t2.length, _i0 = 0; _i0 < t2.length; t2.length === t3 || (0, A.throwConcurrentModificationError)(t2), ++_i0)
          t2[_i0].remove$0(0);
        entry.dispose$0();
      }
      if (rearrangeOverlay) {
        t1 = _this.__NavigatorState__overlayKey_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
        t1 = t1.get$currentState();
        if (t1 != null)
          t1.rearrange$1(_this.get$_allRouteOverlayEntries());
      }
      if (_this.RestorationMixin__bucket != null)
        _this._serializableHistory.update$1(_this._history);
      _this._flushingHistory = false;
    },
    _flushHistoryUpdates$0() {
      return this._flushHistoryUpdates$1$rearrangeOverlay(true);
    },
    _flushObserverNotifications$0() {
      var observation, _this = this,
        t1 = _this.__NavigatorState__effectiveObservers_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      if (t1.length === 0) {
        _this._observedRouteDeletions.clear$0(0);
        _this._observedRouteAdditions.clear$0(0);
        return;
      }
      for (t1 = _this._observedRouteAdditions; !t1.get$isEmpty(0);) {
        observation = t1.removeLast$0(0);
        B.JSArray_methods.forEach$1(_this.__NavigatorState__effectiveObservers_A, observation.get$notify());
      }
      for (t1 = _this._observedRouteDeletions; !t1.get$isEmpty(0);) {
        observation = t1.removeFirst$0();
        B.JSArray_methods.forEach$1(_this.__NavigatorState__effectiveObservers_A, observation.get$notify());
      }
    },
    _flushRouteAnnouncement$0() {
      var entry, t1, next, t2, t3, index0, previous, _this = this, _null = null,
        index = _this._history.length - 1;
      for (; index >= 0;) {
        entry = _this._history[index];
        t1 = entry.currentState.index;
        if (!(t1 <= 12 && t1 >= 3)) {
          --index;
          continue;
        }
        next = _this._getRouteAfter$2(index + 1, A.navigator__RouteEntry_suitableForTransitionAnimationPredicate$closure());
        t1 = next == null;
        t2 = t1 ? _null : next.route;
        t3 = entry.lastAnnouncedNextRoute;
        if (t2 != t3) {
          if (!((t1 ? _null : next.route) == null && entry.lastAnnouncedPoppedNextRoute === t3)) {
            t2 = t1 ? _null : next.route;
            entry.route.didChangeNext$1(t2);
          }
          entry.lastAnnouncedNextRoute = t1 ? _null : next.route;
        }
        --index;
        index0 = _this._getIndexBefore$2(index, A.navigator__RouteEntry_suitableForTransitionAnimationPredicate$closure());
        previous = index0 >= 0 ? _this._history[index0] : _null;
        t1 = previous == null;
        t2 = t1 ? _null : previous.route;
        if (t2 != entry.lastAnnouncedPreviousRoute) {
          t2 = t1 ? _null : previous.route;
          entry.route.didChangePrevious$1(t2);
          entry.lastAnnouncedPreviousRoute = t1 ? _null : previous.route;
        }
      }
    },
    _getRouteBefore$2(index, predicate) {
      index = this._getIndexBefore$2(index, predicate);
      return index >= 0 ? this._history[index] : null;
    },
    _getIndexBefore$2(index, predicate) {
      while (true) {
        if (!(index >= 0 && !predicate.call$1(this._history[index])))
          break;
        --index;
      }
      return index;
    },
    _getRouteAfter$2(index, predicate) {
      var t1;
      while (true) {
        t1 = this._history;
        if (!(index < t1.length && !predicate.call$1(t1[index])))
          break;
        ++index;
      }
      t1 = this._history;
      return index < t1.length ? t1[index] : null;
    },
    _routeNamed$1$3$allowNull$arguments($name, allowNull, $arguments, $T) {
      var settings, t1, route;
      if (allowNull)
        this._widget.toString;
      settings = new A.RouteSettings($name, $arguments);
      t1 = $T._eval$1("Route<0?>?");
      route = t1._as(this._widget.onGenerateRoute.call$1(settings));
      return route == null && !allowNull ? t1._as(this._widget.onUnknownRoute.call$1(settings)) : route;
    },
    _routeNamed$1$2$arguments($name, $arguments, $T) {
      return this._routeNamed$1$3$allowNull$arguments($name, false, $arguments, $T);
    },
    maybePop$1$1(result) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.bool),
        $async$returnValue, $async$self = this, lastEntry, disposition, t1;
      var $async$maybePop$1$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          $async$outer:
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = $async$self._history;
                t1 = new A.CastList(t1, A._arrayInstanceType(t1)._eval$1("CastList<1,_RouteEntry?>"));
                lastEntry = t1.lastWhere$2$orElse(t1, new A.NavigatorState_maybePop_closure(), new A.NavigatorState_maybePop_closure0());
                if (lastEntry == null) {
                  $async$returnValue = false;
                  // goto return
                  $async$goto = 1;
                  break;
                }
                $async$goto = 3;
                return A._asyncAwait(lastEntry.route.willPop$0(), $async$maybePop$1$1);
              case 3:
                // returning from await.
                disposition = $async$result;
                if ($async$self._element == null) {
                  $async$returnValue = true;
                  // goto return
                  $async$goto = 1;
                  break;
                }
                t1 = $async$self._history;
                t1 = new A.CastList(t1, A._arrayInstanceType(t1)._eval$1("CastList<1,_RouteEntry?>"));
                if (lastEntry !== t1.lastWhere$2$orElse(t1, new A.NavigatorState_maybePop_closure1(), new A.NavigatorState_maybePop_closure2())) {
                  $async$returnValue = true;
                  // goto return
                  $async$goto = 1;
                  break;
                }
                switch (disposition.index) {
                  case 2:
                    $async$returnValue = false;
                    // goto return
                    $async$goto = 1;
                    break $async$outer;
                  case 0:
                    $async$self.pop$1(result);
                    $async$returnValue = true;
                    // goto return
                    $async$goto = 1;
                    break $async$outer;
                  case 1:
                    $async$returnValue = true;
                    // goto return
                    $async$goto = 1;
                    break $async$outer;
                }
              case 1:
                // return
                return A._asyncReturn($async$returnValue, $async$completer);
            }
      });
      return A._asyncStartSync($async$maybePop$1$1, $async$completer);
    },
    maybePop$1(result) {
      return this.maybePop$1$1(result, type$.nullable_Object);
    },
    maybePop$0() {
      return this.maybePop$1$1(null, type$.nullable_Object);
    },
    pop$1$1(result) {
      var _this = this,
        entry = B.JSArray_methods.lastWhere$1(_this._history, A.navigator__RouteEntry_isPresentPredicate$closure());
      if (entry.pageBased) {
        _this._widget.toString;
        if (null.call$2(entry.route, result) && entry.currentState === B._RouteLifecycle_7)
          entry.currentState = B._RouteLifecycle_8;
      } else {
        entry.pendingResult = result;
        entry.currentState = B._RouteLifecycle_8;
      }
      if (entry.currentState === B._RouteLifecycle_8)
        _this._flushHistoryUpdates$1$rearrangeOverlay(false);
      _this._cancelActivePointers$0();
    },
    pop$1(result) {
      return this.pop$1$1(result, type$.nullable_Object);
    },
    pop$0() {
      return this.pop$1$1(null, type$.nullable_Object);
    },
    finalizeRoute$1(route) {
      var t1, _this = this,
        index = B.JSArray_methods.indexWhere$1(_this._history, A._RouteEntry_isRoutePredicate(route)),
        entry = _this._history[index];
      if (entry.pageBased && entry.currentState.index < 8) {
        t1 = _this._getRouteBefore$2(index - 1, A.navigator__RouteEntry_willBePresentPredicate$closure());
        t1 = t1 == null ? null : t1.route;
        _this._observedRouteDeletions._add$1(new A._NavigatorPopObservation(route, t1));
      }
      entry.currentState = B._RouteLifecycle_13;
      if (!_this._flushingHistory)
        _this._flushHistoryUpdates$1$rearrangeOverlay(false);
    },
    set$_userGesturesInProgress(value) {
      this._userGesturesInProgressCount = value;
      this.userGestureInProgressNotifier.set$value(value > 0);
    },
    didStartUserGesture$0() {
      var routeIndex, route, previousRoute, t1, t2, _i, _this = this;
      _this.set$_userGesturesInProgress(_this._userGesturesInProgressCount + 1);
      if (_this._userGesturesInProgressCount === 1) {
        routeIndex = _this._getIndexBefore$2(_this._history.length - 1, A.navigator__RouteEntry_willBePresentPredicate$closure());
        route = _this._history[routeIndex].route;
        previousRoute = !route.get$willHandlePopInternally() && routeIndex > 0 ? _this._getRouteBefore$2(routeIndex - 1, A.navigator__RouteEntry_willBePresentPredicate$closure()).route : null;
        t1 = _this.__NavigatorState__effectiveObservers_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
        t2 = t1.length;
        _i = 0;
        for (; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i)
          t1[_i]._maybeStartHeroTransition$4(route, previousRoute, B.HeroFlightDirection_1, true);
      }
    },
    didStopUserGesture$0() {
      var t1, t2, _i, _this = this;
      _this.set$_userGesturesInProgress(_this._userGesturesInProgressCount - 1);
      if (_this._userGesturesInProgressCount === 0) {
        t1 = _this.__NavigatorState__effectiveObservers_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
        t2 = t1.length;
        _i = 0;
        for (; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i)
          t1[_i].didStopUserGesture$0();
      }
    },
    _navigator$_handlePointerDown$1($event) {
      this._activePointers.add$1(0, $event.get$pointer());
    },
    _handlePointerUpOrCancel$1($event) {
      this._activePointers.remove$1(0, $event.get$pointer());
    },
    _cancelActivePointers$0() {
      if ($.SchedulerBinding__instance.SchedulerBinding__schedulerPhase === B.SchedulerPhase_0) {
        var t1 = this.__NavigatorState__overlayKey_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
        t1 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, t1);
        this.setState$1(new A.NavigatorState__cancelActivePointers_closure(t1 == null ? null : t1.findAncestorRenderObjectOfType$1$0(type$.RenderAbsorbPointer)));
      }
      t1 = this._activePointers;
      t1 = A.List_List$_of(t1, A._instanceType(t1)._precomputed1);
      B.JSArray_methods.forEach$1(t1, $.WidgetsBinding__instance.get$cancelPointer());
    },
    build$1(context) {
      var t5, t6, _this = this, _null = null,
        t1 = _this.get$_handlePointerUpOrCancel(),
        t2 = A.FocusTraversalGroup_maybeOf(context),
        t3 = _this.RestorationMixin__bucket,
        t4 = _this.__NavigatorState__overlayKey_A;
      t4 === $ && A.throwUnnamedLateFieldNI();
      t5 = _this._widget.clipBehavior;
      if (t4.get$currentState() == null) {
        t6 = _this.get$_allRouteOverlayEntries();
        t6 = J.JSArray_JSArray$markFixed(t6.slice(0), A._arrayInstanceType(t6)._precomputed1);
      } else
        t6 = B.List_empty4;
      return new A.HeroControllerScope(_null, A.Listener$(B.HitTestBehavior_0, new A.AbsorbPointer(false, A.FocusTraversalGroup$(A.Focus$(true, _null, A.UnmanagedRestorationScope$(t3, new A.Overlay(t6, t5, t4)), _null, _null, _null, _this.focusNode, false, _null, _null, _null, _null, _null, true), t2), _null), t1, _this.get$_navigator$_handlePointerDown(), _null, _null, t1), _null);
    }
  };
  A.NavigatorState_restoreState_closure.prototype = {
    call$1(route) {
      var t2, t3,
        t1 = route._settings.name;
      if (t1 != null) {
        t2 = this.$this._rawNextPagelessRestorationScopeId;
        t3 = t2._restoration_properties$_value;
        if (t3 == null)
          t3 = t2.$ti._eval$1("RestorableValue.T")._as(t3);
        t2.super$RestorableValue$value(t3 + 1);
        t1 = new A._NamedRestorationInformation(t3, t1, null, B._RouteRestorationType_0);
      } else
        t1 = null;
      return A._RouteEntry$(route, B._RouteLifecycle_1, false, t1);
    },
    $signature: 234
  };
  A.NavigatorState__flushHistoryUpdates_closure.prototype = {
    call$1(e) {
      return e != null && e.get$isPresent();
    },
    $signature: 14
  };
  A.NavigatorState__flushHistoryUpdates_closure0.prototype = {
    call$0() {
      return null;
    },
    $signature: 9
  };
  A.NavigatorState_maybePop_closure.prototype = {
    call$1(e) {
      return e != null && e.get$isPresent();
    },
    $signature: 14
  };
  A.NavigatorState_maybePop_closure0.prototype = {
    call$0() {
      return null;
    },
    $signature: 9
  };
  A.NavigatorState_maybePop_closure1.prototype = {
    call$1(e) {
      return e != null && e.get$isPresent();
    },
    $signature: 14
  };
  A.NavigatorState_maybePop_closure2.prototype = {
    call$0() {
      return null;
    },
    $signature: 9
  };
  A.NavigatorState__cancelActivePointers_closure.prototype = {
    call$0() {
      var t1 = this.absorber;
      if (t1 != null)
        t1.set$absorbing(true);
    },
    $signature: 0
  };
  A._RouteRestorationType.prototype = {
    _enumToString$0() {
      return "_RouteRestorationType." + this._name;
    }
  };
  A._RestorationInformation.prototype = {
    get$isRestorable() {
      return true;
    },
    computeSerializableData$0() {
      return A._setArrayType([this.type.index], type$.JSArray_Object);
    }
  };
  A._NamedRestorationInformation.prototype = {
    computeSerializableData$0() {
      var _this = this,
        t1 = _this.super$_RestorationInformation$computeSerializableData(),
        t2 = A._setArrayType([_this.restorationScopeId, _this.name], type$.JSArray_Object),
        t3 = _this.$arguments;
      if (t3 != null)
        t2.push(t3);
      B.JSArray_methods.addAll$1(t1, t2);
      return t1;
    },
    createRoute$1($navigator) {
      var t1 = $navigator._routeNamed$1$2$arguments(this.name, this.$arguments, type$.dynamic);
      t1.toString;
      return t1;
    },
    get$restorationScopeId() {
      return this.restorationScopeId;
    }
  };
  A._AnonymousRestorationInformation.prototype = {
    get$isRestorable() {
      return false;
    },
    computeSerializableData$0() {
      var _this = this,
        handle = A.PluginUtilities_getCallbackHandle(_this.routeBuilder),
        t1 = _this.super$_RestorationInformation$computeSerializableData(),
        t2 = A._setArrayType([_this.restorationScopeId, handle._ui$_handle], type$.JSArray_Object),
        t3 = _this.$arguments;
      if (t3 != null)
        t2.push(t3);
      B.JSArray_methods.addAll$1(t1, t2);
      return t1;
    },
    createRoute$1($navigator) {
      var t1 = $navigator._element;
      t1.toString;
      return this.routeBuilder.call$2(t1, this.$arguments);
    },
    get$restorationScopeId() {
      return this.restorationScopeId;
    }
  };
  A._HistoryProperty.prototype = {
    update$1($history) {
      var t1, newRoutesForCurrentPage, oldRoutesForCurrentPage, newMap, t2, removedPages, currentPage, needsSerialization, restorationEnabled, _i, entry, restorationId, t3, serializedData, t4, t5, _this = this, _null = null,
        wasUninitialized = _this._pageToPagelessRoutes == null;
      if (wasUninitialized)
        _this._pageToPagelessRoutes = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.List_Object);
      t1 = type$.JSArray_Object;
      newRoutesForCurrentPage = A._setArrayType([], t1);
      oldRoutesForCurrentPage = _this._pageToPagelessRoutes.$index(0, _null);
      if (oldRoutesForCurrentPage == null)
        oldRoutesForCurrentPage = B.List_empty3;
      newMap = A.LinkedHashMap_LinkedHashMap$_empty(type$.nullable_String, type$.List_Object);
      t2 = _this._pageToPagelessRoutes.get$keys();
      removedPages = t2.toSet$0(t2);
      for (t2 = $history.length, currentPage = _null, needsSerialization = wasUninitialized, restorationEnabled = true, _i = 0; _i < $history.length; $history.length === t2 || (0, A.throwConcurrentModificationError)($history), ++_i) {
        entry = $history[_i];
        if (entry.currentState.index > 7) {
          entry.route._restorationScopeId.set$value(_null);
          continue;
        }
        if (entry.pageBased) {
          needsSerialization = needsSerialization || newRoutesForCurrentPage.length !== J.get$length$asx(oldRoutesForCurrentPage);
          if (newRoutesForCurrentPage.length !== 0) {
            restorationId = currentPage == null ? _null : currentPage.get$restorationId();
            newMap.$indexSet(0, restorationId, newRoutesForCurrentPage);
            removedPages.remove$1(0, restorationId);
          }
          restorationEnabled = entry.get$restorationId() != null;
          t3 = restorationEnabled ? entry.get$restorationId() : _null;
          entry.route._restorationScopeId.set$value(t3);
          if (restorationEnabled) {
            newRoutesForCurrentPage = A._setArrayType([], t1);
            t3 = _this._pageToPagelessRoutes;
            t3.toString;
            oldRoutesForCurrentPage = t3.$index(0, entry.get$restorationId());
            if (oldRoutesForCurrentPage == null)
              oldRoutesForCurrentPage = B.List_empty3;
          } else {
            newRoutesForCurrentPage = B.List_empty3;
            oldRoutesForCurrentPage = B.List_empty3;
          }
          currentPage = entry;
          continue;
        }
        if (restorationEnabled) {
          t3 = entry.restorationInformation;
          t3 = t3 == null ? _null : t3.get$isRestorable();
          restorationEnabled = t3 === true;
        } else
          restorationEnabled = false;
        t3 = restorationEnabled ? entry.get$restorationId() : _null;
        entry.route._restorationScopeId.set$value(t3);
        if (restorationEnabled) {
          t3 = entry.restorationInformation;
          serializedData = t3._serializableData;
          if (serializedData == null)
            serializedData = t3._serializableData = t3.computeSerializableData$0();
          if (!needsSerialization) {
            t3 = J.getInterceptor$asx(oldRoutesForCurrentPage);
            t4 = t3.get$length(oldRoutesForCurrentPage);
            t5 = newRoutesForCurrentPage.length;
            needsSerialization = t4 <= t5 || !J.$eq$(t3.$index(oldRoutesForCurrentPage, t5), serializedData);
          } else
            needsSerialization = true;
          B.JSArray_methods.add$1(newRoutesForCurrentPage, serializedData);
        }
      }
      needsSerialization = needsSerialization || newRoutesForCurrentPage.length !== J.get$length$asx(oldRoutesForCurrentPage);
      _this._finalizeEntry$4(newRoutesForCurrentPage, currentPage, newMap, removedPages);
      if (needsSerialization || removedPages.get$isNotEmpty(removedPages)) {
        _this._pageToPagelessRoutes = newMap;
        _this.notifyListeners$0();
      }
    },
    _finalizeEntry$4(routes, page, pageToRoutes, pagesToRemove) {
      var restorationId;
      if (routes.length !== 0) {
        restorationId = page == null ? null : page.get$restorationId();
        pageToRoutes.$indexSet(0, restorationId, routes);
        pagesToRemove.remove$1(0, restorationId);
      }
    },
    clear$0(_) {
      if (this._pageToPagelessRoutes == null)
        return;
      this._pageToPagelessRoutes = null;
      this.notifyListeners$0();
    },
    restoreEntriesForPage$2(page, $navigator) {
      var t1, serializedData, t2, route, t3,
        result = A._setArrayType([], type$.JSArray__RouteEntry);
      if (this._pageToPagelessRoutes != null)
        t1 = page != null && page.get$restorationId() == null;
      else
        t1 = true;
      if (t1)
        return result;
      t1 = this._pageToPagelessRoutes;
      t1.toString;
      serializedData = t1.$index(0, page == null ? null : page.get$restorationId());
      if (serializedData == null)
        return result;
      for (t1 = J.get$iterator$ax(serializedData); t1.moveNext$0();) {
        t2 = A._RestorationInformation__RestorationInformation$fromSerializableData(t1.get$current());
        route = t2.createRoute$1($navigator);
        t3 = $.$get$_RouteEntry_notAnnounced();
        result.push(new A._RouteEntry(route, t2, false, B._RouteLifecycle_1, t3, t3, t3));
      }
      return result;
    },
    createDefaultValue$0() {
      return null;
    },
    fromPrimitives$1(data) {
      data.toString;
      return type$.Map_dynamic_dynamic._as(data).map$2$1(0, new A._HistoryProperty_fromPrimitives_closure(), type$.nullable_String, type$.List_Object);
    },
    initWithValue$1(value) {
      this._pageToPagelessRoutes = value;
    },
    toPrimitives$0() {
      return this._pageToPagelessRoutes;
    },
    get$enabled() {
      return this._pageToPagelessRoutes != null;
    }
  };
  A._HistoryProperty_fromPrimitives_closure.prototype = {
    call$2(key, value) {
      return new A.MapEntry(A._asStringQ(key), A.List_List$from(type$.List_dynamic._as(value), true, type$.Object), type$.MapEntry_of_nullable_String_and_List_Object);
    },
    $signature: 235
  };
  A._NavigatorState_State_TickerProviderStateMixin_RestorationMixin_dispose_closure.prototype = {
    call$2(property, listener) {
      if (!property._disposed)
        property.removeListener$1(listener);
    },
    $signature: 23
  };
  A._NavigatorState_State_TickerProviderStateMixin.prototype = {
    activate$0() {
      this.super$State$activate();
      this._updateTickerModeNotifier$0();
      this._updateTickers$0();
    },
    dispose$0() {
      var _this = this,
        t1 = _this.TickerProviderStateMixin__tickerModeNotifier;
      if (t1 != null)
        t1.removeListener$1(_this.get$_updateTickers());
      _this.TickerProviderStateMixin__tickerModeNotifier = null;
      _this.super$State$dispose();
    }
  };
  A._NavigatorState_State_TickerProviderStateMixin_RestorationMixin.prototype = {
    didUpdateWidget$1(oldWidget) {
      this.super$State$didUpdateWidget(oldWidget);
      this.didUpdateRestorationId$0();
    },
    didChangeDependencies$0() {
      var oldBucket, needsRestore, t1, didReplaceBucket, _this = this;
      _this.super$State$didChangeDependencies();
      oldBucket = _this.RestorationMixin__bucket;
      needsRestore = _this.get$restorePending();
      t1 = _this._element;
      t1.toString;
      t1 = A.RestorationScope_maybeOf(t1);
      _this.RestorationMixin__currentParent = t1;
      didReplaceBucket = _this._updateBucketIfNecessary$2$parent$restorePending(t1, needsRestore);
      if (needsRestore) {
        _this.restoreState$2(oldBucket, _this.RestorationMixin__firstRestorePending);
        _this.RestorationMixin__firstRestorePending = false;
      }
      if (didReplaceBucket)
        if (oldBucket != null)
          oldBucket.dispose$0();
    },
    dispose$0() {
      var t1, _this = this;
      _this.RestorationMixin__properties.forEach$1(0, new A._NavigatorState_State_TickerProviderStateMixin_RestorationMixin_dispose_closure());
      t1 = _this.RestorationMixin__bucket;
      if (t1 != null)
        t1.dispose$0();
      _this.RestorationMixin__bucket = null;
      _this.super$_NavigatorState_State_TickerProviderStateMixin$dispose();
    }
  };
  A.Notification.prototype = {
    toString$0(_) {
      var description = A._setArrayType([], type$.JSArray_String);
      this.debugFillDescription$1(description);
      return "Notification(" + B.JSArray_methods.join$1(description, ", ") + ")";
    },
    debugFillDescription$1(description) {
    }
  };
  A.NotificationListener.prototype = {
    createElement$0() {
      return new A._NotificationElement(this, B._ElementLifecycle_0, this.$ti._eval$1("_NotificationElement<1>"));
    }
  };
  A._NotificationElement.prototype = {
    onNotification$1(notification) {
      var t2,
        t1 = this._widget;
      t1.toString;
      t2 = this.$ti;
      t2._eval$1("NotificationListener<1>")._as(t1);
      if (t2._precomputed1._is(notification))
        return t1.onNotification.call$1(notification);
      return false;
    },
    notifyClients$1(oldWidget) {
    }
  };
  A.LayoutChangedNotification.prototype = {};
  A.__NotificationElement_ProxyElement_NotifiableElementMixin.prototype = {};
  A.OverlayEntry.prototype = {
    set$opaque(value) {
      var t1;
      if (this._opaque === value)
        return;
      this._opaque = value;
      t1 = this._overlay;
      if (t1 != null)
        t1._didChangeEntryOpacity$0();
    },
    set$maintainState(value) {
      if (this._maintainState)
        return;
      this._maintainState = true;
      this._overlay._didChangeEntryOpacity$0();
    },
    remove$0(_) {
      var t2,
        t1 = this._overlay;
      t1.toString;
      this._overlay = null;
      if (t1._element == null)
        return;
      B.JSArray_methods.remove$1(t1._overlay$_entries, this);
      t2 = $.SchedulerBinding__instance;
      if (t2.SchedulerBinding__schedulerPhase === B.SchedulerPhase_3)
        t2.SchedulerBinding__postFrameCallbacks.push(new A.OverlayEntry_remove_closure(t1));
      else
        t1._markDirty$0();
    },
    markNeedsBuild$0() {
      var t1 = this._key.get$currentState();
      if (t1 != null)
        t1._markNeedsBuild$0();
    },
    toString$0(_) {
      return "<optimized out>#" + A.shortHash(this) + "(opaque: " + this._opaque + "; maintainState: " + this._maintainState + ")";
    },
    $isListenable: 1
  };
  A.OverlayEntry_remove_closure.prototype = {
    call$1(duration) {
      this.overlay._markDirty$0();
    },
    $signature: 1
  };
  A._OverlayEntryWidget.prototype = {
    createState$0() {
      return new A._OverlayEntryWidgetState();
    }
  };
  A._OverlayEntryWidgetState.prototype = {
    get$_paintOrderIterable() {
      var result, _this = this,
        value = _this.___OverlayEntryWidgetState__paintOrderIterable_FI;
      if (value === $) {
        result = _this._createChildIterable$1$reversed(false);
        _this.___OverlayEntryWidgetState__paintOrderIterable_FI !== $ && A.throwUnnamedLateFieldADI();
        _this.___OverlayEntryWidgetState__paintOrderIterable_FI = result;
        value = result;
      }
      return value;
    },
    _createChildIterable$1$reversed(reversed) {
      return new A._SyncStarIterable(this._createChildIterable$body$_OverlayEntryWidgetState(reversed), type$._SyncStarIterable_RenderBox);
    },
    _createChildIterable$body$_OverlayEntryWidgetState($async$reversed) {
      return function() {
        var reversed = $async$reversed;
        var $async$goto = 0, $async$handler = 2, $async$errorStack = [];
        return function $async$_createChildIterable$1$reversed($async$iterator, $async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$errorStack.push($async$result);
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                // goto return
                $async$goto = 1;
                break;
              case 1:
                // return
                return 0;
              case 2:
                // rethrow
                return $async$iterator._datum = $async$errorStack.at(-1), 3;
            }
        };
      };
    },
    initState$0() {
      var t1, _this = this;
      _this.super$State$initState();
      _this._widget.entry._overlayEntryStateNotifier.set$value(_this);
      t1 = _this._element.findAncestorRenderObjectOfType$1$0(type$._RenderTheater);
      t1.toString;
      _this.___OverlayEntryWidgetState__theater_A = t1;
    },
    didUpdateWidget$1(oldWidget) {
      var t1, _this = this;
      _this.super$State$didUpdateWidget(oldWidget);
      if (oldWidget.overlayState !== _this._widget.overlayState) {
        t1 = _this._element.findAncestorRenderObjectOfType$1$0(type$._RenderTheater);
        t1.toString;
        _this.___OverlayEntryWidgetState__theater_A = t1;
      }
    },
    dispose$0() {
      var t1, _this = this;
      _this._widget.entry._overlayEntryStateNotifier.set$value(null);
      t1 = _this._widget.entry;
      if (t1._disposedByOwner) {
        t1 = t1._overlayEntryStateNotifier;
        t1.ChangeNotifier__listeners = $.$get$ChangeNotifier__emptyListeners();
        t1.ChangeNotifier__count = 0;
      }
      _this._sortedTheaterSiblings = null;
      _this.super$State$dispose();
    },
    build$1(context) {
      var t1 = this._widget,
        t2 = t1.tickerEnabled,
        t3 = this.___OverlayEntryWidgetState__theater_A;
      t3 === $ && A.throwUnnamedLateFieldNI();
      return new A.TickerMode(t2, new A._RenderTheaterMarker(t3, this, t1.entry.builder.call$1(context), null), null);
    },
    _markNeedsBuild$0() {
      this.setState$1(new A._OverlayEntryWidgetState__markNeedsBuild_closure());
    }
  };
  A._OverlayEntryWidgetState__markNeedsBuild_closure.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A.Overlay.prototype = {
    createState$0() {
      return new A.OverlayState(A._setArrayType([], type$.JSArray_OverlayEntry), null, null);
    }
  };
  A.OverlayState.prototype = {
    initState$0() {
      this.super$State$initState();
      this.insertAll$1(0, this._widget.initialEntries);
    },
    _insertionIndex$2(below, above) {
      return this._overlay$_entries.length;
    },
    insert$1(_, entry) {
      entry._overlay = this;
      this.setState$1(new A.OverlayState_insert_closure(this, null, null, entry));
    },
    insertAll$1(_, entries) {
      var _i,
        t1 = entries.length;
      if (t1 === 0)
        return;
      for (_i = 0; _i < t1; ++_i)
        entries[_i]._overlay = this;
      this.setState$1(new A.OverlayState_insertAll_closure(this, null, null, entries));
    },
    rearrange$1(newEntries) {
      var t1, old, _i, entry, _this = this;
      if (newEntries.length === 0)
        return;
      t1 = _this._overlay$_entries;
      if (A.listEquals(t1, newEntries))
        return;
      old = A.LinkedHashSet_LinkedHashSet$of(t1, type$.OverlayEntry);
      for (t1 = newEntries.length, _i = 0; _i < t1; ++_i) {
        entry = newEntries[_i];
        if (entry._overlay == null)
          entry._overlay = _this;
      }
      _this.setState$1(new A.OverlayState_rearrange_closure(_this, newEntries, old, null, null));
    },
    _markDirty$0() {
      if (this._element != null)
        this.setState$1(new A.OverlayState__markDirty_closure());
    },
    _didChangeEntryOpacity$0() {
      this.setState$1(new A.OverlayState__didChangeEntryOpacity_closure());
    },
    build$1(context) {
      var t1, t2, onstage, onstageCount, t3, _this = this,
        children = A._setArrayType([], type$.JSArray__OverlayEntryWidget);
      for (t1 = _this._overlay$_entries, t2 = A._arrayInstanceType(t1)._eval$1("ReversedListIterable<1>"), t1 = new A.ReversedListIterable(t1, t2), t1 = new A.ListIterator(t1, t1.get$length(0), t2._eval$1("ListIterator<ListIterable.E>")), t2 = t2._eval$1("ListIterable.E"), onstage = true, onstageCount = 0; t1.moveNext$0();) {
        t3 = t1.__internal$_current;
        if (t3 == null)
          t3 = t2._as(t3);
        if (onstage) {
          ++onstageCount;
          children.push(new A._OverlayEntryWidget(t3, _this, true, t3._key));
          t3 = t3._opaque;
          onstage = !t3;
        } else if (t3._maintainState)
          children.push(new A._OverlayEntryWidget(t3, _this, false, t3._key));
      }
      t1 = children.length;
      t2 = _this._widget.clipBehavior;
      t3 = type$.ReversedListIterable__OverlayEntryWidget;
      t3 = A.List_List$_of(new A.ReversedListIterable(children, t3), t3._eval$1("ListIterable.E"));
      t3.$flags = 1;
      return new A._Theater(t1 - onstageCount, t2, t3, null);
    }
  };
  A.OverlayState_insert_closure.prototype = {
    call$0() {
      var _this = this,
        t1 = _this.$this;
      B.JSArray_methods.insert$2(t1._overlay$_entries, t1._insertionIndex$2(_this.below, _this.above), _this.entry);
    },
    $signature: 0
  };
  A.OverlayState_insertAll_closure.prototype = {
    call$0() {
      var _this = this,
        t1 = _this.$this;
      B.JSArray_methods.insertAll$2(t1._overlay$_entries, t1._insertionIndex$2(_this.below, _this.above), _this.entries);
    },
    $signature: 0
  };
  A.OverlayState_rearrange_closure.prototype = {
    call$0() {
      var t3, t4, _this = this,
        t1 = _this.$this,
        t2 = t1._overlay$_entries;
      B.JSArray_methods.clear$0(t2);
      t3 = _this.newEntriesList;
      B.JSArray_methods.addAll$1(t2, t3);
      t4 = _this.old;
      t4.removeAll$1(t3);
      B.JSArray_methods.insertAll$2(t2, t1._insertionIndex$2(_this.below, _this.above), t4);
    },
    $signature: 0
  };
  A.OverlayState__markDirty_closure.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A.OverlayState__didChangeEntryOpacity_closure.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A._Theater.prototype = {
    createElement$0() {
      return new A._TheaterElement(A.HashSet_HashSet(type$.Element), this, B._ElementLifecycle_0);
    },
    createRenderObject$1(context) {
      var t1 = new A._RenderTheater(context.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality).textDirection, this.skipCount, this.clipBehavior, A.LayerHandle$(), 0, null, null, A.LayerHandle$());
      t1.RenderObject$0();
      t1.addAll$1(0, null);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      var t1 = this.skipCount;
      if (renderObject._overlay$_skipCount !== t1) {
        renderObject._overlay$_skipCount = t1;
        renderObject.markNeedsLayout$0();
      }
      renderObject.set$textDirection(context.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality).textDirection);
      t1 = this.clipBehavior;
      if (t1 !== renderObject._overlay$_clipBehavior) {
        renderObject._overlay$_clipBehavior = t1;
        renderObject.markNeedsPaint$0();
        renderObject.markNeedsSemanticsUpdate$0();
      }
    }
  };
  A._TheaterElement.prototype = {
    get$renderObject() {
      return type$._RenderTheater._as(A.MultiChildRenderObjectElement.prototype.get$renderObject.call(this));
    },
    insertRenderObjectChild$2(child, slot) {
      var t1, t2;
      this.super$MultiChildRenderObjectElement$insertRenderObjectChild(child, slot);
      t1 = child.parentData;
      t1.toString;
      type$._TheaterParentData._as(t1);
      t2 = this._widget;
      t2.toString;
      t1.overlayEntry = type$._OverlayEntryWidget._as(type$._Theater._as(t2).children[slot.index]).entry;
    },
    moveRenderObjectChild$3(child, oldSlot, newSlot) {
      this.super$MultiChildRenderObjectElement$moveRenderObjectChild(child, oldSlot, newSlot);
    }
  };
  A._RenderTheaterMixin.prototype = {
    setupParentData$1(child) {
      if (!(child.parentData instanceof A.StackParentData))
        child.parentData = new A.StackParentData(null, null, B.Offset_0_0);
    },
    get$sizedByParent() {
      return true;
    },
    performLayout$0() {
      var t2, child, t3, t4, t5, _this = this,
        iterator = new A._SyncStarIterator(_this._childrenInPaintOrder$0()._outerHelper()),
        t1 = A.RenderObject.prototype.get$constraints.call(_this),
        nonPositionedChildConstraints = A.BoxConstraints$tight(new A.Size(A.clampDouble(1 / 0, t1.minWidth, t1.maxWidth), A.clampDouble(1 / 0, t1.minHeight, t1.maxHeight))),
        alignment = _this._alignmentCache;
      if (alignment == null)
        alignment = _this._alignmentCache = B.AlignmentDirectional_m1_m1.resolve$1(_this._overlay$_textDirection);
      for (t1 = type$.StackParentData, t2 = type$.Offset; iterator.moveNext$0();) {
        child = iterator._async$_current;
        t3 = child.parentData;
        t3.toString;
        t1._as(t3);
        if (!t3.get$isPositioned()) {
          child.layout$2$parentUsesSize(nonPositionedChildConstraints, true);
          t4 = _this._size;
          t4.toString;
          t5 = child._size;
          t5.toString;
          t3.offset = alignment.alongOffset$1(t2._as(t4.$sub(0, t5)));
        } else {
          t4 = _this._size;
          t4.toString;
          A.RenderStack_layoutPositionedChild(child, t3, t4, alignment);
        }
      }
    },
    hitTestChildren$2$position(result, position) {
      var child, t2,
        iterator = new A._SyncStarIterator(this._childrenInHitTestOrder$0()._outerHelper()),
        t1 = type$.StackParentData,
        isHit = false;
      while (true) {
        if (!(!isHit && iterator.moveNext$0()))
          break;
        child = iterator._async$_current;
        t2 = child.parentData;
        t2.toString;
        isHit = result.addWithPaintOffset$3$hitTest$offset$position(new A._RenderTheaterMixin_hitTestChildren_childHitTest(child), t1._as(t2).offset, position);
      }
      return isHit;
    },
    paint$2(context, offset) {
      var t1, t2, t3, t4, t5, t6;
      for (t1 = new A._SyncStarIterator(this._childrenInPaintOrder$0()._outerHelper()), t2 = type$.StackParentData, t3 = offset._dx, t4 = offset._dy; t1.moveNext$0();) {
        t5 = t1._async$_current;
        t6 = t5.parentData;
        t6.toString;
        t6 = t2._as(t6).offset;
        context.paintChild$2(t5, new A.Offset(t6._dx + t3, t6._dy + t4));
      }
    }
  };
  A._RenderTheaterMixin_hitTestChildren_childHitTest.prototype = {
    call$2(result, position) {
      return this.localChild.hitTest$2$position(result, position);
    },
    $signature: 13
  };
  A._TheaterParentData.prototype = {};
  A._RenderTheater.prototype = {
    setupParentData$1(child) {
      if (!(child.parentData instanceof A._TheaterParentData))
        child.parentData = new A._TheaterParentData(null, null, B.Offset_0_0);
    },
    attach$1(owner) {
      var child, t1, t2, t3, iterator;
      this.super$__RenderTheater_RenderBox_ContainerRenderObjectMixin$attach(owner);
      child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$._TheaterParentData; child != null;) {
        t2 = child.parentData;
        t2.toString;
        t1._as(t2);
        t3 = t2.overlayEntry;
        iterator = t3 == null ? null : new A._SyncStarIterator(t3._overlayEntryStateNotifier._change_notifier$_value.get$_paintOrderIterable()._outerHelper());
        if (iterator != null)
          for (; iterator.moveNext$0();)
            iterator._async$_current.attach$1(owner);
        child = t2.ContainerParentDataMixin_nextSibling;
      }
    },
    detach$0() {
      var child, t1, t2, t3;
      this.super$__RenderTheater_RenderBox_ContainerRenderObjectMixin$detach();
      child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$._TheaterParentData; child != null;) {
        t2 = child.parentData;
        t2.toString;
        t1._as(t2);
        t3 = t2.overlayEntry;
        if (t3 != null)
          t3._overlayEntryStateNotifier._change_notifier$_value.get$_paintOrderIterable().forEach$1(0, A.overlay__RenderTheater__detachChild$closure());
        child = t2.ContainerParentDataMixin_nextSibling;
      }
    },
    redepthChildren$0() {
      return this.visitChildren$1(this.get$redepthChild());
    },
    set$textDirection(value) {
      var _this = this;
      if (_this._overlay$_textDirection === value)
        return;
      _this._overlay$_textDirection = value;
      _this._alignmentCache = null;
      _this.markNeedsLayout$0();
    },
    markNeedsLayout$0() {
      this.super$RenderBox$markNeedsLayout();
    },
    get$_firstOnstageChild() {
      var child, toSkip, t1, t2, _this = this;
      if (_this._overlay$_skipCount === A.ContainerRenderObjectMixin.prototype.get$childCount.call(_this))
        return null;
      child = A.ContainerRenderObjectMixin.prototype.get$firstChild.call(_this);
      for (toSkip = _this._overlay$_skipCount, t1 = type$.StackParentData; toSkip > 0; --toSkip) {
        t2 = child.parentData;
        t2.toString;
        child = t1._as(t2).ContainerParentDataMixin_nextSibling;
      }
      return child;
    },
    computeDistanceToActualBaseline$1(baseline) {
      var t1, result, t2, candidate,
        child = this.get$_firstOnstageChild();
      for (t1 = type$.StackParentData, result = null; child != null;) {
        t2 = child.parentData;
        t2.toString;
        t1._as(t2);
        candidate = child.getDistanceToActualBaseline$1(baseline);
        if (candidate != null) {
          candidate += t2.offset._dy;
          result = result != null ? Math.min(result, candidate) : candidate;
        }
        child = t2.ContainerParentDataMixin_nextSibling;
      }
      return result;
    },
    computeDryLayout$1(constraints) {
      return new A.Size(A.clampDouble(1 / 0, constraints.minWidth, constraints.maxWidth), A.clampDouble(1 / 0, constraints.minHeight, constraints.maxHeight));
    },
    _childrenInPaintOrder$0() {
      return new A._SyncStarIterable(this._childrenInPaintOrder$body$_RenderTheater(), type$._SyncStarIterable_RenderBox);
    },
    _childrenInPaintOrder$body$_RenderTheater() {
      var $async$self = this;
      return function() {
        var $async$goto = 0, $async$handler = 1, $async$errorStack = [], t1, t2, t3, innerIterator, child;
        return function $async$_childrenInPaintOrder$0($async$iterator, $async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$errorStack.push($async$result);
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                child = $async$self.get$_firstOnstageChild();
                t1 = type$._TheaterParentData;
              case 2:
                // for condition
                if (!(child != null)) {
                  // goto after for
                  $async$goto = 3;
                  break;
                }
                $async$goto = 4;
                return $async$iterator._async$_current = child, 1;
              case 4:
                // after yield
                t2 = child.parentData;
                t2.toString;
                t1._as(t2);
                t3 = t2.overlayEntry;
                innerIterator = t3 == null ? null : new A._SyncStarIterator(t3._overlayEntryStateNotifier._change_notifier$_value.get$_paintOrderIterable()._outerHelper());
                $async$goto = innerIterator != null ? 5 : 6;
                break;
              case 5:
                // then
              case 7:
                // for condition
                if (!innerIterator.moveNext$0()) {
                  // goto after for
                  $async$goto = 8;
                  break;
                }
                $async$goto = 9;
                return $async$iterator._async$_current = innerIterator._async$_current, 1;
              case 9:
                // after yield
                // goto for condition
                $async$goto = 7;
                break;
              case 8:
                // after for
              case 6:
                // join
                child = t2.ContainerParentDataMixin_nextSibling;
                // goto for condition
                $async$goto = 2;
                break;
              case 3:
                // after for
                // implicit return
                return 0;
              case 1:
                // rethrow
                return $async$iterator._datum = $async$errorStack.at(-1), 3;
            }
        };
      };
    },
    _childrenInHitTestOrder$0() {
      return new A._SyncStarIterable(this._childrenInHitTestOrder$body$_RenderTheater(), type$._SyncStarIterable_RenderBox);
    },
    _childrenInHitTestOrder$body$_RenderTheater() {
      var $async$self = this;
      return function() {
        var $async$goto = 0, $async$handler = 1, $async$errorStack = [], t1, t2, t3, innerIterator, value, result, child, childLeft;
        return function $async$_childrenInHitTestOrder$0($async$iterator, $async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$errorStack.push($async$result);
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                child = $async$self._overlay$_skipCount === A.ContainerRenderObjectMixin.prototype.get$childCount.call($async$self) ? null : $async$self.ContainerRenderObjectMixin__lastChild;
                childLeft = $async$self.ContainerRenderObjectMixin__childCount - $async$self._overlay$_skipCount;
                t1 = type$._TheaterParentData;
              case 2:
                // for condition
                if (!(child != null)) {
                  // goto after for
                  $async$goto = 3;
                  break;
                }
                t2 = child.parentData;
                t2.toString;
                t1._as(t2);
                t3 = t2.overlayEntry;
                if (t3 == null)
                  innerIterator = null;
                else {
                  t3 = t3._overlayEntryStateNotifier._change_notifier$_value;
                  value = t3.___OverlayEntryWidgetState__hitTestOrderIterable_FI;
                  if (value === $) {
                    result = t3._createChildIterable$1$reversed(true);
                    t3.___OverlayEntryWidgetState__hitTestOrderIterable_FI !== $ && A.throwUnnamedLateFieldADI();
                    t3.___OverlayEntryWidgetState__hitTestOrderIterable_FI = result;
                    value = result;
                  }
                  innerIterator = new A._SyncStarIterator(value._outerHelper());
                }
                $async$goto = innerIterator != null ? 4 : 5;
                break;
              case 4:
                // then
              case 6:
                // for condition
                if (!innerIterator.moveNext$0()) {
                  // goto after for
                  $async$goto = 7;
                  break;
                }
                $async$goto = 8;
                return $async$iterator._async$_current = innerIterator._async$_current, 1;
              case 8:
                // after yield
                // goto for condition
                $async$goto = 6;
                break;
              case 7:
                // after for
              case 5:
                // join
                $async$goto = 9;
                return $async$iterator._async$_current = child, 1;
              case 9:
                // after yield
                --childLeft;
                child = childLeft <= 0 ? null : t2.ContainerParentDataMixin_previousSibling;
                // goto for condition
                $async$goto = 2;
                break;
              case 3:
                // after for
                // implicit return
                return 0;
              case 1:
                // rethrow
                return $async$iterator._datum = $async$errorStack.at(-1), 3;
            }
        };
      };
    },
    paint$2(context, offset) {
      var t2, t3, _this = this,
        t1 = _this._clipRectLayer;
      if (_this._overlay$_clipBehavior !== B.Clip_0) {
        t2 = _this.__RenderObject__needsCompositing_A;
        t2 === $ && A.throwUnnamedLateFieldNI();
        t3 = _this._size;
        t1.set$layer(context.pushClipRect$6$clipBehavior$oldLayer(t2, offset, new A.Rect(0, 0, 0 + t3._dx, 0 + t3._dy), A._RenderTheaterMixin.prototype.get$paint.call(_this), _this._overlay$_clipBehavior, t1._layer));
      } else {
        t1.set$layer(null);
        _this.super$_RenderTheaterMixin$paint(context, offset);
      }
    },
    dispose$0() {
      this._clipRectLayer.set$layer(null);
      this.super$RenderObject$dispose();
    },
    visitChildren$1(visitor) {
      var t1, t2, t3,
        child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$._TheaterParentData; child != null;) {
        visitor.call$1(child);
        t2 = child.parentData;
        t2.toString;
        t1._as(t2);
        t3 = t2.overlayEntry;
        if (t3 != null)
          t3._overlayEntryStateNotifier._change_notifier$_value.get$_paintOrderIterable().forEach$1(0, visitor);
        child = t2.ContainerParentDataMixin_nextSibling;
      }
    },
    visitChildrenForSemantics$1(visitor) {
      var t1, t2, t3,
        child = this.get$_firstOnstageChild();
      for (t1 = type$._TheaterParentData; child != null;) {
        visitor.call$1(child);
        t2 = child.parentData;
        t2.toString;
        t1._as(t2);
        t3 = t2.overlayEntry;
        if (t3 != null)
          t3._overlayEntryStateNotifier._change_notifier$_value.get$_paintOrderIterable().forEach$1(0, visitor);
        child = t2.ContainerParentDataMixin_nextSibling;
      }
    },
    describeApproximatePaintClip$1(child) {
      var t1;
      switch (this._overlay$_clipBehavior.index) {
        case 0:
          return null;
        case 1:
        case 2:
        case 3:
          t1 = this._size;
          return new A.Rect(0, 0, 0 + t1._dx, 0 + t1._dy);
      }
    }
  };
  A._RenderTheaterMarker.prototype = {
    updateShouldNotify$1(oldWidget) {
      return oldWidget.theater !== this.theater || oldWidget.overlayEntryWidgetState !== this.overlayEntryWidgetState;
    }
  };
  A._OverlayState_State_TickerProviderStateMixin.prototype = {
    activate$0() {
      this.super$State$activate();
      this._updateTickerModeNotifier$0();
      this._updateTickers$0();
    },
    dispose$0() {
      var _this = this,
        t1 = _this.TickerProviderStateMixin__tickerModeNotifier;
      if (t1 != null)
        t1.removeListener$1(_this.get$_updateTickers());
      _this.TickerProviderStateMixin__tickerModeNotifier = null;
      _this.super$State$dispose();
    }
  };
  A.__RenderTheater_RenderBox_ContainerRenderObjectMixin.prototype = {
    attach$1(owner) {
      var child, t1, t2;
      this.super$RenderObject$attach(owner);
      child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.StackParentData; child != null;) {
        child.attach$1(owner);
        t2 = child.parentData;
        t2.toString;
        child = t1._as(t2).ContainerParentDataMixin_nextSibling;
      }
    },
    detach$0() {
      var child, t1, t2;
      this.super$AbstractNode$detach();
      child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.StackParentData; child != null;) {
        child.detach$0();
        t2 = child.parentData;
        t2.toString;
        child = t1._as(t2).ContainerParentDataMixin_nextSibling;
      }
    }
  };
  A.__RenderTheater_RenderBox_ContainerRenderObjectMixin__RenderTheaterMixin.prototype = {};
  A.GlowingOverscrollIndicator.prototype = {
    createState$0() {
      var t1 = type$.bool;
      return new A._GlowingOverscrollIndicatorState(A.LinkedHashMap_LinkedHashMap$_literal([false, true, true, true], t1, t1), null, null);
    },
    notificationPredicate$1(arg0) {
      return A.scroll_notification__defaultScrollNotificationPredicate$closure().call$1(arg0);
    }
  };
  A._GlowingOverscrollIndicatorState.prototype = {
    initState$0() {
      var t1, t2, _this = this;
      _this.super$State$initState();
      t1 = _this._widget;
      t2 = t1.color;
      _this._leadingController = A._GlowController$(A.axisDirectionToAxis(t1.axisDirection), t2, _this);
      t2 = _this._widget;
      t1 = t2.color;
      t1 = A._GlowController$(A.axisDirectionToAxis(t2.axisDirection), t1, _this);
      _this._trailingController = t1;
      t2 = _this._leadingController;
      t2.toString;
      _this._leadingAndTrailingListener = new A._MergingListenable(A._setArrayType([t2, t1], type$.JSArray_Listenable));
    },
    didUpdateWidget$1(oldWidget) {
      var t1, _this = this;
      _this.super$State$didUpdateWidget(oldWidget);
      if (!oldWidget.color.$eq(0, _this._widget.color) || A.axisDirectionToAxis(oldWidget.axisDirection) !== A.axisDirectionToAxis(_this._widget.axisDirection)) {
        t1 = _this._leadingController;
        t1.toString;
        t1.set$color(_this._widget.color);
        t1 = _this._leadingController;
        t1.toString;
        t1.set$axis(A.axisDirectionToAxis(_this._widget.axisDirection));
        t1 = _this._trailingController;
        t1.toString;
        t1.set$color(_this._widget.color);
        t1 = _this._trailingController;
        t1.toString;
        t1.set$axis(A.axisDirectionToAxis(_this._widget.axisDirection));
      }
    },
    _overscroll_indicator$_handleScrollNotification$1(notification) {
      var t1, t2, t3, t4, t5, controller, isLeading, velocity, position, _this = this;
      if (!_this._widget.notificationPredicate$1(notification))
        return false;
      t1 = notification.metrics;
      t2 = t1.axisDirection;
      if (A.axisDirectionToAxis(t2) !== A.axisDirectionToAxis(_this._widget.axisDirection))
        return false;
      t3 = _this._leadingController;
      t3.toString;
      t4 = t1._pixels;
      t4.toString;
      t5 = t1._minScrollExtent;
      t5.toString;
      t3._paintOffsetScrollPixels = -Math.min(t4 - t5, t3._paintOffset);
      t5 = _this._trailingController;
      t5.toString;
      t1 = t1._maxScrollExtent;
      t1.toString;
      t5._paintOffsetScrollPixels = -Math.min(t1 - t4, t5._paintOffset);
      if (notification instanceof A.OverscrollNotification) {
        t1 = notification.overscroll;
        if (t1 < 0)
          controller = t3;
        else if (t1 > 0)
          controller = t5;
        else
          controller = null;
        isLeading = controller === t3;
        t3 = _this._element;
        t3.dispatchNotification$1(new A.OverscrollIndicatorNotification(isLeading, 0));
        t3 = _this._accepted;
        t3.$indexSet(0, isLeading, true);
        t3.$index(0, isLeading).toString;
        controller._paintOffset = 0;
        _this._accepted.$index(0, isLeading).toString;
        t3 = notification.velocity;
        if (t3 !== 0) {
          t1 = controller._pullRecedeTimer;
          if (t1 != null)
            t1.cancel$0();
          controller._pullRecedeTimer = null;
          velocity = A.clampDouble(Math.abs(t3), 100, 10000);
          t1 = controller._glowOpacityTween;
          if (controller._overscroll_indicator$_state === B._GlowState_0)
            t2 = 0.3;
          else {
            t2 = controller.___GlowController__glowOpacity_F;
            t2 === $ && A.throwUnnamedLateFieldNI();
            t2 = t2._evaluatable.transform$1(t2.parent.get$value());
          }
          t1.begin = t2;
          t2.toString;
          t1.end = A.clampDouble(velocity * 0.00006, t2, 0.5);
          t2 = controller._glowSizeTween;
          t1 = controller.___GlowController__glowSize_F;
          t1 === $ && A.throwUnnamedLateFieldNI();
          t2.begin = t1._evaluatable.transform$1(t1.parent.get$value());
          t2.end = Math.min(0.025 + 75e-8 * velocity * velocity, 1);
          t2 = controller.___GlowController__glowController_F;
          t2 === $ && A.throwUnnamedLateFieldNI();
          t2.duration = A.Duration$(0, 0, B.JSNumber_methods.round$0(0.15 + velocity * 0.02), 0, 0);
          t2.forward$1$from(0);
          controller._displacement = 0.5;
          controller._overscroll_indicator$_state = B._GlowState_1;
        } else {
          t3 = notification.dragDetails;
          if (t3 != null) {
            t4 = notification.context.get$renderObject();
            t4.toString;
            type$.RenderBox._as(t4);
            t5 = t4._size;
            t5.toString;
            position = t4.globalToLocal$1(t3.globalPosition);
            switch (A.axisDirectionToAxis(t2).index) {
              case 0:
                controller.toString;
                t2 = t5._dy;
                controller.pull$4(Math.abs(t1), t5._dx, A.clampDouble(position._dy, 0, t2), t2);
                break;
              case 1:
                controller.toString;
                t2 = t5._dx;
                controller.pull$4(Math.abs(t1), t5._dy, A.clampDouble(position._dx, 0, t2), t2);
                break;
            }
          }
        }
      } else if (notification instanceof A.ScrollEndNotification || notification instanceof A.ScrollUpdateNotification)
        if (notification.get$dragDetails() != null) {
          t1 = _this._leadingController;
          if (t1._overscroll_indicator$_state === B._GlowState_2)
            t1._recede$1(B.Duration_600000);
          t1 = _this._trailingController;
          if (t1._overscroll_indicator$_state === B._GlowState_2)
            t1._recede$1(B.Duration_600000);
        }
      _this._lastNotificationType = A.getRuntimeTypeOfDartObject(notification);
      return false;
    },
    dispose$0() {
      this._leadingController.dispose$0();
      this._trailingController.dispose$0();
      this.super$__GlowingOverscrollIndicatorState_State_TickerProviderStateMixin$dispose();
    },
    build$1(context) {
      var _this = this, _null = null,
        t1 = _this._widget,
        t2 = _this._leadingController,
        t3 = _this._trailingController,
        t4 = t1.axisDirection,
        t5 = _this._leadingAndTrailingListener;
      return new A.NotificationListener(_this.get$_overscroll_indicator$_handleScrollNotification(), new A.RepaintBoundary(A.CustomPaint$(new A.RepaintBoundary(t1.child, _null), new A._GlowingOverscrollIndicatorPainter(t2, t3, t4, t5), _null, _null, B.Size_0_0), _null), _null, type$.NotificationListener_ScrollNotification);
    }
  };
  A._GlowState.prototype = {
    _enumToString$0() {
      return "_GlowState." + this._name;
    }
  };
  A._GlowController.prototype = {
    set$color(value) {
      if (this._overscroll_indicator$_color.$eq(0, value))
        return;
      this._overscroll_indicator$_color = value;
      this.notifyListeners$0();
    },
    set$axis(value) {
      if (this._axis === value)
        return;
      this._axis = value;
      this.notifyListeners$0();
    },
    dispose$0() {
      var _this = this,
        t1 = _this.___GlowController__glowController_F;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.dispose$0();
      t1 = _this.___GlowController__displacementTicker_F;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1._creator.TickerProviderStateMixin__tickers.remove$1(0, t1);
      t1.super$Ticker$dispose();
      t1 = _this._pullRecedeTimer;
      if (t1 != null)
        t1.cancel$0();
      _this.super$ChangeNotifier$dispose();
    },
    pull$4(overscroll, extent, crossAxisOffset, crossExtent) {
      var t2, t3, height, _this = this,
        t1 = _this._pullRecedeTimer;
      if (t1 != null)
        t1.cancel$0();
      _this._pullDistance = _this._pullDistance + overscroll / 200;
      t1 = _this._glowOpacityTween;
      t2 = _this.___GlowController__glowOpacity_F;
      t2 === $ && A.throwUnnamedLateFieldNI();
      t3 = t2._evaluatable;
      t2 = t2.parent;
      t1.begin = t3.transform$1(t2.get$value());
      t1.end = Math.min(t3.transform$1(t2.get$value()) + overscroll / extent * 0.8, 0.5);
      height = Math.min(extent, crossExtent * 0.20096189432249995);
      t2 = _this._glowSizeTween;
      t3 = _this.___GlowController__glowSize_F;
      t3 === $ && A.throwUnnamedLateFieldNI();
      t1 = t3._evaluatable;
      t3 = t3.parent;
      t2.begin = t1.transform$1(t3.get$value());
      t2.end = Math.max(1 - 1 / (0.7 * Math.sqrt(_this._pullDistance * height)), A.checkNum(t1.transform$1(t3.get$value())));
      t3 = crossAxisOffset / crossExtent;
      _this._displacementTarget = t3;
      if (t3 !== _this._displacement) {
        t1 = _this.___GlowController__displacementTicker_F;
        t1 === $ && A.throwUnnamedLateFieldNI();
        if (!t1.get$isTicking())
          t1.start$0();
      } else {
        t1 = _this.___GlowController__displacementTicker_F;
        t1 === $ && A.throwUnnamedLateFieldNI();
        t1.stop$0();
        _this._displacementTickerLastElapsed = null;
      }
      t1 = _this.___GlowController__glowController_F;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.duration = B.Duration_167000;
      if (_this._overscroll_indicator$_state !== B._GlowState_2) {
        t1.forward$1$from(0);
        _this._overscroll_indicator$_state = B._GlowState_2;
      } else {
        t1 = t1._ticker;
        if (!(t1 != null && t1._ticker$_future != null))
          _this.notifyListeners$0();
      }
      _this._pullRecedeTimer = A.Timer_Timer(B.Duration_167000, new A._GlowController_pull_closure(_this));
    },
    _changePhase$1($status) {
      var _this = this;
      if ($status !== B.AnimationStatus_3)
        return;
      switch (_this._overscroll_indicator$_state.index) {
        case 1:
          _this._recede$1(B.Duration_600000);
          break;
        case 3:
          _this._overscroll_indicator$_state = B._GlowState_0;
          _this._pullDistance = 0;
          break;
        case 2:
        case 0:
          break;
      }
    },
    _recede$1(duration) {
      var t2, _this = this,
        t1 = _this._overscroll_indicator$_state;
      if (t1 === B._GlowState_3 || t1 === B._GlowState_0)
        return;
      t1 = _this._pullRecedeTimer;
      if (t1 != null)
        t1.cancel$0();
      _this._pullRecedeTimer = null;
      t1 = _this._glowOpacityTween;
      t2 = _this.___GlowController__glowOpacity_F;
      t2 === $ && A.throwUnnamedLateFieldNI();
      t1.begin = t2._evaluatable.transform$1(t2.parent.get$value());
      t1.end = 0;
      t1 = _this._glowSizeTween;
      t2 = _this.___GlowController__glowSize_F;
      t2 === $ && A.throwUnnamedLateFieldNI();
      t1.begin = t2._evaluatable.transform$1(t2.parent.get$value());
      t1.end = 0;
      t1 = _this.___GlowController__glowController_F;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.duration = duration;
      t1.forward$1$from(0);
      _this._overscroll_indicator$_state = B._GlowState_3;
    },
    _tickDisplacement$1(elapsed) {
      var t2, _this = this,
        t1 = _this._displacementTickerLastElapsed;
      if (t1 != null) {
        t1 = t1._duration;
        t2 = _this._displacementTarget;
        _this._displacement = t2 - (t2 - _this._displacement) * Math.pow(2, -(elapsed._duration - t1) / $.$get$_GlowController__crossAxisHalfTime()._duration);
        _this.notifyListeners$0();
      }
      if (A.nearEqual(_this._displacementTarget, _this._displacement, 0.001)) {
        t1 = _this.___GlowController__displacementTicker_F;
        t1 === $ && A.throwUnnamedLateFieldNI();
        t1.stop$0();
        _this._displacementTickerLastElapsed = null;
      } else
        _this._displacementTickerLastElapsed = elapsed;
    },
    paint$2(canvas, size) {
      var t2, t3, baseGlowScale, radius, height, t4, paint, t5, _this = this,
        t1 = _this.___GlowController__glowOpacity_F;
      t1 === $ && A.throwUnnamedLateFieldNI();
      if (J.$eq$(t1._evaluatable.transform$1(t1.parent.get$value()), 0))
        return;
      t2 = size._dx;
      t3 = size._dy;
      baseGlowScale = t2 > t3 ? t3 / t2 : 1;
      radius = t2 * 3 / 2;
      height = Math.min(t3, t2 * 0.20096189432249995);
      t3 = _this.___GlowController__glowSize_F;
      t3 === $ && A.throwUnnamedLateFieldNI();
      t3 = t3._evaluatable.transform$1(t3.parent.get$value());
      t4 = _this._displacement;
      paint = A.Paint$();
      t5 = _this._overscroll_indicator$_color;
      paint.set$color(A.Color$fromARGB(B.JSNumber_methods.round$0(255 * t1._evaluatable.transform$1(t1.parent.get$value())), t5.get$value() >>> 16 & 255, t5.get$value() >>> 8 & 255, t5.get$value() & 255));
      canvas.save$0();
      t5 = _this._paintOffset;
      t1 = _this._paintOffsetScrollPixels;
      canvas._addMethod$1(3);
      canvas._addData2$2(0, t5 + t1);
      canvas.scale$2(1, t3 * baseGlowScale);
      canvas.clipRect$1(new A.Rect(0, 0, 0 + t2, 0 + height));
      canvas.drawCircle$3(new A.Offset(t2 / 2 * (0.5 + t4), height - radius), radius, paint);
      canvas.restore$0();
    },
    toString$0(_) {
      return "_GlowController(color: " + this._overscroll_indicator$_color.toString$0(0) + ", axis: " + A.describeEnum(this._axis) + ")";
    }
  };
  A._GlowController_pull_closure.prototype = {
    call$0() {
      return this.$this._recede$1(B.Duration_2000000);
    },
    $signature: 0
  };
  A._GlowingOverscrollIndicatorPainter.prototype = {
    _paintSide$5(canvas, size, controller, axisDirection, growthDirection) {
      var t1;
      if (controller == null)
        return;
      switch (A.applyGrowthDirectionToAxisDirection(axisDirection, growthDirection).index) {
        case 0:
          controller.paint$2(canvas, size);
          break;
        case 2:
          canvas.save$0();
          canvas._addMethod$1(3);
          canvas._addData2$2(0, size._dy);
          canvas.scale$2(1, -1);
          controller.paint$2(canvas, size);
          canvas.restore$0();
          break;
        case 3:
          canvas.save$0();
          canvas._addMethod$1(5);
          canvas._addData1$1(1.5707963267948966);
          canvas.scale$2(1, -1);
          controller.paint$2(canvas, new A.Size(size._dy, size._dx));
          canvas.restore$0();
          break;
        case 1:
          canvas.save$0();
          t1 = size._dx;
          canvas._addMethod$1(3);
          canvas._addData2$2(t1, 0);
          canvas._addMethod$1(5);
          canvas._addData1$1(1.5707963267948966);
          controller.paint$2(canvas, new A.Size(size._dy, t1));
          canvas.restore$0();
          break;
      }
    },
    paint$2(canvas, size) {
      var _this = this,
        t1 = _this.axisDirection;
      _this._paintSide$5(canvas, size, _this.leadingController, t1, B.GrowthDirection_1);
      _this._paintSide$5(canvas, size, _this.trailingController, t1, B.GrowthDirection_0);
    },
    shouldRepaint$1(oldDelegate) {
      return oldDelegate.leadingController != this.leadingController || oldDelegate.trailingController != this.trailingController;
    },
    toString$0(_) {
      return "_GlowingOverscrollIndicatorPainter(" + A.S(this.leadingController) + ", " + A.S(this.trailingController) + ")";
    }
  };
  A._StretchDirection.prototype = {
    _enumToString$0() {
      return "_StretchDirection." + this._name;
    }
  };
  A.StretchingOverscrollIndicator.prototype = {
    createState$0() {
      return new A._StretchingOverscrollIndicatorState(null, null);
    },
    notificationPredicate$1(arg0) {
      return A.scroll_notification__defaultScrollNotificationPredicate$closure().call$1(arg0);
    }
  };
  A._StretchingOverscrollIndicatorState.prototype = {
    get$_stretchController() {
      var t1, t2, result, t3, t4, decelerator, _this = this, _null = null,
        value = _this.___StretchingOverscrollIndicatorState__stretchController_FI;
      if (value === $) {
        t1 = type$.Tween_double;
        t2 = new A.Tween(0, 0, t1);
        result = new A._StretchController(t2, B._StretchState_0, B._StretchDirection_0, $.$get$ChangeNotifier__emptyListeners());
        t3 = A.AnimationController$(_null, _null, _null, _null, _this);
        t3.didRegisterListener$0();
        t4 = t3.AnimationLocalStatusListenersMixin__statusListeners;
        t4._isDirty = true;
        t4._observer_list$_list.push(result.get$_changePhase());
        result.___StretchController__stretchController_F !== $ && A.throwUnnamedLateFieldAI();
        result.___StretchController__stretchController_F = t3;
        decelerator = A.CurvedAnimation$(B.C__DecelerateCurve, t3, _null);
        decelerator.parent.addListener$1(result.get$notifyListeners());
        type$.Animation_double._as(decelerator);
        result.___StretchController__stretchSize_F !== $ && A.throwUnnamedLateFieldAI();
        result.___StretchController__stretchSize_F = new A._AnimatedEvaluation(decelerator, t2, t1._eval$1("_AnimatedEvaluation<Animatable.T>"));
        _this.___StretchingOverscrollIndicatorState__stretchController_FI !== $ && A.throwUnnamedLateFieldADI();
        _this.___StretchingOverscrollIndicatorState__stretchController_FI = result;
        value = result;
      }
      return value;
    },
    _overscroll_indicator$_handleScrollNotification$1(notification) {
      var t1, t2, t3, velocity, t4, clampedOverscroll, _this = this;
      if (!_this._widget.notificationPredicate$1(notification))
        return false;
      t1 = notification.metrics;
      if (A.axisDirectionToAxis(t1.axisDirection) !== A.axisDirectionToAxis(_this._widget.axisDirection))
        return false;
      if (notification instanceof A.OverscrollNotification) {
        _this._lastOverscrollNotification = notification;
        J.get$runtimeType$(_this._lastNotification);
        t2 = notification.overscroll;
        t3 = _this._element;
        t3.dispatchNotification$1(new A.OverscrollIndicatorNotification(t2 < 0, 0));
        _this._accepted = true;
        t2 = _this._totalOverscroll += t2;
        t3 = notification.velocity;
        if (t3 !== 0) {
          t1 = _this.get$_stretchController();
          t2 = _this._totalOverscroll;
          velocity = A.clampDouble(Math.abs(t3), 1, 10000);
          t3 = t1._stretchSizeTween;
          t4 = t1.___StretchController__stretchSize_F;
          t4 === $ && A.throwUnnamedLateFieldNI();
          t3.begin = t4._evaluatable.transform$1(t4.parent.get$value());
          t3.end = Math.min(0.016 + 1.01 / velocity, 1);
          t3 = t1.___StretchController__stretchController_F;
          t3 === $ && A.throwUnnamedLateFieldNI();
          t3.duration = A.Duration$(0, 0, B.JSNumber_methods.round$0(velocity * 0.02), 0, 0);
          t3.forward$1$from(0);
          t1._overscroll_indicator$_state = B._StretchState_1;
          t1._stretchDirection = t2 > 0 ? B._StretchDirection_0 : B._StretchDirection_1;
        } else if (notification.dragDetails != null) {
          t1 = t1._scroll_metrics$_viewportDimension;
          t1.toString;
          clampedOverscroll = A.clampDouble(Math.abs(t2) / t1, 0, 1);
          _this.get$_stretchController().pull$2(clampedOverscroll, _this._totalOverscroll);
        }
      } else if (notification instanceof A.ScrollEndNotification || notification instanceof A.ScrollUpdateNotification) {
        _this._totalOverscroll = 0;
        t1 = _this.get$_stretchController();
        if (t1._overscroll_indicator$_state === B._StretchState_2)
          t1._recede$1(B.Duration_400000);
      }
      _this._lastNotification = notification;
      return false;
    },
    _getAlignmentForAxisDirection$1(stretchDirection) {
      switch (this._widget.axisDirection.index) {
        case 0:
          return stretchDirection === B._StretchDirection_0 ? B.AlignmentDirectional_0_m1 : B.AlignmentDirectional_0_1;
        case 1:
          return stretchDirection === B._StretchDirection_0 ? B.Alignment_1_0 : B.Alignment_m1_0;
        case 2:
          return stretchDirection === B._StretchDirection_0 ? B.AlignmentDirectional_0_1 : B.AlignmentDirectional_0_m1;
        case 3:
          return stretchDirection === B._StretchDirection_0 ? B.Alignment_m1_0 : B.Alignment_1_0;
      }
    },
    dispose$0() {
      var t1 = this.get$_stretchController(),
        t2 = t1.___StretchController__stretchController_F;
      t2 === $ && A.throwUnnamedLateFieldNI();
      t2.dispose$0();
      t1.super$ChangeNotifier$dispose();
      this.super$__StretchingOverscrollIndicatorState_State_TickerProviderStateMixin$dispose();
    },
    build$1(context) {
      var t1 = {},
        t2 = A.InheritedModel_inheritFrom(context, B._MediaQueryAspect_0, type$.MediaQuery).data;
      t1.mainAxisSize = null;
      return new A.NotificationListener(this.get$_overscroll_indicator$_handleScrollNotification(), A.AnimatedBuilder$(this.get$_stretchController(), new A._StretchingOverscrollIndicatorState_build_closure(t1, this, t2.size), null), null, type$.NotificationListener_ScrollNotification);
    }
  };
  A._StretchingOverscrollIndicatorState_build_closure.prototype = {
    call$2(context, child) {
      var x, y, alignment, viewportDimension, transform, _this = this,
        t1 = _this.$this,
        t2 = t1.get$_stretchController(),
        t3 = t2.___StretchController__stretchSize_F;
      t3 === $ && A.throwUnnamedLateFieldNI();
      t3 = t3._evaluatable.transform$1(t3.parent.get$value());
      x = 1;
      y = 1;
      switch (A.axisDirectionToAxis(t1._widget.axisDirection).index) {
        case 0:
          x = 1 + t3;
          _this._box_0.mainAxisSize = _this.size._dx;
          break;
        case 1:
          y = 1 + t3;
          _this._box_0.mainAxisSize = _this.size._dy;
          break;
      }
      alignment = t1._getAlignmentForAxisDirection$1(t2._stretchDirection);
      t2 = t1._lastOverscrollNotification;
      if (t2 == null)
        viewportDimension = null;
      else {
        t2 = t2.metrics._scroll_metrics$_viewportDimension;
        t2.toString;
        viewportDimension = t2;
      }
      if (viewportDimension == null)
        viewportDimension = _this._box_0.mainAxisSize;
      t2 = A.Matrix4_Matrix4$diagonal3Values(x, y, 1);
      t1 = t1._widget;
      transform = A.Transform$(alignment, t1.child, t2, true);
      return A.ClipRect$(transform, t3 !== 0 && viewportDimension !== _this._box_0.mainAxisSize ? t1.clipBehavior : B.Clip_0);
    },
    $signature: 236
  };
  A._StretchState.prototype = {
    _enumToString$0() {
      return "_StretchState." + this._name;
    }
  };
  A._StretchController.prototype = {
    pull$2(normalizedOverscroll, totalOverscroll) {
      var t1, t2, _this = this,
        newStretchDirection = totalOverscroll > 0 ? B._StretchDirection_0 : B._StretchDirection_1;
      if (_this._stretchDirection !== newStretchDirection && _this._overscroll_indicator$_state === B._StretchState_3)
        return;
      _this._stretchDirection = newStretchDirection;
      _this._pullDistance = normalizedOverscroll;
      t1 = _this._stretchSizeTween;
      t2 = _this.___StretchController__stretchSize_F;
      t2 === $ && A.throwUnnamedLateFieldNI();
      t1.begin = t2._evaluatable.transform$1(t2.parent.get$value());
      t2 = _this._pullDistance;
      t1.end = 0.016 * t2 + 0.016 * (1 - Math.exp(-t2 * 8.237217661997105));
      t2 = _this.___StretchController__stretchController_F;
      t2 === $ && A.throwUnnamedLateFieldNI();
      t2.duration = B.Duration_400000;
      if (_this._overscroll_indicator$_state !== B._StretchState_2) {
        t2.forward$1$from(0);
        _this._overscroll_indicator$_state = B._StretchState_2;
      } else {
        t1 = t2._ticker;
        if (!(t1 != null && t1._ticker$_future != null))
          _this.notifyListeners$0();
      }
    },
    _changePhase$1($status) {
      var _this = this;
      if ($status !== B.AnimationStatus_3)
        return;
      switch (_this._overscroll_indicator$_state.index) {
        case 1:
          _this._recede$1(B.Duration_400000);
          break;
        case 3:
          _this._overscroll_indicator$_state = B._StretchState_0;
          _this._pullDistance = 0;
          break;
        case 2:
        case 0:
          break;
      }
    },
    _recede$1(duration) {
      var t2, _this = this,
        t1 = _this._overscroll_indicator$_state;
      if (t1 === B._StretchState_3 || t1 === B._StretchState_0)
        return;
      t1 = _this._stretchSizeTween;
      t2 = _this.___StretchController__stretchSize_F;
      t2 === $ && A.throwUnnamedLateFieldNI();
      t1.begin = t2._evaluatable.transform$1(t2.parent.get$value());
      t1.end = 0;
      t1 = _this.___StretchController__stretchController_F;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.duration = duration;
      t1.forward$1$from(0);
      _this._overscroll_indicator$_state = B._StretchState_3;
    },
    toString$0(_) {
      return "_StretchController()";
    }
  };
  A.OverscrollIndicatorNotification.prototype = {
    debugFillDescription$1(description) {
      this.super$_OverscrollIndicatorNotification_Notification_ViewportNotificationMixin$debugFillDescription(description);
      description.push("side: " + (this.leading ? "leading edge" : "trailing edge"));
    }
  };
  A._OverscrollIndicatorNotification_Notification_ViewportNotificationMixin.prototype = {
    debugFillDescription$1(description) {
      var t1, t2;
      this.super$Notification$debugFillDescription(description);
      t1 = this.ViewportNotificationMixin__depth;
      t2 = t1 === 0 ? "local" : "remote";
      description.push("depth: " + t1 + " (" + t2 + ")");
    }
  };
  A.__GlowingOverscrollIndicatorState_State_TickerProviderStateMixin.prototype = {
    activate$0() {
      this.super$State$activate();
      this._updateTickerModeNotifier$0();
      this._updateTickers$0();
    },
    dispose$0() {
      var _this = this,
        t1 = _this.TickerProviderStateMixin__tickerModeNotifier;
      if (t1 != null)
        t1.removeListener$1(_this.get$_updateTickers());
      _this.TickerProviderStateMixin__tickerModeNotifier = null;
      _this.super$State$dispose();
    }
  };
  A.__StretchingOverscrollIndicatorState_State_TickerProviderStateMixin.prototype = {
    activate$0() {
      this.super$State$activate();
      this._updateTickerModeNotifier$0();
      this._updateTickers$0();
    },
    dispose$0() {
      var _this = this,
        t1 = _this.TickerProviderStateMixin__tickerModeNotifier;
      if (t1 != null)
        t1.removeListener$1(_this.get$_updateTickers());
      _this.TickerProviderStateMixin__tickerModeNotifier = null;
      _this.super$State$dispose();
    }
  };
  A._StorageEntryIdentifier.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(this))
        return false;
      return other instanceof A._StorageEntryIdentifier && A.listEquals(other.keys, this.keys);
    },
    get$hashCode(_) {
      return A.Object_hashAll(this.keys);
    },
    toString$0(_) {
      return "StorageEntryIdentifier(" + B.JSArray_methods.join$1(this.keys, ":") + ")";
    }
  };
  A.PageStorageBucket.prototype = {
    _allKeys$1(context) {
      var keys = A._setArrayType([], type$.JSArray_PageStorageKey_dynamic);
      if (A.PageStorageBucket__maybeAddKey(context, keys))
        context.visitAncestorElements$1(new A.PageStorageBucket__allKeys_closure(keys));
      return keys;
    },
    readState$1(context) {
      var t1;
      if (this._storage == null)
        return null;
      t1 = this._allKeys$1(context);
      return t1.length !== 0 ? this._storage.$index(0, new A._StorageEntryIdentifier(t1)) : null;
    }
  };
  A.PageStorageBucket__allKeys_closure.prototype = {
    call$1(element) {
      return A.PageStorageBucket__maybeAddKey(element, this.keys);
    },
    $signature: 20
  };
  A.PageStorage.prototype = {
    build$1(context) {
      return this.child;
    }
  };
  A.PageRoute.prototype = {};
  A.MenuSerializableShortcut.prototype = {};
  A.PlatformMenuDelegate.prototype = {};
  A.DefaultPlatformMenuDelegate.prototype = {
    _methodCallHandler$1($call) {
      return this._methodCallHandler$body$DefaultPlatformMenuDelegate($call);
    },
    _methodCallHandler$body$DefaultPlatformMenuDelegate($call) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, t2, id, t1;
      var $async$_methodCallHandler$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              id = A._asInt($call.$arguments);
              t1 = $async$self._idMap;
              if (!t1.containsKey$1(id)) {
                // goto return
                $async$goto = 1;
                break;
              }
              t1 = t1.$index(0, id);
              t1.toString;
              t2 = $call.method;
              if (t2 === "Menu.selectedCallback") {
                t1.get$onSelected().call$0();
                t1.get$onSelectedIntent();
                t2 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner.focusManager._primaryFocus._context;
                t2.toString;
                A.Actions_maybeInvoke(t2, t1.get$onSelectedIntent(), type$.Intent);
              } else if (t2 === "Menu.opened")
                t1.get$onOpen().call$0();
              else if (t2 === "Menu.closed")
                t1.get$onClose().call$0();
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$_methodCallHandler$1, $async$completer);
    }
  };
  A.PrimaryScrollController.prototype = {
    updateShouldNotify$1(oldWidget) {
      return this.controller !== oldWidget.controller;
    }
  };
  A.RestorationScope.prototype = {
    createState$0() {
      return new A._RestorationScopeState(null, A.LinkedHashMap_LinkedHashMap$_empty(type$.RestorableProperty_nullable_Object, type$.void_Function), null, true, null);
    }
  };
  A._RestorationScopeState.prototype = {
    get$restorationId() {
      return this._widget.restorationId;
    },
    restoreState$2(oldBucket, initialRestore) {
    },
    build$1(context) {
      return A.UnmanagedRestorationScope$(this.RestorationMixin__bucket, this._widget.child);
    }
  };
  A.UnmanagedRestorationScope.prototype = {
    updateShouldNotify$1(oldWidget) {
      return oldWidget.bucket != this.bucket;
    }
  };
  A.RootRestorationScope.prototype = {
    createState$0() {
      return new A._RootRestorationScopeState();
    }
  };
  A._RootRestorationScopeState.prototype = {
    didChangeDependencies$0() {
      var t1, _this = this;
      _this.super$State$didChangeDependencies();
      t1 = _this._element;
      t1.toString;
      _this._ancestorBucket = A.RestorationScope_maybeOf(t1);
      _this._loadRootBucketIfNecessary$0();
      if (_this._okToRenderBlankContainer == null) {
        _this._widget.toString;
        _this._okToRenderBlankContainer = false;
      }
    },
    didUpdateWidget$1(oldWidget) {
      this.super$State$didUpdateWidget(oldWidget);
      this._loadRootBucketIfNecessary$0();
    },
    get$_isWaitingForRootBucket() {
      this._widget.toString;
      return false;
    },
    _loadRootBucketIfNecessary$0() {
      var t1, _this = this;
      if (_this.get$_isWaitingForRootBucket() && !_this._isLoadingRootBucket) {
        _this._isLoadingRootBucket = true;
        ++$.RendererBinding__instance.RendererBinding__firstFrameDeferredCount;
        t1 = $.ServicesBinding__instance.ServicesBinding___ServicesBinding__restorationManager_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
        t1.get$rootBucket().then$1$1(new A._RootRestorationScopeState__loadRootBucketIfNecessary_closure(_this), type$.Null);
      }
    },
    _replaceRootBucket$0() {
      var t1, _this = this;
      _this._rootBucketValid = false;
      _this._restoration0$_rootBucket = null;
      t1 = $.ServicesBinding__instance.ServicesBinding___ServicesBinding__restorationManager_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.removeListener$1(_this.get$_replaceRootBucket());
      _this._loadRootBucketIfNecessary$0();
    },
    dispose$0() {
      if (this._rootBucketValid) {
        var t1 = $.ServicesBinding__instance.ServicesBinding___ServicesBinding__restorationManager_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
        t1.removeListener$1(this.get$_replaceRootBucket());
      }
      this.super$State$dispose();
    },
    build$1(context) {
      var t2, t3, _this = this,
        t1 = _this._okToRenderBlankContainer;
      t1.toString;
      if (t1 && _this.get$_isWaitingForRootBucket())
        return B.SizedBox_0_0_null_null;
      t1 = _this._ancestorBucket;
      if (t1 == null)
        t1 = _this._restoration0$_rootBucket;
      t2 = _this._widget;
      t3 = t2.restorationId;
      return A.UnmanagedRestorationScope$(t1, new A.RestorationScope(t2.child, t3, null));
    }
  };
  A._RootRestorationScopeState__loadRootBucketIfNecessary_closure.prototype = {
    call$1(bucket) {
      var t2,
        t1 = this.$this;
      t1._isLoadingRootBucket = false;
      if (t1._element != null) {
        t2 = $.ServicesBinding__instance.ServicesBinding___ServicesBinding__restorationManager_A;
        t2 === $ && A.throwUnnamedLateFieldNI();
        t2.addListener$1(t1.get$_replaceRootBucket());
        t1.setState$1(new A._RootRestorationScopeState__loadRootBucketIfNecessary__closure(t1, bucket));
      }
      $.RendererBinding__instance.allowFirstFrame$0();
    },
    $signature: 237
  };
  A._RootRestorationScopeState__loadRootBucketIfNecessary__closure.prototype = {
    call$0() {
      var t1 = this.$this;
      t1._restoration0$_rootBucket = this.bucket;
      t1._rootBucketValid = true;
      t1._okToRenderBlankContainer = false;
    },
    $signature: 0
  };
  A.RestorableProperty.prototype = {
    get$enabled() {
      return true;
    },
    dispose$0() {
      var _this = this,
        t1 = _this._restoration0$_owner;
      if (t1 != null) {
        t1 = t1.RestorationMixin__properties.remove$1(0, _this);
        t1.toString;
        _this.removeListener$1(t1);
        _this._restoration0$_owner = _this._restoration0$_restorationId = null;
      }
      _this.super$ChangeNotifier$dispose();
      _this._disposed = true;
    }
  };
  A.RestorationMixin.prototype = {
    didToggleBucket$1(oldBucket) {
    },
    registerForRestoration$2(property, restorationId) {
      var hasSerializedValue, initialValue, _this = this,
        t1 = _this.RestorationMixin__bucket;
      t1 = t1 == null ? null : t1.get$_rawValues().containsKey$1(restorationId);
      hasSerializedValue = t1 === true;
      initialValue = hasSerializedValue ? property.fromPrimitives$1(_this.RestorationMixin__bucket.get$_rawValues().$index(0, restorationId)) : property.createDefaultValue$0();
      if (property._restoration0$_restorationId == null) {
        property._restoration0$_restorationId = restorationId;
        property._restoration0$_owner = _this;
        t1 = new A.RestorationMixin_registerForRestoration_listener(_this, property);
        property.addListener$1(t1);
        _this.RestorationMixin__properties.$indexSet(0, property, t1);
      }
      property.initWithValue$1(initialValue);
      if (!hasSerializedValue && property.get$enabled() && _this.RestorationMixin__bucket != null)
        _this._updateProperty$1(property);
    },
    didUpdateRestorationId$0() {
      var t1, oldBucket, _this = this;
      if (_this.RestorationMixin__currentParent != null) {
        t1 = _this.RestorationMixin__bucket;
        t1 = t1 == null ? null : t1._restorationId;
        t1 = t1 == _this.get$restorationId() || _this.get$restorePending();
      } else
        t1 = true;
      if (t1)
        return;
      oldBucket = _this.RestorationMixin__bucket;
      if (_this._updateBucketIfNecessary$2$parent$restorePending(_this.RestorationMixin__currentParent, false))
        if (oldBucket != null)
          oldBucket.dispose$0();
    },
    get$restorePending() {
      var t1, potentialNewParent, _this = this;
      if (_this.RestorationMixin__firstRestorePending)
        return true;
      if (_this.get$restorationId() == null)
        return false;
      t1 = _this._element;
      t1.toString;
      potentialNewParent = A.RestorationScope_maybeOf(t1);
      if (potentialNewParent != _this.RestorationMixin__currentParent) {
        if (potentialNewParent == null)
          t1 = null;
        else {
          t1 = potentialNewParent._manager;
          t1 = t1 == null ? null : t1._isReplacing;
          t1 = t1 === true;
        }
        t1 = t1 === true;
      } else
        t1 = false;
      return t1;
    },
    _updateBucketIfNecessary$2$parent$restorePending($parent, restorePending) {
      var t1, t2, _this = this;
      if (_this.get$restorationId() == null || $parent == null)
        return _this._setNewBucketIfNecessary$2$newBucket$restorePending(null, restorePending);
      if (restorePending || _this.RestorationMixin__bucket == null) {
        t1 = _this.get$restorationId();
        t1.toString;
        return _this._setNewBucketIfNecessary$2$newBucket$restorePending($parent.claimChild$2$debugOwner(t1, _this), restorePending);
      }
      t1 = _this.RestorationMixin__bucket;
      t1.toString;
      t2 = _this.get$restorationId();
      t2.toString;
      t1.rename$1(t2);
      t2 = _this.RestorationMixin__bucket;
      t2.toString;
      $parent.adoptChild$1(t2);
      return false;
    },
    _setNewBucketIfNecessary$2$newBucket$restorePending(newBucket, restorePending) {
      var t2, _this = this,
        t1 = _this.RestorationMixin__bucket;
      if (newBucket == t1)
        return false;
      _this.RestorationMixin__bucket = newBucket;
      if (!restorePending) {
        if (newBucket != null) {
          t2 = _this.RestorationMixin__properties;
          new A.LinkedHashMapKeysIterable(t2, A._instanceType(t2)._eval$1("LinkedHashMapKeysIterable<1>")).forEach$1(0, _this.get$_updateProperty());
        }
        _this.didToggleBucket$1(t1);
      }
      return true;
    },
    _updateProperty$1(property) {
      var t3, needsUpdate,
        t1 = property.get$enabled(),
        t2 = this.RestorationMixin__bucket;
      if (t1) {
        if (t2 != null) {
          t1 = property._restoration0$_restorationId;
          t1.toString;
          t3 = property.toPrimitives$0();
          if (!J.$eq$(t2.get$_rawValues().$index(0, t1), t3) || !t2.get$_rawValues().containsKey$1(t1)) {
            t2.get$_rawValues().$indexSet(0, t1, t3);
            t2._markNeedsSerialization$0();
          }
        }
      } else if (t2 != null) {
        t1 = property._restoration0$_restorationId;
        t1.toString;
        needsUpdate = t2.get$_rawValues().containsKey$1(t1);
        t2.get$_rawValues().remove$1(0, t1);
        t1 = t2.get$_rawValues();
        if (t1.get$isEmpty(t1))
          t2._rawData.remove$1(0, "v");
        if (needsUpdate)
          t2._markNeedsSerialization$0();
      }
    }
  };
  A.RestorationMixin_registerForRestoration_listener.prototype = {
    call$0() {
      var t1 = this.$this;
      if (t1.RestorationMixin__bucket == null)
        return;
      t1._updateProperty$1(this.property);
    },
    $signature: 0
  };
  A.__RestorationScopeState_State_RestorationMixin_dispose_closure.prototype = {
    call$2(property, listener) {
      if (!property._disposed)
        property.removeListener$1(listener);
    },
    $signature: 23
  };
  A.__RestorationScopeState_State_RestorationMixin.prototype = {
    didUpdateWidget$1(oldWidget) {
      this.super$State$didUpdateWidget(oldWidget);
      this.didUpdateRestorationId$0();
    },
    didChangeDependencies$0() {
      var oldBucket, needsRestore, t1, didReplaceBucket, _this = this;
      _this.super$State$didChangeDependencies();
      oldBucket = _this.RestorationMixin__bucket;
      needsRestore = _this.get$restorePending();
      t1 = _this._element;
      t1.toString;
      t1 = A.RestorationScope_maybeOf(t1);
      _this.RestorationMixin__currentParent = t1;
      didReplaceBucket = _this._updateBucketIfNecessary$2$parent$restorePending(t1, needsRestore);
      if (needsRestore) {
        _this.restoreState$2(oldBucket, _this.RestorationMixin__firstRestorePending);
        _this.RestorationMixin__firstRestorePending = false;
      }
      if (didReplaceBucket)
        if (oldBucket != null)
          oldBucket.dispose$0();
    },
    dispose$0() {
      var t1, _this = this;
      _this.RestorationMixin__properties.forEach$1(0, new A.__RestorationScopeState_State_RestorationMixin_dispose_closure());
      t1 = _this.RestorationMixin__bucket;
      if (t1 != null)
        t1.dispose$0();
      _this.RestorationMixin__bucket = null;
      _this.super$State$dispose();
    }
  };
  A.RestorableValue.prototype = {
    set$value(newValue) {
      var t1 = this._restoration_properties$_value;
      if (newValue == null ? t1 != null : newValue !== t1) {
        this._restoration_properties$_value = newValue;
        this.didUpdateValue$1(t1);
      }
    },
    initWithValue$1(value) {
      this._restoration_properties$_value = value;
    }
  };
  A._RestorablePrimitiveValueN.prototype = {
    createDefaultValue$0() {
      return this._defaultValue;
    },
    didUpdateValue$1(oldValue) {
      this.notifyListeners$0();
    },
    fromPrimitives$1(serialized) {
      return A._instanceType(this)._eval$1("_RestorablePrimitiveValueN.T")._as(serialized);
    },
    toPrimitives$0() {
      var t1 = this._restoration_properties$_value;
      return t1 == null ? A._instanceType(this)._eval$1("RestorableValue.T")._as(t1) : t1;
    }
  };
  A._RestorablePrimitiveValue.prototype = {
    fromPrimitives$1(serialized) {
      return this.super$_RestorablePrimitiveValueN$fromPrimitives(serialized);
    },
    toPrimitives$0() {
      var t1 = this.super$_RestorablePrimitiveValueN$toPrimitives();
      t1.toString;
      return t1;
    }
  };
  A.RestorableNum.prototype = {};
  A.RestorableBool.prototype = {};
  A.__RouterState_State_RestorationMixin_dispose_closure.prototype = {
    call$2(property, listener) {
      if (!property._disposed)
        property.removeListener$1(listener);
    },
    $signature: 23
  };
  A.RouteInformation.prototype = {};
  A.Router.prototype = {
    createState$0() {
      return new A._RouterState(new A._RestorableRouteInformation($.$get$ChangeNotifier__emptyListeners()), null, A.LinkedHashMap_LinkedHashMap$_empty(type$.RestorableProperty_nullable_Object, type$.void_Function), null, true, null, this.$ti._eval$1("_RouterState<1>"));
    }
  };
  A.RouteInformationReportingType.prototype = {
    _enumToString$0() {
      return "RouteInformationReportingType." + this._name;
    }
  };
  A._RouterState.prototype = {
    get$restorationId() {
      return this._widget.restorationScopeId;
    },
    initState$0() {
      var t1, _this = this;
      _this.super$State$initState();
      t1 = _this._widget.routeInformationProvider;
      if (t1 != null)
        t1.addListener$1(_this.get$_handleRouteInformationProviderNotification());
      _this._widget.backButtonDispatcher.addCallback$1(_this.get$_handleBackButtonDispatcherNotification());
      _this._widget.routerDelegate.addListener$1(_this.get$_handleRouterDelegateNotification());
    },
    restoreState$2(oldBucket, initialRestore) {
      var t2, t3, _this = this,
        t1 = _this._routeInformation;
      _this.registerForRestoration$2(t1, "route");
      t2 = t1._restoration_properties$_value;
      t3 = t2 == null;
      if ((t3 ? A._instanceType(t1)._eval$1("RestorableValue.T")._as(t2) : t2) != null) {
        t1 = t3 ? A._instanceType(t1)._eval$1("RestorableValue.T")._as(t2) : t2;
        t1.toString;
        _this._processRouteInformation$2(t1, new A._RouterState_restoreState_closure(_this));
      } else {
        t1 = _this._widget.routeInformationProvider;
        if (t1 != null)
          _this._processRouteInformation$2(t1._router$_value, new A._RouterState_restoreState_closure0(_this));
      }
    },
    _scheduleRouteInformationReportingTask$0() {
      var _this = this;
      if (_this._routeInformationReportingTaskScheduled || _this._widget.routeInformationProvider == null)
        return;
      _this._routeInformationReportingTaskScheduled = true;
      $.SchedulerBinding__instance.SchedulerBinding__postFrameCallbacks.push(_this.get$_reportRouteInformation());
    },
    _reportRouteInformation$1(timestamp) {
      var t1, t2, t3, replace, _this = this;
      _this._routeInformationReportingTaskScheduled = false;
      t1 = _this._routeInformation;
      t2 = t1._restoration_properties$_value;
      t3 = t2 == null;
      if ((t3 ? A._instanceType(t1)._eval$1("RestorableValue.T")._as(t2) : t2) != null) {
        t1 = t3 ? A._instanceType(t1)._eval$1("RestorableValue.T")._as(t2) : t2;
        t1.toString;
        t2 = _this._widget.routeInformationProvider;
        t2.toString;
        t3 = _this._currentIntentionToReport;
        t3.toString;
        if (t3 !== B.RouteInformationReportingType_1)
          replace = t3 === B.RouteInformationReportingType_0 && t2._valueInEngine.location == t1.location;
        else
          replace = true;
        B.OptionalMethodChannel_sjf.invokeMethod$1$1("selectMultiEntryHistory", type$.void);
        t3 = t1.location;
        t3.toString;
        A.SystemNavigator_routeInformationUpdated(t3, replace, t1.state);
        t2._valueInEngine = t2._router$_value = t1;
      }
      _this._currentIntentionToReport = B.RouteInformationReportingType_0;
    },
    _retrieveNewRouteInformation$0() {
      this._widget.routerDelegate.get$currentConfiguration();
      this._widget.toString;
      return null;
    },
    _maybeNeedToReportRouteInformation$0() {
      var _this = this;
      _this._routeInformation.set$value(_this._retrieveNewRouteInformation$0());
      if (_this._currentIntentionToReport == null)
        _this._currentIntentionToReport = B.RouteInformationReportingType_0;
      _this._scheduleRouteInformationReportingTask$0();
    },
    didChangeDependencies$0() {
      var t1, _this = this;
      _this.___RouterState__routeParsePending_A = true;
      _this.super$__RouterState_State_RestorationMixin$didChangeDependencies();
      t1 = _this._widget.routeInformationProvider;
      if (t1 != null && _this.___RouterState__routeParsePending_A)
        _this._processRouteInformation$2(t1._router$_value, new A._RouterState_didChangeDependencies_closure(_this));
      _this.___RouterState__routeParsePending_A = false;
      _this._maybeNeedToReportRouteInformation$0();
    },
    didUpdateWidget$1(oldWidget) {
      var t1, t2, t3, _this = this;
      _this.super$__RouterState_State_RestorationMixin$didUpdateWidget(oldWidget);
      t1 = _this._widget.routeInformationProvider;
      t2 = oldWidget.routeInformationProvider;
      _this._currentRouterTransaction = new A.Object();
      if (t1 != t2) {
        t1 = t2 == null;
        if (!t1)
          t2.removeListener$1(_this.get$_handleRouteInformationProviderNotification());
        t3 = _this._widget.routeInformationProvider;
        if (t3 != null)
          t3.addListener$1(_this.get$_handleRouteInformationProviderNotification());
        t1 = t1 ? null : t2._router$_value;
        t2 = _this._widget.routeInformationProvider;
        if (t1 != (t2 == null ? null : t2._router$_value))
          _this._handleRouteInformationProviderNotification$0();
      }
      t1 = oldWidget.backButtonDispatcher;
      if (_this._widget.backButtonDispatcher !== t1) {
        t2 = _this.get$_handleBackButtonDispatcherNotification();
        t1.removeCallback$1(t2);
        _this._widget.backButtonDispatcher.addCallback$1(t2);
      }
      _this._widget.toString;
      t1 = _this.get$_handleRouterDelegateNotification();
      oldWidget.routerDelegate.removeListener$1(t1);
      _this._widget.routerDelegate.addListener$1(t1);
      _this._maybeNeedToReportRouteInformation$0();
    },
    dispose$0() {
      var _this = this,
        t1 = _this._widget.routeInformationProvider;
      if (t1 != null)
        t1.removeListener$1(_this.get$_handleRouteInformationProviderNotification());
      _this._widget.backButtonDispatcher.removeCallback$1(_this.get$_handleBackButtonDispatcherNotification());
      _this._widget.routerDelegate.removeListener$1(_this.get$_handleRouterDelegateNotification());
      _this._currentRouterTransaction = null;
      _this.super$__RouterState_State_RestorationMixin$dispose();
    },
    _processRouteInformation$2(information, delegateRouteSetter) {
      var t1, t2, _this = this;
      _this.___RouterState__routeParsePending_A = false;
      _this._currentRouterTransaction = new A.Object();
      t1 = _this._widget.routeInformationParser;
      t1.toString;
      t2 = _this._element;
      t2.toString;
      t1.parseRouteInformationWithDependencies$2(information, t2).then$1$1(_this._processParsedRouteInformation$2(_this._currentRouterTransaction, delegateRouteSetter), type$.void);
    },
    _processParsedRouteInformation$2(transaction, delegateRouteSetter) {
      return new A._RouterState__processParsedRouteInformation_closure(this, transaction, delegateRouteSetter);
    },
    _handleRouteInformationProviderNotification$0() {
      var _this = this;
      _this.___RouterState__routeParsePending_A = true;
      _this._processRouteInformation$2(_this._widget.routeInformationProvider._router$_value, new A._RouterState__handleRouteInformationProviderNotification_closure(_this));
    },
    _handleBackButtonDispatcherNotification$0() {
      var _this = this;
      _this._currentRouterTransaction = new A.Object();
      return _this._widget.routerDelegate.popRoute$0().then$1$1(_this._handleRoutePopped$1(_this._currentRouterTransaction), type$.bool);
    },
    _handleRoutePopped$1(transaction) {
      return new A._RouterState__handleRoutePopped_closure(this, transaction);
    },
    _router$_rebuild$0() {
      this.setState$1(new A._RouterState__rebuild_closure());
      this._maybeNeedToReportRouteInformation$0();
      return new A.SynchronousFuture(null, type$.SynchronousFuture_void);
    },
    _handleRouterDelegateNotification$0() {
      this.setState$1(new A._RouterState__handleRouterDelegateNotification_closure());
      this._maybeNeedToReportRouteInformation$0();
    },
    build$1(context) {
      var t1 = this.RestorationMixin__bucket,
        t2 = this._widget,
        t3 = t2.routeInformationProvider,
        t4 = t2.backButtonDispatcher,
        t5 = t2.routeInformationParser;
      t2 = t2.routerDelegate;
      return A.UnmanagedRestorationScope$(t1, new A._RouterScope(t3, t4, t5, t2, this, new A.Builder(t2.get$build(), null), null));
    }
  };
  A._RouterState_restoreState_closure.prototype = {
    call$0() {
      return this.$this._widget.routerDelegate.get$setRestoredRoutePath();
    },
    $signature() {
      return this.$this.$ti._eval$1("Future<~>(1)()");
    }
  };
  A._RouterState_restoreState_closure0.prototype = {
    call$0() {
      return this.$this._widget.routerDelegate.get$setInitialRoutePath();
    },
    $signature() {
      return this.$this.$ti._eval$1("Future<~>(1)()");
    }
  };
  A._RouterState_didChangeDependencies_closure.prototype = {
    call$0() {
      return this.$this._widget.routerDelegate.get$setNewRoutePath();
    },
    $signature() {
      return this.$this.$ti._eval$1("Future<~>(1)()");
    }
  };
  A._RouterState__processParsedRouteInformation_closure.prototype = {
    call$1(data) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, t1, t2;
      var $async$call$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              t2 = $async$self.transaction;
              if (t1._currentRouterTransaction != t2) {
                // goto return
                $async$goto = 1;
                break;
              }
              $async$goto = 3;
              return A._asyncAwait($async$self.delegateRouteSetter.call$0().call$1(data), $async$call$1);
            case 3:
              // returning from await.
              if (t1._currentRouterTransaction == t2)
                t1._router$_rebuild$0();
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$1, $async$completer);
    },
    $signature() {
      return this.$this.$ti._eval$1("Future<~>(1)");
    }
  };
  A._RouterState__handleRouteInformationProviderNotification_closure.prototype = {
    call$0() {
      return this.$this._widget.routerDelegate.get$setNewRoutePath();
    },
    $signature() {
      return this.$this.$ti._eval$1("Future<~>(1)()");
    }
  };
  A._RouterState__handleRoutePopped_closure.prototype = {
    call$1(data) {
      var t1 = this.$this;
      if (this.transaction != t1._currentRouterTransaction)
        return new A.SynchronousFuture(true, type$.SynchronousFuture_bool);
      t1._router$_rebuild$0();
      return new A.SynchronousFuture(data, type$.SynchronousFuture_bool);
    },
    $signature: 240
  };
  A._RouterState__rebuild_closure.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A._RouterState__handleRouterDelegateNotification_closure.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A._RouterScope.prototype = {
    updateShouldNotify$1(oldWidget) {
      return true;
    }
  };
  A._RestorableRouteInformation.prototype = {
    createDefaultValue$0() {
      return null;
    },
    didUpdateValue$1(oldValue) {
      this.notifyListeners$0();
    },
    fromPrimitives$1(data) {
      var t1;
      if (data == null)
        return null;
      type$.List_nullable_Object._as(data);
      t1 = J.getInterceptor$ax(data);
      return new A.RouteInformation(A._asStringQ(t1.get$first(data)), t1.get$last(data));
    },
    toPrimitives$0() {
      var t3, _this = this,
        t1 = _this._restoration_properties$_value,
        t2 = t1 == null;
      if ((t2 ? A._instanceType(_this)._eval$1("RestorableValue.T")._as(t1) : t1) == null)
        t1 = null;
      else {
        t3 = (t2 ? A._instanceType(_this)._eval$1("RestorableValue.T")._as(t1) : t1).location;
        t1 = [t3, (t2 ? A._instanceType(_this)._eval$1("RestorableValue.T")._as(t1) : t1).state];
      }
      return t1;
    }
  };
  A.__RouterState_State_RestorationMixin.prototype = {
    didUpdateWidget$1(oldWidget) {
      this.super$State$didUpdateWidget(oldWidget);
      this.didUpdateRestorationId$0();
    },
    didChangeDependencies$0() {
      var oldBucket, needsRestore, t1, didReplaceBucket, _this = this;
      _this.super$State$didChangeDependencies();
      oldBucket = _this.RestorationMixin__bucket;
      needsRestore = _this.get$restorePending();
      t1 = _this._element;
      t1.toString;
      t1 = A.RestorationScope_maybeOf(t1);
      _this.RestorationMixin__currentParent = t1;
      didReplaceBucket = _this._updateBucketIfNecessary$2$parent$restorePending(t1, needsRestore);
      if (needsRestore) {
        _this.restoreState$2(oldBucket, _this.RestorationMixin__firstRestorePending);
        _this.RestorationMixin__firstRestorePending = false;
      }
      if (didReplaceBucket)
        if (oldBucket != null)
          oldBucket.dispose$0();
    },
    dispose$0() {
      var t1, _this = this;
      _this.RestorationMixin__properties.forEach$1(0, new A.__RouterState_State_RestorationMixin_dispose_closure());
      t1 = _this.RestorationMixin__bucket;
      if (t1 != null)
        t1.dispose$0();
      _this.RestorationMixin__bucket = null;
      _this.super$State$dispose();
    }
  };
  A.OverlayRoute.prototype = {
    get$overlayEntries() {
      return this._overlayEntries;
    },
    install$0() {
      var t2, _this = this,
        t1 = A.OverlayEntry$(_this.get$_buildModalBarrier(), false);
      _this.__ModalRoute__modalBarrier_A = t1;
      t2 = A.OverlayEntry$(_this.get$_buildModalScope(), true);
      _this.__ModalRoute__modalScope_A = t2;
      B.JSArray_methods.addAll$1(_this._overlayEntries, A._setArrayType([t1, t2], type$.JSArray_OverlayEntry));
      _this.super$Route$install();
    },
    didPop$1(result) {
      var t1, _this = this;
      _this.super$Route$didPop(result);
      t1 = _this._routes$_controller.__AnimationController__status_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      if (t1 === B.AnimationStatus_0 && !_this._popFinalized)
        _this._navigator.finalizeRoute$1(_this);
      return true;
    },
    dispose$0() {
      B.JSArray_methods.clear$0(this._overlayEntries);
      this.super$Route$dispose();
    }
  };
  A.TransitionRoute.prototype = {
    get$animation() {
      return this._routes$_animation;
    },
    get$secondaryAnimation() {
      return this._secondaryAnimation;
    },
    _handleStatusChanged$1($status) {
      var t1, _this = this;
      switch ($status.index) {
        case 3:
          t1 = _this._overlayEntries;
          if (t1.length !== 0)
            B.JSArray_methods.get$first(t1).set$opaque(true);
          t1 = _this._performanceModeRequestHandle;
          if (t1 != null) {
            t1._cleanup.call$0();
            t1._cleanup = null;
          }
          _this._performanceModeRequestHandle = null;
          break;
        case 1:
        case 2:
          t1 = _this._overlayEntries;
          if (t1.length !== 0)
            B.JSArray_methods.get$first(t1).set$opaque(false);
          if (_this._performanceModeRequestHandle == null)
            _this._performanceModeRequestHandle = $.SchedulerBinding__instance.requestPerformanceMode$1(B.DartPerformanceMode_1);
          break;
        case 0:
          if (!_this.get$isActive()) {
            _this._navigator.finalizeRoute$1(_this);
            _this._popFinalized = true;
            t1 = _this._performanceModeRequestHandle;
            if (t1 != null) {
              t1._cleanup.call$0();
              t1._cleanup = null;
            }
            _this._performanceModeRequestHandle = null;
          }
          break;
      }
    },
    install$0() {
      var _this = this,
        t1 = A.TransitionRoute.prototype.get$debugLabel.call(_this),
        t2 = _this._settings,
        t3 = _this._navigator;
      t3.toString;
      t3 = _this._routes$_controller = A.AnimationController$(t1 + "(" + A.S(t2.name) + ")", B.Duration_300000, B.Duration_300000, null, t3);
      t3.didRegisterListener$0();
      t2 = t3.AnimationLocalStatusListenersMixin__statusListeners;
      t2._isDirty = true;
      t2._observer_list$_list.push(_this.get$_handleStatusChanged());
      _this._routes$_animation = t3;
      _this.super$OverlayRoute$install();
      if (_this._routes$_animation.get$status() === B.AnimationStatus_3 && _this._overlayEntries.length !== 0)
        B.JSArray_methods.get$first(_this._overlayEntries).set$opaque(true);
    },
    didPush$0() {
      this.super$Route$didPush();
      return this._routes$_controller.forward$0();
    },
    didAdd$0() {
      this.super$Route$didAdd();
      var t1 = this._routes$_controller;
      t1.set$value(t1.upperBound);
    },
    didReplace$1(oldRoute) {
      var t1, t2;
      if (oldRoute instanceof A.MaterialPageRoute) {
        t1 = this._routes$_controller;
        t1.toString;
        t2 = oldRoute._routes$_controller.__AnimationController__value_A;
        t2 === $ && A.throwUnnamedLateFieldNI();
        t1.set$value(t2);
      }
      this.super$Route$didReplace(oldRoute);
    },
    didPop$1(result) {
      this._result = result;
      this._routes$_controller.reverse$0();
      this.super$OverlayRoute$didPop(result);
      return true;
    },
    didPopNext$1(nextRoute) {
      this._updateSecondaryAnimation$1(nextRoute);
      this.super$Route$didPopNext(nextRoute);
    },
    didChangeNext$1(nextRoute) {
      this._updateSecondaryAnimation$1(nextRoute);
      this.super$Route$didChangeNext(nextRoute);
    },
    _updateSecondaryAnimation$1(nextRoute) {
      var current, t1, t2, t3, t4, t5, t6, newAnimation, _this = this,
        previousTrainHoppingListenerRemover = _this._trainHoppingListenerRemover;
      _this._trainHoppingListenerRemover = null;
      if (nextRoute instanceof A.MaterialPageRoute) {
        current = _this._secondaryAnimation._animations$_parent;
        if (current != null) {
          t1 = current instanceof A.TrainHoppingAnimation ? current._currentTrain : current;
          t1.toString;
          t2 = nextRoute._routes$_animation;
          t2.toString;
          t3 = t1.get$value();
          t4 = t2.__AnimationController__value_A;
          t4 === $ && A.throwUnnamedLateFieldNI();
          if (t3 !== t4) {
            t3 = t2.__AnimationController__status_A;
            t3 === $ && A.throwUnnamedLateFieldNI();
            t3 = t3 === B.AnimationStatus_3 || t3 === B.AnimationStatus_0;
          } else
            t3 = true;
          t4 = nextRoute._transitionCompleter.future;
          if (t3)
            _this._setSecondaryAnimation$2(t2, t4);
          else {
            t3 = {};
            t3.newAnimation = null;
            t5 = new A.TransitionRoute__updateSecondaryAnimation_jumpOnAnimationEnd(_this, t2, nextRoute);
            _this._trainHoppingListenerRemover = new A.TransitionRoute__updateSecondaryAnimation_closure(t3, t2, t5);
            t2.didRegisterListener$0();
            t6 = t2.AnimationLocalStatusListenersMixin__statusListeners;
            t6._isDirty = true;
            t6._observer_list$_list.push(t5);
            newAnimation = A.TrainHoppingAnimation$(t1, t2, new A.TransitionRoute__updateSecondaryAnimation_closure0(t3, _this, nextRoute));
            t3.newAnimation = newAnimation;
            _this._setSecondaryAnimation$2(newAnimation, t4);
          }
        } else
          _this._setSecondaryAnimation$2(nextRoute._routes$_animation, nextRoute._transitionCompleter.future);
      } else
        _this._setSecondaryAnimation$1(B.C__AlwaysDismissedAnimation);
      if (previousTrainHoppingListenerRemover != null)
        previousTrainHoppingListenerRemover.call$0();
    },
    _setSecondaryAnimation$2(animation, disposed) {
      this._secondaryAnimation.set$parent(animation);
      if (disposed != null)
        disposed.then$1$1(new A.TransitionRoute__setSecondaryAnimation_closure(this, animation), type$.Null);
    },
    _setSecondaryAnimation$1(animation) {
      return this._setSecondaryAnimation$2(animation, null);
    },
    dispose$0() {
      var _this = this,
        t1 = _this._routes$_animation;
      if (t1 != null)
        t1.removeStatusListener$1(_this.get$_handleStatusChanged());
      t1 = _this._performanceModeRequestHandle;
      if (t1 != null) {
        t1._cleanup.call$0();
        t1._cleanup = null;
      }
      _this._performanceModeRequestHandle = null;
      t1 = _this._routes$_controller;
      if (t1 != null)
        t1.dispose$0();
      _this._transitionCompleter.complete$1(_this._result);
      _this.super$OverlayRoute$dispose();
    },
    get$debugLabel() {
      return "TransitionRoute";
    },
    toString$0(_) {
      return "TransitionRoute(animation: " + A.S(this._routes$_controller) + ")";
    }
  };
  A.TransitionRoute__updateSecondaryAnimation_jumpOnAnimationEnd.prototype = {
    call$1($status) {
      var t1, t2;
      switch ($status.index) {
        case 3:
        case 0:
          t1 = this.$this;
          t1._setSecondaryAnimation$2(this.nextTrain, this.nextRoute._transitionCompleter.future);
          t2 = t1._trainHoppingListenerRemover;
          if (t2 != null) {
            t2.call$0();
            t1._trainHoppingListenerRemover = null;
          }
          break;
        case 1:
        case 2:
          break;
      }
    },
    $signature: 2
  };
  A.TransitionRoute__updateSecondaryAnimation_closure.prototype = {
    call$0() {
      this.nextTrain.removeStatusListener$1(this.jumpOnAnimationEnd);
      var t1 = this._box_0.newAnimation;
      if (t1 != null)
        t1.dispose$0();
    },
    $signature: 0
  };
  A.TransitionRoute__updateSecondaryAnimation_closure0.prototype = {
    call$0() {
      var t2,
        t1 = this.$this;
      t1._setSecondaryAnimation$2(this._box_0.newAnimation._currentTrain, this.nextRoute._transitionCompleter.future);
      t2 = t1._trainHoppingListenerRemover;
      if (t2 != null) {
        t2.call$0();
        t1._trainHoppingListenerRemover = null;
      }
    },
    $signature: 0
  };
  A.TransitionRoute__setSecondaryAnimation_closure.prototype = {
    call$1(_) {
      var t1 = this.$this._secondaryAnimation,
        t2 = this.animation;
      if (t1._animations$_parent == t2) {
        t1.set$parent(B.C__AlwaysDismissedAnimation);
        if (t2 instanceof A.TrainHoppingAnimation)
          t2.dispose$0();
      }
    },
    $signature: 28
  };
  A.LocalHistoryRoute.prototype = {
    get$willHandlePopInternally() {
      var t1 = this.LocalHistoryRoute__localHistory;
      return t1 != null && t1.length !== 0;
    }
  };
  A._DismissModalAction.prototype = {
    isEnabled$1(intent) {
      A.ModalRoute_of(this.context, type$.dynamic).toString;
      return false;
    },
    invoke$1(intent) {
      return A.Navigator_of(this.context).maybePop$0();
    }
  };
  A._ModalScopeStatus.prototype = {
    updateShouldNotify$1(old) {
      var _this = this;
      return _this.isCurrent !== old.isCurrent || _this.canPop !== old.canPop || _this.impliesAppBarDismissal !== old.impliesAppBarDismissal || _this.route !== old.route;
    }
  };
  A._ModalScope.prototype = {
    createState$0() {
      return new A._ModalScopeState(A.FocusScopeNode$(true, B.Type__ModalScopeState_Tgz.toString$0(0) + " Focus Scope", false), A.ScrollController$(), this.$ti._eval$1("_ModalScopeState<1>"));
    }
  };
  A._ModalScopeState.prototype = {
    initState$0() {
      var t1, t2, _this = this;
      _this.super$State$initState();
      t1 = A._setArrayType([], type$.JSArray_Listenable);
      t2 = _this._widget.route._animationProxy;
      if (t2 != null)
        t1.push(t2);
      t2 = _this._widget.route._secondaryAnimationProxy;
      if (t2 != null)
        t1.push(t2);
      _this.___ModalScopeState__listenable_A = new A._MergingListenable(t1);
    },
    didUpdateWidget$1(oldWidget) {
      this.super$State$didUpdateWidget(oldWidget);
      this._updateFocusScopeNode$0();
    },
    didChangeDependencies$0() {
      this.super$State$didChangeDependencies();
      this._page = null;
      this._updateFocusScopeNode$0();
    },
    _updateFocusScopeNode$0() {
      var t1, t2,
        route = this._widget.route;
      route._navigator._widget.toString;
      t1 = this.focusScopeNode;
      t1.traversalEdgeBehavior = B.TraversalEdgeBehavior_1;
      t2 = route.get$isCurrent();
      if (t2)
        this._widget.route._navigator._widget.toString;
      if (t2) {
        t2 = route._navigator.focusNode.get$enclosingScope();
        if (t2 != null)
          t2.setFirstFocus$1(t1);
      }
    },
    _forceRebuildPage$0() {
      this.setState$1(new A._ModalScopeState__forceRebuildPage_closure(this));
    },
    dispose$0() {
      this.focusScopeNode.dispose$0();
      this.super$State$dispose();
    },
    get$_shouldIgnoreFocusRequest() {
      var t1 = this._widget.route,
        t2 = t1._animationProxy;
      if ((t2 == null ? null : t2.get$status()) !== B.AnimationStatus_2) {
        t1 = t1._navigator;
        t1 = t1 == null ? null : t1.userGestureInProgressNotifier._change_notifier$_value;
        t1 = t1 === true;
      } else
        t1 = true;
      return t1;
    },
    build$1(context) {
      var t4, t5, _this = this, _null = null,
        t1 = _this._widget.route,
        t2 = t1.get$isCurrent(),
        t3 = _this._widget.route;
      if (!t3.get$hasActiveRouteBelow()) {
        t3 = t3.LocalHistoryRoute__localHistory;
        t3 = t3 != null && t3.length !== 0;
      } else
        t3 = true;
      t4 = _this._widget.route;
      t4 = t4.get$hasActiveRouteBelow() || t4.LocalHistoryRoute__entriesImpliesAppBarDismissal > 0;
      t5 = _this._widget.route;
      return A.AnimatedBuilder$(t1._restorationScopeId, new A._ModalScopeState_build_closure(_this), new A._ModalScopeStatus(t2, t3, t4, t1, new A.Offstage(t5._offstage, new A.PageStorage(new A.Builder(new A._ModalScopeState_build_closure0(_this), _null), t5._storageBucket, _null), _null), _null));
    }
  };
  A._ModalScopeState__forceRebuildPage_closure.prototype = {
    call$0() {
      this.$this._page = null;
    },
    $signature: 0
  };
  A._ModalScopeState_build_closure.prototype = {
    call$2(context, child) {
      var t1 = this.$this._widget.route._restorationScopeId._change_notifier$_value;
      child.toString;
      return new A.RestorationScope(child, t1, null);
    },
    $signature: 241
  };
  A._ModalScopeState_build_closure0.prototype = {
    call$1(context) {
      var t4, _null = null,
        t1 = A.LinkedHashMap_LinkedHashMap$_literal([B.Type_DismissIntent_GEb, new A._DismissModalAction(context, new A.ObserverList(A._setArrayType([], type$.JSArray_of_void_Function_Action_Intent), type$.ObserverList_of_void_Function_Action_Intent))], type$.Type, type$.Action_Intent),
        t2 = this.$this,
        t3 = t2.___ModalScopeState__listenable_A;
      t3 === $ && A.throwUnnamedLateFieldNI();
      t4 = t2._page;
      if (t4 == null)
        t4 = t2._page = new A.RepaintBoundary(new A.Builder(new A._ModalScopeState_build__closure(t2), _null), t2._widget.route._subtreeKey);
      return A.Actions$(t1, new A.PrimaryScrollController(t2.primaryScrollController, A.FocusScope$(false, new A.RepaintBoundary(A.AnimatedBuilder$(t3, new A._ModalScopeState_build__closure0(t2), t4), _null), _null, _null, t2.focusScopeNode), _null));
    },
    $signature: 242
  };
  A._ModalScopeState_build__closure0.prototype = {
    call$2(context, child) {
      var t4, t5, platform, matchingBuilder,
        t1 = this.$this,
        t2 = t1._widget.route,
        t3 = t2._animationProxy;
      t3.toString;
      t4 = t2._secondaryAnimationProxy;
      t4.toString;
      t5 = t2._navigator;
      t5 = t5 == null ? null : t5.userGestureInProgressNotifier;
      if (t5 == null)
        t5 = A.ValueNotifier$(false);
      t1 = A.AnimatedBuilder$(t5, new A._ModalScopeState_build___closure(t1), child);
      A.Theme_of(context);
      platform = A.Theme_of(context).platform;
      matchingBuilder = B.Map_kX8z3.$index(0, t2._navigator.userGestureInProgressNotifier._change_notifier$_value ? B.TargetPlatform_2 : platform);
      if (matchingBuilder == null)
        matchingBuilder = B.C_ZoomPageTransitionsBuilder;
      return matchingBuilder.buildTransitions$1$5(t2, context, t3, t4, t1, t2.$ti._precomputed1);
    },
    $signature: 38
  };
  A._ModalScopeState_build___closure.prototype = {
    call$2(context, child) {
      var t1 = this.$this,
        ignoreEvents = t1.get$_shouldIgnoreFocusRequest();
      t1.focusScopeNode.set$canRequestFocus(!ignoreEvents);
      return new A.IgnorePointer(ignoreEvents, null, child, null);
    },
    $signature: 243
  };
  A._ModalScopeState_build__closure.prototype = {
    call$1(context) {
      var _null = null,
        t1 = this.$this._widget.route;
      t1._animationProxy.toString;
      t1._secondaryAnimationProxy.toString;
      return A.Semantics$(_null, _null, t1.builder.call$1(context), false, _null, false, true, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, true, _null, _null, _null, _null, _null, _null);
    },
    $signature: 12
  };
  A.ModalRoute.prototype = {
    setState$1(fn) {
      var t2,
        t1 = this._scopeKey;
      if (t1.get$currentState() != null) {
        t1 = t1.get$currentState();
        if (t1._widget.route.get$isCurrent()) {
          t2 = !t1.get$_shouldIgnoreFocusRequest();
          if (t2)
            t1._widget.route._navigator._widget.toString;
        } else
          t2 = false;
        if (t2) {
          t2 = t1._widget.route._navigator.focusNode.get$enclosingScope();
          if (t2 != null)
            t2.setFirstFocus$1(t1.focusScopeNode);
        }
        t1.setState$1(fn);
      } else
        fn.call$0();
    },
    install$0() {
      var _this = this;
      _this.super$TransitionRoute$install();
      _this._animationProxy = A.ProxyAnimation$(A.TransitionRoute.prototype.get$animation.call(_this));
      _this._secondaryAnimationProxy = A.ProxyAnimation$(A.TransitionRoute.prototype.get$secondaryAnimation.call(_this));
    },
    didPush$0() {
      var _this = this,
        t1 = _this._scopeKey,
        t2 = t1.get$currentState() != null;
      if (t2)
        _this._navigator._widget.toString;
      if (t2) {
        t2 = _this._navigator.focusNode.get$enclosingScope();
        if (t2 != null)
          t2.setFirstFocus$1(t1.get$currentState().focusScopeNode);
      }
      return _this.super$TransitionRoute$didPush();
    },
    didAdd$0() {
      var _this = this,
        t1 = _this._scopeKey,
        t2 = t1.get$currentState() != null;
      if (t2)
        _this._navigator._widget.toString;
      if (t2) {
        t2 = _this._navigator.focusNode.get$enclosingScope();
        if (t2 != null)
          t2.setFirstFocus$1(t1.get$currentState().focusScopeNode);
      }
      _this.super$TransitionRoute$didAdd();
    },
    set$offstage(value) {
      var t1, _this = this;
      if (_this._offstage === value)
        return;
      _this.setState$1(new A.ModalRoute_offstage_closure(_this, value));
      t1 = _this._animationProxy;
      t1.toString;
      t1.set$parent(_this._offstage ? B.C__AlwaysCompleteAnimation : A.TransitionRoute.prototype.get$animation.call(_this));
      t1 = _this._secondaryAnimationProxy;
      t1.toString;
      t1.set$parent(_this._offstage ? B.C__AlwaysDismissedAnimation : A.TransitionRoute.prototype.get$secondaryAnimation.call(_this));
      _this.changedInternalState$0();
    },
    willPop$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.RoutePopDisposition),
        $async$returnValue, $async$self = this, t1, t2, _i, $async$temp1;
      var $async$willPop$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$self._scopeKey.get$currentState();
              t1 = A.List_List$_of($async$self._willPopCallbacks, type$.Future_bool_Function);
              t2 = t1.length;
              _i = 0;
            case 3:
              // for condition
              if (!(_i < t1.length)) {
                // goto after for
                $async$goto = 5;
                break;
              }
              $async$temp1 = J;
              $async$goto = 6;
              return A._asyncAwait(t1[_i].call$0(), $async$willPop$0);
            case 6:
              // returning from await.
              if (!$async$temp1.$eq$($async$result, true)) {
                $async$returnValue = B.RoutePopDisposition_1;
                // goto return
                $async$goto = 1;
                break;
              }
            case 4:
              // for update
              t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i;
              // goto for condition
              $async$goto = 3;
              break;
            case 5:
              // after for
              $async$returnValue = $async$self.super$_ModalRoute_TransitionRoute_LocalHistoryRoute$willPop();
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$willPop$0, $async$completer);
    },
    didChangePrevious$1(previousRoute) {
      this.super$Route$didChangePrevious(previousRoute);
      this.changedInternalState$0();
    },
    changedInternalState$0() {
      var t1, _this = this;
      _this.super$Route$changedInternalState();
      _this.setState$1(new A.ModalRoute_changedInternalState_closure());
      t1 = _this.__ModalRoute__modalBarrier_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.markNeedsBuild$0();
      t1 = _this.__ModalRoute__modalScope_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.set$maintainState(true);
    },
    changedExternalState$0() {
      this.super$Route$changedExternalState();
      var t1 = this.__ModalRoute__modalBarrier_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.markNeedsBuild$0();
      t1 = this._scopeKey;
      if (t1.get$currentState() != null)
        t1.get$currentState()._forceRebuildPage$0();
    },
    _buildModalBarrier$1(context) {
      var _null = null,
        barrier = A.ModalBarrier$(true, _null, _null, false, _null, _null, _null),
        t1 = this._animationProxy;
      t1 = t1.get$status() === B.AnimationStatus_2 || t1.get$status() === B.AnimationStatus_0;
      return new A.IgnorePointer(t1, _null, barrier, _null);
    },
    _buildModalScope$1(context) {
      var _this = this, _null = null,
        t1 = _this._modalScopeCache;
      return t1 == null ? _this._modalScopeCache = A.Semantics$(_null, _null, new A._ModalScope(_this, _this._scopeKey, _this.$ti._eval$1("_ModalScope<1>")), false, _null, false, false, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, B.OrdinalSortKey_0_null, _null, _null, _null, _null) : t1;
    },
    toString$0(_) {
      return "ModalRoute(" + this._settings.toString$0(0) + ", animation: " + A.S(this._routes$_animation) + ")";
    }
  };
  A.ModalRoute_offstage_closure.prototype = {
    call$0() {
      this.$this._offstage = this.value;
    },
    $signature: 0
  };
  A.ModalRoute_changedInternalState_closure.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A._ModalRoute_TransitionRoute_LocalHistoryRoute.prototype = {
    willPop$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.RoutePopDisposition),
        $async$returnValue, $async$self = this, t1;
      var $async$willPop$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.LocalHistoryRoute__localHistory;
              if (t1 != null && t1.length !== 0) {
                $async$returnValue = B.RoutePopDisposition_0;
                // goto return
                $async$goto = 1;
                break;
              }
              $async$returnValue = $async$self.super$Route$willPop();
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$willPop$0, $async$completer);
    },
    didPop$1(result) {
      var entry, internalStateChanged, _this = this,
        t1 = _this.LocalHistoryRoute__localHistory;
      if (t1 != null && t1.length !== 0) {
        entry = t1.pop();
        entry._routes$_owner = null;
        entry._notifyRemoved$0();
        internalStateChanged = entry.impliesAppBarDismissal && --_this.LocalHistoryRoute__entriesImpliesAppBarDismissal === 0;
        if (_this.LocalHistoryRoute__localHistory.length === 0 || internalStateChanged)
          _this.changedInternalState$0();
        return false;
      }
      _this.super$TransitionRoute$didPop(result);
      return true;
    }
  };
  A.SafeArea.prototype = {
    build$1(context) {
      var t5, t6, t7,
        t1 = type$.MediaQuery,
        padding = A.InheritedModel_inheritFrom(context, B._MediaQueryAspect_5, t1).data.padding,
        t2 = Math.max(padding.left, 0),
        t3 = this.top,
        t4 = t3 ? padding.top : 0;
      t4 = Math.max(t4, 0);
      t5 = Math.max(padding.right, 0);
      t6 = this.bottom;
      t7 = t6 ? padding.bottom : 0;
      return new A.Padding(new A.EdgeInsets(t2, t4, t5, Math.max(t7, 0)), A.MediaQuery$(this.child, A.InheritedModel_inheritFrom(context, null, t1).data.removePadding$4$removeBottom$removeLeft$removeRight$removeTop(t6, true, true, t3), null), null);
    }
  };
  A.ScrollActivity.prototype = {
    resetActivity$0() {
    },
    dispatchScrollStartNotification$2(metrics, context) {
      if (context != null)
        context.dispatchNotification$1(new A.ScrollStartNotification(null, metrics, context, 0));
    },
    dispatchScrollUpdateNotification$3(metrics, context, scrollDelta) {
      context.dispatchNotification$1(A.ScrollUpdateNotification$(context, null, null, metrics, scrollDelta));
    },
    dispatchOverscrollNotification$3(metrics, context, overscroll) {
      context.dispatchNotification$1(new A.OverscrollNotification(null, overscroll, 0, metrics, context, 0));
    },
    dispatchScrollEndNotification$2(metrics, context) {
      context.dispatchNotification$1(new A.ScrollEndNotification(null, metrics, context, 0));
    },
    applyNewDimensions$0() {
    },
    dispose$0() {
    },
    toString$0(_) {
      return "<optimized out>#" + A.shortHash(this);
    }
  };
  A.IdleScrollActivity.prototype = {
    applyNewDimensions$0() {
      this._delegate.goBallistic$1(0);
    },
    get$shouldIgnorePointer() {
      return false;
    },
    get$isScrolling() {
      return false;
    },
    get$velocity() {
      return 0;
    }
  };
  A.HoldScrollActivity.prototype = {
    get$shouldIgnorePointer() {
      return false;
    },
    get$isScrolling() {
      return false;
    },
    get$velocity() {
      return 0;
    },
    dispose$0() {
      this.onHoldCanceled.call$0();
      this.super$ScrollActivity$dispose();
    }
  };
  A.ScrollDragController.prototype = {
    _adjustForScrollStartThreshold$2(offset, timestamp) {
      var t1, t2, _this = this;
      if (timestamp == null)
        return offset;
      if (offset === 0) {
        t1 = false;
        if (_this.motionStartDistanceThreshold != null)
          if (_this._offsetSinceLastStop == null) {
            t1 = _this._lastNonStationaryTimestamp;
            t1 = timestamp._duration - t1._duration > 50000;
          }
        if (t1)
          _this._offsetSinceLastStop = 0;
        return 0;
      } else {
        t1 = _this._offsetSinceLastStop;
        if (t1 == null)
          return offset;
        else {
          t1 += offset;
          _this._offsetSinceLastStop = t1;
          t2 = _this.motionStartDistanceThreshold;
          t2.toString;
          if (Math.abs(t1) > t2) {
            _this._offsetSinceLastStop = null;
            t1 = Math.abs(offset);
            if (t1 > 24)
              return offset;
            else
              return Math.min(t2 / 3, t1) * J.get$sign$in(offset);
          } else
            return 0;
        }
      }
    },
    update$1(details) {
      var t1, t2, t3, t4, offset, _this = this;
      _this._lastDetails = details;
      t1 = details.primaryDelta;
      t1.toString;
      t2 = t1 === 0;
      if (!t2)
        _this._lastNonStationaryTimestamp = details.sourceTimeStamp;
      t3 = details.sourceTimeStamp;
      t4 = false;
      if (_this._retainMomentum)
        if (t2)
          if (t3 != null) {
            t2 = _this._lastNonStationaryTimestamp;
            t2 = t3._duration - t2._duration > 20000;
          } else
            t2 = true;
        else
          t2 = t4;
      else
        t2 = t4;
      if (t2)
        _this._retainMomentum = false;
      offset = _this._adjustForScrollStartThreshold$2(t1, t3);
      if (offset === 0)
        return;
      t1 = _this._delegate;
      t1.context._widget.toString;
      if (A.axisDirectionIsReversed(B.AxisDirection_2))
        offset = -offset;
      t1.updateUserScrollDirection$1(offset > 0 ? B.ScrollDirection_1 : B.ScrollDirection_2);
      t2 = t1._scroll_position$_pixels;
      t2.toString;
      t1.super$ScrollPosition$setPixels(t2 - t1.physics.applyPhysicsToUserOffset$2(t1, offset));
    },
    dispose$0() {
      this._lastDetails = null;
      this.onDragCanceled.call$0();
    },
    toString$0(_) {
      return "<optimized out>#" + A.shortHash(this);
    }
  };
  A.DragScrollActivity.prototype = {
    dispatchScrollStartNotification$2(metrics, context) {
      var t1 = type$.DragStartDetails._as(this._scroll_activity$_controller._lastDetails);
      if (context != null)
        context.dispatchNotification$1(new A.ScrollStartNotification(t1, metrics, context, 0));
    },
    dispatchScrollUpdateNotification$3(metrics, context, scrollDelta) {
      context.dispatchNotification$1(A.ScrollUpdateNotification$(context, null, type$.DragUpdateDetails._as(this._scroll_activity$_controller._lastDetails), metrics, scrollDelta));
    },
    dispatchOverscrollNotification$3(metrics, context, overscroll) {
      context.dispatchNotification$1(new A.OverscrollNotification(type$.DragUpdateDetails._as(this._scroll_activity$_controller._lastDetails), overscroll, 0, metrics, context, 0));
    },
    dispatchScrollEndNotification$2(metrics, context) {
      var lastDetails = this._scroll_activity$_controller._lastDetails;
      context.dispatchNotification$1(new A.ScrollEndNotification(lastDetails instanceof A.DragEndDetails ? lastDetails : null, metrics, context, 0));
    },
    get$shouldIgnorePointer() {
      var t1 = this._scroll_activity$_controller;
      return (t1 == null ? null : t1._scroll_activity$_kind) !== B.PointerDeviceKind_4;
    },
    get$isScrolling() {
      return true;
    },
    get$velocity() {
      return 0;
    },
    dispose$0() {
      this._scroll_activity$_controller = null;
      this.super$ScrollActivity$dispose();
    },
    toString$0(_) {
      return "<optimized out>#" + A.shortHash(this) + "(" + A.S(this._scroll_activity$_controller) + ")";
    }
  };
  A.BallisticScrollActivity.prototype = {
    resetActivity$0() {
      var t1 = this._delegate,
        t2 = this.__BallisticScrollActivity__controller_A;
      t2 === $ && A.throwUnnamedLateFieldNI();
      t1.goBallistic$1(t2.get$velocity());
    },
    applyNewDimensions$0() {
      var t1 = this._delegate,
        t2 = this.__BallisticScrollActivity__controller_A;
      t2 === $ && A.throwUnnamedLateFieldNI();
      t1.goBallistic$1(t2.get$velocity());
    },
    _scroll_activity$_tick$0() {
      var t1 = this.__BallisticScrollActivity__controller_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1 = t1.__AnimationController__value_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      if (!(Math.abs(this._delegate.super$ScrollPosition$setPixels(t1)) < 1e-10)) {
        t1 = this._delegate;
        t1.beginActivity$1(new A.IdleScrollActivity(t1));
      }
    },
    _scroll_activity$_end$0() {
      this._delegate.goBallistic$1(0);
    },
    dispatchOverscrollNotification$3(metrics, context, overscroll) {
      var t1 = this.__BallisticScrollActivity__controller_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      context.dispatchNotification$1(new A.OverscrollNotification(null, overscroll, t1.get$velocity(), metrics, context, 0));
    },
    get$isScrolling() {
      return true;
    },
    get$velocity() {
      var t1 = this.__BallisticScrollActivity__controller_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      return t1.get$velocity();
    },
    dispose$0() {
      var t1 = this.__BallisticScrollActivity__controller_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.dispose$0();
      this.super$ScrollActivity$dispose();
    },
    toString$0(_) {
      var t1 = A.shortHash(this),
        t2 = this.__BallisticScrollActivity__controller_A;
      t2 === $ && A.throwUnnamedLateFieldNI();
      return "<optimized out>#" + t1 + "(" + t2.toString$0(0) + ")";
    },
    get$shouldIgnorePointer() {
      return this.shouldIgnorePointer;
    }
  };
  A.DrivenScrollActivity.prototype = {
    _scroll_activity$_tick$0() {
      var t1 = this._delegate,
        t2 = this.__DrivenScrollActivity__controller_F;
      t2 === $ && A.throwUnnamedLateFieldNI();
      t2 = t2.__AnimationController__value_A;
      t2 === $ && A.throwUnnamedLateFieldNI();
      if (t1.super$ScrollPosition$setPixels(t2) !== 0) {
        t1 = this._delegate;
        t1.beginActivity$1(new A.IdleScrollActivity(t1));
      }
    },
    _scroll_activity$_end$0() {
      var t1 = this._delegate,
        t2 = this.__DrivenScrollActivity__controller_F;
      t2 === $ && A.throwUnnamedLateFieldNI();
      t1.goBallistic$1(t2.get$velocity());
    },
    dispatchOverscrollNotification$3(metrics, context, overscroll) {
      var t1 = this.__DrivenScrollActivity__controller_F;
      t1 === $ && A.throwUnnamedLateFieldNI();
      context.dispatchNotification$1(new A.OverscrollNotification(null, overscroll, t1.get$velocity(), metrics, context, 0));
    },
    get$shouldIgnorePointer() {
      return true;
    },
    get$isScrolling() {
      return true;
    },
    get$velocity() {
      var t1 = this.__DrivenScrollActivity__controller_F;
      t1 === $ && A.throwUnnamedLateFieldNI();
      return t1.get$velocity();
    },
    dispose$0() {
      var t1 = this.__DrivenScrollActivity__completer_F;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.complete$0();
      t1 = this.__DrivenScrollActivity__controller_F;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.dispose$0();
      this.super$ScrollActivity$dispose();
    },
    toString$0(_) {
      var t1 = A.shortHash(this),
        t2 = this.__DrivenScrollActivity__controller_F;
      t2 === $ && A.throwUnnamedLateFieldNI();
      return "<optimized out>#" + t1 + "(" + t2.toString$0(0) + ")";
    }
  };
  A.AndroidOverscrollIndicator.prototype = {
    _enumToString$0() {
      return "AndroidOverscrollIndicator." + this._name;
    }
  };
  A.ScrollBehavior.prototype = {
    copyWith$7$androidOverscrollIndicator$dragDevices$overscroll$physics$platform$pointerAxisModifiers$scrollbars(androidOverscrollIndicator, dragDevices, overscroll, physics, platform, pointerAxisModifiers, $scrollbars) {
      return new A._WrappedScrollBehavior(this, $scrollbars, overscroll !== false, physics, platform, dragDevices, pointerAxisModifiers, androidOverscrollIndicator);
    },
    copyWith$1$scrollbars($scrollbars) {
      var _null = null;
      return this.copyWith$7$androidOverscrollIndicator$dragDevices$overscroll$physics$platform$pointerAxisModifiers$scrollbars(_null, _null, _null, _null, _null, _null, $scrollbars);
    },
    getPlatform$1(context) {
      return A.defaultTargetPlatform();
    },
    get$dragDevices() {
      return B.Set_rHjQa;
    },
    get$pointerAxisModifiers() {
      return A.LinkedHashSet_LinkedHashSet$_literal([B.LogicalKeyboardKey_8589934850, B.LogicalKeyboardKey_8589934851], type$.LogicalKeyboardKey);
    },
    buildScrollbar$3(context, child, details) {
      var _null = null;
      switch (this.getPlatform$1(context).index) {
        case 3:
        case 4:
        case 5:
          return A.RawScrollbar$(child, details.controller, B.Duration_300000, _null, _null, A.scroll_notification__defaultScrollNotificationPredicate$closure(), B.Duration_0, _null, _null, _null, _null, B.Duration_600000, _null);
        case 0:
        case 1:
        case 2:
          return child;
      }
    },
    buildOverscrollIndicator$3(context, child, details) {
      var target;
      switch (this.getPlatform$1(context).index) {
        case 2:
        case 3:
        case 4:
        case 5:
          target = 1;
          break;
        case 0:
          target = 2;
          break;
        case 1:
          target = 3;
          break;
        default:
          target = null;
          break;
      }
      if (target)
        c$0:
          for (; true;)
            switch (target) {
              case 1:
                return child;
              case 2:
                switch (1) {
                  case 1:
                    break;
                }
                if (2)
                  c$1:
                    for (; true;)
                      switch (2) {
                        case 1:
                          return new A.StretchingOverscrollIndicator(details.direction, B.Clip_1, child, null);
                        case 2:
                          target = 3;
                          continue c$0;
                      }
                break c$0;
              case 3:
                return new A.GlowingOverscrollIndicator(details.direction, B.Color_4294967295, child, null);
            }
    },
    velocityTrackerBuilder$1(context) {
      switch (this.getPlatform$1(context).index) {
        case 2:
          return new A.ScrollBehavior_velocityTrackerBuilder_closure();
        case 4:
          return new A.ScrollBehavior_velocityTrackerBuilder_closure0();
        case 0:
        case 1:
        case 3:
        case 5:
          return new A.ScrollBehavior_velocityTrackerBuilder_closure1();
      }
    },
    getScrollPhysics$1(context) {
      switch (this.getPlatform$1(context).index) {
        case 2:
          return B.BouncingScrollPhysics_69W;
        case 4:
          return B.BouncingScrollPhysics_Wm7;
        case 0:
        case 1:
        case 3:
        case 5:
          return B.ClampingScrollPhysics_wYv;
      }
    },
    toString$0(_) {
      return "ScrollBehavior";
    }
  };
  A.ScrollBehavior_velocityTrackerBuilder_closure.prototype = {
    call$1($event) {
      return A.IOSScrollViewFlingVelocityTracker$($event.get$kind());
    },
    $signature: 244
  };
  A.ScrollBehavior_velocityTrackerBuilder_closure0.prototype = {
    call$1($event) {
      var t1 = $event.get$kind(),
        t2 = type$.nullable__PointAtTime;
      return new A.MacOSScrollViewFlingVelocityTracker(A.List_List$filled(20, null, false, t2), t1, A.List_List$filled(20, null, false, t2));
    },
    $signature: 245
  };
  A.ScrollBehavior_velocityTrackerBuilder_closure1.prototype = {
    call$1($event) {
      return new A.VelocityTracker($event.get$kind(), A.List_List$filled(20, null, false, type$.nullable__PointAtTime));
    },
    $signature: 99
  };
  A._WrappedScrollBehavior.prototype = {
    get$dragDevices() {
      var t1 = this._dragDevices;
      return t1 == null ? B.Set_rHjQa : t1;
    },
    get$pointerAxisModifiers() {
      var t1 = this._pointerAxisModifiers;
      return t1 == null ? A.LinkedHashSet_LinkedHashSet$_literal([B.LogicalKeyboardKey_8589934850, B.LogicalKeyboardKey_8589934851], type$.LogicalKeyboardKey) : t1;
    },
    buildOverscrollIndicator$3(context, child, details) {
      var t1 = this.delegate.buildOverscrollIndicator$3(context, child, details);
      return t1;
    },
    buildScrollbar$3(context, child, details) {
      if (this.scrollbars)
        return this.delegate.buildScrollbar$3(context, child, details);
      return child;
    },
    getScrollPhysics$1(context) {
      var t1 = this.delegate.getScrollPhysics$1(context);
      return t1;
    },
    velocityTrackerBuilder$1(context) {
      return this.delegate.velocityTrackerBuilder$1(context);
    },
    toString$0(_) {
      return "_WrappedScrollBehavior";
    }
  };
  A.ScrollConfiguration.prototype = {
    updateShouldNotify$1(oldWidget) {
      var t1 = A.getRuntimeTypeOfDartObject(this.behavior),
        t2 = A.getRuntimeTypeOfDartObject(oldWidget.behavior);
      return t1 !== t2;
    }
  };
  A.ScrollController.prototype = {
    animateTo$3$curve$duration(offset, curve, duration) {
      return this.animateTo$body$ScrollController(offset, curve, duration);
    },
    animateTo$body$ScrollController(offset, curve, duration) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, t2, i, t1;
      var $async$animateTo$3$curve$duration = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = A._setArrayType([], type$.JSArray_Future_void);
              for (t2 = $async$self._positions, i = 0; i < t2.length; ++i)
                t1.push(t2[i].animateTo$3$curve$duration(offset, curve, duration));
              $async$goto = 2;
              return A._asyncAwait(A.Future_wait(t1, type$.void), $async$animateTo$3$curve$duration);
            case 2:
              // returning from await.
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$animateTo$3$curve$duration, $async$completer);
    },
    attach$1(position) {
      this._positions.push(position);
      position.addListener$1(this.get$notifyListeners());
    },
    detach$1(position) {
      position.removeListener$1(this.get$notifyListeners());
      B.JSArray_methods.remove$1(this._positions, position);
    },
    dispose$0() {
      var t1, t2, t3, _i;
      for (t1 = this._positions, t2 = t1.length, t3 = this.get$notifyListeners(), _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i)
        t1[_i].removeListener$1(t3);
      this.super$ChangeNotifier$dispose();
    },
    createScrollPosition$3(physics, context, oldPosition) {
      return A.ScrollPositionWithSingleContext$(context, null, 0, true, oldPosition, physics);
    },
    toString$0(_) {
      var description = A._setArrayType([], type$.JSArray_String),
        t1 = this._positions,
        t2 = t1.length;
      if (t2 === 0)
        description.push("no clients");
      else if (t2 === 1) {
        t1 = B.JSArray_methods.get$single(t1)._scroll_position$_pixels;
        t1.toString;
        description.push("one client, offset " + B.JSNumber_methods.toStringAsFixed$1(t1, 1));
      } else
        description.push("" + t2 + " clients");
      return "<optimized out>#" + A.shortHash(this) + "(" + B.JSArray_methods.join$1(description, ", ") + ")";
    }
  };
  A.ScrollMetrics.prototype = {
    copyWith$0() {
      var _this = this, _null = null,
        t1 = _this.get$hasContentDimensions() ? _this.get$minScrollExtent() : _null,
        t2 = _this.get$hasContentDimensions() ? _this.get$maxScrollExtent() : _null,
        t3 = _this.get$hasPixels() ? _this.get$pixels() : _null,
        t4 = _this.get$hasViewportDimension() ? _this.get$viewportDimension() : _null,
        t5 = _this.get$axisDirection(),
        t6 = _this.get$devicePixelRatio();
      return new A.FixedScrollMetrics(t1, t2, t3, t4, t5, t6);
    },
    get$outOfRange() {
      var _this = this;
      return _this.get$pixels() < _this.get$minScrollExtent() || _this.get$pixels() > _this.get$maxScrollExtent();
    },
    get$atEdge() {
      var _this = this;
      return _this.get$pixels() === _this.get$minScrollExtent() || _this.get$pixels() === _this.get$maxScrollExtent();
    },
    get$extentInside() {
      var _this = this;
      return _this.get$viewportDimension() - A.clampDouble(_this.get$minScrollExtent() - _this.get$pixels(), 0, _this.get$viewportDimension()) - A.clampDouble(_this.get$pixels() - _this.get$maxScrollExtent(), 0, _this.get$viewportDimension());
    }
  };
  A.FixedScrollMetrics.prototype = {
    get$minScrollExtent() {
      var t1 = this._minScrollExtent;
      t1.toString;
      return t1;
    },
    get$maxScrollExtent() {
      var t1 = this._maxScrollExtent;
      t1.toString;
      return t1;
    },
    get$hasContentDimensions() {
      return this._minScrollExtent != null && this._maxScrollExtent != null;
    },
    get$pixels() {
      var t1 = this._pixels;
      t1.toString;
      return t1;
    },
    get$hasPixels() {
      return this._pixels != null;
    },
    get$viewportDimension() {
      var t1 = this._scroll_metrics$_viewportDimension;
      t1.toString;
      return t1;
    },
    get$hasViewportDimension() {
      return this._scroll_metrics$_viewportDimension != null;
    },
    toString$0(_) {
      var _this = this;
      return "FixedScrollMetrics(" + B.JSNumber_methods.toStringAsFixed$1(Math.max(_this.get$pixels() - _this.get$minScrollExtent(), 0), 1) + "..[" + B.JSNumber_methods.toStringAsFixed$1(_this.get$extentInside(), 1) + "].." + B.JSNumber_methods.toStringAsFixed$1(Math.max(_this.get$maxScrollExtent() - _this.get$pixels(), 0), 1) + ")";
    },
    get$axisDirection() {
      return this.axisDirection;
    },
    get$devicePixelRatio() {
      return this.devicePixelRatio;
    }
  };
  A._FixedScrollMetrics_Object_ScrollMetrics.prototype = {};
  A.ViewportNotificationMixin.prototype = {};
  A.ScrollNotification.prototype = {
    debugFillDescription$1(description) {
      this.super$_ScrollNotification_LayoutChangedNotification_ViewportNotificationMixin$debugFillDescription(description);
      description.push(this.metrics.toString$0(0));
    }
  };
  A.ScrollStartNotification.prototype = {
    debugFillDescription$1(description) {
      var t1;
      this.super$ScrollNotification$debugFillDescription(description);
      t1 = this.dragDetails;
      if (t1 != null)
        description.push(t1.toString$0(0));
    }
  };
  A.ScrollUpdateNotification.prototype = {
    debugFillDescription$1(description) {
      var t1;
      this.super$ScrollNotification$debugFillDescription(description);
      description.push("scrollDelta: " + A.S(this.scrollDelta));
      t1 = this.dragDetails;
      if (t1 != null)
        description.push(t1.toString$0(0));
    },
    get$dragDetails() {
      return this.dragDetails;
    }
  };
  A.OverscrollNotification.prototype = {
    debugFillDescription$1(description) {
      var t1, _this = this;
      _this.super$ScrollNotification$debugFillDescription(description);
      description.push("overscroll: " + B.JSNumber_methods.toStringAsFixed$1(_this.overscroll, 1));
      description.push("velocity: " + B.JSNumber_methods.toStringAsFixed$1(_this.velocity, 1));
      t1 = _this.dragDetails;
      if (t1 != null)
        description.push(t1.toString$0(0));
    }
  };
  A.ScrollEndNotification.prototype = {
    debugFillDescription$1(description) {
      var t1;
      this.super$ScrollNotification$debugFillDescription(description);
      t1 = this.dragDetails;
      if (t1 != null)
        description.push(t1.toString$0(0));
    },
    get$dragDetails() {
      return this.dragDetails;
    }
  };
  A.UserScrollNotification.prototype = {
    debugFillDescription$1(description) {
      this.super$ScrollNotification$debugFillDescription(description);
      description.push("direction: " + this.direction.toString$0(0));
    }
  };
  A._ScrollNotification_LayoutChangedNotification_ViewportNotificationMixin.prototype = {
    debugFillDescription$1(description) {
      var t1, t2;
      this.super$Notification$debugFillDescription(description);
      t1 = this.ViewportNotificationMixin__depth;
      t2 = t1 === 0 ? "local" : "remote";
      description.push("depth: " + t1 + " (" + t2 + ")");
    }
  };
  A._ScrollNotificationObserverScope.prototype = {
    updateShouldNotify$1(old) {
      return this._scrollNotificationObserverState !== old._scrollNotificationObserverState;
    }
  };
  A._ListenerEntry.prototype = {
    listener$1(arg0) {
      return this.listener.call$1(arg0);
    }
  };
  A.ScrollNotificationObserver.prototype = {
    createState$0() {
      return new A.ScrollNotificationObserverState(new A.LinkedList(type$.LinkedList__ListenerEntry));
    }
  };
  A.ScrollNotificationObserverState.prototype = {
    removeListener$1(listener) {
      var t2, entry, t3,
        t1 = this._scroll_notification_observer$_listeners;
      t1.toString;
      t1 = A._LinkedListIterator$(t1, t1.$ti._precomputed1);
      t2 = t1.$ti._precomputed1;
      for (; t1.moveNext$0();) {
        entry = t1._current;
        if (entry == null)
          entry = t2._as(entry);
        if (J.$eq$(entry.listener, listener)) {
          t1 = entry._list;
          t1.toString;
          A._instanceType(entry)._eval$1("LinkedListEntry.E")._as(entry);
          ++t1._modificationCount;
          t2 = entry._collection$_next;
          t2._collection$_previous = entry._collection$_previous;
          entry._collection$_previous._collection$_next = t2;
          t3 = --t1._collection$_length;
          entry._list = entry._collection$_next = entry._collection$_previous = null;
          if (t3 === 0)
            t1._collection$_first = null;
          else if (entry === t1._collection$_first)
            t1._collection$_first = t2;
          return;
        }
      }
    },
    _notifyListeners$1(notification) {
      var entry, exception, stack, localListeners, _i, exception0, t2, t3,
        t1 = this._scroll_notification_observer$_listeners;
      if (t1._collection$_length === 0)
        return;
      localListeners = A.List_List$_of(t1, type$._ListenerEntry);
      for (t1 = localListeners.length, _i = 0; _i < localListeners.length; localListeners.length === t1 || (0, A.throwConcurrentModificationError)(localListeners), ++_i) {
        entry = localListeners[_i];
        try {
          if (entry._list != null)
            entry.listener$1(notification);
        } catch (exception0) {
          exception = A.unwrapException(exception0);
          stack = A.getTraceFromException(exception0);
          t2 = A.ErrorDescription$("while dispatching notifications for " + A.getRuntimeTypeOfDartObject(this).toString$0(0));
          t3 = $.FlutterError_onError;
          if (t3 != null)
            t3.call$1(new A.FlutterErrorDetails(exception, stack, "widget library", t2, new A.ScrollNotificationObserverState__notifyListeners_closure(this), false));
        }
      }
    },
    build$1(context) {
      var _this = this;
      return new A.NotificationListener(new A.ScrollNotificationObserverState_build_closure(_this), new A.NotificationListener(new A.ScrollNotificationObserverState_build_closure0(_this), new A._ScrollNotificationObserverScope(_this, _this._widget.child, null), null, type$.NotificationListener_ScrollNotification), null, type$.NotificationListener_ScrollMetricsNotification);
    },
    dispose$0() {
      this._scroll_notification_observer$_listeners = null;
      this.super$State$dispose();
    }
  };
  A.ScrollNotificationObserverState__notifyListeners_closure.prototype = {
    call$0() {
      var _null = null,
        t1 = this.$this;
      return A._setArrayType([A.DiagnosticsProperty$("The " + A.getRuntimeTypeOfDartObject(t1).toString$0(0) + " sending notification was", t1, true, B.C__NoDefaultValue, _null, _null, _null, B.DiagnosticLevel_3, false, true, true, B.DiagnosticsTreeStyle_9, _null)], type$.JSArray_DiagnosticsNode);
    },
    $signature: 5
  };
  A.ScrollNotificationObserverState_build_closure.prototype = {
    call$1(notification) {
      var t1 = new A._ConvertedScrollMetricsNotification(null, null, notification.metrics, notification.context, 0);
      t1.ViewportNotificationMixin__depth = notification.ViewportNotificationMixin__depth;
      this.$this._notifyListeners$1(t1);
      return false;
    },
    $signature: 60
  };
  A.ScrollNotificationObserverState_build_closure0.prototype = {
    call$1(notification) {
      this.$this._notifyListeners$1(notification);
      return false;
    },
    $signature: 15
  };
  A._ConvertedScrollMetricsNotification.prototype = {};
  A.ScrollDecelerationRate.prototype = {
    _enumToString$0() {
      return "ScrollDecelerationRate." + this._name;
    }
  };
  A.ScrollPhysics.prototype = {
    buildParent$1(ancestor) {
      var t1 = this.parent;
      t1 = t1 == null ? null : t1.applyTo$1(ancestor);
      return t1 == null ? ancestor : t1;
    },
    applyPhysicsToUserOffset$2(position, offset) {
      var t1 = this.parent;
      if (t1 == null)
        return offset;
      return t1.applyPhysicsToUserOffset$2(position, offset);
    },
    shouldAcceptUserOffset$1(position) {
      var t2,
        t1 = this.parent;
      if (t1 == null) {
        t1 = position._scroll_position$_pixels;
        t1.toString;
        if (t1 === 0) {
          t1 = position._scroll_position$_minScrollExtent;
          t1.toString;
          t2 = position._scroll_position$_maxScrollExtent;
          t2.toString;
          t2 = t1 !== t2;
          t1 = t2;
        } else
          t1 = true;
        return t1;
      }
      return t1.shouldAcceptUserOffset$1(position);
    },
    applyBoundaryConditions$2(position, value) {
      var t1 = this.parent;
      if (t1 == null)
        return 0;
      return t1.applyBoundaryConditions$2(position, value);
    },
    adjustPositionForNewDimensions$4$isScrolling$newPosition$oldPosition$velocity(isScrolling, newPosition, oldPosition, velocity) {
      var t1 = this.parent;
      if (t1 == null) {
        t1 = newPosition._pixels;
        t1.toString;
        return t1;
      }
      return t1.adjustPositionForNewDimensions$4$isScrolling$newPosition$oldPosition$velocity(isScrolling, newPosition, oldPosition, velocity);
    },
    createBallisticSimulation$2(position, velocity) {
      var t1 = this.parent;
      if (t1 == null)
        return null;
      return t1.createBallisticSimulation$2(position, velocity);
    },
    get$spring() {
      var t1 = this.parent;
      t1 = t1 == null ? null : t1.get$spring();
      return t1 == null ? $.$get$ScrollPhysics__kDefaultSpring() : t1;
    },
    toleranceFor$1(metrics) {
      var t1 = this.parent;
      t1 = t1 == null ? null : t1.toleranceFor$1(metrics);
      if (t1 == null) {
        t1 = metrics.get$devicePixelRatio();
        t1 = new A.Tolerance(1 / metrics.get$devicePixelRatio(), 1 / (0.05 * t1));
      }
      return t1;
    },
    get$minFlingDistance() {
      var t1 = this.parent;
      t1 = t1 == null ? null : t1.get$minFlingDistance();
      return t1 == null ? 18 : t1;
    },
    get$minFlingVelocity() {
      var t1 = this.parent;
      t1 = t1 == null ? null : t1.get$minFlingVelocity();
      return t1 == null ? 50 : t1;
    },
    get$maxFlingVelocity() {
      var t1 = this.parent;
      t1 = t1 == null ? null : t1.get$maxFlingVelocity();
      return t1 == null ? 8000 : t1;
    },
    carriedMomentum$1(existingVelocity) {
      var t1 = this.parent;
      if (t1 == null)
        return 0;
      return t1.carriedMomentum$1(existingVelocity);
    },
    get$dragStartDistanceMotionThreshold() {
      var t1 = this.parent;
      return t1 == null ? null : t1.get$dragStartDistanceMotionThreshold();
    },
    toString$0(_) {
      var t1 = this.parent;
      if (t1 == null)
        return "ScrollPhysics";
      return "ScrollPhysics -> " + t1.toString$0(0);
    }
  };
  A.RangeMaintainingScrollPhysics.prototype = {
    applyTo$1(ancestor) {
      return new A.RangeMaintainingScrollPhysics(this.buildParent$1(ancestor));
    },
    adjustPositionForNewDimensions$4$isScrolling$newPosition$oldPosition$velocity(isScrolling, newPosition, oldPosition, velocity) {
      var t2, t3, t4, maintainOverscroll, t5, result,
        enforceBoundary = velocity === 0,
        t1 = oldPosition._minScrollExtent;
      t1.toString;
      t2 = newPosition._minScrollExtent;
      t2.toString;
      if (t1 === t2) {
        t3 = oldPosition._maxScrollExtent;
        t3.toString;
        t4 = newPosition._maxScrollExtent;
        t4.toString;
        t4 = t3 === t4;
        t3 = t4;
      } else
        t3 = false;
      maintainOverscroll = t3 ? false : enforceBoundary;
      t3 = oldPosition._pixels;
      t3.toString;
      t4 = newPosition._pixels;
      t4.toString;
      if (t3 !== t4) {
        t4 = false;
        if (isFinite(t1)) {
          t5 = oldPosition._maxScrollExtent;
          t5.toString;
          if (isFinite(t5))
            if (isFinite(t2)) {
              t4 = newPosition._maxScrollExtent;
              t4.toString;
              t4 = isFinite(t4);
            }
        }
        if (t4)
          enforceBoundary = false;
        maintainOverscroll = false;
      }
      t4 = t3 < t1;
      if (!t4) {
        t5 = oldPosition._maxScrollExtent;
        t5.toString;
        t5 = t3 > t5;
      } else
        t5 = true;
      if (t5)
        enforceBoundary = false;
      if (maintainOverscroll) {
        if (t4 && t2 > t1)
          return t2 - (t1 - t3);
        t1 = oldPosition._maxScrollExtent;
        t1.toString;
        if (t3 > t1) {
          t4 = newPosition._maxScrollExtent;
          t4.toString;
          t4 = t4 < t1;
        } else
          t4 = false;
        if (t4) {
          t2 = newPosition._maxScrollExtent;
          t2.toString;
          return t2 + (t3 - t1);
        }
      }
      result = this.super$ScrollPhysics$adjustPositionForNewDimensions(isScrolling, newPosition, oldPosition, velocity);
      if (enforceBoundary) {
        t1 = newPosition._maxScrollExtent;
        t1.toString;
        result = A.clampDouble(result, t2, t1);
      }
      return result;
    }
  };
  A.BouncingScrollPhysics.prototype = {
    applyTo$1(ancestor) {
      return new A.BouncingScrollPhysics(this.decelerationRate, this.buildParent$1(ancestor));
    },
    frictionFactor$1(overscrollFraction) {
      switch (this.decelerationRate.index) {
        case 1:
          return 0.07 * Math.pow(1 - overscrollFraction, 2);
        case 0:
          return 0.52 * Math.pow(1 - overscrollFraction, 2);
      }
    },
    applyPhysicsToUserOffset$2(position, offset) {
      var t1, t2, overscrollPastStart, overscrollPastEnd, overscrollPast, easing, friction;
      if (!position.get$outOfRange())
        return offset;
      t1 = position._scroll_position$_minScrollExtent;
      t1.toString;
      t2 = position._scroll_position$_pixels;
      t2.toString;
      overscrollPastStart = Math.max(t1 - t2, 0);
      t1 = position._scroll_position$_maxScrollExtent;
      t1.toString;
      overscrollPastEnd = Math.max(t2 - t1, 0);
      overscrollPast = Math.max(overscrollPastStart, overscrollPastEnd);
      if (!(overscrollPastStart > 0 && offset < 0))
        easing = overscrollPastEnd > 0 && offset > 0;
      else
        easing = true;
      t1 = position._viewportDimension;
      if (easing) {
        t1.toString;
        friction = this.frictionFactor$1((overscrollPast - Math.abs(offset)) / t1);
      } else {
        t1.toString;
        friction = this.frictionFactor$1(overscrollPast / t1);
      }
      return J.get$sign$in(offset) * A.BouncingScrollPhysics__applyFriction(overscrollPast, Math.abs(offset), friction);
    },
    applyBoundaryConditions$2(position, value) {
      return 0;
    },
    createBallisticSimulation$2(position, velocity) {
      var constantDeceleration, t1, t2, t3, t4, t5, finalX,
        tolerance = this.toleranceFor$1(position);
      if (Math.abs(velocity) >= tolerance.velocity || position.get$outOfRange()) {
        switch (this.decelerationRate.index) {
          case 1:
            constantDeceleration = 1400;
            break;
          case 0:
            constantDeceleration = 0;
            break;
          default:
            constantDeceleration = null;
        }
        t1 = this.get$spring();
        t2 = position._scroll_position$_pixels;
        t2.toString;
        t3 = position._scroll_position$_minScrollExtent;
        t3.toString;
        t4 = position._scroll_position$_maxScrollExtent;
        t4.toString;
        t5 = new A.BouncingScrollSimulation(t3, t4, t1, tolerance);
        if (t2 < t3) {
          t5.__BouncingScrollSimulation__springSimulation_A = new A.ScrollSpringSimulation(t3, A._SpringSolution__SpringSolution(t1, t2 - t3, velocity), B.Tolerance_YtJ);
          t5.__BouncingScrollSimulation__springTime_A = -1 / 0;
        } else if (t2 > t4) {
          t5.__BouncingScrollSimulation__springSimulation_A = new A.ScrollSpringSimulation(t4, A._SpringSolution__SpringSolution(t1, t2 - t4, velocity), B.Tolerance_YtJ);
          t5.__BouncingScrollSimulation__springTime_A = -1 / 0;
        } else {
          t2 = t5.__BouncingScrollSimulation__frictionSimulation_A = A.FrictionSimulation$(0.135, t2, velocity, constantDeceleration, B.Tolerance_YtJ);
          finalX = t2.get$finalX();
          if (velocity > 0 && finalX > t4) {
            t3 = t2.timeAtX$1(t4);
            t5.__BouncingScrollSimulation__springTime_A = t3;
            t5.__BouncingScrollSimulation__springSimulation_A = new A.ScrollSpringSimulation(t4, A._SpringSolution__SpringSolution(t1, t4 - t4, Math.min(t2.dx$1(t3), 5000)), B.Tolerance_YtJ);
          } else if (velocity < 0 && finalX < t3) {
            t4 = t2.timeAtX$1(t3);
            t5.__BouncingScrollSimulation__springTime_A = t4;
            t5.__BouncingScrollSimulation__springSimulation_A = new A.ScrollSpringSimulation(t3, A._SpringSolution__SpringSolution(t1, t3 - t3, Math.min(t2.dx$1(t4), 5000)), B.Tolerance_YtJ);
          } else
            t5.__BouncingScrollSimulation__springTime_A = 1 / 0;
        }
        return t5;
      }
      return null;
    },
    get$minFlingVelocity() {
      return 100;
    },
    carriedMomentum$1(existingVelocity) {
      return J.get$sign$in(existingVelocity) * Math.min(0.000816 * Math.pow(Math.abs(existingVelocity), 1.967), 40000);
    },
    get$dragStartDistanceMotionThreshold() {
      return 3.5;
    },
    get$maxFlingVelocity() {
      switch (this.decelerationRate.index) {
        case 1:
          return 64000;
        case 0:
          return A.ScrollPhysics.prototype.get$maxFlingVelocity.call(this);
      }
    },
    get$spring() {
      switch (this.decelerationRate.index) {
        case 1:
          return A.SpringDescription$withDampingRatio(0.3, 1.3, 75);
        case 0:
          return A.ScrollPhysics.prototype.get$spring.call(this);
      }
    }
  };
  A.ClampingScrollPhysics.prototype = {
    applyTo$1(ancestor) {
      return new A.ClampingScrollPhysics(this.buildParent$1(ancestor));
    },
    applyBoundaryConditions$2(position, value) {
      var t2, t3,
        t1 = position._scroll_position$_pixels;
      t1.toString;
      if (value < t1) {
        t2 = position._scroll_position$_minScrollExtent;
        t2.toString;
        t2 = t1 <= t2;
      } else
        t2 = false;
      if (t2)
        return value - t1;
      t2 = position._scroll_position$_maxScrollExtent;
      t2.toString;
      if (t2 <= t1 && t1 < value)
        return value - t1;
      t3 = position._scroll_position$_minScrollExtent;
      t3.toString;
      if (value < t3 && t3 < t1)
        return value - t3;
      if (t1 < t2 && t2 < value)
        return value - t2;
      return 0;
    },
    createBallisticSimulation$2(position, velocity) {
      var t1, t2, end, t3, _null = null,
        tolerance = this.toleranceFor$1(position);
      if (position.get$outOfRange()) {
        t1 = position._scroll_position$_pixels;
        t1.toString;
        t2 = position._scroll_position$_maxScrollExtent;
        t2.toString;
        if (t1 > t2)
          end = t2;
        else
          end = _null;
        t2 = position._scroll_position$_minScrollExtent;
        t2.toString;
        if (t1 < t2)
          end = t2;
        t1 = this.get$spring();
        t2 = position._scroll_position$_pixels;
        t2.toString;
        end.toString;
        return new A.ScrollSpringSimulation(end, A._SpringSolution__SpringSolution(t1, t2 - end, Math.min(0, velocity)), tolerance);
      }
      t1 = Math.abs(velocity);
      if (t1 < tolerance.velocity)
        return _null;
      if (velocity > 0) {
        t2 = position._scroll_position$_pixels;
        t2.toString;
        t3 = position._scroll_position$_maxScrollExtent;
        t3.toString;
        t3 = t2 >= t3;
        t2 = t3;
      } else
        t2 = false;
      if (t2)
        return _null;
      if (velocity < 0) {
        t2 = position._scroll_position$_pixels;
        t2.toString;
        t3 = position._scroll_position$_minScrollExtent;
        t3.toString;
        t3 = t2 <= t3;
        t2 = t3;
      } else
        t2 = false;
      if (t2)
        return _null;
      t2 = position._scroll_position$_pixels;
      t2.toString;
      t2 = new A.ClampingScrollSimulation(t2, velocity, tolerance);
      t3 = $.$get$ClampingScrollSimulation__kDecelerationRate();
      t1 = t3 * 0.35 * Math.pow(t1 / 2223.8657884799995, 1 / (t3 - 1));
      t2.__ClampingScrollSimulation__duration_A = t1;
      t2.__ClampingScrollSimulation__distance_A = velocity * t1 / t3;
      return t2;
    }
  };
  A.ScrollPositionAlignmentPolicy.prototype = {
    _enumToString$0() {
      return "ScrollPositionAlignmentPolicy." + this._name;
    }
  };
  A.ScrollPosition.prototype = {
    ScrollPosition$5$context$debugLabel$keepScrollOffset$oldPosition$physics(context, debugLabel, keepScrollOffset, oldPosition, physics) {
      var t1, t2, value, _this = this;
      if (oldPosition != null)
        _this.absorb$1(oldPosition);
      if (_this._scroll_position$_pixels == null) {
        t1 = _this.context;
        t2 = t1._element;
        t2.toString;
        t2 = A.PageStorage_maybeOf(t2);
        if (t2 == null)
          value = null;
        else {
          t1 = t1._element;
          t1.toString;
          value = t2.readState$1(t1);
        }
        if (value != null)
          _this._scroll_position$_pixels = value;
      }
    },
    get$minScrollExtent() {
      var t1 = this._scroll_position$_minScrollExtent;
      t1.toString;
      return t1;
    },
    get$maxScrollExtent() {
      var t1 = this._scroll_position$_maxScrollExtent;
      t1.toString;
      return t1;
    },
    get$hasContentDimensions() {
      return this._scroll_position$_minScrollExtent != null && this._scroll_position$_maxScrollExtent != null;
    },
    get$pixels() {
      var t1 = this._scroll_position$_pixels;
      t1.toString;
      return t1;
    },
    get$hasPixels() {
      return this._scroll_position$_pixels != null;
    },
    get$viewportDimension() {
      var t1 = this._viewportDimension;
      t1.toString;
      return t1;
    },
    get$hasViewportDimension() {
      return this._viewportDimension != null;
    },
    absorb$1(other) {
      var _this = this,
        t1 = other._scroll_position$_minScrollExtent;
      if (t1 != null && other._scroll_position$_maxScrollExtent != null) {
        _this._scroll_position$_minScrollExtent = t1;
        t1 = other._scroll_position$_maxScrollExtent;
        t1.toString;
        _this._scroll_position$_maxScrollExtent = t1;
      }
      t1 = other._scroll_position$_pixels;
      if (t1 != null)
        _this._scroll_position$_pixels = t1;
      t1 = other._viewportDimension;
      if (t1 != null)
        _this._viewportDimension = t1;
      _this._activity = other._activity;
      other._activity = null;
      if (A.getRuntimeTypeOfDartObject(other) !== A.getRuntimeTypeOfDartObject(_this))
        _this._activity.resetActivity$0();
      _this.context.setIgnorePointer$1(_this._activity.get$shouldIgnorePointer());
      _this.isScrollingNotifier.set$value(_this._activity.get$isScrolling());
    },
    get$devicePixelRatio() {
      var t1 = this.context,
        t2 = t1._element;
      t2.toString;
      t2 = A.MediaQuery__maybeOf(t2, B._MediaQueryAspect_2);
      t2 = t2 == null ? null : t2.devicePixelRatio;
      if (t2 == null) {
        t1 = t1._element;
        t1.toString;
        t1 = A.View_maybeOf(t1).get$_viewConfiguration().devicePixelRatio;
      } else
        t1 = t2;
      return t1;
    },
    setPixels$1(newPixels) {
      var result, t2, t3, _this = this,
        t1 = _this._scroll_position$_pixels;
      t1.toString;
      if (newPixels !== t1) {
        result = _this.physics.applyBoundaryConditions$2(_this, newPixels);
        t1 = _this._scroll_position$_pixels;
        t1.toString;
        t2 = newPixels - result;
        _this._scroll_position$_pixels = t2;
        if (t2 !== t1) {
          _this._updateSemanticActions$0();
          _this.super$ChangeNotifier$notifyListeners();
          t2 = _this._scroll_position$_pixels;
          t2.toString;
          _this.didUpdateScrollPositionBy$1(t2 - t1);
        }
        if (result !== 0) {
          t1 = _this._activity;
          t1.toString;
          t2 = _this.copyWith$0();
          t3 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, _this.context._gestureDetectorKey);
          t3.toString;
          t1.dispatchOverscrollNotification$3(t2, t3, result);
          return result;
        }
      }
      return 0;
    },
    forcePixels$1(value) {
      var _this = this;
      _this._scroll_position$_pixels.toString;
      _this._scroll_position$_pixels = value;
      _this._updateSemanticActions$0();
      _this.super$ChangeNotifier$notifyListeners();
      $.SchedulerBinding__instance.SchedulerBinding__postFrameCallbacks.push(new A.ScrollPosition_forcePixels_closure(_this));
    },
    applyContentDimensions$2(minScrollExtent, maxScrollExtent) {
      var currentMetrics, t1, _this = this;
      if (!A.nearEqual(_this._scroll_position$_minScrollExtent, minScrollExtent, 0.001) || !A.nearEqual(_this._scroll_position$_maxScrollExtent, maxScrollExtent, 0.001) || _this._didChangeViewportDimensionOrReceiveCorrection || _this._lastAxis !== A.axisDirectionToAxis(_this.get$axisDirection())) {
        _this._scroll_position$_minScrollExtent = minScrollExtent;
        _this._scroll_position$_maxScrollExtent = maxScrollExtent;
        _this._lastAxis = A.axisDirectionToAxis(_this.get$axisDirection());
        currentMetrics = _this._haveDimensions ? _this.copyWith$0() : null;
        _this._didChangeViewportDimensionOrReceiveCorrection = false;
        _this._pendingDimensions = true;
        if (_this._haveDimensions) {
          t1 = _this._scroll_position$_lastMetrics;
          t1.toString;
          currentMetrics.toString;
          t1 = !_this.correctForNewDimensions$2(t1, currentMetrics);
        } else
          t1 = false;
        if (t1)
          return false;
        _this._haveDimensions = true;
      }
      if (_this._pendingDimensions) {
        _this.super$ScrollPosition$applyNewDimensions();
        _this.context.setCanDrag$1(_this.physics.shouldAcceptUserOffset$1(_this));
        _this._pendingDimensions = false;
      }
      currentMetrics = _this.copyWith$0();
      t1 = _this._scroll_position$_lastMetrics;
      if (t1 != null)
        t1 = !(Math.max(currentMetrics.get$pixels() - currentMetrics.get$minScrollExtent(), 0) === Math.max(t1.get$pixels() - t1.get$minScrollExtent(), 0) && currentMetrics.get$extentInside() === t1.get$extentInside() && Math.max(currentMetrics.get$maxScrollExtent() - currentMetrics.get$pixels(), 0) === Math.max(t1.get$maxScrollExtent() - t1.get$pixels(), 0) && currentMetrics.axisDirection === t1.axisDirection);
      else
        t1 = true;
      if (t1) {
        if (!_this._haveScheduledUpdateNotification) {
          A.scheduleMicrotask(_this.get$didUpdateScrollMetrics());
          _this._haveScheduledUpdateNotification = true;
        }
        _this._scroll_position$_lastMetrics = _this.copyWith$0();
      }
      return true;
    },
    correctForNewDimensions$2(oldPosition, newPosition) {
      var _this = this,
        newPixels = _this.physics.adjustPositionForNewDimensions$4$isScrolling$newPosition$oldPosition$velocity(_this._activity.get$isScrolling(), newPosition, oldPosition, _this._activity.get$velocity()),
        t1 = _this._scroll_position$_pixels;
      t1.toString;
      if (newPixels !== t1) {
        _this._scroll_position$_pixels = newPixels;
        return false;
      }
      return true;
    },
    applyNewDimensions$0() {
      this._activity.applyNewDimensions$0();
      this._updateSemanticActions$0();
    },
    _updateSemanticActions$0() {
      var actions, t2, t3, _this = this,
        t1 = _this.context;
      t1._widget.toString;
      switch (2) {
        case 2:
          break;
      }
      actions = A.LinkedHashSet_LinkedHashSet$_empty(type$.SemanticsAction);
      t2 = _this._scroll_position$_pixels;
      t2.toString;
      t3 = _this._scroll_position$_minScrollExtent;
      t3.toString;
      if (t2 > t3)
        actions.add$1(0, B.SemanticsAction_32);
      t2 = _this._scroll_position$_pixels;
      t2.toString;
      t3 = _this._scroll_position$_maxScrollExtent;
      t3.toString;
      if (t2 < t3)
        actions.add$1(0, B.SemanticsAction_16);
      if (A.setEquals(actions, _this._semanticActions))
        return;
      _this._semanticActions = actions;
      t1 = t1._gestureDetectorKey;
      if (t1.get$currentState() != null)
        t1.get$currentState().replaceSemanticsActions$1(actions);
    },
    ensureVisible$6$alignment$alignmentPolicy$curve$duration$targetRenderObject(object, alignment, alignmentPolicy, curve, duration, targetRenderObject) {
      var targetRect, t1, t2, t3, target, _this = this, _null = null,
        viewport = A.RenderAbstractViewport_maybeOf(object);
      viewport.toString;
      targetRect = targetRenderObject != null && targetRenderObject !== object ? A.MatrixUtils_transformRect(targetRenderObject.getTransformTo$1(object), object.get$paintBounds().intersect$1(targetRenderObject.get$paintBounds())) : _null;
      switch (alignmentPolicy.index) {
        case 0:
          t1 = viewport.getOffsetToReveal$3$rect(object, alignment, targetRect);
          t2 = _this._scroll_position$_minScrollExtent;
          t2.toString;
          t3 = _this._scroll_position$_maxScrollExtent;
          t3.toString;
          target = A.clampDouble(t1.offset, t2, t3);
          break;
        case 1:
          t1 = viewport.getOffsetToReveal$3$rect(object, 1, targetRect);
          t2 = _this._scroll_position$_minScrollExtent;
          t2.toString;
          t3 = _this._scroll_position$_maxScrollExtent;
          t3.toString;
          target = A.clampDouble(t1.offset, t2, t3);
          t1 = _this._scroll_position$_pixels;
          t1.toString;
          if (target < t1)
            target = t1;
          break;
        case 2:
          t1 = viewport.getOffsetToReveal$3$rect(object, 0, targetRect);
          t2 = _this._scroll_position$_minScrollExtent;
          t2.toString;
          t3 = _this._scroll_position$_maxScrollExtent;
          t3.toString;
          target = A.clampDouble(t1.offset, t2, t3);
          t1 = _this._scroll_position$_pixels;
          t1.toString;
          if (target > t1)
            target = t1;
          break;
        default:
          target = _null;
      }
      t1 = _this._scroll_position$_pixels;
      t1.toString;
      if (target === t1)
        return A.Future_Future$value(_null, type$.void);
      if (duration._duration === 0) {
        _this.jumpTo$1(target);
        return A.Future_Future$value(_null, type$.void);
      }
      return _this.animateTo$3$curve$duration(target, curve, duration);
    },
    moveTo$3$curve$duration(to, curve, duration) {
      var t2,
        t1 = this._scroll_position$_minScrollExtent;
      t1.toString;
      t2 = this._scroll_position$_maxScrollExtent;
      t2.toString;
      to = A.clampDouble(to, t1, t2);
      return this.super$ViewportOffset$moveTo(to, curve, duration);
    },
    beginActivity$1(newActivity) {
      var oldIgnorePointer, wasScrolling, _this = this,
        t1 = _this._activity;
      if (t1 != null) {
        oldIgnorePointer = t1.get$shouldIgnorePointer();
        wasScrolling = _this._activity.get$isScrolling();
        if (wasScrolling && !newActivity.get$isScrolling())
          _this.didEndScroll$0();
        _this._activity.dispose$0();
      } else {
        wasScrolling = false;
        oldIgnorePointer = false;
      }
      _this._activity = newActivity;
      if (oldIgnorePointer !== newActivity.get$shouldIgnorePointer())
        _this.context.setIgnorePointer$1(_this._activity.get$shouldIgnorePointer());
      _this.isScrollingNotifier.set$value(_this._activity.get$isScrolling());
      if (!wasScrolling && _this._activity.get$isScrolling())
        _this.didStartScroll$0();
    },
    didStartScroll$0() {
      var t1 = this._activity;
      t1.toString;
      t1.dispatchScrollStartNotification$2(this.copyWith$0(), $.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, this.context._gestureDetectorKey));
    },
    didUpdateScrollPositionBy$1(delta) {
      var t2, t3,
        t1 = this._activity;
      t1.toString;
      t2 = this.copyWith$0();
      t3 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, this.context._gestureDetectorKey);
      t3.toString;
      t1.dispatchScrollUpdateNotification$3(t2, t3, delta);
    },
    didEndScroll$0() {
      var t2, t3, t4, _this = this,
        t1 = _this._activity;
      t1.toString;
      t2 = _this.copyWith$0();
      t3 = _this.context;
      t4 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, t3._gestureDetectorKey);
      t4.toString;
      t1.dispatchScrollEndNotification$2(t2, t4);
      t4 = _this._scroll_position$_pixels;
      t4.toString;
      t3._persistedScrollOffset.set$value(t4);
      t4 = $.ServicesBinding__instance.ServicesBinding___ServicesBinding__restorationManager_A;
      t4 === $ && A.throwUnnamedLateFieldNI();
      t4.flushData$0();
      t1 = t3._element;
      t1.toString;
      t1 = A.PageStorage_maybeOf(t1);
      if (t1 != null) {
        t2 = t3._element;
        t2.toString;
        t3 = _this._scroll_position$_pixels;
        t3.toString;
        if (t1._storage == null)
          t1._storage = A.LinkedHashMap_LinkedHashMap$_empty(type$.Object, type$.dynamic);
        t2 = t1._allKeys$1(t2);
        if (t2.length !== 0)
          t1._storage.$indexSet(0, new A._StorageEntryIdentifier(t2), t3);
      }
    },
    didUpdateScrollMetrics$0() {
      var t1, t2, t3;
      this._haveScheduledUpdateNotification = false;
      t1 = this.context._gestureDetectorKey;
      if ($.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, t1) != null) {
        t2 = this.copyWith$0();
        t3 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, t1);
        t3.toString;
        t1 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, t1);
        if (t1 != null)
          t1.dispatchNotification$1(new A.ScrollMetricsNotification(t2, t3, 0));
      }
    },
    dispose$0() {
      var _this = this,
        t1 = _this._activity;
      if (t1 != null)
        t1.dispose$0();
      _this._activity = null;
      t1 = _this.isScrollingNotifier;
      t1.ChangeNotifier__listeners = $.$get$ChangeNotifier__emptyListeners();
      t1.ChangeNotifier__count = 0;
      _this.super$ChangeNotifier$dispose();
    },
    debugFillDescription$1(description) {
      var t1, t2, _this = this;
      _this.super$ViewportOffset$debugFillDescription(description);
      t1 = _this._scroll_position$_minScrollExtent;
      t1 = t1 == null ? null : B.JSInt_methods.toStringAsFixed$1(t1, 1);
      t2 = _this._scroll_position$_maxScrollExtent;
      t2 = t2 == null ? null : B.JSNumber_methods.toStringAsFixed$1(t2, 1);
      description.push("range: " + A.S(t1) + ".." + A.S(t2));
      t2 = _this._viewportDimension;
      description.push("viewport: " + A.S(t2 == null ? null : B.JSNumber_methods.toStringAsFixed$1(t2, 1)));
    }
  };
  A.ScrollPosition_forcePixels_closure.prototype = {
    call$1(timeStamp) {
    },
    $signature: 1
  };
  A.ScrollMetricsNotification.prototype = {
    debugFillDescription$1(description) {
      this.super$_ScrollMetricsNotification_Notification_ViewportNotificationMixin$debugFillDescription(description);
      description.push(this.metrics.toString$0(0));
    }
  };
  A._ScrollMetricsNotification_Notification_ViewportNotificationMixin.prototype = {
    debugFillDescription$1(description) {
      var t1, t2;
      this.super$Notification$debugFillDescription(description);
      t1 = this.ViewportNotificationMixin__depth;
      t2 = t1 === 0 ? "local" : "remote";
      description.push("depth: " + t1 + " (" + t2 + ")");
    }
  };
  A._ScrollPosition_ViewportOffset_ScrollMetrics.prototype = {};
  A.ScrollPositionWithSingleContext.prototype = {
    ScrollPositionWithSingleContext$6$context$debugLabel$initialPixels$keepScrollOffset$oldPosition$physics(context, debugLabel, initialPixels, keepScrollOffset, oldPosition, physics) {
      var _this = this,
        t1 = _this._scroll_position$_pixels;
      if (t1 == null)
        _this._scroll_position$_pixels = initialPixels;
      if (_this._activity == null)
        _this.beginActivity$1(new A.IdleScrollActivity(_this));
    },
    get$axisDirection() {
      this.context._widget.toString;
      return B.AxisDirection_2;
    },
    absorb$1(other) {
      var t1, _this = this;
      _this.super$ScrollPosition$absorb(other);
      _this._activity._delegate = _this;
      _this._userScrollDirection = other._userScrollDirection;
      t1 = other._currentDrag;
      if (t1 != null) {
        _this._currentDrag = t1;
        t1._delegate = _this;
        other._currentDrag = null;
      }
    },
    beginActivity$1(newActivity) {
      var t1, _this = this;
      _this._heldPreviousVelocity = 0;
      _this.super$ScrollPosition$beginActivity(newActivity);
      t1 = _this._currentDrag;
      if (t1 != null)
        t1.dispose$0();
      _this._currentDrag = null;
      if (!_this._activity.get$isScrolling())
        _this.updateUserScrollDirection$1(B.ScrollDirection_0);
    },
    goBallistic$1(velocity) {
      var t1, t2, t3, _this = this,
        simulation = _this.physics.createBallisticSimulation$2(_this, velocity);
      if (simulation != null) {
        t1 = _this._activity;
        t1 = t1 == null ? null : t1.get$shouldIgnorePointer();
        t1 = new A.BallisticScrollActivity(t1 !== false, _this);
        t2 = A.AnimationController$unbounded(null, 0, _this.context);
        t2.didRegisterListener$0();
        t3 = t2.AnimationLocalListenersMixin__listeners;
        t3._isDirty = true;
        t3._observer_list$_list.push(t1.get$_scroll_activity$_tick());
        t2.stop$0();
        t2._direction = B._AnimationDirection_0;
        t2._startSimulation$1(simulation)._primaryCompleter.future.whenComplete$1(t1.get$_scroll_activity$_end());
        t1.__BallisticScrollActivity__controller_A = t2;
        _this.beginActivity$1(t1);
      } else
        _this.beginActivity$1(new A.IdleScrollActivity(_this));
    },
    updateUserScrollDirection$1(value) {
      var t1, t2, t3, _this = this;
      if (_this._userScrollDirection === value)
        return;
      _this._userScrollDirection = value;
      t1 = _this.copyWith$0();
      t2 = _this.context._gestureDetectorKey;
      t3 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, t2);
      t3.toString;
      t2 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, t2);
      if (t2 != null)
        t2.dispatchNotification$1(new A.UserScrollNotification(value, t1, t3, 0));
    },
    animateTo$3$curve$duration(to, curve, duration) {
      var activity, t2, t3, _this = this,
        t1 = _this._scroll_position$_pixels;
      t1.toString;
      if (A.nearEqual(to, t1, _this.physics.toleranceFor$1(_this).distance)) {
        _this.jumpTo$1(to);
        return A.Future_Future$value(null, type$.void);
      }
      t1 = _this._scroll_position$_pixels;
      t1.toString;
      activity = new A.DrivenScrollActivity(_this);
      t2 = new A._Future($.Zone__current, type$._Future_void);
      activity.__DrivenScrollActivity__completer_F = new A._AsyncCompleter(t2, type$._AsyncCompleter_void);
      t1 = A.AnimationController$unbounded("DrivenScrollActivity", t1, _this.context);
      t1.didRegisterListener$0();
      t3 = t1.AnimationLocalListenersMixin__listeners;
      t3._isDirty = true;
      t3._observer_list$_list.push(activity.get$_scroll_activity$_tick());
      t1._direction = B._AnimationDirection_0;
      t1._animateToInternal$3$curve$duration(to, curve, duration)._primaryCompleter.future.whenComplete$1(activity.get$_scroll_activity$_end());
      activity.__DrivenScrollActivity__controller_F !== $ && A.throwUnnamedLateFieldAI();
      activity.__DrivenScrollActivity__controller_F = t1;
      _this.beginActivity$1(activity);
      return t2;
    },
    jumpTo$1(value) {
      var t1, t2, _this = this;
      _this.beginActivity$1(new A.IdleScrollActivity(_this));
      t1 = _this._scroll_position$_pixels;
      t1.toString;
      if (t1 !== value) {
        _this.forcePixels$1(value);
        _this.didStartScroll$0();
        t2 = _this._scroll_position$_pixels;
        t2.toString;
        _this.didUpdateScrollPositionBy$1(t2 - t1);
        _this.didEndScroll$0();
      }
      _this.goBallistic$1(0);
    },
    pointerScroll$1(delta) {
      var t1, t2, t3, targetPixels, _this = this;
      if (delta === 0) {
        _this.goBallistic$1(0);
        return;
      }
      t1 = _this._scroll_position$_pixels;
      t1.toString;
      t2 = _this._scroll_position$_minScrollExtent;
      t2.toString;
      t2 = Math.max(t1 + delta, t2);
      t3 = _this._scroll_position$_maxScrollExtent;
      t3.toString;
      targetPixels = Math.min(t2, t3);
      if (targetPixels !== t1) {
        _this.beginActivity$1(new A.IdleScrollActivity(_this));
        _this.updateUserScrollDirection$1(-delta > 0 ? B.ScrollDirection_1 : B.ScrollDirection_2);
        t1 = _this._scroll_position$_pixels;
        t1.toString;
        _this.isScrollingNotifier.set$value(true);
        _this.forcePixels$1(targetPixels);
        _this.didStartScroll$0();
        t2 = _this._scroll_position$_pixels;
        t2.toString;
        _this.didUpdateScrollPositionBy$1(t2 - t1);
        _this.didEndScroll$0();
        _this.goBallistic$1(0);
      }
    },
    dispose$0() {
      var t1 = this._currentDrag;
      if (t1 != null)
        t1.dispose$0();
      this._currentDrag = null;
      this.super$ScrollPosition$dispose();
    }
  };
  A.BouncingScrollSimulation.prototype = {
    _scroll_simulation$_simulation$1(time) {
      var simulation, _this = this,
        t1 = _this.__BouncingScrollSimulation__springTime_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      if (time > t1) {
        if (!isFinite(t1))
          t1 = 0;
        _this._timeOffset = t1;
        t1 = _this.__BouncingScrollSimulation__springSimulation_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
        simulation = t1;
      } else {
        _this._timeOffset = 0;
        t1 = _this.__BouncingScrollSimulation__frictionSimulation_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
        simulation = t1;
      }
      simulation.tolerance = _this.tolerance;
      return simulation;
    },
    x$1(time) {
      return this._scroll_simulation$_simulation$1(time).x$1(time - this._timeOffset);
    },
    dx$1(time) {
      return this._scroll_simulation$_simulation$1(time).dx$1(time - this._timeOffset);
    },
    isDone$1(time) {
      return this._scroll_simulation$_simulation$1(time).isDone$1(time - this._timeOffset);
    },
    toString$0(_) {
      return "BouncingScrollSimulation(leadingExtent: " + this.leadingExtent + ", trailingExtent: " + A.S(this.trailingExtent) + ")";
    }
  };
  A.ClampingScrollSimulation.prototype = {
    x$1(time) {
      var t,
        t1 = this.__ClampingScrollSimulation__duration_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t = A.clampDouble(time / t1, 0, 1);
      t1 = this.__ClampingScrollSimulation__distance_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      return this.position + t1 * (1 - Math.pow(1 - t, $.$get$ClampingScrollSimulation__kDecelerationRate()));
    },
    dx$1(time) {
      var t1 = this.__ClampingScrollSimulation__duration_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      return this.velocity * Math.pow(1 - A.clampDouble(time / t1, 0, 1), $.$get$ClampingScrollSimulation__kDecelerationRate() - 1);
    },
    isDone$1(time) {
      var t1 = this.__ClampingScrollSimulation__duration_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      return time >= t1;
    }
  };
  A._ScrollableState_State_TickerProviderStateMixin_RestorationMixin_dispose_closure.prototype = {
    call$2(property, listener) {
      if (!property._disposed)
        property.removeListener$1(listener);
    },
    $signature: 23
  };
  A.Scrollable.prototype = {
    createState$0() {
      return A.ScrollableState$();
    },
    viewportBuilder$2(arg0, arg1) {
      return this.viewportBuilder.call$2(arg0, arg1);
    }
  };
  A._ScrollableScope.prototype = {
    updateShouldNotify$1(old) {
      return this.position !== old.position;
    }
  };
  A.ScrollableState.prototype = {
    get$_effectiveScrollController() {
      var t1 = this._widget.controller;
      if (t1 == null) {
        t1 = this._fallbackScrollController;
        t1.toString;
      }
      return t1;
    },
    _updatePosition$0() {
      var t2, oldPosition, _this = this,
        t1 = _this._widget.scrollBehavior;
      _this.__ScrollableState__configuration_A = t1;
      t2 = _this._element;
      t2.toString;
      t2 = t1.getScrollPhysics$1(t2);
      _this._physics = t2;
      _this._physics = new A.FixedExtentScrollPhysics(_this._widget.physics.buildParent$1(t2));
      oldPosition = _this._scrollable$_position;
      if (oldPosition != null) {
        _this.get$_effectiveScrollController().detach$1(oldPosition);
        A.scheduleMicrotask(oldPosition.get$dispose());
      }
      t1 = _this.get$_effectiveScrollController();
      t2 = _this._physics;
      t2.toString;
      t2 = t1.createScrollPosition$3(t2, _this, oldPosition);
      _this._scrollable$_position = t2;
      _this.get$_effectiveScrollController().attach$1(t2);
    },
    restoreState$2(oldBucket, initialRestore) {
      var t2, t3, t4,
        t1 = this._persistedScrollOffset;
      this.registerForRestoration$2(t1, "offset");
      t2 = t1._restoration_properties$_value;
      t3 = t2 == null;
      if ((t3 ? A._instanceType(t1)._eval$1("RestorableValue.T")._as(t2) : t2) != null) {
        t4 = this._scrollable$_position;
        t4.toString;
        t1 = t3 ? A._instanceType(t1)._eval$1("RestorableValue.T")._as(t2) : t2;
        t1.toString;
        if (initialRestore)
          t4._scroll_position$_pixels = t1;
        else
          t4.jumpTo$1(t1);
      }
    },
    initState$0() {
      if (this._widget.controller == null)
        this._fallbackScrollController = A.ScrollController$();
      this.super$State$initState();
    },
    didChangeDependencies$0() {
      var _this = this,
        t1 = _this._element;
      t1.toString;
      t1 = A.MediaQuery__maybeOf(t1, B._MediaQueryAspect_16);
      _this._mediaQueryGestureSettings = t1 == null ? null : t1.gestureSettings;
      _this._updatePosition$0();
      _this.super$_ScrollableState_State_TickerProviderStateMixin_RestorationMixin$didChangeDependencies();
    },
    _shouldUpdatePosition$1(oldWidget) {
      var t1, t2, t3, _null = null,
        newPhysics = this._widget.physics,
        oldPhysics = oldWidget.physics;
      do {
        t1 = newPhysics == null;
        t2 = t1 ? _null : A.getRuntimeTypeOfDartObject(newPhysics);
        t3 = oldPhysics == null;
        if (t2 != (t3 ? _null : A.getRuntimeTypeOfDartObject(oldPhysics)))
          return true;
        newPhysics = t1 ? _null : newPhysics.parent;
        oldPhysics = t3 ? _null : oldPhysics.parent;
      } while (newPhysics != null || oldPhysics != null);
      t1 = this._widget.controller;
      t1 = t1 == null ? _null : A.getRuntimeTypeOfDartObject(t1);
      t2 = oldWidget.controller;
      return t1 != (t2 == null ? _null : A.getRuntimeTypeOfDartObject(t2));
    },
    didUpdateWidget$1(oldWidget) {
      var t1, t2, _this = this;
      _this.super$_ScrollableState_State_TickerProviderStateMixin_RestorationMixin$didUpdateWidget(oldWidget);
      t1 = oldWidget.controller;
      if (_this._widget.controller != t1) {
        if (t1 == null) {
          t1 = _this._fallbackScrollController;
          t1.toString;
          t2 = _this._scrollable$_position;
          t2.toString;
          t1.detach$1(t2);
          _this._fallbackScrollController.dispose$0();
          _this._fallbackScrollController = null;
        } else {
          t2 = _this._scrollable$_position;
          t2.toString;
          t1.detach$1(t2);
          if (_this._widget.controller == null)
            _this._fallbackScrollController = A.ScrollController$();
        }
        t1 = _this.get$_effectiveScrollController();
        t2 = _this._scrollable$_position;
        t2.toString;
        t1.attach$1(t2);
      }
      if (_this._shouldUpdatePosition$1(oldWidget))
        _this._updatePosition$0();
    },
    dispose$0() {
      var t2, _this = this,
        t1 = _this._widget.controller;
      if (t1 != null) {
        t2 = _this._scrollable$_position;
        t2.toString;
        t1.detach$1(t2);
      } else {
        t1 = _this._fallbackScrollController;
        if (t1 != null) {
          t2 = _this._scrollable$_position;
          t2.toString;
          t1.detach$1(t2);
        }
        t1 = _this._fallbackScrollController;
        if (t1 != null)
          t1.dispose$0();
      }
      _this._scrollable$_position.dispose$0();
      _this._persistedScrollOffset.dispose$0();
      _this.super$_ScrollableState_State_TickerProviderStateMixin_RestorationMixin$dispose();
    },
    setCanDrag$1(value) {
      var t1, t2, _this = this;
      if (value === _this._lastCanDrag)
        if (value) {
          _this._widget.toString;
          t1 = A.axisDirectionToAxis(B.AxisDirection_2) === _this._scrollable$_lastAxisDirection;
        } else
          t1 = true;
      else
        t1 = false;
      if (t1)
        return;
      if (!value) {
        _this._gestureRecognizers = B.Map_empty1;
        _this._scrollable$_handleDragCancel$0();
      } else {
        _this._widget.toString;
        switch (A.axisDirectionToAxis(B.AxisDirection_2).index) {
          case 1:
            _this._gestureRecognizers = A.LinkedHashMap_LinkedHashMap$_literal([B.Type_yGg, new A.GestureRecognizerFactoryWithHandlers(new A.ScrollableState_setCanDrag_closure(_this), new A.ScrollableState_setCanDrag_closure0(_this), type$.GestureRecognizerFactoryWithHandlers_VerticalDragGestureRecognizer)], type$.Type, type$.GestureRecognizerFactory_GestureRecognizer);
            break;
          case 0:
            _this._gestureRecognizers = A.LinkedHashMap_LinkedHashMap$_literal([B.Type_btT, new A.GestureRecognizerFactoryWithHandlers(new A.ScrollableState_setCanDrag_closure1(_this), new A.ScrollableState_setCanDrag_closure2(_this), type$.GestureRecognizerFactoryWithHandlers_HorizontalDragGestureRecognizer)], type$.Type, type$.GestureRecognizerFactory_GestureRecognizer);
            break;
        }
        value = true;
      }
      _this._lastCanDrag = value;
      _this._widget.toString;
      _this._scrollable$_lastAxisDirection = A.axisDirectionToAxis(B.AxisDirection_2);
      t1 = _this._gestureDetectorKey;
      if (t1.get$currentState() != null) {
        t1 = t1.get$currentState();
        t1._syncAll$1(_this._gestureRecognizers);
        if (!t1._widget.excludeFromSemantics) {
          t2 = t1._element.get$renderObject();
          t2.toString;
          type$.RenderSemanticsGestureHandler._as(t2);
          t1._gesture_detector$_semantics.assignSemantics$1(t2);
        }
      }
    },
    setIgnorePointer$1(value) {
      var t1, _this = this;
      if (_this._shouldIgnorePointer === value)
        return;
      _this._shouldIgnorePointer = value;
      t1 = _this._ignorePointerKey;
      if ($.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, t1) != null) {
        t1 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, t1).get$renderObject();
        t1.toString;
        type$.RenderIgnorePointer._as(t1).set$ignoring(_this._shouldIgnorePointer);
      }
    },
    _handleDragDown$1(details) {
      var t1 = this._scrollable$_position,
        previousVelocity = t1._activity.get$velocity(),
        holdActivity = new A.HoldScrollActivity(this.get$_disposeHold(), t1);
      t1.beginActivity$1(holdActivity);
      t1._heldPreviousVelocity = previousVelocity;
      this._hold = holdActivity;
    },
    _scrollable$_handleDragStart$1(details) {
      var t4, drag,
        t1 = this._scrollable$_position,
        t2 = t1.physics,
        t3 = t2.carriedMomentum$1(t1._heldPreviousVelocity);
      t2 = t2.get$dragStartDistanceMotionThreshold();
      t4 = t2 == null ? null : 0;
      drag = new A.ScrollDragController(t1, this.get$_disposeDrag(), t3, t2, details.sourceTimeStamp, t3 !== 0, t4, details.kind, details);
      t1.beginActivity$1(new A.DragScrollActivity(drag, t1));
      this._scrollable$_drag = t1._currentDrag = drag;
    },
    _scrollable$_handleDragUpdate$1(details) {
      var t1 = this._scrollable$_drag;
      if (t1 != null)
        t1.update$1(details);
    },
    _scrollable$_handleDragEnd$1(details) {
      var t2, velocity, t3, isVelocityNotSubstantiallyLessThanCarriedMomentum,
        t1 = this._scrollable$_drag;
      if (t1 != null) {
        t2 = details.primaryVelocity;
        t2.toString;
        velocity = -t2;
        t1._delegate.context._widget.toString;
        if (A.axisDirectionIsReversed(B.AxisDirection_2))
          velocity = -velocity;
        t1._lastDetails = details;
        if (t1._retainMomentum) {
          t2 = J.get$sign$in(velocity);
          t3 = t1.carriedVelocity;
          isVelocityNotSubstantiallyLessThanCarriedMomentum = Math.abs(velocity) > Math.abs(t3) * 0.5;
          if (t2 === J.get$sign$in(t3) && isVelocityNotSubstantiallyLessThanCarriedMomentum)
            velocity += t3;
        }
        t1._delegate.goBallistic$1(velocity);
      }
    },
    _scrollable$_handleDragCancel$0() {
      if ($.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, this._gestureDetectorKey) == null)
        return;
      var t1 = this._hold;
      if (t1 != null)
        t1._delegate.goBallistic$1(0);
      t1 = this._scrollable$_drag;
      if (t1 != null)
        t1._delegate.goBallistic$1(0);
    },
    _disposeHold$0() {
      this._hold = null;
    },
    _disposeDrag$0() {
      this._scrollable$_drag = null;
    },
    _targetScrollOffsetForPointerScroll$1(delta) {
      var t3,
        t1 = this._scrollable$_position,
        t2 = t1._scroll_position$_pixels;
      t2.toString;
      t3 = t1._scroll_position$_minScrollExtent;
      t3.toString;
      t3 = Math.max(t2 + delta, t3);
      t1 = t1._scroll_position$_maxScrollExtent;
      t1.toString;
      return Math.min(t3, t1);
    },
    _pointerSignalEventDelta$1($event) {
      var t2, pressed, flipAxes,
        delta = A._Cell$(),
        t1 = $.ServicesBinding__instance.ServicesBinding___ServicesBinding__keyboard_F;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1 = t1._pressedKeys;
      t2 = A._instanceType(t1)._eval$1("LinkedHashMapValuesIterable<2>");
      pressed = A.LinkedHashSet_LinkedHashSet$of(new A.LinkedHashMapValuesIterable(t1, t2), t2._eval$1("Iterable.E"));
      t1 = this.__ScrollableState__configuration_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1 = t1.get$pointerAxisModifiers();
      flipAxes = pressed.any$1(0, t1.get$contains(t1)) && $event.get$kind() === B.PointerDeviceKind_1;
      this._widget.toString;
      switch (A.axisDirectionToAxis(B.AxisDirection_2).index) {
        case 0:
          delta.__late_helper$_value = flipAxes ? $event.get$scrollDelta()._dy : $event.get$scrollDelta()._dx;
          break;
        case 1:
          delta.__late_helper$_value = flipAxes ? $event.get$scrollDelta()._dx : $event.get$scrollDelta()._dy;
          break;
      }
      this._widget.toString;
      if (A.axisDirectionIsReversed(B.AxisDirection_2))
        delta.__late_helper$_value = delta._readLocal$0() * -1;
      return delta._readLocal$0();
    },
    _receivedPointerSignal$1($event) {
      var t1, t2, delta, targetScrollOffset, _this = this;
      if (type$.PointerScrollEvent._is($event) && _this._scrollable$_position != null) {
        t1 = _this._physics;
        if (t1 != null) {
          t2 = _this._scrollable$_position;
          t2.toString;
          t2 = !t1.shouldAcceptUserOffset$1(t2);
          t1 = t2;
        } else
          t1 = false;
        if (t1)
          return;
        delta = _this._pointerSignalEventDelta$1($event);
        targetScrollOffset = _this._targetScrollOffsetForPointerScroll$1(delta);
        if (delta !== 0) {
          t1 = _this._scrollable$_position._scroll_position$_pixels;
          t1.toString;
          t1 = targetScrollOffset !== t1;
        } else
          t1 = false;
        if (t1)
          $.GestureBinding__instance.GestureBinding_pointerSignalResolver.register$2($event, _this.get$_handlePointerScroll());
      } else if (type$.PointerScrollInertiaCancelEvent._is($event))
        _this._scrollable$_position.pointerScroll$1(0);
    },
    _handlePointerScroll$1($event) {
      var t1, _this = this,
        delta = _this._pointerSignalEventDelta$1($event),
        targetScrollOffset = _this._targetScrollOffsetForPointerScroll$1(delta);
      if (delta !== 0) {
        t1 = _this._scrollable$_position._scroll_position$_pixels;
        t1.toString;
        t1 = targetScrollOffset !== t1;
      } else
        t1 = false;
      if (t1)
        _this._scrollable$_position.pointerScroll$1(delta);
    },
    _handleScrollMetricsNotification$1(notification) {
      var t1, scrollSemanticsRenderObject;
      if (notification.ViewportNotificationMixin__depth === 0) {
        t1 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, this._scrollSemanticsKey);
        scrollSemanticsRenderObject = t1 == null ? null : t1.get$renderObject();
        if (scrollSemanticsRenderObject != null)
          scrollSemanticsRenderObject.markNeedsSemanticsUpdate$0();
      }
      return false;
    },
    build$1(context) {
      var t2, t3, details, t4, result, registrar, _this = this, _null = null,
        t1 = _this._scrollable$_position;
      t1.toString;
      t2 = _this._gestureRecognizers;
      t3 = _this._widget;
      t2 = A.Listener$(B.HitTestBehavior_0, new A.RawGestureDetector(A.Semantics$(_null, _null, new A.IgnorePointer(_this._shouldIgnorePointer, false, t3.viewportBuilder$2(context, t1), _this._ignorePointerKey), false, _null, false, true, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null), t2, B.HitTestBehavior_1, false, _this._gestureDetectorKey), _null, _null, _null, _this.get$_receivedPointerSignal(), _null);
      _this._widget.toString;
      t3 = _this._scrollable$_position;
      t3.toString;
      _this._physics.toString;
      details = new A.ScrollableDetails(B.AxisDirection_2, _this.get$_effectiveScrollController(), B.Clip_1);
      t4 = _this.__ScrollableState__configuration_A;
      t4 === $ && A.throwUnnamedLateFieldNI();
      result = t4.buildScrollbar$3(context, t4.buildOverscrollIndicator$3(context, new A.NotificationListener(_this.get$_handleScrollMetricsNotification(), new A._ScrollSemantics(t3, true, _null, new A._ScrollableScope(_this, t1, t2, _null), _this._scrollSemanticsKey), _null, type$.NotificationListener_ScrollMetricsNotification), details), details);
      registrar = A.SelectionContainer_maybeOf(context);
      if (registrar != null) {
        t1 = _this._scrollable$_position;
        t1.toString;
        result = new A._ScrollableSelectionHandler(_this, t1, result, registrar, _null);
      }
      return result;
    },
    get$restorationId() {
      return this._widget.restorationId;
    }
  };
  A.ScrollableState_setCanDrag_closure.prototype = {
    call$0() {
      var t1 = this.$this.__ScrollableState__configuration_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      return A.VerticalDragGestureRecognizer$(null, t1.get$dragDevices());
    },
    $signature: 93
  };
  A.ScrollableState_setCanDrag_closure0.prototype = {
    call$1(instance) {
      var t2, t3,
        t1 = this.$this;
      instance.onDown = t1.get$_handleDragDown();
      instance.onStart = t1.get$_scrollable$_handleDragStart();
      instance.onUpdate = t1.get$_scrollable$_handleDragUpdate();
      instance.onEnd = t1.get$_scrollable$_handleDragEnd();
      instance.onCancel = t1.get$_scrollable$_handleDragCancel();
      t2 = t1._physics;
      t3 = t2 == null;
      instance.minFlingDistance = t3 ? null : t2.get$minFlingDistance();
      instance.minFlingVelocity = t3 ? null : t2.get$minFlingVelocity();
      t2 = t1._physics;
      instance.maxFlingVelocity = t2 == null ? null : t2.get$maxFlingVelocity();
      t2 = t1.__ScrollableState__configuration_A;
      t2 === $ && A.throwUnnamedLateFieldNI();
      t3 = t1._element;
      t3.toString;
      instance.velocityTrackerBuilder = t2.velocityTrackerBuilder$1(t3);
      t1._widget.toString;
      instance.dragStartBehavior = B.DragStartBehavior_1;
      instance.gestureSettings = t1._mediaQueryGestureSettings;
      instance.supportedDevices = t1.__ScrollableState__configuration_A.get$dragDevices();
    },
    $signature: 94
  };
  A.ScrollableState_setCanDrag_closure1.prototype = {
    call$0() {
      var t1 = this.$this.__ScrollableState__configuration_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      return A.HorizontalDragGestureRecognizer$(null, t1.get$dragDevices());
    },
    $signature: 95
  };
  A.ScrollableState_setCanDrag_closure2.prototype = {
    call$1(instance) {
      var t2, t3,
        t1 = this.$this;
      instance.onDown = t1.get$_handleDragDown();
      instance.onStart = t1.get$_scrollable$_handleDragStart();
      instance.onUpdate = t1.get$_scrollable$_handleDragUpdate();
      instance.onEnd = t1.get$_scrollable$_handleDragEnd();
      instance.onCancel = t1.get$_scrollable$_handleDragCancel();
      t2 = t1._physics;
      t3 = t2 == null;
      instance.minFlingDistance = t3 ? null : t2.get$minFlingDistance();
      instance.minFlingVelocity = t3 ? null : t2.get$minFlingVelocity();
      t2 = t1._physics;
      instance.maxFlingVelocity = t2 == null ? null : t2.get$maxFlingVelocity();
      t2 = t1.__ScrollableState__configuration_A;
      t2 === $ && A.throwUnnamedLateFieldNI();
      t3 = t1._element;
      t3.toString;
      instance.velocityTrackerBuilder = t2.velocityTrackerBuilder$1(t3);
      t1._widget.toString;
      instance.dragStartBehavior = B.DragStartBehavior_1;
      instance.gestureSettings = t1._mediaQueryGestureSettings;
      instance.supportedDevices = t1.__ScrollableState__configuration_A.get$dragDevices();
    },
    $signature: 96
  };
  A._ScrollableSelectionHandler.prototype = {
    createState$0() {
      return new A._ScrollableSelectionHandlerState();
    }
  };
  A._ScrollableSelectionHandlerState.prototype = {
    initState$0() {
      var t1, t2, t3, t4;
      this.super$State$initState();
      t1 = this._widget;
      t2 = t1.state;
      t1 = t1.position;
      t3 = type$.Selectable;
      t4 = type$.double;
      t3 = new A._ScrollableSelectionContainerDelegate(t2, new A.EdgeDraggingAutoScroller(t2, 30), t1, A.LinkedHashMap_LinkedHashMap$_empty(t3, t4), A.LinkedHashMap_LinkedHashMap$_empty(t3, t4), A._setArrayType([], type$.JSArray_Selectable), A.LinkedHashSet_LinkedHashSet$_empty(t3), B.SelectionGeometry_lFP, $.$get$ChangeNotifier__emptyListeners());
      t1.addListener$1(t3.get$_scheduleLayoutChange());
      this.___ScrollableSelectionHandlerState__selectionDelegate_A = t3;
    },
    didUpdateWidget$1(oldWidget) {
      var t1, t2;
      this.super$State$didUpdateWidget(oldWidget);
      t1 = this._widget.position;
      if (oldWidget.position !== t1) {
        t2 = this.___ScrollableSelectionHandlerState__selectionDelegate_A;
        t2 === $ && A.throwUnnamedLateFieldNI();
        t2.set$position(t1);
      }
    },
    dispose$0() {
      var t1 = this.___ScrollableSelectionHandlerState__selectionDelegate_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.dispose$0();
      this.super$State$dispose();
    },
    build$1(context) {
      var t1 = this._widget,
        t2 = t1.registrar,
        t3 = this.___ScrollableSelectionHandlerState__selectionDelegate_A;
      t3 === $ && A.throwUnnamedLateFieldNI();
      return new A.SelectionContainer(t2, t1.child, t3, null);
    }
  };
  A.EdgeDraggingAutoScroller.prototype = {
    _offsetExtent$2(offset, scrollDirection) {
      switch (scrollDirection.index) {
        case 0:
          return offset._dx;
        case 1:
          return offset._dy;
      }
    },
    _sizeExtent$2(size, scrollDirection) {
      switch (scrollDirection.index) {
        case 0:
          return size._dx;
        case 1:
          return size._dy;
      }
    },
    startAutoScrollIfNecessary$1(dragTarget) {
      var _this = this,
        deltaToOrigin = A._getDeltaToScrollOrigin(_this.scrollable);
      _this.__EdgeDraggingAutoScroller__dragTargetRelatedToScrollOrigin_A = dragTarget.translate$2(deltaToOrigin._dx, deltaToOrigin._dy);
      if (_this._scrolling)
        return;
      _this._scroll$0();
    },
    _scroll$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, t3, globalRect, deltaToOrigin, viewportStart, viewportEnd, proxyStart, proxyEnd, newOffset, overDrag, duration, t1, t2;
      var $async$_scroll$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.scrollable;
              t2 = t1._element.get$renderObject();
              t2.toString;
              type$.RenderBox._as(t2);
              t3 = t2.getTransformTo$1(null);
              t2 = t2._size;
              globalRect = A.MatrixUtils_transformRect(t3, new A.Rect(0, 0, 0 + t2._dx, 0 + t2._dy));
              $async$self._scrolling = true;
              deltaToOrigin = A._getDeltaToScrollOrigin(t1);
              t2 = globalRect.left;
              t3 = globalRect.top;
              t1._widget.toString;
              viewportStart = $async$self._offsetExtent$2(new A.Offset(t2 + deltaToOrigin._dx, t3 + deltaToOrigin._dy), A.axisDirectionToAxis(B.AxisDirection_2));
              viewportEnd = viewportStart + $async$self._sizeExtent$2(new A.Size(globalRect.right - t2, globalRect.bottom - t3), A.axisDirectionToAxis(B.AxisDirection_2));
              t3 = $async$self.__EdgeDraggingAutoScroller__dragTargetRelatedToScrollOrigin_A;
              t3 === $ && A.throwUnnamedLateFieldNI();
              proxyStart = $async$self._offsetExtent$2(new A.Offset(t3.left, t3.top), A.axisDirectionToAxis(B.AxisDirection_2));
              proxyEnd = $async$self._offsetExtent$2(new A.Offset(t3.right, t3.bottom), A.axisDirectionToAxis(B.AxisDirection_2));
              newOffset = null;
              switch (2) {
                case 1:
                case 2:
                  if (proxyStart < viewportStart) {
                    t2 = t1._scrollable$_position;
                    t3 = t2._scroll_position$_pixels;
                    t3.toString;
                    t2 = t2._scroll_position$_minScrollExtent;
                    t2.toString;
                    t2 = t3 > t2;
                  } else
                    t2 = false;
                  if (t2) {
                    overDrag = Math.min(viewportStart - proxyStart, 20);
                    t2 = t1._scrollable$_position;
                    t3 = t2._scroll_position$_minScrollExtent;
                    t3.toString;
                    t2 = t2._scroll_position$_pixels;
                    t2.toString;
                    newOffset = Math.max(t3, t2 - overDrag);
                  } else {
                    if (proxyEnd > viewportEnd) {
                      t2 = t1._scrollable$_position;
                      t3 = t2._scroll_position$_pixels;
                      t3.toString;
                      t2 = t2._scroll_position$_maxScrollExtent;
                      t2.toString;
                      t2 = t3 < t2;
                    } else
                      t2 = false;
                    if (t2) {
                      overDrag = Math.min(proxyEnd - viewportEnd, 20);
                      t2 = t1._scrollable$_position;
                      t3 = t2._scroll_position$_maxScrollExtent;
                      t3.toString;
                      t2 = t2._scroll_position$_pixels;
                      t2.toString;
                      newOffset = Math.min(t3, t2 + overDrag);
                    }
                  }
                  break;
              }
              if (newOffset != null) {
                t2 = t1._scrollable$_position._scroll_position$_pixels;
                t2.toString;
                t2 = Math.abs(newOffset - t2) < 1;
              } else
                t2 = true;
              if (t2) {
                $async$self._scrolling = false;
                // goto return
                $async$goto = 1;
                break;
              }
              duration = A.Duration$(0, 0, B.JSNumber_methods.round$0(1000 / $async$self.velocityScalar), 0, 0);
              $async$goto = 3;
              return A._asyncAwait(t1._scrollable$_position.animateTo$3$curve$duration(newOffset, B.C__Linear, duration), $async$_scroll$0);
            case 3:
              // returning from await.
              $async$goto = $async$self._scrolling ? 4 : 5;
              break;
            case 4:
              // then
              $async$goto = 6;
              return A._asyncAwait($async$self._scroll$0(), $async$_scroll$0);
            case 6:
              // returning from await.
            case 5:
              // join
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$_scroll$0, $async$completer);
    }
  };
  A._ScrollableSelectionContainerDelegate.prototype = {
    set$position(other) {
      var t2,
        t1 = this._scrollable$_position;
      if (other === t1)
        return;
      t2 = this.get$_scheduleLayoutChange();
      t1.removeListener$1(t2);
      this._scrollable$_position = other;
      other.addListener$1(t2);
    },
    _scheduleLayoutChange$0() {
      if (this._scheduledLayoutChange)
        return;
      this._scheduledLayoutChange = true;
      $.SchedulerBinding__instance.SchedulerBinding__postFrameCallbacks.push(new A._ScrollableSelectionContainerDelegate__scheduleLayoutChange_closure(this));
    },
    didChangeSelectables$0() {
      var _this = this,
        t1 = _this.selectables,
        selectableSet = A.LinkedHashSet_LinkedHashSet$from(t1, A._arrayInstanceType(t1)._precomputed1);
      _this._selectableStartEdgeUpdateRecords.removeWhere$1(0, new A._ScrollableSelectionContainerDelegate_didChangeSelectables_closure(selectableSet));
      _this._selectableEndEdgeUpdateRecords.removeWhere$1(0, new A._ScrollableSelectionContainerDelegate_didChangeSelectables_closure0(selectableSet));
      _this.super$MultiSelectableSelectionContainerDelegate$didChangeSelectables();
    },
    handleSelectionEdgeUpdate$1($event) {
      var deltaToOrigin, t1, t2, t3, result, _this = this;
      if (_this._currentDragEndRelatedToOrigin == null && _this._currentDragStartRelatedToOrigin == null)
        _this._selectionStartsInScrollable = _this._globalPositionInScrollable$1($event.globalPosition);
      deltaToOrigin = A._getDeltaToScrollOrigin(_this.state);
      t1 = $event.globalPosition;
      t2 = -deltaToOrigin._dx;
      t3 = -deltaToOrigin._dy;
      if ($event.type === B.SelectionEventType_1) {
        t1 = _this._currentDragEndRelatedToOrigin = _this._inferPositionRelatedToOrigin$1(t1);
        $event = new A.SelectionEdgeUpdateEvent(new A.Offset(t1._dx + t2, t1._dy + t3), B.SelectionEventType_1);
      } else {
        t1 = _this._currentDragStartRelatedToOrigin = _this._inferPositionRelatedToOrigin$1(t1);
        $event = new A.SelectionEdgeUpdateEvent(new A.Offset(t1._dx + t2, t1._dy + t3), B.SelectionEventType_0);
      }
      result = _this.super$MultiSelectableSelectionContainerDelegate$handleSelectionEdgeUpdate($event);
      if (result === B.SelectionResult_3) {
        _this._autoScroller._scrolling = false;
        return result;
      }
      if (_this._selectionStartsInScrollable) {
        t1 = _this._autoScroller;
        t1.startAutoScrollIfNecessary$1(A.Rect$fromCenter($event.globalPosition, 0, 0));
        if (t1._scrolling)
          return B.SelectionResult_3;
      }
      return result;
    },
    _inferPositionRelatedToOrigin$1(globalPosition) {
      var localPosition, t3, t4, deltaToOrigin,
        t1 = this.state,
        t2 = t1._element.get$renderObject();
      t2.toString;
      type$.RenderBox._as(t2);
      localPosition = t2.globalToLocal$1(globalPosition);
      if (!this._selectionStartsInScrollable) {
        t3 = localPosition._dy;
        if (t3 < 0 || localPosition._dx < 0)
          return A.MatrixUtils_transformPoint(t2.getTransformTo$1(null), B.Offset_0_0);
        t4 = t2._size;
        if (t3 > t4._dy || localPosition._dx > t4._dx)
          return B.Offset_xfs;
      }
      deltaToOrigin = A._getDeltaToScrollOrigin(t1);
      return A.MatrixUtils_transformPoint(t2.getTransformTo$1(null), new A.Offset(localPosition._dx + deltaToOrigin._dx, localPosition._dy + deltaToOrigin._dy));
    },
    _updateDragLocationsFromGeometries$2$forceUpdateEnd$forceUpdateStart(forceUpdateEnd, forceUpdateStart) {
      var transform, t2, t3, _this = this,
        t1 = _this.state,
        deltaToOrigin = A._getDeltaToScrollOrigin(t1);
      t1 = t1._element.get$renderObject();
      t1.toString;
      type$.RenderBox._as(t1);
      transform = t1.getTransformTo$1(null);
      t2 = _this.currentSelectionStartIndex;
      if (t2 !== -1)
        t3 = _this._currentDragStartRelatedToOrigin == null || forceUpdateStart;
      else
        t3 = false;
      if (t3) {
        t2 = _this.selectables[t2].get$value().startSelectionPoint;
        t2.toString;
        _this._currentDragStartRelatedToOrigin = A.MatrixUtils_transformPoint(transform, A.MatrixUtils_transformPoint(_this.selectables[_this.currentSelectionStartIndex].getTransformTo$1(t1), t2.localPosition.$add(0, new A.Offset(0, -t2.lineHeight / 2))).$add(0, deltaToOrigin));
      }
      t2 = _this.currentSelectionEndIndex;
      if (t2 !== -1) {
        t2 = _this.selectables[t2].get$value().endSelectionPoint;
        t2.toString;
        _this._currentDragEndRelatedToOrigin = A.MatrixUtils_transformPoint(transform, A.MatrixUtils_transformPoint(_this.selectables[_this.currentSelectionEndIndex].getTransformTo$1(t1), t2.localPosition.$add(0, new A.Offset(0, -t2.lineHeight / 2))).$add(0, deltaToOrigin));
      }
    },
    _updateDragLocationsFromGeometries$0() {
      return this._updateDragLocationsFromGeometries$2$forceUpdateEnd$forceUpdateStart(true, true);
    },
    _jumpToEdge$1(isExtent) {
      var selectable, edge, lineHeight, t2, edgeOffsetInScrollableCoordinates, edgeBottom, edgeTop, t3, _this = this,
        t1 = _this.selectables;
      if (isExtent) {
        selectable = t1[_this.currentSelectionEndIndex];
        edge = selectable.get$value().endSelectionPoint;
        lineHeight = selectable.get$value().endSelectionPoint.lineHeight;
      } else {
        selectable = t1[_this.currentSelectionStartIndex];
        edge = selectable.get$value().startSelectionPoint;
        t1 = selectable.get$value().startSelectionPoint;
        lineHeight = t1 == null ? null : t1.lineHeight;
      }
      if (lineHeight == null || edge == null)
        return;
      t1 = _this.state;
      t2 = t1._element.get$renderObject();
      t2.toString;
      type$.RenderBox._as(t2);
      edgeOffsetInScrollableCoordinates = A.MatrixUtils_transformPoint(selectable.getTransformTo$1(t2), edge.localPosition);
      t2 = t2._size._dy;
      t1._widget.toString;
      switch (2) {
        case 2:
          edgeBottom = edgeOffsetInScrollableCoordinates._dy;
          edgeTop = edgeBottom - lineHeight;
          if (edgeBottom >= t2 && edgeTop <= 0)
            return;
          if (edgeBottom > t2) {
            t1 = _this._scrollable$_position;
            t3 = t1._scroll_position$_pixels;
            t3.toString;
            t1.jumpTo$1(t3 + edgeBottom - t2);
            return;
          }
          if (edgeTop < 0) {
            t1 = _this._scrollable$_position;
            t2 = t1._scroll_position$_pixels;
            t2.toString;
            t1.jumpTo$1(t2 + edgeTop);
          }
          return;
      }
    },
    _globalPositionInScrollable$1(globalPosition) {
      var localPosition,
        t1 = this.state._element.get$renderObject();
      t1.toString;
      type$.RenderBox._as(t1);
      localPosition = t1.globalToLocal$1(globalPosition);
      t1 = t1._size;
      return new A.Rect(0, 0, 0 + t1._dx, 0 + t1._dy).contains$1(0, localPosition);
    },
    dispatchSelectionEventToChild$2(selectable, $event) {
      var t1, t2, _this = this;
      switch ($event.type.index) {
        case 0:
          t1 = _this.state._scrollable$_position._scroll_position$_pixels;
          t1.toString;
          _this._selectableStartEdgeUpdateRecords.$indexSet(0, selectable, t1);
          _this.ensureChildUpdated$1(selectable);
          break;
        case 1:
          t1 = _this.state._scrollable$_position._scroll_position$_pixels;
          t1.toString;
          _this._selectableEndEdgeUpdateRecords.$indexSet(0, selectable, t1);
          _this.ensureChildUpdated$1(selectable);
          break;
        case 5:
        case 6:
          _this.ensureChildUpdated$1(selectable);
          t1 = _this.state;
          t2 = t1._scrollable$_position._scroll_position$_pixels;
          t2.toString;
          _this._selectableStartEdgeUpdateRecords.$indexSet(0, selectable, t2);
          t1 = t1._scrollable$_position._scroll_position$_pixels;
          t1.toString;
          _this._selectableEndEdgeUpdateRecords.$indexSet(0, selectable, t1);
          break;
        case 2:
          _this._selectableEndEdgeUpdateRecords.remove$1(0, selectable);
          _this._selectableStartEdgeUpdateRecords.remove$1(0, selectable);
          break;
        case 3:
        case 4:
          t1 = _this.state;
          t2 = t1._scrollable$_position._scroll_position$_pixels;
          t2.toString;
          _this._selectableEndEdgeUpdateRecords.$indexSet(0, selectable, t2);
          t1 = t1._scrollable$_position._scroll_position$_pixels;
          t1.toString;
          _this._selectableStartEdgeUpdateRecords.$indexSet(0, selectable, t1);
          break;
      }
      return _this.super$MultiSelectableSelectionContainerDelegate$dispatchSelectionEventToChild(selectable, $event);
    },
    ensureChildUpdated$1(selectable) {
      var previousStartRecord, t3, t4, deltaToOrigin, previousEndRecord, _this = this,
        t1 = _this.state,
        t2 = t1._scrollable$_position._scroll_position$_pixels;
      t2.toString;
      previousStartRecord = _this._selectableStartEdgeUpdateRecords.$index(0, selectable);
      t3 = _this._currentDragStartRelatedToOrigin;
      if (t3 != null)
        t4 = previousStartRecord == null || Math.abs(t2 - previousStartRecord) > 1e-10;
      else
        t4 = false;
      if (t4) {
        deltaToOrigin = A._getDeltaToScrollOrigin(t1);
        selectable.dispatchSelectionEvent$1(new A.SelectionEdgeUpdateEvent(new A.Offset(t3._dx + -deltaToOrigin._dx, t3._dy + -deltaToOrigin._dy), B.SelectionEventType_0));
      }
      previousEndRecord = _this._selectableEndEdgeUpdateRecords.$index(0, selectable);
      t3 = _this._currentDragEndRelatedToOrigin;
      if (t3 != null)
        t2 = previousEndRecord == null || Math.abs(t2 - previousEndRecord) > 1e-10;
      else
        t2 = false;
      if (t2) {
        deltaToOrigin = A._getDeltaToScrollOrigin(t1);
        selectable.dispatchSelectionEvent$1(new A.SelectionEdgeUpdateEvent(new A.Offset(t3._dx + -deltaToOrigin._dx, t3._dy + -deltaToOrigin._dy), B.SelectionEventType_1));
      }
    },
    dispose$0() {
      var _this = this;
      _this._selectableStartEdgeUpdateRecords.clear$0(0);
      _this._selectableEndEdgeUpdateRecords.clear$0(0);
      _this._scheduledLayoutChange = false;
      _this._autoScroller._scrolling = false;
      _this.super$MultiSelectableSelectionContainerDelegate$dispose();
    }
  };
  A._ScrollableSelectionContainerDelegate__scheduleLayoutChange_closure.prototype = {
    call$1(timeStamp) {
      var t1 = this.$this;
      if (!t1._scheduledLayoutChange)
        return;
      t1._scheduledLayoutChange = false;
      t1._updateSelectionGeometry$0();
    },
    $signature: 1
  };
  A._ScrollableSelectionContainerDelegate_didChangeSelectables_closure.prototype = {
    call$2(key, value) {
      return !this.selectableSet.contains$1(0, key);
    },
    $signature: 88
  };
  A._ScrollableSelectionContainerDelegate_didChangeSelectables_closure0.prototype = {
    call$2(key, value) {
      return !this.selectableSet.contains$1(0, key);
    },
    $signature: 88
  };
  A.ScrollableDetails.prototype = {};
  A._ScrollSemantics.prototype = {
    createRenderObject$1(context) {
      var t1 = this.position,
        t2 = new A._RenderScrollSemantics(t1, true, this.semanticChildCount, null, A.LayerHandle$());
      t2.RenderObject$0();
      t2.set$child(null);
      t1.addListener$1(t2.get$markNeedsSemanticsUpdate());
      return t2;
    },
    updateRenderObject$2(context, renderObject) {
      renderObject.set$allowImplicitScrolling(true);
      renderObject.set$position(this.position);
      renderObject.set$semanticChildCount(this.semanticChildCount);
    }
  };
  A._RenderScrollSemantics.prototype = {
    set$position(value) {
      var t2, _this = this,
        t1 = _this._scrollable$_position;
      if (value === t1)
        return;
      t2 = _this.get$markNeedsSemanticsUpdate();
      t1.removeListener$1(t2);
      _this._scrollable$_position = value;
      value.addListener$1(t2);
      _this.markNeedsSemanticsUpdate$0();
    },
    set$allowImplicitScrolling(value) {
      return;
    },
    set$semanticChildCount(value) {
      return;
    },
    describeSemanticsConfiguration$1(config) {
      var t1, t2, _this = this;
      _this.super$RenderObject$describeSemanticsConfiguration(config);
      config._isSemanticBoundary = true;
      if (_this._scrollable$_position._haveDimensions) {
        config._setFlag$2(B.SemanticsFlag_262144, true);
        t1 = _this._scrollable$_position;
        t2 = t1._scroll_position$_pixels;
        t2.toString;
        config._scrollPosition = t2;
        config._hasBeenAnnotated = true;
        t2 = t1._scroll_position$_maxScrollExtent;
        t2.toString;
        config._scrollExtentMax = t2;
        t1 = t1._scroll_position$_minScrollExtent;
        t1.toString;
        config._scrollExtentMin = t1;
        config.set$scrollChildCount(_this._semanticChildCount);
      }
    },
    assembleSemanticsNode$3(node, config, children) {
      var t1, t2, excluded, included, firstVisibleIndex, _i, child, _this = this;
      if (children.length !== 0) {
        t1 = B.JSArray_methods.get$first(children).tags;
        t1 = !(t1 != null && t1.contains$1(0, B.SemanticsTag_C6p));
      } else
        t1 = true;
      if (t1) {
        _this._innerNode = null;
        _this.super$RenderObject$assembleSemanticsNode(node, config, children);
        return;
      }
      t1 = _this._innerNode;
      if (t1 == null)
        t1 = _this._innerNode = A.SemanticsNode$(null, _this.get$showOnScreen());
      t1.set$isMergedIntoParent(node._mergeAllDescendantsIntoThisNode || node._isMergedIntoParent);
      t1.set$rect(node._semantics$_rect);
      t1 = _this._innerNode;
      t1.toString;
      t2 = type$.JSArray_SemanticsNode;
      excluded = A._setArrayType([t1], t2);
      included = A._setArrayType([], t2);
      for (t1 = children.length, firstVisibleIndex = null, _i = 0; _i < children.length; children.length === t1 || (0, A.throwConcurrentModificationError)(children), ++_i) {
        child = children[_i];
        t2 = child.tags;
        if (t2 != null && t2.contains$1(0, B.SemanticsTag_W8h))
          excluded.push(child);
        else {
          if ((child._flags & 8192) === 0)
            firstVisibleIndex = firstVisibleIndex == null ? child.indexInParent : firstVisibleIndex;
          included.push(child);
        }
      }
      config.set$scrollIndex(firstVisibleIndex);
      node.updateWith$2$childrenInInversePaintOrder$config(excluded, null);
      _this._innerNode.updateWith$2$childrenInInversePaintOrder$config(included, config);
    },
    clearSemantics$0() {
      this.super$RenderObject$clearSemantics();
      this._innerNode = null;
    }
  };
  A.ScrollIncrementType.prototype = {
    _enumToString$0() {
      return "ScrollIncrementType." + this._name;
    }
  };
  A.ScrollIntent.prototype = {};
  A.ScrollAction.prototype = {
    isEnabled$1(intent) {
      var t1, primaryScrollController,
        $focus = $.WidgetsBinding__instance.WidgetsBinding__buildOwner.focusManager._primaryFocus;
      if ($focus != null && $focus._context != null) {
        t1 = $focus._context;
        t1.toString;
        if (A.Scrollable_maybeOf(t1) != null)
          return true;
        t1 = $focus._context;
        t1.toString;
        primaryScrollController = A.PrimaryScrollController_maybeOf(t1);
        return primaryScrollController != null && primaryScrollController._positions.length !== 0;
      }
      return false;
    },
    invoke$1(intent) {
      var state, t2, increment,
        t1 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner.focusManager._primaryFocus._context;
      t1.toString;
      state = A.Scrollable_maybeOf(t1);
      if (state == null) {
        t1 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner.focusManager._primaryFocus._context;
        t1.toString;
        t1 = A.PrimaryScrollController_maybeOf(t1)._positions;
        t2 = B.JSArray_methods.get$single(t1);
        if ($.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, t2.context._gestureDetectorKey) == null) {
          t2 = B.JSArray_methods.get$single(t1);
          t2 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, t2.context._gestureDetectorKey);
          t2.toString;
          t2 = A.Scrollable_maybeOf(t2) == null;
        } else
          t2 = false;
        if (t2)
          return;
        t1 = B.JSArray_methods.get$single(t1);
        t1 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, t1.context._gestureDetectorKey);
        t1.toString;
        state = A.Scrollable_maybeOf(t1);
      }
      t1 = state._physics;
      if (t1 != null) {
        t2 = state._scrollable$_position;
        t2.toString;
        t2 = !t1.shouldAcceptUserOffset$1(t2);
        t1 = t2;
      } else
        t1 = false;
      if (t1)
        return;
      increment = A.ScrollAction_getDirectionalIncrement(state, intent);
      if (increment === 0)
        return;
      t1 = state._scrollable$_position;
      t2 = t1._scroll_position$_pixels;
      t2.toString;
      t1.moveTo$3$curve$duration(t2 + increment, B.Cubic_fC5, B.Duration_100000);
    }
  };
  A._RestorableScrollOffset.prototype = {
    createDefaultValue$0() {
      return null;
    },
    didUpdateValue$1(oldValue) {
      this.notifyListeners$0();
    },
    fromPrimitives$1(data) {
      data.toString;
      return A._asDouble(data);
    },
    toPrimitives$0() {
      var t1 = this._restoration_properties$_value;
      return t1 == null ? A._instanceType(this)._eval$1("RestorableValue.T")._as(t1) : t1;
    },
    get$enabled() {
      var t1 = this._restoration_properties$_value;
      return (t1 == null ? A._instanceType(this)._eval$1("RestorableValue.T")._as(t1) : t1) != null;
    }
  };
  A._ScrollableState_State_TickerProviderStateMixin.prototype = {
    activate$0() {
      this.super$State$activate();
      this._updateTickerModeNotifier$0();
      this._updateTickers$0();
    },
    dispose$0() {
      var _this = this,
        t1 = _this.TickerProviderStateMixin__tickerModeNotifier;
      if (t1 != null)
        t1.removeListener$1(_this.get$_updateTickers());
      _this.TickerProviderStateMixin__tickerModeNotifier = null;
      _this.super$State$dispose();
    }
  };
  A._ScrollableState_State_TickerProviderStateMixin_RestorationMixin.prototype = {
    didUpdateWidget$1(oldWidget) {
      this.super$State$didUpdateWidget(oldWidget);
      this.didUpdateRestorationId$0();
    },
    didChangeDependencies$0() {
      var oldBucket, needsRestore, t1, didReplaceBucket, _this = this;
      _this.super$State$didChangeDependencies();
      oldBucket = _this.RestorationMixin__bucket;
      needsRestore = _this.get$restorePending();
      t1 = _this._element;
      t1.toString;
      t1 = A.RestorationScope_maybeOf(t1);
      _this.RestorationMixin__currentParent = t1;
      didReplaceBucket = _this._updateBucketIfNecessary$2$parent$restorePending(t1, needsRestore);
      if (needsRestore) {
        _this.restoreState$2(oldBucket, _this.RestorationMixin__firstRestorePending);
        _this.RestorationMixin__firstRestorePending = false;
      }
      if (didReplaceBucket)
        if (oldBucket != null)
          oldBucket.dispose$0();
    },
    dispose$0() {
      var t1, _this = this;
      _this.RestorationMixin__properties.forEach$1(0, new A._ScrollableState_State_TickerProviderStateMixin_RestorationMixin_dispose_closure());
      t1 = _this.RestorationMixin__bucket;
      if (t1 != null)
        t1.dispose$0();
      _this.RestorationMixin__bucket = null;
      _this.super$_ScrollableState_State_TickerProviderStateMixin$dispose();
    }
  };
  A.ScrollbarOrientation.prototype = {
    _enumToString$0() {
      return "ScrollbarOrientation." + this._name;
    }
  };
  A.ScrollbarPainter.prototype = {
    set$color(value) {
      if (this._scrollbar$_color.$eq(0, value))
        return;
      this._scrollbar$_color = value;
      this.notifyListeners$0();
    },
    set$trackColor(value) {
      if (this._scrollbar$_trackColor.$eq(0, value))
        return;
      this._scrollbar$_trackColor = value;
      this.notifyListeners$0();
    },
    set$trackBorderColor(value) {
      if (this._scrollbar$_trackBorderColor.$eq(0, value))
        return;
      this._scrollbar$_trackBorderColor = value;
      this.notifyListeners$0();
    },
    set$trackRadius(value) {
      return;
    },
    set$textDirection(value) {
      if (this._scrollbar$_textDirection === value)
        return;
      this._scrollbar$_textDirection = value;
      this.notifyListeners$0();
    },
    set$thickness(value) {
      if (this._scrollbar$_thickness === value)
        return;
      this._scrollbar$_thickness = value;
      this.notifyListeners$0();
    },
    set$mainAxisMargin(value) {
      if (this._mainAxisMargin === value)
        return;
      this._mainAxisMargin = value;
      this.notifyListeners$0();
    },
    set$crossAxisMargin(value) {
      if (this._crossAxisMargin === value)
        return;
      this._crossAxisMargin = value;
      this.notifyListeners$0();
    },
    set$radius(value) {
      if (J.$eq$(this._scrollbar$_radius, value))
        return;
      this._scrollbar$_radius = value;
      this.notifyListeners$0();
    },
    set$shape(value) {
      return;
    },
    set$padding(value) {
      if (this._scrollbar$_padding.$eq(0, value))
        return;
      this._scrollbar$_padding = value;
      this.notifyListeners$0();
    },
    set$minLength(value) {
      if (this._minLength === value)
        return;
      this._minLength = value;
      this.notifyListeners$0();
    },
    set$minOverscrollLength(value) {
      if (this._minOverscrollLength === value)
        return;
      this._minOverscrollLength = value;
      this.notifyListeners$0();
    },
    set$scrollbarOrientation(value) {
      return;
    },
    set$ignorePointer(value) {
      if (this._ignorePointer === value)
        return;
      this._ignorePointer = value;
      this.notifyListeners$0();
    },
    get$_leadingTrackMainAxisOffset() {
      switch (this.get$_resolvedOrientation().index) {
        case 0:
        case 1:
          return this._scrollbar$_padding.top;
        case 2:
        case 3:
          return this._scrollbar$_padding.left;
      }
    },
    get$_leadingThumbMainAxisOffset() {
      var _this = this;
      switch (_this.get$_resolvedOrientation().index) {
        case 0:
        case 1:
          return _this._scrollbar$_padding.top + _this._mainAxisMargin;
        case 2:
        case 3:
          return _this._scrollbar$_padding.left + _this._mainAxisMargin;
      }
    },
    get$_resolvedOrientation() {
      var t1 = this._lastAxisDirection;
      if (t1 === B.AxisDirection_2 || t1 === B.AxisDirection_0)
        return this._scrollbar$_textDirection === B.TextDirection_1 ? B.ScrollbarOrientation_1 : B.ScrollbarOrientation_0;
      return B.ScrollbarOrientation_3;
    },
    update$2(metrics, axisDirection) {
      var t2, _this = this,
        t1 = _this._lastMetrics;
      if (t1 != null && Math.max(t1.get$pixels() - t1.get$minScrollExtent(), 0) === Math.max(metrics.get$pixels() - metrics.get$minScrollExtent(), 0) && t1.get$extentInside() === metrics.get$extentInside() && Math.max(t1.get$maxScrollExtent() - t1.get$pixels(), 0) === Math.max(metrics.get$maxScrollExtent() - metrics.get$pixels(), 0) && _this._lastAxisDirection === axisDirection)
        return;
      _this._lastMetrics = metrics;
      _this._lastAxisDirection = axisDirection;
      t2 = new A.ScrollbarPainter_update_needPaint();
      if (!t2.call$1(t1) && !t2.call$1(metrics))
        return;
      _this.notifyListeners$0();
    },
    get$_paintThumb() {
      var t1 = A.Paint$(),
        t2 = this._scrollbar$_color;
      t1.set$color(A.Color$fromARGB(B.JSNumber_methods.round$0(255 * ((t2.get$value() >>> 24 & 255) / 255 * this.fadeoutOpacityAnimation.get$value())), t2.get$value() >>> 16 & 255, t2.get$value() >>> 8 & 255, t2.get$value() & 255));
      return t1;
    },
    _paintTrack$1$isBorder(isBorder) {
      var t1, t2, _this = this;
      if (isBorder) {
        t1 = A.Paint$();
        t2 = _this._scrollbar$_trackBorderColor;
        t1.set$color(A.Color$fromARGB(B.JSNumber_methods.round$0(255 * ((t2.get$value() >>> 24 & 255) / 255 * _this.fadeoutOpacityAnimation.get$value())), t2.get$value() >>> 16 & 255, t2.get$value() >>> 8 & 255, t2.get$value() & 255));
        t2 = t1._ui$_data;
        t2.$flags & 2 && A.throwUnsupportedOperation(t2, 8);
        t2.setInt32(12, 1, true);
        t2.setFloat32(16, 1, true);
        return t1;
      }
      t1 = A.Paint$();
      t2 = _this._scrollbar$_trackColor;
      t1.set$color(A.Color$fromARGB(B.JSNumber_methods.round$0(255 * ((t2.get$value() >>> 24 & 255) / 255 * _this.fadeoutOpacityAnimation.get$value())), t2.get$value() >>> 16 & 255, t2.get$value() >>> 8 & 255, t2.get$value() & 255));
      return t1;
    },
    _paintTrack$0() {
      return this._paintTrack$1$isBorder(false);
    },
    _paintScrollbar$2(canvas, size) {
      var t1, t2, thumbSize, t3, t4, t5, t6, t7, trackSize, x, t8, t9, trackOffset, borderStart, borderEnd, y, _this = this, _null = null;
      _this.get$_resolvedOrientation();
      switch (_this.get$_resolvedOrientation().index) {
        case 0:
          t1 = _this._scrollbar$_thickness;
          t2 = _this.__ScrollbarPainter__thumbExtent_A;
          t2 === $ && A.throwUnnamedLateFieldNI();
          thumbSize = new A.Size(t1, t2);
          t2 = _this._crossAxisMargin;
          t1 += 2 * t2;
          t3 = _this._lastMetrics._scroll_metrics$_viewportDimension;
          t3.toString;
          t4 = _this._lastAxisDirection;
          t5 = t4 !== B.AxisDirection_2;
          t6 = !t5 || t4 === B.AxisDirection_0;
          t7 = _this._scrollbar$_padding;
          trackSize = new A.Size(t1, t3 - (t6 ? t7.get$_top() + t7.get$_bottom() : t7.get$horizontal()));
          x = t2 + t7.left;
          t8 = _this.__ScrollbarPainter__thumbOffset_A;
          t8 === $ && A.throwUnnamedLateFieldNI();
          t2 = x - t2;
          t9 = _this.get$_leadingTrackMainAxisOffset();
          trackOffset = new A.Offset(t2, t9);
          borderStart = trackOffset.$add(0, new A.Offset(t1, 0));
          t4 = !t5 || t4 === B.AxisDirection_0 ? t7.get$_top() + t7.get$_bottom() : t7.get$horizontal();
          borderEnd = new A.Offset(t2 + t1, t9 + (t3 - t4));
          y = t8;
          break;
        case 1:
          t1 = _this._scrollbar$_thickness;
          t2 = _this.__ScrollbarPainter__thumbExtent_A;
          t2 === $ && A.throwUnnamedLateFieldNI();
          thumbSize = new A.Size(t1, t2);
          t2 = _this._crossAxisMargin;
          t3 = _this._lastMetrics._scroll_metrics$_viewportDimension;
          t3.toString;
          t4 = _this._lastAxisDirection;
          t5 = t4 !== B.AxisDirection_2;
          t6 = !t5 || t4 === B.AxisDirection_0;
          t7 = _this._scrollbar$_padding;
          t6 = t6 ? t7.get$_top() + t7.get$_bottom() : t7.get$horizontal();
          trackSize = new A.Size(t1 + 2 * t2, t3 - t6);
          x = size._dx - t1 - t2 - t7.right;
          t1 = _this.__ScrollbarPainter__thumbOffset_A;
          t1 === $ && A.throwUnnamedLateFieldNI();
          t2 = x - t2;
          t6 = _this.get$_leadingTrackMainAxisOffset();
          trackOffset = new A.Offset(t2, t6);
          borderEnd = new A.Offset(t2, t6 + (t3 - (!t5 || t4 === B.AxisDirection_0 ? t7.get$_top() + t7.get$_bottom() : t7.get$horizontal())));
          borderStart = trackOffset;
          y = t1;
          break;
        case 2:
          t1 = _this.__ScrollbarPainter__thumbExtent_A;
          t1 === $ && A.throwUnnamedLateFieldNI();
          t2 = _this._scrollbar$_thickness;
          thumbSize = new A.Size(t1, t2);
          t1 = _this._lastMetrics._scroll_metrics$_viewportDimension;
          t1.toString;
          t3 = _this._lastAxisDirection;
          t4 = t3 !== B.AxisDirection_2;
          t5 = !t4 || t3 === B.AxisDirection_0;
          t6 = _this._scrollbar$_padding;
          t5 = t5 ? t6.get$_top() + t6.get$_bottom() : t6.get$horizontal();
          t7 = _this._crossAxisMargin;
          t2 += 2 * t7;
          trackSize = new A.Size(t1 - t5, t2);
          t5 = _this.__ScrollbarPainter__thumbOffset_A;
          t5 === $ && A.throwUnnamedLateFieldNI();
          y = t7 + t6.top;
          t8 = _this.get$_leadingTrackMainAxisOffset();
          t7 = y - t7;
          trackOffset = new A.Offset(t8, t7);
          borderStart = trackOffset.$add(0, new A.Offset(0, t2));
          borderEnd = new A.Offset(t8 + (t1 - (!t4 || t3 === B.AxisDirection_0 ? t6.get$_top() + t6.get$_bottom() : t6.get$horizontal())), t7 + t2);
          x = t5;
          break;
        case 3:
          t1 = _this.__ScrollbarPainter__thumbExtent_A;
          t1 === $ && A.throwUnnamedLateFieldNI();
          t2 = _this._scrollbar$_thickness;
          thumbSize = new A.Size(t1, t2);
          t1 = _this._lastMetrics._scroll_metrics$_viewportDimension;
          t1.toString;
          t3 = _this._lastAxisDirection;
          t4 = t3 !== B.AxisDirection_2;
          t5 = !t4 || t3 === B.AxisDirection_0;
          t6 = _this._scrollbar$_padding;
          t5 = t5 ? t6.get$_top() + t6.get$_bottom() : t6.get$horizontal();
          t7 = _this._crossAxisMargin;
          trackSize = new A.Size(t1 - t5, t2 + 2 * t7);
          t5 = _this.__ScrollbarPainter__thumbOffset_A;
          t5 === $ && A.throwUnnamedLateFieldNI();
          y = size._dy - t2 - t7 - t6.bottom;
          t2 = _this.get$_leadingTrackMainAxisOffset();
          t7 = y - t7;
          trackOffset = new A.Offset(t2, t7);
          borderEnd = new A.Offset(t2 + (t1 - (!t4 || t3 === B.AxisDirection_0 ? t6.get$_top() + t6.get$_bottom() : t6.get$horizontal())), t7);
          borderStart = trackOffset;
          x = t5;
          break;
        default:
          borderEnd = _null;
          borderStart = borderEnd;
          trackOffset = borderStart;
          trackSize = trackOffset;
          thumbSize = trackSize;
          y = thumbSize;
          x = y;
      }
      t1 = trackOffset._dx;
      t2 = trackOffset._dy;
      _this._scrollbar$_trackRect = new A.Rect(t1, t2, t1 + trackSize._dx, t2 + trackSize._dy);
      _this._thumbRect = new A.Rect(x, y, x + thumbSize._dx, y + thumbSize._dy);
      if (_this.fadeoutOpacityAnimation.get$value() !== 0) {
        t1 = _this._scrollbar$_trackRect;
        t1.toString;
        canvas.drawRect$2(t1, _this._paintTrack$0());
        canvas.drawLine$3(borderStart, borderEnd, _this._paintTrack$1$isBorder(true));
        t1 = _this._scrollbar$_radius;
        if (t1 != null) {
          t2 = _this._thumbRect;
          t2.toString;
          canvas.drawRRect$2(A.RRect$fromRectAndRadius(t2, t1), _this.get$_paintThumb());
          return;
        }
        t1 = _this._thumbRect;
        t1.toString;
        canvas.drawRect$2(t1, _this.get$_paintThumb());
        return;
      }
    },
    paint$2(canvas, size) {
      var t3, t4, t5, t6, t7, t8, t9, t10, t11, fractionVisible, thumbExtent, safeMinLength, t12, newMinLength, fractionPast, _this = this,
        t1 = _this._lastAxisDirection,
        t2 = true;
      if (t1 != null) {
        t3 = _this._lastMetrics;
        if (t3 != null) {
          t2 = t3._maxScrollExtent;
          t2.toString;
          t3 = t3._minScrollExtent;
          t3.toString;
          t3 = t2 <= t3;
          t2 = t3;
        }
      }
      if (t2)
        return;
      t2 = _this._lastMetrics;
      t3 = t2._scroll_metrics$_viewportDimension;
      t3.toString;
      t4 = t1 !== B.AxisDirection_2;
      t5 = !t4 || t1 === B.AxisDirection_0;
      t6 = _this._scrollbar$_padding;
      t5 = t5 ? t6.get$_top() + t6.get$_bottom() : t6.get$horizontal();
      t7 = 2 * _this._mainAxisMargin;
      if (t3 - t5 - t7 <= 0)
        return;
      t5 = t2._maxScrollExtent;
      t5.toString;
      if (t5 == 1 / 0 || t5 == -1 / 0)
        return;
      t8 = t2.get$extentInside();
      t9 = !t4 || t1 === B.AxisDirection_0 ? t6.get$_top() + t6.get$_bottom() : t6.get$horizontal();
      t10 = t2._minScrollExtent;
      t10.toString;
      t5 -= t10;
      t11 = !t4 || t1 === B.AxisDirection_0 ? t6.get$_top() + t6.get$_bottom() : t6.get$horizontal();
      fractionVisible = A.clampDouble((t8 - t9) / (t5 + t3 - t11), 0, 1);
      t8 = !t4 || t1 === B.AxisDirection_0 ? t6.get$_top() + t6.get$_bottom() : t6.get$horizontal();
      t8 = Math.min(t3 - t8 - t7, _this._minOverscrollLength);
      thumbExtent = Math.max(t8, (t3 - (!t4 || t1 === B.AxisDirection_0 ? t6.get$_top() + t6.get$_bottom() : t6.get$horizontal()) - t7) * fractionVisible);
      t8 = t2.get$extentInside();
      t9 = _this._minLength;
      safeMinLength = Math.min(t9, t3 - (!t4 || t1 === B.AxisDirection_0 ? t6.get$_top() + t6.get$_bottom() : t6.get$horizontal()) - t7);
      t9 = t1 === B.AxisDirection_0;
      t11 = !t9;
      if ((!t11 || t1 === B.AxisDirection_3 ? Math.max(t2.get$maxScrollExtent() - t2.get$pixels(), 0) : Math.max(t2.get$pixels() - t2.get$minScrollExtent(), 0)) > 0)
        t12 = (!t11 || t1 === B.AxisDirection_3 ? Math.max(t2.get$pixels() - t2.get$minScrollExtent(), 0) : Math.max(t2.get$maxScrollExtent() - t2.get$pixels(), 0)) > 0;
      else
        t12 = false;
      newMinLength = t12 ? safeMinLength : safeMinLength * (1 - A.clampDouble(1 - t8 / t3, 0, 0.2) / 0.2);
      t8 = A.clampDouble(thumbExtent, newMinLength, t3 - (!t4 || t9 ? t6.get$_top() + t6.get$_bottom() : t6.get$horizontal()) - t7);
      _this.__ScrollbarPainter__thumbExtent_A = t8;
      if (t5 > 0) {
        t2 = t2._pixels;
        t2.toString;
        fractionPast = A.clampDouble((t2 - t10) / t5, 0, 1);
      } else
        fractionPast = 0;
      t1 = !t11 || t1 === B.AxisDirection_3 ? 1 - fractionPast : fractionPast;
      t2 = !t4 || t9 ? t6.get$_top() + t6.get$_bottom() : t6.get$horizontal();
      _this.__ScrollbarPainter__thumbOffset_A = t1 * (t3 - t2 - t7 - t8) + _this.get$_leadingThumbMainAxisOffset();
      return _this._paintScrollbar$2(canvas, size);
    },
    hitTest$1(position) {
      var t1, t2, _this = this;
      if (_this._thumbRect == null)
        return null;
      t1 = true;
      if (!_this._ignorePointer)
        if (_this.fadeoutOpacityAnimation.get$value() !== 0) {
          t1 = _this._lastMetrics;
          t2 = t1._minScrollExtent;
          t2.toString;
          t1 = t1._maxScrollExtent;
          t1.toString;
          t1 = t2 === t1;
        }
      if (t1)
        return false;
      return _this._scrollbar$_trackRect.contains$1(0, position);
    },
    hitTestInteractive$3$forHover(position, kind, forHover) {
      var t2, t3, paddedRect, _this = this,
        t1 = _this._scrollbar$_trackRect;
      if (t1 == null)
        return false;
      if (_this._ignorePointer)
        return false;
      t2 = _this._lastMetrics;
      t3 = t2._minScrollExtent;
      t3.toString;
      t2 = t2._maxScrollExtent;
      t2.toString;
      if (t3 === t2)
        return false;
      paddedRect = t1.expandToInclude$1(A.Rect$fromCircle(_this._thumbRect.get$center(), 24));
      if (_this.fadeoutOpacityAnimation.get$value() === 0) {
        if (forHover && kind === B.PointerDeviceKind_1)
          return paddedRect.contains$1(0, position);
        return false;
      }
      switch (kind.index) {
        case 0:
        case 4:
          return paddedRect.contains$1(0, position);
        case 1:
        case 2:
        case 3:
        case 5:
          return t1.contains$1(0, position);
      }
    },
    hitTestInteractive$2(position, kind) {
      return this.hitTestInteractive$3$forHover(position, kind, false);
    },
    hitTestOnlyThumbInteractive$2(position, kind) {
      var t1, t2, _this = this;
      if (_this._thumbRect == null)
        return false;
      if (_this._ignorePointer)
        return false;
      if (_this.fadeoutOpacityAnimation.get$value() === 0)
        return false;
      t1 = _this._lastMetrics;
      t2 = t1._minScrollExtent;
      t2.toString;
      t1 = t1._maxScrollExtent;
      t1.toString;
      if (t2 === t1)
        return false;
      switch (kind.index) {
        case 0:
        case 4:
          t1 = _this._thumbRect;
          return t1.expandToInclude$1(A.Rect$fromCircle(t1.get$center(), 24)).contains$1(0, position);
        case 1:
        case 2:
        case 3:
        case 5:
          return _this._thumbRect.contains$1(0, position);
      }
    },
    shouldRepaint$1(oldDelegate) {
      var _this = this,
        t1 = true;
      if (_this._scrollbar$_color.$eq(0, oldDelegate._scrollbar$_color))
        if (_this._scrollbar$_trackColor.$eq(0, oldDelegate._scrollbar$_trackColor))
          if (_this._scrollbar$_trackBorderColor.$eq(0, oldDelegate._scrollbar$_trackBorderColor))
            if (_this._scrollbar$_textDirection == oldDelegate._scrollbar$_textDirection)
              if (_this._scrollbar$_thickness === oldDelegate._scrollbar$_thickness)
                if (_this.fadeoutOpacityAnimation === oldDelegate.fadeoutOpacityAnimation)
                  if (_this._mainAxisMargin === oldDelegate._mainAxisMargin)
                    if (_this._crossAxisMargin === oldDelegate._crossAxisMargin)
                      if (J.$eq$(_this._scrollbar$_radius, oldDelegate._scrollbar$_radius))
                        if (_this._scrollbar$_padding.$eq(0, oldDelegate._scrollbar$_padding))
                          if (_this._minLength === oldDelegate._minLength)
                            if (_this._minOverscrollLength === oldDelegate._minOverscrollLength)
                              t1 = _this._ignorePointer !== oldDelegate._ignorePointer;
      return t1;
    },
    shouldRebuildSemantics$1(oldDelegate) {
      return false;
    },
    get$semanticsBuilder() {
      return null;
    },
    toString$0(_) {
      return "<optimized out>#" + A.shortHash(this);
    }
  };
  A.ScrollbarPainter_update_needPaint.prototype = {
    call$1(metrics) {
      var t1, t2;
      if (metrics != null) {
        t1 = metrics._maxScrollExtent;
        t1.toString;
        t2 = metrics._minScrollExtent;
        t2.toString;
        t2 = t1 > t2;
        t1 = t2;
      } else
        t1 = false;
      return t1;
    },
    $signature: 251
  };
  A.RawScrollbar.prototype = {
    createState$0() {
      return A.RawScrollbarState$(type$.RawScrollbar);
    },
    notificationPredicate$1(arg0) {
      return this.notificationPredicate.call$1(arg0);
    }
  };
  A.RawScrollbarState.prototype = {
    get$_scrollbar$_effectiveScrollController() {
      var t1 = this._widget.controller;
      return t1;
    },
    get$showScrollbar() {
      var t1 = this._widget.thumbVisibility;
      return t1 === true;
    },
    get$_showTrack() {
      if (this.get$showScrollbar())
        this._widget.toString;
      return false;
    },
    get$enableGestures() {
      this._widget.toString;
      return true;
    },
    initState$0() {
      var t1, t2, t3, t4, _this = this, _null = null;
      _this.super$State$initState();
      t1 = A.AnimationController$(_null, _this._widget.fadeDuration, _null, _null, _this);
      t1.didRegisterListener$0();
      t2 = t1.AnimationLocalStatusListenersMixin__statusListeners;
      t2._isDirty = true;
      t2._observer_list$_list.push(_this.get$_validateInteractions());
      _this.__RawScrollbarState__fadeoutAnimationController_A = t1;
      t1 = _this.__RawScrollbarState__fadeoutOpacityAnimation_A = A.CurvedAnimation$(B.Cubic_Dkk, t1, _null);
      t2 = _this._widget;
      t3 = t2.thickness;
      if (t3 == null)
        t3 = 6;
      t4 = t2.radius;
      t2 = t2.scrollbarOrientation;
      t2 = new A.ScrollbarPainter(B.Color_1723645116, B.Color_0, B.Color_0, _null, t3, t1, 0, 0, t4, _null, B.EdgeInsets_0_0_0_0, 18, 18, t2, $.$get$ChangeNotifier__emptyListeners());
      t1.parent.addListener$1(t2.get$notifyListeners());
      _this.__RawScrollbarState_scrollbarPainter_F !== $ && A.throwUnnamedLateFieldAI();
      _this.__RawScrollbarState_scrollbarPainter_F = t2;
    },
    didChangeDependencies$0() {
      this.super$State$didChangeDependencies();
    },
    _validateInteractions$1($status) {
      if ($status !== B.AnimationStatus_0)
        if (this.get$_scrollbar$_effectiveScrollController() != null)
          this.get$enableGestures();
    },
    updateScrollbarPainter$0() {
      var t2, _this = this,
        t1 = _this.__RawScrollbarState_scrollbarPainter_F;
      t1 === $ && A.throwUnnamedLateFieldNI();
      _this._widget.toString;
      t1.set$color(B.Color_1723645116);
      _this._widget.toString;
      t1.set$trackRadius(null);
      if (_this.get$_showTrack()) {
        _this._widget.toString;
        t2 = B.Color_134217728;
      } else
        t2 = B.Color_0;
      t1.set$trackColor(t2);
      if (_this.get$_showTrack()) {
        _this._widget.toString;
        t2 = B.Color_436207616;
      } else
        t2 = B.Color_0;
      t1.set$trackBorderColor(t2);
      t1.set$textDirection(_this._element.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality).textDirection);
      t2 = _this._widget.thickness;
      t1.set$thickness(t2 == null ? 6 : t2);
      t1.set$radius(_this._widget.radius);
      _this._widget.toString;
      t2 = _this._element;
      t2.toString;
      t2 = A.InheritedModel_inheritFrom(t2, B._MediaQueryAspect_5, type$.MediaQuery).data;
      t1.set$padding(t2.padding);
      t1.set$scrollbarOrientation(_this._widget.scrollbarOrientation);
      _this._widget.toString;
      t1.set$mainAxisMargin(0);
      _this._widget.toString;
      t1.set$shape(null);
      _this._widget.toString;
      t1.set$crossAxisMargin(0);
      _this._widget.toString;
      t1.set$minLength(18);
      _this._widget.toString;
      t1.set$minOverscrollLength(18);
      t1.set$ignorePointer(!_this.get$enableGestures());
    },
    didUpdateWidget$1(oldWidget) {
      var t1, _this = this;
      _this.super$State$didUpdateWidget(oldWidget);
      t1 = _this._widget.thumbVisibility;
      if (t1 != oldWidget.thumbVisibility) {
        t1 = t1 === true;
        if (t1) {
          t1 = _this._fadeoutTimer;
          if (t1 != null)
            t1.cancel$0();
          t1 = _this.__RawScrollbarState__fadeoutAnimationController_A;
          t1 === $ && A.throwUnnamedLateFieldNI();
          t1._direction = B._AnimationDirection_0;
          t1._animateToInternal$3$curve$duration(1, B.C__Linear, null);
        } else {
          t1 = _this.__RawScrollbarState__fadeoutAnimationController_A;
          t1 === $ && A.throwUnnamedLateFieldNI();
          t1.reverse$0();
        }
      }
    },
    _updateScrollPosition$1(updatedOffset) {
      var t1, t2, t3, t4, t5, t6, t7, t8, scrollOffsetGlobal, newPosition, _this = this,
        position = B.JSArray_methods.get$single(_this._cachedController._positions),
        primaryDelta = A._Cell$();
      position.context._widget.toString;
      switch (2) {
        case 2:
          primaryDelta.__late_helper$_value = updatedOffset._dy - _this._startDragScrollbarAxisOffset._dy;
          break;
      }
      t1 = _this.__RawScrollbarState_scrollbarPainter_F;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t2 = primaryDelta._readLocal$0();
      t3 = _this._startDragThumbOffset;
      t3.toString;
      t4 = t1._lastMetrics;
      t5 = t4._maxScrollExtent;
      t5.toString;
      t6 = t4._minScrollExtent;
      t6.toString;
      t4 = t4._scroll_metrics$_viewportDimension;
      t4.toString;
      t7 = t1._lastAxisDirection;
      t7 = t7 === B.AxisDirection_2 || t7 === B.AxisDirection_0;
      t8 = t1._scrollbar$_padding;
      t7 = t7 ? t8.get$_top() + t8.get$_bottom() : t8.get$horizontal();
      t8 = t1._mainAxisMargin;
      t1 = t1.__ScrollbarPainter__thumbExtent_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      scrollOffsetGlobal = (t5 - t6) * (t2 + t3) / (t4 - t7 - 2 * t8 - t1);
      t1 = position._scroll_position$_pixels;
      t1.toString;
      if (scrollOffsetGlobal !== t1) {
        newPosition = scrollOffsetGlobal - position.physics.applyBoundaryConditions$2(position, scrollOffsetGlobal);
        t1 = _this._element;
        t1.toString;
        t1 = A.ScrollConfiguration_of(t1);
        t2 = _this._element;
        t2.toString;
        switch (t1.getPlatform$1(t2).index) {
          case 1:
          case 3:
          case 4:
          case 5:
            t1 = position._scroll_position$_minScrollExtent;
            t1.toString;
            t2 = position._scroll_position$_maxScrollExtent;
            t2.toString;
            newPosition = A.clampDouble(newPosition, t1, t2);
            break;
          case 2:
          case 0:
            break;
        }
        position.jumpTo$1(newPosition);
      }
    },
    _maybeStartFadeoutTimer$0() {
      var t1, _this = this;
      if (!_this.get$showScrollbar()) {
        t1 = _this._fadeoutTimer;
        if (t1 != null)
          t1.cancel$0();
        _this._fadeoutTimer = A.Timer_Timer(_this._widget.timeToFade, new A.RawScrollbarState__maybeStartFadeoutTimer_closure(_this));
      }
    },
    getScrollbarDirection$0() {
      var t1 = this._cachedController._positions;
      if (t1.length !== 0)
        return A.axisDirectionToAxis(B.JSArray_methods.get$single(t1).get$axisDirection());
      return null;
    },
    handleThumbPress$0() {
      if (this.getScrollbarDirection$0() == null)
        return;
      var t1 = this._fadeoutTimer;
      if (t1 != null)
        t1.cancel$0();
    },
    handleThumbPressStart$1(localPosition) {
      var t1, t2, t3, t4, scrollableExtent, fractionPast, _this = this;
      _this._cachedController = _this.get$_scrollbar$_effectiveScrollController();
      if (_this.getScrollbarDirection$0() == null)
        return;
      t1 = _this._fadeoutTimer;
      if (t1 != null)
        t1.cancel$0();
      t1 = _this.__RawScrollbarState__fadeoutAnimationController_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.forward$0();
      _this._startDragScrollbarAxisOffset = localPosition;
      t1 = _this.__RawScrollbarState_scrollbarPainter_F;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t2 = t1._lastMetrics;
      t3 = t2._maxScrollExtent;
      t3.toString;
      t4 = t2._minScrollExtent;
      t4.toString;
      scrollableExtent = t3 - t4;
      if (scrollableExtent > 0) {
        t3 = t2._pixels;
        t3.toString;
        fractionPast = A.clampDouble(t3 / scrollableExtent, 0, 1);
      } else
        fractionPast = 0;
      t2 = t2._scroll_metrics$_viewportDimension;
      t2.toString;
      t3 = t1._lastAxisDirection;
      t3 = t3 === B.AxisDirection_2 || t3 === B.AxisDirection_0;
      t4 = t1._scrollbar$_padding;
      t3 = t3 ? t4.get$_top() + t4.get$_bottom() : t4.get$horizontal();
      t4 = t1._mainAxisMargin;
      t1 = t1.__ScrollbarPainter__thumbExtent_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      _this._startDragThumbOffset = fractionPast * (t2 - t3 - 2 * t4 - t1);
      _this._thumbDragging = true;
    },
    handleThumbPressUpdate$1(localPosition) {
      var position, _this = this;
      if (J.$eq$(_this._lastDragUpdateOffset, localPosition))
        return;
      _this._lastDragUpdateOffset = localPosition;
      position = B.JSArray_methods.get$single(_this._cachedController._positions);
      if (!position.physics.shouldAcceptUserOffset$1(position))
        return;
      if (_this.getScrollbarDirection$0() == null)
        return;
      _this._updateScrollPosition$1(localPosition);
    },
    handleThumbPressEnd$2(localPosition, velocity) {
      var _this = this;
      _this._thumbDragging = false;
      if (_this.getScrollbarDirection$0() == null)
        return;
      _this._maybeStartFadeoutTimer$0();
      _this._cachedController = _this._startDragThumbOffset = _this._lastDragUpdateOffset = _this._startDragScrollbarAxisOffset = null;
    },
    _handleTrackTapDown$1(details) {
      var position, t2, scrollDirection, state, scrollIncrement, _this = this,
        t1 = _this.get$_scrollbar$_effectiveScrollController();
      _this._cachedController = t1;
      position = B.JSArray_methods.get$single(t1._positions);
      if (!position.physics.shouldAcceptUserOffset$1(position))
        return;
      t1 = position.context;
      t1._widget.toString;
      switch (2) {
        case 0:
        case 2:
          t2 = _this.__RawScrollbarState_scrollbarPainter_F;
          t2 === $ && A.throwUnnamedLateFieldNI();
          t2 = t2.__ScrollbarPainter__thumbOffset_A;
          t2 === $ && A.throwUnnamedLateFieldNI();
          scrollDirection = details.localPosition._dy > t2 ? B.AxisDirection_2 : B.AxisDirection_0;
          break;
      }
      t1 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, t1._gestureDetectorKey);
      t1.toString;
      state = A.Scrollable_maybeOf(t1);
      state.toString;
      scrollIncrement = A.ScrollAction_getDirectionalIncrement(state, new A.ScrollIntent(scrollDirection, B.ScrollIncrementType_1));
      t1 = B.JSArray_methods.get$single(_this._cachedController._positions);
      t2 = B.JSArray_methods.get$single(_this._cachedController._positions)._scroll_position$_pixels;
      t2.toString;
      t1.moveTo$3$curve$duration(t2 + scrollIncrement, B.Cubic_fC5, B.Duration_100000);
    },
    _shouldUpdatePainter$1(notificationAxis) {
      var t1, t2,
        scrollController = this.get$_scrollbar$_effectiveScrollController();
      if (scrollController == null)
        return true;
      t1 = scrollController._positions;
      t2 = t1.length;
      if (t2 > 1)
        return false;
      return t2 === 0 || A.axisDirectionToAxis(B.JSArray_methods.get$single(t1).get$axisDirection()) === notificationAxis;
    },
    _scrollbar$_handleScrollMetricsNotification$1(notification) {
      var t2, t3, _this = this,
        t1 = _this._widget;
      t1.toString;
      t2 = notification.metrics;
      if (!t1.notificationPredicate$1(A.ScrollUpdateNotification$(notification.context, notification.ViewportNotificationMixin__depth, null, t2, null)))
        return false;
      if (_this.get$showScrollbar()) {
        t1 = _this.__RawScrollbarState__fadeoutAnimationController_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
        t3 = t1.__AnimationController__status_A;
        t3 === $ && A.throwUnnamedLateFieldNI();
        if (t3 !== B.AnimationStatus_1 && t3 !== B.AnimationStatus_3)
          t1.forward$0();
      }
      t1 = t2.axisDirection;
      if (_this._shouldUpdatePainter$1(A.axisDirectionToAxis(t1))) {
        t3 = _this.__RawScrollbarState_scrollbarPainter_F;
        t3 === $ && A.throwUnnamedLateFieldNI();
        t3.update$2(t2, t1);
      }
      return false;
    },
    _scrollbar$_handleScrollNotification$1(notification) {
      var metrics, t1, t2, _this = this;
      if (!_this._widget.notificationPredicate$1(notification))
        return false;
      metrics = notification.metrics;
      t1 = metrics._maxScrollExtent;
      t1.toString;
      t2 = metrics._minScrollExtent;
      t2.toString;
      if (t1 <= t2) {
        t1 = _this.__RawScrollbarState__fadeoutAnimationController_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
        t2 = t1.__AnimationController__status_A;
        t2 === $ && A.throwUnnamedLateFieldNI();
        if (t2 !== B.AnimationStatus_0 && t2 !== B.AnimationStatus_2)
          t1.reverse$0();
        t1 = metrics.axisDirection;
        if (_this._shouldUpdatePainter$1(A.axisDirectionToAxis(t1))) {
          t2 = _this.__RawScrollbarState_scrollbarPainter_F;
          t2 === $ && A.throwUnnamedLateFieldNI();
          t2.update$2(metrics, t1);
        }
        return false;
      }
      if (notification instanceof A.ScrollUpdateNotification || notification instanceof A.OverscrollNotification) {
        t1 = _this.__RawScrollbarState__fadeoutAnimationController_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
        t2 = t1.__AnimationController__status_A;
        t2 === $ && A.throwUnnamedLateFieldNI();
        if (t2 !== B.AnimationStatus_1 && t2 !== B.AnimationStatus_3)
          t1.forward$0();
        t1 = _this._fadeoutTimer;
        if (t1 != null)
          t1.cancel$0();
        t1 = metrics.axisDirection;
        if (_this._shouldUpdatePainter$1(A.axisDirectionToAxis(t1))) {
          t2 = _this.__RawScrollbarState_scrollbarPainter_F;
          t2 === $ && A.throwUnnamedLateFieldNI();
          t2.update$2(metrics, t1);
        }
      } else if (notification instanceof A.ScrollEndNotification)
        if (_this._startDragScrollbarAxisOffset == null)
          _this._maybeStartFadeoutTimer$0();
      return false;
    },
    get$_gestures() {
      var _this = this,
        gestures = A.LinkedHashMap_LinkedHashMap$_empty(type$.Type, type$.GestureRecognizerFactory_GestureRecognizer);
      if (_this.get$_scrollbar$_effectiveScrollController() == null || !_this.get$enableGestures())
        return gestures;
      gestures.$indexSet(0, B.Type__ThumbPressGestureRecognizer_CiA, new A.GestureRecognizerFactoryWithHandlers(new A.RawScrollbarState__gestures_closure(_this), new A.RawScrollbarState__gestures_closure0(_this), type$.GestureRecognizerFactoryWithHandlers__ThumbPressGestureRecognizer));
      gestures.$indexSet(0, B.Type__TrackTapGestureRecognizer_YkB, new A.GestureRecognizerFactoryWithHandlers(new A.RawScrollbarState__gestures_closure1(_this), new A.RawScrollbarState__gestures_closure2(_this), type$.GestureRecognizerFactoryWithHandlers__TrackTapGestureRecognizer));
      return gestures;
    },
    isPointerOverScrollbar$3$forHover(position, kind, forHover) {
      var localOffset,
        t1 = this._scrollbarPainterKey;
      if ($.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, t1) == null)
        return false;
      localOffset = A._getLocalOffset(t1, position);
      t1 = this.__RawScrollbarState_scrollbarPainter_F;
      t1 === $ && A.throwUnnamedLateFieldNI();
      return t1.hitTestInteractive$3$forHover(localOffset, kind, true);
    },
    handleHover$1($event) {
      var t1, _this = this;
      if (_this.isPointerOverScrollbar$3$forHover($event.get$position(), $event.get$kind(), true)) {
        _this._hoverIsActive = true;
        t1 = _this.__RawScrollbarState__fadeoutAnimationController_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
        t1.forward$0();
        t1 = _this._fadeoutTimer;
        if (t1 != null)
          t1.cancel$0();
      } else if (_this._hoverIsActive) {
        _this._hoverIsActive = false;
        _this._maybeStartFadeoutTimer$0();
      }
    },
    handleHoverExit$1($event) {
      this._hoverIsActive = false;
      this._maybeStartFadeoutTimer$0();
    },
    _scrollbar$_pointerSignalEventDelta$1($event) {
      var delta = A.axisDirectionToAxis(B.JSArray_methods.get$single(this._cachedController._positions).get$axisDirection()) === B.Axis_0 ? $event.get$scrollDelta()._dx : $event.get$scrollDelta()._dy;
      B.JSArray_methods.get$single(this._cachedController._positions).context._widget.toString;
      return A.axisDirectionIsReversed(B.AxisDirection_2) ? delta * -1 : delta;
    },
    _scrollbar$_targetScrollOffsetForPointerScroll$1(delta) {
      var t2,
        t1 = B.JSArray_methods.get$single(this._cachedController._positions)._scroll_position$_pixels;
      t1.toString;
      t2 = B.JSArray_methods.get$single(this._cachedController._positions)._scroll_position$_minScrollExtent;
      t2.toString;
      t2 = Math.max(t1 + delta, t2);
      t1 = B.JSArray_methods.get$single(this._cachedController._positions)._scroll_position$_maxScrollExtent;
      t1.toString;
      return Math.min(t2, t1);
    },
    _scrollbar$_handlePointerScroll$1($event) {
      var delta, targetScrollOffset, t1, _this = this;
      _this._cachedController = _this.get$_scrollbar$_effectiveScrollController();
      delta = _this._scrollbar$_pointerSignalEventDelta$1($event);
      targetScrollOffset = _this._scrollbar$_targetScrollOffsetForPointerScroll$1(delta);
      if (delta !== 0) {
        t1 = B.JSArray_methods.get$single(_this._cachedController._positions)._scroll_position$_pixels;
        t1.toString;
        t1 = targetScrollOffset !== t1;
      } else
        t1 = false;
      if (t1)
        B.JSArray_methods.get$single(_this._cachedController._positions).pointerScroll$1(delta);
    },
    _scrollbar$_receivedPointerSignal$1($event) {
      var t1, t2, position, delta, targetScrollOffset, _this = this;
      _this._cachedController = _this.get$_scrollbar$_effectiveScrollController();
      t1 = _this.__RawScrollbarState_scrollbarPainter_F;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1 = t1.hitTest$1($event.get$localPosition());
      t2 = false;
      if (t1 === true) {
        t1 = _this._cachedController;
        if (t1 != null)
          t1 = t1._positions.length !== 0;
        else
          t1 = t2;
      } else
        t1 = t2;
      if (t1) {
        position = B.JSArray_methods.get$single(_this._cachedController._positions);
        if (type$.PointerScrollEvent._is($event)) {
          if (!position.physics.shouldAcceptUserOffset$1(position))
            return;
          delta = _this._scrollbar$_pointerSignalEventDelta$1($event);
          targetScrollOffset = _this._scrollbar$_targetScrollOffsetForPointerScroll$1(delta);
          if (delta !== 0) {
            t1 = position._scroll_position$_pixels;
            t1.toString;
            t1 = targetScrollOffset !== t1;
          } else
            t1 = false;
          if (t1)
            $.GestureBinding__instance.GestureBinding_pointerSignalResolver.register$2($event, _this.get$_scrollbar$_handlePointerScroll());
        } else if (type$.PointerScrollInertiaCancelEvent._is($event)) {
          t1 = position._scroll_position$_pixels;
          t1.toString;
          position.jumpTo$1(t1);
        }
      }
    },
    dispose$0() {
      var _this = this,
        t1 = _this.__RawScrollbarState__fadeoutAnimationController_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.dispose$0();
      t1 = _this._fadeoutTimer;
      if (t1 != null)
        t1.cancel$0();
      t1 = _this.__RawScrollbarState_scrollbarPainter_F;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.fadeoutOpacityAnimation.parent.removeListener$1(t1.get$notifyListeners());
      t1.super$ChangeNotifier$dispose();
      _this.super$_RawScrollbarState_State_TickerProviderStateMixin$dispose();
    },
    build$1(context) {
      var t1, t2, _this = this, _null = null;
      _this.updateScrollbarPainter$0();
      t1 = _this.get$_gestures();
      t2 = _this.__RawScrollbarState_scrollbarPainter_F;
      t2 === $ && A.throwUnnamedLateFieldNI();
      return new A.NotificationListener(_this.get$_scrollbar$_handleScrollMetricsNotification(), new A.NotificationListener(_this.get$_scrollbar$_handleScrollNotification(), new A.RepaintBoundary(A.Listener$(B.HitTestBehavior_0, new A.RawGestureDetector(A.MouseRegion$(A.CustomPaint$(new A.RepaintBoundary(_this._widget.child, _null), t2, _this._scrollbarPainterKey, _null, B.Size_0_0), B.C__DeferringMouseCursor, _null, _null, new A.RawScrollbarState_build_closure(_this), new A.RawScrollbarState_build_closure0(_this)), t1, _null, false, _null), _null, _null, _null, _this.get$_scrollbar$_receivedPointerSignal(), _null), _null), _null, type$.NotificationListener_ScrollNotification), _null, type$.NotificationListener_ScrollMetricsNotification);
    }
  };
  A.RawScrollbarState__maybeStartFadeoutTimer_closure.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = t1.__RawScrollbarState__fadeoutAnimationController_A;
      t2 === $ && A.throwUnnamedLateFieldNI();
      t2.reverse$0();
      t1._fadeoutTimer = null;
    },
    $signature: 0
  };
  A.RawScrollbarState__gestures_closure.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = t1._widget.pressDuration,
        t3 = type$.int,
        t4 = A.HashSet_HashSet(t3);
      return new A._ThumbPressGestureRecognizer(t1._scrollbarPainterKey, t2, null, B.GestureRecognizerState_0, A.LinkedHashMap_LinkedHashMap$_empty(t3, type$.GestureArenaEntry), t4, t1, null, A.long_press_LongPressGestureRecognizer__defaultButtonAcceptBehavior$closure(), A.LinkedHashMap_LinkedHashMap$_empty(t3, type$.PointerDeviceKind));
    },
    $signature: 252
  };
  A.RawScrollbarState__gestures_closure0.prototype = {
    call$1(instance) {
      var t1 = this.$this;
      instance.onLongPress = t1.get$handleThumbPress();
      instance.onLongPressStart = new A.RawScrollbarState__gestures__closure(t1);
      instance.onLongPressMoveUpdate = new A.RawScrollbarState__gestures__closure0(t1);
      instance.onLongPressEnd = new A.RawScrollbarState__gestures__closure1(t1);
    },
    $signature: 253
  };
  A.RawScrollbarState__gestures__closure.prototype = {
    call$1(details) {
      return this.$this.handleThumbPressStart$1(details.localPosition);
    },
    $signature: 254
  };
  A.RawScrollbarState__gestures__closure0.prototype = {
    call$1(details) {
      return this.$this.handleThumbPressUpdate$1(details.localPosition);
    },
    $signature: 255
  };
  A.RawScrollbarState__gestures__closure1.prototype = {
    call$1(details) {
      return this.$this.handleThumbPressEnd$2(details.localPosition, details.velocity);
    },
    $signature: 256
  };
  A.RawScrollbarState__gestures_closure1.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = type$.int,
        t3 = A.HashSet_HashSet(t2);
      return new A._TrackTapGestureRecognizer(t1._scrollbarPainterKey, B.Duration_100000, 18, B.GestureRecognizerState_0, A.LinkedHashMap_LinkedHashMap$_empty(t2, type$.GestureArenaEntry), t3, t1, null, A.recognizer_GestureRecognizer__defaultButtonAcceptBehavior$closure(), A.LinkedHashMap_LinkedHashMap$_empty(t2, type$.PointerDeviceKind));
    },
    $signature: 257
  };
  A.RawScrollbarState__gestures_closure2.prototype = {
    call$1(instance) {
      instance.onTapDown = this.$this.get$_handleTrackTapDown();
    },
    $signature: 258
  };
  A.RawScrollbarState_build_closure.prototype = {
    call$1($event) {
      var t1;
      switch ($event.get$kind().index) {
        case 1:
        case 4:
          t1 = this.$this;
          if (t1.get$enableGestures())
            t1.handleHoverExit$1($event);
          break;
        case 2:
        case 3:
        case 5:
        case 0:
          break;
      }
    },
    $signature: 24
  };
  A.RawScrollbarState_build_closure0.prototype = {
    call$1($event) {
      var t1;
      switch ($event.get$kind().index) {
        case 1:
        case 4:
          t1 = this.$this;
          if (t1.get$enableGestures())
            t1.handleHover$1($event);
          break;
        case 2:
        case 3:
        case 5:
        case 0:
          break;
      }
    },
    $signature: 259
  };
  A._ThumbPressGestureRecognizer.prototype = {
    isPointerAllowed$1($event) {
      if (!this._hitTestInteractive$3(this._customPaintKey, $event.get$position(), $event.get$kind()))
        return false;
      return this.super$LongPressGestureRecognizer$isPointerAllowed($event);
    },
    _hitTestInteractive$3(customPaintKey, offset, kind) {
      var t1;
      if ($.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, customPaintKey) == null)
        return false;
      t1 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, customPaintKey)._widget;
      t1.toString;
      t1 = type$.CustomPaint._as(t1).foregroundPainter;
      t1.toString;
      return type$.ScrollbarPainter._as(t1).hitTestOnlyThumbInteractive$2(A._getLocalOffset(customPaintKey, offset), kind);
    }
  };
  A._TrackTapGestureRecognizer.prototype = {
    isPointerAllowed$1($event) {
      if (!this._hitTestInteractive$3(this._customPaintKey, $event.get$position(), $event.get$kind()))
        return false;
      return this.super$TapGestureRecognizer$isPointerAllowed($event);
    },
    _hitTestInteractive$3(customPaintKey, offset, kind) {
      var t1, localOffset;
      if ($.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, customPaintKey) == null)
        return false;
      t1 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, customPaintKey)._widget;
      t1.toString;
      t1 = type$.CustomPaint._as(t1).foregroundPainter;
      t1.toString;
      type$.ScrollbarPainter._as(t1);
      localOffset = A._getLocalOffset(customPaintKey, offset);
      return t1.hitTestInteractive$2(localOffset, kind) && !t1.hitTestOnlyThumbInteractive$2(localOffset, kind);
    }
  };
  A._RawScrollbarState_State_TickerProviderStateMixin.prototype = {
    activate$0() {
      this.super$State$activate();
      this._updateTickerModeNotifier$0();
      this._updateTickers$0();
    },
    dispose$0() {
      var _this = this,
        t1 = _this.TickerProviderStateMixin__tickerModeNotifier;
      if (t1 != null)
        t1.removeListener$1(_this.get$_updateTickers());
      _this.TickerProviderStateMixin__tickerModeNotifier = null;
      _this.super$State$dispose();
    }
  };
  A.MultiSelectableSelectionContainerDelegate.prototype = {
    add$1(_, selectable) {
      this._additions.add$1(0, selectable);
      this._scheduleSelectableUpdate$0();
    },
    remove$1(_, selectable) {
      var index, t1, _this = this;
      if (_this._additions.remove$1(0, selectable))
        return;
      index = B.JSArray_methods.indexOf$1(_this.selectables, selectable);
      B.JSArray_methods.removeAt$1(_this.selectables, index);
      t1 = _this.currentSelectionEndIndex;
      if (index <= t1)
        _this.currentSelectionEndIndex = t1 - 1;
      t1 = _this.currentSelectionStartIndex;
      if (index <= t1)
        _this.currentSelectionStartIndex = t1 - 1;
      selectable.removeListener$1(_this.get$_handleSelectableGeometryChange());
      _this._scheduleSelectableUpdate$0();
    },
    _scheduleSelectableUpdate$0() {
      if (!this._scheduledSelectableUpdate) {
        this._scheduledSelectableUpdate = true;
        $.SchedulerBinding__instance.SchedulerBinding__postFrameCallbacks.push(new A.MultiSelectableSelectionContainerDelegate__scheduleSelectableUpdate_closure(this));
      }
    },
    _flushAdditions$0() {
      var existingSelectables, selectionStartIndex, selectionEndIndex, mergingIndex, existingIndex, t2, mergingSelectable, t3, _this = this,
        t1 = _this._additions,
        mergingSelectables = A.List_List$_of(t1, A._instanceType(t1)._precomputed1);
      B.JSArray_methods.sort$1(mergingSelectables, _this.get$_compareScreenOrder());
      existingSelectables = _this.selectables;
      _this.selectables = A._setArrayType([], type$.JSArray_Selectable);
      selectionStartIndex = _this.currentSelectionStartIndex;
      selectionEndIndex = _this.currentSelectionEndIndex;
      t1 = _this.get$_handleSelectableGeometryChange();
      mergingIndex = 0;
      existingIndex = 0;
      while (true) {
        t2 = mergingSelectables.length;
        if (!(mergingIndex < t2 || existingIndex < existingSelectables.length))
          break;
        c$0: {
          if (mergingIndex < t2)
            t2 = existingIndex < existingSelectables.length && _this.compareOrder$2(existingSelectables[existingIndex], mergingSelectables[mergingIndex]) < 0;
          else
            t2 = true;
          if (t2) {
            if (existingIndex === _this.currentSelectionStartIndex)
              selectionStartIndex = _this.selectables.length;
            if (existingIndex === _this.currentSelectionEndIndex)
              selectionEndIndex = _this.selectables.length;
            B.JSArray_methods.add$1(_this.selectables, existingSelectables[existingIndex]);
            ++existingIndex;
            break c$0;
          }
          mergingSelectable = mergingSelectables[mergingIndex];
          t2 = _this.currentSelectionStartIndex;
          t3 = _this.currentSelectionEndIndex;
          if (existingIndex < Math.max(t2, t3) && existingIndex > Math.min(t2, t3))
            _this.ensureChildUpdated$1(mergingSelectable);
          mergingSelectable.addListener$1(t1);
          B.JSArray_methods.add$1(_this.selectables, mergingSelectable);
          ++mergingIndex;
        }
      }
      _this.currentSelectionEndIndex = selectionEndIndex;
      _this.currentSelectionStartIndex = selectionStartIndex;
      _this._additions = A.LinkedHashSet_LinkedHashSet$_empty(type$.Selectable);
    },
    didChangeSelectables$0() {
      this._updateSelectionGeometry$0();
    },
    _updateSelectionGeometry$0() {
      var _this = this,
        newValue = _this.getSelectionGeometry$0();
      if (!_this._selectionGeometry.$eq(0, newValue)) {
        _this._selectionGeometry = newValue;
        _this.notifyListeners$0();
      }
      _this._updateHandleLayersAndOwners$0();
    },
    get$compareOrder() {
      return this.get$_compareScreenOrder();
    },
    _compareScreenOrder$2(a, b) {
      var rectA = A.MatrixUtils_transformRect(a.getTransformTo$1(null), new A.Rect(0, 0, 0 + a.get$size()._dx, 0 + a.get$size()._dy)),
        rectB = A.MatrixUtils_transformRect(b.getTransformTo$1(null), new A.Rect(0, 0, 0 + b.get$size()._dx, 0 + b.get$size()._dy)),
        result = A.MultiSelectableSelectionContainerDelegate__compareVertically(rectA, rectB);
      if (result !== 0)
        return result;
      return A.MultiSelectableSelectionContainerDelegate__compareHorizontally(rectA, rectB);
    },
    _handleSelectableGeometryChange$0() {
      if (this._isHandlingSelectionEvent)
        return;
      this._updateSelectionGeometry$0();
    },
    getSelectionGeometry$0() {
      var startGeometry, startIndexWalker, forwardSelection, t2, t3, start, startPoint, endGeometry, endIndexWalker, end, endPoint, _this = this, _null = null,
        t1 = _this.currentSelectionEndIndex;
      if (t1 === -1 || _this.currentSelectionStartIndex === -1 || _this.selectables.length === 0)
        return new A.SelectionGeometry(_null, _null, B.SelectionStatus_2, _this.selectables.length !== 0);
      if (!_this._extendSelectionInProgress) {
        t1 = _this._adjustSelectionIndexBasedOnSelectionGeometry$2(_this.currentSelectionStartIndex, t1);
        _this.currentSelectionStartIndex = t1;
        _this.currentSelectionEndIndex = _this._adjustSelectionIndexBasedOnSelectionGeometry$2(_this.currentSelectionEndIndex, t1);
      }
      startGeometry = _this.selectables[_this.currentSelectionStartIndex].get$value();
      t1 = _this.currentSelectionEndIndex;
      startIndexWalker = _this.currentSelectionStartIndex;
      forwardSelection = t1 >= startIndexWalker;
      while (true) {
        if (!(startIndexWalker !== _this.currentSelectionEndIndex && startGeometry.startSelectionPoint == null))
          break;
        startIndexWalker += forwardSelection ? 1 : -1;
        startGeometry = _this.selectables[startIndexWalker].get$value();
      }
      t1 = startGeometry.startSelectionPoint;
      if (t1 != null) {
        t2 = _this.selectables[startIndexWalker];
        t3 = _this._selectionContainerContext.get$renderObject();
        t3.toString;
        start = A.MatrixUtils_transformPoint(t2.getTransformTo$1(type$.RenderBox._as(t3)), t1.localPosition);
        startPoint = isFinite(start._dx) && isFinite(start._dy) ? new A.SelectionPoint(start, t1.lineHeight, t1.handleType) : _null;
      } else
        startPoint = _null;
      endGeometry = _this.selectables[_this.currentSelectionEndIndex].get$value();
      endIndexWalker = _this.currentSelectionEndIndex;
      while (true) {
        if (!(endIndexWalker !== _this.currentSelectionStartIndex && endGeometry.endSelectionPoint == null))
          break;
        endIndexWalker += forwardSelection ? -1 : 1;
        endGeometry = _this.selectables[endIndexWalker].get$value();
      }
      t1 = endGeometry.endSelectionPoint;
      if (t1 != null) {
        t2 = _this.selectables[endIndexWalker];
        t3 = _this._selectionContainerContext.get$renderObject();
        t3.toString;
        end = A.MatrixUtils_transformPoint(t2.getTransformTo$1(type$.RenderBox._as(t3)), t1.localPosition);
        endPoint = isFinite(end._dx) && isFinite(end._dy) ? new A.SelectionPoint(end, t1.lineHeight, t1.handleType) : _null;
      } else
        endPoint = _null;
      return new A.SelectionGeometry(startPoint, endPoint, !startGeometry.$eq(0, endGeometry) ? B.SelectionStatus_0 : startGeometry.status, true);
    },
    _adjustSelectionIndexBasedOnSelectionGeometry$2(currentIndex, towardIndex) {
      var $forward = towardIndex > currentIndex;
      while (true) {
        if (!(currentIndex !== towardIndex && this.selectables[currentIndex].get$value().status !== B.SelectionStatus_0))
          break;
        currentIndex += $forward ? 1 : -1;
      }
      return currentIndex;
    },
    pushHandleLayers$2(startHandle, endHandle) {
      return;
    },
    _updateHandleLayersAndOwners$0() {
      var t2, _this = this, _null = null,
        effectiveStartHandle = _this._startHandleLayer,
        effectiveEndHandle = _this._endHandleLayer,
        t1 = _this.currentSelectionStartIndex;
      if (t1 === -1 || _this.currentSelectionEndIndex === -1) {
        t1 = _this._startHandleLayerOwner;
        if (t1 != null) {
          t1.pushHandleLayers$2(_null, _null);
          _this._startHandleLayerOwner = null;
        }
        t1 = _this._endHandleLayerOwner;
        if (t1 != null) {
          t1.pushHandleLayers$2(_null, _null);
          _this._endHandleLayerOwner = null;
        }
        return;
      }
      t1 = _this.selectables[t1];
      t2 = _this._startHandleLayerOwner;
      if (t1 !== t2)
        if (t2 != null)
          t2.pushHandleLayers$2(_null, _null);
      t1 = _this.selectables[_this.currentSelectionEndIndex];
      t2 = _this._endHandleLayerOwner;
      if (t1 !== t2)
        if (t2 != null)
          t2.pushHandleLayers$2(_null, _null);
      t1 = _this.selectables;
      t2 = _this.currentSelectionStartIndex;
      t1 = _this._startHandleLayerOwner = t1[t2];
      if (t2 === _this.currentSelectionEndIndex) {
        _this._endHandleLayerOwner = t1;
        t1.pushHandleLayers$2(effectiveStartHandle, effectiveEndHandle);
        return;
      }
      t1.pushHandleLayers$2(effectiveStartHandle, _null);
      t1 = _this.selectables[_this.currentSelectionEndIndex];
      _this._endHandleLayerOwner = t1;
      t1.pushHandleLayers$2(_null, effectiveEndHandle);
    },
    handleSelectAll$1($event) {
      var t1, t2, _i, _this = this;
      for (t1 = _this.selectables, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i)
        _this.dispatchSelectionEventToChild$2(t1[_i], $event);
      _this.currentSelectionStartIndex = 0;
      _this.currentSelectionEndIndex = _this.selectables.length - 1;
      return B.SelectionResult_4;
    },
    handleSelectWord$1($event) {
      var index, t1, t2, existingGeometry, _this = this;
      for (index = 0; t1 = _this.selectables, index < t1.length; ++index) {
        t1 = t1[index].get$size();
        t2 = _this.selectables[index].get$size();
        if (A.MatrixUtils_transformRect(_this.selectables[index].getTransformTo$1(null), new A.Rect(0, 0, 0 + t1._dx, 0 + t2._dy)).contains$1(0, $event.get$globalPosition())) {
          existingGeometry = _this.selectables[index].get$value();
          _this.dispatchSelectionEventToChild$2(_this.selectables[index], $event);
          if (!_this.selectables[index].get$value().$eq(0, existingGeometry)) {
            t1 = _this.selectables;
            new A.WhereIterable(t1, new A.MultiSelectableSelectionContainerDelegate_handleSelectWord_closure(_this, index), A._arrayInstanceType(t1)._eval$1("WhereIterable<1>")).forEach$1(0, new A.MultiSelectableSelectionContainerDelegate_handleSelectWord_closure0(_this));
            _this.currentSelectionStartIndex = _this.currentSelectionEndIndex = index;
          }
          return B.SelectionResult_2;
        }
      }
      return B.SelectionResult_4;
    },
    handleClearSelection$1($event) {
      var t1, t2, _i, _this = this;
      for (t1 = _this.selectables, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i)
        _this.dispatchSelectionEventToChild$2(t1[_i], $event);
      _this.currentSelectionStartIndex = _this.currentSelectionEndIndex = -1;
      return B.SelectionResult_4;
    },
    handleGranularlyExtendSelection$1($event) {
      var targetIndex, result, t1, _this = this;
      if (_this.currentSelectionStartIndex === -1)
        if ($event.get$forward())
          _this.currentSelectionStartIndex = _this.currentSelectionEndIndex = 0;
        else
          _this.currentSelectionStartIndex = _this.currentSelectionEndIndex = _this.selectables.length;
      targetIndex = $event.get$isEnd() ? _this.currentSelectionEndIndex : _this.currentSelectionStartIndex;
      result = _this.dispatchSelectionEventToChild$2(_this.selectables[targetIndex], $event);
      if ($event.get$forward())
        while (true) {
          t1 = _this.selectables;
          if (!(targetIndex < t1.length - 1 && result === B.SelectionResult_0))
            break;
          ++targetIndex;
          result = _this.dispatchSelectionEventToChild$2(t1[targetIndex], $event);
        }
      else
        while (true) {
          if (!(targetIndex > 0 && result === B.SelectionResult_1))
            break;
          --targetIndex;
          result = _this.dispatchSelectionEventToChild$2(_this.selectables[targetIndex], $event);
        }
      if ($event.get$isEnd())
        _this.currentSelectionEndIndex = targetIndex;
      else
        _this.currentSelectionStartIndex = targetIndex;
      return result;
    },
    handleDirectionallyExtendSelection$1($event) {
      var targetIndex, result, t1, _this = this;
      if (_this.currentSelectionStartIndex === -1)
        switch ($event.get$direction()) {
          case B.SelectionExtendDirection_0:
          case B.SelectionExtendDirection_3:
            _this.currentSelectionStartIndex = _this.currentSelectionEndIndex = _this.selectables.length;
            break;
          case B.SelectionExtendDirection_1:
          case B.SelectionExtendDirection_2:
            _this.currentSelectionStartIndex = _this.currentSelectionEndIndex = 0;
            break;
        }
      targetIndex = $event.get$isEnd() ? _this.currentSelectionEndIndex : _this.currentSelectionStartIndex;
      result = _this.dispatchSelectionEventToChild$2(_this.selectables[targetIndex], $event);
      switch ($event.get$direction()) {
        case B.SelectionExtendDirection_0:
          if (result === B.SelectionResult_1)
            if (targetIndex > 0) {
              --targetIndex;
              result = _this.dispatchSelectionEventToChild$2(_this.selectables[targetIndex], $event.copyWith$1$direction(B.SelectionExtendDirection_3));
            }
          break;
        case B.SelectionExtendDirection_1:
          if (result === B.SelectionResult_0) {
            t1 = _this.selectables;
            if (targetIndex < t1.length - 1) {
              ++targetIndex;
              result = _this.dispatchSelectionEventToChild$2(t1[targetIndex], $event.copyWith$1$direction(B.SelectionExtendDirection_2));
            }
          }
          break;
        case B.SelectionExtendDirection_2:
        case B.SelectionExtendDirection_3:
          break;
      }
      if ($event.get$isEnd())
        _this.currentSelectionEndIndex = targetIndex;
      else
        _this.currentSelectionStartIndex = targetIndex;
      return result;
    },
    handleSelectionEdgeUpdate$1($event) {
      var _this = this;
      if ($event.type === B.SelectionEventType_1)
        return _this.currentSelectionEndIndex === -1 ? _this._initSelection$2$isEnd($event, true) : _this._adjustSelection$2$isEnd($event, true);
      return _this.currentSelectionStartIndex === -1 ? _this._initSelection$2$isEnd($event, false) : _this._adjustSelection$2$isEnd($event, false);
    },
    dispatchSelectionEvent$1($event) {
      var result, result0, t1, _this = this,
        selectionWillbeInProgress = !($event instanceof A.ClearSelectionEvent);
      if (!_this._selectionInProgress && selectionWillbeInProgress)
        B.JSArray_methods.sort$1(_this.selectables, _this.get$_compareScreenOrder());
      _this._selectionInProgress = selectionWillbeInProgress;
      _this._isHandlingSelectionEvent = true;
      result = A._Cell$();
      switch ($event.type.index) {
        case 0:
        case 1:
          _this._extendSelectionInProgress = false;
          result.__late_helper$_value = _this.handleSelectionEdgeUpdate$1(type$.SelectionEdgeUpdateEvent._as($event));
          break;
        case 2:
          _this._extendSelectionInProgress = false;
          type$.ClearSelectionEvent._as($event);
          _this._selectableStartEdgeUpdateRecords.clear$0(0);
          _this._selectableEndEdgeUpdateRecords.clear$0(0);
          _this._currentDragEndRelatedToOrigin = _this._currentDragStartRelatedToOrigin = null;
          _this._selectionStartsInScrollable = false;
          result.__late_helper$_value = _this.super$MultiSelectableSelectionContainerDelegate$handleClearSelection($event);
          break;
        case 3:
          _this._extendSelectionInProgress = false;
          result0 = _this.super$MultiSelectableSelectionContainerDelegate$handleSelectAll(type$.SelectAllSelectionEvent._as($event));
          if (_this.currentSelectionStartIndex !== -1)
            _this._updateDragLocationsFromGeometries$0();
          result.__late_helper$_value = result0;
          break;
        case 4:
          _this._extendSelectionInProgress = false;
          type$.SelectWordSelectionEvent._as($event);
          _this._selectionStartsInScrollable = _this._globalPositionInScrollable$1($event.get$globalPosition());
          result0 = _this.super$MultiSelectableSelectionContainerDelegate$handleSelectWord($event);
          _this._updateDragLocationsFromGeometries$0();
          result.__late_helper$_value = result0;
          break;
        case 5:
          _this._extendSelectionInProgress = true;
          type$.GranularlyExtendSelectionEvent._as($event);
          result0 = _this.super$MultiSelectableSelectionContainerDelegate$handleGranularlyExtendSelection($event);
          t1 = $event.get$isEnd();
          _this._updateDragLocationsFromGeometries$2$forceUpdateEnd$forceUpdateStart($event.get$isEnd(), !t1);
          if (_this._selectionStartsInScrollable)
            _this._jumpToEdge$1($event.get$isEnd());
          result.__late_helper$_value = result0;
          break;
        case 6:
          _this._extendSelectionInProgress = true;
          type$.DirectionallyExtendSelectionEvent._as($event);
          result0 = _this.super$MultiSelectableSelectionContainerDelegate$handleDirectionallyExtendSelection($event);
          t1 = $event.get$isEnd();
          _this._updateDragLocationsFromGeometries$2$forceUpdateEnd$forceUpdateStart($event.get$isEnd(), !t1);
          if (_this._selectionStartsInScrollable)
            _this._jumpToEdge$1($event.get$isEnd());
          result.__late_helper$_value = result0;
          break;
      }
      _this._isHandlingSelectionEvent = false;
      _this._updateSelectionGeometry$0();
      return result._readLocal$0();
    },
    dispose$0() {
      var t1, t2, t3, _i, _this = this;
      for (t1 = _this.selectables, t2 = t1.length, t3 = _this.get$_handleSelectableGeometryChange(), _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i)
        t1[_i].removeListener$1(t3);
      _this.selectables = B.List_empty7;
      _this._scheduledSelectableUpdate = false;
      _this.super$ChangeNotifier$dispose();
    },
    dispatchSelectionEventToChild$2(selectable, $event) {
      return selectable.dispatchSelectionEvent$1($event);
    },
    _initSelection$2$isEnd($event, isEnd) {
      var t1, hasFoundEdgeIndex0, _this = this, newIndex = -1,
        hasFoundEdgeIndex = false,
        result = null, index = 0;
      while (true) {
        t1 = _this.selectables;
        if (!(index < t1.length && !hasFoundEdgeIndex))
          break;
        hasFoundEdgeIndex0 = true;
        switch (_this.dispatchSelectionEventToChild$2(t1[index], $event).index) {
          case 0:
          case 4:
            newIndex = index;
            break;
          case 2:
            hasFoundEdgeIndex = hasFoundEdgeIndex0;
            newIndex = index;
            result = B.SelectionResult_2;
            break;
          case 1:
            if (index === 0) {
              newIndex = 0;
              result = B.SelectionResult_1;
            }
            if (result == null)
              result = B.SelectionResult_2;
            hasFoundEdgeIndex = hasFoundEdgeIndex0;
            break;
          case 3:
            hasFoundEdgeIndex = hasFoundEdgeIndex0;
            newIndex = index;
            result = B.SelectionResult_3;
            break;
        }
        ++index;
      }
      if (newIndex === -1)
        return B.SelectionResult_4;
      if (isEnd)
        _this.currentSelectionEndIndex = newIndex;
      else
        _this.currentSelectionStartIndex = newIndex;
      return result == null ? B.SelectionResult_0 : result;
    },
    _adjustSelection$2$isEnd($event, isEnd) {
      var t1, finalResult0, _this = this,
        newIndex = isEnd ? _this.currentSelectionEndIndex : _this.currentSelectionStartIndex,
        currentSelectableResult = A._Cell$(),
        finalResult = null, $forward = null;
      while (true) {
        t1 = _this.selectables;
        if (!(newIndex < t1.length && newIndex >= 0 && finalResult == null))
          break;
        finalResult0 = currentSelectableResult.__late_helper$_value = _this.dispatchSelectionEventToChild$2(t1[newIndex], $event);
        switch (finalResult0.index) {
          case 2:
          case 3:
          case 4:
            finalResult = finalResult0;
            break;
          case 0:
            if ($forward === false) {
              ++newIndex;
              finalResult = B.SelectionResult_2;
            } else if (newIndex === _this.selectables.length - 1)
              finalResult = finalResult0;
            else {
              ++newIndex;
              $forward = true;
            }
            break;
          case 1:
            if ($forward === true) {
              --newIndex;
              finalResult = B.SelectionResult_2;
            } else if (newIndex === 0)
              finalResult = finalResult0;
            else {
              --newIndex;
              $forward = false;
            }
            break;
        }
      }
      if (isEnd)
        _this.currentSelectionEndIndex = newIndex;
      else
        _this.currentSelectionStartIndex = newIndex;
      finalResult.toString;
      return finalResult;
    },
    compareOrder$2(arg0, arg1) {
      return this.get$compareOrder().call$2(arg0, arg1);
    }
  };
  A.MultiSelectableSelectionContainerDelegate__scheduleSelectableUpdate_closure.prototype = {
    call$1(timeStamp) {
      var t1 = this.$this;
      if (!t1._scheduledSelectableUpdate)
        return;
      t1._scheduledSelectableUpdate = false;
      if (t1._additions._collection$_length !== 0)
        t1._flushAdditions$0();
      t1.didChangeSelectables$0();
    },
    $signature: 1
  };
  A.MultiSelectableSelectionContainerDelegate_handleSelectWord_closure.prototype = {
    call$1(target) {
      return target !== this.$this.selectables[this.index];
    },
    $signature: 262
  };
  A.MultiSelectableSelectionContainerDelegate_handleSelectWord_closure0.prototype = {
    call$1(target) {
      return this.$this.dispatchSelectionEventToChild$2(target, B.ClearSelectionEvent_SelectionEventType_2);
    },
    $signature: 40
  };
  A._MultiSelectableSelectionContainerDelegate_SelectionContainerDelegate_ChangeNotifier.prototype = {};
  A.SelectionContainer.prototype = {
    createState$0() {
      return new A._SelectionContainerState(A.LinkedHashSet_LinkedHashSet$_empty(type$.void_Function), null, false);
    }
  };
  A._SelectionContainerState.prototype = {
    initState$0() {
      var t1, t2, t3, _this = this;
      _this.super$State$initState();
      t1 = _this._widget;
      t2 = t1.delegate;
      t3 = _this._element;
      t3.toString;
      t2._selectionContainerContext = t3;
      _this.set$registrar(t1.registrar);
    },
    didUpdateWidget$1(oldWidget) {
      var t1, t2, t3, t4, listener, _this = this;
      _this.super$State$didUpdateWidget(oldWidget);
      t1 = oldWidget.delegate;
      if (t1 !== _this._widget.delegate) {
        t1._selectionContainerContext = null;
        t2 = _this._selection_container$_listeners;
        t2.forEach$1(0, t1.get$removeListener());
        t3 = _this._widget.delegate;
        t4 = _this._element;
        t4.toString;
        t3._selectionContainerContext = t4;
        t2.forEach$1(0, t3.get$addListener());
        t1 = t1._selectionGeometry;
        t3 = _this._widget.delegate._selectionGeometry;
        if (!t1.$eq(0, t3))
          for (t1 = A._LinkedHashSetIterator$(t2, t2._collection$_modifications, A._instanceType(t2)._precomputed1), t2 = t1.$ti._precomputed1; t1.moveNext$0();) {
            listener = t1._current;
            (listener == null ? t2._as(listener) : listener).call$0();
          }
      }
      t1 = _this._widget;
      _this.set$registrar(t1.registrar);
    },
    didChangeDependencies$0() {
      this.super$State$didChangeDependencies();
      this._widget.toString;
    },
    addListener$1(listener) {
      this._widget.delegate.addListener$1(listener);
      this._selection_container$_listeners.add$1(0, listener);
    },
    removeListener$1(listener) {
      this._widget.delegate.removeListener$1(listener);
      this._selection_container$_listeners.remove$1(0, listener);
    },
    pushHandleLayers$2(startHandle, endHandle) {
      this._widget.delegate.pushHandleLayers$2(startHandle, endHandle);
    },
    dispatchSelectionEvent$1($event) {
      return this._widget.delegate.dispatchSelectionEvent$1($event);
    },
    get$value() {
      var t1 = this._widget;
      return t1.delegate._selectionGeometry;
    },
    getTransformTo$1(ancestor) {
      return this._element.get$renderObject().getTransformTo$1(ancestor);
    },
    get$size() {
      var t1 = this._element.get$renderObject();
      t1.toString;
      t1 = type$.RenderBox._as(t1)._size;
      t1.toString;
      return t1;
    },
    dispose$0() {
      var t1 = this._widget.delegate;
      t1._selectionContainerContext = null;
      this._selection_container$_listeners.forEach$1(0, t1.get$removeListener());
      this.super$__SelectionContainerState_State_Selectable_SelectionRegistrant$dispose();
    },
    build$1(context) {
      var t1 = this._widget;
      return new A.SelectionRegistrarScope(t1.delegate, t1.child, null);
    },
    $isListenable: 1
  };
  A.SelectionRegistrarScope.prototype = {
    updateShouldNotify$1(oldWidget) {
      return oldWidget.registrar != this.registrar;
    }
  };
  A.SelectionContainerDelegate.prototype = {$isListenable: 1};
  A.__SelectionContainerState_State_Selectable.prototype = {};
  A.__SelectionContainerState_State_Selectable_SelectionRegistrant.prototype = {
    dispose$0() {
      this._removeSelectionRegistrarSubscription$0();
      this.super$State$dispose();
    }
  };
  A.SharedAppData.prototype = {
    createState$0() {
      return new A._SharedAppDataState();
    }
  };
  A._SharedAppDataState.prototype = {
    build$1(context) {
      var t1 = this._widget.child,
        value = this.___SharedAppDataState_data_AI;
      return new A._SharedAppModel(value === $ ? this.___SharedAppDataState_data_AI = A.LinkedHashMap_LinkedHashMap$_empty(type$.Object, type$.nullable_Object) : value, t1, null);
    }
  };
  A._SharedAppModel.prototype = {
    updateShouldNotify$1(old) {
      return this.data !== old.data;
    },
    updateShouldNotifyDependent$2(old, keys) {
      var t1, t2, t3, t4;
      for (t1 = keys.get$iterator(keys), t2 = this.data, t3 = old.data; t1.moveNext$0();) {
        t4 = t1.get$current();
        if (!J.$eq$(t2.$index(0, t4), t3.$index(0, t4)))
          return true;
      }
      return false;
    }
  };
  A.SingleActivator.prototype = {$isShortcutActivator: 1};
  A._ActivatorIntentPair.prototype = {};
  A.ShortcutManager.prototype = {
    set$shortcuts(value) {
      var _this = this;
      if (!A.mapEquals(_this._shortcuts, value)) {
        _this._shortcuts = value;
        _this._indexedShortcutsCache = null;
        _this.notifyListeners$0();
      }
    },
    get$_indexedShortcuts() {
      var t1 = this._indexedShortcutsCache;
      return t1 == null ? this._indexedShortcutsCache = A.ShortcutManager__indexShortcuts(this._shortcuts) : t1;
    },
    _find$2($event, state) {
      var t2, t3, t4, t5, t6, _i, activatorIntent, t7, pressed, t8, t9,
        candidatesByKey = this.get$_indexedShortcuts().$index(0, $event.data.get$logicalKey()),
        candidatesByNull = this.get$_indexedShortcuts().$index(0, null),
        t1 = A._setArrayType([], type$.JSArray__ActivatorIntentPair);
      if (candidatesByKey != null)
        B.JSArray_methods.addAll$1(t1, candidatesByKey);
      if (candidatesByNull != null)
        B.JSArray_methods.addAll$1(t1, candidatesByNull);
      for (t2 = t1.length, t3 = $event instanceof A.RawKeyDownEvent, t4 = state._keysPressed, t5 = A._instanceType(t4)._eval$1("LinkedHashMapValuesIterable<2>"), t6 = t5._eval$1("Iterable.E"), _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
        activatorIntent = t1[_i];
        t7 = activatorIntent.activator;
        pressed = A.LinkedHashSet_LinkedHashSet(t6);
        pressed.addAll$1(0, new A.LinkedHashMapValuesIterable(t4, t5));
        t8 = false;
        if (t3) {
          t9 = pressed.contains$1(0, B.LogicalKeyboardKey_8589934848) || pressed.contains$1(0, B.LogicalKeyboardKey_8589934849);
          if (t7.control === t9) {
            t9 = pressed.contains$1(0, B.LogicalKeyboardKey_8589934850) || pressed.contains$1(0, B.LogicalKeyboardKey_8589934851);
            if (t7.shift === t9) {
              t9 = pressed.contains$1(0, B.LogicalKeyboardKey_8589934852) || pressed.contains$1(0, B.LogicalKeyboardKey_8589934853);
              if (t7.alt === t9) {
                t8 = pressed.contains$1(0, B.LogicalKeyboardKey_8589934854) || pressed.contains$1(0, B.LogicalKeyboardKey_8589934855);
                t8 = t7.meta === t8;
                t7 = t8;
              } else
                t7 = t8;
            } else
              t7 = t8;
          } else
            t7 = t8;
        } else
          t7 = t8;
        if (t7)
          return activatorIntent.intent;
      }
      return null;
    },
    handleKeypress$2(context, $event) {
      var t1, primaryContext, action,
        matchedIntent = this._find$2($event, $.$get$RawKeyboard_instance());
      if (matchedIntent != null) {
        t1 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner.focusManager._primaryFocus;
        primaryContext = t1 == null ? null : t1._context;
        if (primaryContext != null) {
          action = A.Actions_maybeFind(primaryContext, matchedIntent, type$.Intent);
          if (action != null && action.isEnabled$1(matchedIntent)) {
            primaryContext.dependOnInheritedWidgetOfExactType$1$0(type$._ActionsScope);
            t1 = A.Actions__findDispatcher(primaryContext);
            return action.toKeyEventResult$2(matchedIntent, t1.invokeAction$3(action, matchedIntent, primaryContext));
          }
        }
      }
      return B.KeyEventResult_1;
    },
    $isListenable: 1
  };
  A.ShortcutManager__indexShortcuts_closure.prototype = {
    call$2(activator, intent) {
      var nullableTriggers = [activator.trigger],
        t1 = this.result,
        _i = 0;
      for (; _i < 1; ++_i)
        J.add$1$ax(t1.putIfAbsent$2(nullableTriggers[_i], new A.ShortcutManager__indexShortcuts__closure()), new A._ActivatorIntentPair(activator, intent));
    },
    $signature: 263
  };
  A.ShortcutManager__indexShortcuts__closure.prototype = {
    call$0() {
      return A._setArrayType([], type$.JSArray__ActivatorIntentPair);
    },
    $signature: 264
  };
  A.Shortcuts.prototype = {
    get$shortcuts() {
      var t1 = this.manager;
      return t1 == null ? this._shortcuts : t1._shortcuts;
    },
    createState$0() {
      return new A._ShortcutsState();
    }
  };
  A._ShortcutsState.prototype = {
    dispose$0() {
      var t1 = this._internalManager;
      if (t1 != null) {
        t1.ChangeNotifier__listeners = $.$get$ChangeNotifier__emptyListeners();
        t1.ChangeNotifier__count = 0;
      }
      this.super$State$dispose();
    },
    initState$0() {
      var t1, t2;
      this.super$State$initState();
      t1 = this._widget;
      if (t1.manager == null) {
        t2 = new A.ShortcutManager(B.Map_empty0, $.$get$ChangeNotifier__emptyListeners());
        this._internalManager = t2;
        t2.set$shortcuts(t1.get$shortcuts());
      }
    },
    didUpdateWidget$1(oldWidget) {
      var t1, t2, _this = this;
      _this.super$State$didUpdateWidget(oldWidget);
      t1 = _this._widget;
      t2 = t1.manager;
      if (t2 != oldWidget.manager)
        if (t2 != null) {
          t2 = _this._internalManager;
          if (t2 != null) {
            t2.ChangeNotifier__listeners = $.$get$ChangeNotifier__emptyListeners();
            t2.ChangeNotifier__count = 0;
          }
          _this._internalManager = null;
        } else if (_this._internalManager == null)
          _this._internalManager = new A.ShortcutManager(B.Map_empty0, $.$get$ChangeNotifier__emptyListeners());
      t2 = _this._internalManager;
      if (t2 != null)
        t2.set$shortcuts(t1.get$shortcuts());
    },
    _handleOnKey$2(node, $event) {
      var t2,
        t1 = node._context;
      if (t1 == null)
        return B.KeyEventResult_1;
      t2 = this._widget.manager;
      if (t2 == null) {
        t2 = this._internalManager;
        t2.toString;
      }
      return t2.handleKeypress$2(t1, $event);
    },
    build$1(context) {
      var _null = null,
        t1 = B.Type_Shortcuts_Qeb.toString$0(0);
      return A.Focus$(false, false, this._widget.child, t1, _null, _null, _null, true, _null, _null, this.get$_handleOnKey(), _null, _null, _null);
    }
  };
  A.ShortcutRegistry.prototype = {
    get$shortcuts() {
      var t2,
        t1 = A.LinkedHashMap_LinkedHashMap$_empty(type$.ShortcutActivator, type$.Intent);
      for (t2 = this._registeredShortcuts, t2 = new A.LinkedHashMapEntriesIterable(t2, A._instanceType(t2)._eval$1("LinkedHashMapEntriesIterable<1,2>")).get$iterator(0); t2.moveNext$0();)
        t1.addAll$1(0, t2.__js_helper$_current.value);
      return t1;
    },
    $isListenable: 1
  };
  A.ShortcutRegistrar.prototype = {
    createState$0() {
      var t1 = $.$get$ChangeNotifier__emptyListeners();
      return new A._ShortcutRegistrarState(new A.ShortcutRegistry(A.LinkedHashMap_LinkedHashMap$_empty(type$.ShortcutRegistryEntry, type$.Map_ShortcutActivator_Intent), t1), new A.ShortcutManager(B.Map_empty0, t1));
    }
  };
  A._ShortcutRegistrarState.prototype = {
    initState$0() {
      this.super$State$initState();
      this.registry.addListener$1(this.get$_shortcutsChanged());
    },
    _shortcutsChanged$0() {
      this.manager.set$shortcuts(this.registry.get$shortcuts());
    },
    dispose$0() {
      var t1 = this.registry;
      t1.removeListener$1(this.get$_shortcutsChanged());
      t1.super$ChangeNotifier$dispose();
      this.super$State$dispose();
    },
    build$1(context) {
      return new A._ShortcutRegistrarScope(this.registry, new A.Shortcuts(this.manager, B.Map_empty0, this._widget.child, null, null), null);
    }
  };
  A._ShortcutRegistrarScope.prototype = {
    updateShouldNotify$1(oldWidget) {
      return this.registry !== oldWidget.registry;
    }
  };
  A._ShortcutManager_Object_Diagnosticable.prototype = {};
  A._ShortcutManager_Object_Diagnosticable_ChangeNotifier.prototype = {};
  A._ShortcutRegistry_Object_ChangeNotifier.prototype = {};
  A._SingleActivator_Object_Diagnosticable.prototype = {};
  A._SingleActivator_Object_Diagnosticable_MenuSerializableShortcut.prototype = {};
  A.__ActivatorIntentPair_Object_Diagnosticable.prototype = {};
  A.SnapshotMode.prototype = {
    _enumToString$0() {
      return "SnapshotMode." + this._name;
    }
  };
  A.SnapshotController.prototype = {
    set$allowSnapshotting(value) {
      return;
    }
  };
  A.SnapshotWidget.prototype = {
    createRenderObject$1(context) {
      var t1 = new A._RenderSnapshotWidget(A.InheritedModel_inheritFrom(context, B._MediaQueryAspect_2, type$.MediaQuery).data.devicePixelRatio, this.painter, this.controller, this.mode, true, null, A.LayerHandle$());
      t1.RenderObject$0();
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      type$._RenderSnapshotWidget._as(renderObject);
      renderObject.set$controller(this.controller);
      renderObject.set$mode(this.mode);
      renderObject.set$devicePixelRatio(A.InheritedModel_inheritFrom(context, B._MediaQueryAspect_2, type$.MediaQuery).data.devicePixelRatio);
      renderObject.set$painter(this.painter);
      renderObject.set$autoresize(true);
    }
  };
  A._RenderSnapshotWidget.prototype = {
    set$devicePixelRatio(value) {
      if (value === this._devicePixelRatio)
        return;
      this._devicePixelRatio = value;
      return;
    },
    set$painter(value) {
      var t2, _this = this,
        t1 = _this._snapshot_widget$_painter;
      if (value === t1)
        return;
      t2 = _this.get$markNeedsPaint();
      t1.removeListener$1(t2);
      _this._snapshot_widget$_painter = value;
      if (A.getRuntimeTypeOfDartObject(t1) !== A.getRuntimeTypeOfDartObject(_this._snapshot_widget$_painter) || _this._snapshot_widget$_painter.shouldRepaint$1(t1))
        _this.markNeedsPaint$0();
      if (_this._node$_owner != null)
        _this._snapshot_widget$_painter.addListener$1(t2);
    },
    set$controller(value) {
      var t2, _this = this,
        t1 = _this._snapshot_widget$_controller;
      if (value === t1)
        return;
      t2 = _this.get$_onRasterValueChanged();
      t1.removeListener$1(t2);
      _this._snapshot_widget$_controller = value;
      if (_this._node$_owner != null)
        value.addListener$1(t2);
    },
    set$mode(value) {
      if (value === this._snapshot_widget$_mode)
        return;
      this._snapshot_widget$_mode = value;
      this.markNeedsPaint$0();
    },
    set$autoresize(value) {
      return;
    },
    attach$1(owner) {
      var _this = this;
      _this._snapshot_widget$_controller.addListener$1(_this.get$_onRasterValueChanged());
      _this._snapshot_widget$_painter.addListener$1(_this.get$markNeedsPaint());
      _this.super$_RenderProxyBox_RenderBox_RenderObjectWithChildMixin$attach(owner);
    },
    detach$0() {
      var _this = this;
      _this._disableSnapshotAttempt = false;
      _this._snapshot_widget$_controller.removeListener$1(_this.get$_onRasterValueChanged());
      _this._snapshot_widget$_painter.removeListener$1(_this.get$markNeedsPaint());
      _this._childRasterSize = _this._childRaster = null;
      _this.super$_RenderProxyBox_RenderBox_RenderObjectWithChildMixin$detach();
    },
    dispose$0() {
      var _this = this;
      _this._snapshot_widget$_controller.removeListener$1(_this.get$_onRasterValueChanged());
      _this._snapshot_widget$_painter.removeListener$1(_this.get$markNeedsPaint());
      _this._childRasterSize = _this._childRaster = null;
      _this.super$RenderObject$dispose();
    },
    _onRasterValueChanged$0() {
      var _this = this;
      _this._disableSnapshotAttempt = false;
      _this._childRasterSize = _this._childRaster = null;
      _this.markNeedsPaint$0();
    },
    paint$2(context, offset) {
      var _this = this,
        t1 = _this._size;
      if (t1.get$isEmpty(0)) {
        _this._childRasterSize = _this._childRaster = null;
        return;
      }
      _this._childRasterSize = _this._childRaster = null;
      _this._snapshot_widget$_painter.paint$4(context, offset, t1, A.RenderProxyBoxMixin.prototype.get$paint.call(_this));
      return;
    }
  };
  A.SnapshotPainter.prototype = {};
  A._DefaultSnapshotPainter.prototype = {
    get$_count() {
      return A.throwExpression(A.NoSuchMethodError_NoSuchMethodError$withInvocation(this, A.JSInvocationMirror$(B.Symbol__count, "get$_snapshot_widget$_count", 1, [], [], 0)));
    },
    set$_count(value) {
      A.throwExpression(A.NoSuchMethodError_NoSuchMethodError$withInvocation(this, A.JSInvocationMirror$(B.Symbol_14L, "set$_count_", 2, [value], [], 0)));
    },
    get$_listeners() {
      return A.throwExpression(A.NoSuchMethodError_NoSuchMethodError$withInvocation(this, A.JSInvocationMirror$(B.Symbol__listeners, "get$_snapshot_widget$_listeners", 1, [], [], 0)));
    },
    set$_listeners(value) {
      A.throwExpression(A.NoSuchMethodError_NoSuchMethodError$withInvocation(this, A.JSInvocationMirror$(B.Symbol_wUb, "set$_listeners_", 2, [value], [], 0)));
    },
    get$_notificationCallStackDepth() {
      return A.throwExpression(A.NoSuchMethodError_NoSuchMethodError$withInvocation(this, A.JSInvocationMirror$(B.Symbol__notificationCallStackDepth, "get$_snapshot_widget$_notificationCallStackDepth", 1, [], [], 0)));
    },
    set$_notificationCallStackDepth(value) {
      A.throwExpression(A.NoSuchMethodError_NoSuchMethodError$withInvocation(this, A.JSInvocationMirror$(B.Symbol_Uql, "set$_notificationCallStackDepth_", 2, [value], [], 0)));
    },
    get$_reentrantlyRemovedListeners() {
      return A.throwExpression(A.NoSuchMethodError_NoSuchMethodError$withInvocation(this, A.JSInvocationMirror$(B.Symbol__reentrantlyRemovedListeners, "get$_snapshot_widget$_reentrantlyRemovedListeners", 1, [], [], 0)));
    },
    set$_reentrantlyRemovedListeners(value) {
      A.throwExpression(A.NoSuchMethodError_NoSuchMethodError$withInvocation(this, A.JSInvocationMirror$(B.Symbol_QKO, "set$_reentrantlyRemovedListeners_", 2, [value], [], 0)));
    },
    _removeAt$1(index) {
      return A.throwExpression(A.NoSuchMethodError_NoSuchMethodError$withInvocation(this, A.JSInvocationMirror$(B.Symbol__removeAt, "_snapshot_widget$_removeAt$1", 0, [index], [], 0)));
    },
    $isListenable: 1
  };
  A.TapRegionSurface.prototype = {
    createRenderObject$1(context) {
      var t1 = new A.RenderTapRegionSurface(new A.Expando(new WeakMap()), A.LinkedHashSet_LinkedHashSet$_empty(type$.RenderTapRegion), A.LinkedHashMap_LinkedHashMap$_empty(type$.nullable_Object, type$.Set_RenderTapRegion), B.HitTestBehavior_0, null, A.LayerHandle$());
      t1.RenderObject$0();
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
    }
  };
  A.RenderTapRegionSurface.prototype = {
    hitTest$2$position(result, position) {
      var hitTarget, entry, _this = this;
      if (!_this._size.contains$1(0, position))
        return false;
      hitTarget = _this.hitTestChildren$2$position(result, position) || _this.behavior === B.HitTestBehavior_1;
      if (hitTarget) {
        entry = new A.BoxHitTestEntry(position, _this);
        _this._cachedResults.$indexSet(0, entry, result);
        result.add$1(0, entry);
      }
      return hitTarget;
    },
    handleEvent$2($event, entry) {
      var t1, result, t2, t3, hitRegions, insideRegions, t4, outsideRegions, _this = this;
      if (!type$.PointerDownEvent._is($event) || $event.get$buttons() !== 1)
        return;
      t1 = _this._registeredRegions;
      if (t1._collection$_length === 0)
        return;
      A.Expando__checkType(entry);
      result = _this._cachedResults._jsWeakMap.get(entry);
      if (result == null)
        return;
      t2 = _this._getRegionsHit$2(t1, result._path);
      t3 = type$.RenderTapRegion;
      hitRegions = A.Set_castFrom(t2, t2.get$_newSimilarSet(), A._instanceType(t2)._precomputed1, t3)._clone$0();
      insideRegions = A.LinkedHashSet_LinkedHashSet$_empty(t3);
      for (t2 = hitRegions.get$iterator(hitRegions), t3 = _this._groupIdToRegions; t2.moveNext$0();) {
        t4 = t2.get$current();
        t4.get$groupId();
        t4 = t3.$index(0, t4.get$groupId());
        t4.toString;
        insideRegions.addAll$1(0, t4);
      }
      outsideRegions = t1.difference$1(insideRegions);
      for (t1 = outsideRegions.get$iterator(outsideRegions); t1.moveNext$0();)
        t1.get$current().get$onTapOutside().call$1($event);
      for (t1 = A._LinkedHashSetIterator$(insideRegions, insideRegions._collection$_modifications, insideRegions.$ti._precomputed1), t2 = t1.$ti._precomputed1; t1.moveNext$0();) {
        t3 = t1._current;
        (t3 == null ? t2._as(t3) : t3).get$onTapInside().call$1($event);
      }
    },
    _getRegionsHit$2(detectors, hitTestPath) {
      var t1, t2, _i, target,
        hitRegions = A.LinkedHashSet_LinkedHashSet$_empty(type$.HitTestTarget);
      for (t1 = hitTestPath.length, t2 = this._registeredRegions, _i = 0; _i < hitTestPath.length; hitTestPath.length === t1 || (0, A.throwConcurrentModificationError)(hitTestPath), ++_i) {
        target = hitTestPath[_i].target;
        if (t2.contains$1(0, target))
          hitRegions.add$1(0, target);
      }
      return hitRegions;
    }
  };
  A.DefaultTextStyle.prototype = {
    updateShouldNotify$1(oldWidget) {
      var _this = this,
        t1 = true;
      if (_this.style.$eq(0, oldWidget.style))
        if (_this.softWrap === oldWidget.softWrap)
          if (_this.overflow === oldWidget.overflow)
            t1 = _this.textWidthBasis !== oldWidget.textWidthBasis;
      return t1;
    }
  };
  A._NullWidget2.prototype = {
    build$1(context) {
      throw A.wrapException(A.FlutterError_FlutterError("A DefaultTextStyle constructed with DefaultTextStyle.fallback cannot be incorporated into the widget tree, it is meant only to provide a fallback value returned by DefaultTextStyle.of() when no enclosing default text style is present in a BuildContext."));
    }
  };
  A.Text.prototype = {
    build$1(context) {
      var effectiveTextStyle, t1, registrar, t2, t3, t4, t5, t6, t7, result, _this = this, _null = null,
        defaultTextStyle = context.dependOnInheritedWidgetOfExactType$1$0(type$.DefaultTextStyle);
      if (defaultTextStyle == null)
        defaultTextStyle = B.DefaultTextStyle_4Wa;
      effectiveTextStyle = _this.style;
      if (effectiveTextStyle == null || effectiveTextStyle.inherit)
        effectiveTextStyle = defaultTextStyle.style.merge$1(effectiveTextStyle);
      t1 = A.MediaQuery__maybeOf(context, B._MediaQueryAspect_14);
      t1 = t1 == null ? _null : t1.boldText;
      if (t1 === true)
        effectiveTextStyle = effectiveTextStyle.merge$1(B.TextStyle_KXJ);
      registrar = A.SelectionContainer_maybeOf(context);
      t1 = _this.textAlign;
      if (t1 == null)
        t1 = defaultTextStyle.textAlign;
      if (t1 == null)
        t1 = B.TextAlign_4;
      t2 = _this.softWrap;
      if (t2 == null)
        t2 = defaultTextStyle.softWrap;
      t3 = _this.overflow;
      if (t3 == null)
        t3 = effectiveTextStyle.overflow;
      if (t3 == null)
        t3 = defaultTextStyle.overflow;
      t4 = A.MediaQuery__maybeOf(context, B._MediaQueryAspect_3);
      t4 = t4 == null ? _null : t4.textScaleFactor;
      if (t4 == null)
        t4 = 1;
      t5 = _this.maxLines;
      if (t5 == null)
        t5 = defaultTextStyle.maxLines;
      context.dependOnInheritedWidgetOfExactType$1$0(type$.DefaultTextHeightBehavior);
      t6 = context.dependOnInheritedWidgetOfExactType$1$0(type$.DefaultSelectionStyle);
      t6 = (t6 == null ? B.DefaultSelectionStyle_x1B : t6).selectionColor;
      if (t6 == null)
        t6 = B.Color_2155905152;
      t7 = _this.textSpan;
      t7 = t7 != null ? A._setArrayType([t7], type$.JSArray_InlineSpan) : _null;
      result = A.RichText$(_null, t5, t3, t6, registrar, t2, _null, A.TextSpan$(t7, effectiveTextStyle, _this.data), t1, _null, _null, t4, defaultTextStyle.textWidthBasis);
      if (registrar != null)
        result = A.MouseRegion$(result, B.SystemMouseCursor_text, _null, _null, _null, _null);
      return result;
    }
  };
  A.DoNothingAndStopPropagationTextIntent.prototype = {};
  A.DirectionalTextEditingIntent.prototype = {};
  A.DeleteCharacterIntent.prototype = {};
  A.DeleteToNextWordBoundaryIntent.prototype = {};
  A.DeleteToLineBreakIntent.prototype = {};
  A.DirectionalCaretMovementIntent.prototype = {};
  A.ExtendSelectionByCharacterIntent.prototype = {};
  A.ExtendSelectionToNextWordBoundaryIntent.prototype = {};
  A.ExtendSelectionToNextWordBoundaryOrCaretLocationIntent.prototype = {};
  A.ExpandSelectionToDocumentBoundaryIntent.prototype = {};
  A.ExpandSelectionToLineBreakIntent.prototype = {};
  A.ExtendSelectionToLineBreakIntent.prototype = {};
  A.ExtendSelectionVerticallyToAdjacentLineIntent.prototype = {};
  A.ExtendSelectionVerticallyToAdjacentPageIntent.prototype = {};
  A.ExtendSelectionToNextParagraphBoundaryIntent.prototype = {};
  A.ExtendSelectionToNextParagraphBoundaryOrCaretLocationIntent.prototype = {};
  A.ExtendSelectionToDocumentBoundaryIntent.prototype = {};
  A.ScrollToDocumentBoundaryIntent.prototype = {};
  A.SelectAllTextIntent.prototype = {};
  A.CopySelectionTextIntent.prototype = {};
  A.PasteTextIntent.prototype = {};
  A.RedoTextIntent.prototype = {};
  A.UndoTextIntent.prototype = {};
  A.TransposeCharactersIntent.prototype = {};
  A.TickerMode.prototype = {
    createState$0() {
      return new A._TickerModeState(A.ValueNotifier$(true));
    }
  };
  A._TickerModeState.prototype = {
    didChangeDependencies$0() {
      var widget, t1, _this = this;
      _this.super$State$didChangeDependencies();
      widget = _this._element.dependOnInheritedWidgetOfExactType$1$0(type$._EffectiveTickerMode);
      t1 = widget == null ? null : widget.enabled;
      _this._ancestorTicketMode = t1 !== false;
      _this._updateEffectiveMode$0();
    },
    didUpdateWidget$1(oldWidget) {
      this.super$State$didUpdateWidget(oldWidget);
      this._updateEffectiveMode$0();
    },
    dispose$0() {
      var t1 = this._effectiveMode;
      t1.ChangeNotifier__listeners = $.$get$ChangeNotifier__emptyListeners();
      t1.ChangeNotifier__count = 0;
      this.super$State$dispose();
    },
    _updateEffectiveMode$0() {
      var t1 = this._ancestorTicketMode && this._widget.enabled;
      this._effectiveMode.set$value(t1);
    },
    build$1(context) {
      var t1 = this._effectiveMode;
      return new A._EffectiveTickerMode(t1._change_notifier$_value, t1, this._widget.child, null);
    }
  };
  A._EffectiveTickerMode.prototype = {
    updateShouldNotify$1(oldWidget) {
      return this.enabled !== oldWidget.enabled;
    }
  };
  A.SingleTickerProviderStateMixin.prototype = {
    createTicker$1(onTick) {
      var t1, _this = this;
      _this.SingleTickerProviderStateMixin__ticker = new A.Ticker(onTick);
      _this._updateTickerModeNotifier$0();
      _this._updateTicker$0();
      t1 = _this.SingleTickerProviderStateMixin__ticker;
      t1.toString;
      return t1;
    },
    _updateTicker$0() {
      var t1 = this.SingleTickerProviderStateMixin__ticker;
      if (t1 != null)
        t1.set$muted(!this.SingleTickerProviderStateMixin__tickerModeNotifier._change_notifier$_value);
    },
    _updateTickerModeNotifier$0() {
      var newNotifier, _this = this,
        t1 = _this._element;
      t1.toString;
      newNotifier = A.TickerMode_getNotifier(t1);
      t1 = _this.SingleTickerProviderStateMixin__tickerModeNotifier;
      if (newNotifier === t1)
        return;
      if (t1 != null)
        t1.removeListener$1(_this.get$_updateTicker());
      newNotifier.addListener$1(_this.get$_updateTicker());
      _this.SingleTickerProviderStateMixin__tickerModeNotifier = newNotifier;
    }
  };
  A.TickerProviderStateMixin.prototype = {
    createTicker$1(onTick) {
      var result, _this = this;
      if (_this.TickerProviderStateMixin__tickerModeNotifier == null)
        _this._updateTickerModeNotifier$0();
      if (_this.TickerProviderStateMixin__tickers == null)
        _this.TickerProviderStateMixin__tickers = A.LinkedHashSet_LinkedHashSet$_empty(type$._WidgetTicker);
      result = new A._WidgetTicker(_this, onTick);
      result.set$muted(!_this.TickerProviderStateMixin__tickerModeNotifier._change_notifier$_value);
      _this.TickerProviderStateMixin__tickers.add$1(0, result);
      return result;
    },
    _updateTickers$0() {
      var muted, t2, t3,
        t1 = this.TickerProviderStateMixin__tickers;
      if (t1 != null) {
        muted = !this.TickerProviderStateMixin__tickerModeNotifier._change_notifier$_value;
        for (t1 = A._LinkedHashSetIterator$(t1, t1._collection$_modifications, A._instanceType(t1)._precomputed1), t2 = t1.$ti._precomputed1; t1.moveNext$0();) {
          t3 = t1._current;
          (t3 == null ? t2._as(t3) : t3).set$muted(muted);
        }
      }
    },
    _updateTickerModeNotifier$0() {
      var newNotifier, _this = this,
        t1 = _this._element;
      t1.toString;
      newNotifier = A.TickerMode_getNotifier(t1);
      t1 = _this.TickerProviderStateMixin__tickerModeNotifier;
      if (newNotifier === t1)
        return;
      if (t1 != null)
        t1.removeListener$1(_this.get$_updateTickers());
      newNotifier.addListener$1(_this.get$_updateTickers());
      _this.TickerProviderStateMixin__tickerModeNotifier = newNotifier;
    }
  };
  A._WidgetTicker.prototype = {
    dispose$0() {
      this._creator.TickerProviderStateMixin__tickers.remove$1(0, this);
      this.super$Ticker$dispose();
    }
  };
  A.Title.prototype = {
    build$1(context) {
      A.SystemChrome_setApplicationSwitcherDescription(new A.ApplicationSwitcherDescription(this.title, this.color.value));
      return this.child;
    }
  };
  A.AnimatedWidget.prototype = {
    createState$0() {
      return new A._AnimatedState();
    },
    get$listenable() {
      return this.listenable;
    }
  };
  A._AnimatedState.prototype = {
    initState$0() {
      this.super$State$initState();
      this._widget.get$listenable().addListener$1(this.get$_handleChange());
    },
    didUpdateWidget$1(oldWidget) {
      var t1, _this = this;
      _this.super$State$didUpdateWidget(oldWidget);
      if (_this._widget.get$listenable() !== oldWidget.get$listenable()) {
        t1 = _this.get$_handleChange();
        oldWidget.get$listenable().removeListener$1(t1);
        _this._widget.get$listenable().addListener$1(t1);
      }
    },
    dispose$0() {
      this._widget.get$listenable().removeListener$1(this.get$_handleChange());
      this.super$State$dispose();
    },
    _handleChange$0() {
      this.setState$1(new A._AnimatedState__handleChange_closure());
    },
    build$1(context) {
      return this._widget.build$1(context);
    }
  };
  A._AnimatedState__handleChange_closure.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A.SlideTransition.prototype = {
    build$1(context) {
      var _this = this,
        offset = type$.Animation_Offset._as(_this.listenable).get$value();
      if (_this.textDirection === B.TextDirection_0)
        offset = new A.Offset(-offset._dx, offset._dy);
      return new A.FractionalTranslation(offset, _this.transformHitTests, _this.child, null);
    }
  };
  A.ScaleTransition.prototype = {
    build$1(context) {
      var t1 = type$.Animation_double._as(this.listenable);
      switch (t1.get$status().index) {
        case 0:
        case 3:
          break;
        case 1:
        case 2:
          break;
      }
      t1 = t1.get$value();
      return new A.Transform(A.Matrix4_Matrix4$diagonal3Values(t1, t1, 1), B.Alignment_0_0, true, null, this.child, null);
    }
  };
  A.RotationTransition.prototype = {
    build$1(context) {
      var t1 = type$.Animation_double._as(this.listenable);
      switch (t1.get$status().index) {
        case 0:
        case 3:
          break;
        case 1:
        case 2:
          break;
      }
      t1 = t1.get$value();
      return new A.Transform(A.Transform__computeRotation(t1 * 3.141592653589793 * 2), B.Alignment_0_0, true, null, this.child, null);
    }
  };
  A.FadeTransition.prototype = {
    createRenderObject$1(context) {
      var _null = null,
        t1 = new A.RenderAnimatedOpacity(_null, _null, _null, _null, _null, A.LayerHandle$());
      t1.RenderObject$0();
      t1.set$child(_null);
      t1.set$opacity(this.opacity);
      t1.set$alwaysIncludeSemantics(false);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      renderObject.set$opacity(this.opacity);
      renderObject.set$alwaysIncludeSemantics(false);
    }
  };
  A.DecoratedBoxTransition.prototype = {
    build$1(context) {
      var t1 = this.decoration;
      return A.DecoratedBox$(this.child, t1._evaluatable.transform$1(t1.parent.get$value()), B.DecorationPosition_0);
    }
  };
  A.ListenableBuilder.prototype = {
    get$listenable() {
      return this.listenable;
    },
    build$1(context) {
      return this.builder$2(context, this.child);
    }
  };
  A.AnimatedBuilder.prototype = {
    get$builder() {
      return this.builder;
    },
    builder$2(arg0, arg1) {
      return this.get$builder().call$2(arg0, arg1);
    }
  };
  A.View.prototype = {
    build$1(context) {
      var t1 = this.view;
      return new A._ViewScope(t1, new A._MediaQueryFromView(t1, this.child, null), null);
    }
  };
  A._ViewScope.prototype = {
    updateShouldNotify$1(oldWidget) {
      return this.view !== oldWidget.view;
    }
  };
  A.MyApp.prototype = {
    build$1(context) {
      return new A.MaterialApp(B.MyHomePage_null, "Flutter Demo", A.ThemeData_ThemeData(null, B.MaterialColor_Map_tF9to_4280391411, null), null);
    }
  };
  A.MyHomePage.prototype = {
    createState$0() {
      return new A._MyHomePageState(A._LayoutNode__LayoutNode$generate(0));
    }
  };
  A._MyHomePageState.prototype = {
    build$1(context) {
      var _null = null;
      this._widget.toString;
      return new A.Scaffold(A.AppBar$(_null, _null, A.Text$("Flutter Demo Home Page", _null, _null, _null, _null)), new A._LayoutWidget(this.rootNode, B.ValueKey_root), _null);
    }
  };
  A._LayoutWidget.prototype = {
    createState$0() {
      return new A._LayoutWidgetState($.$get$random().nextBool$0(), null, null);
    }
  };
  A._LayoutWidgetState.prototype = {
    initState$0() {
      var t1, t2, _this = this;
      _this.super$State$initState();
      t1 = A.AnimationController$(null, B.Duration_5000000, null, null, _this);
      t1.didRegisterListener$0();
      t2 = t1.AnimationLocalListenersMixin__listeners;
      t2._isDirty = true;
      t2._observer_list$_list.push(new A._LayoutWidgetState_initState_closure(_this));
      t1.repeat$0();
      _this.___LayoutWidgetState__animation_F !== $ && A.throwUnnamedLateFieldAI();
      _this.___LayoutWidgetState__animation_F = t1;
    },
    build$1(context) {
      var delta, value, value0, children, _this = this,
        t1 = _this.___LayoutWidgetState__animation_F;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1 = t1.__AnimationController__value_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1 = B.JSNumber_methods.toInt$0(Math.abs(t1 - 0.5) * 3000);
      delta = t1 * (_this.isReversed ? -1 : 1);
      value = _this.___LayoutWidgetState_firstChild_FI;
      if (value === $)
        value = _this.___LayoutWidgetState_firstChild_FI = A._LayoutWidgetState__buildChild(B.ValueKey_1, _this._widget.node.firstChild);
      value0 = _this.___LayoutWidgetState_secondChild_FI;
      if (value0 === $)
        value0 = _this.___LayoutWidgetState_secondChild_FI = A._LayoutWidgetState__buildChild(B.ValueKey_2, _this._widget.node.secondChild);
      children = A._setArrayType([new A.Flexible(5000 + delta, B.FlexFit_1, value, null), new A.Flexible(5000 - delta, B.FlexFit_1, value0, null)], type$.JSArray_Widget);
      if (_this._widget.node.isColumn)
        return A.Column$(children, B.MainAxisAlignment_0);
      else
        return A.Row$(children, B.CrossAxisAlignment_2, B.MainAxisSize_1);
    }
  };
  A._LayoutWidgetState_initState_closure.prototype = {
    call$0() {
      this.$this.setState$1(new A._LayoutWidgetState_initState__closure());
    },
    $signature: 0
  };
  A._LayoutWidgetState_initState__closure.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A._LeafWidget.prototype = {
    build$1(context) {
      var t1;
      switch (this.node.kind.index) {
        case 0:
          return A.TextButton$(B.Text_HqU, new A._LeafWidget_build_closure());
        case 1:
          return new A.Checkbox(true, new A._LeafWidget_build_closure0(), null);
        case 2:
          return B.Text_B8g;
        case 3:
          return new A.CupertinoTimerPicker(new A._LeafWidget_build_closure1(), null);
        case 4:
          return B.CircularProgressIndicator_null;
        case 5:
          return new A.Slider(50, new A._LeafWidget_build_closure2(), 100, null);
        case 6:
          t1 = A.TextButton$(B.Text_c2P, new A._LeafWidget_build_closure3());
          return A.AppBar$(A._setArrayType([A.TextButton$(B.Text_yvw, new A._LeafWidget_build_closure4()), A.TextButton$(B.Text_4sR, new A._LeafWidget_build_closure5()), A.TextButton$(B.Text_uKv, new A._LeafWidget_build_closure6()), A.TextButton$(B.Text_zSG, new A._LeafWidget_build_closure7()), A.TextButton$(B.Text_FSA, new A._LeafWidget_build_closure8()), A.TextButton$(B.Text_VXX, new A._LeafWidget_build_closure9())], type$.JSArray_Widget), t1, B.Text_0OR);
      }
    }
  };
  A._LeafWidget_build_closure.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A._LeafWidget_build_closure0.prototype = {
    call$1(state) {
    },
    $signature: 265
  };
  A._LeafWidget_build_closure1.prototype = {
    call$1(duration) {
    },
    $signature: 1
  };
  A._LeafWidget_build_closure2.prototype = {
    call$1(value) {
    },
    $signature: 32
  };
  A._LeafWidget_build_closure3.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A._LeafWidget_build_closure4.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A._LeafWidget_build_closure5.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A._LeafWidget_build_closure6.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A._LeafWidget_build_closure7.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A._LeafWidget_build_closure8.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A._LeafWidget_build_closure9.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A._WidgetKind.prototype = {
    _enumToString$0() {
      return "_WidgetKind." + this._name;
    }
  };
  A._Node.prototype = {};
  A._LayoutNode.prototype = {};
  A._LeafNode.prototype = {};
  A.__LayoutWidgetState_State_SingleTickerProviderStateMixin.prototype = {
    dispose$0() {
      var _this = this,
        t1 = _this.SingleTickerProviderStateMixin__tickerModeNotifier;
      if (t1 != null)
        t1.removeListener$1(_this.get$_updateTicker());
      _this.SingleTickerProviderStateMixin__tickerModeNotifier = null;
      _this.super$State$dispose();
    },
    activate$0() {
      this.super$State$activate();
      this._updateTickerModeNotifier$0();
      this._updateTicker$0();
    }
  };
  A.initializeBenchmarkHarness_frameCallback.prototype = {
    call$3(frameCount, buildTime, drawTime) {
      var t1, t2, t3, _this = this;
      if (frameCount === 1)
        A.print(_this.name + ".TimeToFirstFrame(StartupTime): " + (1000 * Date.now() - _this.beforeStart) + " us.");
      t1 = _this.framesToSkip;
      t2 = _this.framesToTime;
      if (frameCount > t1 + t2) {
        t1 = _this._box_0;
        if (!t1.averagesPrinted) {
          t3 = _this.name;
          A.print(t3 + ".AverageBuild(RunTimeRaw): " + B.JSNumber_methods.toInt$0(t1.buildSum / t2 * 1000) + " us.");
          A.print(t3 + ".AverageDraw(RunTimeRaw): " + B.JSNumber_methods.toInt$0(t1.drawSum / t2 * 1000) + " us.");
          A.print(t3 + ".AverageFrame(RunTime): " + B.JSNumber_methods.toInt$0((t1.buildSum + t1.drawSum) / t2 * 1000) + " us.");
          t1.averagesPrinted = true;
        }
        return false;
      }
      if (frameCount > t1) {
        t1 = _this._box_0;
        t1.buildSum += buildTime;
        t1.drawSum += drawTime;
      }
      return true;
    },
    $signature: 100
  };
  A.Matrix4.prototype = {
    setFrom$1(arg) {
      var argStorage = arg._m4storage,
        t1 = this._m4storage,
        t2 = argStorage[15];
      t1.$flags & 2 && A.throwUnsupportedOperation(t1);
      t1[15] = t2;
      t1[14] = argStorage[14];
      t1[13] = argStorage[13];
      t1[12] = argStorage[12];
      t1[11] = argStorage[11];
      t1[10] = argStorage[10];
      t1[9] = argStorage[9];
      t1[8] = argStorage[8];
      t1[7] = argStorage[7];
      t1[6] = argStorage[6];
      t1[5] = argStorage[5];
      t1[4] = argStorage[4];
      t1[3] = argStorage[3];
      t1[2] = argStorage[2];
      t1[1] = argStorage[1];
      t1[0] = argStorage[0];
    },
    toString$0(_) {
      var _this = this;
      return "[0] " + _this.getRow$1(0).toString$0(0) + "\n[1] " + _this.getRow$1(1).toString$0(0) + "\n[2] " + _this.getRow$1(2).toString$0(0) + "\n[3] " + _this.getRow$1(3).toString$0(0) + "\n";
    },
    $eq(_, other) {
      var t1, t2, t3;
      if (other == null)
        return false;
      if (other instanceof A.Matrix4) {
        t1 = this._m4storage;
        t2 = t1[0];
        t3 = other._m4storage;
        t1 = t2 === t3[0] && t1[1] === t3[1] && t1[2] === t3[2] && t1[3] === t3[3] && t1[4] === t3[4] && t1[5] === t3[5] && t1[6] === t3[6] && t1[7] === t3[7] && t1[8] === t3[8] && t1[9] === t3[9] && t1[10] === t3[10] && t1[11] === t3[11] && t1[12] === t3[12] && t1[13] === t3[13] && t1[14] === t3[14] && t1[15] === t3[15];
      } else
        t1 = false;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hashAll(this._m4storage);
    },
    setRow$2(row, arg) {
      var argStorage = arg._v4storage,
        t1 = this._m4storage,
        t2 = argStorage[0];
      t1.$flags & 2 && A.throwUnsupportedOperation(t1);
      t1[row] = t2;
      t1[4 + row] = argStorage[1];
      t1[8 + row] = argStorage[2];
      t1[12 + row] = argStorage[3];
    },
    getRow$1(row) {
      var rStorage = new Float64Array(4),
        t1 = this._m4storage;
      rStorage[0] = t1[row];
      rStorage[1] = t1[4 + row];
      rStorage[2] = t1[8 + row];
      rStorage[3] = t1[12 + row];
      return new A.Vector4(rStorage);
    },
    $mul(_, arg) {
      var t1, out, _this = this;
      if (typeof arg == "number") {
        t1 = new A.Matrix4(new Float64Array(16));
        t1.setFrom$1(_this);
        t1.scale$3(arg, null, null);
        return t1;
      }
      if (arg instanceof A.Vector4) {
        out = new A.Vector4(new Float64Array(4));
        out.setFrom$1(arg);
        return _this.transform$1(out);
      }
      if (arg instanceof A.Vector3) {
        out = new A.Vector3(new Float64Array(3));
        out.setFrom$1(arg);
        return _this.transform3$1(out);
      }
      if (arg instanceof A.Matrix4)
        return _this.multiplied$1(arg);
      throw A.wrapException(A.ArgumentError$(arg, null));
    },
    $add(_, arg) {
      var oStorage,
        t1 = new Float64Array(16),
        t2 = new A.Matrix4(t1);
      t2.setFrom$1(this);
      oStorage = arg._m4storage;
      t1[0] = t1[0] + oStorage[0];
      t1[1] = t1[1] + oStorage[1];
      t1[2] = t1[2] + oStorage[2];
      t1[3] = t1[3] + oStorage[3];
      t1[4] = t1[4] + oStorage[4];
      t1[5] = t1[5] + oStorage[5];
      t1[6] = t1[6] + oStorage[6];
      t1[7] = t1[7] + oStorage[7];
      t1[8] = t1[8] + oStorage[8];
      t1[9] = t1[9] + oStorage[9];
      t1[10] = t1[10] + oStorage[10];
      t1[11] = t1[11] + oStorage[11];
      t1[12] = t1[12] + oStorage[12];
      t1[13] = t1[13] + oStorage[13];
      t1[14] = t1[14] + oStorage[14];
      t1[15] = t1[15] + oStorage[15];
      return t2;
    },
    $sub(_, arg) {
      var oStorage,
        t1 = new Float64Array(16),
        t2 = new A.Matrix4(t1);
      t2.setFrom$1(this);
      oStorage = arg._m4storage;
      t1[0] = t1[0] - oStorage[0];
      t1[1] = t1[1] - oStorage[1];
      t1[2] = t1[2] - oStorage[2];
      t1[3] = t1[3] - oStorage[3];
      t1[4] = t1[4] - oStorage[4];
      t1[5] = t1[5] - oStorage[5];
      t1[6] = t1[6] - oStorage[6];
      t1[7] = t1[7] - oStorage[7];
      t1[8] = t1[8] - oStorage[8];
      t1[9] = t1[9] - oStorage[9];
      t1[10] = t1[10] - oStorage[10];
      t1[11] = t1[11] - oStorage[11];
      t1[12] = t1[12] - oStorage[12];
      t1[13] = t1[13] - oStorage[13];
      t1[14] = t1[14] - oStorage[14];
      t1[15] = t1[15] - oStorage[15];
      return t2;
    },
    translate$2(x, y) {
      var t1 = this._m4storage,
        t2 = t1[0],
        t3 = t1[4],
        t4 = t1[8],
        t5 = t1[12],
        t6 = t1[1],
        t7 = t1[5],
        t8 = t1[9],
        t9 = t1[13],
        t10 = t1[2],
        t11 = t1[6],
        t12 = t1[10],
        t13 = t1[14],
        t14 = t1[3],
        t15 = t1[7],
        t16 = t1[11],
        t17 = t1[15];
      t1.$flags & 2 && A.throwUnsupportedOperation(t1);
      t1[12] = t2 * x + t3 * y + t4 * 0 + t5;
      t1[13] = t6 * x + t7 * y + t8 * 0 + t9;
      t1[14] = t10 * x + t11 * y + t12 * 0 + t13;
      t1[15] = t14 * x + t15 * y + t16 * 0 + t17;
    },
    scale$3(x, y, z) {
      var sy, sz, sx, t1, t2;
      if (typeof x == "number") {
        sy = y == null ? x : y;
        sz = z == null ? x : z;
      } else
        throw A.wrapException(A.UnimplementedError$(null));
      sx = x;
      t1 = this._m4storage;
      t2 = t1[0];
      t1.$flags & 2 && A.throwUnsupportedOperation(t1);
      t1[0] = t2 * sx;
      t1[1] = t1[1] * sx;
      t1[2] = t1[2] * sx;
      t1[3] = t1[3] * sx;
      t1[4] = t1[4] * sy;
      t1[5] = t1[5] * sy;
      t1[6] = t1[6] * sy;
      t1[7] = t1[7] * sy;
      t1[8] = t1[8] * sz;
      t1[9] = t1[9] * sz;
      t1[10] = t1[10] * sz;
      t1[11] = t1[11] * sz;
      t1[12] = t1[12];
      t1[13] = t1[13];
      t1[14] = t1[14];
      t1[15] = t1[15];
    },
    scale$2(x, y) {
      return this.scale$3(x, y, null);
    },
    setIdentity$0() {
      var t1 = this._m4storage;
      t1.$flags & 2 && A.throwUnsupportedOperation(t1);
      t1[0] = 1;
      t1[1] = 0;
      t1[2] = 0;
      t1[3] = 0;
      t1[4] = 0;
      t1[5] = 1;
      t1[6] = 0;
      t1[7] = 0;
      t1[8] = 0;
      t1[9] = 0;
      t1[10] = 1;
      t1[11] = 0;
      t1[12] = 0;
      t1[13] = 0;
      t1[14] = 0;
      t1[15] = 1;
    },
    copyInverse$1(arg) {
      var invDet, t1, t2, t3,
        argStorage = arg._m4storage,
        a00 = argStorage[0],
        a01 = argStorage[1],
        a02 = argStorage[2],
        a03 = argStorage[3],
        a10 = argStorage[4],
        a11 = argStorage[5],
        a12 = argStorage[6],
        a13 = argStorage[7],
        a20 = argStorage[8],
        a21 = argStorage[9],
        a22 = argStorage[10],
        a23 = argStorage[11],
        a30 = argStorage[12],
        a31 = argStorage[13],
        a32 = argStorage[14],
        a33 = argStorage[15],
        b00 = a00 * a11 - a01 * a10,
        b01 = a00 * a12 - a02 * a10,
        b02 = a00 * a13 - a03 * a10,
        b03 = a01 * a12 - a02 * a11,
        b04 = a01 * a13 - a03 * a11,
        b05 = a02 * a13 - a03 * a12,
        b06 = a20 * a31 - a21 * a30,
        b07 = a20 * a32 - a22 * a30,
        b08 = a20 * a33 - a23 * a30,
        b09 = a21 * a32 - a22 * a31,
        b10 = a21 * a33 - a23 * a31,
        b11 = a22 * a33 - a23 * a32,
        det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
      if (det === 0) {
        this.setFrom$1(arg);
        return 0;
      }
      invDet = 1 / det;
      t1 = this._m4storage;
      t1.$flags & 2 && A.throwUnsupportedOperation(t1);
      t1[0] = (a11 * b11 - a12 * b10 + a13 * b09) * invDet;
      t1[1] = (-a01 * b11 + a02 * b10 - a03 * b09) * invDet;
      t1[2] = (a31 * b05 - a32 * b04 + a33 * b03) * invDet;
      t1[3] = (-a21 * b05 + a22 * b04 - a23 * b03) * invDet;
      t2 = -a10;
      t1[4] = (t2 * b11 + a12 * b08 - a13 * b07) * invDet;
      t1[5] = (a00 * b11 - a02 * b08 + a03 * b07) * invDet;
      t3 = -a30;
      t1[6] = (t3 * b05 + a32 * b02 - a33 * b01) * invDet;
      t1[7] = (a20 * b05 - a22 * b02 + a23 * b01) * invDet;
      t1[8] = (a10 * b10 - a11 * b08 + a13 * b06) * invDet;
      t1[9] = (-a00 * b10 + a01 * b08 - a03 * b06) * invDet;
      t1[10] = (a30 * b04 - a31 * b02 + a33 * b00) * invDet;
      t1[11] = (-a20 * b04 + a21 * b02 - a23 * b00) * invDet;
      t1[12] = (t2 * b09 + a11 * b07 - a12 * b06) * invDet;
      t1[13] = (a00 * b09 - a01 * b07 + a02 * b06) * invDet;
      t1[14] = (t3 * b03 + a31 * b01 - a32 * b00) * invDet;
      t1[15] = (a20 * b03 - a21 * b01 + a22 * b00) * invDet;
      return det;
    },
    multiply$1(arg) {
      var t1 = this._m4storage,
        m00 = t1[0],
        m01 = t1[4],
        m02 = t1[8],
        m03 = t1[12],
        m10 = t1[1],
        m11 = t1[5],
        m12 = t1[9],
        m13 = t1[13],
        m20 = t1[2],
        m21 = t1[6],
        m22 = t1[10],
        m23 = t1[14],
        m30 = t1[3],
        m31 = t1[7],
        m32 = t1[11],
        m33 = t1[15],
        argStorage = arg._m4storage,
        n00 = argStorage[0],
        n01 = argStorage[4],
        n02 = argStorage[8],
        n03 = argStorage[12],
        n10 = argStorage[1],
        n11 = argStorage[5],
        n12 = argStorage[9],
        n13 = argStorage[13],
        n20 = argStorage[2],
        n21 = argStorage[6],
        n22 = argStorage[10],
        n23 = argStorage[14],
        n30 = argStorage[3],
        n31 = argStorage[7],
        n32 = argStorage[11],
        n33 = argStorage[15];
      t1.$flags & 2 && A.throwUnsupportedOperation(t1);
      t1[0] = m00 * n00 + m01 * n10 + m02 * n20 + m03 * n30;
      t1[4] = m00 * n01 + m01 * n11 + m02 * n21 + m03 * n31;
      t1[8] = m00 * n02 + m01 * n12 + m02 * n22 + m03 * n32;
      t1[12] = m00 * n03 + m01 * n13 + m02 * n23 + m03 * n33;
      t1[1] = m10 * n00 + m11 * n10 + m12 * n20 + m13 * n30;
      t1[5] = m10 * n01 + m11 * n11 + m12 * n21 + m13 * n31;
      t1[9] = m10 * n02 + m11 * n12 + m12 * n22 + m13 * n32;
      t1[13] = m10 * n03 + m11 * n13 + m12 * n23 + m13 * n33;
      t1[2] = m20 * n00 + m21 * n10 + m22 * n20 + m23 * n30;
      t1[6] = m20 * n01 + m21 * n11 + m22 * n21 + m23 * n31;
      t1[10] = m20 * n02 + m21 * n12 + m22 * n22 + m23 * n32;
      t1[14] = m20 * n03 + m21 * n13 + m22 * n23 + m23 * n33;
      t1[3] = m30 * n00 + m31 * n10 + m32 * n20 + m33 * n30;
      t1[7] = m30 * n01 + m31 * n11 + m32 * n21 + m33 * n31;
      t1[11] = m30 * n02 + m31 * n12 + m32 * n22 + m33 * n32;
      t1[15] = m30 * n03 + m31 * n13 + m32 * n23 + m33 * n33;
    },
    multiplied$1(arg) {
      var t1 = new A.Matrix4(new Float64Array(16));
      t1.setFrom$1(this);
      t1.multiply$1(arg);
      return t1;
    },
    transform3$1(arg) {
      var argStorage = arg._v3storage,
        t1 = this._m4storage,
        t2 = t1[0],
        t3 = argStorage[0],
        t4 = t1[4],
        t5 = argStorage[1],
        t6 = t1[8],
        t7 = argStorage[2],
        t8 = t1[12],
        t9 = t1[1],
        t10 = t1[5],
        t11 = t1[9],
        t12 = t1[13],
        t13 = t1[2],
        t14 = t1[6],
        t15 = t1[10];
      t1 = t1[14];
      argStorage.$flags & 2 && A.throwUnsupportedOperation(argStorage);
      argStorage[0] = t2 * t3 + t4 * t5 + t6 * t7 + t8;
      argStorage[1] = t9 * t3 + t10 * t5 + t11 * t7 + t12;
      argStorage[2] = t13 * t3 + t14 * t5 + t15 * t7 + t1;
      return arg;
    },
    transform$1(arg) {
      var argStorage = arg._v4storage,
        t1 = this._m4storage,
        t2 = t1[0],
        t3 = argStorage[0],
        t4 = t1[4],
        t5 = argStorage[1],
        t6 = t1[8],
        t7 = argStorage[2],
        t8 = t1[12],
        t9 = argStorage[3],
        t10 = t1[1],
        t11 = t1[5],
        t12 = t1[9],
        t13 = t1[13],
        t14 = t1[2],
        t15 = t1[6],
        t16 = t1[10],
        t17 = t1[14],
        t18 = t1[3],
        t19 = t1[7],
        t20 = t1[11];
      t1 = t1[15];
      argStorage.$flags & 2 && A.throwUnsupportedOperation(argStorage);
      argStorage[0] = t2 * t3 + t4 * t5 + t6 * t7 + t8 * t9;
      argStorage[1] = t10 * t3 + t11 * t5 + t12 * t7 + t13 * t9;
      argStorage[2] = t14 * t3 + t15 * t5 + t16 * t7 + t17 * t9;
      argStorage[3] = t18 * t3 + t19 * t5 + t20 * t7 + t1 * t9;
      return arg;
    },
    perspectiveTransform$1(arg) {
      var argStorage = arg._v3storage,
        t1 = this._m4storage,
        t2 = t1[0],
        t3 = argStorage[0],
        t4 = t1[4],
        t5 = argStorage[1],
        t6 = t1[8],
        t7 = argStorage[2],
        t8 = t1[12],
        t9 = t1[1],
        t10 = t1[5],
        t11 = t1[9],
        t12 = t1[13],
        t13 = t1[2],
        t14 = t1[6],
        t15 = t1[10],
        t16 = t1[14],
        w_ = 1 / (t1[3] * t3 + t1[7] * t5 + t1[11] * t7 + t1[15]);
      argStorage.$flags & 2 && A.throwUnsupportedOperation(argStorage);
      argStorage[0] = (t2 * t3 + t4 * t5 + t6 * t7 + t8) * w_;
      argStorage[1] = (t9 * t3 + t10 * t5 + t11 * t7 + t12) * w_;
      argStorage[2] = (t13 * t3 + t14 * t5 + t15 * t7 + t16) * w_;
      return arg;
    },
    isZero$0() {
      var t1 = this._m4storage;
      return t1[0] === 0 && t1[1] === 0 && t1[2] === 0 && t1[3] === 0 && t1[4] === 0 && t1[5] === 0 && t1[6] === 0 && t1[7] === 0 && t1[8] === 0 && t1[9] === 0 && t1[10] === 0 && t1[11] === 0 && t1[12] === 0 && t1[13] === 0 && t1[14] === 0 && t1[15] === 0;
    }
  };
  A.Vector3.prototype = {
    setValues$3(x, y, z) {
      var t1 = this._v3storage;
      t1.$flags & 2 && A.throwUnsupportedOperation(t1);
      t1[0] = x;
      t1[1] = y;
      t1[2] = z;
    },
    setFrom$1(other) {
      var otherStorage = other._v3storage,
        t1 = this._v3storage,
        t2 = otherStorage[0];
      t1.$flags & 2 && A.throwUnsupportedOperation(t1);
      t1[0] = t2;
      t1[1] = otherStorage[1];
      t1[2] = otherStorage[2];
    },
    toString$0(_) {
      var t1 = this._v3storage;
      return "[" + A.S(t1[0]) + "," + A.S(t1[1]) + "," + A.S(t1[2]) + "]";
    },
    $eq(_, other) {
      var t1, t2, t3;
      if (other == null)
        return false;
      if (other instanceof A.Vector3) {
        t1 = this._v3storage;
        t2 = t1[0];
        t3 = other._v3storage;
        t1 = t2 === t3[0] && t1[1] === t3[1] && t1[2] === t3[2];
      } else
        t1 = false;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hashAll(this._v3storage);
    },
    $sub(_, other) {
      var argStorage,
        t1 = new Float64Array(3),
        t2 = new A.Vector3(t1);
      t2.setFrom$1(this);
      argStorage = other._v3storage;
      t1[0] = t1[0] - argStorage[0];
      t1[1] = t1[1] - argStorage[1];
      t1[2] = t1[2] - argStorage[2];
      return t2;
    },
    $add(_, other) {
      var argStorage,
        t1 = new Float64Array(3),
        t2 = new A.Vector3(t1);
      t2.setFrom$1(this);
      argStorage = other._v3storage;
      t1[0] = t1[0] + argStorage[0];
      t1[1] = t1[1] + argStorage[1];
      t1[2] = t1[2] + argStorage[2];
      return t2;
    },
    $mul(_, scale) {
      var t1 = new Float64Array(3),
        t2 = new A.Vector3(t1);
      t2.setFrom$1(this);
      t1[2] = t1[2] * scale;
      t1[1] = t1[1] * scale;
      t1[0] = t1[0] * scale;
      return t2;
    },
    get$length(_) {
      var t1 = this._v3storage,
        t2 = t1[0],
        t3 = t1[1];
      t1 = t1[2];
      return Math.sqrt(t2 * t2 + t3 * t3 + t1 * t1);
    },
    dot$1(other) {
      var otherStorage = other._v3storage,
        t1 = this._v3storage;
      return t1[0] * otherStorage[0] + t1[1] * otherStorage[1] + t1[2] * otherStorage[2];
    },
    scaled$1(arg) {
      var t1 = new Float64Array(3),
        t2 = new A.Vector3(t1);
      t2.setFrom$1(this);
      t1[2] = t1[2] * arg;
      t1[1] = t1[1] * arg;
      t1[0] = t1[0] * arg;
      return t2;
    }
  };
  A.Vector4.prototype = {
    setValues$4(x_, y_, z_, w_) {
      var t1 = this._v4storage;
      t1.$flags & 2 && A.throwUnsupportedOperation(t1);
      t1[3] = w_;
      t1[2] = z_;
      t1[1] = y_;
      t1[0] = x_;
    },
    setFrom$1(other) {
      var otherStorage = other._v4storage,
        t1 = this._v4storage,
        t2 = otherStorage[3];
      t1.$flags & 2 && A.throwUnsupportedOperation(t1);
      t1[3] = t2;
      t1[2] = otherStorage[2];
      t1[1] = otherStorage[1];
      t1[0] = otherStorage[0];
    },
    toString$0(_) {
      var t1 = this._v4storage;
      return A.S(t1[0]) + "," + A.S(t1[1]) + "," + A.S(t1[2]) + "," + A.S(t1[3]);
    },
    $eq(_, other) {
      var t1, t2, t3;
      if (other == null)
        return false;
      if (other instanceof A.Vector4) {
        t1 = this._v4storage;
        t2 = t1[0];
        t3 = other._v4storage;
        t1 = t2 === t3[0] && t1[1] === t3[1] && t1[2] === t3[2] && t1[3] === t3[3];
      } else
        t1 = false;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hashAll(this._v4storage);
    },
    $sub(_, other) {
      var argStorage,
        t1 = new Float64Array(4),
        t2 = new A.Vector4(t1);
      t2.setFrom$1(this);
      argStorage = other._v4storage;
      t1[0] = t1[0] - argStorage[0];
      t1[1] = t1[1] - argStorage[1];
      t1[2] = t1[2] - argStorage[2];
      t1[3] = t1[3] - argStorage[3];
      return t2;
    },
    $add(_, other) {
      var argStorage,
        t1 = new Float64Array(4),
        t2 = new A.Vector4(t1);
      t2.setFrom$1(this);
      argStorage = other._v4storage;
      t1[0] = t1[0] + argStorage[0];
      t1[1] = t1[1] + argStorage[1];
      t1[2] = t1[2] + argStorage[2];
      t1[3] = t1[3] + argStorage[3];
      return t2;
    },
    $mul(_, scale) {
      var t1 = new Float64Array(4),
        t2 = new A.Vector4(t1);
      t2.setFrom$1(this);
      t1[0] = t1[0] * scale;
      t1[1] = t1[1] * scale;
      t1[2] = t1[2] * scale;
      t1[3] = t1[3] * scale;
      return t2;
    },
    get$length(_) {
      var t1 = this._v4storage,
        t2 = t1[0],
        t3 = t1[1],
        t4 = t1[2];
      t1 = t1[3];
      return Math.sqrt(t2 * t2 + t3 * t3 + t4 * t4 + t1 * t1);
    }
  };
  (function aliases() {
    var _ = J.LegacyJavaScriptObject.prototype;
    _.super$LegacyJavaScriptObject$toString = _.toString$0;
    _ = A.ListBase.prototype;
    _.super$ListBase$setRange = _.setRange$4;
    _ = A._SplayTreeIterator.prototype;
    _.super$_SplayTreeIterator$moveNext = _.moveNext$0;
    _ = A.Iterable.prototype;
    _.super$Iterable$where = _.where$1;
    _ = A.Object.prototype;
    _.super$Object$$eq = _.$eq;
    _.super$Object$toString = _.toString$0;
    _ = A.Color.prototype;
    _.super$Color$$eq = _.$eq;
    _.super$Color$toString = _.toString$0;
    _ = A.Animation.prototype;
    _.super$Animation$toStringDetails = _.toStringDetails$0;
    _ = A.ParametricCurve.prototype;
    _.super$ParametricCurve$transform = _.transform$1;
    _ = A.AnimationEagerListenerMixin.prototype;
    _.super$AnimationEagerListenerMixin$dispose = _.dispose$0;
    _ = A.BindingBase.prototype;
    _.super$BindingBase$initInstances = _.initInstances$0;
    _.super$BindingBase$initServiceExtensions = _.initServiceExtensions$0;
    _.super$BindingBase$unlocked = _.unlocked$0;
    _ = A.ChangeNotifier.prototype;
    _.super$ChangeNotifier$addListener = _.addListener$1;
    _.super$ChangeNotifier$removeListener = _.removeListener$1;
    _.super$ChangeNotifier$dispose = _.dispose$0;
    _.super$ChangeNotifier$notifyListeners = _.notifyListeners$0;
    _ = A.Diagnosticable.prototype;
    _.super$Diagnosticable$toStringShort = _.toStringShort$0;
    _ = A.DiagnosticableTreeMixin.prototype;
    _.super$DiagnosticableTreeMixin$toStringShort = _.toStringShort$0;
    _ = A.AbstractNode.prototype;
    _.super$AbstractNode$attach = _.attach$1;
    _.super$AbstractNode$detach = _.detach$0;
    _.super$AbstractNode$adoptChild = _.adoptChild$1;
    _.super$AbstractNode$dropChild = _.dropChild$1;
    _ = A.GestureBinding.prototype;
    _.super$GestureBinding$hitTest = _.hitTest$2;
    _.super$GestureBinding$dispatchEvent = _.dispatchEvent$2;
    _ = A.LongPressGestureRecognizer.prototype;
    _.super$LongPressGestureRecognizer$isPointerAllowed = _.isPointerAllowed$1;
    _ = A.GestureRecognizer.prototype;
    _.super$GestureRecognizer$addAllowedPointerPanZoom = _.addAllowedPointerPanZoom$1;
    _.super$GestureRecognizer$isPointerAllowed = _.isPointerAllowed$1;
    _.super$GestureRecognizer$dispose = _.dispose$0;
    _ = A.OneSequenceGestureRecognizer.prototype;
    _.super$OneSequenceGestureRecognizer$addAllowedPointer = _.addAllowedPointer$1;
    _.super$OneSequenceGestureRecognizer$handleNonAllowedPointer = _.handleNonAllowedPointer$1;
    _.super$OneSequenceGestureRecognizer$resolve = _.resolve$1;
    _.super$OneSequenceGestureRecognizer$dispose = _.dispose$0;
    _.super$OneSequenceGestureRecognizer$startTrackingPointer = _.startTrackingPointer$2;
    _ = A.PrimaryPointerGestureRecognizer.prototype;
    _.super$PrimaryPointerGestureRecognizer$addAllowedPointer = _.addAllowedPointer$1;
    _.super$PrimaryPointerGestureRecognizer$acceptGesture = _.acceptGesture$1;
    _.super$PrimaryPointerGestureRecognizer$rejectGesture = _.rejectGesture$1;
    _ = A.TapGestureRecognizer.prototype;
    _.super$TapGestureRecognizer$isPointerAllowed = _.isPointerAllowed$1;
    _ = A.__ButtonStyleState_State_TickerProviderStateMixin.prototype;
    _.super$__ButtonStyleState_State_TickerProviderStateMixin$dispose = _.dispose$0;
    _ = A.__CheckboxState_State_TickerProviderStateMixin.prototype;
    _.super$__CheckboxState_State_TickerProviderStateMixin$dispose = _.dispose$0;
    _ = A.__CheckboxState_State_TickerProviderStateMixin_ToggleableStateMixin.prototype;
    _.super$__CheckboxState_State_TickerProviderStateMixin_ToggleableStateMixin$initState = _.initState$0;
    _.super$__CheckboxState_State_TickerProviderStateMixin_ToggleableStateMixin$dispose = _.dispose$0;
    _ = A.__InkResponseState_State_AutomaticKeepAliveClientMixin.prototype;
    _.super$__InkResponseState_State_AutomaticKeepAliveClientMixin$initState = _.initState$0;
    _.super$__InkResponseState_State_AutomaticKeepAliveClientMixin$deactivate = _.deactivate$0;
    _ = A.InkFeature.prototype;
    _.super$InkFeature$dispose = _.dispose$0;
    _ = A.__CircularProgressIndicatorState_State_SingleTickerProviderStateMixin.prototype;
    _.super$__CircularProgressIndicatorState_State_SingleTickerProviderStateMixin$dispose = _.dispose$0;
    _ = A._ScaffoldMessengerState_State_TickerProviderStateMixin.prototype;
    _.super$_ScaffoldMessengerState_State_TickerProviderStateMixin$dispose = _.dispose$0;
    _ = A._ScaffoldState_State_TickerProviderStateMixin.prototype;
    _.super$_ScaffoldState_State_TickerProviderStateMixin$dispose = _.dispose$0;
    _ = A._ScaffoldState_State_TickerProviderStateMixin_RestorationMixin.prototype;
    _.super$_ScaffoldState_State_TickerProviderStateMixin_RestorationMixin$didUpdateWidget = _.didUpdateWidget$1;
    _.super$_ScaffoldState_State_TickerProviderStateMixin_RestorationMixin$didChangeDependencies = _.didChangeDependencies$0;
    _.super$_ScaffoldState_State_TickerProviderStateMixin_RestorationMixin$dispose = _.dispose$0;
    _ = A.__FloatingActionButtonTransitionState_State_TickerProviderStateMixin.prototype;
    _.super$__FloatingActionButtonTransitionState_State_TickerProviderStateMixin$dispose = _.dispose$0;
    _ = A.__RenderSlider_RenderBox_RelayoutWhenSystemFontsChangeMixin.prototype;
    _.super$__RenderSlider_RenderBox_RelayoutWhenSystemFontsChangeMixin$attach = _.attach$1;
    _.super$__RenderSlider_RenderBox_RelayoutWhenSystemFontsChangeMixin$detach = _.detach$0;
    _ = A.__RenderValueIndicator_RenderBox_RelayoutWhenSystemFontsChangeMixin.prototype;
    _.super$__RenderValueIndicator_RenderBox_RelayoutWhenSystemFontsChangeMixin$attach = _.attach$1;
    _.super$__RenderValueIndicator_RenderBox_RelayoutWhenSystemFontsChangeMixin$detach = _.detach$0;
    _ = A.__SliderState_State_TickerProviderStateMixin.prototype;
    _.super$__SliderState_State_TickerProviderStateMixin$dispose = _.dispose$0;
    _ = A._TooltipState_State_SingleTickerProviderStateMixin.prototype;
    _.super$_TooltipState_State_SingleTickerProviderStateMixin$dispose = _.dispose$0;
    _ = A.BorderRadiusGeometry.prototype;
    _.super$BorderRadiusGeometry$subtract = _.subtract$1;
    _.super$BorderRadiusGeometry$add = _.add$1;
    _ = A.ShapeBorder.prototype;
    _.super$ShapeBorder$lerpFrom = _.lerpFrom$2;
    _.super$ShapeBorder$lerpTo = _.lerpTo$2;
    _ = A.OutlinedBorder.prototype;
    _.super$OutlinedBorder$lerpFrom = _.lerpFrom$2;
    _.super$OutlinedBorder$lerpTo = _.lerpTo$2;
    _ = A.Decoration.prototype;
    _.super$Decoration$lerpFrom = _.lerpFrom$2;
    _.super$Decoration$lerpTo = _.lerpTo$2;
    _ = A.BoxPainter.prototype;
    _.super$BoxPainter$dispose = _.dispose$0;
    _ = A.EdgeInsetsGeometry.prototype;
    _.super$EdgeInsetsGeometry$add = _.add$1;
    _ = A.InlineSpan.prototype;
    _.super$InlineSpan$$eq = _.$eq;
    _ = A.SpringSimulation.prototype;
    _.super$SpringSimulation$x = _.x$1;
    _ = A.RendererBinding.prototype;
    _.super$RendererBinding$handleMetricsChanged = _.handleMetricsChanged$0;
    _.super$RendererBinding$drawFrame = _.drawFrame$0;
    _ = A.BoxConstraints.prototype;
    _.super$BoxConstraints$$eq = _.$eq;
    _ = A.BoxParentData.prototype;
    _.super$BoxParentData$toString = _.toString$0;
    _ = A.RenderBox.prototype;
    _.super$RenderBox$computeDistanceToActualBaseline = _.computeDistanceToActualBaseline$1;
    _.super$RenderBox$markNeedsLayout = _.markNeedsLayout$0;
    _.super$RenderBox$performResize = _.performResize$0;
    _.super$RenderBox$hitTest = _.hitTest$2$position;
    _ = A._RenderCustomMultiChildLayoutBox_RenderBox_ContainerRenderObjectMixin.prototype;
    _.super$_RenderCustomMultiChildLayoutBox_RenderBox_ContainerRenderObjectMixin$attach = _.attach$1;
    _.super$_RenderCustomMultiChildLayoutBox_RenderBox_ContainerRenderObjectMixin$detach = _.detach$0;
    _ = A._RenderFlex_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin.prototype;
    _.super$_RenderFlex_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin$dispose = _.dispose$0;
    _ = A.Layer.prototype;
    _.super$Layer$_fireCompositionCallbacks = _._fireCompositionCallbacks$1$includeChildren;
    _.super$Layer$dispose = _.dispose$0;
    _.super$Layer$updateSubtreeNeedsAddToScene = _.updateSubtreeNeedsAddToScene$0;
    _ = A.ContainerLayer.prototype;
    _.super$ContainerLayer$findAnnotations = _.findAnnotations$1$3$onlyFirst;
    _.super$ContainerLayer$attach = _.attach$1;
    _.super$ContainerLayer$detach = _.detach$0;
    _ = A.OffsetLayer.prototype;
    _.super$OffsetLayer$findAnnotations = _.findAnnotations$1$3$onlyFirst;
    _ = A._RenderListWheelViewport_RenderBox_ContainerRenderObjectMixin.prototype;
    _.super$_RenderListWheelViewport_RenderBox_ContainerRenderObjectMixin$attach = _.attach$1;
    _.super$_RenderListWheelViewport_RenderBox_ContainerRenderObjectMixin$detach = _.detach$0;
    _ = A.ParentData.prototype;
    _.super$ParentData$detach = _.detach$0;
    _ = A.RenderObject.prototype;
    _.super$RenderObject$dispose = _.dispose$0;
    _.super$RenderObject$attach = _.attach$1;
    _.super$RenderObject$markNeedsLayout = _.markNeedsLayout$0;
    _.super$RenderObject$layout = _.layout$2$parentUsesSize;
    _.super$RenderObject$paint = _.paint$2;
    _.super$RenderObject$applyPaintTransform = _.applyPaintTransform$2;
    _.super$RenderObject$describeSemanticsConfiguration = _.describeSemanticsConfiguration$1;
    _.super$RenderObject$clearSemantics = _.clearSemantics$0;
    _.super$RenderObject$visitChildrenForSemantics = _.visitChildrenForSemantics$1;
    _.super$RenderObject$assembleSemanticsNode = _.assembleSemanticsNode$3;
    _.super$RenderObject$handleEvent = _.handleEvent$2;
    _.super$RenderObject$toStringShort = _.toStringShort$0;
    _.super$RenderObject$showOnScreen = _.showOnScreen$4$curve$descendant$duration$rect;
    _ = A.RelayoutWhenSystemFontsChangeMixin.prototype;
    _.super$RelayoutWhenSystemFontsChangeMixin$systemFontsDidChange = _.systemFontsDidChange$0;
    _ = A._InterestingSemanticsFragment.prototype;
    _.super$_InterestingSemanticsFragment$addTags = _.addTags$1;
    _ = A._RenderParagraph_RenderBox_ContainerRenderObjectMixin.prototype;
    _.super$_RenderParagraph_RenderBox_ContainerRenderObjectMixin$attach = _.attach$1;
    _.super$_RenderParagraph_RenderBox_ContainerRenderObjectMixin$detach = _.detach$0;
    _ = A.RenderProxyBoxMixin.prototype;
    _.super$RenderProxyBoxMixin$computeDryLayout = _.computeDryLayout$1;
    _.super$RenderProxyBoxMixin$performLayout = _.performLayout$0;
    _.super$RenderProxyBoxMixin$hitTestChildren = _.hitTestChildren$2$position;
    _.super$RenderProxyBoxMixin$paint = _.paint$2;
    _ = A.RenderProxyBoxWithHitTestBehavior.prototype;
    _.super$RenderProxyBoxWithHitTestBehavior$hitTest = _.hitTest$2$position;
    _ = A._RenderProxyBox_RenderBox_RenderObjectWithChildMixin.prototype;
    _.super$_RenderProxyBox_RenderBox_RenderObjectWithChildMixin$attach = _.attach$1;
    _.super$_RenderProxyBox_RenderBox_RenderObjectWithChildMixin$detach = _.detach$0;
    _ = A._RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin.prototype;
    _.super$_RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin$computeDistanceToActualBaseline = _.computeDistanceToActualBaseline$1;
    _ = A._RenderShiftedBox_RenderBox_RenderObjectWithChildMixin.prototype;
    _.super$_RenderShiftedBox_RenderBox_RenderObjectWithChildMixin$attach = _.attach$1;
    _.super$_RenderShiftedBox_RenderBox_RenderObjectWithChildMixin$detach = _.detach$0;
    _ = A.ViewportOffset.prototype;
    _.super$ViewportOffset$moveTo = _.moveTo$3$curve$duration;
    _.super$ViewportOffset$debugFillDescription = _.debugFillDescription$1;
    _ = A.SchedulerBinding.prototype;
    _.super$SchedulerBinding$handleAppLifecycleStateChanged = _.handleAppLifecycleStateChanged$1;
    _ = A.Ticker.prototype;
    _.super$Ticker$dispose = _.dispose$0;
    _ = A.AssetBundle.prototype;
    _.super$AssetBundle$loadString = _.loadString$2$cache;
    _ = A.ServicesBinding.prototype;
    _.super$ServicesBinding$handleMemoryPressure = _.handleMemoryPressure$0;
    _.super$ServicesBinding$handleSystemMessage = _.handleSystemMessage$1;
    _ = A.MethodChannel.prototype;
    _.super$MethodChannel$_invokeMethod = _._invokeMethod$1$3$arguments$missingOk;
    _ = A.Action.prototype;
    _.super$Action$_updateCallingAction = _._updateCallingAction$1;
    _ = A.AutomaticKeepAliveClientMixin.prototype;
    _.super$AutomaticKeepAliveClientMixin$build = _.build$1;
    _ = A._WidgetsFlutterBinding_BindingBase_GestureBinding.prototype;
    _.super$_WidgetsFlutterBinding_BindingBase_GestureBinding$initInstances = _.initInstances$0;
    _.super$_WidgetsFlutterBinding_BindingBase_GestureBinding$unlocked = _.unlocked$0;
    _ = A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding.prototype;
    _.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding$initInstances = _.initInstances$0;
    _.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding$initServiceExtensions = _.initServiceExtensions$0;
    _ = A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding.prototype;
    _.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding$initInstances = _.initInstances$0;
    _.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding$initServiceExtensions = _.initServiceExtensions$0;
    _ = A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding.prototype;
    _.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding$initInstances = _.initInstances$0;
    _.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding$handleMemoryPressure = _.handleMemoryPressure$0;
    _ = A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding.prototype;
    _.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding$initInstances = _.initInstances$0;
    _ = A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding.prototype;
    _.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding$initInstances = _.initInstances$0;
    _.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding$initServiceExtensions = _.initServiceExtensions$0;
    _ = A.FocusTraversalPolicy.prototype;
    _.super$FocusTraversalPolicy$invalidateScopeData = _.invalidateScopeData$1;
    _.super$FocusTraversalPolicy$changedScope = _.changedScope$2$node$oldScope;
    _ = A.State.prototype;
    _.super$State$initState = _.initState$0;
    _.super$State$didUpdateWidget = _.didUpdateWidget$1;
    _.super$State$deactivate = _.deactivate$0;
    _.super$State$activate = _.activate$0;
    _.super$State$dispose = _.dispose$0;
    _.super$State$didChangeDependencies = _.didChangeDependencies$0;
    _ = A.Element.prototype;
    _.super$Element$updateChild = _.updateChild$3;
    _.super$Element$mount = _.mount$2;
    _.super$Element$update = _.update$1;
    _.super$Element$_updateSlot = _._updateSlot$1;
    _.super$Element$inflateWidget = _.inflateWidget$2;
    _.super$Element$forgetChild = _.forgetChild$1;
    _.super$Element$activate = _.activate$0;
    _.super$Element$deactivate = _.deactivate$0;
    _.super$Element$unmount = _.unmount$0;
    _.super$Element$dependOnInheritedElement = _.dependOnInheritedElement$2$aspect;
    _.super$Element$didChangeDependencies = _.didChangeDependencies$0;
    _.super$Element$performRebuild = _.performRebuild$0;
    _ = A.ComponentElement.prototype;
    _.super$ComponentElement$_firstBuild = _._firstBuild$0;
    _.super$ComponentElement$performRebuild = _.performRebuild$0;
    _ = A.ProxyElement.prototype;
    _.super$ProxyElement$build = _.build$0;
    _.super$ProxyElement$update = _.update$1;
    _.super$ProxyElement$updated = _.updated$1;
    _ = A.InheritedElement.prototype;
    _.super$InheritedElement$notifyClients = _.notifyClients$1;
    _ = A.RenderObjectElement.prototype;
    _.super$RenderObjectElement$mount = _.mount$2;
    _.super$RenderObjectElement$update = _.update$1;
    _.super$RenderObjectElement$performRebuild = _.performRebuild$0;
    _.super$RenderObjectElement$unmount = _.unmount$0;
    _ = A.RootRenderObjectElement.prototype;
    _.super$RootRenderObjectElement$mount = _.mount$2;
    _ = A.MultiChildRenderObjectElement.prototype;
    _.super$MultiChildRenderObjectElement$insertRenderObjectChild = _.insertRenderObjectChild$2;
    _.super$MultiChildRenderObjectElement$moveRenderObjectChild = _.moveRenderObjectChild$3;
    _ = A.ImplicitlyAnimatedWidgetState.prototype;
    _.super$ImplicitlyAnimatedWidgetState$initState = _.initState$0;
    _ = A._ImplicitlyAnimatedWidgetState_State_SingleTickerProviderStateMixin.prototype;
    _.super$_ImplicitlyAnimatedWidgetState_State_SingleTickerProviderStateMixin$dispose = _.dispose$0;
    _ = A.Route.prototype;
    _.super$Route$install = _.install$0;
    _.super$Route$didPush = _.didPush$0;
    _.super$Route$didAdd = _.didAdd$0;
    _.super$Route$didReplace = _.didReplace$1;
    _.super$Route$willPop = _.willPop$0;
    _.super$Route$didPop = _.didPop$1;
    _.super$Route$didPopNext = _.didPopNext$1;
    _.super$Route$didChangeNext = _.didChangeNext$1;
    _.super$Route$didChangePrevious = _.didChangePrevious$1;
    _.super$Route$changedInternalState = _.changedInternalState$0;
    _.super$Route$changedExternalState = _.changedExternalState$0;
    _.super$Route$dispose = _.dispose$0;
    _ = A._RestorationInformation.prototype;
    _.super$_RestorationInformation$computeSerializableData = _.computeSerializableData$0;
    _ = A._NavigatorState_State_TickerProviderStateMixin.prototype;
    _.super$_NavigatorState_State_TickerProviderStateMixin$activate = _.activate$0;
    _.super$_NavigatorState_State_TickerProviderStateMixin$dispose = _.dispose$0;
    _ = A._NavigatorState_State_TickerProviderStateMixin_RestorationMixin.prototype;
    _.super$_NavigatorState_State_TickerProviderStateMixin_RestorationMixin$didUpdateWidget = _.didUpdateWidget$1;
    _.super$_NavigatorState_State_TickerProviderStateMixin_RestorationMixin$didChangeDependencies = _.didChangeDependencies$0;
    _.super$_NavigatorState_State_TickerProviderStateMixin_RestorationMixin$dispose = _.dispose$0;
    _ = A.Notification.prototype;
    _.super$Notification$debugFillDescription = _.debugFillDescription$1;
    _ = A._RenderTheaterMixin.prototype;
    _.super$_RenderTheaterMixin$paint = _.paint$2;
    _ = A.__RenderTheater_RenderBox_ContainerRenderObjectMixin.prototype;
    _.super$__RenderTheater_RenderBox_ContainerRenderObjectMixin$attach = _.attach$1;
    _.super$__RenderTheater_RenderBox_ContainerRenderObjectMixin$detach = _.detach$0;
    _ = A._OverscrollIndicatorNotification_Notification_ViewportNotificationMixin.prototype;
    _.super$_OverscrollIndicatorNotification_Notification_ViewportNotificationMixin$debugFillDescription = _.debugFillDescription$1;
    _ = A.__GlowingOverscrollIndicatorState_State_TickerProviderStateMixin.prototype;
    _.super$__GlowingOverscrollIndicatorState_State_TickerProviderStateMixin$dispose = _.dispose$0;
    _ = A.__StretchingOverscrollIndicatorState_State_TickerProviderStateMixin.prototype;
    _.super$__StretchingOverscrollIndicatorState_State_TickerProviderStateMixin$dispose = _.dispose$0;
    _ = A.RestorationMixin.prototype;
    _.super$RestorationMixin$didToggleBucket = _.didToggleBucket$1;
    _ = A.RestorableValue.prototype;
    _.super$RestorableValue$value = _.set$value;
    _ = A._RestorablePrimitiveValueN.prototype;
    _.super$_RestorablePrimitiveValueN$fromPrimitives = _.fromPrimitives$1;
    _.super$_RestorablePrimitiveValueN$toPrimitives = _.toPrimitives$0;
    _ = A.__RouterState_State_RestorationMixin.prototype;
    _.super$__RouterState_State_RestorationMixin$didUpdateWidget = _.didUpdateWidget$1;
    _.super$__RouterState_State_RestorationMixin$didChangeDependencies = _.didChangeDependencies$0;
    _.super$__RouterState_State_RestorationMixin$dispose = _.dispose$0;
    _ = A.OverlayRoute.prototype;
    _.super$OverlayRoute$install = _.install$0;
    _.super$OverlayRoute$didPop = _.didPop$1;
    _.super$OverlayRoute$dispose = _.dispose$0;
    _ = A.TransitionRoute.prototype;
    _.super$TransitionRoute$install = _.install$0;
    _.super$TransitionRoute$didPush = _.didPush$0;
    _.super$TransitionRoute$didAdd = _.didAdd$0;
    _.super$TransitionRoute$didPop = _.didPop$1;
    _ = A._ModalRoute_TransitionRoute_LocalHistoryRoute.prototype;
    _.super$_ModalRoute_TransitionRoute_LocalHistoryRoute$willPop = _.willPop$0;
    _ = A.ScrollActivity.prototype;
    _.super$ScrollActivity$dispose = _.dispose$0;
    _ = A.ScrollNotification.prototype;
    _.super$ScrollNotification$debugFillDescription = _.debugFillDescription$1;
    _ = A._ScrollNotification_LayoutChangedNotification_ViewportNotificationMixin.prototype;
    _.super$_ScrollNotification_LayoutChangedNotification_ViewportNotificationMixin$debugFillDescription = _.debugFillDescription$1;
    _ = A.ScrollPhysics.prototype;
    _.super$ScrollPhysics$adjustPositionForNewDimensions = _.adjustPositionForNewDimensions$4$isScrolling$newPosition$oldPosition$velocity;
    _.super$ScrollPhysics$createBallisticSimulation = _.createBallisticSimulation$2;
    _ = A.ScrollPosition.prototype;
    _.super$ScrollPosition$absorb = _.absorb$1;
    _.super$ScrollPosition$setPixels = _.setPixels$1;
    _.super$ScrollPosition$applyNewDimensions = _.applyNewDimensions$0;
    _.super$ScrollPosition$beginActivity = _.beginActivity$1;
    _.super$ScrollPosition$dispose = _.dispose$0;
    _.super$ScrollPosition$debugFillDescription = _.debugFillDescription$1;
    _ = A._ScrollMetricsNotification_Notification_ViewportNotificationMixin.prototype;
    _.super$_ScrollMetricsNotification_Notification_ViewportNotificationMixin$debugFillDescription = _.debugFillDescription$1;
    _ = A._ScrollableState_State_TickerProviderStateMixin.prototype;
    _.super$_ScrollableState_State_TickerProviderStateMixin$dispose = _.dispose$0;
    _ = A._ScrollableState_State_TickerProviderStateMixin_RestorationMixin.prototype;
    _.super$_ScrollableState_State_TickerProviderStateMixin_RestorationMixin$didUpdateWidget = _.didUpdateWidget$1;
    _.super$_ScrollableState_State_TickerProviderStateMixin_RestorationMixin$didChangeDependencies = _.didChangeDependencies$0;
    _.super$_ScrollableState_State_TickerProviderStateMixin_RestorationMixin$dispose = _.dispose$0;
    _ = A.RawScrollbarState.prototype;
    _.super$RawScrollbarState$initState = _.initState$0;
    _.super$RawScrollbarState$didChangeDependencies = _.didChangeDependencies$0;
    _.super$RawScrollbarState$handleThumbPress = _.handleThumbPress$0;
    _.super$RawScrollbarState$handleThumbPressStart = _.handleThumbPressStart$1;
    _.super$RawScrollbarState$handleThumbPressEnd = _.handleThumbPressEnd$2;
    _.super$RawScrollbarState$handleHover = _.handleHover$1;
    _.super$RawScrollbarState$handleHoverExit = _.handleHoverExit$1;
    _.super$RawScrollbarState$dispose = _.dispose$0;
    _ = A._RawScrollbarState_State_TickerProviderStateMixin.prototype;
    _.super$_RawScrollbarState_State_TickerProviderStateMixin$dispose = _.dispose$0;
    _ = A.MultiSelectableSelectionContainerDelegate.prototype;
    _.super$MultiSelectableSelectionContainerDelegate$didChangeSelectables = _.didChangeSelectables$0;
    _.super$MultiSelectableSelectionContainerDelegate$handleSelectAll = _.handleSelectAll$1;
    _.super$MultiSelectableSelectionContainerDelegate$handleSelectWord = _.handleSelectWord$1;
    _.super$MultiSelectableSelectionContainerDelegate$handleClearSelection = _.handleClearSelection$1;
    _.super$MultiSelectableSelectionContainerDelegate$handleGranularlyExtendSelection = _.handleGranularlyExtendSelection$1;
    _.super$MultiSelectableSelectionContainerDelegate$handleDirectionallyExtendSelection = _.handleDirectionallyExtendSelection$1;
    _.super$MultiSelectableSelectionContainerDelegate$handleSelectionEdgeUpdate = _.handleSelectionEdgeUpdate$1;
    _.super$MultiSelectableSelectionContainerDelegate$dispose = _.dispose$0;
    _.super$MultiSelectableSelectionContainerDelegate$dispatchSelectionEventToChild = _.dispatchSelectionEventToChild$2;
    _ = A.__SelectionContainerState_State_Selectable_SelectionRegistrant.prototype;
    _.super$__SelectionContainerState_State_Selectable_SelectionRegistrant$dispose = _.dispose$0;
  })();
  (function installTearOffs() {
    var _static_2 = hunkHelpers._static_2,
      _instance_1_i = hunkHelpers._instance_1i,
      _static_0 = hunkHelpers._static_0,
      _static_1 = hunkHelpers._static_1,
      _instance_2_u = hunkHelpers._instance_2u,
      _instance = hunkHelpers.installInstanceTearOff,
      _static = hunkHelpers.installStaticTearOff,
      _instance_0_u = hunkHelpers._instance_0u,
      _instance_1_u = hunkHelpers._instance_1u;
    _static_2(J, "_interceptors_JSArray__compareAny$closure", "JSArray__compareAny", 76);
    _instance_1_i(A._CastIterableBase.prototype, "get$contains", "contains$1", 17);
    _static_0(A, "_js_helper_Primitives_dateNow$closure", "Primitives_dateNow", 90);
    _instance_1_i(A.GeneralConstantSet.prototype, "get$contains", "contains$1", 17);
    _static_1(A, "async__AsyncRun__scheduleImmediateJsOverride$closure", "_AsyncRun__scheduleImmediateJsOverride", 22);
    _static_1(A, "async__AsyncRun__scheduleImmediateWithSetImmediate$closure", "_AsyncRun__scheduleImmediateWithSetImmediate", 22);
    _static_1(A, "async__AsyncRun__scheduleImmediateWithTimer$closure", "_AsyncRun__scheduleImmediateWithTimer", 22);
    _static_0(A, "async___startMicrotaskLoop$closure", "_startMicrotaskLoop", 0);
    _static_2(A, "async___nullErrorHandler$closure", "_nullErrorHandler", 59);
    _instance_2_u(A._Future.prototype, "get$_completeError", "_completeError$2", 59);
    _instance_1_i(A._StreamController.prototype, "get$add", "add$1", 8);
    _static_2(A, "collection___dynamicCompare$closure", "_dynamicCompare", 76);
    _instance_1_i(A._HashSet.prototype, "get$contains", "contains$1", 17);
    var _;
    _instance(_ = A._LinkedHashSet.prototype, "get$_newSimilarSet", 0, 0, null, ["call$1$0", "call$0"], ["_newSimilarSet$1$0", "_newSimilarSet$0"], 115, 0, 0);
    _instance_1_i(_, "get$contains", "contains$1", 17);
    _instance_1_i(A.SplayTreeSet.prototype, "get$contains", "contains$1", 17);
    _static_1(A, "convert___defaultToEncodable$closure", "_defaultToEncodable", 57);
    _static_2(A, "core_Comparable_compare$closure", "Comparable_compare", 267);
    _static_1(A, "core_Uri_decodeComponent$closure", "Uri_decodeComponent", 268);
    _instance_1_i(A.Iterable.prototype, "get$contains", "contains$1", 17);
    _static(A, "math__max$closure", 2, null, ["call$1$2", "call$2"], ["max", function(a, b) {
      return A.max(a, b, type$.num);
    }], 269, 0);
    _static(A, "ui_Size_lerp$closure", 3, null, ["call$3"], ["Size_lerp"], 270, 0);
    _static(A, "ui__lerpDouble$closure", 3, null, ["call$3"], ["lerpDouble"], 271, 0);
    _static(A, "ui_Color_lerp$closure", 3, null, ["call$3"], ["Color_lerp"], 272, 0);
    _instance_0_u(A._Channel.prototype, "get$_drainStep", "_drainStep$0", 0);
    _instance_1_u(A.PlatformDispatcher.prototype, "get$_nativeSetNeedsReportTimings", "_nativeSetNeedsReportTimings$1", 6);
    _instance(_ = A.AnimationController.prototype, "get$reverse", 0, 0, null, ["call$1$from", "call$0"], ["reverse$1$from", "reverse$0"], 218, 0, 0);
    _instance_1_u(_, "get$_directionSetter", "_directionSetter$1", 247);
    _instance_1_u(_, "get$_animation_controller$_tick", "_animation_controller$_tick$1", 1);
    _instance_1_u(A.ReverseAnimation.prototype, "get$_statusChangeHandler", "_statusChangeHandler$1", 2);
    _instance_1_u(A.CurvedAnimation.prototype, "get$_updateCurveDirection", "_updateCurveDirection$1", 2);
    _instance_1_u(_ = A.TrainHoppingAnimation.prototype, "get$_statusChangeHandler", "_statusChangeHandler$1", 2);
    _instance_0_u(_, "get$_valueChangeHandler", "_valueChangeHandler$0", 0);
    _instance_1_u(_ = A.CompoundAnimation.prototype, "get$_maybeNotifyStatusListeners", "_maybeNotifyStatusListeners$1", 2);
    _instance_0_u(_, "get$_maybeNotifyListeners", "_maybeNotifyListeners$0", 0);
    _instance_0_u(A.AnimationLocalListenersMixin.prototype, "get$notifyListeners", "notifyListeners$0", 0);
    _instance_1_u(A.AnimationLocalStatusListenersMixin.prototype, "get$notifyStatusListeners", "notifyStatusListeners$1", 2);
    _instance_0_u(A._CupertinoTimerPickerState.prototype, "get$_handleSystemFontsChange", "_handleSystemFontsChange$0", 0);
    _instance_1_u(A._CupertinoPickerState.prototype, "get$_handleSelectedItemChanged", "_handleSelectedItemChanged$1", 18);
    _instance_0_u(_ = A._RenderCupertinoPickerSemantics.prototype, "get$_handleIncrease", "_handleIncrease$0", 0);
    _instance_0_u(_, "get$_handleDecrease", "_handleDecrease$0", 0);
    _instance_0_u(_, "get$_handleScrollUpdate", "_handleScrollUpdate$0", 0);
    _instance_1_u(_ = A._CupertinoBackGestureDetectorState.prototype, "get$_route$_handleDragStart", "_route$_handleDragStart$1", 53);
    _instance_1_u(_, "get$_route$_handleDragUpdate", "_route$_handleDragUpdate$1", 10);
    _instance_1_u(_, "get$_route$_handleDragEnd", "_route$_handleDragEnd$1", 50);
    _instance_0_u(_, "get$_handleDragCancel", "_handleDragCancel$0", 0);
    _instance_1_u(_, "get$_route$_handlePointerDown", "_route$_handlePointerDown$1", 51);
    _instance_0_u(A._CupertinoScrollbarState.prototype, "get$handleThumbPress", "handleThumbPress$0", 0);
    _static(A, "assertions_FlutterError_dumpErrorToConsole$closure", 1, null, ["call$2$forceReport", "call$1"], ["FlutterError_dumpErrorToConsole", function(details) {
      return A.FlutterError_dumpErrorToConsole(details, false);
    }], 273, 0);
    _static_1(A, "assertions_DiagnosticsStackTrace__createStackFrame$closure", "DiagnosticsStackTrace__createStackFrame", 274);
    _instance_1_u(_ = A.ChangeNotifier.prototype, "get$addListener", "addListener$1", 22);
    _instance_1_u(_, "get$removeListener", "removeListener$1", 22);
    _instance_0_u(_, "get$notifyListeners", "notifyListeners$0", 0);
    _instance_1_u(A.AbstractNode.prototype, "get$redepthChild", "redepthChild$1", 229);
    _static_1(A, "stack_frame_StackFrame_fromStackTraceLine$closure", "StackFrame_fromStackTraceLine", 275);
    _instance_1_u(_ = A.GestureBinding.prototype, "get$cancelPointer", "cancelPointer$1", 18);
    _instance_0_u(_, "get$_flushPointerEventQueue", "_flushPointerEventQueue$0", 0);
    _instance_1_u(_, "get$_handlePointerEventImmediately", "_handlePointerEventImmediately$1", 11);
    _instance_0_u(_, "get$_handleSampleTimeChanged", "_handleSampleTimeChanged$0", 0);
    _static_1(A, "long_press_LongPressGestureRecognizer__defaultButtonAcceptBehavior$closure", "LongPressGestureRecognizer__defaultButtonAcceptBehavior", 30);
    _static_1(A, "monodrag_DragGestureRecognizer__defaultBuilder$closure", "DragGestureRecognizer__defaultBuilder", 99);
    _static_1(A, "monodrag_DragGestureRecognizer__defaultButtonAcceptBehavior$closure", "DragGestureRecognizer__defaultButtonAcceptBehavior", 30);
    _instance_1_u(A.DragGestureRecognizer.prototype, "get$handleEvent", "handleEvent$1", 11);
    _static_1(A, "multitap_DoubleTapGestureRecognizer__defaultButtonAcceptBehavior$closure", "DoubleTapGestureRecognizer__defaultButtonAcceptBehavior", 30);
    _instance_0_u(A._CountdownZoned.prototype, "get$_onTimeout", "_onTimeout$0", 0);
    _instance_1_u(_ = A.DoubleTapGestureRecognizer.prototype, "get$_handleEvent", "_handleEvent$1", 11);
    _instance_1_u(_, "get$_reject", "_reject$1", 260);
    _instance_0_u(_, "get$_multitap$_reset", "_multitap$_reset$0", 0);
    _static_1(A, "recognizer_GestureRecognizer__defaultButtonAcceptBehavior$closure", "GestureRecognizer__defaultButtonAcceptBehavior", 30);
    _instance_1_u(A.PrimaryPointerGestureRecognizer.prototype, "get$handleEvent", "handleEvent$1", 11);
    _instance_2_u(A._MaterialAppState.prototype, "get$_materialBuilder", "_materialBuilder$2", 38);
    _instance_1_u(A._AppBarState.prototype, "get$_app_bar$_handleScrollNotification", "_app_bar$_handleScrollNotification$1", 108);
    _instance_0_u(A._ButtonStyleState.prototype, "get$handleStatesControllerChange", "handleStatesControllerChange$0", 0);
    _instance_1_u(A.InkHighlight.prototype, "get$_handleAlphaStatusChanged", "_handleAlphaStatusChanged$1", 2);
    _instance_1_u(A.InkRipple.prototype, "get$_ink_ripple$_handleAlphaStatusChanged", "_ink_ripple$_handleAlphaStatusChanged$1", 2);
    _instance_1_u(A.InkSplash.prototype, "get$_ink_splash$_handleAlphaStatusChanged", "_ink_splash$_handleAlphaStatusChanged$1", 2);
    _instance_1_u(A.InkResponse.prototype, "get$getRectCallback", "getRectCallback$1", 221);
    _instance(_ = A._InkResponseState.prototype, "get$simulateTap", 0, 0, null, ["call$1", "call$0"], ["simulateTap$1", "simulateTap$0"], 68, 0, 0);
    _instance_0_u(_, "get$handleStatesControllerChange", "handleStatesControllerChange$0", 0);
    _instance_1_u(_, "get$handleFocusHighlightModeChange", "handleFocusHighlightModeChange$1", 69);
    _instance_1_u(_, "get$handleFocusUpdate", "handleFocusUpdate$1", 6);
    _instance_1_u(_, "get$handleTapDown", "handleTapDown$1", 36);
    _instance_1_u(_, "get$handleTapUp", "handleTapUp$1", 71);
    _instance_0_u(_, "get$handleTap", "handleTap$0", 0);
    _instance_0_u(_, "get$handleTapCancel", "handleTapCancel$0", 0);
    _instance_1_u(_, "get$handleMouseEnter", "handleMouseEnter$1", 35);
    _instance_1_u(_, "get$handleMouseExit", "handleMouseExit$1", 24);
    _instance_0_u(_ = A._ZoomTransitionBase.prototype, "get$onAnimationValueChange", "onAnimationValueChange$0", 0);
    _instance_1_u(_, "get$onAnimationStatusChange", "onAnimationStatusChange$1", 2);
    _instance_1_u(A._ZoomEnterTransitionPainter.prototype, "get$_onStatusChange", "_onStatusChange$1", 29);
    _instance_1_u(A._ZoomExitTransitionPainter.prototype, "get$_onStatusChange", "_onStatusChange$1", 29);
    _instance_1_u(_ = A._FloatingActionButtonTransitionState.prototype, "get$_handlePreviousAnimationStatusChanged", "_handlePreviousAnimationStatusChanged$1", 2);
    _instance_0_u(_, "get$_onProgressChanged", "_onProgressChanged$0", 0);
    _instance_0_u(A.ScaffoldState.prototype, "get$_handleStatusBarTap", "_handleStatusBarTap$0", 0);
    _static(A, "scrollbar_theme___lerpBool$closure", 3, null, ["call$3"], ["_lerpBool"], 277, 0);
    _instance_1_u(_ = A._SliderState.prototype, "get$_handleChanged", "_handleChanged$1", 32);
    _instance_1_u(_, "get$_handleDragStart", "_handleDragStart$1", 32);
    _instance_1_u(_, "get$_handleDragEnd", "_handleDragEnd$1", 32);
    _instance_1_u(_, "get$_actionHandler", "_actionHandler$1", 121);
    _instance_1_u(_, "get$_handleFocusHighlightChanged", "_handleFocusHighlightChanged$1", 6);
    _instance_1_u(_, "get$_handleHoverChanged", "_handleHoverChanged$1", 6);
    _instance_0_u(_ = A._RenderSlider.prototype, "get$_endInteraction", "_endInteraction$0", 0);
    _instance_1_u(_, "get$_handleDragStart", "_handleDragStart$1", 53);
    _instance_1_u(_, "get$_handleDragUpdate", "_handleDragUpdate$1", 10);
    _instance_1_u(_, "get$_handleDragEnd", "_handleDragEnd$1", 50);
    _instance_1_u(_, "get$_handleTapDown", "_handleTapDown$1", 36);
    _instance_1_u(_, "get$_handleTapUp", "_handleTapUp$1", 71);
    _instance_0_u(_, "get$increaseAction", "increaseAction$0", 0);
    _instance_0_u(_, "get$decreaseAction", "decreaseAction$0", 0);
    _instance_1_u(_ = A.ToggleableStateMixin.prototype, "get$_toggleable$_handleTapDown", "_toggleable$_handleTapDown$1", 36);
    _instance(_, "get$_handleTap", 0, 0, null, ["call$1", "call$0"], ["_handleTap$1", "_handleTap$0"], 68, 0, 0);
    _instance(_, "get$_handleTapEnd", 0, 0, null, ["call$1", "call$0"], ["_handleTapEnd$1", "_handleTapEnd$0"], 130, 0, 0);
    _instance_1_u(_, "get$_toggleable$_handleFocusHighlightChanged", "_toggleable$_handleFocusHighlightChanged$1", 6);
    _instance_1_u(_, "get$_toggleable$_handleHoverChanged", "_toggleable$_handleHoverChanged$1", 6);
    _instance_0_u(_ = A.TooltipState.prototype, "get$_handleMouseTrackerChange", "_handleMouseTrackerChange$0", 0);
    _instance_1_u(_, "get$_tooltip$_handleStatusChanged", "_tooltip$_handleStatusChanged$1", 2);
    _instance_0_u(_, "get$ensureTooltipVisible", "ensureTooltipVisible$0", 54);
    _instance_1_u(_, "get$_tooltip$_handlePointerEvent", "_tooltip$_handlePointerEvent$1", 11);
    _instance_0_u(_, "get$_handlePress", "_handlePress$0", 0);
    _instance_0_u(_, "get$_tooltip$_handleTap", "_tooltip$_handleTap$0", 0);
    _static(A, "borders_OutlinedBorder_lerp$closure", 3, null, ["call$3"], ["OutlinedBorder_lerp"], 278, 0);
    _static(A, "edge_insets_EdgeInsetsGeometry_lerp$closure", 3, null, ["call$3"], ["EdgeInsetsGeometry_lerp"], 279, 0);
    _instance_2_u(A.WordBoundary.prototype, "get$_skipSpacesAndPunctuations", "_skipSpacesAndPunctuations$2", 136);
    _static(A, "text_style_TextStyle_lerp$closure", 3, null, ["call$3"], ["TextStyle_lerp"], 280, 0);
    _instance_1_u(_ = A.FrictionSimulation.prototype, "get$x", "x$1", 46);
    _instance_1_u(_, "get$dx", "dx$1", 46);
    _instance_0_u(_ = A.RendererBinding.prototype, "get$_handleSemanticsEnabledChanged", "_handleSemanticsEnabledChanged$0", 0);
    _instance_0_u(_, "get$_handleSemanticsOwnerCreated", "_handleSemanticsOwnerCreated$0", 0);
    _instance_1_u(_, "get$_handleSemanticsUpdate", "_handleSemanticsUpdate$1", 103);
    _instance_0_u(_, "get$_handleSemanticsOwnerDisposed", "_handleSemanticsOwnerDisposed$0", 0);
    _instance_1_u(_, "get$_handleWebFirstFrame", "_handleWebFirstFrame$1", 1);
    _instance_1_u(_, "get$_handlePersistentFrameCallback", "_handlePersistentFrameCallback$1", 1);
    _instance_2_u(A.RenderBoxContainerDefaultsMixin.prototype, "get$defaultPaint", "defaultPaint$2", 3);
    _instance_0_u(_ = A.RenderListWheelViewport.prototype, "get$_hasScrolled", "_hasScrolled$0", 0);
    _instance_2_u(_, "get$_paintVisibleChildren", "_paintVisibleChildren$2", 3);
    _instance(_, "get$showOnScreen", 0, 0, null, ["call$4$curve$descendant$duration$rect", "call$0"], ["showOnScreen$4$curve$descendant$duration$rect", "showOnScreen$0"], 80, 0, 0);
    _static_1(A, "object_RenderObject__cleanChildRelayoutBoundary$closure", "RenderObject__cleanChildRelayoutBoundary", 16);
    _static_1(A, "object_RenderObject__propagateRelayoutBoundaryToChild$closure", "RenderObject__propagateRelayoutBoundaryToChild", 16);
    _instance_0_u(_ = A.RenderObject.prototype, "get$markNeedsPaint", "markNeedsPaint$0", 0);
    _instance_0_u(_, "get$markNeedsSemanticsUpdate", "markNeedsSemanticsUpdate$0", 0);
    _instance(_, "get$_marksExplicitInMergeGroup", 0, 1, null, ["call$2$isMergeUp", "call$1"], ["_marksExplicitInMergeGroup$2$isMergeUp", "_marksExplicitInMergeGroup$1"], 147, 0, 0);
    _instance(_, "get$showOnScreen", 0, 0, null, ["call$4$curve$descendant$duration$rect", "call$0"], ["showOnScreen$4$curve$descendant$duration$rect", "showOnScreen$0"], 80, 0, 0);
    _instance_0_u(A.RelayoutWhenSystemFontsChangeMixin.prototype, "get$_scheduleSystemFontsUpdate", "_scheduleSystemFontsUpdate$0", 0);
    _instance(A.RenderProxyBoxMixin.prototype, "get$paint", 0, 2, null, ["call$2"], ["paint$2"], 3, 0, 1);
    _instance_0_u(A.RenderAnimatedOpacityMixin.prototype, "get$_updateOpacity", "_updateOpacity$0", 0);
    _instance_0_u(A._RenderCustomClip.prototype, "get$_markNeedsClip", "_markNeedsClip$0", 0);
    _instance_0_u(_ = A.RenderSemanticsGestureHandler.prototype, "get$_performSemanticScrollLeft", "_performSemanticScrollLeft$0", 0);
    _instance_0_u(_, "get$_performSemanticScrollRight", "_performSemanticScrollRight$0", 0);
    _instance_0_u(_, "get$_performSemanticScrollUp", "_performSemanticScrollUp$0", 0);
    _instance_0_u(_, "get$_performSemanticScrollDown", "_performSemanticScrollDown$0", 0);
    _instance_0_u(_ = A.RenderSemanticsAnnotations.prototype, "get$_performTap", "_performTap$0", 0);
    _instance_0_u(_, "get$_performLongPress", "_performLongPress$0", 0);
    _instance_0_u(_, "get$_performDismiss", "_performDismiss$0", 0);
    _instance_0_u(_, "get$_performDidGainAccessibilityFocus", "_performDidGainAccessibilityFocus$0", 0);
    _instance_0_u(A.SelectionRegistrant.prototype, "get$_updateSelectionRegistrarSubscription", "_updateSelectionRegistrarSubscription$0", 0);
    _instance_2_u(A.RenderStack.prototype, "get$paintStack", "paintStack$2", 3);
    _instance_1_u(A.RenderView.prototype, "get$hitTestMouseTrackers", "hitTestMouseTrackers$1", 152);
    _static_2(A, "binding_SchedulerBinding__taskSorter$closure", "SchedulerBinding__taskSorter", 281);
    _static(A, "binding__defaultSchedulingStrategy$closure", 0, null, ["call$2$priority$scheduler"], ["defaultSchedulingStrategy"], 282, 0);
    _instance_1_u(_ = A.SchedulerBinding.prototype, "get$_executeTimingsCallbacks", "_executeTimingsCallbacks$1", 83);
    _instance_0_u(_, "get$_runTasks", "_runTasks$0", 0);
    _instance_0_u(_, "get$ensureVisualUpdate", "ensureVisualUpdate$0", 0);
    _instance_1_u(_, "get$_handleBeginFrame", "_handleBeginFrame$1", 1);
    _instance_0_u(_, "get$_handleDrawFrame", "_handleDrawFrame$0", 0);
    _instance_0_u(_, "get$_disposePerformanceModeRequest", "_disposePerformanceModeRequest$0", 0);
    _instance_1_u(A.Ticker.prototype, "get$_ticker$_tick", "_ticker$_tick$1", 1);
    _instance_1_u(A.SemanticsConfiguration.prototype, "get$addTagForChildren", "addTagForChildren$1", 156);
    _static_1(A, "asset_bundle_AssetBundle__utf8decode$closure", "AssetBundle__utf8decode", 283);
    _static_1(A, "binding1_ServicesBinding__parseLicenses$closure", "ServicesBinding__parseLicenses", 284);
    _instance_0_u(_ = A.ServicesBinding.prototype, "get$_addLicenses", "_addLicenses$0", 158);
    _instance_1_u(_, "get$_handleLifecycleMessage", "_handleLifecycleMessage$1", 159);
    _instance_1_u(_, "get$_handlePlatformMessage", "_handlePlatformMessage$1", 49);
    _instance_1_u(_ = A.KeyEventManager.prototype, "get$handleRawKeyMessage", "handleRawKeyMessage$1", 162);
    _instance_1_u(_, "get$_convertRawEventAndStore", "_convertRawEventAndStore$1", 163);
    _instance_1_u(A.RestorationManager.prototype, "get$_methodHandler", "_methodHandler$1", 49);
    _instance_1_u(_ = A.RestorationBucket.prototype, "get$_dropChild", "_dropChild$1", 86);
    _instance_1_u(_, "get$_recursivelyUpdateManager", "_recursivelyUpdateManager$1", 86);
    _instance_1_u(A.TextInput.prototype, "get$_loudlyHandleTextInputInvocation", "_loudlyHandleTextInputInvocation$1", 102);
    _instance_1_u(A._ActionsState.prototype, "get$_handleActionChanged", "_handleActionChanged$1", 175);
    _instance_1_u(_ = A._FocusableActionDetectorState.prototype, "get$_handleFocusHighlightModeChange", "_handleFocusHighlightModeChange$1", 69);
    _instance_1_u(_, "get$_handleMouseEnter", "_handleMouseEnter$1", 35);
    _instance_1_u(_, "get$_handleMouseExit", "_handleMouseExit$1", 24);
    _instance_1_u(_, "get$_handleFocusChange", "_handleFocusChange$1", 6);
    _instance_1_u(_ = A._WidgetsAppState.prototype, "get$_onGenerateRoute", "_onGenerateRoute$1", 177);
    _instance_1_u(_, "get$_onUnknownRoute", "_onUnknownRoute$1", 178);
    _instance_1_u(_ = A.WidgetsBinding.prototype, "get$_handleNavigationInvocation", "_handleNavigationInvocation$1", 102);
    _instance_0_u(_, "get$_handleBuildScheduled", "_handleBuildScheduled$0", 0);
    _instance_0_u(A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding.prototype, "get$handleMetricsChanged", "handleMetricsChanged$0", 0);
    _instance_1_u(A._DualTransitionBuilderState.prototype, "get$_animationListener", "_animationListener$1", 2);
    _instance_0_u(A.FocusManager.prototype, "get$_applyFocusChange", "_applyFocusChange$0", 0);
    _instance_1_u(_ = A._HighlightModeManager.prototype, "get$handlePointerEvent", "handlePointerEvent$1", 11);
    _instance_1_u(_, "get$handleKeyMessage", "handleKeyMessage$1", 183);
    _instance_0_u(A._FocusState.prototype, "get$_handleFocusChanged", "_handleFocusChanged$0", 0);
    _static_1(A, "framework__InactiveElements__deactivateRecursively$closure", "_InactiveElements__deactivateRecursively", 4);
    _static_2(A, "framework_Element__sort$closure", "Element__sort", 285);
    _static_1(A, "framework_Element__activateRecursively$closure", "Element__activateRecursively", 4);
    _instance_1_u(_ = A._InactiveElements.prototype, "get$_unmount", "_unmount$1", 4);
    _instance_0_u(_, "get$_unmountAll", "_unmountAll$0", 0);
    _instance_1_u(_ = A.RawGestureDetectorState.prototype, "get$_handlePointerDown", "_handlePointerDown$1", 51);
    _instance_1_u(_, "get$_handlePointerPanZoomStart", "_handlePointerPanZoomStart$1", 209);
    _instance_1_u(_, "get$_updateSemanticsForRenderObject", "_updateSemanticsForRenderObject$1", 210);
    _instance_1_u(_ = A._HeroFlight.prototype, "get$_buildOverlay", "_buildOverlay$1", 12);
    _instance_1_u(_, "get$_handleAnimationUpdate", "_handleAnimationUpdate$1", 2);
    _instance_0_u(_, "get$onTick", "onTick$0", 0);
    _instance_1_u(_ = A.HeroController.prototype, "get$_handleFlightEnded", "_handleFlightEnded$1", 213);
    _instance(_, "get$_defaultHeroFlightShuttleBuilder", 0, 5, null, ["call$5"], ["_defaultHeroFlightShuttleBuilder$5"], 214, 0, 0);
    _static(A, "icon_theme_data_IconThemeData_lerp$closure", 3, null, ["call$3"], ["IconThemeData_lerp"], 286, 0);
    _instance_0_u(A.AnimatedWidgetBaseState.prototype, "get$_handleAnimationChanged", "_handleAnimationChanged$0", 0);
    _instance_0_u(A._InheritedNotifierElement.prototype, "get$_handleUpdate", "_handleUpdate$0", 0);
    _instance_1_u(A._LayoutBuilderElement.prototype, "get$_layout", "_layout$1", 8);
    _instance_1_u(A._ListWheelScrollViewState.prototype, "get$_handleScrollNotification", "_handleScrollNotification$1", 15);
    _static_2(A, "navigator_Navigator_defaultGenerateInitialRoutes$closure", "Navigator_defaultGenerateInitialRoutes", 287);
    _static_1(A, "navigator__RouteEntry_isPresentPredicate$closure", "_RouteEntry_isPresentPredicate", 27);
    _static_1(A, "navigator__RouteEntry_suitableForTransitionAnimationPredicate$closure", "_RouteEntry_suitableForTransitionAnimationPredicate", 27);
    _static_1(A, "navigator__RouteEntry_willBePresentPredicate$closure", "_RouteEntry_willBePresentPredicate", 27);
    _instance_1_u(A._NavigatorPushObservation.prototype, "get$notify", "notify$1", 26);
    _instance_1_u(A._NavigatorPopObservation.prototype, "get$notify", "notify$1", 26);
    _instance_1_u(A._NavigatorRemoveObservation.prototype, "get$notify", "notify$1", 26);
    _instance_1_u(A._NavigatorReplaceObservation.prototype, "get$notify", "notify$1", 26);
    _instance_1_u(_ = A.NavigatorState.prototype, "get$_navigator$_handlePointerDown", "_navigator$_handlePointerDown$1", 51);
    _instance_1_u(_, "get$_handlePointerUpOrCancel", "_handlePointerUpOrCancel$1", 11);
    _static_1(A, "overlay__RenderTheater__detachChild$closure", "_RenderTheater__detachChild", 16);
    _instance(A._RenderTheaterMixin.prototype, "get$paint", 0, 2, null, ["call$2"], ["paint$2"], 3, 0, 1);
    _instance_1_u(A._GlowingOverscrollIndicatorState.prototype, "get$_overscroll_indicator$_handleScrollNotification", "_overscroll_indicator$_handleScrollNotification$1", 15);
    _instance_1_u(_ = A._GlowController.prototype, "get$_changePhase", "_changePhase$1", 2);
    _instance_1_u(_, "get$_tickDisplacement", "_tickDisplacement$1", 1);
    _instance_1_u(A._StretchingOverscrollIndicatorState.prototype, "get$_overscroll_indicator$_handleScrollNotification", "_overscroll_indicator$_handleScrollNotification$1", 15);
    _instance_1_u(A._StretchController.prototype, "get$_changePhase", "_changePhase$1", 2);
    _instance_1_u(A.DefaultPlatformMenuDelegate.prototype, "get$_methodCallHandler", "_methodCallHandler$1", 49);
    _instance_0_u(A._RootRestorationScopeState.prototype, "get$_replaceRootBucket", "_replaceRootBucket$0", 0);
    _instance_1_u(A.RestorationMixin.prototype, "get$_updateProperty", "_updateProperty$1", 238);
    _instance_1_u(_ = A._RouterState.prototype, "get$_reportRouteInformation", "_reportRouteInformation$1", 1);
    _instance_0_u(_, "get$_handleRouteInformationProviderNotification", "_handleRouteInformationProviderNotification$0", 0);
    _instance_0_u(_, "get$_handleBackButtonDispatcherNotification", "_handleBackButtonDispatcherNotification$0", 239);
    _instance_0_u(_, "get$_handleRouterDelegateNotification", "_handleRouterDelegateNotification$0", 0);
    _instance_1_u(A.TransitionRoute.prototype, "get$_handleStatusChanged", "_handleStatusChanged$1", 2);
    _instance_1_u(_ = A.ModalRoute.prototype, "get$_buildModalBarrier", "_buildModalBarrier$1", 12);
    _instance_1_u(_, "get$_buildModalScope", "_buildModalScope$1", 12);
    _instance_0_u(_ = A.BallisticScrollActivity.prototype, "get$_scroll_activity$_tick", "_scroll_activity$_tick$0", 0);
    _instance_0_u(_, "get$_scroll_activity$_end", "_scroll_activity$_end$0", 0);
    _instance_0_u(_ = A.DrivenScrollActivity.prototype, "get$_scroll_activity$_tick", "_scroll_activity$_tick$0", 0);
    _instance_0_u(_, "get$_scroll_activity$_end", "_scroll_activity$_end$0", 0);
    _static_1(A, "scroll_notification__defaultScrollNotificationPredicate$closure", "defaultScrollNotificationPredicate", 15);
    _instance_0_u(A.ScrollPosition.prototype, "get$didUpdateScrollMetrics", "didUpdateScrollMetrics$0", 0);
    _instance_0_u(A.ScrollPositionWithSingleContext.prototype, "get$dispose", "dispose$0", 0);
    _instance_1_u(_ = A.ScrollableState.prototype, "get$_handleDragDown", "_handleDragDown$1", 248);
    _instance_1_u(_, "get$_scrollable$_handleDragStart", "_scrollable$_handleDragStart$1", 53);
    _instance_1_u(_, "get$_scrollable$_handleDragUpdate", "_scrollable$_handleDragUpdate$1", 10);
    _instance_1_u(_, "get$_scrollable$_handleDragEnd", "_scrollable$_handleDragEnd$1", 50);
    _instance_0_u(_, "get$_scrollable$_handleDragCancel", "_scrollable$_handleDragCancel$0", 0);
    _instance_0_u(_, "get$_disposeHold", "_disposeHold$0", 0);
    _instance_0_u(_, "get$_disposeDrag", "_disposeDrag$0", 0);
    _instance_1_u(_, "get$_receivedPointerSignal", "_receivedPointerSignal$1", 101);
    _instance_1_u(_, "get$_handlePointerScroll", "_handlePointerScroll$1", 11);
    _instance_1_u(_, "get$_handleScrollMetricsNotification", "_handleScrollMetricsNotification$1", 60);
    _instance_0_u(A._ScrollableSelectionContainerDelegate.prototype, "get$_scheduleLayoutChange", "_scheduleLayoutChange$0", 0);
    _instance_1_u(_ = A.RawScrollbarState.prototype, "get$_validateInteractions", "_validateInteractions$1", 2);
    _instance_0_u(_, "get$handleThumbPress", "handleThumbPress$0", 0);
    _instance_1_u(_, "get$_handleTrackTapDown", "_handleTrackTapDown$1", 36);
    _instance_1_u(_, "get$_scrollbar$_handleScrollMetricsNotification", "_scrollbar$_handleScrollMetricsNotification$1", 60);
    _instance_1_u(_, "get$_scrollbar$_handleScrollNotification", "_scrollbar$_handleScrollNotification$1", 15);
    _instance_1_u(_, "get$_scrollbar$_handlePointerScroll", "_scrollbar$_handlePointerScroll$1", 11);
    _instance_1_u(_, "get$_scrollbar$_receivedPointerSignal", "_scrollbar$_receivedPointerSignal$1", 101);
    _instance_1_i(_ = A.MultiSelectableSelectionContainerDelegate.prototype, "get$add", "add$1", 40);
    _instance_1_i(_, "get$remove", "remove$1", 40);
    _instance_2_u(_, "get$_compareScreenOrder", "_compareScreenOrder$2", 261);
    _instance_0_u(_, "get$_handleSelectableGeometryChange", "_handleSelectableGeometryChange$0", 0);
    _instance_2_u(A._ShortcutsState.prototype, "get$_handleOnKey", "_handleOnKey$2", 64);
    _instance_0_u(A._ShortcutRegistrarState.prototype, "get$_shortcutsChanged", "_shortcutsChanged$0", 0);
    _instance_0_u(A._RenderSnapshotWidget.prototype, "get$_onRasterValueChanged", "_onRasterValueChanged$0", 0);
    _instance_0_u(A.SingleTickerProviderStateMixin.prototype, "get$_updateTicker", "_updateTicker$0", 0);
    _instance_0_u(A.TickerProviderStateMixin.prototype, "get$_updateTickers", "_updateTickers$0", 0);
    _instance_0_u(A._AnimatedState.prototype, "get$_handleChange", "_handleChange$0", 0);
    _static(A, "print__debugPrintThrottled$closure", 1, null, ["call$2$wrapWidth", "call$1"], ["debugPrintThrottled", function(message) {
      return A.debugPrintThrottled(message, null);
    }], 212, 0);
    _static_0(A, "print___debugPrintTask$closure", "_debugPrintTask", 0);
    _static_2(A, "layout_helper_ChildLayoutHelper_dryLayoutChild$closure", "ChildLayoutHelper_dryLayoutChild", 92);
    _static_2(A, "layout_helper_ChildLayoutHelper_layoutChild$closure", "ChildLayoutHelper_layoutChild", 92);
  })();
  (function inheritance() {
    var _mixin = hunkHelpers.mixin,
      _mixinHard = hunkHelpers.mixinHard,
      _inherit = hunkHelpers.inherit,
      _inheritMany = hunkHelpers.inheritMany;
    _inherit(A.Object, null);
    _inheritMany(A.Object, [A.JS_CONST, J.Interceptor, A.SafeToStringHook, J.ArrayIterator, A.Iterable, A.CastIterator, A.MapBase, A.Closure, A.Error, A.ListBase, A.SentinelValue, A.ListIterator, A.MappedIterator, A.WhereIterator, A.ExpandIterator, A.TakeIterator, A.SkipIterator, A.SkipWhileIterator, A.EmptyIterator, A.FollowedByIterator, A.WhereTypeIterator, A.FixedLengthListMixin, A.UnmodifiableListMixin, A.Symbol, A.MapView, A.ConstantMap, A._KeysOrValuesOrElementsIterator, A.SetBase, A.JSInvocationMirror, A.TypeErrorDecoder, A.NullThrownFromJavaScriptException, A.ExceptionAndStackTrace, A._StackTrace, A.LinkedHashMapCell, A.LinkedHashMapKeyIterator, A.LinkedHashMapValueIterator, A.LinkedHashMapEntryIterator, A.JSSyntaxRegExp, A._MatchImplementation, A._AllMatchesIterator, A.StringMatch, A._StringAllMatchesIterator, A._Cell, A._UnmodifiableNativeByteBufferView, A.Rti, A._FunctionParameters, A._Type, A._TimerImpl, A._AsyncAwaitCompleter, A._SyncStarIterator, A.AsyncError, A._Completer, A._FutureListener, A._Future, A._AsyncCallbackEntry, A.Stream, A._StreamController, A._AsyncStreamControllerDispatch, A._BufferingStreamSubscription, A._DelayedEvent, A._DelayedDone, A._PendingEvents, A._StreamIterator, A._Zone, A._HashMapKeyIterator, A._HashSetIterator, A._LinkedHashSetCell, A._LinkedHashSetIterator, A._LinkedListIterator, A.LinkedListEntry, A._MapBaseValueIterator, A._UnmodifiableMapMixin, A._ListQueueIterator, A._SplayTreeNode, A._SplayTree, A._SplayTreeIterator, A.Codec, A.Converter, A._JsonStringifier, A._Utf8Encoder, A._Utf8Decoder, A.Duration, A._Enum, A.OutOfMemoryError, A.StackOverflowError, A._Exception, A.FormatException, A.MapEntry, A.Null, A._StringStackTrace, A.Stopwatch, A.StringBuffer, A._Uri, A.UriData, A._SimpleUri, A.Expando, A._JSRandom, A._Random, A.Endian, A.StringCharacterRange, A.Breaks, A.BackBreaks, A.HeapPriorityQueue, A._ChannelCallbackRecord, A._Channel, A.ChannelBuffers, A.Scene, A._EngineLayerWrapper, A.SceneBuilder, A.OffsetBase, A.Rect, A.Radius, A.RRect, A._HashEnd, A.Color, A.Paint, A.MaskFilter, A.Shader, A.Canvas, A.Picture, A.PictureRecorder, A.Shadow, A.Conic, A.QuadBounds, A.ConicBounds, A.CubicBounds, A.SurfacePath, A.PathIterator, A.PathRef, A.PathRefIterator, A.QuadRoots, A.SkQuadCoefficients, A.PathWinding, A.PlatformDispatcher, A.PlatformConfiguration, A.ViewConfiguration0, A.ViewPadding, A.Locale, A.DisplayFeature, A.CallbackHandle, A.SemanticsAction, A.SemanticsFlag, A.SemanticsUpdateBuilder, A.FontWeight, A.FontVariation, A.TextDecoration, A.TextHeightBehavior, A.TextStyle, A.ParagraphStyle, A.TextPosition, A.TextRange, A.ParagraphConstraints, A.Paragraph, A._Span, A._SpanBox, A.ParagraphBuilder, A.FlutterView, A.AccessibilityFeatures, A.GestureSettings, A.Listenable, A.Simulation, A.AnimationWithParentMixin, A.ParametricCurve, A.AnimationLazyListenerMixin, A.AnimationEagerListenerMixin, A.AnimationLocalListenersMixin, A.AnimationLocalStatusListenersMixin, A.Animatable, A.TweenSequenceItem, A._Interval, A._DiagnosticableTree_Object_Diagnosticable, A._State_Object_Diagnosticable, A._IconThemeData_Object_Diagnosticable, A.LocalizationsDelegate, A.DefaultCupertinoLocalizations, A.AbstractNode, A._CupertinoBackGestureController, A._Decoration_Object_Diagnosticable, A.BoxPainter, A._CupertinoTextThemeData_Object_Diagnosticable, A._TextThemeDefaultsBuilder, A.NoDefaultCupertinoThemeData, A._CupertinoThemeDefaults, A._CupertinoTextThemeDefaults, A.DiagnosticsNode, A._FlutterErrorDetails_Object_Diagnosticable, A.BindingBase, A.ChangeNotifier, A._NoDefaultValue, A.Diagnosticable, A.DiagnosticableTreeMixin, A.Key, A._TypeLiteral, A.LicenseEntry, A.PersistentHashMap, A._TrieNode, A.WriteBuffer, A.ReadBuffer, A.StackFrame, A.SynchronousFuture, A.GestureArenaMember, A.GestureArenaEntry, A._GestureArena, A.GestureArenaManager, A._Resampler, A.GestureBinding, A.DragDownDetails, A.DragStartDetails, A.DragUpdateDetails, A.DragEndDetails, A._PointerEvent_Object_Diagnosticable, A._PointerEventDescription, A._AbstractPointerEvent, A._CopyPointerEnterEvent, A._CopyPointerExitEvent, A._CopyPointerCancelEvent, A.DeviceGestureSettings, A.HitTestEntry, A._TransformPart, A.HitTestResult, A.LongPressStartDetails, A.LongPressMoveUpdateDetails, A.LongPressEndDetails, A._Vector, A._Matrix, A.PolynomialFit, A.LeastSquaresSolver, A._CountdownZoned, A._TapTracker, A.PointerRouter, A.PointerSignalResolver, A.OffsetPair, A.TapDownDetails, A.TapUpDetails, A._CombiningGestureArenaEntry, A.GestureArenaTeam, A.Velocity, A.VelocityEstimate, A._PointAtTime, A.VelocityTracker, A._ActionIconThemeData_Object_Diagnosticable, A.ScrollBehavior, A.SingleChildLayoutDelegate, A._AppBarTheme_Object_Diagnosticable, A._Diagonal, A._BadgeThemeData_Object_Diagnosticable, A._MaterialBannerThemeData_Object_Diagnosticable, A._BottomAppBarTheme_Object_Diagnosticable, A._BottomNavigationBarThemeData_Object_Diagnosticable, A._BottomSheetThemeData_Object_Diagnosticable, A._ButtonBarThemeData_Object_Diagnosticable, A._ButtonStyle_Object_Diagnosticable, A._LerpSides, A._MouseCursor_Object_Diagnosticable, A._ButtonThemeData_Object_Diagnosticable, A._CardTheme_Object_Diagnosticable, A._CheckboxThemeData_Object_Diagnosticable, A._ChipThemeData_Object_Diagnosticable, A._ColorScheme_Object_Diagnosticable, A._DataTableThemeData_Object_Diagnosticable, A._DatePickerThemeData_Object_Diagnosticable, A._DialogTheme_Object_Diagnosticable, A._DividerThemeData_Object_Diagnosticable, A._DrawerThemeData_Object_Diagnosticable, A._DropdownMenuThemeData_Object_Diagnosticable, A._ElevatedButtonThemeData_Object_Diagnosticable, A._ExpansionTileThemeData_Object_Diagnosticable, A._FilledButtonThemeData_Object_Diagnosticable, A.FloatingActionButtonLocation, A.FabFloatOffsetY, A.FabEndOffsetX, A.FloatingActionButtonAnimator, A._FloatingActionButtonThemeData_Object_Diagnosticable, A.MaterialStateProperty, A._IconButtonThemeData_Object_Diagnosticable, A.InkFeature, A.InteractiveInkFeatureFactory, A.FloatingLabelAlignment, A._InputDecorationTheme_Object_Diagnosticable, A._ListTileThemeData_Object_Diagnosticable, A.DefaultMaterialLocalizations, A._LerpProperties, A._MaterialStatePropertyWith, A.MaterialStatePropertyAll, A._MenuThemeData_Object_Diagnosticable, A._MenuButtonThemeData_Object_Diagnosticable, A._MenuStyle_Object_Diagnosticable, A._LerpSides0, A._NavigationBarThemeData_Object_Diagnosticable, A._NavigationDrawerThemeData_Object_Diagnosticable, A._NavigationRailThemeData_Object_Diagnosticable, A._OutlinedButtonThemeData_Object_Diagnosticable, A.Route, A.MaterialRouteTransitionMixin, A.PageTransitionsBuilder, A._PageTransitionsTheme_Object_Diagnosticable, A._ZoomTransitionBase, A._PopupMenuThemeData_Object_Diagnosticable, A._ProgressIndicatorThemeData_Object_Diagnosticable, A._RadioThemeData_Object_Diagnosticable, A.ScaffoldPrelayoutGeometry, A.ScaffoldGeometry, A.Constraints, A.MultiChildLayoutDelegate, A._Action_Object_Diagnosticable, A._ScrollbarThemeData_Object_Diagnosticable, A._SegmentedButtonThemeData_Object_Diagnosticable, A._Intent_Object_Diagnosticable, A._SliderThemeData_Object_Diagnosticable, A.SliderComponentShape, A.SliderTickMarkShape, A.SliderTrackShape, A.BaseSliderTrackShape, A._SnackBarThemeData_Object_Diagnosticable, A._SwitchThemeData_Object_Diagnosticable, A._TabBarTheme_Object_Diagnosticable, A._TextButtonThemeData_Object_Diagnosticable, A._TextSelectionThemeData_Object_Diagnosticable, A._TextTheme_Object_Diagnosticable, A._ThemeData_Object_Diagnosticable, A._IdentityThemeDataCacheKey, A._FifoCache, A._VisualDensity_Object_Diagnosticable, A._TimePickerThemeData_Object_Diagnosticable, A._ToggleButtonsThemeData_Object_Diagnosticable, A.ToggleableStateMixin, A._TooltipThemeData_Object_Diagnosticable, A._Typography_Object_Diagnosticable, A.AlignmentGeometry, A.PaintingBinding, A.BorderRadiusGeometry, A._BorderSide_Object_Diagnosticable, A.ShapeBorder, A.ClipContext, A.EdgeInsetsGeometry, A.ImageCache, A.ImageConfiguration, A.Accumulator, A.InlineSpanSemanticsInformation, A.PlaceholderDimensions, A.TextBoundary, A._CaretMetrics, A.TextPainter, A._TextStyle_Object_Diagnosticable, A.SpringDescription, A._CriticalSolution, A._OverdampedSolution, A._UnderdampedSolution, A.Tolerance, A.RendererBinding, A.ParentData, A.RenderBoxContainerDefaultsMixin, A.DebugOverflowIndicatorMixin, A._LayoutSizes, A.AnnotationEntry, A.AnnotationResult, A.LayerHandle, A.LayerLink, A._MouseState, A.__MouseTrackerUpdateDetails_Object_Diagnosticable, A._LocalSemanticsHandle, A.PipelineOwner, A.RenderObjectWithChildMixin, A.ContainerParentDataMixin, A.ContainerRenderObjectMixin, A.RelayoutWhenSystemFontsChangeMixin, A._SemanticsFragment, A._SemanticsGeometry, A.__SelectableFragment_Object_Selectable, A.RenderProxyBoxMixin, A.RenderAnimatedOpacityMixin, A.Selectable, A.SelectionRegistrant, A.SelectionEvent, A.SelectionGeometry, A.SelectionPoint, A.RelativeRect, A.ViewConfiguration, A.RevealedOffset, A._FrameCallbackEntry, A.PerformanceModeRequestHandle, A.SchedulerBinding, A.Ticker, A.TickerFuture, A.TickerCanceled, A.SemanticsBinding, A.SemanticsTag, A.AttributedString, A.SemanticsConfiguration, A._SemanticsSortKey_Object_Diagnosticable, A.SemanticsEvent, A.AssetBundle, A.BinaryMessenger, A.ServicesBinding, A._KeyEvent_Object_Diagnosticable, A.HardwareKeyboard, A.KeyMessage, A.KeyEventManager, A._KeyboardKey_Object_Diagnosticable, A.MethodCall, A.PlatformException, A.MissingPluginException, A.StringCodec, A.JSONMessageCodec, A.JSONMethodCodec, A.StandardMessageCodec, A.StandardMethodCodec, A.MouseCursorManager, A.MouseCursorSession, A.BasicMessageChannel, A.MethodChannel, A._RawKeyEventData_Object_Diagnosticable, A._RawKeyEvent_Object_Diagnosticable, A.RawKeyboard, A._ModifierSidePair, A.RestorationBucket, A.ApplicationSwitcherDescription, A.SystemUiOverlayStyle, A.TextInput, A.TextInputControl, A.__PlatformTextInputControl_Object_TextInputControl, A._ActionDispatcher_Object_Diagnosticable, A._OverridableActionMixin, A.Notification, A.AutomaticKeepAliveClientMixin, A.WidgetsBindingObserver, A.WidgetsBinding, A._Autofocus, A.FocusAttachment, A._FocusNode_Object_DiagnosticableTreeMixin, A._FocusManager_Object_DiagnosticableTreeMixin, A._HighlightModeManager, A._FocusTraversalGroupInfo, A._FocusTraversalPolicy_Object_Diagnosticable, A._DirectionalPolicyDataEntry, A._DirectionalPolicyData, A.DirectionalFocusTraversalPolicyMixin, A.__ReadingOrderSortData_Object_Diagnosticable, A.__ReadingOrderDirectionalGroupData_Object_Diagnosticable, A._InactiveElements, A.BuildOwner, A.NotifiableElementMixin, A._NotificationNode, A.IndexedSlot, A.GestureRecognizerFactory, A.SemanticsGestureDelegate, A._HeroFlightManifest, A._HeroFlight, A.NavigatorObserver, A.IconData, A.RenderConstrainedLayoutBuilder, A.ListWheelChildDelegate, A._FixedScrollMetrics_Object_ScrollMetrics, A.ScrollPhysics, A._Pending, A.DefaultWidgetsLocalizations, A.MediaQueryData, A.RouteSettings, A.RouteTransitionRecord, A.TransitionDelegate, A._NavigatorObservation, A._RestorationInformation, A.OverlayEntry, A._RenderTheaterMixin, A._StorageEntryIdentifier, A.PageStorageBucket, A.MenuSerializableShortcut, A.PlatformMenuDelegate, A.RestorationMixin, A.RouteInformation, A.LocalHistoryRoute, A.ScrollActivity, A.ScrollDragController, A._WrappedScrollBehavior, A.ScrollMetrics, A.ViewportNotificationMixin, A.EdgeDraggingAutoScroller, A.SelectionContainerDelegate, A.ScrollableDetails, A._SingleActivator_Object_Diagnosticable, A.__ActivatorIntentPair_Object_Diagnosticable, A._ShortcutManager_Object_Diagnosticable, A._ShortcutRegistry_Object_ChangeNotifier, A._DefaultSnapshotPainter, A.SingleTickerProviderStateMixin, A.TickerProviderStateMixin, A._Node, A.Matrix4, A.Vector3, A.Vector4]);
    _inheritMany(J.Interceptor, [J.JSBool, J.JSNull, J.JavaScriptObject, J.JavaScriptBigInt, J.JavaScriptSymbol, J.JSNumber, J.JSString]);
    _inheritMany(J.JavaScriptObject, [J.LegacyJavaScriptObject, J.JSArray, A.NativeByteBuffer, A.NativeTypedData]);
    _inheritMany(J.LegacyJavaScriptObject, [J.PlainJavaScriptObject, J.UnknownJavaScriptObject, J.JavaScriptFunction]);
    _inherit(J.JSArraySafeToStringHook, A.SafeToStringHook);
    _inherit(J.JSUnmodifiableArray, J.JSArray);
    _inheritMany(J.JSNumber, [J.JSInt, J.JSNumNotInt]);
    _inheritMany(A.Iterable, [A._CastIterableBase, A.EfficientLengthIterable, A.MappedIterable, A.WhereIterable, A.ExpandIterable, A.TakeIterable, A.SkipIterable, A.SkipWhileIterable, A.FollowedByIterable, A.WhereTypeIterable, A._KeysOrValues, A._AllMatchesIterable, A._StringAllMatchesIterable, A._SyncStarIterable, A.LinkedList, A.ObserverList, A.HashedObserverList]);
    _inheritMany(A._CastIterableBase, [A.CastIterable, A.__CastListBase__CastIterableBase_ListMixin, A.CastSet]);
    _inherit(A._EfficientLengthCastIterable, A.CastIterable);
    _inherit(A._CastListBase, A.__CastListBase__CastIterableBase_ListMixin);
    _inherit(A.CastList, A._CastListBase);
    _inheritMany(A.MapBase, [A.CastMap, A.JsLinkedHashMap, A._HashMap, A._JsonMap]);
    _inheritMany(A.Closure, [A.Closure0Args, A.Closure2Args, A.CastMap_entries_closure, A.Instantiation, A.TearOffClosure, A.initHooks_closure, A.initHooks_closure1, A._AsyncRun__initializeScheduleImmediate_internalCallback, A._AsyncRun__initializeScheduleImmediate_closure, A._awaitOnObject_closure, A.Future_wait_closure, A._Future__chainForeignFuture_closure, A._Future__propagateToListeners_handleWhenCompleteCallback_closure, A.Stream_length_closure, A._HashMap_values_closure, A.MapBase_entries_closure, A._JsonMap_values_closure, A.PlatformDispatcher__zonedPlatformMessageResponseCallback_closure, A.PlatformDispatcher_frameCallback_closure, A._CupertinoTimerPickerState__buildHourPicker_closure0, A._CupertinoTimerPickerState__buildHourPicker_closure, A._CupertinoTimerPickerState__buildHourColumn_closure, A._CupertinoTimerPickerState__buildMinutePicker_closure0, A._CupertinoTimerPickerState__buildMinutePicker_closure, A._CupertinoTimerPickerState__buildMinuteColumn_closure, A._CupertinoTimerPickerState__buildSecondPicker_closure0, A._CupertinoTimerPickerState__buildSecondPicker_closure, A._CupertinoTimerPickerState__buildSecondColumn_closure, A._CupertinoTimerPickerState_build__closure, A._RenderCupertinoPickerSemantics_assembleSemanticsNode_closure, A._CupertinoBackGestureController_dragEnd_closure, A._CupertinoEdgeShadowDecoration_lerp_closure, A._CupertinoEdgeShadowDecoration_lerp_closure0, A._CupertinoScrollbarState_handleThumbPress_closure, A.CupertinoThemeData_resolveFrom_convertColor, A.NoDefaultCupertinoThemeData_resolveFrom_convertColor, A._CupertinoThemeDefaults_resolveFrom_convertColor, A.FlutterError_FlutterError_closure, A.FlutterError_defaultStackFilter_closure, A.FlutterError_defaultStackFilter_closure0, A.debugPrintStack_closure, A.StackFrame_fromStackString_closure, A.SynchronousFuture_whenComplete_closure, A._GestureArena_toString_closure, A.BackButtonIcon_build_closure, A.BackButtonIcon_build_closure0, A.BackButtonIcon_build_closure1, A.DrawerButtonIcon_build_closure, A.DrawerButtonIcon_build_closure0, A.DrawerButtonIcon_build_closure1, A.EndDrawerButtonIcon_build_closure, A.EndDrawerButtonIcon_build_closure0, A.EndDrawerButtonIcon_build_closure1, A._MaterialAppState__buildWidgetApp_closure, A.MaterialRectArcTween__initialize_closure, A._ButtonStyleState_build_effectiveValue, A._ButtonStyleState_build_resolve, A._ButtonStyleState_build_resolve_closure, A._ButtonStyleState_build_closure, A._ButtonStyleState_build_closure0, A._ButtonStyleState_build_closure1, A._ButtonStyleState_build_closure2, A._ButtonStyleState_build_closure3, A._ButtonStyleState_build_closure4, A._ButtonStyleState_build_closure5, A._ButtonStyleState_build_closure6, A._ButtonStyleState_build_closure7, A._ButtonStyleState_build_closure8, A._ButtonStyleState_build_closure9, A._ButtonStyleState_build_closure10, A._ButtonStyleState_build_closure11, A._ButtonStyleState_build_closure12, A._ButtonStyleState_build_closure20, A._ButtonStyleState_build__closure0, A._ButtonStyleState_build_closure21, A._ButtonStyleState_build__closure, A._ButtonStyleState_build_closure13, A._ButtonStyleState_build_closure14, A._ButtonStyleState_build_closure15, A._ButtonStyleState_build_closure16, A._ButtonStyleState_build_closure17, A._ButtonStyleState_build_closure18, A._ButtonStyleState_build_closure19, A._CheckboxState__widgetFillColor_closure, A._CheckboxState_build_closure, A._CheckboxDefaultsM2_fillColor_closure, A._CheckboxDefaultsM2_overlayColor_closure, A._InkResponseState_highlightsExist_closure, A._InkResponseState_build_getHighlightColorForType, A._MaterialState_build_closure, A._MaterialInteriorState_forEachTween_closure, A._MaterialInteriorState_forEachTween_closure0, A._MaterialInteriorState_forEachTween_closure1, A._MaterialInteriorState_forEachTween_closure2, A._ZoomPageTransition_build_closure, A._ZoomPageTransition_build_closure0, A._ZoomPageTransition_build_closure1, A._ZoomPageTransition_build_closure2, A.PageTransitionsTheme__all_closure, A.ScaffoldMessengerState_hideCurrentSnackBar_closure, A._MaterialScrollbarState__trackVisibility_closure, A._MaterialScrollbarState__thumbColor_closure, A._MaterialScrollbarState__trackColor_closure, A._MaterialScrollbarState__trackBorderColor_closure, A._MaterialScrollbarState__thickness_closure, A._SliderState_showValueIndicator_closure, A._RenderSlider_closure, A._RenderSlider__maxSliderPartWidth_closure, A._RenderSlider__maxSliderPartHeight_closure, A._AnimatedThemeState_forEachTween_closure, A.ThemeData__lerpThemeExtensions_closure0, A.TooltipState__createNewEntry_closure, A.TooltipState__createNewEntry_closure0, A.TooltipState__createNewEntry_closure1, A.TooltipState_build_closure, A.TooltipState_build_closure0, A._CompoundBorder_scale_closure, A._CompoundBorder_toString_closure, A.ClipContext_clipPathAndPaint_closure, A.ClipContext_clipRRectAndPaint_closure, A.ClipContext_clipRectAndPaint_closure, A.InlineSpan_codeUnitAt_closure, A.FrictionSimulation_closure, A.RendererBinding__scheduleMouseTrackerUpdate_closure, A.BoxConstraints_toString_describe, A.RenderListWheelViewport__createChild_closure, A.RenderListWheelViewport__destroyChild_closure, A.MouseTracker__handleDeviceUpdate_closure, A.MouseTracker__handleDeviceUpdateMouseEvents_closure0, A.RenderObject__updateCompositingBits_closure, A.RenderObject_clearSemantics_closure, A.RenderObject__getSemanticsForParent_closure, A.RenderObject__getSemanticsForParent_closure0, A.RenderObject__getSemanticsForParent_closure1, A.RelayoutWhenSystemFontsChangeMixin__scheduleSystemFontsUpdate_closure, A.RenderParagraph_markNeedsLayout_closure, A.RenderParagraph__extractPlaceholderSpans_closure, A.RenderParagraph_selectionColor_closure, A.SchedulerBinding_endOfFrame_closure, A.SchedulerBinding__handleDrawFrame_closure, A.TickerFuture_whenCompleteOrCancel_thunk, A.SemanticsOwner_sendSemanticsUpdate_closure, A.SemanticsConfiguration__addArgumentlessAction_closure, A.SemanticsConfiguration_onMoveCursorForwardByCharacter_closure, A.SemanticsConfiguration_onMoveCursorBackwardByCharacter_closure, A.SemanticsConfiguration_onMoveCursorForwardByWord_closure, A.SemanticsConfiguration_onMoveCursorBackwardByWord_closure, A.SemanticsConfiguration_onSetSelection_closure, A.SemanticsConfiguration_onSetText_closure, A.PlatformAssetBundle_load_closure, A._DefaultBinaryMessenger_send_closure, A.BasicMessageChannel_setMessageHandler_closure, A.MethodChannel_setMethodCallHandler_closure, A.RestorationManager_handleRestorationUpdateFromEngine_closure, A.RestorationManager_scheduleSerializationFor_closure, A.RestorationBucket__visitChildren_closure, A.TextInput__handleTextInputInvocation_closure, A.TextInput__handleTextInputInvocation_closure0, A.TextInput__handleTextInputInvocation_closure1, A._getParent_closure, A.Actions__findDispatcher_closure, A.Actions_maybeFind_closure, A.Actions__maybeFindWithoutDependingOn_closure, A.Actions_maybeInvoke_closure, A._FocusableActionDetectorState_initState_closure, A._FocusableActionDetectorState__mayTriggerCallback_shouldShowHoverHighlight, A._FocusableActionDetectorState__mayTriggerCallback_canRequestFocus, A._FocusableActionDetectorState__mayTriggerCallback_shouldShowFocusHighlight, A._FocusableActionDetectorState_didUpdateWidget_closure, A._WidgetsAppState__onGenerateRoute_closure, A._WidgetsAppState_build_closure, A._UbiquitousInheritedElement_notifyClients_closure, A._UbiquitousInheritedElement__recurseChildren_closure, A.RichText__extractChildren_closure, A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_initInstances_closure, A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_drawFrame_closure, A.FocusNode_traversalDescendants_closure, A._getAncestor_closure, A.FocusTraversalPolicy__sortAllDescendants_visitGroups, A.FocusTraversalPolicy__sortAllDescendants_closure, A._ReadingOrderTraversalPolicy_FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin_changedScope_closure, A.DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure, A.DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure0, A.DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure, A.DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure0, A.DirectionalFocusTraversalPolicyMixin__popPolicyDataIfNeeded_popOrInvalidate, A.DirectionalFocusTraversalPolicyMixin_inDirection_closure, A.DirectionalFocusTraversalPolicyMixin_inDirection_closure0, A.DirectionalFocusTraversalPolicyMixin_inDirection_closure1, A.DirectionalFocusTraversalPolicyMixin_inDirection_closure2, A._ReadingOrderSortData_commonDirectionalityOf_closure, A._ReadingOrderSortData_directionalAncestors_getDirectionalityAncestors, A._ReadingOrderDirectionalGroupData_rect_closure, A.ReadingOrderTraversalPolicy__pickNext_inBand_closure, A._InactiveElements__unmount_closure, A.Element_renderObject_closure, A.Element_updateSlotForChild_visit, A.Element__updateDepth_closure, A.Element_detachRenderObject_closure, A.Element_attachRenderObject_closure, A.ParentDataElement__applyParentData_applyParentDataToChild, A.RenderObjectElement_updateChildren_replaceWithNullIfForgotten, A.GestureDetector_build_closure0, A.GestureDetector_build_closure2, A.GestureDetector_build_closure4, A.GestureDetector_build_closure6, A.GestureDetector_build_closure8, A.GestureDetector_build_closure10, A._DefaultSemanticsGestureDelegate__getHorizontalDragUpdateHandler_closure, A._DefaultSemanticsGestureDelegate__getHorizontalDragUpdateHandler_closure0, A._DefaultSemanticsGestureDelegate__getHorizontalDragUpdateHandler_closure1, A._DefaultSemanticsGestureDelegate__getVerticalDragUpdateHandler_closure, A._DefaultSemanticsGestureDelegate__getVerticalDragUpdateHandler_closure0, A._DefaultSemanticsGestureDelegate__getVerticalDragUpdateHandler_closure1, A.Hero__allHeroesFor_visitor, A.HeroController_didStopUserGesture_isInvalidFlight, A.HeroController__maybeStartHeroTransition_closure, A.IconTheme_merge_closure, A.ImplicitlyAnimatedWidgetState_initState_closure, A.ImplicitlyAnimatedWidgetState_didUpdateWidget_closure, A.ImplicitlyAnimatedWidgetState__constructTweens_closure, A._AnimatedDefaultTextStyleState_forEachTween_closure, A._AnimatedPhysicalModelState_forEachTween_closure, A._AnimatedPhysicalModelState_forEachTween_closure0, A._AnimatedPhysicalModelState_forEachTween_closure1, A._AnimatedPhysicalModelState_forEachTween_closure2, A._ListWheelScrollViewState_didUpdateWidget_closure, A._loadAll_closure, A._loadAll_closure0, A._loadAll_closure1, A._LocalizationsState_load_closure, A._LocalizationsState_load_closure0, A.LookupBoundary_findAncestorStateOfType_closure, A.LookupBoundary_findAncestorRenderObjectOfType_closure, A.Route_didPush_closure, A.Route_didAdd_closure, A.Route_isCurrent_closure, A.Route_isFirst_closure, A.Route_isActive_closure, A.Navigator_defaultGenerateInitialRoutes_closure, A._RouteEntry_dispose_closure, A._RouteEntry_isRoutePredicate_closure, A.NavigatorState_restoreState_closure, A.NavigatorState__flushHistoryUpdates_closure, A.NavigatorState_maybePop_closure, A.NavigatorState_maybePop_closure1, A.OverlayEntry_remove_closure, A.PageStorageBucket__allKeys_closure, A._RootRestorationScopeState__loadRootBucketIfNecessary_closure, A._RouterState__processParsedRouteInformation_closure, A._RouterState__handleRoutePopped_closure, A.TransitionRoute__updateSecondaryAnimation_jumpOnAnimationEnd, A.TransitionRoute__setSecondaryAnimation_closure, A._ModalScopeState_build_closure0, A._ModalScopeState_build__closure, A.ScrollBehavior_velocityTrackerBuilder_closure, A.ScrollBehavior_velocityTrackerBuilder_closure0, A.ScrollBehavior_velocityTrackerBuilder_closure1, A.ScrollNotificationObserverState_build_closure, A.ScrollNotificationObserverState_build_closure0, A.ScrollPosition_forcePixels_closure, A.ScrollableState_setCanDrag_closure0, A.ScrollableState_setCanDrag_closure2, A._ScrollableSelectionContainerDelegate__scheduleLayoutChange_closure, A.ScrollbarPainter_update_needPaint, A.RawScrollbarState__gestures_closure0, A.RawScrollbarState__gestures__closure, A.RawScrollbarState__gestures__closure0, A.RawScrollbarState__gestures__closure1, A.RawScrollbarState__gestures_closure2, A.RawScrollbarState_build_closure, A.RawScrollbarState_build_closure0, A.MultiSelectableSelectionContainerDelegate__scheduleSelectableUpdate_closure, A.MultiSelectableSelectionContainerDelegate_handleSelectWord_closure, A.MultiSelectableSelectionContainerDelegate_handleSelectWord_closure0, A._LeafWidget_build_closure0, A._LeafWidget_build_closure1, A._LeafWidget_build_closure2, A.initializeBenchmarkHarness_frameCallback]);
    _inheritMany(A.Closure0Args, [A.CastMap_putIfAbsent_closure, A.nullFuture_closure, A.Primitives_initTicker_closure, A._AsyncRun__scheduleImmediateJsOverride_internalCallback, A._AsyncRun__scheduleImmediateWithSetImmediate_internalCallback, A._TimerImpl_internalCallback, A._Future__addListener_closure, A._Future__prependListeners_closure, A._Future__chainForeignFuture_closure1, A._Future__chainCoreFuture_closure, A._Future__asyncCompleteWithValue_closure, A._Future__asyncCompleteErrorObject_closure, A._Future__propagateToListeners_handleWhenCompleteCallback, A._Future__propagateToListeners_handleValueCallback, A._Future__propagateToListeners_handleError, A.Stream_length_closure0, A._StreamController__subscribe_closure, A._StreamController__recordCancel_complete, A._BufferingStreamSubscription__sendDone_sendDone, A._PendingEvents_schedule_closure, A._rootHandleError_closure, A._RootZone_bindCallbackGuarded_closure, A._Utf8Decoder__decoder_closure, A._Utf8Decoder__decoderNonfatal_closure, A.ChannelBuffers_setListener_closure, A.PlatformDispatcher_scheduleFrame_closure, A.PlatformDispatcher_scheduleFrame__closure, A.PlatformDispatcher_scheduleFrame___closure, A.PluginUtilities_getCallbackHandle_closure, A.PluginUtilities_getCallbackFromHandle_closure, A._CupertinoTimerPickerState__handleSystemFontsChange_closure, A._CupertinoTimerPickerState__buildHourPicker__closure, A._CupertinoTimerPickerState__buildHourColumn__closure, A._CupertinoTimerPickerState__buildMinutePicker__closure, A._CupertinoTimerPickerState__buildMinuteColumn__closure, A._CupertinoTimerPickerState__buildSecondPicker__closure, A._CupertinoTimerPickerState__buildSecondColumn__closure, A.CupertinoRouteTransitionMixin_buildPageTransitions_closure, A.CupertinoRouteTransitionMixin_buildPageTransitions_closure0, A._CupertinoScrollbarState_initState_closure, A.compute_closure, A._testPlatform_closure, A._browserPlatform_closure, A.FlutterErrorDetails_summary_formatException, A.BindingBase_lockEvents_closure, A.ChangeNotifier_notifyListeners_closure, A.GestureArenaManager_add_closure, A.GestureArenaManager__tryToResolveArena_closure, A.GestureBinding_dispatchEvent_closure, A.GestureBinding_dispatchEvent_closure0, A.LongPressGestureRecognizer__checkLongPressStart_closure, A.LongPressGestureRecognizer__checkLongPressMoveUpdate_closure, A.LongPressGestureRecognizer__checkLongPressEnd_closure, A.DragGestureRecognizer__checkDown_closure, A.DragGestureRecognizer__checkStart_closure, A.DragGestureRecognizer__checkUpdate_closure, A.DragGestureRecognizer__checkEnd_closure, A.DragGestureRecognizer__checkEnd_closure0, A.DragGestureRecognizer__checkEnd_closure1, A.PointerRouter_addRoute_closure, A.PrimaryPointerGestureRecognizer_addAllowedPointer_closure, A.TapGestureRecognizer_handleTapDown_closure, A.TapGestureRecognizer_handleTapUp_closure, A.GestureArenaTeam_add_closure, A._ActionButton_build_closure, A.AppBar__getEffectiveCenterTitle_platformCenter, A._AppBarState__handleScrollNotification_closure, A.MaterialPointArcTween__initialize_sweepAngle, A._ButtonStyleState_handleStatesControllerChange_closure, A._ButtonStyleState_build__closure1, A._getClipCallback_closure, A._getClipCallback_closure0, A._InkResponseState_handleStatesControllerChange_closure, A._InkResponseState_updateHighlight_handleInkRemoval, A._InkResponseState__createInkFeature_onRemoved, A._InkResponseState_handleFocusHighlightModeChange_closure, A._FloatingActionButtonTransitionState__handlePreviousAnimationStatusChanged_closure, A.ScaffoldState__updateSnackBar_closure, A.ScaffoldState__updateMaterialBanner_closure, A._MaterialScrollbarState_initState_closure, A._MaterialScrollbarState_handleThumbPressStart_closure, A._MaterialScrollbarState_handleThumbPressEnd_closure, A._MaterialScrollbarState_handleHover_closure, A._MaterialScrollbarState_handleHover_closure0, A._MaterialScrollbarState_handleHoverExit_closure, A._SliderState__handleFocusHighlightChanged_closure, A._SliderState__handleHoverChanged_closure, A._SliderState__buildMaterialSlider_effectiveOverlayColor, A._SliderState__buildMaterialSlider_screenSize, A._SliderState__buildMaterialSlider_closure, A._RenderSlider__startInteraction_closure, A.ThemeData_localize_closure, A.ToggleableStateMixin__handleTapDown_closure, A.ToggleableStateMixin__handleTapEnd_closure, A.ToggleableStateMixin__handleFocusHighlightChanged_closure, A.ToggleableStateMixin__handleHoverChanged_closure, A.TooltipState__handleMouseTrackerChange_closure, A.RenderBox_getDryLayout_closure, A.RenderBox_getDistanceToActualBaseline_closure, A.MouseTracker_updateWithEvent_closure, A.MouseTracker_updateWithEvent__closure, A.MouseTracker_updateAllDevices_closure, A.PaintingContext_pushClipRect_closure, A.PaintingContext_pushClipRRect_closure, A.PaintingContext_pushClipPath_closure, A.RenderObject__reportException_closure, A.RenderObject_invokeLayoutCallback_closure, A.SchedulerBinding_handleEventLoopCallback_closure, A.SchedulerBinding_scheduleWarmUpFrame_closure, A.SchedulerBinding_scheduleWarmUpFrame_closure0, A.SchedulerBinding_scheduleWarmUpFrame_closure1, A.ServicesBinding__addLicenses_closure, A.RawKeyEvent_RawKeyEvent$fromMessage_dataFromWeb, A.RestorationBucket__rawChildren_closure, A.RestorationBucket__rawValues_closure, A.RestorationBucket__addChildData_closure, A.SystemChrome_setSystemUIOverlayStyle_closure, A.TextInput__loudlyHandleTextInputInvocation_closure, A._ActionsState__handleActionChanged_closure, A._FocusableActionDetectorState__updateHighlightMode_closure, A._FocusableActionDetectorState__handleMouseEnter_closure, A._FocusableActionDetectorState__handleMouseExit_closure, A._FocusableActionDetectorState__handleFocusChange_closure, A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_dispatchEvent_closure, A.WidgetsBinding_scheduleAttachRootWidget_closure, A.RenderObjectToWidgetAdapter_attachToRenderTree_closure, A.RenderObjectToWidgetAdapter_attachToRenderTree_closure0, A._FocusState__handleFocusChanged_closure, A._FocusState__handleFocusChanged_closure0, A._FocusState__handleFocusChanged_closure1, A._FocusState__handleFocusChanged_closure2, A.BuildOwner_buildScope_closure, A.ComponentElement_performRebuild_closure, A.ComponentElement_performRebuild_closure0, A.GestureDetector_build_closure, A.GestureDetector_build_closure1, A.GestureDetector_build_closure3, A.GestureDetector_build_closure5, A.GestureDetector_build_closure7, A.GestureDetector_build_closure9, A._DefaultSemanticsGestureDelegate__getTapHandler_closure, A._DefaultSemanticsGestureDelegate__getLongPressHandler_closure, A._HeroState_startFlight_closure, A._HeroState_endFlight_closure, A._HeroFlight__handleAnimationUpdate_delayedPerformAnimationUpdate, A.AnimatedWidgetBaseState__handleAnimationChanged_closure, A._LayoutBuilderElement__layout_layoutCallback, A._LayoutBuilderElement__layout_layoutCallback_closure, A._LayoutBuilderElement__layout_layoutCallback_closure0, A.ListWheelElement_retrieveWidget_closure, A.ListWheelElement_createChild_closure, A.ListWheelElement_removeChild_closure, A._LocalizationsState_load__closure, A._MediaQueryFromViewState__updateData_closure, A.ModalBarrier_build_handleDismiss, A.Route_isCurrent_closure0, A.Route_isFirst_closure0, A.Route_isActive_closure0, A._RouteEntry_handlePush_closure, A._RouteEntry_dispose_closure0, A.NavigatorState__flushHistoryUpdates_closure0, A.NavigatorState_maybePop_closure0, A.NavigatorState_maybePop_closure2, A.NavigatorState__cancelActivePointers_closure, A._OverlayEntryWidgetState__markNeedsBuild_closure, A.OverlayState_insert_closure, A.OverlayState_insertAll_closure, A.OverlayState_rearrange_closure, A.OverlayState__markDirty_closure, A.OverlayState__didChangeEntryOpacity_closure, A._GlowController_pull_closure, A._RootRestorationScopeState__loadRootBucketIfNecessary__closure, A.RestorationMixin_registerForRestoration_listener, A._RouterState_restoreState_closure, A._RouterState_restoreState_closure0, A._RouterState_didChangeDependencies_closure, A._RouterState__handleRouteInformationProviderNotification_closure, A._RouterState__rebuild_closure, A._RouterState__handleRouterDelegateNotification_closure, A.TransitionRoute__updateSecondaryAnimation_closure, A.TransitionRoute__updateSecondaryAnimation_closure0, A._ModalScopeState__forceRebuildPage_closure, A.ModalRoute_offstage_closure, A.ModalRoute_changedInternalState_closure, A.ScrollNotificationObserverState__notifyListeners_closure, A.ScrollableState_setCanDrag_closure, A.ScrollableState_setCanDrag_closure1, A.RawScrollbarState__maybeStartFadeoutTimer_closure, A.RawScrollbarState__gestures_closure, A.RawScrollbarState__gestures_closure1, A.ShortcutManager__indexShortcuts__closure, A._AnimatedState__handleChange_closure, A._LayoutWidgetState_initState_closure, A._LayoutWidgetState_initState__closure, A._LeafWidget_build_closure, A._LeafWidget_build_closure3, A._LeafWidget_build_closure4, A._LeafWidget_build_closure5, A._LeafWidget_build_closure6, A._LeafWidget_build_closure7, A._LeafWidget_build_closure8, A._LeafWidget_build_closure9]);
    _inheritMany(A.Closure2Args, [A.CastMap_forEach_closure, A.ConstantMap_map_closure, A.JsLinkedHashMap_addAll_closure, A.initHooks_closure0, A._awaitOnObject_closure0, A._wrapJsFunctionForAsync_closure, A.Future_wait_handleError, A._Future__chainForeignFuture_closure0, A._Future__propagateToListeners_handleWhenCompleteCallback_closure0, A.LinkedHashMap_LinkedHashMap$from_closure, A.MapBase_mapToString_closure, A._JsonStringifier_writeMap_closure, A.NoSuchMethodError_toString_closure, A.Uri__parseIPv4Address_error, A.Uri_parseIPv6Address_error, A.Uri_parseIPv6Address_parseHex, A.CupertinoDynamicColor_toString_toString, A._CupertinoTimerPickerState_build_closure, A.PointerRouter__dispatchEventToRoutes_closure, A.MaterialApp_createMaterialHeroController_closure, A._MaterialAppState_build_closure, A._RenderInputPadding_hitTest_closure, A._ZoomEnterTransitionPainter_paint_closure, A._ZoomExitTransitionPainter_paint_closure, A._CircularProgressIndicatorState__buildAnimation_closure, A.ScaffoldState_build_closure, A._ScaffoldState_State_TickerProviderStateMixin_RestorationMixin_dispose_closure, A.ThemeData__lerpThemeExtensions_closure, A._CompoundBorder_dimensions_closure, A.RenderBoxContainerDefaultsMixin_defaultHitTestChildren_closure, A.RenderListWheelViewport__paintChildWithMagnifier_closure, A.RenderListWheelViewport__paintChildWithMagnifier__closure, A.RenderListWheelViewport__paintChildWithMagnifier_closure0, A.RenderListWheelViewport__paintChildCylindrically_painter, A.RenderListWheelViewport__paintChildCylindrically_opacityPainter, A.MouseTracker__handleDeviceUpdateMouseEvents_closure, A.PipelineOwner_flushLayout_closure, A.PipelineOwner_flushCompositingBits_closure, A.PipelineOwner_flushPaint_closure, A.PipelineOwner_flushSemantics_closure, A.RenderParagraph_paint_closure, A.RenderPhysicalModel_paint_closure, A.RenderPhysicalShape_paint_closure, A.RenderTransform_hitTestChildren_closure, A.RenderFractionalTranslation_hitTestChildren_closure, A.RenderFollowerLayer_hitTestChildren_closure, A.RenderShiftedBox_hitTestChildren_closure, A.SchedulerBinding_handleBeginFrame_closure, A.SemanticsOwner_sendSemanticsUpdate_closure0, A.SemanticsOwner_sendSemanticsUpdate_closure1, A._DefaultBinaryMessenger_setMessageHandler_closure, A.StandardMessageCodec_writeValue_closure, A.DirectionalFocusTraversalPolicyMixin__sortAndFindInitial_closure, A.DirectionalFocusTraversalPolicyMixin__sortByDistancePreferVertical_closure, A.DirectionalFocusTraversalPolicyMixin__sortByDistancePreferHorizontal_closure, A.DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure1, A.DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure1, A._ReadingOrderSortData_sortWithDirectionality_closure, A._ReadingOrderDirectionalGroupData_sortWithDirectionality_closure, A.ReadingOrderTraversalPolicy__pickNext_closure, A.ReadingOrderTraversalPolicy__pickNext_inBand, A.RenderObjectElement_updateChildren_slotFor, A.Hero__allHeroesFor_inviteHero, A._HeroFlight__buildOverlay_closure, A.HeroController__defaultHeroFlightShuttleBuilder_closure, A._ListWheelScrollViewState_build_closure, A.ListWheelElement_visitChildren_closure, A._HistoryProperty_fromPrimitives_closure, A._NavigatorState_State_TickerProviderStateMixin_RestorationMixin_dispose_closure, A._RenderTheaterMixin_hitTestChildren_childHitTest, A._StretchingOverscrollIndicatorState_build_closure, A.__RestorationScopeState_State_RestorationMixin_dispose_closure, A.__RouterState_State_RestorationMixin_dispose_closure, A._ModalScopeState_build_closure, A._ModalScopeState_build__closure0, A._ModalScopeState_build___closure, A._ScrollableState_State_TickerProviderStateMixin_RestorationMixin_dispose_closure, A._ScrollableSelectionContainerDelegate_didChangeSelectables_closure, A._ScrollableSelectionContainerDelegate_didChangeSelectables_closure0, A.ShortcutManager__indexShortcuts_closure]);
    _inheritMany(A.Error, [A.LateError, A.TypeError, A.JsNoSuchMethodError, A.UnknownJsTypeError, A.RuntimeError, A._Error, A.JsonUnsupportedObjectError, A.AssertionError, A.ArgumentError, A.NoSuchMethodError, A.UnsupportedError, A.UnimplementedError, A.StateError, A.ConcurrentModificationError, A._FlutterError_Error_DiagnosticableTreeMixin]);
    _inherit(A.UnmodifiableListBase, A.ListBase);
    _inherit(A.CodeUnits, A.UnmodifiableListBase);
    _inheritMany(A.EfficientLengthIterable, [A.ListIterable, A.EmptyIterable, A.LinkedHashMapKeysIterable, A.LinkedHashMapValuesIterable, A.LinkedHashMapEntriesIterable, A._HashMapKeyIterable, A._MapBaseValueIterable, A._SplayTreeKeyIterable, A._SplayTreeValueIterable, A._SplayTreeMapEntryIterable]);
    _inheritMany(A.ListIterable, [A.SubListIterable, A.MappedListIterable, A.ReversedListIterable, A.ListQueue, A._JsonMapKeyIterable]);
    _inherit(A.EfficientLengthMappedIterable, A.MappedIterable);
    _inherit(A.EfficientLengthTakeIterable, A.TakeIterable);
    _inherit(A.EfficientLengthSkipIterable, A.SkipIterable);
    _inherit(A.EfficientLengthFollowedByIterable, A.FollowedByIterable);
    _inherit(A._UnmodifiableMapView_MapView__UnmodifiableMapMixin, A.MapView);
    _inherit(A.UnmodifiableMapView, A._UnmodifiableMapView_MapView__UnmodifiableMapMixin);
    _inherit(A.ConstantMapView, A.UnmodifiableMapView);
    _inheritMany(A.ConstantMap, [A.ConstantStringMap, A.GeneralConstantMap]);
    _inheritMany(A.SetBase, [A.ConstantSet, A._SetBase]);
    _inherit(A.GeneralConstantSet, A.ConstantSet);
    _inherit(A.Instantiation1, A.Instantiation);
    _inherit(A.NullError, A.TypeError);
    _inheritMany(A.TearOffClosure, [A.StaticClosure, A.BoundClosure]);
    _inherit(A.JsConstantLinkedHashMap, A.JsLinkedHashMap);
    _inheritMany(A.NativeTypedData, [A.NativeByteData, A.NativeTypedArray]);
    _inheritMany(A.NativeTypedArray, [A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin, A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin]);
    _inherit(A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin, A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin);
    _inherit(A.NativeTypedArrayOfDouble, A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin);
    _inherit(A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin, A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin);
    _inherit(A.NativeTypedArrayOfInt, A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin);
    _inheritMany(A.NativeTypedArrayOfDouble, [A.NativeFloat32List, A.NativeFloat64List]);
    _inheritMany(A.NativeTypedArrayOfInt, [A.NativeInt16List, A.NativeInt32List, A.NativeInt8List, A.NativeUint16List, A.NativeUint32List, A.NativeUint8ClampedList, A.NativeUint8List]);
    _inherit(A._TypeError, A._Error);
    _inherit(A._AsyncCompleter, A._Completer);
    _inherit(A._AsyncStreamController, A._StreamController);
    _inherit(A._StreamImpl, A.Stream);
    _inherit(A._ControllerStream, A._StreamImpl);
    _inherit(A._ControllerSubscription, A._BufferingStreamSubscription);
    _inherit(A._DelayedData, A._DelayedEvent);
    _inherit(A._RootZone, A._Zone);
    _inheritMany(A._SetBase, [A._HashSet, A._LinkedHashSet]);
    _inheritMany(A._SplayTreeNode, [A._SplayTreeSetNode, A._SplayTreeMapNode]);
    _inheritMany(A._SplayTree, [A._SplayTreeMap__SplayTree_MapMixin, A._SplayTreeSet__SplayTree_Iterable]);
    _inherit(A.SplayTreeMap, A._SplayTreeMap__SplayTree_MapMixin);
    _inheritMany(A._SplayTreeIterator, [A._SplayTreeKeyIterator, A._SplayTreeValueIterator, A._SplayTreeMapEntryIterator]);
    _inherit(A._SplayTreeSet__SplayTree_Iterable_SetMixin, A._SplayTreeSet__SplayTree_Iterable);
    _inherit(A.SplayTreeSet, A._SplayTreeSet__SplayTree_Iterable_SetMixin);
    _inheritMany(A.Codec, [A.Base64Codec, A.Encoding, A.JsonCodec]);
    _inheritMany(A.Converter, [A.Base64Encoder, A.JsonEncoder, A.JsonDecoder, A.Utf8Encoder, A.Utf8Decoder]);
    _inherit(A.JsonCyclicError, A.JsonUnsupportedObjectError);
    _inherit(A._JsonStringStringifier, A._JsonStringifier);
    _inherit(A.Utf8Codec, A.Encoding);
    _inheritMany(A.ArgumentError, [A.RangeError, A.IndexError]);
    _inherit(A._DataUri, A._Uri);
    _inheritMany(A._EngineLayerWrapper, [A._PictureLayer, A.TransformEngineLayer, A.OffsetEngineLayer, A.ClipRectEngineLayer, A.ClipRRectEngineLayer, A.ClipPathEngineLayer, A.OpacityEngineLayer]);
    _inheritMany(A.OffsetBase, [A.Offset, A.Size]);
    _inheritMany(A._Enum, [A.BlendMode, A.Clip, A.PathFillType, A.BlurStyle, A.TileMode, A.ClipOp, A.AppLifecycleState, A.DartPerformanceMode, A.DisplayFeatureType, A.DisplayFeatureState, A.PointerDeviceKind, A.FontStyle, A.TextAlign, A.TextBaseline, A.TextDecorationStyle, A.TextLeadingDistribution, A.TextDirection, A.TextAffinity, A.BoxHeightStyle, A.BoxWidthStyle, A.PlaceholderAlignment, A.Brightness, A.AnimationStatus, A._AnimationDirection, A.AnimationBehavior, A._TrainHoppingMode, A.CupertinoTimerPickerMode, A.DiagnosticLevel, A.DiagnosticsTreeStyle, A.TargetPlatform, A.GestureDisposition, A._DragState, A.DragStartBehavior, A.GestureRecognizerState, A.ThemeMode, A._CornerId, A.ButtonTextTheme, A._IconButtonVariant, A._HighlightType, A.FloatingLabelBehavior, A.MaterialType, A.MaterialState, A._ActivityIndicatorType, A._ScaffoldSlot, A._SliderType, A._SliderAdjustmentType, A.ShowValueIndicator, A.SnackBarClosedReason, A.MaterialTapTargetSize, A.TooltipTriggerMode, A.ScriptCategory, A.RenderComparison, A.Axis, A.VerticalDirection, A.AxisDirection, A.BorderStyle, A.BoxShape, A.TextOverflow, A.TextWidthBasis, A.SpringType, A.FlexFit, A.MainAxisSize, A.MainAxisAlignment, A.CrossAxisAlignment, A.HitTestBehavior, A.DecorationPosition, A.SelectionResult, A.SelectionEventType, A.TextGranularity, A.SelectionExtendDirection, A.SelectionStatus, A.TextSelectionHandleType, A.GrowthDirection, A.StackFit, A.ScrollDirection, A.SchedulerPhase, A.DebugSemanticsDumpOrder, A.KeyboardLockMode, A.KeyDataTransitMode, A.KeyboardSide, A.ModifierKey, A.SystemSoundType, A.SelectionChangedCause, A.KeyEventResult, A.UnfocusDisposition, A.FocusHighlightMode, A.FocusHighlightStrategy, A.TraversalDirection, A.TraversalEdgeBehavior, A._ElementLifecycle, A.HeroFlightDirection, A.Orientation, A._MediaQueryAspect, A.NavigationMode, A._ToolbarSlot, A.RoutePopDisposition, A._RouteLifecycle, A._RouteRestorationType, A._GlowState, A._StretchDirection, A._StretchState, A.RouteInformationReportingType, A.AndroidOverscrollIndicator, A.ScrollDecelerationRate, A.ScrollPositionAlignmentPolicy, A.ScrollIncrementType, A.ScrollbarOrientation, A.SnapshotMode, A._WidgetKind]);
    _inherit(A.Gradient, A.Shader);
    _inherit(A._TextSpan, A._Span);
    _inherit(A.SingletonFlutterWindow, A.FlutterView);
    _inheritMany(A.Listenable, [A.Animation, A._MergingListenable, A.CustomPainter, A._SystemFontsNotifier, A.CustomClipper]);
    _inheritMany(A.Animation, [A._AnimationController_Animation_AnimationEagerListenerMixin, A._AlwaysCompleteAnimation, A._AlwaysDismissedAnimation, A._ProxyAnimation_Animation_AnimationLazyListenerMixin, A._ReverseAnimation_Animation_AnimationLazyListenerMixin, A._CurvedAnimation_Animation_AnimationWithParentMixin, A._TrainHoppingAnimation_Animation_AnimationEagerListenerMixin, A._CompoundAnimation_Animation_AnimationLazyListenerMixin, A.__AnimatedEvaluation_Animation_AnimationWithParentMixin]);
    _inherit(A._AnimationController_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin, A._AnimationController_Animation_AnimationEagerListenerMixin);
    _inherit(A._AnimationController_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin, A._AnimationController_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin);
    _inherit(A.AnimationController, A._AnimationController_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin);
    _inheritMany(A.Simulation, [A._InterpolationSimulation, A._RepeatingSimulation, A.FrictionSimulation, A.SpringSimulation, A.BouncingScrollSimulation, A.ClampingScrollSimulation]);
    _inherit(A._ProxyAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin, A._ProxyAnimation_Animation_AnimationLazyListenerMixin);
    _inherit(A._ProxyAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin, A._ProxyAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin);
    _inherit(A.ProxyAnimation, A._ProxyAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin);
    _inherit(A._ReverseAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalStatusListenersMixin, A._ReverseAnimation_Animation_AnimationLazyListenerMixin);
    _inherit(A.ReverseAnimation, A._ReverseAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalStatusListenersMixin);
    _inherit(A.CurvedAnimation, A._CurvedAnimation_Animation_AnimationWithParentMixin);
    _inherit(A._TrainHoppingAnimation_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin, A._TrainHoppingAnimation_Animation_AnimationEagerListenerMixin);
    _inherit(A._TrainHoppingAnimation_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin, A._TrainHoppingAnimation_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin);
    _inherit(A.TrainHoppingAnimation, A._TrainHoppingAnimation_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin);
    _inherit(A._CompoundAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin, A._CompoundAnimation_Animation_AnimationLazyListenerMixin);
    _inherit(A._CompoundAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin, A._CompoundAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin);
    _inherit(A.CompoundAnimation, A._CompoundAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin);
    _inheritMany(A.CompoundAnimation, [A.AnimationMin, A._AnimationSwap]);
    _inherit(A.Curve, A.ParametricCurve);
    _inheritMany(A.Curve, [A._Linear, A.SawTooth, A.Interval, A.Threshold, A.Cubic, A.FlippedCurve, A._DecelerateCurve]);
    _inherit(A._AnimatedEvaluation, A.__AnimatedEvaluation_Animation_AnimationWithParentMixin);
    _inheritMany(A.Animatable, [A._ChainedEvaluation, A.Tween, A.CurveTween, A.TweenSequence]);
    _inheritMany(A.Tween, [A.ReverseTween, A.ColorTween, A.RectTween, A.IntTween, A.MaterialPointArcTween, A.ShapeBorderTween, A.ThemeDataTween, A.DecorationTween, A.EdgeInsetsTween, A.BorderRadiusTween, A.TextStyleTween]);
    _inheritMany(A.Color, [A._CupertinoDynamicColor_Color_Diagnosticable, A.ColorSwatch]);
    _inherit(A.CupertinoDynamicColor, A._CupertinoDynamicColor_Color_Diagnosticable);
    _inherit(A.DiagnosticableTree, A._DiagnosticableTree_Object_Diagnosticable);
    _inheritMany(A.DiagnosticableTree, [A.Widget, A.InlineSpan, A.SemanticsProperties, A.Element]);
    _inheritMany(A.Widget, [A.StatefulWidget, A.StatelessWidget, A.RenderObjectWidget, A.ProxyWidget, A._NullWidget1]);
    _inheritMany(A.StatefulWidget, [A.CupertinoTimerPicker, A.CupertinoPicker, A._CupertinoBackGestureDetector, A.RawScrollbar, A.MaterialApp, A.AppBar, A.ButtonStyleButton, A.Checkbox, A._InkResponseStateWidget, A.Material, A.ImplicitlyAnimatedWidget, A._ZoomEnterTransition, A._ZoomExitTransition, A.ProgressIndicator, A.ScaffoldMessenger, A._FloatingActionButtonTransition, A.Scaffold, A.Slider, A.Tooltip, A.Actions, A.FocusableActionDetector, A.WidgetsApp, A.DualTransitionBuilder, A.Focus, A.FocusTraversalGroup, A.RawGestureDetector, A.Hero, A.Scrollable, A.ListWheelScrollView, A.Localizations, A._MediaQueryFromView, A.Navigator, A._OverlayEntryWidget, A.Overlay, A.GlowingOverscrollIndicator, A.StretchingOverscrollIndicator, A.RestorationScope, A.RootRestorationScope, A.Router, A._ModalScope, A.ScrollNotificationObserver, A._ScrollableSelectionHandler, A.SelectionContainer, A.SharedAppData, A.Shortcuts, A.ShortcutRegistrar, A.TickerMode, A.AnimatedWidget, A.MyHomePage, A._LayoutWidget]);
    _inherit(A.State, A._State_Object_Diagnosticable);
    _inheritMany(A.State, [A._CupertinoTimerPickerState, A._CupertinoPickerState, A._CupertinoBackGestureDetectorState, A._RawScrollbarState_State_TickerProviderStateMixin, A._MaterialAppState, A._AppBarState, A.__ButtonStyleState_State_TickerProviderStateMixin, A.__CheckboxState_State_TickerProviderStateMixin, A.__InkResponseState_State_AutomaticKeepAliveClientMixin, A.__MaterialState_State_TickerProviderStateMixin, A._ImplicitlyAnimatedWidgetState_State_SingleTickerProviderStateMixin, A.__ZoomEnterTransitionState_State__ZoomTransitionBase, A.__ZoomExitTransitionState_State__ZoomTransitionBase, A.__CircularProgressIndicatorState_State_SingleTickerProviderStateMixin, A._ScaffoldMessengerState_State_TickerProviderStateMixin, A.__FloatingActionButtonTransitionState_State_TickerProviderStateMixin, A._ScaffoldState_State_TickerProviderStateMixin, A.__SliderState_State_TickerProviderStateMixin, A._TooltipState_State_SingleTickerProviderStateMixin, A._ActionsState, A._FocusableActionDetectorState, A.__WidgetsAppState_State_WidgetsBindingObserver, A._DualTransitionBuilderState, A._FocusState, A._FocusTraversalGroupState, A.RawGestureDetectorState, A._ScrollableState_State_TickerProviderStateMixin, A._ListWheelScrollViewState, A._LocalizationsState, A.__MediaQueryFromViewState_State_WidgetsBindingObserver, A._NavigatorState_State_TickerProviderStateMixin, A._OverlayEntryWidgetState, A._OverlayState_State_TickerProviderStateMixin, A.__GlowingOverscrollIndicatorState_State_TickerProviderStateMixin, A.__StretchingOverscrollIndicatorState_State_TickerProviderStateMixin, A.__RestorationScopeState_State_RestorationMixin, A._RootRestorationScopeState, A.__RouterState_State_RestorationMixin, A._ModalScopeState, A.ScrollNotificationObserverState, A._ScrollableSelectionHandlerState, A.__SelectionContainerState_State_Selectable, A._SharedAppDataState, A._ShortcutsState, A._ShortcutRegistrarState, A._TickerModeState, A._AnimatedState, A._MyHomePageState, A.__LayoutWidgetState_State_SingleTickerProviderStateMixin]);
    _inherit(A.IconThemeData, A._IconThemeData_Object_Diagnosticable);
    _inherit(A._CupertinoIconThemeData_IconThemeData_Diagnosticable, A.IconThemeData);
    _inherit(A.CupertinoIconThemeData, A._CupertinoIconThemeData_IconThemeData_Diagnosticable);
    _inheritMany(A.LocalizationsDelegate, [A._CupertinoLocalizationsDelegate, A._MaterialLocalizationsDelegate, A._WidgetsLocalizationsDelegate]);
    _inheritMany(A.StatelessWidget, [A.CupertinoPickerDefaultSelectionOverlay, A.CupertinoPageTransition, A.CupertinoTheme, A._ActionButton, A._ActionIcon, A.BackButtonIcon, A.DrawerButtonIcon, A.EndDrawerButtonIcon, A.IconButton, A.InkResponse, A._ShapeBorderPaint, A._ZoomPageTransition, A._BodyBuilder, A.Scrollbar, A.Theme, A._TooltipOverlay, A._NullWidget, A.PositionedDirectional, A.KeyedSubtree, A.Builder, A.Container, A._NullWidget0, A.DefaultTextEditingShortcuts, A.GestureDetector, A.Icon, A.ModalBarrier, A._ModalBarrierGestureDetector, A.NavigationToolbar, A.PageStorage, A.SafeArea, A._NullWidget2, A.Text, A.Title, A.View, A.MyApp, A._LeafWidget]);
    _inheritMany(A.RenderObjectWidget, [A.SingleChildRenderObjectWidget, A.LeafRenderObjectWidget, A.MultiChildRenderObjectWidget, A.RenderObjectToWidgetAdapter, A.ConstrainedLayoutBuilder, A.ListWheelViewport]);
    _inheritMany(A.SingleChildRenderObjectWidget, [A._CupertinoPickerSemantics, A._AppBarTitleBox, A._InputPadding, A._InkFeatures, A.AnnotatedRegion, A.CustomPaint, A.ClipRect, A.ClipPath, A.PhysicalModel, A.PhysicalShape, A.Transform, A.CompositedTransformTarget, A.CompositedTransformFollower, A.FractionalTranslation, A.Padding, A.Align, A.CustomSingleChildLayout, A.SizedBox, A.ConstrainedBox, A.LimitedBox, A.Offstage, A.Baseline, A.Listener, A.MouseRegion, A.RepaintBoundary, A.IgnorePointer, A.AbsorbPointer, A.Semantics, A.BlockSemantics, A.ExcludeSemantics, A.IndexedSemantics, A.ColoredBox, A.DecoratedBox, A._GestureSemantics, A._ScrollSemantics, A.SnapshotWidget, A.TapRegionSurface, A.FadeTransition]);
    _inheritMany(A.AbstractNode, [A._RenderObject_AbstractNode_DiagnosticableTreeMixin, A._Layer_AbstractNode_DiagnosticableTreeMixin, A._SemanticsNode_AbstractNode_DiagnosticableTreeMixin]);
    _inherit(A.RenderObject, A._RenderObject_AbstractNode_DiagnosticableTreeMixin);
    _inheritMany(A.RenderObject, [A.RenderBox, A._RenderView_RenderObject_RenderObjectWithChildMixin]);
    _inheritMany(A.RenderBox, [A._RenderProxyBox_RenderBox_RenderObjectWithChildMixin, A._RenderShiftedBox_RenderBox_RenderObjectWithChildMixin, A.__RenderSlider_RenderBox_RelayoutWhenSystemFontsChangeMixin, A.__RenderValueIndicator_RenderBox_RelayoutWhenSystemFontsChangeMixin, A._RenderCustomMultiChildLayoutBox_RenderBox_ContainerRenderObjectMixin, A.RenderErrorBox, A._RenderFlex_RenderBox_ContainerRenderObjectMixin, A._RenderListWheelViewport_RenderBox_ContainerRenderObjectMixin, A._RenderParagraph_RenderBox_ContainerRenderObjectMixin, A._RenderStack_RenderBox_ContainerRenderObjectMixin, A.__RenderLayoutBuilder_RenderBox_RenderObjectWithChildMixin, A.__RenderTheater_RenderBox_ContainerRenderObjectMixin]);
    _inherit(A._RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin, A._RenderProxyBox_RenderBox_RenderObjectWithChildMixin);
    _inherit(A.RenderProxyBox, A._RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin);
    _inheritMany(A.RenderProxyBox, [A._RenderCupertinoPickerSemantics, A._RenderInkFeatures, A.RenderCustomPaint, A.RenderProxyBoxWithHitTestBehavior, A.RenderConstrainedBox, A.RenderLimitedBox, A._RenderAnimatedOpacity_RenderProxyBox_RenderAnimatedOpacityMixin, A._RenderCustomClip, A.RenderDecoratedBox, A.RenderTransform, A.RenderFractionalTranslation, A.RenderRepaintBoundary, A.RenderIgnorePointer, A.RenderOffstage, A.RenderAbsorbPointer, A.RenderSemanticsAnnotations, A.RenderBlockSemantics, A.RenderExcludeSemantics, A.RenderIndexedSemantics, A.RenderLeaderLayer, A.RenderFollowerLayer, A.RenderAnnotatedRegion, A._RenderScrollSemantics, A._RenderSnapshotWidget]);
    _inherit(A.Decoration, A._Decoration_Object_Diagnosticable);
    _inheritMany(A.Decoration, [A._CupertinoEdgeShadowDecoration, A.BoxDecoration]);
    _inheritMany(A.BoxPainter, [A._CupertinoEdgeShadowPainter, A._BoxDecorationPainter]);
    _inheritMany(A.RawScrollbar, [A.CupertinoScrollbar, A._MaterialScrollbar]);
    _inherit(A.RawScrollbarState, A._RawScrollbarState_State_TickerProviderStateMixin);
    _inheritMany(A.RawScrollbarState, [A._CupertinoScrollbarState, A._MaterialScrollbarState]);
    _inherit(A.CupertinoTextThemeData, A._CupertinoTextThemeData_Object_Diagnosticable);
    _inheritMany(A.ProxyWidget, [A.InheritedWidget, A.ParentDataWidget, A.NotificationListener]);
    _inheritMany(A.InheritedWidget, [A._InheritedCupertinoTheme, A.FlexibleSpaceBarSettings, A.InheritedTheme, A._ParentInkResponseProvider, A._ScaffoldMessengerScope, A._ScaffoldScope, A._ActionsScope, A._UbiquitousInheritedWidget, A.InheritedNotifier, A.InheritedModel, A._LocalizationsScope, A.HeroControllerScope, A._RenderTheaterMarker, A.PrimaryScrollController, A.UnmanagedRestorationScope, A._RouterScope, A._ModalScopeStatus, A.ScrollConfiguration, A._ScrollNotificationObserverScope, A._ScrollableScope, A.SelectionRegistrarScope, A._ShortcutRegistrarScope, A._EffectiveTickerMode, A._ViewScope]);
    _inherit(A._CupertinoThemeData_NoDefaultCupertinoThemeData_Diagnosticable, A.NoDefaultCupertinoThemeData);
    _inherit(A.CupertinoThemeData, A._CupertinoThemeData_NoDefaultCupertinoThemeData_Diagnosticable);
    _inherit(A._DefaultCupertinoTextThemeData, A.CupertinoTextThemeData);
    _inheritMany(A.DiagnosticsNode, [A.DiagnosticsProperty, A.DiagnosticsBlock, A.DiagnosticableNode]);
    _inherit(A._ErrorDiagnostic, A.DiagnosticsProperty);
    _inheritMany(A._ErrorDiagnostic, [A.ErrorDescription, A.ErrorSummary, A.ErrorHint]);
    _inherit(A.FlutterErrorDetails, A._FlutterErrorDetails_Object_Diagnosticable);
    _inherit(A.FlutterError, A._FlutterError_Error_DiagnosticableTreeMixin);
    _inherit(A.DiagnosticsStackTrace, A.DiagnosticsBlock);
    _inheritMany(A.DiagnosticableNode, [A._FlutterErrorDetailsNode, A.DiagnosticableTreeNode, A._SemanticsDiagnosticableNode]);
    _inheritMany(A.ChangeNotifier, [A.ValueNotifier, A.ToggleablePainter, A.SnapshotPainter, A._ScaffoldGeometryNotifier, A.MouseTracker, A.ViewportOffset, A.SemanticsOwner, A.RestorationManager, A.KeepAliveHandle, A.ScrollController, A.RestorableProperty, A._GlowController, A._StretchController, A.ScrollbarPainter, A.SnapshotController]);
    _inheritMany(A.Key, [A.LocalKey, A.GlobalKey]);
    _inheritMany(A.LocalKey, [A.UniqueKey, A.ValueKey]);
    _inherit(A.LicenseEntryWithLineBreaks, A.LicenseEntry);
    _inheritMany(A._TrieNode, [A._FullNode, A._CompressedNode, A._HashCollisionNode]);
    _inherit(A.FlutterErrorDetailsForPointerEventDispatcher, A.FlutterErrorDetails);
    _inherit(A.PointerEvent, A._PointerEvent_Object_Diagnosticable);
    _inherit(A.__TransformedPointerEvent__AbstractPointerEvent_Diagnosticable, A._AbstractPointerEvent);
    _inherit(A.__TransformedPointerEvent__AbstractPointerEvent_Diagnosticable__PointerEventDescription, A.__TransformedPointerEvent__AbstractPointerEvent_Diagnosticable);
    _inherit(A._TransformedPointerEvent, A.__TransformedPointerEvent__AbstractPointerEvent_Diagnosticable__PointerEventDescription);
    _inheritMany(A.PointerEvent, [A._PointerEnterEvent_PointerEvent__PointerEventDescription, A._PointerExitEvent_PointerEvent__PointerEventDescription, A._PointerCancelEvent_PointerEvent__PointerEventDescription]);
    _inherit(A._PointerEnterEvent_PointerEvent__PointerEventDescription__CopyPointerEnterEvent, A._PointerEnterEvent_PointerEvent__PointerEventDescription);
    _inherit(A.PointerEnterEvent, A._PointerEnterEvent_PointerEvent__PointerEventDescription__CopyPointerEnterEvent);
    _inheritMany(A._TransformedPointerEvent, [A.__TransformedPointerEnterEvent__TransformedPointerEvent__CopyPointerEnterEvent, A.__TransformedPointerExitEvent__TransformedPointerEvent__CopyPointerExitEvent, A.__TransformedPointerCancelEvent__TransformedPointerEvent__CopyPointerCancelEvent]);
    _inherit(A._TransformedPointerEnterEvent, A.__TransformedPointerEnterEvent__TransformedPointerEvent__CopyPointerEnterEvent);
    _inherit(A._PointerExitEvent_PointerEvent__PointerEventDescription__CopyPointerExitEvent, A._PointerExitEvent_PointerEvent__PointerEventDescription);
    _inherit(A.PointerExitEvent, A._PointerExitEvent_PointerEvent__PointerEventDescription__CopyPointerExitEvent);
    _inherit(A._TransformedPointerExitEvent, A.__TransformedPointerExitEvent__TransformedPointerEvent__CopyPointerExitEvent);
    _inherit(A._PointerCancelEvent_PointerEvent__PointerEventDescription__CopyPointerCancelEvent, A._PointerCancelEvent_PointerEvent__PointerEventDescription);
    _inherit(A.PointerCancelEvent, A._PointerCancelEvent_PointerEvent__PointerEventDescription__CopyPointerCancelEvent);
    _inherit(A._TransformedPointerCancelEvent, A.__TransformedPointerCancelEvent__TransformedPointerEvent__CopyPointerCancelEvent);
    _inheritMany(A._TransformPart, [A._MatrixTransformPart, A._OffsetTransformPart]);
    _inheritMany(A.GestureArenaMember, [A._GestureRecognizer_GestureArenaMember_DiagnosticableTreeMixin, A._CombiningGestureArenaMember]);
    _inherit(A.GestureRecognizer, A._GestureRecognizer_GestureArenaMember_DiagnosticableTreeMixin);
    _inheritMany(A.GestureRecognizer, [A.OneSequenceGestureRecognizer, A.DoubleTapGestureRecognizer]);
    _inheritMany(A.OneSequenceGestureRecognizer, [A.PrimaryPointerGestureRecognizer, A.DragGestureRecognizer]);
    _inheritMany(A.PrimaryPointerGestureRecognizer, [A.LongPressGestureRecognizer, A.BaseTapGestureRecognizer]);
    _inheritMany(A.DragGestureRecognizer, [A.VerticalDragGestureRecognizer, A.HorizontalDragGestureRecognizer, A.PanGestureRecognizer]);
    _inheritMany(A.BaseTapGestureRecognizer, [A.TapGestureRecognizer, A._AnyTapGestureRecognizer]);
    _inherit(A.IOSScrollViewFlingVelocityTracker, A.VelocityTracker);
    _inherit(A.MacOSScrollViewFlingVelocityTracker, A.IOSScrollViewFlingVelocityTracker);
    _inheritMany(A._ActionButton, [A.BackButton, A.DrawerButton, A.EndDrawerButton]);
    _inherit(A.ActionIconThemeData, A._ActionIconThemeData_Object_Diagnosticable);
    _inherit(A.MaterialScrollBehavior, A.ScrollBehavior);
    _inheritMany(A.SingleChildLayoutDelegate, [A._ToolbarContainerLayout, A._TooltipPositionDelegate]);
    _inherit(A._PreferredAppBarSize, A.Size);
    _inherit(A.RenderShiftedBox, A._RenderShiftedBox_RenderBox_RenderObjectWithChildMixin);
    _inheritMany(A.RenderShiftedBox, [A.RenderAligningShiftedBox, A._RenderInputPadding, A.RenderPadding, A.RenderCustomSingleChildLayoutBox, A.RenderBaseline]);
    _inheritMany(A.RenderAligningShiftedBox, [A._RenderAppBarTitleBox, A.RenderPositionedBox]);
    _inherit(A.AppBarTheme, A._AppBarTheme_Object_Diagnosticable);
    _inherit(A._AppBarDefaultsM2, A.AppBarTheme);
    _inherit(A.MaterialRectArcTween, A.RectTween);
    _inherit(A.BadgeThemeData, A._BadgeThemeData_Object_Diagnosticable);
    _inherit(A.MaterialBannerThemeData, A._MaterialBannerThemeData_Object_Diagnosticable);
    _inherit(A.BottomAppBarTheme, A._BottomAppBarTheme_Object_Diagnosticable);
    _inherit(A.BottomNavigationBarThemeData, A._BottomNavigationBarThemeData_Object_Diagnosticable);
    _inherit(A.BottomSheetThemeData, A._BottomSheetThemeData_Object_Diagnosticable);
    _inherit(A.ButtonBarThemeData, A._ButtonBarThemeData_Object_Diagnosticable);
    _inherit(A.ButtonStyle, A._ButtonStyle_Object_Diagnosticable);
    _inherit(A._ButtonStyleState, A.__ButtonStyleState_State_TickerProviderStateMixin);
    _inherit(A.MouseCursor, A._MouseCursor_Object_Diagnosticable);
    _inheritMany(A.MouseCursor, [A.MaterialStateMouseCursor, A._DeferringMouseCursor, A.SystemMouseCursor]);
    _inheritMany(A.MaterialStateMouseCursor, [A._MouseCursor, A._EnabledAndDisabledMouseCursor]);
    _inherit(A.ButtonThemeData, A._ButtonThemeData_Object_Diagnosticable);
    _inherit(A.CardTheme, A._CardTheme_Object_Diagnosticable);
    _inherit(A.__CheckboxState_State_TickerProviderStateMixin_ToggleableStateMixin, A.__CheckboxState_State_TickerProviderStateMixin);
    _inherit(A._CheckboxState, A.__CheckboxState_State_TickerProviderStateMixin_ToggleableStateMixin);
    _inherit(A._CheckboxPainter, A.ToggleablePainter);
    _inherit(A.CheckboxThemeData, A._CheckboxThemeData_Object_Diagnosticable);
    _inherit(A._CheckboxDefaultsM2, A.CheckboxThemeData);
    _inherit(A.ChipThemeData, A._ChipThemeData_Object_Diagnosticable);
    _inherit(A.ColorScheme, A._ColorScheme_Object_Diagnosticable);
    _inherit(A.MaterialColor, A.ColorSwatch);
    _inherit(A.DataTableThemeData, A._DataTableThemeData_Object_Diagnosticable);
    _inherit(A.DatePickerThemeData, A._DatePickerThemeData_Object_Diagnosticable);
    _inherit(A.DialogTheme, A._DialogTheme_Object_Diagnosticable);
    _inherit(A.DividerThemeData, A._DividerThemeData_Object_Diagnosticable);
    _inherit(A.DrawerThemeData, A._DrawerThemeData_Object_Diagnosticable);
    _inherit(A.DropdownMenuThemeData, A._DropdownMenuThemeData_Object_Diagnosticable);
    _inherit(A.ElevatedButtonThemeData, A._ElevatedButtonThemeData_Object_Diagnosticable);
    _inherit(A.ExpansionTileThemeData, A._ExpansionTileThemeData_Object_Diagnosticable);
    _inherit(A.FilledButtonThemeData, A._FilledButtonThemeData_Object_Diagnosticable);
    _inherit(A.StandardFabLocation, A.FloatingActionButtonLocation);
    _inherit(A.__EndFloatFabLocation_StandardFabLocation_FabEndOffsetX, A.StandardFabLocation);
    _inherit(A.__EndFloatFabLocation_StandardFabLocation_FabEndOffsetX_FabFloatOffsetY, A.__EndFloatFabLocation_StandardFabLocation_FabEndOffsetX);
    _inherit(A._EndFloatFabLocation, A.__EndFloatFabLocation_StandardFabLocation_FabEndOffsetX_FabFloatOffsetY);
    _inherit(A._ScalingFabMotionAnimator, A.FloatingActionButtonAnimator);
    _inherit(A.FloatingActionButtonThemeData, A._FloatingActionButtonThemeData_Object_Diagnosticable);
    _inheritMany(A.MaterialStateProperty, [A._IconButtonDefaultForeground, A._IconButtonDefaultOverlay, A._TextButtonDefaultColor, A._TextButtonDefaultOverlay, A.__TextButtonDefaultMouseCursor_MaterialStateProperty_Diagnosticable]);
    _inherit(A.IconButtonThemeData, A._IconButtonThemeData_Object_Diagnosticable);
    _inheritMany(A.InheritedTheme, [A.IconButtonTheme, A._InheritedTheme, A.DefaultSelectionStyle, A.IconTheme, A.DefaultTextStyle]);
    _inherit(A.InteractiveInkFeature, A.InkFeature);
    _inheritMany(A.InteractiveInkFeature, [A.InkHighlight, A.InkRipple, A.InkSplash]);
    _inheritMany(A.InteractiveInkFeatureFactory, [A._InkRippleFactory, A._InkSplashFactory]);
    _inherit(A._InkResponseState, A.__InkResponseState_State_AutomaticKeepAliveClientMixin);
    _inherit(A.InkWell, A.InkResponse);
    _inherit(A.InputDecorationTheme, A._InputDecorationTheme_Object_Diagnosticable);
    _inherit(A.ListTileThemeData, A._ListTileThemeData_Object_Diagnosticable);
    _inherit(A._MaterialState, A.__MaterialState_State_TickerProviderStateMixin);
    _inheritMany(A.ImplicitlyAnimatedWidget, [A._MaterialInterior, A.AnimatedTheme, A.AnimatedDefaultTextStyle, A.AnimatedPhysicalModel]);
    _inherit(A.ImplicitlyAnimatedWidgetState, A._ImplicitlyAnimatedWidgetState_State_SingleTickerProviderStateMixin);
    _inherit(A.AnimatedWidgetBaseState, A.ImplicitlyAnimatedWidgetState);
    _inheritMany(A.AnimatedWidgetBaseState, [A._MaterialInteriorState, A._AnimatedThemeState, A._AnimatedDefaultTextStyleState, A._AnimatedPhysicalModelState]);
    _inheritMany(A.CustomPainter, [A._ShapeBorderPainter, A._CircularProgressIndicatorPainter, A._GlowingOverscrollIndicatorPainter]);
    _inherit(A.MaterialStatesController, A.ValueNotifier);
    _inherit(A.MenuThemeData, A._MenuThemeData_Object_Diagnosticable);
    _inherit(A.MenuBarThemeData, A.MenuThemeData);
    _inherit(A.MenuButtonThemeData, A._MenuButtonThemeData_Object_Diagnosticable);
    _inherit(A.MenuStyle, A._MenuStyle_Object_Diagnosticable);
    _inherit(A.NavigationBarThemeData, A._NavigationBarThemeData_Object_Diagnosticable);
    _inherit(A.NavigationDrawerThemeData, A._NavigationDrawerThemeData_Object_Diagnosticable);
    _inherit(A.NavigationRailThemeData, A._NavigationRailThemeData_Object_Diagnosticable);
    _inherit(A.OutlinedButtonThemeData, A._OutlinedButtonThemeData_Object_Diagnosticable);
    _inheritMany(A.Route, [A.OverlayRoute, A._NotAnnounced]);
    _inherit(A.TransitionRoute, A.OverlayRoute);
    _inherit(A._ModalRoute_TransitionRoute_LocalHistoryRoute, A.TransitionRoute);
    _inherit(A.ModalRoute, A._ModalRoute_TransitionRoute_LocalHistoryRoute);
    _inherit(A.PageRoute, A.ModalRoute);
    _inherit(A._MaterialPageRoute_PageRoute_MaterialRouteTransitionMixin, A.PageRoute);
    _inherit(A.MaterialPageRoute, A._MaterialPageRoute_PageRoute_MaterialRouteTransitionMixin);
    _inherit(A._ZoomEnterTransitionState, A.__ZoomEnterTransitionState_State__ZoomTransitionBase);
    _inherit(A._ZoomExitTransitionState, A.__ZoomExitTransitionState_State__ZoomTransitionBase);
    _inheritMany(A.PageTransitionsBuilder, [A.ZoomPageTransitionsBuilder, A.CupertinoPageTransitionsBuilder]);
    _inherit(A.PageTransitionsTheme, A._PageTransitionsTheme_Object_Diagnosticable);
    _inheritMany(A.SnapshotPainter, [A._ZoomEnterTransitionPainter, A._ZoomExitTransitionPainter]);
    _inherit(A.PopupMenuThemeData, A._PopupMenuThemeData_Object_Diagnosticable);
    _inherit(A.CircularProgressIndicator, A.ProgressIndicator);
    _inherit(A._CircularProgressIndicatorState, A.__CircularProgressIndicatorState_State_SingleTickerProviderStateMixin);
    _inherit(A.ProgressIndicatorThemeData, A._ProgressIndicatorThemeData_Object_Diagnosticable);
    _inherit(A._CircularProgressIndicatorDefaultsM2, A.ProgressIndicatorThemeData);
    _inherit(A.RadioThemeData, A._RadioThemeData_Object_Diagnosticable);
    _inherit(A.ScaffoldMessengerState, A._ScaffoldMessengerState_State_TickerProviderStateMixin);
    _inherit(A.BoxConstraints, A.Constraints);
    _inherit(A._BodyBoxConstraints, A.BoxConstraints);
    _inheritMany(A.MultiChildLayoutDelegate, [A._ScaffoldLayout, A._ToolbarLayout]);
    _inherit(A._FloatingActionButtonTransitionState, A.__FloatingActionButtonTransitionState_State_TickerProviderStateMixin);
    _inherit(A._ScaffoldState_State_TickerProviderStateMixin_RestorationMixin, A._ScaffoldState_State_TickerProviderStateMixin);
    _inherit(A.ScaffoldState, A._ScaffoldState_State_TickerProviderStateMixin_RestorationMixin);
    _inherit(A.Action, A._Action_Object_Diagnosticable);
    _inheritMany(A.Action, [A.DismissAction, A.ContextAction, A.CallbackAction, A.VoidCallbackAction, A.DoNothingAction, A.PrioritizedAction, A.RequestFocusAction, A.NextFocusAction, A.PreviousFocusAction, A.DirectionalFocusAction, A.ScrollAction]);
    _inheritMany(A.DismissAction, [A._DismissDrawerAction, A._DismissModalAction]);
    _inherit(A.ScrollbarThemeData, A._ScrollbarThemeData_Object_Diagnosticable);
    _inherit(A.SegmentedButtonThemeData, A._SegmentedButtonThemeData_Object_Diagnosticable);
    _inherit(A._SliderState, A.__SliderState_State_TickerProviderStateMixin);
    _inheritMany(A.LeafRenderObjectWidget, [A._SliderRenderObjectWidget, A._ValueIndicatorRenderObjectWidget, A.ErrorWidget]);
    _inherit(A._RenderSlider, A.__RenderSlider_RenderBox_RelayoutWhenSystemFontsChangeMixin);
    _inherit(A.Intent, A._Intent_Object_Diagnosticable);
    _inheritMany(A.Intent, [A._AdjustSliderIntent, A.ActivateIntent, A.ButtonActivateIntent, A.DismissIntent, A.PrioritizedIntents, A.NextFocusIntent, A.PreviousFocusIntent, A.ScrollIntent, A.DoNothingAndStopPropagationTextIntent, A.DirectionalTextEditingIntent, A.SelectAllTextIntent, A.CopySelectionTextIntent, A.PasteTextIntent, A.RedoTextIntent, A.UndoTextIntent, A.TransposeCharactersIntent]);
    _inherit(A._RenderValueIndicator, A.__RenderValueIndicator_RenderBox_RelayoutWhenSystemFontsChangeMixin);
    _inherit(A.SliderThemeData, A._SliderThemeData_Object_Diagnosticable);
    _inherit(A._SliderDefaultsM2, A.SliderThemeData);
    _inherit(A._RoundedRectSliderTrackShape_SliderTrackShape_BaseSliderTrackShape, A.SliderTrackShape);
    _inherit(A.RoundedRectSliderTrackShape, A._RoundedRectSliderTrackShape_SliderTrackShape_BaseSliderTrackShape);
    _inherit(A.RoundSliderTickMarkShape, A.SliderTickMarkShape);
    _inheritMany(A.SliderComponentShape, [A.RoundSliderThumbShape, A.RoundSliderOverlayShape, A.RectangularSliderValueIndicatorShape]);
    _inherit(A.SnackBarThemeData, A._SnackBarThemeData_Object_Diagnosticable);
    _inherit(A.SwitchThemeData, A._SwitchThemeData_Object_Diagnosticable);
    _inherit(A.TabBarTheme, A._TabBarTheme_Object_Diagnosticable);
    _inherit(A.TextButton, A.ButtonStyleButton);
    _inherit(A._TextButtonDefaultMouseCursor, A.__TextButtonDefaultMouseCursor_MaterialStateProperty_Diagnosticable);
    _inherit(A.TextButtonThemeData, A._TextButtonThemeData_Object_Diagnosticable);
    _inherit(A.TextSelectionThemeData, A._TextSelectionThemeData_Object_Diagnosticable);
    _inherit(A.TextTheme, A._TextTheme_Object_Diagnosticable);
    _inherit(A.ThemeData, A._ThemeData_Object_Diagnosticable);
    _inherit(A.MaterialBasedCupertinoThemeData, A.CupertinoThemeData);
    _inherit(A.VisualDensity, A._VisualDensity_Object_Diagnosticable);
    _inherit(A.TimePickerThemeData, A._TimePickerThemeData_Object_Diagnosticable);
    _inherit(A.ToggleButtonsThemeData, A._ToggleButtonsThemeData_Object_Diagnosticable);
    _inherit(A.TooltipState, A._TooltipState_State_SingleTickerProviderStateMixin);
    _inherit(A.TooltipThemeData, A._TooltipThemeData_Object_Diagnosticable);
    _inherit(A.Typography, A._Typography_Object_Diagnosticable);
    _inheritMany(A.AlignmentGeometry, [A.Alignment, A.AlignmentDirectional, A._MixedAlignment]);
    _inheritMany(A.BorderRadiusGeometry, [A.BorderRadius, A.BorderRadiusDirectional, A._MixedBorderRadius]);
    _inherit(A.BorderSide, A._BorderSide_Object_Diagnosticable);
    _inheritMany(A.ShapeBorder, [A.OutlinedBorder, A._CompoundBorder, A.BoxBorder]);
    _inheritMany(A.BoxBorder, [A.Border, A.BorderDirectional]);
    _inherit(A.BoxShadow, A.Shadow);
    _inheritMany(A.OutlinedBorder, [A.CircleBorder, A.RoundedRectangleBorder, A._RoundedRectangleToCircleBorder]);
    _inheritMany(A.EdgeInsetsGeometry, [A.EdgeInsets, A.EdgeInsetsDirectional, A._MixedEdgeInsets]);
    _inheritMany(A.TextBoundary, [A.WordBoundary, A._UntilTextBoundary, A.CharacterBoundary, A.LineBoundary, A.DocumentBoundary]);
    _inherit(A.TextSpan, A.InlineSpan);
    _inherit(A.TextStyle0, A._TextStyle_Object_Diagnosticable);
    _inherit(A.ScrollSpringSimulation, A.SpringSimulation);
    _inherit(A.BoxHitTestResult, A.HitTestResult);
    _inherit(A.BoxHitTestEntry, A.HitTestEntry);
    _inherit(A.BoxParentData, A.ParentData);
    _inherit(A._ContainerBoxParentData_BoxParentData_ContainerParentDataMixin, A.BoxParentData);
    _inherit(A.ContainerBoxParentData, A._ContainerBoxParentData_BoxParentData_ContainerParentDataMixin);
    _inheritMany(A.ContainerBoxParentData, [A.MultiChildLayoutParentData, A.FlexParentData, A.ListWheelParentData, A.TextParentData, A.StackParentData]);
    _inherit(A._RenderCustomMultiChildLayoutBox_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin, A._RenderCustomMultiChildLayoutBox_RenderBox_ContainerRenderObjectMixin);
    _inherit(A.RenderCustomMultiChildLayoutBox, A._RenderCustomMultiChildLayoutBox_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin);
    _inherit(A._RenderFlex_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin, A._RenderFlex_RenderBox_ContainerRenderObjectMixin);
    _inherit(A._RenderFlex_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin, A._RenderFlex_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin);
    _inherit(A.RenderFlex, A._RenderFlex_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin);
    _inherit(A.Layer, A._Layer_AbstractNode_DiagnosticableTreeMixin);
    _inheritMany(A.Layer, [A.PictureLayer, A.ContainerLayer]);
    _inheritMany(A.ContainerLayer, [A.OffsetLayer, A.ClipRectLayer, A.ClipRRectLayer, A.ClipPathLayer, A.LeaderLayer, A.FollowerLayer, A.AnnotatedRegionLayer]);
    _inheritMany(A.OffsetLayer, [A.TransformLayer, A.OpacityLayer]);
    _inherit(A.RenderListWheelViewport, A._RenderListWheelViewport_RenderBox_ContainerRenderObjectMixin);
    _inherit(A._MouseTrackerUpdateDetails, A.__MouseTrackerUpdateDetails_Object_Diagnosticable);
    _inherit(A.PaintingContext, A.ClipContext);
    _inheritMany(A._SemanticsFragment, [A._ContainerSemanticsFragment, A._InterestingSemanticsFragment]);
    _inheritMany(A._InterestingSemanticsFragment, [A._RootSemanticsFragment, A._IncompleteSemanticsFragment, A._SwitchableSemanticsFragment]);
    _inherit(A._RenderParagraph_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin, A._RenderParagraph_RenderBox_ContainerRenderObjectMixin);
    _inherit(A._RenderParagraph_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_RelayoutWhenSystemFontsChangeMixin, A._RenderParagraph_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin);
    _inherit(A.RenderParagraph, A._RenderParagraph_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_RelayoutWhenSystemFontsChangeMixin);
    _inherit(A.__SelectableFragment_Object_Selectable_ChangeNotifier, A.__SelectableFragment_Object_Selectable);
    _inherit(A._SelectableFragment, A.__SelectableFragment_Object_Selectable_ChangeNotifier);
    _inherit(A.RenderAnimatedOpacity, A._RenderAnimatedOpacity_RenderProxyBox_RenderAnimatedOpacityMixin);
    _inherit(A.ShapeBorderClipper, A.CustomClipper);
    _inheritMany(A._RenderCustomClip, [A.RenderClipRect, A.RenderClipPath, A._RenderPhysicalModelBase]);
    _inheritMany(A._RenderPhysicalModelBase, [A.RenderPhysicalModel, A.RenderPhysicalShape]);
    _inheritMany(A.RenderProxyBoxWithHitTestBehavior, [A.RenderPointerListener, A.RenderMouseRegion, A.RenderSemanticsGestureHandler, A._RenderColoredBox, A.RenderTapRegionSurface]);
    _inheritMany(A.SelectionEvent, [A.ClearSelectionEvent, A.SelectionEdgeUpdateEvent]);
    _inherit(A._RenderStack_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin, A._RenderStack_RenderBox_ContainerRenderObjectMixin);
    _inherit(A.RenderStack, A._RenderStack_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin);
    _inherit(A.RenderView, A._RenderView_RenderObject_RenderObjectWithChildMixin);
    _inherit(A.SemanticsNode, A._SemanticsNode_AbstractNode_DiagnosticableTreeMixin);
    _inherit(A.SemanticsSortKey, A._SemanticsSortKey_Object_Diagnosticable);
    _inherit(A.OrdinalSortKey, A.SemanticsSortKey);
    _inheritMany(A.SemanticsEvent, [A.TooltipSemanticsEvent, A.LongPressSemanticsEvent, A.TapSemanticEvent]);
    _inherit(A.CachingAssetBundle, A.AssetBundle);
    _inherit(A.PlatformAssetBundle, A.CachingAssetBundle);
    _inherit(A._DefaultBinaryMessenger, A.BinaryMessenger);
    _inherit(A.KeyEvent, A._KeyEvent_Object_Diagnosticable);
    _inheritMany(A.KeyEvent, [A.KeyDownEvent, A.KeyUpEvent, A.KeyRepeatEvent]);
    _inherit(A.KeyboardKey, A._KeyboardKey_Object_Diagnosticable);
    _inheritMany(A.KeyboardKey, [A.LogicalKeyboardKey, A.PhysicalKeyboardKey]);
    _inherit(A._SystemMouseCursorSession, A.MouseCursorSession);
    _inherit(A.OptionalMethodChannel, A.MethodChannel);
    _inherit(A.RawKeyEventData, A._RawKeyEventData_Object_Diagnosticable);
    _inherit(A.RawKeyEvent, A._RawKeyEvent_Object_Diagnosticable);
    _inheritMany(A.RawKeyEvent, [A.RawKeyDownEvent, A.RawKeyUpEvent]);
    _inherit(A.RawKeyEventDataWeb, A.RawKeyEventData);
    _inherit(A.TextSelection, A.TextRange);
    _inherit(A._PlatformTextInputControl, A.__PlatformTextInputControl_Object_TextInputControl);
    _inherit(A.ActionDispatcher, A._ActionDispatcher_Object_Diagnosticable);
    _inherit(A.__OverridableAction_ContextAction__OverridableActionMixin, A.ContextAction);
    _inherit(A._OverridableAction, A.__OverridableAction_ContextAction__OverridableActionMixin);
    _inherit(A._WidgetsAppState, A.__WidgetsAppState_State_WidgetsBindingObserver);
    _inheritMany(A.Notification, [A.KeepAliveNotification, A.LayoutChangedNotification, A._OverscrollIndicatorNotification_Notification_ViewportNotificationMixin, A._ScrollMetricsNotification_Notification_ViewportNotificationMixin]);
    _inheritMany(A.Element, [A.ComponentElement, A.RenderObjectElement, A._NullElement]);
    _inheritMany(A.ComponentElement, [A.ProxyElement, A.StatelessElement, A.StatefulElement]);
    _inheritMany(A.ProxyElement, [A.InheritedElement, A.ParentDataElement, A.__NotificationElement_ProxyElement_NotifiableElementMixin]);
    _inheritMany(A.InheritedElement, [A._UbiquitousInheritedElement, A.InheritedModelElement, A._InheritedNotifierElement]);
    _inherit(A.Directionality, A._UbiquitousInheritedWidget);
    _inherit(A.Center, A.Align);
    _inheritMany(A.ParentDataWidget, [A.LayoutId, A.Positioned, A.Flexible]);
    _inheritMany(A.MultiChildRenderObjectWidget, [A.CustomMultiChildLayout, A.Stack, A.Flex, A.RichText, A._Theater]);
    _inheritMany(A.RenderObjectElement, [A.SingleChildRenderObjectElement, A.RootRenderObjectElement, A.LeafRenderObjectElement, A.MultiChildRenderObjectElement, A._LayoutBuilderElement, A.ListWheelElement]);
    _inherit(A._OffstageElement, A.SingleChildRenderObjectElement);
    _inheritMany(A.Flex, [A.Row, A.Column]);
    _inherit(A.Expanded, A.Flexible);
    _inherit(A.RenderObjectToWidgetElement, A.RootRenderObjectElement);
    _inherit(A._WidgetsFlutterBinding_BindingBase_GestureBinding, A.BindingBase);
    _inherit(A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding, A._WidgetsFlutterBinding_BindingBase_GestureBinding);
    _inherit(A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding, A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding);
    _inherit(A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding, A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding);
    _inherit(A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding, A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding);
    _inherit(A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding, A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding);
    _inherit(A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding, A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding);
    _inherit(A.WidgetsFlutterBinding, A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding);
    _inherit(A._FocusNode_Object_DiagnosticableTreeMixin_ChangeNotifier, A._FocusNode_Object_DiagnosticableTreeMixin);
    _inherit(A.FocusNode, A._FocusNode_Object_DiagnosticableTreeMixin_ChangeNotifier);
    _inheritMany(A.FocusNode, [A.FocusScopeNode, A._FocusTraversalGroupNode]);
    _inherit(A._FocusManager_Object_DiagnosticableTreeMixin_ChangeNotifier, A._FocusManager_Object_DiagnosticableTreeMixin);
    _inherit(A.FocusManager, A._FocusManager_Object_DiagnosticableTreeMixin_ChangeNotifier);
    _inherit(A.FocusScope, A.Focus);
    _inherit(A._FocusScopeState, A._FocusState);
    _inherit(A._FocusInheritedScope, A.InheritedNotifier);
    _inherit(A.FocusTraversalPolicy, A._FocusTraversalPolicy_Object_Diagnosticable);
    _inherit(A._ReadingOrderSortData, A.__ReadingOrderSortData_Object_Diagnosticable);
    _inherit(A._ReadingOrderDirectionalGroupData, A.__ReadingOrderDirectionalGroupData_Object_Diagnosticable);
    _inherit(A._ReadingOrderTraversalPolicy_FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin, A.FocusTraversalPolicy);
    _inherit(A.ReadingOrderTraversalPolicy, A._ReadingOrderTraversalPolicy_FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin);
    _inheritMany(A.GlobalKey, [A.LabeledGlobalKey, A.GlobalObjectKey]);
    _inheritMany(A.GestureRecognizerFactory, [A.GestureRecognizerFactoryWithHandlers, A._AnyTapGestureRecognizerFactory]);
    _inherit(A._DefaultSemanticsGestureDelegate, A.SemanticsGestureDelegate);
    _inherit(A.HeroController, A.NavigatorObserver);
    _inherit(A.LayoutBuilder, A.ConstrainedLayoutBuilder);
    _inherit(A.__RenderLayoutBuilder_RenderBox_RenderObjectWithChildMixin_RenderConstrainedLayoutBuilder, A.__RenderLayoutBuilder_RenderBox_RenderObjectWithChildMixin);
    _inherit(A._RenderLayoutBuilder, A.__RenderLayoutBuilder_RenderBox_RenderObjectWithChildMixin_RenderConstrainedLayoutBuilder);
    _inheritMany(A.ListWheelChildDelegate, [A.ListWheelChildListDelegate, A.ListWheelChildLoopingListDelegate]);
    _inherit(A.FixedExtentScrollController, A.ScrollController);
    _inherit(A.FixedScrollMetrics, A._FixedScrollMetrics_Object_ScrollMetrics);
    _inherit(A.FixedExtentMetrics, A.FixedScrollMetrics);
    _inherit(A._ScrollPosition_ViewportOffset_ScrollMetrics, A.ViewportOffset);
    _inherit(A.ScrollPosition, A._ScrollPosition_ViewportOffset_ScrollMetrics);
    _inherit(A.ScrollPositionWithSingleContext, A.ScrollPosition);
    _inherit(A._FixedExtentScrollPosition, A.ScrollPositionWithSingleContext);
    _inherit(A._FixedExtentScrollable, A.Scrollable);
    _inherit(A._ScrollableState_State_TickerProviderStateMixin_RestorationMixin, A._ScrollableState_State_TickerProviderStateMixin);
    _inherit(A.ScrollableState, A._ScrollableState_State_TickerProviderStateMixin_RestorationMixin);
    _inherit(A._FixedExtentScrollableState, A.ScrollableState);
    _inheritMany(A.ScrollPhysics, [A.FixedExtentScrollPhysics, A.RangeMaintainingScrollPhysics, A.BouncingScrollPhysics, A.ClampingScrollPhysics]);
    _inheritMany(A.InheritedModel, [A.MediaQuery, A._SharedAppModel]);
    _inherit(A._MediaQueryFromViewState, A.__MediaQueryFromViewState_State_WidgetsBindingObserver);
    _inherit(A.DefaultTransitionDelegate, A.TransitionDelegate);
    _inherit(A._RouteEntry, A.RouteTransitionRecord);
    _inheritMany(A._NavigatorObservation, [A._NavigatorPushObservation, A._NavigatorPopObservation, A._NavigatorRemoveObservation, A._NavigatorReplaceObservation]);
    _inherit(A._NavigatorState_State_TickerProviderStateMixin_RestorationMixin, A._NavigatorState_State_TickerProviderStateMixin);
    _inherit(A.NavigatorState, A._NavigatorState_State_TickerProviderStateMixin_RestorationMixin);
    _inheritMany(A._RestorationInformation, [A._NamedRestorationInformation, A._AnonymousRestorationInformation]);
    _inheritMany(A.RestorableProperty, [A._HistoryProperty, A.RestorableValue]);
    _inherit(A._NotificationElement, A.__NotificationElement_ProxyElement_NotifiableElementMixin);
    _inherit(A.OverlayState, A._OverlayState_State_TickerProviderStateMixin);
    _inherit(A._TheaterElement, A.MultiChildRenderObjectElement);
    _inherit(A._TheaterParentData, A.StackParentData);
    _inherit(A.__RenderTheater_RenderBox_ContainerRenderObjectMixin__RenderTheaterMixin, A.__RenderTheater_RenderBox_ContainerRenderObjectMixin);
    _inherit(A._RenderTheater, A.__RenderTheater_RenderBox_ContainerRenderObjectMixin__RenderTheaterMixin);
    _inherit(A._GlowingOverscrollIndicatorState, A.__GlowingOverscrollIndicatorState_State_TickerProviderStateMixin);
    _inherit(A._StretchingOverscrollIndicatorState, A.__StretchingOverscrollIndicatorState_State_TickerProviderStateMixin);
    _inherit(A.OverscrollIndicatorNotification, A._OverscrollIndicatorNotification_Notification_ViewportNotificationMixin);
    _inherit(A.DefaultPlatformMenuDelegate, A.PlatformMenuDelegate);
    _inherit(A._RestorationScopeState, A.__RestorationScopeState_State_RestorationMixin);
    _inheritMany(A.RestorableValue, [A._RestorablePrimitiveValueN, A._RestorableRouteInformation, A._RestorableScrollOffset]);
    _inherit(A._RestorablePrimitiveValue, A._RestorablePrimitiveValueN);
    _inheritMany(A._RestorablePrimitiveValue, [A.RestorableNum, A.RestorableBool]);
    _inherit(A._RouterState, A.__RouterState_State_RestorationMixin);
    _inheritMany(A.ScrollActivity, [A.IdleScrollActivity, A.HoldScrollActivity, A.DragScrollActivity, A.BallisticScrollActivity, A.DrivenScrollActivity]);
    _inherit(A._ScrollNotification_LayoutChangedNotification_ViewportNotificationMixin, A.LayoutChangedNotification);
    _inherit(A.ScrollNotification, A._ScrollNotification_LayoutChangedNotification_ViewportNotificationMixin);
    _inheritMany(A.ScrollNotification, [A.ScrollStartNotification, A.ScrollUpdateNotification, A.OverscrollNotification, A.ScrollEndNotification, A.UserScrollNotification]);
    _inherit(A._ListenerEntry, A.LinkedListEntry);
    _inherit(A._ConvertedScrollMetricsNotification, A.ScrollUpdateNotification);
    _inherit(A.ScrollMetricsNotification, A._ScrollMetricsNotification_Notification_ViewportNotificationMixin);
    _inherit(A._MultiSelectableSelectionContainerDelegate_SelectionContainerDelegate_ChangeNotifier, A.SelectionContainerDelegate);
    _inherit(A.MultiSelectableSelectionContainerDelegate, A._MultiSelectableSelectionContainerDelegate_SelectionContainerDelegate_ChangeNotifier);
    _inherit(A._ScrollableSelectionContainerDelegate, A.MultiSelectableSelectionContainerDelegate);
    _inherit(A._ThumbPressGestureRecognizer, A.LongPressGestureRecognizer);
    _inherit(A._TrackTapGestureRecognizer, A.TapGestureRecognizer);
    _inherit(A.__SelectionContainerState_State_Selectable_SelectionRegistrant, A.__SelectionContainerState_State_Selectable);
    _inherit(A._SelectionContainerState, A.__SelectionContainerState_State_Selectable_SelectionRegistrant);
    _inherit(A._SingleActivator_Object_Diagnosticable_MenuSerializableShortcut, A._SingleActivator_Object_Diagnosticable);
    _inherit(A.SingleActivator, A._SingleActivator_Object_Diagnosticable_MenuSerializableShortcut);
    _inherit(A._ActivatorIntentPair, A.__ActivatorIntentPair_Object_Diagnosticable);
    _inherit(A._ShortcutManager_Object_Diagnosticable_ChangeNotifier, A._ShortcutManager_Object_Diagnosticable);
    _inherit(A.ShortcutManager, A._ShortcutManager_Object_Diagnosticable_ChangeNotifier);
    _inherit(A.ShortcutRegistry, A._ShortcutRegistry_Object_ChangeNotifier);
    _inheritMany(A.DirectionalTextEditingIntent, [A.DeleteCharacterIntent, A.DeleteToNextWordBoundaryIntent, A.DeleteToLineBreakIntent, A.DirectionalCaretMovementIntent, A.ScrollToDocumentBoundaryIntent]);
    _inheritMany(A.DirectionalCaretMovementIntent, [A.ExtendSelectionByCharacterIntent, A.ExtendSelectionToNextWordBoundaryIntent, A.ExtendSelectionToNextWordBoundaryOrCaretLocationIntent, A.ExpandSelectionToDocumentBoundaryIntent, A.ExpandSelectionToLineBreakIntent, A.ExtendSelectionToLineBreakIntent, A.ExtendSelectionVerticallyToAdjacentLineIntent, A.ExtendSelectionVerticallyToAdjacentPageIntent, A.ExtendSelectionToNextParagraphBoundaryIntent, A.ExtendSelectionToNextParagraphBoundaryOrCaretLocationIntent, A.ExtendSelectionToDocumentBoundaryIntent]);
    _inherit(A._WidgetTicker, A.Ticker);
    _inheritMany(A.AnimatedWidget, [A.SlideTransition, A.ScaleTransition, A.RotationTransition, A.DecoratedBoxTransition, A.ListenableBuilder]);
    _inherit(A.AnimatedBuilder, A.ListenableBuilder);
    _inherit(A._LayoutWidgetState, A.__LayoutWidgetState_State_SingleTickerProviderStateMixin);
    _inheritMany(A._Node, [A._LayoutNode, A._LeafNode]);
    _mixin(A.UnmodifiableListBase, A.UnmodifiableListMixin);
    _mixin(A.__CastListBase__CastIterableBase_ListMixin, A.ListBase);
    _mixin(A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin, A.ListBase);
    _mixin(A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin, A.FixedLengthListMixin);
    _mixin(A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin, A.ListBase);
    _mixin(A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin, A.FixedLengthListMixin);
    _mixin(A._AsyncStreamController, A._AsyncStreamControllerDispatch);
    _mixin(A._SplayTreeMap__SplayTree_MapMixin, A.MapBase);
    _mixin(A._SplayTreeSet__SplayTree_Iterable, A.Iterable);
    _mixin(A._SplayTreeSet__SplayTree_Iterable_SetMixin, A.SetBase);
    _mixin(A._UnmodifiableMapView_MapView__UnmodifiableMapMixin, A._UnmodifiableMapMixin);
    _mixin(A._AnimationController_Animation_AnimationEagerListenerMixin, A.AnimationEagerListenerMixin);
    _mixin(A._AnimationController_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin, A.AnimationLocalListenersMixin);
    _mixin(A._AnimationController_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin, A.AnimationLocalStatusListenersMixin);
    _mixin(A._CompoundAnimation_Animation_AnimationLazyListenerMixin, A.AnimationLazyListenerMixin);
    _mixin(A._CompoundAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin, A.AnimationLocalListenersMixin);
    _mixin(A._CompoundAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin, A.AnimationLocalStatusListenersMixin);
    _mixin(A._CurvedAnimation_Animation_AnimationWithParentMixin, A.AnimationWithParentMixin);
    _mixin(A._ProxyAnimation_Animation_AnimationLazyListenerMixin, A.AnimationLazyListenerMixin);
    _mixin(A._ProxyAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin, A.AnimationLocalListenersMixin);
    _mixin(A._ProxyAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin, A.AnimationLocalStatusListenersMixin);
    _mixin(A._ReverseAnimation_Animation_AnimationLazyListenerMixin, A.AnimationLazyListenerMixin);
    _mixin(A._ReverseAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalStatusListenersMixin, A.AnimationLocalStatusListenersMixin);
    _mixin(A._TrainHoppingAnimation_Animation_AnimationEagerListenerMixin, A.AnimationEagerListenerMixin);
    _mixin(A._TrainHoppingAnimation_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin, A.AnimationLocalListenersMixin);
    _mixin(A._TrainHoppingAnimation_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin, A.AnimationLocalStatusListenersMixin);
    _mixin(A.__AnimatedEvaluation_Animation_AnimationWithParentMixin, A.AnimationWithParentMixin);
    _mixin(A._CupertinoDynamicColor_Color_Diagnosticable, A.Diagnosticable);
    _mixin(A._CupertinoIconThemeData_IconThemeData_Diagnosticable, A.Diagnosticable);
    _mixin(A._CupertinoTextThemeData_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._CupertinoThemeData_NoDefaultCupertinoThemeData_Diagnosticable, A.Diagnosticable);
    _mixin(A._FlutterError_Error_DiagnosticableTreeMixin, A.DiagnosticableTreeMixin);
    _mixin(A._FlutterErrorDetails_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._DiagnosticableTree_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._PointerCancelEvent_PointerEvent__PointerEventDescription, A._PointerEventDescription);
    _mixin(A._PointerCancelEvent_PointerEvent__PointerEventDescription__CopyPointerCancelEvent, A._CopyPointerCancelEvent);
    _mixin(A._PointerEnterEvent_PointerEvent__PointerEventDescription, A._PointerEventDescription);
    _mixin(A._PointerEnterEvent_PointerEvent__PointerEventDescription__CopyPointerEnterEvent, A._CopyPointerEnterEvent);
    _mixin(A._PointerEvent_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._PointerExitEvent_PointerEvent__PointerEventDescription, A._PointerEventDescription);
    _mixin(A._PointerExitEvent_PointerEvent__PointerEventDescription__CopyPointerExitEvent, A._CopyPointerExitEvent);
    _mixin(A.__TransformedPointerCancelEvent__TransformedPointerEvent__CopyPointerCancelEvent, A._CopyPointerCancelEvent);
    _mixin(A.__TransformedPointerEnterEvent__TransformedPointerEvent__CopyPointerEnterEvent, A._CopyPointerEnterEvent);
    _mixin(A.__TransformedPointerEvent__AbstractPointerEvent_Diagnosticable, A.Diagnosticable);
    _mixin(A.__TransformedPointerEvent__AbstractPointerEvent_Diagnosticable__PointerEventDescription, A._PointerEventDescription);
    _mixin(A.__TransformedPointerExitEvent__TransformedPointerEvent__CopyPointerExitEvent, A._CopyPointerExitEvent);
    _mixin(A._GestureRecognizer_GestureArenaMember_DiagnosticableTreeMixin, A.DiagnosticableTreeMixin);
    _mixin(A._ActionIconThemeData_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._AppBarTheme_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._BadgeThemeData_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._MaterialBannerThemeData_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._BottomAppBarTheme_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._BottomNavigationBarThemeData_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._BottomSheetThemeData_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._ButtonBarThemeData_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._ButtonStyle_Object_Diagnosticable, A.Diagnosticable);
    _mixinHard(A.__ButtonStyleState_State_TickerProviderStateMixin, A.TickerProviderStateMixin);
    _mixin(A._ButtonThemeData_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._CardTheme_Object_Diagnosticable, A.Diagnosticable);
    _mixinHard(A.__CheckboxState_State_TickerProviderStateMixin, A.TickerProviderStateMixin);
    _mixinHard(A.__CheckboxState_State_TickerProviderStateMixin_ToggleableStateMixin, A.ToggleableStateMixin);
    _mixin(A._CheckboxThemeData_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._ChipThemeData_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._ColorScheme_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._DataTableThemeData_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._DatePickerThemeData_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._DialogTheme_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._DividerThemeData_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._DrawerThemeData_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._DropdownMenuThemeData_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._ElevatedButtonThemeData_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._ExpansionTileThemeData_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._FilledButtonThemeData_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A.__EndFloatFabLocation_StandardFabLocation_FabEndOffsetX, A.FabEndOffsetX);
    _mixin(A.__EndFloatFabLocation_StandardFabLocation_FabEndOffsetX_FabFloatOffsetY, A.FabFloatOffsetY);
    _mixin(A._FloatingActionButtonThemeData_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._IconButtonThemeData_Object_Diagnosticable, A.Diagnosticable);
    _mixinHard(A.__InkResponseState_State_AutomaticKeepAliveClientMixin, A.AutomaticKeepAliveClientMixin);
    _mixin(A._InputDecorationTheme_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._ListTileThemeData_Object_Diagnosticable, A.Diagnosticable);
    _mixinHard(A.__MaterialState_State_TickerProviderStateMixin, A.TickerProviderStateMixin);
    _mixin(A._MenuButtonThemeData_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._MenuStyle_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._MenuThemeData_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._NavigationBarThemeData_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._NavigationDrawerThemeData_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._NavigationRailThemeData_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._OutlinedButtonThemeData_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._MaterialPageRoute_PageRoute_MaterialRouteTransitionMixin, A.MaterialRouteTransitionMixin);
    _mixin(A._PageTransitionsTheme_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A.__ZoomEnterTransitionState_State__ZoomTransitionBase, A._ZoomTransitionBase);
    _mixin(A.__ZoomExitTransitionState_State__ZoomTransitionBase, A._ZoomTransitionBase);
    _mixin(A._PopupMenuThemeData_Object_Diagnosticable, A.Diagnosticable);
    _mixinHard(A.__CircularProgressIndicatorState_State_SingleTickerProviderStateMixin, A.SingleTickerProviderStateMixin);
    _mixin(A._ProgressIndicatorThemeData_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._RadioThemeData_Object_Diagnosticable, A.Diagnosticable);
    _mixinHard(A._ScaffoldMessengerState_State_TickerProviderStateMixin, A.TickerProviderStateMixin);
    _mixinHard(A._ScaffoldState_State_TickerProviderStateMixin, A.TickerProviderStateMixin);
    _mixinHard(A._ScaffoldState_State_TickerProviderStateMixin_RestorationMixin, A.RestorationMixin);
    _mixinHard(A.__FloatingActionButtonTransitionState_State_TickerProviderStateMixin, A.TickerProviderStateMixin);
    _mixin(A._ScrollbarThemeData_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._SegmentedButtonThemeData_Object_Diagnosticable, A.Diagnosticable);
    _mixinHard(A.__RenderSlider_RenderBox_RelayoutWhenSystemFontsChangeMixin, A.RelayoutWhenSystemFontsChangeMixin);
    _mixinHard(A.__RenderValueIndicator_RenderBox_RelayoutWhenSystemFontsChangeMixin, A.RelayoutWhenSystemFontsChangeMixin);
    _mixinHard(A.__SliderState_State_TickerProviderStateMixin, A.TickerProviderStateMixin);
    _mixin(A._RoundedRectSliderTrackShape_SliderTrackShape_BaseSliderTrackShape, A.BaseSliderTrackShape);
    _mixin(A._SliderThemeData_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._SnackBarThemeData_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._SwitchThemeData_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._TabBarTheme_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A.__TextButtonDefaultMouseCursor_MaterialStateProperty_Diagnosticable, A.Diagnosticable);
    _mixin(A._TextButtonThemeData_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._TextSelectionThemeData_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._TextTheme_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._ThemeData_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._VisualDensity_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._TimePickerThemeData_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._ToggleButtonsThemeData_Object_Diagnosticable, A.Diagnosticable);
    _mixinHard(A._TooltipState_State_SingleTickerProviderStateMixin, A.SingleTickerProviderStateMixin);
    _mixin(A._TooltipThemeData_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._Typography_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._BorderSide_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._Decoration_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._TextStyle_Object_Diagnosticable, A.Diagnosticable);
    _mixinHard(A._ContainerBoxParentData_BoxParentData_ContainerParentDataMixin, A.ContainerParentDataMixin);
    _mixinHard(A._RenderCustomMultiChildLayoutBox_RenderBox_ContainerRenderObjectMixin, A.ContainerRenderObjectMixin);
    _mixin(A._RenderCustomMultiChildLayoutBox_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin, A.RenderBoxContainerDefaultsMixin);
    _mixinHard(A._RenderFlex_RenderBox_ContainerRenderObjectMixin, A.ContainerRenderObjectMixin);
    _mixin(A._RenderFlex_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin, A.RenderBoxContainerDefaultsMixin);
    _mixinHard(A._RenderFlex_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin, A.DebugOverflowIndicatorMixin);
    _mixin(A._Layer_AbstractNode_DiagnosticableTreeMixin, A.DiagnosticableTreeMixin);
    _mixinHard(A._RenderListWheelViewport_RenderBox_ContainerRenderObjectMixin, A.ContainerRenderObjectMixin);
    _mixin(A.__MouseTrackerUpdateDetails_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._RenderObject_AbstractNode_DiagnosticableTreeMixin, A.DiagnosticableTreeMixin);
    _mixinHard(A._RenderParagraph_RenderBox_ContainerRenderObjectMixin, A.ContainerRenderObjectMixin);
    _mixin(A._RenderParagraph_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin, A.RenderBoxContainerDefaultsMixin);
    _mixinHard(A._RenderParagraph_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_RelayoutWhenSystemFontsChangeMixin, A.RelayoutWhenSystemFontsChangeMixin);
    _mixin(A.__SelectableFragment_Object_Selectable, A.Selectable);
    _mixin(A.__SelectableFragment_Object_Selectable_ChangeNotifier, A.ChangeNotifier);
    _mixinHard(A._RenderAnimatedOpacity_RenderProxyBox_RenderAnimatedOpacityMixin, A.RenderAnimatedOpacityMixin);
    _mixinHard(A._RenderProxyBox_RenderBox_RenderObjectWithChildMixin, A.RenderObjectWithChildMixin);
    _mixinHard(A._RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin, A.RenderProxyBoxMixin);
    _mixinHard(A._RenderShiftedBox_RenderBox_RenderObjectWithChildMixin, A.RenderObjectWithChildMixin);
    _mixinHard(A._RenderStack_RenderBox_ContainerRenderObjectMixin, A.ContainerRenderObjectMixin);
    _mixin(A._RenderStack_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin, A.RenderBoxContainerDefaultsMixin);
    _mixinHard(A._RenderView_RenderObject_RenderObjectWithChildMixin, A.RenderObjectWithChildMixin);
    _mixin(A._SemanticsNode_AbstractNode_DiagnosticableTreeMixin, A.DiagnosticableTreeMixin);
    _mixin(A._SemanticsSortKey_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._KeyEvent_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._KeyboardKey_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._MouseCursor_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._RawKeyEvent_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._RawKeyEventData_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A.__PlatformTextInputControl_Object_TextInputControl, A.TextInputControl);
    _mixin(A._Action_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._ActionDispatcher_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._Intent_Object_Diagnosticable, A.Diagnosticable);
    _mixinHard(A.__OverridableAction_ContextAction__OverridableActionMixin, A._OverridableActionMixin);
    _mixin(A.__WidgetsAppState_State_WidgetsBindingObserver, A.WidgetsBindingObserver);
    _mixinHard(A._WidgetsFlutterBinding_BindingBase_GestureBinding, A.GestureBinding);
    _mixinHard(A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding, A.SchedulerBinding);
    _mixinHard(A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding, A.ServicesBinding);
    _mixinHard(A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding, A.PaintingBinding);
    _mixinHard(A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding, A.SemanticsBinding);
    _mixinHard(A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding, A.RendererBinding);
    _mixinHard(A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding, A.WidgetsBinding);
    _mixin(A._FocusManager_Object_DiagnosticableTreeMixin, A.DiagnosticableTreeMixin);
    _mixin(A._FocusManager_Object_DiagnosticableTreeMixin_ChangeNotifier, A.ChangeNotifier);
    _mixin(A._FocusNode_Object_DiagnosticableTreeMixin, A.DiagnosticableTreeMixin);
    _mixin(A._FocusNode_Object_DiagnosticableTreeMixin_ChangeNotifier, A.ChangeNotifier);
    _mixin(A._FocusTraversalPolicy_Object_Diagnosticable, A.Diagnosticable);
    _mixinHard(A._ReadingOrderTraversalPolicy_FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin, A.DirectionalFocusTraversalPolicyMixin);
    _mixin(A.__ReadingOrderDirectionalGroupData_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A.__ReadingOrderSortData_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._State_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._IconThemeData_Object_Diagnosticable, A.Diagnosticable);
    _mixinHard(A._ImplicitlyAnimatedWidgetState_State_SingleTickerProviderStateMixin, A.SingleTickerProviderStateMixin);
    _mixinHard(A.__RenderLayoutBuilder_RenderBox_RenderObjectWithChildMixin, A.RenderObjectWithChildMixin);
    _mixin(A.__RenderLayoutBuilder_RenderBox_RenderObjectWithChildMixin_RenderConstrainedLayoutBuilder, A.RenderConstrainedLayoutBuilder);
    _mixin(A.__MediaQueryFromViewState_State_WidgetsBindingObserver, A.WidgetsBindingObserver);
    _mixinHard(A._NavigatorState_State_TickerProviderStateMixin, A.TickerProviderStateMixin);
    _mixinHard(A._NavigatorState_State_TickerProviderStateMixin_RestorationMixin, A.RestorationMixin);
    _mixin(A.__NotificationElement_ProxyElement_NotifiableElementMixin, A.NotifiableElementMixin);
    _mixinHard(A._OverlayState_State_TickerProviderStateMixin, A.TickerProviderStateMixin);
    _mixinHard(A.__RenderTheater_RenderBox_ContainerRenderObjectMixin, A.ContainerRenderObjectMixin);
    _mixin(A.__RenderTheater_RenderBox_ContainerRenderObjectMixin__RenderTheaterMixin, A._RenderTheaterMixin);
    _mixinHard(A._OverscrollIndicatorNotification_Notification_ViewportNotificationMixin, A.ViewportNotificationMixin);
    _mixinHard(A.__GlowingOverscrollIndicatorState_State_TickerProviderStateMixin, A.TickerProviderStateMixin);
    _mixinHard(A.__StretchingOverscrollIndicatorState_State_TickerProviderStateMixin, A.TickerProviderStateMixin);
    _mixinHard(A.__RestorationScopeState_State_RestorationMixin, A.RestorationMixin);
    _mixinHard(A.__RouterState_State_RestorationMixin, A.RestorationMixin);
    _mixinHard(A._ModalRoute_TransitionRoute_LocalHistoryRoute, A.LocalHistoryRoute);
    _mixin(A._FixedScrollMetrics_Object_ScrollMetrics, A.ScrollMetrics);
    _mixinHard(A._ScrollNotification_LayoutChangedNotification_ViewportNotificationMixin, A.ViewportNotificationMixin);
    _mixinHard(A._ScrollMetricsNotification_Notification_ViewportNotificationMixin, A.ViewportNotificationMixin);
    _mixin(A._ScrollPosition_ViewportOffset_ScrollMetrics, A.ScrollMetrics);
    _mixinHard(A._ScrollableState_State_TickerProviderStateMixin, A.TickerProviderStateMixin);
    _mixinHard(A._ScrollableState_State_TickerProviderStateMixin_RestorationMixin, A.RestorationMixin);
    _mixinHard(A._RawScrollbarState_State_TickerProviderStateMixin, A.TickerProviderStateMixin);
    _mixin(A._MultiSelectableSelectionContainerDelegate_SelectionContainerDelegate_ChangeNotifier, A.ChangeNotifier);
    _mixin(A.__SelectionContainerState_State_Selectable, A.Selectable);
    _mixinHard(A.__SelectionContainerState_State_Selectable_SelectionRegistrant, A.SelectionRegistrant);
    _mixin(A._ShortcutManager_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._ShortcutManager_Object_Diagnosticable_ChangeNotifier, A.ChangeNotifier);
    _mixin(A._ShortcutRegistry_Object_ChangeNotifier, A.ChangeNotifier);
    _mixin(A._SingleActivator_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._SingleActivator_Object_Diagnosticable_MenuSerializableShortcut, A.MenuSerializableShortcut);
    _mixin(A.__ActivatorIntentPair_Object_Diagnosticable, A.Diagnosticable);
    _mixinHard(A.__LayoutWidgetState_State_SingleTickerProviderStateMixin, A.SingleTickerProviderStateMixin);
  })();
  var init = {
    G: typeof self != "undefined" ? self : globalThis,
    typeUniverse: {eC: new Map(), tR: {}, eT: {}, tPV: {}, sEA: []},
    mangledGlobalNames: {int: "int", double: "double", num: "num", String: "String", bool: "bool", Null: "Null", List: "List", Object: "Object", Map: "Map", JSObject: "JSObject"},
    mangledNames: {},
    types: ["~()", "~(Duration)", "~(AnimationStatus)", "~(PaintingContext,Offset)", "~(Element)", "List<DiagnosticsNode>()", "~(bool)", "bool(FocusNode)", "~(Object?)", "Null()", "~(DragUpdateDetails)", "~(PointerEvent)", "Widget(BuildContext)", "bool(BoxHitTestResult,Offset)", "bool(_RouteEntry?)", "bool(ScrollNotification)", "~(RenderObject)", "bool(Object?)", "~(int)", "int(FocusNode,FocusNode)", "bool(Element)", "Color(Set<MaterialState>)", "~(~())", "~(RestorableProperty<Object?>,~())", "~(PointerExitEvent)", "MaterialStateProperty<Color?>?(ButtonStyle?)", "~(NavigatorObserver)", "bool(_RouteEntry)", "Null(@)", "~(@)", "bool(int)", "int(RenderObject,RenderObject)", "~(double)", "ColorTween(@)", "bool(InheritedElement)", "~(PointerEnterEvent)", "~(TapDownDetails)", "MaterialStateProperty<Size?>?(ButtonStyle?)", "Widget(BuildContext,Widget?)", "IconData(BuildContext)", "~(Selectable)", "Null(~)", "Widget(BuildContext)?(ActionIconThemeData?)", "Future<~>()", "bool(String)", "bool(InlineSpan)", "double(double)", "String()", "Color(Color)", "Future<~>(MethodCall)", "~(DragEndDetails)", "~(PointerDownEvent)", "bool(FocusableActionDetector)", "~(DragStartDetails)", "bool()", "bool(ScrollEndNotification)", "Semantics(int)", "@(@)", "~(Object?,Object?)", "~(Object,StackTrace)", "bool(ScrollMetricsNotification)", "String(MaterialLocalizations)", "Color?(Color?)", "@(String)", "KeyEventResult(FocusNode,RawKeyEvent)", "MaterialStateProperty<double?>?(ButtonStyle?)", "Color?(Set<MaterialState>)", "Rect()", "~([Intent?])", "~(FocusHighlightMode)", "Null(Object,StackTrace)", "~(TapUpDetails)", "Tween<double>(@)", "_ZoomEnterTransition(BuildContext,Animation<double>,Widget?)", "_ZoomExitTransition(BuildContext,Animation<double>,Widget?)", "bool(SemanticsNode)", "int(@,@)", "Size()", "double(Size)", "@()", "~({curve:Curve,descendant:RenderObject?,duration:Duration,rect:Rect?})", "~(BoxConstraints)", "_InterestingSemanticsFragment(SemanticsConfiguration)", "~(List<FrameTiming>)", "int(SemanticsNode,SemanticsNode)", "Future<ByteData?>(ByteData?)", "~(RestorationBucket)", "Map<Object?,Object?>()", "bool(Selectable,double)", "int(int)", "int()", "int(_ReadingOrderSortData,_ReadingOrderSortData)", "Size(RenderBox,BoxConstraints)", "VerticalDragGestureRecognizer()", "~(VerticalDragGestureRecognizer)", "HorizontalDragGestureRecognizer()", "~(HorizontalDragGestureRecognizer)", "Tween<@>?(Tween<@>?,@,Tween<@>(@))", "~(ByteData?)", "VelocityTracker(PointerEvent)", "bool(int,double,double)", "~(PointerSignalEvent)", "Future<@>(MethodCall)", "~(SemanticsUpdate)", "MediaQuery(BuildContext,BoxConstraints)", "bool(InkHighlight?)", "Color(_HighlightType)", "bool(LayoutChangedNotification)", "~(ScrollNotification)", "Expanded(Widget)", "ShapeBorderTween(@)", "double()", "double(_Diagonal)", "PageTransitionsBuilder?(TargetPlatform)", "0^?(0^?(ButtonStyle?))<Object?>", "Set<0^>()<Object?>", "Actions(BuildContext,Widget?)", "~(@,@)", "bool(Set<MaterialState>)", "double(Set<MaterialState>)", "0^?(MaterialStateProperty<0^>?(ButtonStyle?))<Object?>", "~(_AdjustSliderIntent)", "Color?()", "CallbackHandle?()", "CompositedTransformFollower(BuildContext)", "MaterialStateProperty<TextStyle0?>?(ButtonStyle?)", "ThemeDataTween(@)", "ThemeData()", "MapEntry<Object,ThemeExtension<@>>(Object,ThemeExtension<@>)", "bool(MapEntry<Object,ThemeExtension<@>>)", "~([TapUpDetails?])", "Null(@,StackTrace)", "EdgeInsetsGeometry(EdgeInsetsGeometry,ShapeBorder)", "ShapeBorder(ShapeBorder)", "String(ShapeBorder)", "~(Symbol0,@)", "bool(int,bool)", "~(String,int)", "~(~(PointerEvent),Matrix4?)", "String(double,double,String)", "double?()", "MaterialStateProperty<EdgeInsetsGeometry?>?(ButtonStyle?)", "~(int,@)", "MouseCursor(MouseTrackerAnnotation)", "~(MouseTrackerAnnotation,Matrix4)", "bool(MouseTrackerAnnotation)", "Future<~>(~)", "~(List<_InterestingSemanticsFragment>{isMergeUp:bool})", "~(String,int?)", "MaterialStateProperty<BorderSide?>?(ButtonStyle?)", "~(_SelectableFragment)", "bool(_SelectableFragment)", "HitTestResult(Offset)", "MaterialStateProperty<OutlinedBorder?>?(ButtonStyle?)", "~(int,_FrameCallbackEntry)", "MouseCursor?(Set<MaterialState>)", "~(SemanticsTag)", "ByteData(ByteData?)", "Stream<LicenseEntry>()", "Future<String?>(String?)", "TargetPlatform?()", "Future<~>(ByteData?,~(ByteData?))", "Future<Map<String,@>>(@)", "~(RawKeyEvent)", "MouseCursor?(ButtonStyle?)", "RawKeyEventData()", "Function?()", "Color?(ButtonStyle?)", "List<RestorationBucket>()", "List<RestorationBucket>(List<RestorationBucket>)", "VisualDensity?(ButtonStyle?)", "double(num)", "List<@>(String)", "TargetPlatform()", "int(int,int)", "~(Action<Intent>)", "ErrorDescription(String)", "Route<@>?(RouteSettings)", "Route<@>(RouteSettings)", "MaterialTapTargetSize?(ButtonStyle?)", "HitTestResult()", "Future<~>(@)", "_Channel()", "bool(KeyMessage)", "~(_FocusTraversalGroupInfo)", "bool(_DirectionalPolicyDataEntry)", "Duration?(ButtonStyle?)", "bool(TraversalDirection)", "Set<Directionality>(_ReadingOrderSortData)", "bool?(ButtonStyle?)", "List<Directionality>(BuildContext)", "Rect(_ReadingOrderSortData)", "AlignmentGeometry?(ButtonStyle?)", "List<_ReadingOrderSortData>(_ReadingOrderSortData,Iterable<_ReadingOrderSortData>)", "bool(_ReadingOrderSortData)", "Element?(Element)", "Object?(int,Element?)", "TapGestureRecognizer()", "~(TapGestureRecognizer)", "DoubleTapGestureRecognizer()", "~(DoubleTapGestureRecognizer)", "LongPressGestureRecognizer()", "~(LongPressGestureRecognizer)", "InteractiveInkFeatureFactory?(ButtonStyle?)", "String(String,Color)", "MouseCursor(Set<MaterialState>)", "Null(~())", "PanGestureRecognizer()", "~(PanGestureRecognizer)", "~(PointerPanZoomStartEvent)", "~(RenderSemanticsGestureHandler)", "~(StatefulElement,Object)", "~(String?{wrapWidth:int?})", "~(_HeroFlight)", "Widget(BuildContext,Animation<double>,HeroFlightDirection,BuildContext,BuildContext)", "bool(_HeroFlight)", "MediaQuery(BuildContext,Widget?)", "IconTheme(BuildContext)", "TickerFuture({from:double?})", "TextStyleTween(@)", "BorderRadiusTween(@)", "Rect()?(RenderBox)", "ListWheelViewport(BuildContext,ViewportOffset)", "Widget?()", "~(int,Element)", "Future<@>(_Pending)", "Map<Type,@>(List<@>)", "Map<Type,@>(Map<Type,@>)", "Null(Map<Type,@>)", "~(AbstractNode)", "bool(Route<@>?)", "bool(OverlayEntry)", "String(GestureArenaMember)", "_GestureArena()", "_RouteEntry(Route<@>)", "MapEntry<String?,List<Object>>(@,@)", "ClipRect(BuildContext,Widget?)", "Null(RestorationBucket?)", "~(RestorableProperty<Object?>)", "Future<bool>()", "SynchronousFuture<bool>(bool)", "RestorationScope(BuildContext,Widget?)", "Actions(BuildContext)", "IgnorePointer(BuildContext,Widget?)", "IOSScrollViewFlingVelocityTracker(PointerEvent)", "MacOSScrollViewFlingVelocityTracker(PointerEvent)", "MaterialRectArcTween(Rect?,Rect?)", "~(_AnimationDirection)", "~(DragDownDetails)", "MaterialPageRoute<0^>(RouteSettings,Widget(BuildContext))<Object?>", "_CombiningGestureArenaMember()", "bool(ScrollMetrics?)", "_ThumbPressGestureRecognizer()", "~(_ThumbPressGestureRecognizer)", "~(LongPressStartDetails)", "~(LongPressMoveUpdateDetails)", "~(LongPressEndDetails)", "_TrackTapGestureRecognizer()", "~(_TrackTapGestureRecognizer)", "~(PointerHoverEvent)", "~(_TapTracker)", "int(Selectable,Selectable)", "bool(Selectable)", "~(ShortcutActivator,Intent)", "List<_ActivatorIntentPair>()", "~(bool?)", "@(@,String)", "int(Comparable<@>,Comparable<@>)", "String(String)", "0^(0^,0^)<num>", "Size?(Size?,Size?,double)", "double?(num?,num?,double)", "Color?(Color?,Color?,double)", "~(FlutterErrorDetails{forceReport:bool})", "DiagnosticsNode(String)", "StackFrame?(String)", "Map<~(PointerEvent),Matrix4?>()", "bool?(bool?,bool?,double)", "OutlinedBorder?(OutlinedBorder?,OutlinedBorder?,double)", "EdgeInsetsGeometry?(EdgeInsetsGeometry?,EdgeInsetsGeometry?,double)", "TextStyle0?(TextStyle0?,TextStyle0?,double)", "int(_TaskEntry<@>,_TaskEntry<@>)", "bool({priority!int,scheduler!SchedulerBinding})", "String(ByteData)", "List<LicenseEntry>(String)", "int(Element,Element)", "IconThemeData(IconThemeData?,IconThemeData?,double)", "List<Route<@>>(NavigatorState,String)", "Positioned(BuildContext,Widget?)", "int(_ReadingOrderDirectionalGroupData,_ReadingOrderDirectionalGroupData)"],
    interceptorsByTag: null,
    leafTags: null,
    arrayRti: Symbol("$ti")
  };
  A._Universe_addRules(init.typeUniverse, JSON.parse('{"PlainJavaScriptObject":"LegacyJavaScriptObject","UnknownJavaScriptObject":"LegacyJavaScriptObject","JavaScriptFunction":"LegacyJavaScriptObject","NativeArrayBuffer":"NativeByteBuffer","JSBool":{"bool":[],"TrustedGetRuntimeType":[]},"JSNull":{"Null":[],"TrustedGetRuntimeType":[]},"JavaScriptObject":{"JSObject":[]},"LegacyJavaScriptObject":{"JSObject":[]},"JSArray":{"List":["1"],"EfficientLengthIterable":["1"],"JSObject":[],"Iterable":["1"],"Iterable.E":"1"},"JSArraySafeToStringHook":{"SafeToStringHook":[]},"JSUnmodifiableArray":{"JSArray":["1"],"List":["1"],"EfficientLengthIterable":["1"],"JSObject":[],"Iterable":["1"],"Iterable.E":"1"},"JSNumber":{"double":[],"num":[],"Comparable":["num"]},"JSInt":{"double":[],"int":[],"num":[],"Comparable":["num"],"TrustedGetRuntimeType":[]},"JSNumNotInt":{"double":[],"num":[],"Comparable":["num"],"TrustedGetRuntimeType":[]},"JSString":{"String":[],"Comparable":["String"],"TrustedGetRuntimeType":[]},"_CastIterableBase":{"Iterable":["2"]},"CastIterable":{"_CastIterableBase":["1","2"],"Iterable":["2"],"Iterable.E":"2"},"_EfficientLengthCastIterable":{"CastIterable":["1","2"],"_CastIterableBase":["1","2"],"EfficientLengthIterable":["2"],"Iterable":["2"],"Iterable.E":"2"},"_CastListBase":{"ListBase":["2"],"List":["2"],"_CastIterableBase":["1","2"],"EfficientLengthIterable":["2"],"Iterable":["2"]},"CastList":{"_CastListBase":["1","2"],"ListBase":["2"],"List":["2"],"_CastIterableBase":["1","2"],"EfficientLengthIterable":["2"],"Iterable":["2"],"ListBase.E":"2","Iterable.E":"2"},"CastSet":{"Set":["2"],"_CastIterableBase":["1","2"],"EfficientLengthIterable":["2"],"Iterable":["2"],"Iterable.E":"2"},"CastMap":{"MapBase":["3","4"],"Map":["3","4"],"MapBase.V":"4","MapBase.K":"3"},"LateError":{"Error":[]},"CodeUnits":{"ListBase":["int"],"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"],"ListBase.E":"int","Iterable.E":"int"},"EfficientLengthIterable":{"Iterable":["1"]},"ListIterable":{"EfficientLengthIterable":["1"],"Iterable":["1"]},"SubListIterable":{"ListIterable":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"ListIterable.E":"1","Iterable.E":"1"},"MappedIterable":{"Iterable":["2"],"Iterable.E":"2"},"EfficientLengthMappedIterable":{"MappedIterable":["1","2"],"EfficientLengthIterable":["2"],"Iterable":["2"],"Iterable.E":"2"},"MappedListIterable":{"ListIterable":["2"],"EfficientLengthIterable":["2"],"Iterable":["2"],"ListIterable.E":"2","Iterable.E":"2"},"WhereIterable":{"Iterable":["1"],"Iterable.E":"1"},"ExpandIterable":{"Iterable":["2"],"Iterable.E":"2"},"TakeIterable":{"Iterable":["1"],"Iterable.E":"1"},"EfficientLengthTakeIterable":{"TakeIterable":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"SkipIterable":{"Iterable":["1"],"Iterable.E":"1"},"EfficientLengthSkipIterable":{"SkipIterable":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"SkipWhileIterable":{"Iterable":["1"],"Iterable.E":"1"},"EmptyIterable":{"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"FollowedByIterable":{"Iterable":["1"],"Iterable.E":"1"},"EfficientLengthFollowedByIterable":{"FollowedByIterable":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"WhereTypeIterable":{"Iterable":["1"],"Iterable.E":"1"},"UnmodifiableListBase":{"ListBase":["1"],"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"ReversedListIterable":{"ListIterable":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"ListIterable.E":"1","Iterable.E":"1"},"Symbol":{"Symbol0":[]},"ConstantMapView":{"UnmodifiableMapView":["1","2"],"Map":["1","2"]},"ConstantMap":{"Map":["1","2"]},"ConstantStringMap":{"ConstantMap":["1","2"],"Map":["1","2"]},"_KeysOrValues":{"Iterable":["1"],"Iterable.E":"1"},"GeneralConstantMap":{"ConstantMap":["1","2"],"Map":["1","2"]},"ConstantSet":{"SetBase":["1"],"Set":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"GeneralConstantSet":{"SetBase":["1"],"Set":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"Instantiation":{"Function":[]},"Instantiation1":{"Function":[]},"NullError":{"TypeError":[],"Error":[]},"JsNoSuchMethodError":{"Error":[]},"UnknownJsTypeError":{"Error":[]},"NullThrownFromJavaScriptException":{"Exception":[]},"_StackTrace":{"StackTrace":[]},"Closure":{"Function":[]},"Closure0Args":{"Function":[]},"Closure2Args":{"Function":[]},"TearOffClosure":{"Function":[]},"StaticClosure":{"Function":[]},"BoundClosure":{"Function":[]},"RuntimeError":{"Error":[]},"JsLinkedHashMap":{"MapBase":["1","2"],"Map":["1","2"],"MapBase.V":"2","MapBase.K":"1"},"LinkedHashMapKeysIterable":{"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"LinkedHashMapValuesIterable":{"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"LinkedHashMapEntriesIterable":{"EfficientLengthIterable":["MapEntry<1,2>"],"Iterable":["MapEntry<1,2>"],"Iterable.E":"MapEntry<1,2>"},"JsConstantLinkedHashMap":{"JsLinkedHashMap":["1","2"],"MapBase":["1","2"],"Map":["1","2"],"MapBase.V":"2","MapBase.K":"1"},"_MatchImplementation":{"RegExpMatch":[],"Match":[]},"_AllMatchesIterable":{"Iterable":["RegExpMatch"],"Iterable.E":"RegExpMatch"},"StringMatch":{"Match":[]},"_StringAllMatchesIterable":{"Iterable":["Match"],"Iterable.E":"Match"},"NativeByteBuffer":{"JSObject":[],"TrustedGetRuntimeType":[]},"NativeTypedData":{"JSObject":[]},"NativeByteData":{"ByteData":[],"JSObject":[],"TrustedGetRuntimeType":[]},"NativeTypedArray":{"JavaScriptIndexingBehavior":["1"],"JSObject":[]},"NativeTypedArrayOfDouble":{"ListBase":["double"],"List":["double"],"JavaScriptIndexingBehavior":["double"],"EfficientLengthIterable":["double"],"JSObject":[],"Iterable":["double"]},"NativeTypedArrayOfInt":{"ListBase":["int"],"List":["int"],"JavaScriptIndexingBehavior":["int"],"EfficientLengthIterable":["int"],"JSObject":[],"Iterable":["int"]},"NativeFloat32List":{"NativeTypedArrayOfDouble":[],"Float32List":[],"ListBase":["double"],"List":["double"],"JavaScriptIndexingBehavior":["double"],"EfficientLengthIterable":["double"],"JSObject":[],"Iterable":["double"],"TrustedGetRuntimeType":[],"ListBase.E":"double","Iterable.E":"double"},"NativeFloat64List":{"NativeTypedArrayOfDouble":[],"Float64List":[],"ListBase":["double"],"List":["double"],"JavaScriptIndexingBehavior":["double"],"EfficientLengthIterable":["double"],"JSObject":[],"Iterable":["double"],"TrustedGetRuntimeType":[],"ListBase.E":"double","Iterable.E":"double"},"NativeInt16List":{"NativeTypedArrayOfInt":[],"ListBase":["int"],"List":["int"],"JavaScriptIndexingBehavior":["int"],"EfficientLengthIterable":["int"],"JSObject":[],"Iterable":["int"],"TrustedGetRuntimeType":[],"ListBase.E":"int","Iterable.E":"int"},"NativeInt32List":{"NativeTypedArrayOfInt":[],"Int32List":[],"ListBase":["int"],"List":["int"],"JavaScriptIndexingBehavior":["int"],"EfficientLengthIterable":["int"],"JSObject":[],"Iterable":["int"],"TrustedGetRuntimeType":[],"ListBase.E":"int","Iterable.E":"int"},"NativeInt8List":{"NativeTypedArrayOfInt":[],"ListBase":["int"],"List":["int"],"JavaScriptIndexingBehavior":["int"],"EfficientLengthIterable":["int"],"JSObject":[],"Iterable":["int"],"TrustedGetRuntimeType":[],"ListBase.E":"int","Iterable.E":"int"},"NativeUint16List":{"NativeTypedArrayOfInt":[],"ListBase":["int"],"List":["int"],"JavaScriptIndexingBehavior":["int"],"EfficientLengthIterable":["int"],"JSObject":[],"Iterable":["int"],"TrustedGetRuntimeType":[],"ListBase.E":"int","Iterable.E":"int"},"NativeUint32List":{"NativeTypedArrayOfInt":[],"ListBase":["int"],"List":["int"],"JavaScriptIndexingBehavior":["int"],"EfficientLengthIterable":["int"],"JSObject":[],"Iterable":["int"],"TrustedGetRuntimeType":[],"ListBase.E":"int","Iterable.E":"int"},"NativeUint8ClampedList":{"NativeTypedArrayOfInt":[],"ListBase":["int"],"List":["int"],"JavaScriptIndexingBehavior":["int"],"EfficientLengthIterable":["int"],"JSObject":[],"Iterable":["int"],"TrustedGetRuntimeType":[],"ListBase.E":"int","Iterable.E":"int"},"NativeUint8List":{"NativeTypedArrayOfInt":[],"Uint8List":[],"ListBase":["int"],"List":["int"],"JavaScriptIndexingBehavior":["int"],"EfficientLengthIterable":["int"],"JSObject":[],"Iterable":["int"],"TrustedGetRuntimeType":[],"ListBase.E":"int","Iterable.E":"int"},"_Type":{"Type":[]},"_Error":{"Error":[]},"_TypeError":{"TypeError":[],"Error":[]},"_SyncStarIterable":{"Iterable":["1"],"Iterable.E":"1"},"AsyncError":{"Error":[]},"_AsyncCompleter":{"_Completer":["1"]},"_Future":{"Future":["1"]},"_AsyncStreamController":{"_StreamController":["1"]},"_ControllerStream":{"Stream":["1"]},"_StreamImpl":{"Stream":["1"]},"_HashMap":{"MapBase":["1","2"],"Map":["1","2"],"MapBase.V":"2","MapBase.K":"1"},"_HashMapKeyIterable":{"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"_HashSet":{"_SetBase":["1"],"SetBase":["1"],"Set":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"_LinkedHashSet":{"_SetBase":["1"],"SetBase":["1"],"LinkedHashSet":["1"],"Set":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"LinkedList":{"Iterable":["1"],"Iterable.E":"1"},"ListBase":{"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"MapBase":{"Map":["1","2"]},"_MapBaseValueIterable":{"EfficientLengthIterable":["2"],"Iterable":["2"],"Iterable.E":"2"},"MapView":{"Map":["1","2"]},"UnmodifiableMapView":{"Map":["1","2"]},"ListQueue":{"ListIterable":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"ListIterable.E":"1","Iterable.E":"1"},"SetBase":{"Set":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"_SetBase":{"SetBase":["1"],"Set":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"SplayTreeMap":{"MapBase":["1","2"],"_SplayTree":["1","_SplayTreeMapNode<1,2>"],"Map":["1","2"],"MapBase.V":"2","MapBase.K":"1","_SplayTree.K":"1"},"_SplayTreeKeyIterable":{"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"_SplayTreeValueIterable":{"EfficientLengthIterable":["2"],"Iterable":["2"],"Iterable.E":"2"},"_SplayTreeMapEntryIterable":{"EfficientLengthIterable":["MapEntry<1,2>"],"Iterable":["MapEntry<1,2>"],"Iterable.E":"MapEntry<1,2>"},"_SplayTreeKeyIterator":{"_SplayTreeIterator":["1","2","1"],"_SplayTreeIterator.T":"1"},"_SplayTreeValueIterator":{"_SplayTreeIterator":["1","_SplayTreeMapNode<1,2>","2"],"_SplayTreeIterator.T":"2"},"_SplayTreeMapEntryIterator":{"_SplayTreeIterator":["1","_SplayTreeMapNode<1,2>","MapEntry<1,2>"],"_SplayTreeIterator.T":"MapEntry<1,2>"},"SplayTreeSet":{"SetBase":["1"],"Set":["1"],"EfficientLengthIterable":["1"],"_SplayTree":["1","_SplayTreeSetNode<1>"],"Iterable":["1"],"Iterable.E":"1","_SplayTree.K":"1"},"_JsonMap":{"MapBase":["String","@"],"Map":["String","@"],"MapBase.V":"@","MapBase.K":"String"},"_JsonMapKeyIterable":{"ListIterable":["String"],"EfficientLengthIterable":["String"],"Iterable":["String"],"ListIterable.E":"String","Iterable.E":"String"},"JsonUnsupportedObjectError":{"Error":[]},"JsonCyclicError":{"Error":[]},"double":{"num":[],"Comparable":["num"]},"Duration":{"Comparable":["Duration"]},"int":{"num":[],"Comparable":["num"]},"List":{"EfficientLengthIterable":["1"],"Iterable":["1"]},"num":{"Comparable":["num"]},"RegExpMatch":{"Match":[]},"Set":{"EfficientLengthIterable":["1"],"Iterable":["1"]},"String":{"Comparable":["String"]},"AssertionError":{"Error":[]},"TypeError":{"Error":[]},"ArgumentError":{"Error":[]},"RangeError":{"Error":[]},"IndexError":{"Error":[]},"NoSuchMethodError":{"Error":[]},"UnsupportedError":{"Error":[]},"UnimplementedError":{"Error":[]},"StateError":{"Error":[]},"ConcurrentModificationError":{"Error":[]},"OutOfMemoryError":{"Error":[]},"StackOverflowError":{"Error":[]},"_Exception":{"Exception":[]},"FormatException":{"Exception":[]},"_StringStackTrace":{"StackTrace":[]},"_Uri":{"Uri":[]},"_SimpleUri":{"Uri":[]},"_DataUri":{"Uri":[]},"Int8List":{"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"]},"Uint8List":{"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"]},"Uint8ClampedList":{"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"]},"Int16List":{"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"]},"Uint16List":{"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"]},"Int32List":{"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"]},"Uint32List":{"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"]},"Float32List":{"List":["double"],"EfficientLengthIterable":["double"],"Iterable":["double"]},"Float64List":{"List":["double"],"EfficientLengthIterable":["double"],"Iterable":["double"]},"_EngineLayerWrapper":{"EngineLayer":[]},"_PictureLayer":{"_EngineLayerWrapper":[],"EngineLayer":[]},"TransformEngineLayer":{"_EngineLayerWrapper":[],"EngineLayer":[]},"OffsetEngineLayer":{"_EngineLayerWrapper":[],"EngineLayer":[]},"ClipRectEngineLayer":{"_EngineLayerWrapper":[],"EngineLayer":[]},"ClipRRectEngineLayer":{"_EngineLayerWrapper":[],"EngineLayer":[]},"ClipPathEngineLayer":{"_EngineLayerWrapper":[],"EngineLayer":[]},"OpacityEngineLayer":{"_EngineLayerWrapper":[],"EngineLayer":[]},"_TextSpan":{"_Span":[]},"SingletonFlutterWindow":{"FlutterView":[]},"Animation":{"Listenable":[]},"AnimationController":{"Animation":["double"],"Listenable":[]},"_AlwaysCompleteAnimation":{"Animation":["double"],"Listenable":[]},"_AlwaysDismissedAnimation":{"Animation":["double"],"Listenable":[]},"ProxyAnimation":{"Animation":["double"],"Listenable":[]},"ReverseAnimation":{"Animation":["double"],"Listenable":[]},"CurvedAnimation":{"Animation":["double"],"Listenable":[]},"TrainHoppingAnimation":{"Animation":["double"],"Listenable":[]},"CompoundAnimation":{"Animation":["1"],"Listenable":[]},"AnimationMin":{"Animation":["1"],"Listenable":[]},"_Linear":{"Curve":[]},"SawTooth":{"Curve":[]},"Interval":{"Curve":[]},"Threshold":{"Curve":[]},"Cubic":{"Curve":[]},"FlippedCurve":{"Curve":[]},"_DecelerateCurve":{"Curve":[]},"Tween":{"Animatable":["1"],"Tween.T":"1","Animatable.T":"1"},"ColorTween":{"Tween":["Color?"],"Animatable":["Color?"],"Tween.T":"Color?","Animatable.T":"Color?"},"_AnimatedEvaluation":{"Animation":["1"],"Listenable":[]},"_ChainedEvaluation":{"Animatable":["1"],"Animatable.T":"1"},"ReverseTween":{"Tween":["1"],"Animatable":["1"],"Tween.T":"1","Animatable.T":"1"},"RectTween":{"Tween":["Rect?"],"Animatable":["Rect?"],"Tween.T":"Rect?","Animatable.T":"Rect?"},"IntTween":{"Tween":["int"],"Animatable":["int"],"Tween.T":"int","Animatable.T":"int"},"CurveTween":{"Animatable":["double"],"Animatable.T":"double"},"TweenSequence":{"Animatable":["1"],"Animatable.T":"1"},"CupertinoDynamicColor":{"Color":[]},"CupertinoTimerPicker":{"StatefulWidget":[],"Widget":[]},"_CupertinoTimerPickerState":{"State":["CupertinoTimerPicker"]},"CupertinoIconThemeData":{"IconThemeData":[]},"_CupertinoLocalizationsDelegate":{"LocalizationsDelegate":["CupertinoLocalizations"],"LocalizationsDelegate.T":"CupertinoLocalizations"},"DefaultCupertinoLocalizations":{"CupertinoLocalizations":[]},"CupertinoPicker":{"StatefulWidget":[],"Widget":[]},"_CupertinoPickerState":{"State":["CupertinoPicker"]},"CupertinoPickerDefaultSelectionOverlay":{"StatelessWidget":[],"Widget":[]},"_CupertinoPickerSemantics":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[]},"_RenderCupertinoPickerSemantics":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"AbstractNode":[],"HitTestTarget":[]},"_CupertinoBackGestureDetector":{"StatefulWidget":[],"Widget":[]},"CupertinoPageTransition":{"StatelessWidget":[],"Widget":[]},"_CupertinoBackGestureDetectorState":{"State":["_CupertinoBackGestureDetector<1>"]},"_CupertinoEdgeShadowDecoration":{"Decoration":[]},"CupertinoScrollbar":{"StatefulWidget":[],"Widget":[]},"_CupertinoScrollbarState":{"RawScrollbarState":["CupertinoScrollbar"],"State":["CupertinoScrollbar"]},"_InheritedCupertinoTheme":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[]},"CupertinoTheme":{"StatelessWidget":[],"Widget":[]},"_ErrorDiagnostic":{"DiagnosticsNode":[]},"ErrorDescription":{"_ErrorDiagnostic":[],"DiagnosticsNode":[]},"ErrorSummary":{"_ErrorDiagnostic":[],"DiagnosticsNode":[]},"ErrorHint":{"_ErrorDiagnostic":[],"DiagnosticsNode":[]},"FlutterError":{"AssertionError":[],"Error":[]},"DiagnosticsStackTrace":{"DiagnosticsNode":[]},"_FlutterErrorDetailsNode":{"DiagnosticsNode":[]},"ChangeNotifier":{"Listenable":[]},"_MergingListenable":{"Listenable":[]},"ValueNotifier":{"Listenable":[]},"DiagnosticsProperty":{"DiagnosticsNode":[]},"DiagnosticableNode":{"DiagnosticsNode":[]},"DiagnosticableTreeNode":{"DiagnosticsNode":[]},"DiagnosticsBlock":{"DiagnosticsNode":[]},"ValueKey":{"Key":[]},"LocalKey":{"Key":[]},"UniqueKey":{"Key":[]},"LicenseEntryWithLineBreaks":{"LicenseEntry":[]},"ObserverList":{"Iterable":["1"],"Iterable.E":"1"},"HashedObserverList":{"Iterable":["1"],"Iterable.E":"1"},"SynchronousFuture":{"Future":["1"]},"FlutterErrorDetailsForPointerEventDispatcher":{"FlutterErrorDetails":[]},"PointerHoverEvent":{"PointerEvent":[]},"PointerEnterEvent":{"PointerEvent":[]},"PointerExitEvent":{"PointerEvent":[]},"PointerDownEvent":{"PointerEvent":[]},"PointerSignalEvent":{"PointerEvent":[]},"PointerPanZoomStartEvent":{"PointerEvent":[]},"_AbstractPointerEvent":{"PointerEvent":[]},"_TransformedPointerEvent":{"PointerEvent":[]},"_TransformedPointerEnterEvent":{"PointerEnterEvent":[],"PointerEvent":[]},"_TransformedPointerExitEvent":{"PointerExitEvent":[],"PointerEvent":[]},"PointerCancelEvent":{"PointerEvent":[]},"_TransformedPointerCancelEvent":{"PointerCancelEvent":[],"PointerEvent":[]},"_MatrixTransformPart":{"_TransformPart":[]},"_OffsetTransformPart":{"_TransformPart":[]},"LongPressGestureRecognizer":{"GestureRecognizer":[],"GestureArenaMember":[]},"VerticalDragGestureRecognizer":{"GestureRecognizer":[],"GestureArenaMember":[]},"HorizontalDragGestureRecognizer":{"GestureRecognizer":[],"GestureArenaMember":[]},"PanGestureRecognizer":{"GestureRecognizer":[],"GestureArenaMember":[]},"DragGestureRecognizer":{"GestureRecognizer":[],"GestureArenaMember":[]},"DoubleTapGestureRecognizer":{"GestureRecognizer":[],"GestureArenaMember":[]},"GestureRecognizer":{"GestureArenaMember":[]},"OneSequenceGestureRecognizer":{"GestureRecognizer":[],"GestureArenaMember":[]},"PrimaryPointerGestureRecognizer":{"GestureRecognizer":[],"GestureArenaMember":[]},"TapGestureRecognizer":{"GestureRecognizer":[],"GestureArenaMember":[]},"BaseTapGestureRecognizer":{"GestureRecognizer":[],"GestureArenaMember":[]},"_CombiningGestureArenaMember":{"GestureArenaMember":[]},"_CombiningGestureArenaEntry":{"GestureArenaEntry":[]},"IOSScrollViewFlingVelocityTracker":{"VelocityTracker":[]},"MacOSScrollViewFlingVelocityTracker":{"VelocityTracker":[]},"_ActionButton":{"StatelessWidget":[],"Widget":[]},"_ActionIcon":{"StatelessWidget":[],"Widget":[]},"BackButtonIcon":{"StatelessWidget":[],"Widget":[]},"BackButton":{"StatelessWidget":[],"Widget":[]},"DrawerButtonIcon":{"StatelessWidget":[],"Widget":[]},"DrawerButton":{"StatelessWidget":[],"Widget":[]},"EndDrawerButtonIcon":{"StatelessWidget":[],"Widget":[]},"EndDrawerButton":{"StatelessWidget":[],"Widget":[]},"ActionIconTheme":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[]},"MaterialApp":{"StatefulWidget":[],"Widget":[]},"_MaterialAppState":{"State":["MaterialApp"]},"AppBar":{"StatefulWidget":[],"Widget":[]},"_PreferredAppBarSize":{"Size":[]},"_AppBarState":{"State":["AppBar"]},"_AppBarTitleBox":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[]},"_RenderAppBarTitleBox":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"AbstractNode":[],"HitTestTarget":[]},"MaterialRectArcTween":{"Tween":["Rect?"],"Animatable":["Rect?"],"Tween.T":"Rect?","Animatable.T":"Rect?"},"MaterialPointArcTween":{"Tween":["Offset"],"Animatable":["Offset"],"Tween.T":"Offset","Animatable.T":"Offset"},"MaterialBannerTheme":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[]},"_LerpSides":{"MaterialStateProperty":["BorderSide?"]},"ButtonStyleButton":{"StatefulWidget":[],"Widget":[]},"_ButtonStyleState":{"State":["ButtonStyleButton"]},"_MouseCursor":{"MouseCursor":[],"MaterialStateProperty":["MouseCursor"]},"_InputPadding":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[]},"_RenderInputPadding":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"AbstractNode":[],"HitTestTarget":[]},"Checkbox":{"StatefulWidget":[],"Widget":[]},"_CheckboxState":{"State":["Checkbox"]},"_CheckboxPainter":{"Listenable":[]},"CheckboxTheme":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[]},"MaterialColor":{"ColorSwatch":["int"],"Color":[],"ColorSwatch.T":"int"},"FlexibleSpaceBarSettings":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[]},"_AnimationSwap":{"Animation":["1"],"Listenable":[]},"IconButton":{"StatelessWidget":[],"Widget":[]},"_IconButtonDefaultForeground":{"MaterialStateProperty":["Color?"]},"_IconButtonDefaultOverlay":{"MaterialStateProperty":["Color?"]},"IconButtonTheme":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[]},"InkHighlight":{"InteractiveInkFeature":[],"InkFeature":[]},"InkRipple":{"InteractiveInkFeature":[],"InkFeature":[]},"InkSplash":{"InteractiveInkFeature":[],"InkFeature":[]},"InteractiveInkFeature":{"InkFeature":[]},"_ParentInkResponseProvider":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[]},"_InkResponseStateWidget":{"StatefulWidget":[],"Widget":[]},"InkResponse":{"StatelessWidget":[],"Widget":[]},"_InkResponseState":{"State":["_InkResponseStateWidget"],"_ParentInkResponseState":[]},"InkWell":{"StatelessWidget":[],"Widget":[]},"Material":{"StatefulWidget":[],"Widget":[]},"_RenderInkFeatures":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"AbstractNode":[],"HitTestTarget":[]},"ShapeBorderTween":{"Tween":["ShapeBorder?"],"Animatable":["ShapeBorder?"],"Tween.T":"ShapeBorder?","Animatable.T":"ShapeBorder?"},"_MaterialInterior":{"StatefulWidget":[],"Widget":[]},"_MaterialState":{"State":["Material"]},"_InkFeatures":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[]},"_MaterialInteriorState":{"State":["_MaterialInterior"]},"_ShapeBorderPaint":{"StatelessWidget":[],"Widget":[]},"_ShapeBorderPainter":{"Listenable":[]},"_MaterialLocalizationsDelegate":{"LocalizationsDelegate":["MaterialLocalizations"],"LocalizationsDelegate.T":"MaterialLocalizations"},"DefaultMaterialLocalizations":{"MaterialLocalizations":[]},"MaterialStateMouseCursor":{"MouseCursor":[],"MaterialStateProperty":["MouseCursor"]},"_EnabledAndDisabledMouseCursor":{"MouseCursor":[],"MaterialStateProperty":["MouseCursor"]},"_LerpProperties":{"MaterialStateProperty":["1?"]},"_MaterialStatePropertyWith":{"MaterialStateProperty":["1"]},"MaterialStatePropertyAll":{"MaterialStateProperty":["1"]},"MaterialStatesController":{"Listenable":[]},"_LerpSides0":{"MaterialStateProperty":["BorderSide?"]},"MaterialPageRoute":{"MaterialRouteTransitionMixin":["1"],"ModalRoute":["1"],"TransitionRoute":["1"],"Route":["1"]},"_ZoomEnterTransition":{"StatefulWidget":[],"Widget":[]},"_ZoomExitTransition":{"StatefulWidget":[],"Widget":[]},"_ZoomPageTransition":{"StatelessWidget":[],"Widget":[]},"_ZoomEnterTransitionState":{"State":["_ZoomEnterTransition"]},"_ZoomExitTransitionState":{"State":["_ZoomExitTransition"]},"ZoomPageTransitionsBuilder":{"PageTransitionsBuilder":[]},"CupertinoPageTransitionsBuilder":{"PageTransitionsBuilder":[]},"_ZoomEnterTransitionPainter":{"Listenable":[]},"_ZoomExitTransitionPainter":{"Listenable":[]},"CircularProgressIndicator":{"StatefulWidget":[],"Widget":[]},"ProgressIndicator":{"StatefulWidget":[],"Widget":[]},"_CircularProgressIndicatorPainter":{"Listenable":[]},"_CircularProgressIndicatorState":{"State":["CircularProgressIndicator"]},"ProgressIndicatorTheme":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[]},"ScaffoldMessenger":{"StatefulWidget":[],"Widget":[]},"_ScaffoldMessengerScope":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[]},"_FloatingActionButtonTransition":{"StatefulWidget":[],"Widget":[]},"Scaffold":{"StatefulWidget":[],"Widget":[]},"ScaffoldState":{"State":["Scaffold"]},"_StandardBottomSheet":{"StatefulWidget":[],"Widget":[]},"ScaffoldMessengerState":{"State":["ScaffoldMessenger"]},"_ScaffoldGeometryNotifier":{"Listenable":[]},"_BodyBoxConstraints":{"BoxConstraints":[]},"_BodyBuilder":{"StatelessWidget":[],"Widget":[]},"_FloatingActionButtonTransitionState":{"State":["_FloatingActionButtonTransition"]},"_DismissDrawerAction":{"Action":["DismissIntent"],"Action.T":"DismissIntent"},"_ScaffoldScope":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[]},"_MaterialScrollbar":{"StatefulWidget":[],"Widget":[]},"Scrollbar":{"StatelessWidget":[],"Widget":[]},"_MaterialScrollbarState":{"RawScrollbarState":["_MaterialScrollbar"],"State":["_MaterialScrollbar"]},"ScrollbarTheme":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[]},"Slider":{"StatefulWidget":[],"Widget":[]},"_AdjustSliderIntent":{"Intent":[]},"_SliderState":{"State":["Slider"]},"_SliderRenderObjectWidget":{"RenderObjectWidget":[],"Widget":[]},"_RenderSlider":{"RenderBox":[],"RenderObject":[],"AbstractNode":[],"HitTestTarget":[]},"_ValueIndicatorRenderObjectWidget":{"RenderObjectWidget":[],"Widget":[]},"_RenderValueIndicator":{"RenderBox":[],"RenderObject":[],"AbstractNode":[],"HitTestTarget":[]},"SliderTheme":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[]},"SnackBar":{"StatefulWidget":[],"Widget":[]},"TextButton":{"StatefulWidget":[],"Widget":[]},"_TextButtonDefaultColor":{"MaterialStateProperty":["Color?"]},"_TextButtonDefaultOverlay":{"MaterialStateProperty":["Color?"]},"_TextButtonDefaultMouseCursor":{"MaterialStateProperty":["MouseCursor"]},"TextButtonTheme":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[]},"_InheritedTheme":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[]},"ThemeDataTween":{"Tween":["ThemeData"],"Animatable":["ThemeData"],"Tween.T":"ThemeData","Animatable.T":"ThemeData"},"AnimatedTheme":{"StatefulWidget":[],"Widget":[]},"Theme":{"StatelessWidget":[],"Widget":[]},"_AnimatedThemeState":{"State":["AnimatedTheme"]},"ToggleablePainter":{"Listenable":[]},"Tooltip":{"StatefulWidget":[],"Widget":[]},"TooltipState":{"State":["Tooltip"]},"_TooltipOverlay":{"StatelessWidget":[],"Widget":[]},"TooltipTheme":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[]},"_SystemFontsNotifier":{"Listenable":[]},"OutlinedBorder":{"ShapeBorder":[]},"_CompoundBorder":{"ShapeBorder":[]},"BoxBorder":{"ShapeBorder":[]},"Border":{"ShapeBorder":[]},"BorderDirectional":{"ShapeBorder":[]},"BoxDecoration":{"Decoration":[]},"BoxShadow":{"Shadow":[]},"CircleBorder":{"OutlinedBorder":[],"ShapeBorder":[]},"ColorSwatch":{"Color":[]},"EdgeInsets":{"EdgeInsetsGeometry":[]},"EdgeInsetsDirectional":{"EdgeInsetsGeometry":[]},"_MixedEdgeInsets":{"EdgeInsetsGeometry":[]},"RoundedRectangleBorder":{"OutlinedBorder":[],"ShapeBorder":[]},"_RoundedRectangleToCircleBorder":{"OutlinedBorder":[],"ShapeBorder":[]},"TextSpan":{"InlineSpan":[],"MouseTrackerAnnotation":[],"HitTestTarget":[]},"BoxHitTestResult":{"HitTestResult":[]},"RenderBox":{"RenderObject":[],"AbstractNode":[],"HitTestTarget":[]},"BoxHitTestEntry":{"HitTestEntry":["RenderBox"]},"BoxParentData":{"ParentData":[]},"ContainerBoxParentData":{"BoxParentData":[],"ContainerParentDataMixin":["1"],"ParentData":[]},"MultiChildLayoutParentData":{"BoxParentData":[],"ContainerParentDataMixin":["RenderBox"],"ParentData":[]},"RenderCustomMultiChildLayoutBox":{"RenderBoxContainerDefaultsMixin":["RenderBox","MultiChildLayoutParentData"],"RenderBox":[],"ContainerRenderObjectMixin":["RenderBox","MultiChildLayoutParentData"],"RenderObject":[],"AbstractNode":[],"HitTestTarget":[],"ContainerRenderObjectMixin.1":"MultiChildLayoutParentData","RenderBoxContainerDefaultsMixin.1":"MultiChildLayoutParentData"},"CustomPainter":{"Listenable":[]},"RenderCustomPaint":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"AbstractNode":[],"HitTestTarget":[]},"RenderErrorBox":{"RenderBox":[],"RenderObject":[],"AbstractNode":[],"HitTestTarget":[]},"FlexParentData":{"BoxParentData":[],"ContainerParentDataMixin":["RenderBox"],"ParentData":[]},"RenderFlex":{"RenderBoxContainerDefaultsMixin":["RenderBox","FlexParentData"],"RenderBox":[],"ContainerRenderObjectMixin":["RenderBox","FlexParentData"],"RenderObject":[],"AbstractNode":[],"HitTestTarget":[],"ContainerRenderObjectMixin.1":"FlexParentData","RenderBoxContainerDefaultsMixin.1":"FlexParentData"},"Layer":{"AbstractNode":[]},"ContainerLayer":{"AbstractNode":[]},"ClipRectLayer":{"ContainerLayer":[],"AbstractNode":[]},"TransformLayer":{"OffsetLayer":[],"ContainerLayer":[],"AbstractNode":[]},"OpacityLayer":{"OffsetLayer":[],"ContainerLayer":[],"AbstractNode":[]},"PictureLayer":{"AbstractNode":[]},"OffsetLayer":{"ContainerLayer":[],"AbstractNode":[]},"ClipRRectLayer":{"ContainerLayer":[],"AbstractNode":[]},"ClipPathLayer":{"ContainerLayer":[],"AbstractNode":[]},"LeaderLayer":{"ContainerLayer":[],"AbstractNode":[]},"FollowerLayer":{"ContainerLayer":[],"AbstractNode":[]},"AnnotatedRegionLayer":{"ContainerLayer":[],"AbstractNode":[]},"ListWheelParentData":{"BoxParentData":[],"ContainerParentDataMixin":["RenderBox"],"ParentData":[]},"RenderListWheelViewport":{"RenderBox":[],"ContainerRenderObjectMixin":["RenderBox","ListWheelParentData"],"RenderObject":[],"AbstractNode":[],"HitTestTarget":[],"ContainerRenderObjectMixin.1":"ListWheelParentData"},"MouseTracker":{"Listenable":[]},"RenderObject":{"AbstractNode":[],"HitTestTarget":[]},"ContainerParentDataMixin":{"ParentData":[]},"_RootSemanticsFragment":{"_InterestingSemanticsFragment":[]},"_IncompleteSemanticsFragment":{"_InterestingSemanticsFragment":[]},"_SwitchableSemanticsFragment":{"_InterestingSemanticsFragment":[]},"TextParentData":{"BoxParentData":[],"ContainerParentDataMixin":["RenderBox"],"ParentData":[]},"_SelectableFragment":{"Selectable":[],"Listenable":[]},"RenderParagraph":{"RenderBoxContainerDefaultsMixin":["RenderBox","TextParentData"],"RenderBox":[],"ContainerRenderObjectMixin":["RenderBox","TextParentData"],"RenderObject":[],"AbstractNode":[],"HitTestTarget":[],"ContainerRenderObjectMixin.1":"TextParentData","RenderBoxContainerDefaultsMixin.1":"TextParentData"},"ShapeBorderClipper":{"Listenable":[]},"RenderAbsorbPointer":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"AbstractNode":[],"HitTestTarget":[]},"RenderSemanticsGestureHandler":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"AbstractNode":[],"HitTestTarget":[]},"RenderProxyBox":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"AbstractNode":[],"HitTestTarget":[]},"RenderProxyBoxWithHitTestBehavior":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"AbstractNode":[],"HitTestTarget":[]},"RenderConstrainedBox":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"AbstractNode":[],"HitTestTarget":[]},"RenderLimitedBox":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"AbstractNode":[],"HitTestTarget":[]},"RenderAnimatedOpacity":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"AbstractNode":[],"HitTestTarget":[]},"CustomClipper":{"Listenable":[]},"_RenderCustomClip":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"AbstractNode":[],"HitTestTarget":[]},"RenderClipRect":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"AbstractNode":[],"HitTestTarget":[]},"RenderClipPath":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"AbstractNode":[],"HitTestTarget":[]},"_RenderPhysicalModelBase":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"AbstractNode":[],"HitTestTarget":[]},"RenderPhysicalModel":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"AbstractNode":[],"HitTestTarget":[]},"RenderPhysicalShape":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"AbstractNode":[],"HitTestTarget":[]},"RenderDecoratedBox":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"AbstractNode":[],"HitTestTarget":[]},"RenderTransform":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"AbstractNode":[],"HitTestTarget":[]},"RenderFractionalTranslation":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"AbstractNode":[],"HitTestTarget":[]},"RenderPointerListener":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"AbstractNode":[],"HitTestTarget":[]},"RenderMouseRegion":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"MouseTrackerAnnotation":[],"AbstractNode":[],"HitTestTarget":[]},"RenderRepaintBoundary":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"AbstractNode":[],"HitTestTarget":[]},"RenderIgnorePointer":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"AbstractNode":[],"HitTestTarget":[]},"RenderOffstage":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"AbstractNode":[],"HitTestTarget":[]},"RenderSemanticsAnnotations":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"AbstractNode":[],"HitTestTarget":[]},"RenderBlockSemantics":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"AbstractNode":[],"HitTestTarget":[]},"RenderExcludeSemantics":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"AbstractNode":[],"HitTestTarget":[]},"RenderIndexedSemantics":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"AbstractNode":[],"HitTestTarget":[]},"RenderLeaderLayer":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"AbstractNode":[],"HitTestTarget":[]},"RenderFollowerLayer":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"AbstractNode":[],"HitTestTarget":[]},"RenderAnnotatedRegion":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"AbstractNode":[],"HitTestTarget":[]},"Selectable":{"Listenable":[]},"RenderShiftedBox":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"AbstractNode":[],"HitTestTarget":[]},"RenderPadding":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"AbstractNode":[],"HitTestTarget":[]},"RenderAligningShiftedBox":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"AbstractNode":[],"HitTestTarget":[]},"RenderPositionedBox":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"AbstractNode":[],"HitTestTarget":[]},"RenderCustomSingleChildLayoutBox":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"AbstractNode":[],"HitTestTarget":[]},"RenderBaseline":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"AbstractNode":[],"HitTestTarget":[]},"StackParentData":{"BoxParentData":[],"ContainerParentDataMixin":["RenderBox"],"ParentData":[]},"RenderStack":{"RenderBoxContainerDefaultsMixin":["RenderBox","StackParentData"],"RenderBox":[],"ContainerRenderObjectMixin":["RenderBox","StackParentData"],"RenderObject":[],"AbstractNode":[],"HitTestTarget":[],"ContainerRenderObjectMixin.1":"StackParentData","RenderBoxContainerDefaultsMixin.1":"StackParentData"},"RenderView":{"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"AbstractNode":[],"HitTestTarget":[]},"ViewportOffset":{"Listenable":[]},"TickerFuture":{"Future":["~"]},"TickerCanceled":{"Exception":[]},"SemanticsNode":{"AbstractNode":[]},"SemanticsSortKey":{"Comparable":["SemanticsSortKey"]},"_SemanticsDiagnosticableNode":{"DiagnosticsNode":[]},"SemanticsOwner":{"Listenable":[]},"OrdinalSortKey":{"Comparable":["SemanticsSortKey"]},"KeyDownEvent":{"KeyEvent":[]},"KeyUpEvent":{"KeyEvent":[]},"KeyRepeatEvent":{"KeyEvent":[]},"PlatformException":{"Exception":[]},"MissingPluginException":{"Exception":[]},"_DeferringMouseCursor":{"MouseCursor":[]},"_SystemMouseCursorSession":{"MouseCursorSession":[]},"SystemMouseCursor":{"MouseCursor":[]},"RawKeyDownEvent":{"RawKeyEvent":[]},"RawKeyUpEvent":{"RawKeyEvent":[]},"RestorationManager":{"Listenable":[]},"_PlatformTextInputControl":{"TextInputControl":[]},"Actions":{"StatefulWidget":[],"Widget":[]},"_ActionsScope":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[]},"FocusableActionDetector":{"StatefulWidget":[],"Widget":[]},"VoidCallbackIntent":{"Intent":[]},"DoNothingIntent":{"Intent":[]},"DoNothingAndStopPropagationIntent":{"Intent":[]},"ActivateIntent":{"Intent":[]},"ButtonActivateIntent":{"Intent":[]},"DismissIntent":{"Intent":[]},"PrioritizedIntents":{"Intent":[]},"ContextAction":{"Action":["1"]},"CallbackAction":{"Action":["1"],"Action.T":"1"},"_ActionsState":{"State":["Actions"]},"_FocusableActionDetectorState":{"State":["FocusableActionDetector"]},"VoidCallbackAction":{"Action":["VoidCallbackIntent"],"Action.T":"VoidCallbackIntent"},"DoNothingAction":{"Action":["Intent"],"Action.T":"Intent"},"DismissAction":{"Action":["DismissIntent"]},"PrioritizedAction":{"Action":["PrioritizedIntents"],"Action.T":"PrioritizedIntents"},"_OverridableAction":{"ContextAction":["1"],"_OverridableActionMixin":["1"],"Action":["1"],"Action.T":"1"},"AnnotatedRegion":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[]},"WidgetsApp":{"StatefulWidget":[],"Widget":[]},"_WidgetsAppState":{"State":["WidgetsApp"],"WidgetsBindingObserver":[]},"KeepAliveHandle":{"Listenable":[]},"_NullWidget":{"StatelessWidget":[],"Widget":[]},"Directionality":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[]},"ClipRect":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[]},"CompositedTransformFollower":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[]},"LayoutId":{"ParentDataWidget":["MultiChildLayoutParentData"],"ProxyWidget":[],"Widget":[],"ParentDataWidget.T":"MultiChildLayoutParentData"},"Positioned":{"ParentDataWidget":["StackParentData"],"ProxyWidget":[],"Widget":[],"ParentDataWidget.T":"StackParentData"},"Expanded":{"ParentDataWidget":["FlexParentData"],"ProxyWidget":[],"Widget":[],"ParentDataWidget.T":"FlexParentData"},"DefaultAssetBundle":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[]},"IgnorePointer":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[]},"Semantics":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[]},"_UbiquitousInheritedElement":{"InheritedElement":[],"Element":[],"BuildContext":[]},"_UbiquitousInheritedWidget":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[]},"CustomPaint":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[]},"ClipPath":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[]},"PhysicalModel":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[]},"PhysicalShape":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[]},"Transform":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[]},"CompositedTransformTarget":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[]},"FractionalTranslation":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[]},"Padding":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[]},"Align":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[]},"Center":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[]},"CustomSingleChildLayout":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[]},"CustomMultiChildLayout":{"MultiChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[]},"SizedBox":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[]},"ConstrainedBox":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[]},"LimitedBox":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[]},"Offstage":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[]},"_OffstageElement":{"RenderObjectElement":[],"Element":[],"BuildContext":[]},"Baseline":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[]},"Stack":{"MultiChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[]},"PositionedDirectional":{"StatelessWidget":[],"Widget":[]},"Flex":{"MultiChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[]},"Row":{"MultiChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[]},"Column":{"MultiChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[]},"Flexible":{"ParentDataWidget":["FlexParentData"],"ProxyWidget":[],"Widget":[],"ParentDataWidget.T":"FlexParentData"},"RichText":{"MultiChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[]},"Listener":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[]},"MouseRegion":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[]},"RepaintBoundary":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[]},"AbsorbPointer":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[]},"BlockSemantics":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[]},"ExcludeSemantics":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[]},"IndexedSemantics":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[]},"KeyedSubtree":{"StatelessWidget":[],"Widget":[]},"Builder":{"StatelessWidget":[],"Widget":[]},"ColoredBox":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[]},"_RenderColoredBox":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"AbstractNode":[],"HitTestTarget":[]},"RenderObjectToWidgetAdapter":{"RenderObjectWidget":[],"Widget":[]},"RenderObjectToWidgetElement":{"RenderObjectElement":[],"Element":[],"BuildContext":[]},"WidgetsFlutterBinding":{"SchedulerBinding":[],"HitTestTarget":[]},"DecoratedBox":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[]},"Container":{"StatelessWidget":[],"Widget":[]},"DefaultSelectionStyle":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[]},"_NullWidget0":{"StatelessWidget":[],"Widget":[]},"DefaultTextEditingShortcuts":{"StatelessWidget":[],"Widget":[]},"DualTransitionBuilder":{"StatefulWidget":[],"Widget":[]},"_DualTransitionBuilderState":{"State":["DualTransitionBuilder"]},"FocusNode":{"Listenable":[]},"FocusScopeNode":{"FocusNode":[],"Listenable":[]},"FocusManager":{"Listenable":[]},"Focus":{"StatefulWidget":[],"Widget":[]},"_FocusInheritedScope":{"InheritedNotifier":["FocusNode"],"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"InheritedNotifier.T":"FocusNode"},"_FocusState":{"State":["Focus"]},"FocusScope":{"StatefulWidget":[],"Widget":[]},"_FocusScopeState":{"State":["Focus"]},"FocusTraversalGroup":{"StatefulWidget":[],"Widget":[]},"RequestFocusIntent":{"Intent":[]},"NextFocusIntent":{"Intent":[]},"PreviousFocusIntent":{"Intent":[]},"DirectionalFocusIntent":{"Intent":[]},"_FocusTraversalGroupNode":{"FocusNode":[],"Listenable":[]},"_FocusTraversalGroupState":{"State":["FocusTraversalGroup"]},"RequestFocusAction":{"Action":["RequestFocusIntent"],"Action.T":"RequestFocusIntent"},"NextFocusAction":{"Action":["NextFocusIntent"],"Action.T":"NextFocusIntent"},"PreviousFocusAction":{"Action":["PreviousFocusIntent"],"Action.T":"PreviousFocusIntent"},"DirectionalFocusAction":{"Action":["DirectionalFocusIntent"],"Action.T":"DirectionalFocusIntent"},"GlobalKey":{"Key":[]},"LabeledGlobalKey":{"GlobalKey":["1"],"Key":[]},"StatefulWidget":{"Widget":[]},"Element":{"BuildContext":[]},"StatefulElement":{"Element":[],"BuildContext":[]},"InheritedElement":{"Element":[],"BuildContext":[]},"GlobalObjectKey":{"GlobalKey":["1"],"Key":[]},"StatelessWidget":{"Widget":[]},"ProxyWidget":{"Widget":[]},"ParentDataWidget":{"ProxyWidget":[],"Widget":[]},"InheritedWidget":{"ProxyWidget":[],"Widget":[]},"RenderObjectWidget":{"Widget":[]},"LeafRenderObjectWidget":{"RenderObjectWidget":[],"Widget":[]},"SingleChildRenderObjectWidget":{"RenderObjectWidget":[],"Widget":[]},"MultiChildRenderObjectWidget":{"RenderObjectWidget":[],"Widget":[]},"ErrorWidget":{"RenderObjectWidget":[],"Widget":[]},"ComponentElement":{"Element":[],"BuildContext":[]},"StatelessElement":{"Element":[],"BuildContext":[]},"ProxyElement":{"Element":[],"BuildContext":[]},"ParentDataElement":{"Element":[],"BuildContext":[]},"RenderObjectElement":{"Element":[],"BuildContext":[]},"RootRenderObjectElement":{"RenderObjectElement":[],"Element":[],"BuildContext":[]},"LeafRenderObjectElement":{"RenderObjectElement":[],"Element":[],"BuildContext":[]},"SingleChildRenderObjectElement":{"RenderObjectElement":[],"Element":[],"BuildContext":[]},"MultiChildRenderObjectElement":{"RenderObjectElement":[],"Element":[],"BuildContext":[]},"_NullElement":{"Element":[],"BuildContext":[]},"_NullWidget1":{"Widget":[]},"RawGestureDetector":{"StatefulWidget":[],"Widget":[]},"RawGestureDetectorState":{"State":["RawGestureDetector"]},"GestureRecognizerFactoryWithHandlers":{"GestureRecognizerFactory":["1"]},"GestureDetector":{"StatelessWidget":[],"Widget":[]},"_GestureSemantics":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[]},"Hero":{"StatefulWidget":[],"Widget":[]},"_HeroState":{"State":["Hero"]},"HeroController":{"NavigatorObserver":[]},"Icon":{"StatelessWidget":[],"Widget":[]},"IconTheme":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[]},"BorderRadiusTween":{"Tween":["BorderRadius?"],"Animatable":["BorderRadius?"],"Tween.T":"BorderRadius?","Animatable.T":"BorderRadius?"},"TextStyleTween":{"Tween":["TextStyle0"],"Animatable":["TextStyle0"],"Tween.T":"TextStyle0","Animatable.T":"TextStyle0"},"AnimatedDefaultTextStyle":{"StatefulWidget":[],"Widget":[]},"AnimatedPhysicalModel":{"StatefulWidget":[],"Widget":[]},"DecorationTween":{"Tween":["Decoration"],"Animatable":["Decoration"],"Tween.T":"Decoration","Animatable.T":"Decoration"},"EdgeInsetsTween":{"Tween":["EdgeInsets"],"Animatable":["EdgeInsets"],"Tween.T":"EdgeInsets","Animatable.T":"EdgeInsets"},"ImplicitlyAnimatedWidget":{"StatefulWidget":[],"Widget":[]},"ImplicitlyAnimatedWidgetState":{"State":["1"]},"AnimatedWidgetBaseState":{"State":["1"]},"_AnimatedDefaultTextStyleState":{"State":["AnimatedDefaultTextStyle"]},"_AnimatedPhysicalModelState":{"State":["AnimatedPhysicalModel"]},"InheritedModel":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[]},"InheritedModelElement":{"InheritedElement":[],"Element":[],"BuildContext":[]},"InheritedNotifier":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[]},"_InheritedNotifierElement":{"InheritedElement":[],"Element":[],"BuildContext":[]},"InheritedTheme":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[]},"ConstrainedLayoutBuilder":{"RenderObjectWidget":[],"Widget":[]},"_LayoutBuilderElement":{"RenderObjectElement":[],"Element":[],"BuildContext":[]},"LayoutBuilder":{"ConstrainedLayoutBuilder":["BoxConstraints"],"RenderObjectWidget":[],"Widget":[],"ConstrainedLayoutBuilder.0":"BoxConstraints"},"_RenderLayoutBuilder":{"RenderConstrainedLayoutBuilder":["BoxConstraints","RenderBox"],"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"AbstractNode":[],"HitTestTarget":[],"RenderConstrainedLayoutBuilder.0":"BoxConstraints"},"_FixedExtentScrollPosition":{"ScrollPosition":[],"FixedExtentMetrics":[],"ViewportOffset":[],"Listenable":[],"ScrollMetrics":[]},"ListWheelScrollView":{"StatefulWidget":[],"Widget":[]},"ListWheelViewport":{"RenderObjectWidget":[],"Widget":[]},"FixedExtentScrollController":{"Listenable":[]},"FixedExtentMetrics":{"ScrollMetrics":[]},"_FixedExtentScrollable":{"StatefulWidget":[],"Widget":[]},"_FixedExtentScrollableState":{"State":["Scrollable"]},"_ListWheelScrollViewState":{"State":["ListWheelScrollView"]},"ListWheelElement":{"RenderObjectElement":[],"Element":[],"BuildContext":[]},"_LocalizationsScope":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[]},"Localizations":{"StatefulWidget":[],"Widget":[]},"_WidgetsLocalizationsDelegate":{"LocalizationsDelegate":["WidgetsLocalizations"],"LocalizationsDelegate.T":"WidgetsLocalizations"},"DefaultWidgetsLocalizations":{"WidgetsLocalizations":[]},"_LocalizationsState":{"State":["Localizations"]},"LookupBoundary":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[]},"MediaQuery":{"InheritedModel":["_MediaQueryAspect"],"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"InheritedModel.T":"_MediaQueryAspect"},"_MediaQueryFromView":{"StatefulWidget":[],"Widget":[]},"_MediaQueryFromViewState":{"State":["_MediaQueryFromView"],"WidgetsBindingObserver":[]},"_AnyTapGestureRecognizer":{"GestureRecognizer":[],"GestureArenaMember":[]},"ModalBarrier":{"StatelessWidget":[],"Widget":[]},"_AnyTapGestureRecognizerFactory":{"GestureRecognizerFactory":["_AnyTapGestureRecognizer"]},"_ModalBarrierGestureDetector":{"StatelessWidget":[],"Widget":[]},"NavigationToolbar":{"StatelessWidget":[],"Widget":[]},"Page":{"RouteSettings":[]},"HeroControllerScope":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[]},"Navigator":{"StatefulWidget":[],"Widget":[]},"NavigatorState":{"State":["Navigator"]},"_NotAnnounced":{"Route":["~"]},"_NavigatorPushObservation":{"_NavigatorObservation":[]},"_NavigatorPopObservation":{"_NavigatorObservation":[]},"_NavigatorRemoveObservation":{"_NavigatorObservation":[]},"_NavigatorReplaceObservation":{"_NavigatorObservation":[]},"_HistoryProperty":{"RestorableProperty":["Map<String?,List<Object>>?"],"Listenable":[]},"NotificationListener":{"ProxyWidget":[],"Widget":[]},"_NotificationElement":{"Element":[],"BuildContext":[]},"OverlayEntry":{"Listenable":[]},"_OverlayEntryWidget":{"StatefulWidget":[],"Widget":[]},"_OverlayEntryWidgetState":{"State":["_OverlayEntryWidget"]},"Overlay":{"StatefulWidget":[],"Widget":[]},"OverlayState":{"State":["Overlay"]},"_RenderTheater":{"RenderBox":[],"ContainerRenderObjectMixin":["RenderBox","StackParentData"],"RenderObject":[],"AbstractNode":[],"HitTestTarget":[],"ContainerRenderObjectMixin.1":"StackParentData"},"_Theater":{"MultiChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[]},"_TheaterElement":{"RenderObjectElement":[],"Element":[],"BuildContext":[]},"_TheaterParentData":{"StackParentData":[],"BoxParentData":[],"ContainerParentDataMixin":["RenderBox"],"ParentData":[]},"_RenderTheaterMarker":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[]},"GlowingOverscrollIndicator":{"StatefulWidget":[],"Widget":[]},"StretchingOverscrollIndicator":{"StatefulWidget":[],"Widget":[]},"_GlowingOverscrollIndicatorState":{"State":["GlowingOverscrollIndicator"]},"_GlowController":{"Listenable":[]},"_GlowingOverscrollIndicatorPainter":{"Listenable":[]},"_StretchingOverscrollIndicatorState":{"State":["StretchingOverscrollIndicator"]},"_StretchController":{"Listenable":[]},"PageStorageKey":{"ValueKey":["1"],"Key":[]},"PageStorage":{"StatelessWidget":[],"Widget":[]},"PageRoute":{"ModalRoute":["1"],"TransitionRoute":["1"],"Route":["1"]},"PrimaryScrollController":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[]},"RestorationScope":{"StatefulWidget":[],"Widget":[]},"UnmanagedRestorationScope":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[]},"RootRestorationScope":{"StatefulWidget":[],"Widget":[]},"RestorableProperty":{"Listenable":[]},"_RestorationScopeState":{"State":["RestorationScope"]},"_RootRestorationScopeState":{"State":["RootRestorationScope"]},"RestorableValue":{"RestorableProperty":["1"],"Listenable":[]},"_RestorablePrimitiveValueN":{"RestorableValue":["1"],"RestorableProperty":["1"],"Listenable":[]},"_RestorablePrimitiveValue":{"_RestorablePrimitiveValueN":["1"],"RestorableValue":["1"],"RestorableProperty":["1"],"Listenable":[]},"RestorableNum":{"_RestorablePrimitiveValueN":["1"],"RestorableValue":["1"],"RestorableProperty":["1"],"Listenable":[],"_RestorablePrimitiveValueN.T":"1","RestorableValue.T":"1"},"RestorableBool":{"_RestorablePrimitiveValueN":["bool"],"RestorableValue":["bool"],"RestorableProperty":["bool"],"Listenable":[],"_RestorablePrimitiveValueN.T":"bool","RestorableValue.T":"bool"},"Router":{"StatefulWidget":[],"Widget":[]},"ChildBackButtonDispatcher":{"_CallbackHookProvider":["Future<bool>"]},"_RouterState":{"State":["Router<1>"]},"_RouterScope":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[]},"_RestorableRouteInformation":{"RestorableValue":["RouteInformation?"],"RestorableProperty":["RouteInformation?"],"Listenable":[],"RestorableValue.T":"RouteInformation?"},"_ModalScopeStatus":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[]},"_ModalScope":{"StatefulWidget":[],"Widget":[]},"_ModalScopeState":{"State":["_ModalScope<1>"]},"OverlayRoute":{"Route":["1"]},"TransitionRoute":{"Route":["1"]},"_DismissModalAction":{"Action":["DismissIntent"],"Action.T":"DismissIntent"},"ModalRoute":{"TransitionRoute":["1"],"Route":["1"]},"SafeArea":{"StatelessWidget":[],"Widget":[]},"ScrollConfiguration":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[]},"ScrollController":{"Listenable":[]},"FixedScrollMetrics":{"ScrollMetrics":[]},"ScrollNotification":{"LayoutChangedNotification":[]},"ScrollEndNotification":{"ScrollNotification":[],"LayoutChangedNotification":[]},"ScrollStartNotification":{"ScrollNotification":[],"LayoutChangedNotification":[]},"ScrollUpdateNotification":{"ScrollNotification":[],"LayoutChangedNotification":[]},"OverscrollNotification":{"ScrollNotification":[],"LayoutChangedNotification":[]},"UserScrollNotification":{"ScrollNotification":[],"LayoutChangedNotification":[]},"_ScrollNotificationObserverScope":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[]},"_ListenerEntry":{"LinkedListEntry":["_ListenerEntry"],"LinkedListEntry.E":"_ListenerEntry"},"ScrollNotificationObserver":{"StatefulWidget":[],"Widget":[]},"ScrollNotificationObserverState":{"State":["ScrollNotificationObserver"]},"_ConvertedScrollMetricsNotification":{"ScrollNotification":[],"LayoutChangedNotification":[]},"ScrollPosition":{"ViewportOffset":[],"Listenable":[],"ScrollMetrics":[]},"ScrollPositionWithSingleContext":{"ScrollPosition":[],"ViewportOffset":[],"Listenable":[],"ScrollMetrics":[]},"Scrollable":{"StatefulWidget":[],"Widget":[]},"_ScrollableScope":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[]},"_ScrollableSelectionHandler":{"StatefulWidget":[],"Widget":[]},"ScrollIntent":{"Intent":[]},"ScrollableState":{"State":["Scrollable"]},"_ScrollableSelectionHandlerState":{"State":["_ScrollableSelectionHandler"]},"_ScrollableSelectionContainerDelegate":{"Listenable":[]},"_ScrollSemantics":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[]},"_RenderScrollSemantics":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"AbstractNode":[],"HitTestTarget":[]},"ScrollAction":{"Action":["ScrollIntent"],"Action.T":"ScrollIntent"},"_RestorableScrollOffset":{"RestorableValue":["double?"],"RestorableProperty":["double?"],"Listenable":[],"RestorableValue.T":"double?"},"RawScrollbar":{"StatefulWidget":[],"Widget":[]},"_ThumbPressGestureRecognizer":{"LongPressGestureRecognizer":[],"GestureRecognizer":[],"GestureArenaMember":[]},"_TrackTapGestureRecognizer":{"TapGestureRecognizer":[],"GestureRecognizer":[],"GestureArenaMember":[]},"ScrollbarPainter":{"Listenable":[]},"RawScrollbarState":{"State":["1"]},"MultiSelectableSelectionContainerDelegate":{"Listenable":[]},"SelectionContainer":{"StatefulWidget":[],"Widget":[]},"SelectionRegistrarScope":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[]},"_SelectionContainerState":{"Selectable":[],"State":["SelectionContainer"],"Listenable":[]},"SelectionContainerDelegate":{"Listenable":[]},"SharedAppData":{"StatefulWidget":[],"Widget":[]},"_SharedAppDataState":{"State":["SharedAppData"]},"_SharedAppModel":{"InheritedModel":["Object"],"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"InheritedModel.T":"Object"},"SingleActivator":{"ShortcutActivator":[]},"Shortcuts":{"StatefulWidget":[],"Widget":[]},"ShortcutRegistrar":{"StatefulWidget":[],"Widget":[]},"ShortcutManager":{"Listenable":[]},"_ShortcutsState":{"State":["Shortcuts"]},"ShortcutRegistry":{"Listenable":[]},"_ShortcutRegistrarState":{"State":["ShortcutRegistrar"]},"_ShortcutRegistrarScope":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[]},"SnapshotController":{"Listenable":[]},"SnapshotWidget":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[]},"_RenderSnapshotWidget":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"AbstractNode":[],"HitTestTarget":[]},"SnapshotPainter":{"Listenable":[]},"_DefaultSnapshotPainter":{"Listenable":[]},"RenderTapRegion":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"AbstractNode":[],"HitTestTarget":[]},"TapRegionSurface":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[]},"RenderTapRegionSurface":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"AbstractNode":[],"HitTestTarget":[]},"DefaultTextStyle":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[]},"DefaultTextHeightBehavior":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[]},"_NullWidget2":{"StatelessWidget":[],"Widget":[]},"Text":{"StatelessWidget":[],"Widget":[]},"DoNothingAndStopPropagationTextIntent":{"Intent":[]},"DirectionalTextEditingIntent":{"Intent":[]},"DeleteCharacterIntent":{"Intent":[]},"DeleteToNextWordBoundaryIntent":{"Intent":[]},"DeleteToLineBreakIntent":{"Intent":[]},"DirectionalCaretMovementIntent":{"Intent":[]},"ExtendSelectionByCharacterIntent":{"Intent":[]},"ExtendSelectionToNextWordBoundaryIntent":{"Intent":[]},"ExtendSelectionToNextWordBoundaryOrCaretLocationIntent":{"Intent":[]},"ExpandSelectionToDocumentBoundaryIntent":{"Intent":[]},"ExpandSelectionToLineBreakIntent":{"Intent":[]},"ExtendSelectionToLineBreakIntent":{"Intent":[]},"ExtendSelectionVerticallyToAdjacentLineIntent":{"Intent":[]},"ExtendSelectionVerticallyToAdjacentPageIntent":{"Intent":[]},"ExtendSelectionToNextParagraphBoundaryIntent":{"Intent":[]},"ExtendSelectionToNextParagraphBoundaryOrCaretLocationIntent":{"Intent":[]},"ExtendSelectionToDocumentBoundaryIntent":{"Intent":[]},"ScrollToDocumentBoundaryIntent":{"Intent":[]},"SelectAllTextIntent":{"Intent":[]},"CopySelectionTextIntent":{"Intent":[]},"PasteTextIntent":{"Intent":[]},"RedoTextIntent":{"Intent":[]},"UndoTextIntent":{"Intent":[]},"TransposeCharactersIntent":{"Intent":[]},"TickerMode":{"StatefulWidget":[],"Widget":[]},"_EffectiveTickerMode":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[]},"_TickerModeState":{"State":["TickerMode"]},"Title":{"StatelessWidget":[],"Widget":[]},"AnimatedWidget":{"StatefulWidget":[],"Widget":[]},"_AnimatedState":{"State":["AnimatedWidget"]},"SlideTransition":{"StatefulWidget":[],"Widget":[]},"ScaleTransition":{"StatefulWidget":[],"Widget":[]},"RotationTransition":{"StatefulWidget":[],"Widget":[]},"FadeTransition":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[]},"DecoratedBoxTransition":{"StatefulWidget":[],"Widget":[]},"ListenableBuilder":{"StatefulWidget":[],"Widget":[]},"AnimatedBuilder":{"StatefulWidget":[],"Widget":[]},"_ViewScope":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[]},"View":{"StatelessWidget":[],"Widget":[]},"MyHomePage":{"StatefulWidget":[],"Widget":[]},"_LayoutWidget":{"StatefulWidget":[],"Widget":[]},"MyApp":{"StatelessWidget":[],"Widget":[]},"_MyHomePageState":{"State":["MyHomePage"]},"_LayoutWidgetState":{"State":["_LayoutWidget"]},"_LeafWidget":{"StatelessWidget":[],"Widget":[]},"CupertinoUserInterfaceLevel":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[]},"MaterialBanner":{"StatefulWidget":[],"Widget":[]},"DrawerController":{"StatefulWidget":[],"Widget":[]},"DrawerControllerState":{"State":["DrawerController"]},"_TooltipVisibilityScope":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[]},"PlaceholderSpan":{"InlineSpan":[]}}'));
  A._Universe_addErasedTypes(init.typeUniverse, JSON.parse('{"WhereIterator":1,"SkipIterator":1,"SkipWhileIterator":1,"EmptyIterator":1,"FollowedByIterator":1,"FixedLengthListMixin":1,"UnmodifiableListMixin":1,"UnmodifiableListBase":1,"__CastListBase__CastIterableBase_ListMixin":2,"ConstantSet":1,"LinkedHashMapKeyIterator":1,"LinkedHashMapValueIterator":1,"NativeTypedArray":1,"_SyncStarIterator":1,"_AsyncStreamControllerDispatch":1,"_ControllerSubscription":1,"_BufferingStreamSubscription":1,"_StreamImpl":1,"_DelayedEvent":1,"_DelayedData":1,"_PendingEvents":1,"_StreamIterator":1,"_UnmodifiableMapMixin":2,"MapView":2,"_SplayTreeNode":2,"_SplayTreeMap__SplayTree_MapMixin":2,"_SplayTreeSet__SplayTree_Iterable":1,"_SplayTreeSet__SplayTree_Iterable_SetMixin":1,"_UnmodifiableMapView_MapView__UnmodifiableMapMixin":2,"Codec":2,"Converter":2,"Comparable":1,"Expando":1,"AnimationWithParentMixin":1,"CompoundAnimation":1,"_CompoundAnimation_Animation_AnimationLazyListenerMixin":1,"_CompoundAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin":1,"_CompoundAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin":1,"ParametricCurve":1,"__AnimatedEvaluation_Animation_AnimationWithParentMixin":1,"_CupertinoBackGestureController":1,"ValueNotifier":1,"DiagnosticsProperty":1,"DiagnosticableNode":1,"PersistentHashMap":2,"_MaterialPageRoute_PageRoute_MaterialRouteTransitionMixin":1,"ToggleableStateMixin":1,"ContainerBoxParentData":1,"_ContainerBoxParentData_BoxParentData_ContainerParentDataMixin":1,"LayerHandle":1,"ContainerParentDataMixin":1,"RenderProxyBoxMixin":1,"RenderAnimatedOpacityMixin":1,"CustomClipper":1,"_RenderCustomClip":1,"_RenderPhysicalModelBase":1,"_TaskEntry":1,"__OverridableAction_ContextAction__OverridableActionMixin":1,"AutomaticKeepAliveClientMixin":1,"ImplicitlyAnimatedWidgetState":1,"AnimatedWidgetBaseState":1,"_ImplicitlyAnimatedWidgetState_State_SingleTickerProviderStateMixin":1,"Page":1,"TransitionDelegate":1,"DefaultTransitionDelegate":1,"PageStorageKey":1,"PageRoute":1,"RestorableProperty":1,"RestorationMixin":1,"_RestorablePrimitiveValue":1,"__RouterState_State_RestorationMixin":1,"OverlayRoute":1,"LocalHistoryRoute":1,"_ModalRoute_TransitionRoute_LocalHistoryRoute":1,"_RawScrollbarState_State_TickerProviderStateMixin":1,"SingleTickerProviderStateMixin":1,"TickerProviderStateMixin":1}'));
  var string$ = {
    x00_____: "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\u03f6\x00\u0404\u03f4 \u03f4\u03f6\u01f6\u01f6\u03f6\u03fc\u01f4\u03ff\u03ff\u0584\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u05d4\u01f4\x00\u01f4\x00\u0504\u05c4\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u0400\x00\u0400\u0200\u03f7\u0200\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u0200\u0200\u0200\u03f7\x00",
    x10__0__: "\x10@\x100@@\xa0\x80 0P`pPP\xb1\x10@\x100@@\xa0\x80 0P`pPP\xb0\x11@\x100@@\xa0\x80 0P`pPP\xb0\x10@\x100@@\xa0\x80 1P`pPP\xb0\x10A\x101AA\xa1\x81 1QaqQQ\xb0\x10@\x100@@\xa0\x80 1Q`pPP\xb0\x10@\x100@@\xa0\x80 1QapQP\xb0\x10@\x100@@\xa0\x80 1PaqQQ\xb0\x10\xe0\x100@@\xa0\x80 1P`pPP\xb0\xb1\xb1\xb1\xb1\x91\xb1\xc1\x81\xb1\xb1\xb1\xb1\xb1\xb1\xb1\xb1\x10@\x100@@\xd0\x80 1P`pPP\xb0\x11A\x111AA\xa1\x81!1QaqQQ\xb1\x10@\x100@@\x90\x80 1P`pPP\xb0",
    x200_000: " 0\x10000\xa0\x80\x10@P`p`p\xb1 0\x10000\xa0\x80\x10@P`p`p\xb0 0\x10000\xa0\x80\x11@P`p`p\xb0 1\x10011\xa0\x80\x10@P`p`p\xb0 1\x10111\xa1\x81\x10AQaqaq\xb0 1\x10011\xa0\x80\x10@Qapaq\xb0 1\x10011\xa0\x80\x10@Paq`p\xb0 1\x10011\xa0\x80\x10@P`q`p\xb0 \x91\x100\x811\xa0\x80\x10@P`p`p\xb0 1\x10011\xa0\x81\x10@P`p`p\xb0 1\x100111\x80\x10@P`p`p\xb0!1\x11111\xa1\x81\x11AQaqaq\xb1",
    xs3#7333333339433333333333333CDDDDDDDDDDDDDDDDDDDDDDC433DDDDD4DDDDDDDDDDDDDDDDDD3CU33333333333333333333333333334T5333333333333333333333333333CCD3D33CD533333333333333333333333TEDTET53U5UE3333C33333333333333333333333333333CETUTDT5333333333333333333333333SUUUUUEUDDDDD43333433333333333333333333ET533E3333SDD3U3U4333343333C4333333333333CSD33343333333433333333333333333SUUUEDDDTE4333SDDSUSU\x94333343333C43333333333333333s333333333337333333333333wwwww73sw33sww7swwwwwss33373733s33333w33333\xa3\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xba\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xcb\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xec\xee\xde\xee\xee\xee\xee\xee\xee\xee\xee\xee\xee\xee\xee\xee\xde\xee\xee\xee\xee\xee\xee\xee\xee\xee\xee\xee\xee\xee\xde\xee\xee\xee\xee\xee\xee\xee\xee\xee\xee\xee\xee\xee>33333\xb3\xbb\xbb\xbb\xbb\xbb\xbb\xbb;3\xc3\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc334343C33333333333SET333333333333333EDTETD433333333CD33333333333333CD33333CDD4333333333333333333333333CDTDDDCTE43C4CD3C333333333333333D3C33333\x99\x99\x9933333DDDDD42333333333333333333CDDD4333333333333333333333333DDDD433334333C53333333333333333333333C33TEDCSUUU433333333S533333333333333333333333333333CD4DDDDD3D5333333333333333333333333333CSEUCUSE4333D33333C43333333333333CDDD9DDD3DCD433333333CDCDDDDDDEDDD33433C3E433#""""\x82" """"""""2333333333333333CDUUDU53SEUUUD43SDD3U3U4333C43333C43333333333333SE43CD33333333DD33333CDDDDDDDDDD3333333343333333B!233333333333#"""333333sxs73333s33333333333""""""""3333333373s333333333333333333333333333333CTDDDTU5D4DD333C433333D33333333333333DU433333333333333333333DDDUDUD3333S3333333333333333334333333333333s733333s33333333333CD4DDDD4D4DD4333333333sww73333333w3333333333sw3333s33333337333333sw333333333s733333333333333333UTEUS433333333C433333333333333C433333333333334443SUE4333333333333CDDDDDDDD4333333DDDDDT533333\xa3\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa3SDDDDUUT5DDD43333C43333333333333333C33333333333EEDDDCC3DDDDUUUDDDDD3T5333333333333333333333333333CSDDD433E533333333333333333333333333DDDDDDD4333333333333333333333333333CD53333333333333333333333UEDTE4\x933333333\x933333333333333333333333333D433333333333333333CDDEDDD43333333S5333333333333333333333C333333D533333333333333333333333SUDDDDT5\x9933CD433333333333333333333333333333333333333333333333UEDUTD33343333333333333333333333333333333333333333333333333333333333333333333333333333333CUEDDD43333333333DU333333333333333333333333333C4TTU5S5SU3333C33333U3DDD43DD4333333333333333333333333333333333333333333333333333333333333333333333DDDDDDD533333333333333333333333DDDTTU43333333333333333333333333333DDD733333s373ss33w7733333ww733333333333ss33333333333333333333333333333ww3333333333333333333333333333wwww33333www33333333333333333333wwww333333333333333wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww333333wwwwwwwwwwwwwwwwwwwwwww7wwwwwswwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww7333swwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww733333333333333333333333swwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww7333333333333333333333333333333333333333333333333333333333swwwww7333333333333333333333333333333333333333333wwwwwwwwwwwwwwwwwwwww7wwwwwwswwwwwwwwwwwwwwwwwwwww73333swwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww7333333w7333333333333333733333333333333333333333333333sww733333s7333333s3wwwww333333333wwwwwwwwwwwwwwwwwwwwwwwwwwwwgffffffffffff6wwwwwww73333s33333333337swwwwsw73333wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwDDDDDDDDDDDDDDDDDDDDDDDD33333333DDDDDDDD33333333DDDDDDDDDDDDDDDD43333333DC44333333333333333333333333333SUDDDDTD33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333UED4CTUE3S33333333333333DDDDD33333333333333333333DDD\x95DD333343333DDDUD43333333333333333333\x93\x99\xxx03',
    x22recor: '"recorder" must not already be associated with another Canvas.',
    Error_: "Error handler must accept one Object or one Object and a StackTrace as arguments, and return a value of the returned future's type",
    max_mu: "max must be in range 0 < max \u2264 2^32, was ",
    u0e3b_____: "\u0e3b\u1cdb\u05d0\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b \u389c\u102b\u102b\u102b\u102b\u489c\u102b\u102b\u102b\u0620\u392b\u0c26\u0efa\u102b\u0dcb\u0601\u3e7e\u228f\u0c77\u24d3\u40b2\u102b\u1d51\u0f6f\u2681\u0698\u0851\u0d63\u0be6\u0d63\u1d2a\u06d5\u0e9b\u0771\u075c\u2b98\u23fe\u2707\u0da1\u2a52\u08eb\u0d13\u0ce3\u2712\u0c62\u4d9d\u0b97\u25cb\u2b21\u0659\u42c5\u0baa\u0ec5\u088d\u102b\u09b9\u09d9\u09f9\u0a21\u102b\u102b\u102b\u102b\u102b\u40ae\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u0b5f\u25b1\u23c1\u07f5\u0fe2\u102b\u269e\u102b\u0e5b\u102b\u102b\u102b\u2427\u26c9\u275a\u102b\u2b5c\u0fad\u0b31\u0789\u08ab\u102b\u102b\u0dfb\u102b\u102b\u102b\u1d74\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u0f2f\u2372\u102b\u38ec\u090f\u102b\u2501\u102b\u102b\u102b\u102b\u102b\u24a9\u102b\u35c8\u0939\u102b\u102b\u102b\u23b5\u102b\u102b\u2345\u2c27\u3457\u2d9d\u3491\u2d9d\u0979\u2be5\u252c\u102b\u102b\u102b\u102b\u102b\u233b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u2566\u23a2\u102b\u102b\u102b\u102b\u102b\u409c\u102b\u428c\u102b\u3db9\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u2bac\u102b\u16c9\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u2c0e\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u0d24\u4c95\u4c83\u102b\u102b\u102b\u102b\u0b0c\u102b\u07bb\u2609\u0c43\u2641\u071f\u2483\u2443\u0cb1\u06e1\u0811\u102b\u102b\u102b\u2583\u0a65\u0a6d\u0a75\u0a61\u0a69\u0a71\u0a79\u0a65\u0a6d\u0a75\u0a61\u0a69\u0a71\u0a79\u0a65\u0a6d\u0a75\u0a61\u0a69\u0a71\u0a79\u0a65\u0a6d\u0a75\u0a61\u0a69\u0a71\u0a79\u0a65\u0a6d\u0a75\u0a61\u0a69\u0a71\u0a79\u0a65\u0a6d\u0a75\u0a61\u0a69\u0a71\u0a79\u0a65\u0a6d\u0a75\u0a61\u0a69\u0a71\u0a79\u0a65\u0a6d\u0a75\u0a61\u0a69\u0a71\u0a79\u0a65\u0a6d\u0a75\u0a61\u0a69\u0a71\u0a79\u0a65\u0a6d\u0a75\u0a61\u0a69\u0a71\u0a79\u0a65\u0a6d\u0a75\u0a61\u0a69\u0a71\u0a79\u0a65\u0a6d\u0a75\u0a61\u0a69\u0a71\u0a79\u0a65\u0a6d\u0a75\u0a61\u0a69\u0a71\u0a79\u0a65\u0a6d\u0a75\u0a61\u0a69\u0a71\u0a79\u0a65\u0a6d\u0a75\u0a61\u0a69\u0a71\u0a79\u0a65\u0a6d\u0a75\u0a61\u0a69\u0a71\u0a79\u0a65\u0a6d\u0a75\u0a61\u0a69\u0a71\u0a79\u0a65\u0a6d\u0a75\u0a61\u0a69\u0a71\u0a79\u0a65\u0a6d\u0a75\u0a61\u0a69\u0a71\u0a79\u0a65\u0a6d\u0a75\u0a61\u0a69\u0a71\u0a79\u0a65\u0a6d\u0a75\u0a61\u0a69\u0a71\u0a79\u0a65\u0a6d\u0a75\u0a61\u0a69\u0a71\u0a79\u0a65\u0a6d\u0a75\u0a61\u0a69\u0a71\u0a79\u0a65\u0a6d\u0a75\u0a61\u0a69\u0a71\u0a79\u0a65\u0a6d\u0a75\u0a61\u0a69\u0a71\u0a95\u0ace\u01f0\u01f0\u01f0\u01f0\u01f0\u01f0\u01f0\u01f0\u01f0\u01f0\u01f0\u01f0\u01f0\u01f0\u01f0\u01f0\u01f0\u01f0\u01f0\u01f0\u01f0\u01f0\u01f0\u01f0\u01f0\u01f0\u01f0\u01f0\u01f0\u01f0\u01f0\u01f0\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u42ad\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u38bc\u102b\u102b\u1cdb\u102b\u102b\u4c95\u1cea\u40ce\u102b\u49ce\u1f6f\u2752\u1506\u393f\u449f\u102b\u102b\u102b\u102b\u102b\u0ff2\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u113b\u191a\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u1869\u102b\u102b\u102b\u102b\u3e89\u102b\u3bd9\u102b\u1da7\u102b\u47cf\u102b\u34a1\u305d\u2c56\u2d9d\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\x00\u01f0\u01f0\u01f0\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b\u102b"
  };
  var type$ = (function rtii() {
    var findType = A.findType;
    return {
      ActionIconTheme: findType("ActionIconTheme"),
      Action_Intent: findType("Action<Intent>"),
      AlignmentGeometry: findType("AlignmentGeometry"),
      Animation_Offset: findType("Animation<Offset>"),
      Animation_double: findType("Animation<double>"),
      AnnotatedRegion_SystemUiOverlayStyle: findType("AnnotatedRegion<SystemUiOverlayStyle>"),
      AssertionError: findType("AssertionError"),
      BasicMessageChannel_nullable_Object: findType("BasicMessageChannel<Object?>"),
      BorderRadius: findType("BorderRadius"),
      BoxConstraints: findType("BoxConstraints"),
      BoxParentData: findType("BoxParentData"),
      ByteData: findType("ByteData"),
      CallbackAction_ActivateIntent: findType("CallbackAction<ActivateIntent>"),
      CallbackAction_ButtonActivateIntent: findType("CallbackAction<ButtonActivateIntent>"),
      CallbackAction__AdjustSliderIntent: findType("CallbackAction<_AdjustSliderIntent>"),
      CastList_of_nullable_Route_dynamic_and_Route_dynamic: findType("CastList<Route<@>?,Route<@>>"),
      CheckboxTheme: findType("CheckboxTheme"),
      ClearSelectionEvent: findType("ClearSelectionEvent"),
      Color: findType("Color"),
      ConstantMapView_Symbol_dynamic: findType("ConstantMapView<Symbol0,@>"),
      ContainerRenderObjectMixin_of_RenderObject_and_ContainerParentDataMixin_RenderObject: findType("ContainerRenderObjectMixin<RenderObject,ContainerParentDataMixin<RenderObject>>"),
      CupertinoLocalizations: findType("CupertinoLocalizations"),
      CupertinoUserInterfaceLevel: findType("CupertinoUserInterfaceLevel"),
      CurveTween: findType("CurveTween"),
      CustomPaint: findType("CustomPaint"),
      CustomSemanticsAction: findType("CustomSemanticsAction"),
      DefaultAssetBundle: findType("DefaultAssetBundle"),
      DefaultSelectionStyle: findType("DefaultSelectionStyle"),
      DefaultTextHeightBehavior: findType("DefaultTextHeightBehavior"),
      DefaultTextStyle: findType("DefaultTextStyle"),
      DiagnosticsNode: findType("DiagnosticsNode"),
      Directionality: findType("Directionality"),
      DirectionallyExtendSelectionEvent: findType("DirectionallyExtendSelectionEvent"),
      DragStartDetails: findType("DragStartDetails"),
      DragUpdateDetails: findType("DragUpdateDetails"),
      Duration: findType("Duration"),
      EfficientLengthIterable_dynamic: findType("EfficientLengthIterable<@>"),
      Element: findType("Element"),
      EngineLayer: findType("EngineLayer"),
      Error: findType("Error"),
      Exception: findType("Exception"),
      FixedExtentMetrics: findType("FixedExtentMetrics"),
      FlexParentData: findType("FlexParentData"),
      FlexibleSpaceBarSettings: findType("FlexibleSpaceBarSettings"),
      Float32List: findType("Float32List"),
      Float64List: findType("Float64List"),
      FocusNode: findType("FocusNode"),
      FocusScopeNode: findType("FocusScopeNode"),
      FontFeature: findType("FontFeature"),
      Function: findType("Function"),
      Future_bool_Function: findType("Future<bool>()"),
      Future_dynamic: findType("Future<@>"),
      Future_nullable_ByteData: findType("Future<ByteData?>"),
      Future_void: findType("Future<~>"),
      GeneralConstantMap_ShortcutActivator_Intent: findType("GeneralConstantMap<ShortcutActivator,Intent>"),
      GeneralConstantSet_MaterialState: findType("GeneralConstantSet<MaterialState>"),
      GestureArenaEntry: findType("GestureArenaEntry"),
      GestureRecognizer: findType("GestureRecognizer"),
      GestureRecognizerFactoryWithHandlers_DoubleTapGestureRecognizer: findType("GestureRecognizerFactoryWithHandlers<DoubleTapGestureRecognizer>"),
      GestureRecognizerFactoryWithHandlers_HorizontalDragGestureRecognizer: findType("GestureRecognizerFactoryWithHandlers<HorizontalDragGestureRecognizer>"),
      GestureRecognizerFactoryWithHandlers_LongPressGestureRecognizer: findType("GestureRecognizerFactoryWithHandlers<LongPressGestureRecognizer>"),
      GestureRecognizerFactoryWithHandlers_PanGestureRecognizer: findType("GestureRecognizerFactoryWithHandlers<PanGestureRecognizer>"),
      GestureRecognizerFactoryWithHandlers_TapGestureRecognizer: findType("GestureRecognizerFactoryWithHandlers<TapGestureRecognizer>"),
      GestureRecognizerFactoryWithHandlers_VerticalDragGestureRecognizer: findType("GestureRecognizerFactoryWithHandlers<VerticalDragGestureRecognizer>"),
      GestureRecognizerFactoryWithHandlers__ThumbPressGestureRecognizer: findType("GestureRecognizerFactoryWithHandlers<_ThumbPressGestureRecognizer>"),
      GestureRecognizerFactoryWithHandlers__TrackTapGestureRecognizer: findType("GestureRecognizerFactoryWithHandlers<_TrackTapGestureRecognizer>"),
      GestureRecognizerFactory_GestureRecognizer: findType("GestureRecognizerFactory<GestureRecognizer>"),
      GlobalKey_State_StatefulWidget: findType("GlobalKey<State<StatefulWidget>>"),
      GlobalObjectKey_NavigatorState: findType("GlobalObjectKey<NavigatorState>"),
      GlobalObjectKey_State_StatefulWidget: findType("GlobalObjectKey<State<StatefulWidget>>"),
      GranularlyExtendSelectionEvent: findType("GranularlyExtendSelectionEvent"),
      HashedObserverList_of_void_Function_FocusHighlightMode: findType("HashedObserverList<~(FocusHighlightMode)>"),
      HeapPriorityQueue__TaskEntry_dynamic: findType("HeapPriorityQueue<_TaskEntry<@>>"),
      Hero: findType("Hero"),
      HeroControllerScope: findType("HeroControllerScope"),
      HitTestEntry_HitTestTarget: findType("HitTestEntry<HitTestTarget>"),
      HitTestResult: findType("HitTestResult"),
      HitTestTarget: findType("HitTestTarget"),
      IconButtonTheme: findType("IconButtonTheme"),
      IconTheme: findType("IconTheme"),
      IndexedSlot_nullable_Element: findType("IndexedSlot<Element?>"),
      InheritedElement: findType("InheritedElement"),
      InheritedWidget: findType("InheritedWidget"),
      Int32List: findType("Int32List"),
      IntTween: findType("IntTween"),
      Intent: findType("Intent"),
      InteractiveInkFeature: findType("InteractiveInkFeature"),
      InteractiveInkFeatureFactory: findType("InteractiveInkFeatureFactory"),
      JSArray_AttributedString: findType("JSArray<AttributedString>"),
      JSArray_BoxShadow: findType("JSArray<BoxShadow>"),
      JSArray_Color: findType("JSArray<Color>"),
      JSArray_Conic: findType("JSArray<Conic>"),
      JSArray_ContainerLayer: findType("JSArray<ContainerLayer>"),
      JSArray_DiagnosticsNode: findType("JSArray<DiagnosticsNode>"),
      JSArray_Directionality: findType("JSArray<Directionality>"),
      JSArray_DisplayFeature: findType("JSArray<DisplayFeature>"),
      JSArray_Element: findType("JSArray<Element>"),
      JSArray_FocusNode: findType("JSArray<FocusNode>"),
      JSArray_FontVariation: findType("JSArray<FontVariation>"),
      JSArray_Future_void: findType("JSArray<Future<~>>"),
      JSArray_GestureArenaMember: findType("JSArray<GestureArenaMember>"),
      JSArray_HitTestEntry_HitTestTarget: findType("JSArray<HitTestEntry<HitTestTarget>>"),
      JSArray_InheritedElement: findType("JSArray<InheritedElement>"),
      JSArray_InkFeature: findType("JSArray<InkFeature>"),
      JSArray_InlineSpan: findType("JSArray<InlineSpan>"),
      JSArray_InlineSpanSemanticsInformation: findType("JSArray<InlineSpanSemanticsInformation>"),
      JSArray_KeyEvent: findType("JSArray<KeyEvent>"),
      JSArray_KeyEventResult: findType("JSArray<KeyEventResult>"),
      JSArray_LayoutId: findType("JSArray<LayoutId>"),
      JSArray_LicenseEntry: findType("JSArray<LicenseEntry>"),
      JSArray_List__InterestingSemanticsFragment: findType("JSArray<List<_InterestingSemanticsFragment>>"),
      JSArray_List__SpanBox: findType("JSArray<List<_SpanBox>>"),
      JSArray_Listenable: findType("JSArray<Listenable>"),
      JSArray_Locale: findType("JSArray<Locale>"),
      JSArray_LocalizationsDelegate_dynamic: findType("JSArray<LocalizationsDelegate<@>>"),
      JSArray_Matrix4: findType("JSArray<Matrix4>"),
      JSArray_NavigatorObserver: findType("JSArray<NavigatorObserver>"),
      JSArray_Object: findType("JSArray<Object>"),
      JSArray_Offset: findType("JSArray<Offset>"),
      JSArray_OverlayEntry: findType("JSArray<OverlayEntry>"),
      JSArray_PageStorageKey_dynamic: findType("JSArray<PageStorageKey<@>>"),
      JSArray_PlaceholderDimensions: findType("JSArray<PlaceholderDimensions>"),
      JSArray_PlaceholderSpan: findType("JSArray<PlaceholderSpan>"),
      JSArray_RenderObject: findType("JSArray<RenderObject>"),
      JSArray_RestorationBucket: findType("JSArray<RestorationBucket>"),
      JSArray_ScrollPosition: findType("JSArray<ScrollPosition>"),
      JSArray_Selectable: findType("JSArray<Selectable>"),
      JSArray_SemanticsConfiguration: findType("JSArray<SemanticsConfiguration>"),
      JSArray_SemanticsNode: findType("JSArray<SemanticsNode>"),
      JSArray_Shadow: findType("JSArray<Shadow>"),
      JSArray_ShapeBorder: findType("JSArray<ShapeBorder>"),
      JSArray_Size: findType("JSArray<Size>"),
      JSArray_String: findType("JSArray<String>"),
      JSArray_StringAttribute: findType("JSArray<StringAttribute>"),
      JSArray_TextBox: findType("JSArray<TextBox>"),
      JSArray_TextStyle: findType("JSArray<TextStyle>"),
      JSArray_ThemeExtension_ThemeExtension_dynamic: findType("JSArray<ThemeExtension<ThemeExtension<@>>>"),
      JSArray_Widget: findType("JSArray<Widget>"),
      JSArray_WidgetsBindingObserver: findType("JSArray<WidgetsBindingObserver>"),
      JSArray__ActivatorIntentPair: findType("JSArray<_ActivatorIntentPair>"),
      JSArray__Autofocus: findType("JSArray<_Autofocus>"),
      JSArray__DirectionalPolicyDataEntry: findType("JSArray<_DirectionalPolicyDataEntry>"),
      JSArray__EngineLayerWrapper: findType("JSArray<_EngineLayerWrapper>"),
      JSArray__InterestingSemanticsFragment: findType("JSArray<_InterestingSemanticsFragment>"),
      JSArray__Interval: findType("JSArray<_Interval>"),
      JSArray__OverlayEntryWidget: findType("JSArray<_OverlayEntryWidget>"),
      JSArray__ParentInkResponseState: findType("JSArray<_ParentInkResponseState>"),
      JSArray__Pending: findType("JSArray<_Pending>"),
      JSArray__ReadingOrderDirectionalGroupData: findType("JSArray<_ReadingOrderDirectionalGroupData>"),
      JSArray__ReadingOrderSortData: findType("JSArray<_ReadingOrderSortData>"),
      JSArray__RouteEntry: findType("JSArray<_RouteEntry>"),
      JSArray__SelectableFragment: findType("JSArray<_SelectableFragment>"),
      JSArray__Span: findType("JSArray<_Span>"),
      JSArray__SpanBox: findType("JSArray<_SpanBox>"),
      JSArray__StandardBottomSheet: findType("JSArray<_StandardBottomSheet>"),
      JSArray__TransformPart: findType("JSArray<_TransformPart>"),
      JSArray_double: findType("JSArray<double>"),
      JSArray_dynamic: findType("JSArray<@>"),
      JSArray_int: findType("JSArray<int>"),
      JSArray_nullable_LogicalKeyboardKey: findType("JSArray<LogicalKeyboardKey?>"),
      JSArray_nullable_Route_dynamic: findType("JSArray<Route<@>?>"),
      JSArray_nullable_ShapeBorder: findType("JSArray<ShapeBorder?>"),
      JSArray_of_Future_bool_Function: findType("JSArray<Future<bool>()>"),
      JSArray_of_Stream_LicenseEntry_Function: findType("JSArray<Stream<LicenseEntry>()>"),
      JSArray_of_bool_Function_KeyEvent: findType("JSArray<bool(KeyEvent)>"),
      JSArray_of_void_Function: findType("JSArray<~()>"),
      JSArray_of_void_Function_Action_Intent: findType("JSArray<~(Action<Intent>)>"),
      JSArray_of_void_Function_AnimationStatus: findType("JSArray<~(AnimationStatus)>"),
      JSArray_of_void_Function_Duration: findType("JSArray<~(Duration)>"),
      JSArray_of_void_Function_List_FrameTiming: findType("JSArray<~(List<FrameTiming>)>"),
      JSNull: findType("JSNull"),
      JSObject: findType("JSObject"),
      JavaScriptFunction: findType("JavaScriptFunction"),
      JavaScriptIndexingBehavior_dynamic: findType("JavaScriptIndexingBehavior<@>"),
      JsLinkedHashMap_Symbol_dynamic: findType("JsLinkedHashMap<Symbol0,@>"),
      Key: findType("Key"),
      KeyboardLockMode: findType("KeyboardLockMode"),
      KeyboardSide: findType("KeyboardSide"),
      LabeledGlobalKey_DrawerControllerState: findType("LabeledGlobalKey<DrawerControllerState>"),
      LabeledGlobalKey_OverlayState: findType("LabeledGlobalKey<OverlayState>"),
      LabeledGlobalKey_RawGestureDetectorState: findType("LabeledGlobalKey<RawGestureDetectorState>"),
      LabeledGlobalKey_State_StatefulWidget: findType("LabeledGlobalKey<State<StatefulWidget>>"),
      LabeledGlobalKey__OverlayEntryWidgetState: findType("LabeledGlobalKey<_OverlayEntryWidgetState>"),
      LeaderLayer: findType("LeaderLayer"),
      LinkedList__ListenerEntry: findType("LinkedList<_ListenerEntry>"),
      ListWheelElement: findType("ListWheelElement"),
      ListWheelParentData: findType("ListWheelParentData"),
      ListWheelViewport: findType("ListWheelViewport"),
      List_LicenseEntry: findType("List<LicenseEntry>"),
      List_Object: findType("List<Object>"),
      List_RestorationBucket: findType("List<RestorationBucket>"),
      List_SemanticsNode: findType("List<SemanticsNode>"),
      List_String: findType("List<String>"),
      List__ActivatorIntentPair: findType("List<_ActivatorIntentPair>"),
      List_dynamic: findType("List<@>"),
      List_nullable_Object: findType("List<Object?>"),
      Locale: findType("Locale"),
      LogicalKeyboardKey: findType("LogicalKeyboardKey"),
      LookupBoundary: findType("LookupBoundary"),
      MapEntry_TextPosition_SelectionResult: findType("MapEntry<TextPosition,SelectionResult>"),
      MapEntry_of_Object_and_ThemeExtension_dynamic: findType("MapEntry<Object,ThemeExtension<@>>"),
      MapEntry_of_nullable_String_and_List_Object: findType("MapEntry<String?,List<Object>>"),
      Map_ShortcutActivator_Intent: findType("Map<ShortcutActivator,Intent>"),
      Map_String_dynamic: findType("Map<String,@>"),
      Map_Type_dynamic: findType("Map<Type,@>"),
      Map_dynamic_dynamic: findType("Map<@,@>"),
      Map_of_nullable_Object_and_nullable_Object: findType("Map<Object?,Object?>"),
      Map_of_void_Function_PointerEvent_and_nullable_Matrix4: findType("Map<~(PointerEvent),Matrix4?>"),
      MappedIterable_of_String_and_nullable_StackFrame: findType("MappedIterable<String,StackFrame?>"),
      MappedListIterable_String_dynamic: findType("MappedListIterable<String,@>"),
      MappedListIterable_of_TargetPlatform_and_nullable_PageTransitionsBuilder: findType("MappedListIterable<TargetPlatform,PageTransitionsBuilder?>"),
      MaterialBannerTheme: findType("MaterialBannerTheme"),
      MaterialLocalizations: findType("MaterialLocalizations"),
      MaterialState: findType("MaterialState"),
      MaterialStatePropertyAll_Color: findType("MaterialStatePropertyAll<Color>"),
      MaterialStatePropertyAll_EdgeInsetsGeometry: findType("MaterialStatePropertyAll<EdgeInsetsGeometry>"),
      MaterialStatePropertyAll_OutlinedBorder: findType("MaterialStatePropertyAll<OutlinedBorder>"),
      MaterialStatePropertyAll_Size: findType("MaterialStatePropertyAll<Size>"),
      MaterialStatePropertyAll_TextStyle: findType("MaterialStatePropertyAll<TextStyle0>"),
      MaterialStatePropertyAll_double: findType("MaterialStatePropertyAll<double>"),
      MaterialTapTargetSize: findType("MaterialTapTargetSize"),
      Matrix4: findType("Matrix4"),
      MediaQuery: findType("MediaQuery"),
      ModifierKey: findType("ModifierKey"),
      MouseCursor: findType("MouseCursor"),
      MouseCursorSession: findType("MouseCursorSession"),
      MouseTrackerAnnotation: findType("MouseTrackerAnnotation"),
      MultiChildLayoutParentData: findType("MultiChildLayoutParentData"),
      MultiChildRenderObjectWidget: findType("MultiChildRenderObjectWidget"),
      NativeTypedArrayOfDouble: findType("NativeTypedArrayOfDouble"),
      NativeTypedArrayOfInt: findType("NativeTypedArrayOfInt"),
      NavigatorState: findType("NavigatorState"),
      NotificationListener_LayoutChangedNotification: findType("NotificationListener<LayoutChangedNotification>"),
      NotificationListener_ScrollEndNotification: findType("NotificationListener<ScrollEndNotification>"),
      NotificationListener_ScrollMetricsNotification: findType("NotificationListener<ScrollMetricsNotification>"),
      NotificationListener_ScrollNotification: findType("NotificationListener<ScrollNotification>"),
      Null: findType("Null"),
      Object: findType("Object"),
      ObserverList__ParentInkResponseState: findType("ObserverList<_ParentInkResponseState>"),
      ObserverList_of_void_Function: findType("ObserverList<~()>"),
      ObserverList_of_void_Function_Action_Intent: findType("ObserverList<~(Action<Intent>)>"),
      ObserverList_of_void_Function_AnimationStatus: findType("ObserverList<~(AnimationStatus)>"),
      Offset: findType("Offset"),
      OffsetLayer: findType("OffsetLayer"),
      OverlayEntry: findType("OverlayEntry"),
      OverlayState: findType("OverlayState"),
      PageStorage: findType("PageStorage"),
      Page_nullable_Object: findType("Page<Object?>"),
      ParentDataWidget_ParentData: findType("ParentDataWidget<ParentData>"),
      PhysicalKeyboardKey: findType("PhysicalKeyboardKey"),
      PlaceholderDimensions: findType("PlaceholderDimensions"),
      PlatformMenuItem: findType("PlatformMenuItem"),
      PointerAddedEvent: findType("PointerAddedEvent"),
      PointerCancelEvent: findType("PointerCancelEvent"),
      PointerDeviceKind: findType("PointerDeviceKind"),
      PointerDownEvent: findType("PointerDownEvent"),
      PointerEvent: findType("PointerEvent"),
      PointerEventResampler: findType("PointerEventResampler"),
      PointerHoverEvent: findType("PointerHoverEvent"),
      PointerMoveEvent: findType("PointerMoveEvent"),
      PointerPanZoomEndEvent: findType("PointerPanZoomEndEvent"),
      PointerPanZoomStartEvent: findType("PointerPanZoomStartEvent"),
      PointerPanZoomUpdateEvent: findType("PointerPanZoomUpdateEvent"),
      PointerRemovedEvent: findType("PointerRemovedEvent"),
      PointerScrollEvent: findType("PointerScrollEvent"),
      PointerScrollInertiaCancelEvent: findType("PointerScrollInertiaCancelEvent"),
      PointerSignalEvent: findType("PointerSignalEvent"),
      PointerUpEvent: findType("PointerUpEvent"),
      PrimaryScrollController: findType("PrimaryScrollController"),
      ProgressIndicatorTheme: findType("ProgressIndicatorTheme"),
      ProxyWidget: findType("ProxyWidget"),
      RawScrollbar: findType("RawScrollbar"),
      Record: findType("Record"),
      RegExpMatch: findType("RegExpMatch"),
      RenderAbsorbPointer: findType("RenderAbsorbPointer"),
      RenderBox: findType("RenderBox"),
      RenderIgnorePointer: findType("RenderIgnorePointer"),
      RenderListWheelViewport: findType("RenderListWheelViewport"),
      RenderObject: findType("RenderObject"),
      RenderObjectToWidgetAdapter_RenderBox: findType("RenderObjectToWidgetAdapter<RenderBox>"),
      RenderObjectWidget: findType("RenderObjectWidget"),
      RenderObjectWithChildMixin_RenderObject: findType("RenderObjectWithChildMixin<RenderObject>"),
      RenderSemanticsGestureHandler: findType("RenderSemanticsGestureHandler"),
      RenderTapRegion: findType("RenderTapRegion"),
      RestorableNum_int: findType("RestorableNum<int>"),
      RestorableProperty_nullable_Object: findType("RestorableProperty<Object?>"),
      RestorationBucket: findType("RestorationBucket"),
      ReverseTween_nullable_Rect: findType("ReverseTween<Rect?>"),
      ReversedListIterable__OverlayEntryWidget: findType("ReversedListIterable<_OverlayEntryWidget>"),
      RoutePopDisposition: findType("RoutePopDisposition"),
      Route_dynamic_Function_2_BuildContext_and_nullable_Object: findType("Route<@>(BuildContext,Object?)"),
      ScaffoldFeatureController_MaterialBanner_MaterialBannerClosedReason: findType("ScaffoldFeatureController<MaterialBanner,MaterialBannerClosedReason>"),
      ScaffoldFeatureController_SnackBar_SnackBarClosedReason: findType("ScaffoldFeatureController<SnackBar,SnackBarClosedReason>"),
      ScaffoldState: findType("ScaffoldState"),
      ScrollAction: findType("ScrollAction"),
      ScrollConfiguration: findType("ScrollConfiguration"),
      ScrollbarPainter: findType("ScrollbarPainter"),
      ScrollbarTheme: findType("ScrollbarTheme"),
      SelectAllSelectionEvent: findType("SelectAllSelectionEvent"),
      SelectWordSelectionEvent: findType("SelectWordSelectionEvent"),
      Selectable: findType("Selectable"),
      SelectionEdgeUpdateEvent: findType("SelectionEdgeUpdateEvent"),
      SelectionRegistrarScope: findType("SelectionRegistrarScope"),
      SemanticsAction: findType("SemanticsAction"),
      SemanticsConfiguration: findType("SemanticsConfiguration"),
      SemanticsNode: findType("SemanticsNode"),
      SemanticsTag: findType("SemanticsTag"),
      Set_RenderTapRegion: findType("Set<RenderTapRegion>"),
      Shadow: findType("Shadow"),
      ShapeBorder: findType("ShapeBorder"),
      ShapeBorderClipper: findType("ShapeBorderClipper"),
      ShortcutActivator: findType("ShortcutActivator"),
      ShortcutRegistryEntry: findType("ShortcutRegistryEntry"),
      SingleChildRenderObjectWidget: findType("SingleChildRenderObjectWidget"),
      Size: findType("Size"),
      SkipWhileIterable_String: findType("SkipWhileIterable<String>"),
      SliderTheme: findType("SliderTheme"),
      SplayTreeMap_int_Element: findType("SplayTreeMap<int,Element>"),
      StackParentData: findType("StackParentData"),
      StackTrace: findType("StackTrace"),
      StatefulElement: findType("StatefulElement"),
      StatefulWidget: findType("StatefulWidget"),
      StatelessWidget: findType("StatelessWidget"),
      String: findType("String"),
      StringAttribute: findType("StringAttribute"),
      SynchronousFuture_CupertinoLocalizations: findType("SynchronousFuture<CupertinoLocalizations>"),
      SynchronousFuture_Map_Type_dynamic: findType("SynchronousFuture<Map<Type,@>>"),
      SynchronousFuture_MaterialLocalizations: findType("SynchronousFuture<MaterialLocalizations>"),
      SynchronousFuture_WidgetsLocalizations: findType("SynchronousFuture<WidgetsLocalizations>"),
      SynchronousFuture_bool: findType("SynchronousFuture<bool>"),
      SynchronousFuture_nullable_RestorationBucket: findType("SynchronousFuture<RestorationBucket?>"),
      SynchronousFuture_void: findType("SynchronousFuture<~>"),
      SystemMouseCursor: findType("SystemMouseCursor"),
      SystemUiOverlayStyle: findType("SystemUiOverlayStyle"),
      TextBaseline: findType("TextBaseline"),
      TextButtonTheme: findType("TextButtonTheme"),
      TextPainter: findType("TextPainter"),
      TextParentData: findType("TextParentData"),
      TextStyle: findType("TextStyle0"),
      ThemeData: findType("ThemeData"),
      ThemeDataTween: findType("ThemeDataTween"),
      ThemeExtension_ThemeExtension_dynamic: findType("ThemeExtension<ThemeExtension<@>>"),
      ThemeExtension_dynamic: findType("ThemeExtension<@>"),
      TooltipTheme: findType("TooltipTheme"),
      TrustedGetRuntimeType: findType("TrustedGetRuntimeType"),
      Tween_double: findType("Tween<double>"),
      Type: findType("Type"),
      TypeError: findType("TypeError"),
      Uint8List: findType("Uint8List"),
      UnknownJavaScriptObject: findType("UnknownJavaScriptObject"),
      UnmanagedRestorationScope: findType("UnmanagedRestorationScope"),
      Uri: findType("Uri"),
      ValueKey_Object: findType("ValueKey<Object>"),
      ValueKey_int: findType("ValueKey<int>"),
      VelocityTracker: findType("VelocityTracker"),
      VisualDensity: findType("VisualDensity"),
      WhereIterable_String: findType("WhereIterable<String>"),
      WhereTypeIterable_StackFrame: findType("WhereTypeIterable<StackFrame>"),
      WhereTypeIterable__ErrorDiagnostic: findType("WhereTypeIterable<_ErrorDiagnostic>"),
      WhereTypeIterator_FocusScopeNode: findType("WhereTypeIterator<FocusScopeNode>"),
      Widget: findType("Widget"),
      WidgetsBindingObserver: findType("WidgetsBindingObserver"),
      WidgetsLocalizations: findType("WidgetsLocalizations"),
      _ActionsScope: findType("_ActionsScope"),
      _AsyncCompleter_nullable_ByteData: findType("_AsyncCompleter<ByteData?>"),
      _AsyncCompleter_nullable_RestorationBucket: findType("_AsyncCompleter<RestorationBucket?>"),
      _AsyncCompleter_void: findType("_AsyncCompleter<~>"),
      _AsyncStreamController_LicenseEntry: findType("_AsyncStreamController<LicenseEntry>"),
      _CachedImage: findType("_CachedImage"),
      _CombiningGestureArenaMember: findType("_CombiningGestureArenaMember"),
      _DirectionalPolicyData: findType("_DirectionalPolicyData"),
      _EffectiveTickerMode: findType("_EffectiveTickerMode"),
      _FixedExtentScrollPosition: findType("_FixedExtentScrollPosition"),
      _FixedExtentScrollable: findType("_FixedExtentScrollable"),
      _FixedExtentScrollableState: findType("_FixedExtentScrollableState"),
      _FocusInheritedScope: findType("_FocusInheritedScope"),
      _FocusTraversalGroupInfo: findType("_FocusTraversalGroupInfo"),
      _FrameCallbackEntry: findType("_FrameCallbackEntry"),
      _Future_dynamic: findType("_Future<@>"),
      _Future_int: findType("_Future<int>"),
      _Future_nullable_ByteData: findType("_Future<ByteData?>"),
      _Future_nullable_RestorationBucket: findType("_Future<RestorationBucket?>"),
      _Future_void: findType("_Future<~>"),
      _GestureArena: findType("_GestureArena"),
      _HeroFlight: findType("_HeroFlight"),
      _HeroState: findType("_HeroState"),
      _HighlightType: findType("_HighlightType"),
      _InheritedCupertinoTheme: findType("_InheritedCupertinoTheme"),
      _InheritedTheme: findType("_InheritedTheme"),
      _InterestingSemanticsFragment: findType("_InterestingSemanticsFragment"),
      _LeafNode: findType("_LeafNode"),
      _ListenerEntry: findType("_ListenerEntry"),
      _LiveImage: findType("_LiveImage"),
      _LocalizationsScope: findType("_LocalizationsScope"),
      _MaterialStatePropertyWith_Color: findType("_MaterialStatePropertyWith<Color>"),
      _MaterialStatePropertyWith_bool: findType("_MaterialStatePropertyWith<bool>"),
      _MaterialStatePropertyWith_double: findType("_MaterialStatePropertyWith<double>"),
      _MaterialStatePropertyWith_nullable_Color: findType("_MaterialStatePropertyWith<Color?>"),
      _ModalScopeStatus: findType("_ModalScopeStatus"),
      _MouseState: findType("_MouseState"),
      _NavigatorObservation: findType("_NavigatorObservation"),
      _OverlayEntryWidget: findType("_OverlayEntryWidget"),
      _ParentInkResponseProvider: findType("_ParentInkResponseProvider"),
      _PendingImage: findType("_PendingImage"),
      _ReadingOrderDirectionalGroupData: findType("_ReadingOrderDirectionalGroupData"),
      _ReadingOrderSortData: findType("_ReadingOrderSortData"),
      _RenderColoredBox: findType("_RenderColoredBox"),
      _RenderInkFeatures: findType("_RenderInkFeatures"),
      _RenderSlider: findType("_RenderSlider"),
      _RenderSnapshotWidget: findType("_RenderSnapshotWidget"),
      _RenderTheater: findType("_RenderTheater"),
      _RouteEntry: findType("_RouteEntry"),
      _ScaffoldMessengerScope: findType("_ScaffoldMessengerScope"),
      _ScrollNotificationObserverScope: findType("_ScrollNotificationObserverScope"),
      _ScrollableScope: findType("_ScrollableScope"),
      _StoredMessage: findType("_StoredMessage"),
      _SwitchableSemanticsFragment: findType("_SwitchableSemanticsFragment"),
      _SyncStarIterable_RenderBox: findType("_SyncStarIterable<RenderBox>"),
      _TapTracker: findType("_TapTracker"),
      _Theater: findType("_Theater"),
      _TheaterParentData: findType("_TheaterParentData"),
      _TooltipVisibilityScope: findType("_TooltipVisibilityScope"),
      _ViewScope: findType("_ViewScope"),
      _WidgetTicker: findType("_WidgetTicker"),
      bool: findType("bool"),
      double: findType("double"),
      dynamic: findType("@"),
      dynamic_Function_Object: findType("@(Object)"),
      dynamic_Function_Object_StackTrace: findType("@(Object,StackTrace)"),
      int: findType("int"),
      nullable_Border: findType("Border?"),
      nullable_BorderDirectional: findType("BorderDirectional?"),
      nullable_BorderRadiusTween: findType("BorderRadiusTween?"),
      nullable_BorderSide: findType("BorderSide?"),
      nullable_ByteData: findType("ByteData?"),
      nullable_ClipPathEngineLayer: findType("ClipPathEngineLayer?"),
      nullable_ClipPathLayer: findType("ClipPathLayer?"),
      nullable_ClipRRectEngineLayer: findType("ClipRRectEngineLayer?"),
      nullable_ClipRRectLayer: findType("ClipRRectLayer?"),
      nullable_ClipRectEngineLayer: findType("ClipRectEngineLayer?"),
      nullable_ClipRectLayer: findType("ClipRectLayer?"),
      nullable_Color: findType("Color?"),
      nullable_ColorTween: findType("ColorTween?"),
      nullable_ContainerLayer: findType("ContainerLayer?"),
      nullable_Directionality: findType("Directionality?"),
      nullable_EdgeInsetsGeometry: findType("EdgeInsetsGeometry?"),
      nullable_FocusNode: findType("FocusNode?"),
      nullable_FollowerLayer: findType("FollowerLayer?"),
      nullable_Future_Null: findType("Future<Null>?"),
      nullable_HeroControllerScope: findType("HeroControllerScope?"),
      nullable_HorizontalDragGestureRecognizer: findType("HorizontalDragGestureRecognizer?"),
      nullable_IconThemeData: findType("IconThemeData?"),
      nullable_InkHighlight: findType("InkHighlight?"),
      nullable_JSObject: findType("JSObject?"),
      nullable_ListWheelParentData: findType("ListWheelParentData?"),
      nullable_LogicalKeyboardKey: findType("LogicalKeyboardKey?"),
      nullable_LongPressGestureRecognizer: findType("LongPressGestureRecognizer?"),
      nullable_Map_of_nullable_Object_and_nullable_Object: findType("Map<Object?,Object?>?"),
      nullable_Matrix4: findType("Matrix4?"),
      nullable_MouseCursor: findType("MouseCursor?"),
      nullable_Object: findType("Object?"),
      nullable_OffsetEngineLayer: findType("OffsetEngineLayer?"),
      nullable_OffsetLayer: findType("OffsetLayer?"),
      nullable_OpacityEngineLayer: findType("OpacityEngineLayer?"),
      nullable_OutlinedBorder: findType("OutlinedBorder?"),
      nullable_PanGestureRecognizer: findType("PanGestureRecognizer?"),
      nullable_PipelineOwner: findType("PipelineOwner?"),
      nullable_RenderBox: findType("RenderBox?"),
      nullable_RenderObject: findType("RenderObject?"),
      nullable_RenderObjectElement: findType("RenderObjectElement?"),
      nullable_RenderObjectToWidgetElement_RenderBox: findType("RenderObjectToWidgetElement<RenderBox>?"),
      nullable_RenderSemanticsGestureHandler: findType("RenderSemanticsGestureHandler?"),
      nullable_SemanticsNode: findType("SemanticsNode?"),
      nullable_SemanticsOwner: findType("SemanticsOwner?"),
      nullable_ShapeBorderTween: findType("ShapeBorderTween?"),
      nullable_Size: findType("Size?"),
      nullable_StatefulElement: findType("StatefulElement?"),
      nullable_String: findType("String?"),
      nullable_TapGestureRecognizer: findType("TapGestureRecognizer?"),
      nullable_TextStyle: findType("TextStyle0?"),
      nullable_TextStyleTween: findType("TextStyleTween?"),
      nullable_TransformEngineLayer: findType("TransformEngineLayer?"),
      nullable_Tween_double: findType("Tween<double>?"),
      nullable_Uint8List: findType("Uint8List?"),
      nullable_VerticalDragGestureRecognizer: findType("VerticalDragGestureRecognizer?"),
      nullable_Widget: findType("Widget?"),
      nullable__PointAtTime: findType("_PointAtTime?"),
      nullable__TaskEntry_dynamic: findType("_TaskEntry<@>?"),
      nullable_bool: findType("bool?"),
      nullable_double: findType("double?"),
      nullable_int: findType("int?"),
      nullable_num: findType("num?"),
      nullable_void_Function: findType("~()?"),
      num: findType("num"),
      void: findType("~"),
      void_Function: findType("~()"),
      void_Function_Duration: findType("~(Duration)"),
      void_Function_FocusHighlightMode: findType("~(FocusHighlightMode)"),
      void_Function_List_FrameTiming: findType("~(List<FrameTiming>)"),
      void_Function_Object: findType("~(Object)"),
      void_Function_Object_StackTrace: findType("~(Object,StackTrace)"),
      void_Function_PointerEvent: findType("~(PointerEvent)"),
      void_Function_RawKeyEvent: findType("~(RawKeyEvent)"),
      void_Function_nullable_Object: findType("~(Object?)")
    };
  })();
  (function constants() {
    var makeConstList = hunkHelpers.makeConstList;
    B.Interceptor_methods = J.Interceptor.prototype;
    B.JSArray_methods = J.JSArray.prototype;
    B.JSBool_methods = J.JSBool.prototype;
    B.JSInt_methods = J.JSInt.prototype;
    B.JSNumber_methods = J.JSNumber.prototype;
    B.JSString_methods = J.JSString.prototype;
    B.JavaScriptFunction_methods = J.JavaScriptFunction.prototype;
    B.JavaScriptObject_methods = J.JavaScriptObject.prototype;
    B.NativeByteData_methods = A.NativeByteData.prototype;
    B.NativeFloat32List_methods = A.NativeFloat32List.prototype;
    B.NativeFloat64List_methods = A.NativeFloat64List.prototype;
    B.NativeInt32List_methods = A.NativeInt32List.prototype;
    B.NativeUint16List_methods = A.NativeUint16List.prototype;
    B.NativeUint8List_methods = A.NativeUint8List.prototype;
    B.PlainJavaScriptObject_methods = J.PlainJavaScriptObject.prototype;
    B.UnknownJavaScriptObject_methods = J.UnknownJavaScriptObject.prototype;
    B.AlignmentDirectional_0_1 = new A.AlignmentDirectional(0, 1);
    B.AlignmentDirectional_0_m1 = new A.AlignmentDirectional(0, -1);
    B.AlignmentDirectional_1_0 = new A.AlignmentDirectional(1, 0);
    B.AlignmentDirectional_m1_0 = new A.AlignmentDirectional(-1, 0);
    B.AlignmentDirectional_m1_m1 = new A.AlignmentDirectional(-1, -1);
    B.Alignment_0_0 = new A.Alignment(0, 0);
    B.Alignment_0_1 = new A.Alignment(0, 1);
    B.Alignment_0_m1 = new A.Alignment(0, -1);
    B.Alignment_1_0 = new A.Alignment(1, 0);
    B.Alignment_m1_0 = new A.Alignment(-1, 0);
    B.Alignment_m1_m1 = new A.Alignment(-1, -1);
    B.AndroidOverscrollIndicator_0 = new A.AndroidOverscrollIndicator(0, "stretch");
    B.AndroidOverscrollIndicator_1 = new A.AndroidOverscrollIndicator(1, "glow");
    B.AnimationBehavior_0 = new A.AnimationBehavior(0, "normal");
    B.AnimationBehavior_1 = new A.AnimationBehavior(1, "preserve");
    B.AnimationStatus_0 = new A.AnimationStatus(0, "dismissed");
    B.AnimationStatus_1 = new A.AnimationStatus(1, "forward");
    B.AnimationStatus_2 = new A.AnimationStatus(2, "reverse");
    B.AnimationStatus_3 = new A.AnimationStatus(3, "completed");
    B.AppBarTheme_QlX = new A.AppBarTheme(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
    B.AppLifecycleState_0 = new A.AppLifecycleState(0, "resumed");
    B.AppLifecycleState_1 = new A.AppLifecycleState(1, "inactive");
    B.AppLifecycleState_2 = new A.AppLifecycleState(2, "paused");
    B.AppLifecycleState_3 = new A.AppLifecycleState(3, "detached");
    B.AxisDirection_0 = new A.AxisDirection(0, "up");
    B.AxisDirection_1 = new A.AxisDirection(1, "right");
    B.AxisDirection_2 = new A.AxisDirection(2, "down");
    B.AxisDirection_3 = new A.AxisDirection(3, "left");
    B.Axis_0 = new A.Axis(0, "horizontal");
    B.Axis_1 = new A.Axis(1, "vertical");
    B.BackButtonIcon_null = new A.BackButtonIcon(null);
    B.BackButton_JGH = new A.BackButton(B.BackButtonIcon_null, null, null, null);
    B.BadgeThemeData_MPo = new A.BadgeThemeData(null, null, null, null, null, null, null, null);
    B.C_JSONMessageCodec = new A.JSONMessageCodec();
    B.BasicMessageChannel_Umt = new A.BasicMessageChannel("flutter/keyevent", B.C_JSONMessageCodec, type$.BasicMessageChannel_nullable_Object);
    B.C_StringCodec = new A.StringCodec();
    B.BasicMessageChannel_bqZ = new A.BasicMessageChannel("flutter/lifecycle", B.C_StringCodec, A.findType("BasicMessageChannel<String?>"));
    B.BasicMessageChannel_qHv = new A.BasicMessageChannel("flutter/system", B.C_JSONMessageCodec, type$.BasicMessageChannel_nullable_Object);
    B.C_StandardMessageCodec = new A.StandardMessageCodec();
    B.BasicMessageChannel_vKF = new A.BasicMessageChannel("flutter/accessibility", B.C_StandardMessageCodec, type$.BasicMessageChannel_nullable_Object);
    B.BlendMode_13 = new A.BlendMode(13, "modulate");
    B.BlurStyle_0 = new A.BlurStyle(0, "normal");
    B.Radius_4_4 = new A.Radius(4, 4);
    B.BorderRadius_nnp = new A.BorderRadius(B.Radius_4_4, B.Radius_4_4, B.Radius_4_4, B.Radius_4_4);
    B.Radius_0_0 = new A.Radius(0, 0);
    B.BorderRadius_tUf = new A.BorderRadius(B.Radius_0_0, B.Radius_0_0, B.Radius_0_0, B.Radius_0_0);
    B.Color_4278190080 = new A.Color(4278190080);
    B.BorderStyle_0 = new A.BorderStyle(0, "none");
    B.BorderSide_5Di = new A.BorderSide(B.Color_4278190080, 0, B.BorderStyle_0, -1);
    B.BorderStyle_1 = new A.BorderStyle(1, "solid");
    B.BottomAppBarTheme_uXR = new A.BottomAppBarTheme(null, null, null, null, null, null, null);
    B.BottomNavigationBarThemeData_w6n = new A.BottomNavigationBarThemeData(null, null, null, null, null, null, null, null, null, null, null, null, null, null);
    B.BottomSheetThemeData_vNd = new A.BottomSheetThemeData(null, null, null, null, null, null, null, null, null, null);
    B.ScrollDecelerationRate_0 = new A.ScrollDecelerationRate(0, "normal");
    B.RangeMaintainingScrollPhysics_null = new A.RangeMaintainingScrollPhysics(null);
    B.BouncingScrollPhysics_69W = new A.BouncingScrollPhysics(B.ScrollDecelerationRate_0, B.RangeMaintainingScrollPhysics_null);
    B.ScrollDecelerationRate_1 = new A.ScrollDecelerationRate(1, "fast");
    B.BouncingScrollPhysics_Wm7 = new A.BouncingScrollPhysics(B.ScrollDecelerationRate_1, B.RangeMaintainingScrollPhysics_null);
    B.BoxConstraints_0Yu = new A.BoxConstraints(0, 1 / 0, 0, 1 / 0);
    B.BoxConstraints_0pa = new A.BoxConstraints(48, 1 / 0, 48, 1 / 0);
    B.BoxConstraints_rW9 = new A.BoxConstraints(36, 1 / 0, 36, 1 / 0);
    B.BoxConstraints_vYx = new A.BoxConstraints(1 / 0, 1 / 0, 1 / 0, 1 / 0);
    B.BoxHeightStyle_0 = new A.BoxHeightStyle(0, "tight");
    B.BoxHeightStyle_5 = new A.BoxHeightStyle(5, "strut");
    B.BoxShape_0 = new A.BoxShape(0, "rectangle");
    B.BoxShape_1 = new A.BoxShape(1, "circle");
    B.BoxWidthStyle_0 = new A.BoxWidthStyle(0, "tight");
    B.Brightness_0 = new A.Brightness(0, "dark");
    B.Brightness_1 = new A.Brightness(1, "light");
    B.ButtonBarThemeData_CyY = new A.ButtonBarThemeData(null, null, null, null, null, null, null, null, null);
    B.ButtonTextTheme_0 = new A.ButtonTextTheme(0, "normal");
    B.CONSTANT = new A.Instantiation1(A.math__max$closure(), A.findType("Instantiation1<double>"));
    B.C_AccessibilityFeatures = new A.AccessibilityFeatures();
    B.C_ActionDispatcher = new A.ActionDispatcher();
    B.C_Base64Encoder = new A.Base64Encoder();
    B.C_Base64Codec = new A.Base64Codec();
    B.SelectionChangedCause_4 = new A.SelectionChangedCause(4, "keyboard");
    B.C_CopySelectionTextIntent0 = new A.CopySelectionTextIntent();
    B.C_CopySelectionTextIntent = new A.CopySelectionTextIntent();
    B.C_DefaultCupertinoLocalizations = new A.DefaultCupertinoLocalizations();
    B.C_DefaultMaterialLocalizations = new A.DefaultMaterialLocalizations();
    B.C_DefaultTransitionDelegate = new A.DefaultTransitionDelegate();
    B.C_DefaultWidgetsLocalizations = new A.DefaultWidgetsLocalizations();
    B.C_DeleteCharacterIntent = new A.DeleteCharacterIntent();
    B.C_DeleteCharacterIntent0 = new A.DeleteCharacterIntent();
    B.C_DeleteToLineBreakIntent = new A.DeleteToLineBreakIntent();
    B.C_DeleteToLineBreakIntent0 = new A.DeleteToLineBreakIntent();
    B.C_DeleteToNextWordBoundaryIntent = new A.DeleteToNextWordBoundaryIntent();
    B.C_DeleteToNextWordBoundaryIntent0 = new A.DeleteToNextWordBoundaryIntent();
    B.C_DoNothingAndStopPropagationTextIntent = new A.DoNothingAndStopPropagationTextIntent();
    B.C_EmptyIterable = new A.EmptyIterable(A.findType("EmptyIterable<FocusNode>"));
    B.C_EmptyIterator = new A.EmptyIterator();
    B.C_Endian0 = new A.Endian();
    B.C_Endian = new A.Endian();
    B.C_ExpandSelectionToDocumentBoundaryIntent = new A.ExpandSelectionToDocumentBoundaryIntent();
    B.C_ExpandSelectionToDocumentBoundaryIntent0 = new A.ExpandSelectionToDocumentBoundaryIntent();
    B.C_ExpandSelectionToLineBreakIntent = new A.ExpandSelectionToLineBreakIntent();
    B.C_ExpandSelectionToLineBreakIntent0 = new A.ExpandSelectionToLineBreakIntent();
    B.C_ExtendSelectionByCharacterIntent1 = new A.ExtendSelectionByCharacterIntent();
    B.C_ExtendSelectionByCharacterIntent2 = new A.ExtendSelectionByCharacterIntent();
    B.C_ExtendSelectionByCharacterIntent = new A.ExtendSelectionByCharacterIntent();
    B.C_ExtendSelectionByCharacterIntent0 = new A.ExtendSelectionByCharacterIntent();
    B.C_ExtendSelectionToDocumentBoundaryIntent1 = new A.ExtendSelectionToDocumentBoundaryIntent();
    B.C_ExtendSelectionToDocumentBoundaryIntent2 = new A.ExtendSelectionToDocumentBoundaryIntent();
    B.C_ExtendSelectionToDocumentBoundaryIntent = new A.ExtendSelectionToDocumentBoundaryIntent();
    B.C_ExtendSelectionToDocumentBoundaryIntent0 = new A.ExtendSelectionToDocumentBoundaryIntent();
    B.C_ExtendSelectionToLineBreakIntent5 = new A.ExtendSelectionToLineBreakIntent();
    B.C_ExtendSelectionToLineBreakIntent6 = new A.ExtendSelectionToLineBreakIntent();
    B.C_ExtendSelectionToLineBreakIntent1 = new A.ExtendSelectionToLineBreakIntent();
    B.C_ExtendSelectionToLineBreakIntent2 = new A.ExtendSelectionToLineBreakIntent();
    B.C_ExtendSelectionToLineBreakIntent3 = new A.ExtendSelectionToLineBreakIntent();
    B.C_ExtendSelectionToLineBreakIntent4 = new A.ExtendSelectionToLineBreakIntent();
    B.C_ExtendSelectionToLineBreakIntent = new A.ExtendSelectionToLineBreakIntent();
    B.C_ExtendSelectionToLineBreakIntent0 = new A.ExtendSelectionToLineBreakIntent();
    B.C_ExtendSelectionToNextParagraphBoundaryIntent = new A.ExtendSelectionToNextParagraphBoundaryIntent();
    B.C_ExtendSelectionToNextParagraphBoundaryIntent0 = new A.ExtendSelectionToNextParagraphBoundaryIntent();
    B.C_ExtendSelectionToNextParagraphBoundaryOrCaretLocationIntent = new A.ExtendSelectionToNextParagraphBoundaryOrCaretLocationIntent();
    B.C_ExtendSelectionToNextParagraphBoundaryOrCaretLocationIntent0 = new A.ExtendSelectionToNextParagraphBoundaryOrCaretLocationIntent();
    B.C_ExtendSelectionToNextWordBoundaryIntent1 = new A.ExtendSelectionToNextWordBoundaryIntent();
    B.C_ExtendSelectionToNextWordBoundaryIntent2 = new A.ExtendSelectionToNextWordBoundaryIntent();
    B.C_ExtendSelectionToNextWordBoundaryIntent = new A.ExtendSelectionToNextWordBoundaryIntent();
    B.C_ExtendSelectionToNextWordBoundaryIntent0 = new A.ExtendSelectionToNextWordBoundaryIntent();
    B.C_ExtendSelectionToNextWordBoundaryOrCaretLocationIntent = new A.ExtendSelectionToNextWordBoundaryOrCaretLocationIntent();
    B.C_ExtendSelectionToNextWordBoundaryOrCaretLocationIntent0 = new A.ExtendSelectionToNextWordBoundaryOrCaretLocationIntent();
    B.C_ExtendSelectionVerticallyToAdjacentLineIntent1 = new A.ExtendSelectionVerticallyToAdjacentLineIntent();
    B.C_ExtendSelectionVerticallyToAdjacentLineIntent2 = new A.ExtendSelectionVerticallyToAdjacentLineIntent();
    B.C_ExtendSelectionVerticallyToAdjacentLineIntent = new A.ExtendSelectionVerticallyToAdjacentLineIntent();
    B.C_ExtendSelectionVerticallyToAdjacentLineIntent0 = new A.ExtendSelectionVerticallyToAdjacentLineIntent();
    B.C_ExtendSelectionVerticallyToAdjacentPageIntent1 = new A.ExtendSelectionVerticallyToAdjacentPageIntent();
    B.C_ExtendSelectionVerticallyToAdjacentPageIntent2 = new A.ExtendSelectionVerticallyToAdjacentPageIntent();
    B.C_ExtendSelectionVerticallyToAdjacentPageIntent = new A.ExtendSelectionVerticallyToAdjacentPageIntent();
    B.C_ExtendSelectionVerticallyToAdjacentPageIntent0 = new A.ExtendSelectionVerticallyToAdjacentPageIntent();
    B.C_FloatingLabelAlignment = new A.FloatingLabelAlignment();
    B.FloatingLabelBehavior_1 = new A.FloatingLabelBehavior(1, "auto");
    B.C_InputDecorationTheme = new A.InputDecorationTheme();
    B.C_JS_CONST = function getTagFallback(o) {
  var s = Object.prototype.toString.call(o);
  return s.substring(8, s.length - 1);
};
    B.C_JS_CONST0 = function() {
  var toStringFunction = Object.prototype.toString;
  function getTag(o) {
    var s = toStringFunction.call(o);
    return s.substring(8, s.length - 1);
  }
  function getUnknownTag(object, tag) {
    if (/^HTML[A-Z].*Element$/.test(tag)) {
      var name = toStringFunction.call(object);
      if (name == "[object Object]") return null;
      return "HTMLElement";
    }
  }
  function getUnknownTagGenericBrowser(object, tag) {
    if (object instanceof HTMLElement) return "HTMLElement";
    return getUnknownTag(object, tag);
  }
  function prototypeForTag(tag) {
    if (typeof window == "undefined") return null;
    if (typeof window[tag] == "undefined") return null;
    var constructor = window[tag];
    if (typeof constructor != "function") return null;
    return constructor.prototype;
  }
  function discriminator(tag) { return null; }
  var isBrowser = typeof HTMLElement == "function";
  return {
    getTag: getTag,
    getUnknownTag: isBrowser ? getUnknownTagGenericBrowser : getUnknownTag,
    prototypeForTag: prototypeForTag,
    discriminator: discriminator };
};
    B.C_JS_CONST6 = function(getTagFallback) {
  return function(hooks) {
    if (typeof navigator != "object") return hooks;
    var userAgent = navigator.userAgent;
    if (typeof userAgent != "string") return hooks;
    if (userAgent.indexOf("DumpRenderTree") >= 0) return hooks;
    if (userAgent.indexOf("Chrome") >= 0) {
      function confirm(p) {
        return typeof window == "object" && window[p] && window[p].name == p;
      }
      if (confirm("Window") && confirm("HTMLElement")) return hooks;
    }
    hooks.getTag = getTagFallback;
  };
};
    B.C_JS_CONST1 = function(hooks) {
  if (typeof dartExperimentalFixupGetTag != "function") return hooks;
  hooks.getTag = dartExperimentalFixupGetTag(hooks.getTag);
};
    B.C_JS_CONST5 = function(hooks) {
  if (typeof navigator != "object") return hooks;
  var userAgent = navigator.userAgent;
  if (typeof userAgent != "string") return hooks;
  if (userAgent.indexOf("Firefox") == -1) return hooks;
  var getTag = hooks.getTag;
  var quickMap = {
    "BeforeUnloadEvent": "Event",
    "DataTransfer": "Clipboard",
    "GeoGeolocation": "Geolocation",
    "Location": "!Location",
    "WorkerMessageEvent": "MessageEvent",
    "XMLDocument": "!Document"};
  function getTagFirefox(o) {
    var tag = getTag(o);
    return quickMap[tag] || tag;
  }
  hooks.getTag = getTagFirefox;
};
    B.C_JS_CONST4 = function(hooks) {
  if (typeof navigator != "object") return hooks;
  var userAgent = navigator.userAgent;
  if (typeof userAgent != "string") return hooks;
  if (userAgent.indexOf("Trident/") == -1) return hooks;
  var getTag = hooks.getTag;
  var quickMap = {
    "BeforeUnloadEvent": "Event",
    "DataTransfer": "Clipboard",
    "HTMLDDElement": "HTMLElement",
    "HTMLDTElement": "HTMLElement",
    "HTMLPhraseElement": "HTMLElement",
    "Position": "Geoposition"
  };
  function getTagIE(o) {
    var tag = getTag(o);
    var newTag = quickMap[tag];
    if (newTag) return newTag;
    if (tag == "Object") {
      if (window.DataView && (o instanceof window.DataView)) return "DataView";
    }
    return tag;
  }
  function prototypeForTagIE(tag) {
    var constructor = window[tag];
    if (constructor == null) return null;
    return constructor.prototype;
  }
  hooks.getTag = getTagIE;
  hooks.prototypeForTag = prototypeForTagIE;
};
    B.C_JS_CONST2 = function(hooks) {
  var getTag = hooks.getTag;
  var prototypeForTag = hooks.prototypeForTag;
  function getTagFixed(o) {
    var tag = getTag(o);
    if (tag == "Document") {
      if (!!o.xmlVersion) return "!Document";
      return "!HTMLDocument";
    }
    return tag;
  }
  function prototypeForTagFixed(tag) {
    if (tag == "Document") return null;
    return prototypeForTag(tag);
  }
  hooks.getTag = getTagFixed;
  hooks.prototypeForTag = prototypeForTagFixed;
};
    B.C_JS_CONST3 = function(hooks) { return hooks; }
;
    B.C_JsonCodec = new A.JsonCodec();
    B.C_MaterialScrollBehavior = new A.MaterialScrollBehavior();
    B.C_Object = new A.Object();
    B.C_OutOfMemoryError = new A.OutOfMemoryError();
    B.TargetPlatform_0 = new A.TargetPlatform(0, "android");
    B.TargetPlatform_2 = new A.TargetPlatform(2, "iOS");
    B.TargetPlatform_4 = new A.TargetPlatform(4, "macOS");
    B.C_ZoomPageTransitionsBuilder = new A.ZoomPageTransitionsBuilder();
    B.C_CupertinoPageTransitionsBuilder = new A.CupertinoPageTransitionsBuilder();
    B.Map_kX8z3 = new A.GeneralConstantMap([B.TargetPlatform_0, B.C_ZoomPageTransitionsBuilder, B.TargetPlatform_2, B.C_CupertinoPageTransitionsBuilder, B.TargetPlatform_4, B.C_CupertinoPageTransitionsBuilder], A.findType("GeneralConstantMap<TargetPlatform,PageTransitionsBuilder>"));
    B.C_PageTransitionsTheme = new A.PageTransitionsTheme();
    B.C_PasteTextIntent = new A.PasteTextIntent();
    B.List_empty6 = makeConstList([], type$.JSArray_Locale);
    B.C_PlatformConfiguration = new A.PlatformConfiguration();
    B.C_RectangularSliderValueIndicatorShape = new A.RectangularSliderValueIndicatorShape();
    B.C_RedoTextIntent = new A.RedoTextIntent();
    B.C_RoundSliderOverlayShape = new A.RoundSliderOverlayShape();
    B.C_RoundSliderThumbShape = new A.RoundSliderThumbShape();
    B.C_RoundSliderTickMarkShape = new A.RoundSliderTickMarkShape();
    B.C_RoundedRectSliderTrackShape = new A.RoundedRectSliderTrackShape();
    B.C_ScrollBehavior = new A.ScrollBehavior();
    B.C_ScrollToDocumentBoundaryIntent = new A.ScrollToDocumentBoundaryIntent();
    B.C_ScrollToDocumentBoundaryIntent0 = new A.ScrollToDocumentBoundaryIntent();
    B.C_SelectAllTextIntent = new A.SelectAllTextIntent();
    B.C_SentinelValue = new A.SentinelValue();
    B.C_Threshold = new A.Threshold();
    B.C_TransposeCharactersIntent = new A.TransposeCharactersIntent();
    B.C_UndoTextIntent = new A.UndoTextIntent();
    B.C_Utf8Codec = new A.Utf8Codec();
    B.C_Utf8Encoder = new A.Utf8Encoder();
    B.C__AlwaysCompleteAnimation = new A._AlwaysCompleteAnimation();
    B.C__AlwaysDismissedAnimation = new A._AlwaysDismissedAnimation();
    B.C__CupertinoLocalizationsDelegate = new A._CupertinoLocalizationsDelegate();
    B.C__DecelerateCurve = new A._DecelerateCurve();
    B.C__DefaultBinaryMessenger = new A._DefaultBinaryMessenger();
    B.C__DefaultSnapshotPainter = new A._DefaultSnapshotPainter();
    B.C__DeferringMouseCursor = new A._DeferringMouseCursor();
    B.C__DelayedDone = new A._DelayedDone();
    B.SystemMouseCursor_click = new A.SystemMouseCursor("click");
    B.SystemMouseCursor_basic = new A.SystemMouseCursor("basic");
    B.C__EnabledAndDisabledMouseCursor = new A._EnabledAndDisabledMouseCursor();
    B.C__EndFloatFabLocation = new A._EndFloatFabLocation();
    B.C__HashEnd = new A._HashEnd();
    B.C__InkRippleFactory = new A._InkRippleFactory();
    B.C__InkSplashFactory = new A._InkSplashFactory();
    B.C__JSRandom = new A._JSRandom();
    B.C__Linear = new A._Linear();
    B.C__MaterialLocalizationsDelegate = new A._MaterialLocalizationsDelegate();
    B.C__NoDefaultValue = new A._NoDefaultValue();
    B.C__RootZone = new A._RootZone();
    B.C__ScalingFabMotionAnimator = new A._ScalingFabMotionAnimator();
    B.C__WidgetsLocalizationsDelegate = new A._WidgetsLocalizationsDelegate();
    B.CardTheme_sAu = new A.CardTheme(null, null, null, null, null, null, null);
    B.CheckboxThemeData_aO9 = new A.CheckboxThemeData(null, null, null, null, null, null, null, null, null);
    B.ChipThemeData_wFD = new A.ChipThemeData(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
    B.CircleBorder_GDi = new A.CircleBorder(0, B.BorderSide_5Di);
    B._ActivityIndicatorType_0 = new A._ActivityIndicatorType(0, "material");
    B.CircularProgressIndicator_null = new A.CircularProgressIndicator(null);
    B.ClampingScrollPhysics_wYv = new A.ClampingScrollPhysics(B.RangeMaintainingScrollPhysics_null);
    B.SelectionEventType_2 = new A.SelectionEventType(2, "clear");
    B.ClearSelectionEvent_SelectionEventType_2 = new A.ClearSelectionEvent(B.SelectionEventType_2);
    B.ClipOp_1 = new A.ClipOp(1, "intersect");
    B.Clip_0 = new A.Clip(0, "none");
    B.Clip_1 = new A.Clip(1, "hardEdge");
    B.Clip_2 = new A.Clip(2, "antiAlias");
    B.Clip_3 = new A.Clip(3, "antiAliasWithSaveLayer");
    B.Color_0 = new A.Color(0);
    B.Color_1087163596 = new A.Color(1087163596);
    B.Color_134217728 = new A.Color(134217728);
    B.Color_1627389952 = new A.Color(1627389952);
    B.Color_1660944383 = new A.Color(1660944383);
    B.Color_16777215 = new A.Color(16777215);
    B.Color_1723645116 = new A.Color(1723645116);
    B.Color_1724434632 = new A.Color(1724434632);
    B.Color_2155905152 = new A.Color(2155905152);
    B.Color_2315255808 = new A.Color(2315255808);
    B.Color_2583691263 = new A.Color(2583691263);
    B.Color_3019898879 = new A.Color(3019898879);
    B.Color_4039164096 = new A.Color(4039164096);
    B.Color_4278239141 = new A.Color(4278239141);
    B.Color_4280361249 = new A.Color(4280361249);
    B.Color_4281348144 = new A.Color(4281348144);
    B.Color_4282532418 = new A.Color(4282532418);
    B.Color_4284572001 = new A.Color(4284572001);
    B.Color_4284809178 = new A.Color(4284809178);
    B.Color_4288585374 = new A.Color(4288585374);
    B.Color_4292030255 = new A.Color(4292030255);
    B.Color_4292927712 = new A.Color(4292927712);
    B.Color_4294309365 = new A.Color(4294309365);
    B.Color_4294638330 = new A.Color(4294638330);
    B.Color_4294967295 = new A.Color(4294967295);
    B.Color_436207616 = new A.Color(436207616);
    B.Color_520093696 = new A.Color(520093696);
    B.Color_536870911 = new A.Color(536870911);
    B.CrossAxisAlignment_0 = new A.CrossAxisAlignment(0, "start");
    B.CrossAxisAlignment_1 = new A.CrossAxisAlignment(1, "end");
    B.CrossAxisAlignment_2 = new A.CrossAxisAlignment(2, "center");
    B.CrossAxisAlignment_3 = new A.CrossAxisAlignment(3, "stretch");
    B.CrossAxisAlignment_4 = new A.CrossAxisAlignment(4, "baseline");
    B.Cubic_41f = new A.Cubic(0.18, 1, 0.04, 1);
    B.Cubic_Df6 = new A.Cubic(0.05, 0, 0.133333, 0.06);
    B.Cubic_Dkk = new A.Cubic(0.4, 0, 0.2, 1);
    B.Cubic_O6W = new A.Cubic(0.35, 0.91, 0.33, 0.97);
    B.Cubic_Pa6 = new A.Cubic(0.42, 0, 1, 1);
    B.Cubic_eOY = new A.Cubic(0.208333, 0.82, 0.25, 1);
    B.Cubic_fC5 = new A.Cubic(0.42, 0, 0.58, 1);
    B.Cubic_glB = new A.Cubic(0.25, 0.1, 0.25, 1);
    B.Cubic_rLI = new A.Cubic(0.075, 0.82, 0.165, 1);
    B.Cubic_ts0 = new A.Cubic(0, 0, 0.58, 1);
    B.Cubic_uDh = new A.Cubic(0.67, 0.03, 0.65, 0.09);
    B.Color_511080064 = new A.Color(511080064);
    B.Color_1031173760 = new A.Color(1031173760);
    B.Color_863401600 = new A.Color(863401600);
    B.Color_1366718080 = new A.Color(1366718080);
    B.CupertinoDynamicColor_541 = new A.CupertinoDynamicColor(B.Color_511080064, "tertiarySystemFill", null, B.Color_511080064, B.Color_1031173760, B.Color_863401600, B.Color_1366718080, B.Color_511080064, B.Color_1031173760, B.Color_863401600, B.Color_1366718080, 0);
    B.Color_4288256409 = new A.Color(4288256409);
    B.Color_4285887861 = new A.Color(4285887861);
    B.CupertinoDynamicColor_JHz = new A.CupertinoDynamicColor(B.Color_4288256409, "inactiveGray", null, B.Color_4288256409, B.Color_4285887861, B.Color_4288256409, B.Color_4285887861, B.Color_4288256409, B.Color_4285887861, B.Color_4288256409, B.Color_4285887861, 0);
    B.Color_1493172224 = new A.Color(1493172224);
    B.Color_2164260863 = new A.Color(2164260863);
    B.CupertinoDynamicColor_aBn = new A.CupertinoDynamicColor(B.Color_1493172224, null, null, B.Color_1493172224, B.Color_2164260863, B.Color_1493172224, B.Color_2164260863, B.Color_1493172224, B.Color_2164260863, B.Color_1493172224, B.Color_2164260863, 0);
    B.CupertinoDynamicColor_ezo = new A.CupertinoDynamicColor(B.Color_4278190080, "label", null, B.Color_4278190080, B.Color_4294967295, B.Color_4278190080, B.Color_4294967295, B.Color_4278190080, B.Color_4294967295, B.Color_4278190080, B.Color_4294967295, 0);
    B.CupertinoPickerDefaultSelectionOverlay_false_false_null = new A.CupertinoPickerDefaultSelectionOverlay(false, false, null);
    B.CupertinoPickerDefaultSelectionOverlay_false_true_null = new A.CupertinoPickerDefaultSelectionOverlay(false, true, null);
    B.CupertinoPickerDefaultSelectionOverlay_true_false_null = new A.CupertinoPickerDefaultSelectionOverlay(true, false, null);
    B.CupertinoPickerDefaultSelectionOverlay_true_true_null = new A.CupertinoPickerDefaultSelectionOverlay(true, true, null);
    B.Color_4278221567 = new A.Color(4278221567);
    B.Color_4278879487 = new A.Color(4278879487);
    B.Color_4278206685 = new A.Color(4278206685);
    B.Color_4282424575 = new A.Color(4282424575);
    B.CupertinoDynamicColor_4em = new A.CupertinoDynamicColor(B.Color_4278221567, "systemBlue", null, B.Color_4278221567, B.Color_4278879487, B.Color_4278206685, B.Color_4282424575, B.Color_4278221567, B.Color_4278879487, B.Color_4278206685, B.Color_4282424575, 0);
    B.Color_4280032286 = new A.Color(4280032286);
    B.Color_4280558630 = new A.Color(4280558630);
    B.CupertinoDynamicColor_qG1 = new A.CupertinoDynamicColor(B.Color_4294967295, "systemBackground", null, B.Color_4294967295, B.Color_4278190080, B.Color_4294967295, B.Color_4278190080, B.Color_4294967295, B.Color_4280032286, B.Color_4294967295, B.Color_4280558630, 0);
    B.Color_4042914297 = new A.Color(4042914297);
    B.Color_4028439837 = new A.Color(4028439837);
    B.CupertinoDynamicColor_SrU = new A.CupertinoDynamicColor(B.Color_4042914297, null, null, B.Color_4042914297, B.Color_4028439837, B.Color_4042914297, B.Color_4028439837, B.Color_4042914297, B.Color_4028439837, B.Color_4042914297, B.Color_4028439837, 0);
    B._CupertinoTextThemeDefaults_Uqb = new A._CupertinoTextThemeDefaults(B.CupertinoDynamicColor_ezo, B.CupertinoDynamicColor_JHz);
    B._CupertinoThemeDefaults_v32 = new A._CupertinoThemeDefaults(null, B.CupertinoDynamicColor_4em, B.CupertinoDynamicColor_qG1, B.CupertinoDynamicColor_SrU, B.CupertinoDynamicColor_qG1, false, B._CupertinoTextThemeDefaults_Uqb);
    B.CupertinoThemeData_szZ = new A.CupertinoThemeData(B._CupertinoThemeDefaults_v32, null, null, null, null, null, null, null);
    B.CupertinoTimerPickerMode_2 = new A.CupertinoTimerPickerMode(2, "hms");
    B.DartPerformanceMode_1 = new A.DartPerformanceMode(1, "latency");
    B.DataTableThemeData_Lqf = new A.DataTableThemeData(null, null, null, null, null, null, null, null, null, null, null, null);
    B.DatePickerThemeData_YJF = new A.DatePickerThemeData(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
    B.DebugSemanticsDumpOrder_1 = new A.DebugSemanticsDumpOrder(1, "traversalOrder");
    B.DecorationPosition_0 = new A.DecorationPosition(0, "background");
    B.DecorationPosition_1 = new A.DecorationPosition(1, "foreground");
    B._NullWidget_null1 = new A._NullWidget0(null);
    B.DefaultSelectionStyle_x1B = new A.DefaultSelectionStyle(null, null, B._NullWidget_null1, null);
    B.TextStyle_ZyH = new A.TextStyle0(true, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
    B.TextOverflow_0 = new A.TextOverflow(0, "clip");
    B.TextWidthBasis_0 = new A.TextWidthBasis(0, "parent");
    B._NullWidget_null2 = new A._NullWidget2(null);
    B.DefaultTextStyle_4Wa = new A.DefaultTextStyle(B.TextStyle_ZyH, null, true, B.TextOverflow_0, null, B.TextWidthBasis_0, null, B._NullWidget_null2, null);
    B.DiagnosticLevel_3 = new A.DiagnosticLevel(3, "info");
    B.DiagnosticLevel_5 = new A.DiagnosticLevel(5, "hint");
    B.DiagnosticLevel_6 = new A.DiagnosticLevel(6, "summary");
    B.DiagnosticsTreeStyle_1 = new A.DiagnosticsTreeStyle(1, "sparse");
    B.DiagnosticsTreeStyle_10 = new A.DiagnosticsTreeStyle(10, "shallow");
    B.DiagnosticsTreeStyle_11 = new A.DiagnosticsTreeStyle(11, "truncateChildren");
    B.DiagnosticsTreeStyle_5 = new A.DiagnosticsTreeStyle(5, "error");
    B.DiagnosticsTreeStyle_8 = new A.DiagnosticsTreeStyle(8, "singleLine");
    B.DiagnosticsTreeStyle_9 = new A.DiagnosticsTreeStyle(9, "errorProperty");
    B.DialogTheme_shD = new A.DialogTheme(null, null, null, null, null, null, null, null, null, null);
    B.DisplayFeatureState_0 = new A.DisplayFeatureState(0, "unknown");
    B.DividerThemeData_Vjf = new A.DividerThemeData(null, null, null, null, null);
    B.DragStartBehavior_1 = new A.DragStartBehavior(1, "start");
    B.DrawerButtonIcon_null = new A.DrawerButtonIcon(null);
    B.DrawerThemeData_QZa = new A.DrawerThemeData(null, null, null, null, null, null, null, null);
    B.DropdownMenuThemeData_null_null_null = new A.DropdownMenuThemeData(null, null, null);
    B.Duration_0 = new A.Duration(0);
    B.Duration_100000 = new A.Duration(100000);
    B.Duration_1000000 = new A.Duration(1000000);
    B.Duration_1200000 = new A.Duration(1200000);
    B.Duration_150000 = new A.Duration(150000);
    B.Duration_1500000 = new A.Duration(1500000);
    B.Duration_16000 = new A.Duration(16000);
    B.Duration_16667 = new A.Duration(16667);
    B.Duration_167000 = new A.Duration(167000);
    B.Duration_200000 = new A.Duration(200000);
    B.Duration_2000000 = new A.Duration(2000000);
    B.Duration_225000 = new A.Duration(225000);
    B.Duration_250000 = new A.Duration(250000);
    B.Duration_2961926000 = new A.Duration(2961926000);
    B.Duration_300000 = new A.Duration(300000);
    B.Duration_375000 = new A.Duration(375000);
    B.Duration_40000 = new A.Duration(40000);
    B.Duration_400000 = new A.Duration(400000);
    B.Duration_50000 = new A.Duration(50000);
    B.Duration_500000 = new A.Duration(500000);
    B.Duration_5000000 = new A.Duration(5000000);
    B.Duration_600000 = new A.Duration(600000);
    B.Duration_75000 = new A.Duration(75000);
    B.Duration_m38000 = new A.Duration(-38000);
    B.EdgeInsets_0_0_0_0 = new A.EdgeInsets(0, 0, 0, 0);
    B.EdgeInsets_16_0_16_0 = new A.EdgeInsets(16, 0, 16, 0);
    B.EdgeInsets_16_4_16_4 = new A.EdgeInsets(16, 4, 16, 4);
    B.EdgeInsets_4_0_4_0 = new A.EdgeInsets(4, 0, 4, 0);
    B.EdgeInsets_8_0_8_0 = new A.EdgeInsets(8, 0, 8, 0);
    B.EdgeInsets_8_4_8_4 = new A.EdgeInsets(8, 4, 8, 4);
    B.EdgeInsets_8_8_8_8 = new A.EdgeInsets(8, 8, 8, 8);
    B.ElevatedButtonThemeData_null = new A.ElevatedButtonThemeData(null);
    B.EndDrawerButtonIcon_null = new A.EndDrawerButtonIcon(null);
    B.ExpansionTileThemeData_UMp = new A.ExpansionTileThemeData(null, null, null, null, null, null, null, null, null, null, null);
    B.FilledButtonThemeData_null = new A.FilledButtonThemeData(null);
    B.FixedExtentScrollPhysics_null = new A.FixedExtentScrollPhysics(null);
    B.FlexFit_0 = new A.FlexFit(0, "tight");
    B.FlexFit_1 = new A.FlexFit(1, "loose");
    B.FloatingActionButtonThemeData_Fkh = new A.FloatingActionButtonThemeData(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
    B.FocusHighlightMode_0 = new A.FocusHighlightMode(0, "touch");
    B.FocusHighlightMode_1 = new A.FocusHighlightMode(1, "traditional");
    B.FocusHighlightStrategy_0 = new A.FocusHighlightStrategy(0, "automatic");
    B.FontStyle_0 = new A.FontStyle(0, "normal");
    B.FontWeight_3 = new A.FontWeight(3);
    B.FormatException_6Jp = new A.FormatException("Invalid method call", null, null);
    B.FormatException_852 = new A.FormatException("Invalid envelope", null, null);
    B.FormatException_aN3 = new A.FormatException("Expected envelope, got nothing", null, null);
    B.FormatException_j1B = new A.FormatException("Message corrupted", null, null);
    B.GestureDisposition_0 = new A.GestureDisposition(0, "accepted");
    B.GestureDisposition_1 = new A.GestureDisposition(1, "rejected");
    B.GestureRecognizerState_0 = new A.GestureRecognizerState(0, "ready");
    B.GestureRecognizerState_1 = new A.GestureRecognizerState(1, "possible");
    B.GestureRecognizerState_2 = new A.GestureRecognizerState(2, "defunct");
    B.GrowthDirection_0 = new A.GrowthDirection(0, "forward");
    B.GrowthDirection_1 = new A.GrowthDirection(1, "reverse");
    B.HeroFlightDirection_0 = new A.HeroFlightDirection(0, "push");
    B.HeroFlightDirection_1 = new A.HeroFlightDirection(1, "pop");
    B.HitTestBehavior_0 = new A.HitTestBehavior(0, "deferToChild");
    B.HitTestBehavior_1 = new A.HitTestBehavior(1, "opaque");
    B.HitTestBehavior_2 = new A.HitTestBehavior(2, "translucent");
    B.IconButtonThemeData_null = new A.IconButtonThemeData(null);
    B.IconData_57490_true = new A.IconData(57490, true);
    B.IconData_58332_false = new A.IconData(58332, false);
    B.IconThemeData_33L = new A.IconThemeData(24, 0, 400, 0, 48, B.Color_4278190080, 1, null);
    B.IconThemeData_9ac = new A.IconThemeData(null, null, null, null, null, B.Color_4294967295, null, null);
    B.Color_3707764736 = new A.Color(3707764736);
    B.IconThemeData_U3c = new A.IconThemeData(null, null, null, null, null, B.Color_3707764736, null, null);
    B.IconThemeData_pIP = new A.IconThemeData(null, null, null, null, null, B.Color_4278190080, null, null);
    B.Interval_ERv = new A.Interval(0.5, 1, B.Cubic_glB);
    B.Interval_Lo0 = new A.Interval(0.6, 1, B.C__Linear);
    B.Interval_QKl = new A.Interval(0.2075, 0.4175, B.C__Linear);
    B.Interval_QUT = new A.Interval(0, 0.1, B.C__Linear);
    B.Interval_ZAo = new A.Interval(0.0825, 0.2075, B.C__Linear);
    B.Interval_f2e = new A.Interval(0.125, 0.25, B.C__Linear);
    B.Interval_kwb = new A.Interval(0.5, 1, B.Cubic_Dkk);
    B.Interval_owy = new A.Interval(0, 0.5, B.Cubic_Dkk);
    B.JsonDecoder_null = new A.JsonDecoder(null);
    B.JsonEncoder_null = new A.JsonEncoder(null);
    B.KeyDataTransitMode_0 = new A.KeyDataTransitMode(0, "rawKeyData");
    B.KeyEventResult_0 = new A.KeyEventResult(0, "handled");
    B.KeyEventResult_1 = new A.KeyEventResult(1, "ignored");
    B.KeyEventResult_2 = new A.KeyEventResult(2, "skipRemainingHandlers");
    B.LogicalKeyboardKey_4294967564 = new A.LogicalKeyboardKey(4294967564);
    B.KeyboardLockMode_6kv = new A.KeyboardLockMode(B.LogicalKeyboardKey_4294967564, 1, "scrollLock");
    B.LogicalKeyboardKey_4294967556 = new A.LogicalKeyboardKey(4294967556);
    B.KeyboardLockMode_KMH = new A.KeyboardLockMode(B.LogicalKeyboardKey_4294967556, 2, "capsLock");
    B.LogicalKeyboardKey_4294967562 = new A.LogicalKeyboardKey(4294967562);
    B.KeyboardLockMode_s4x = new A.KeyboardLockMode(B.LogicalKeyboardKey_4294967562, 0, "numLock");
    B.KeyboardSide_0 = new A.KeyboardSide(0, "any");
    B.KeyboardSide_3 = new A.KeyboardSide(3, "all");
    B.ListTileThemeData_mFB = new A.ListTileThemeData(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
    B._WidgetKind_0 = new A._WidgetKind(0, "button");
    B._WidgetKind_1 = new A._WidgetKind(1, "checkbox");
    B._WidgetKind_2 = new A._WidgetKind(2, "plainText");
    B._WidgetKind_3 = new A._WidgetKind(3, "datePicker");
    B._WidgetKind_4 = new A._WidgetKind(4, "progressIndicator");
    B._WidgetKind_5 = new A._WidgetKind(5, "slider");
    B._WidgetKind_6 = new A._WidgetKind(6, "appBar");
    B.List_1SY = makeConstList([B._WidgetKind_0, B._WidgetKind_1, B._WidgetKind_2, B._WidgetKind_3, B._WidgetKind_4, B._WidgetKind_5, B._WidgetKind_6], A.findType("JSArray<_WidgetKind>"));
    B._RouteRestorationType_0 = new A._RouteRestorationType(0, "named");
    B._RouteRestorationType_1 = new A._RouteRestorationType(1, "anonymous");
    B.List_5Hu = makeConstList([B._RouteRestorationType_0, B._RouteRestorationType_1], A.findType("JSArray<_RouteRestorationType>"));
    B.TextAlign_0 = new A.TextAlign(0, "left");
    B.TextAlign_1 = new A.TextAlign(1, "right");
    B.TextAlign_2 = new A.TextAlign(2, "center");
    B.TextAlign_3 = new A.TextAlign(3, "justify");
    B.TextAlign_4 = new A.TextAlign(4, "start");
    B.TextAlign_5 = new A.TextAlign(5, "end");
    B.List_9Bh = makeConstList([B.TextAlign_0, B.TextAlign_1, B.TextAlign_2, B.TextAlign_3, B.TextAlign_4, B.TextAlign_5], A.findType("JSArray<TextAlign>"));
    B.List_EjB = makeConstList(["sec."], type$.JSArray_String);
    B.FontStyle_1 = new A.FontStyle(1, "italic");
    B.List_FontStyle_0_FontStyle_1 = makeConstList([B.FontStyle_0, B.FontStyle_1], A.findType("JSArray<FontStyle>"));
    B.List_HOF = makeConstList(["min."], type$.JSArray_String);
    B.C_Locale = new A.Locale();
    B.List_Locale = makeConstList([B.C_Locale], type$.JSArray_Locale);
    B.TextBaseline_0 = new A.TextBaseline(0, "alphabetic");
    B.TextBaseline_1 = new A.TextBaseline(1, "ideographic");
    B.List_TextBaseline_0_TextBaseline_1 = makeConstList([B.TextBaseline_0, B.TextBaseline_1], A.findType("JSArray<TextBaseline>"));
    B.TextDirection_0 = new A.TextDirection(0, "rtl");
    B.TextDirection_1 = new A.TextDirection(1, "ltr");
    B.List_TextDirection_0_TextDirection_1 = makeConstList([B.TextDirection_0, B.TextDirection_1], A.findType("JSArray<TextDirection>"));
    B.TextDecorationStyle_0 = new A.TextDecorationStyle(0, "solid");
    B.TextDecorationStyle_1 = new A.TextDecorationStyle(1, "double");
    B.TextDecorationStyle_2 = new A.TextDecorationStyle(2, "dotted");
    B.TextDecorationStyle_3 = new A.TextDecorationStyle(3, "dashed");
    B.TextDecorationStyle_4 = new A.TextDecorationStyle(4, "wavy");
    B.List_U9x = makeConstList([B.TextDecorationStyle_0, B.TextDecorationStyle_1, B.TextDecorationStyle_2, B.TextDecorationStyle_3, B.TextDecorationStyle_4], A.findType("JSArray<TextDecorationStyle>"));
    B.TargetPlatform_1 = new A.TargetPlatform(1, "fuchsia");
    B.TargetPlatform_3 = new A.TargetPlatform(3, "linux");
    B.TargetPlatform_5 = new A.TargetPlatform(5, "windows");
    B.List_Y7p = makeConstList([B.TargetPlatform_0, B.TargetPlatform_1, B.TargetPlatform_2, B.TargetPlatform_3, B.TargetPlatform_4, B.TargetPlatform_5], A.findType("JSArray<TargetPlatform>"));
    B._CornerId_0 = new A._CornerId(0, "topLeft");
    B._CornerId_3 = new A._CornerId(3, "bottomRight");
    B._Diagonal__CornerId_0__CornerId_3 = new A._Diagonal(B._CornerId_0, B._CornerId_3);
    B._Diagonal__CornerId_3__CornerId_0 = new A._Diagonal(B._CornerId_3, B._CornerId_0);
    B._CornerId_1 = new A._CornerId(1, "topRight");
    B._CornerId_2 = new A._CornerId(2, "bottomLeft");
    B._Diagonal__CornerId_1__CornerId_2 = new A._Diagonal(B._CornerId_1, B._CornerId_2);
    B._Diagonal__CornerId_2__CornerId_1 = new A._Diagonal(B._CornerId_2, B._CornerId_1);
    B.List_Yk4 = makeConstList([B._Diagonal__CornerId_0__CornerId_3, B._Diagonal__CornerId_3__CornerId_0, B._Diagonal__CornerId_1__CornerId_2, B._Diagonal__CornerId_2__CornerId_1], A.findType("JSArray<_Diagonal>"));
    B.C_ActivateIntent = new A.ActivateIntent();
    B.ScrollIncrementType_1 = new A.ScrollIncrementType(1, "page");
    B.ScrollIntent_Lhi = new A.ScrollIntent(B.AxisDirection_2, B.ScrollIncrementType_1);
    B.List_d7X = makeConstList([B.C_ActivateIntent, B.ScrollIntent_Lhi], A.findType("JSArray<Intent>"));
    B.Offset_1_0 = new A.Offset(1, 0);
    B.Offset_1_1 = new A.Offset(1, 1);
    B.Offset_0_1 = new A.Offset(0, 1);
    B.Offset_m1_1 = new A.Offset(-1, 1);
    B.Offset_m1_0 = new A.Offset(-1, 0);
    B.Offset_m1_m1 = new A.Offset(-1, -1);
    B.Offset_0_m1 = new A.Offset(0, -1);
    B.Offset_1_m1 = new A.Offset(1, -1);
    B.List_de5 = makeConstList([B.Offset_1_0, B.Offset_1_1, B.Offset_0_1, B.Offset_m1_1, B.Offset_m1_0, B.Offset_m1_m1, B.Offset_0_m1, B.Offset_1_m1], type$.JSArray_Offset);
    B.List_empty8 = makeConstList([], A.findType("JSArray<CustomPainterSemantics>"));
    B.List_empty1 = makeConstList([], type$.JSArray_NavigatorObserver);
    B.List_empty3 = makeConstList([], type$.JSArray_Object);
    B.List_empty4 = makeConstList([], type$.JSArray_OverlayEntry);
    B.List_empty2 = makeConstList([], A.findType("JSArray<Page<@>>"));
    B.List_empty7 = makeConstList([], type$.JSArray_Selectable);
    B.List_empty9 = makeConstList([], type$.JSArray_SemanticsNode);
    B.List_empty = makeConstList([], type$.JSArray_String);
    B.List_empty0 = makeConstList([], type$.JSArray_StringAttribute);
    B.List_empty12 = makeConstList([], type$.JSArray_Widget);
    B.List_empty10 = makeConstList([], type$.JSArray_double);
    B.List_empty11 = makeConstList([], type$.JSArray_int);
    B.List_empty5 = makeConstList([], type$.JSArray_dynamic);
    B.FontWeight_0 = new A.FontWeight(0);
    B.FontWeight_1 = new A.FontWeight(1);
    B.FontWeight_2 = new A.FontWeight(2);
    B.FontWeight_4 = new A.FontWeight(4);
    B.FontWeight_5 = new A.FontWeight(5);
    B.FontWeight_6 = new A.FontWeight(6);
    B.FontWeight_7 = new A.FontWeight(7);
    B.FontWeight_8 = new A.FontWeight(8);
    B.List_gVO = makeConstList([B.FontWeight_0, B.FontWeight_1, B.FontWeight_2, B.FontWeight_3, B.FontWeight_4, B.FontWeight_5, B.FontWeight_6, B.FontWeight_7, B.FontWeight_8], A.findType("JSArray<FontWeight>"));
    B.List_hour_hours = makeConstList(["hour", "hours"], type$.JSArray_String);
    B.DisplayFeatureState_1 = new A.DisplayFeatureState(1, "postureFlat");
    B.DisplayFeatureState_2 = new A.DisplayFeatureState(2, "postureHalfOpened");
    B.DisplayFeatureState_3 = new A.DisplayFeatureState(3, "postureFlipped");
    B.List_pTL = makeConstList([B.DisplayFeatureState_0, B.DisplayFeatureState_1, B.DisplayFeatureState_2, B.DisplayFeatureState_3], A.findType("JSArray<DisplayFeatureState>"));
    B.DisplayFeatureType_0 = new A.DisplayFeatureType(0, "unknown");
    B.DisplayFeatureType_1 = new A.DisplayFeatureType(1, "fold");
    B.DisplayFeatureType_2 = new A.DisplayFeatureType(2, "hinge");
    B.DisplayFeatureType_3 = new A.DisplayFeatureType(3, "cutout");
    B.List_sHJ = makeConstList([B.DisplayFeatureType_0, B.DisplayFeatureType_1, B.DisplayFeatureType_2, B.DisplayFeatureType_3], A.findType("JSArray<DisplayFeatureType>"));
    B.ModifierKey_0 = new A.ModifierKey(0, "controlModifier");
    B.ModifierKey_1 = new A.ModifierKey(1, "shiftModifier");
    B.ModifierKey_2 = new A.ModifierKey(2, "altModifier");
    B.ModifierKey_3 = new A.ModifierKey(3, "metaModifier");
    B.ModifierKey_4 = new A.ModifierKey(4, "capsLockModifier");
    B.ModifierKey_5 = new A.ModifierKey(5, "numLockModifier");
    B.ModifierKey_6 = new A.ModifierKey(6, "scrollLockModifier");
    B.ModifierKey_7 = new A.ModifierKey(7, "functionModifier");
    B.ModifierKey_8 = new A.ModifierKey(8, "symbolModifier");
    B.List_swa = makeConstList([B.ModifierKey_0, B.ModifierKey_1, B.ModifierKey_2, B.ModifierKey_3, B.ModifierKey_4, B.ModifierKey_5, B.ModifierKey_6, B.ModifierKey_7, B.ModifierKey_8], A.findType("JSArray<ModifierKey>"));
    B.List_true_false = makeConstList([true, false], A.findType("JSArray<bool>"));
    B.LogicalKeyboardKey_4294967304 = new A.LogicalKeyboardKey(4294967304);
    B.LogicalKeyboardKey_4294967323 = new A.LogicalKeyboardKey(4294967323);
    B.LogicalKeyboardKey_4294967423 = new A.LogicalKeyboardKey(4294967423);
    B.LogicalKeyboardKey_4294967558 = new A.LogicalKeyboardKey(4294967558);
    B.LogicalKeyboardKey_8589934848 = new A.LogicalKeyboardKey(8589934848);
    B.LogicalKeyboardKey_8589934849 = new A.LogicalKeyboardKey(8589934849);
    B.LogicalKeyboardKey_8589934850 = new A.LogicalKeyboardKey(8589934850);
    B.LogicalKeyboardKey_8589934851 = new A.LogicalKeyboardKey(8589934851);
    B.LogicalKeyboardKey_8589934852 = new A.LogicalKeyboardKey(8589934852);
    B.LogicalKeyboardKey_8589934853 = new A.LogicalKeyboardKey(8589934853);
    B.LogicalKeyboardKey_8589934854 = new A.LogicalKeyboardKey(8589934854);
    B.LogicalKeyboardKey_8589934855 = new A.LogicalKeyboardKey(8589934855);
    B.Offset_0_0 = new A.Offset(0, 0);
    B.Velocity_Offset_0_0 = new A.Velocity(B.Offset_0_0);
    B.LongPressEndDetails_pU8 = new A.LongPressEndDetails(B.Offset_0_0, B.Velocity_Offset_0_0);
    B.LongPressSemanticsEvent_longPress = new A.LongPressSemanticsEvent("longPress");
    B.LongPressStartDetails_Offset_0_0 = new A.LongPressStartDetails(B.Offset_0_0);
    B.MainAxisAlignment_0 = new A.MainAxisAlignment(0, "start");
    B.MainAxisSize_0 = new A.MainAxisSize(0, "min");
    B.MainAxisSize_1 = new A.MainAxisSize(1, "max");
    B.LogicalKeyboardKey_4294968065 = new A.LogicalKeyboardKey(4294968065);
    B.SingleActivator_qU42 = new A.SingleActivator(B.LogicalKeyboardKey_4294968065, false, false, true, false);
    B.LogicalKeyboardKey_4294968066 = new A.LogicalKeyboardKey(4294968066);
    B.SingleActivator_qU4 = new A.SingleActivator(B.LogicalKeyboardKey_4294968066, false, false, true, false);
    B.LogicalKeyboardKey_4294968067 = new A.LogicalKeyboardKey(4294968067);
    B.SingleActivator_qU40 = new A.SingleActivator(B.LogicalKeyboardKey_4294968067, false, false, true, false);
    B.LogicalKeyboardKey_4294968068 = new A.LogicalKeyboardKey(4294968068);
    B.SingleActivator_qU41 = new A.SingleActivator(B.LogicalKeyboardKey_4294968068, false, false, true, false);
    B.SingleActivator_nQG2 = new A.SingleActivator(B.LogicalKeyboardKey_4294968065, false, false, false, true);
    B.SingleActivator_nQG = new A.SingleActivator(B.LogicalKeyboardKey_4294968066, false, false, false, true);
    B.SingleActivator_nQG0 = new A.SingleActivator(B.LogicalKeyboardKey_4294968067, false, false, false, true);
    B.SingleActivator_nQG1 = new A.SingleActivator(B.LogicalKeyboardKey_4294968068, false, false, false, true);
    B.LogicalKeyboardKey_4294968072 = new A.LogicalKeyboardKey(4294968072);
    B.SingleActivator_Ss8 = new A.SingleActivator(B.LogicalKeyboardKey_4294968072, false, true, false, false);
    B.LogicalKeyboardKey_4294968071 = new A.LogicalKeyboardKey(4294968071);
    B.SingleActivator_fhn5 = new A.SingleActivator(B.LogicalKeyboardKey_4294968071, false, true, false, false);
    B.LogicalKeyboardKey_4294968069 = new A.LogicalKeyboardKey(4294968069);
    B.SingleActivator_fhn0 = new A.SingleActivator(B.LogicalKeyboardKey_4294968069, false, true, false, false);
    B.LogicalKeyboardKey_4294968070 = new A.LogicalKeyboardKey(4294968070);
    B.SingleActivator_fhn = new A.SingleActivator(B.LogicalKeyboardKey_4294968070, false, true, false, false);
    B.SingleActivator_VNv5 = new A.SingleActivator(B.LogicalKeyboardKey_4294968065, false, false, false, false);
    B.SingleActivator_VNv2 = new A.SingleActivator(B.LogicalKeyboardKey_4294968066, false, false, false, false);
    B.SingleActivator_VNv3 = new A.SingleActivator(B.LogicalKeyboardKey_4294968067, false, false, false, false);
    B.SingleActivator_VNv4 = new A.SingleActivator(B.LogicalKeyboardKey_4294968068, false, false, false, false);
    B.SingleActivator_iT51 = new A.SingleActivator(B.LogicalKeyboardKey_4294968066, true, false, false, false);
    B.SingleActivator_iT52 = new A.SingleActivator(B.LogicalKeyboardKey_4294968067, true, false, false, false);
    B.SingleActivator_FII1 = new A.SingleActivator(B.LogicalKeyboardKey_4294968066, true, true, false, false);
    B.SingleActivator_FII2 = new A.SingleActivator(B.LogicalKeyboardKey_4294968067, true, true, false, false);
    B.SingleActivator_IdB = new A.SingleActivator(B.LogicalKeyboardKey_4294968072, false, false, false, false);
    B.SingleActivator_VNv = new A.SingleActivator(B.LogicalKeyboardKey_4294968071, false, false, false, false);
    B.SingleActivator_VNv1 = new A.SingleActivator(B.LogicalKeyboardKey_4294968069, false, false, false, false);
    B.SingleActivator_VNv0 = new A.SingleActivator(B.LogicalKeyboardKey_4294968070, false, false, false, false);
    B.SingleActivator_iT50 = new A.SingleActivator(B.LogicalKeyboardKey_4294968069, true, false, false, false);
    B.SingleActivator_iT5 = new A.SingleActivator(B.LogicalKeyboardKey_4294968070, true, false, false, false);
    B.LogicalKeyboardKey_32 = new A.LogicalKeyboardKey(32);
    B.SingleActivator_Gxm = new A.SingleActivator(B.LogicalKeyboardKey_32, false, false, false, false);
    B.LogicalKeyboardKey_4294967309 = new A.LogicalKeyboardKey(4294967309);
    B.SingleActivator_Xuu = new A.SingleActivator(B.LogicalKeyboardKey_4294967309, false, false, false, false);
    B.Map_2KpG4 = new A.GeneralConstantMap([B.SingleActivator_qU42, B.C_DoNothingAndStopPropagationTextIntent, B.SingleActivator_qU4, B.C_DoNothingAndStopPropagationTextIntent, B.SingleActivator_qU40, B.C_DoNothingAndStopPropagationTextIntent, B.SingleActivator_qU41, B.C_DoNothingAndStopPropagationTextIntent, B.SingleActivator_nQG2, B.C_DoNothingAndStopPropagationTextIntent, B.SingleActivator_nQG, B.C_DoNothingAndStopPropagationTextIntent, B.SingleActivator_nQG0, B.C_DoNothingAndStopPropagationTextIntent, B.SingleActivator_nQG1, B.C_DoNothingAndStopPropagationTextIntent, B.SingleActivator_Ss8, B.C_DoNothingAndStopPropagationTextIntent, B.SingleActivator_fhn5, B.C_DoNothingAndStopPropagationTextIntent, B.SingleActivator_fhn0, B.C_DoNothingAndStopPropagationTextIntent, B.SingleActivator_fhn, B.C_DoNothingAndStopPropagationTextIntent, B.SingleActivator_VNv5, B.C_DoNothingAndStopPropagationTextIntent, B.SingleActivator_VNv2, B.C_DoNothingAndStopPropagationTextIntent, B.SingleActivator_VNv3, B.C_DoNothingAndStopPropagationTextIntent, B.SingleActivator_VNv4, B.C_DoNothingAndStopPropagationTextIntent, B.SingleActivator_iT51, B.C_DoNothingAndStopPropagationTextIntent, B.SingleActivator_iT52, B.C_DoNothingAndStopPropagationTextIntent, B.SingleActivator_FII1, B.C_DoNothingAndStopPropagationTextIntent, B.SingleActivator_FII2, B.C_DoNothingAndStopPropagationTextIntent, B.SingleActivator_IdB, B.C_DoNothingAndStopPropagationTextIntent, B.SingleActivator_VNv, B.C_DoNothingAndStopPropagationTextIntent, B.SingleActivator_VNv1, B.C_DoNothingAndStopPropagationTextIntent, B.SingleActivator_VNv0, B.C_DoNothingAndStopPropagationTextIntent, B.SingleActivator_iT50, B.C_DoNothingAndStopPropagationTextIntent, B.SingleActivator_iT5, B.C_DoNothingAndStopPropagationTextIntent, B.SingleActivator_Gxm, B.C_DoNothingAndStopPropagationTextIntent, B.SingleActivator_Xuu, B.C_DoNothingAndStopPropagationTextIntent], type$.GeneralConstantMap_ShortcutActivator_Intent);
    B._SliderAdjustmentType_1 = new A._SliderAdjustmentType(1, "left");
    B._AdjustSliderIntent__SliderAdjustmentType_1 = new A._AdjustSliderIntent(B._SliderAdjustmentType_1);
    B._SliderAdjustmentType_0 = new A._SliderAdjustmentType(0, "right");
    B._AdjustSliderIntent__SliderAdjustmentType_0 = new A._AdjustSliderIntent(B._SliderAdjustmentType_0);
    B.Map_8WZS8 = new A.GeneralConstantMap([B.SingleActivator_VNv2, B._AdjustSliderIntent__SliderAdjustmentType_1, B.SingleActivator_VNv3, B._AdjustSliderIntent__SliderAdjustmentType_0], type$.GeneralConstantMap_ShortcutActivator_Intent);
    B._SliderAdjustmentType_2 = new A._SliderAdjustmentType(2, "up");
    B._AdjustSliderIntent__SliderAdjustmentType_2 = new A._AdjustSliderIntent(B._SliderAdjustmentType_2);
    B._SliderAdjustmentType_3 = new A._SliderAdjustmentType(3, "down");
    B._AdjustSliderIntent__SliderAdjustmentType_3 = new A._AdjustSliderIntent(B._SliderAdjustmentType_3);
    B.Map_A0fEd = new A.GeneralConstantMap([B.SingleActivator_VNv4, B._AdjustSliderIntent__SliderAdjustmentType_2, B.SingleActivator_VNv5, B._AdjustSliderIntent__SliderAdjustmentType_3, B.SingleActivator_VNv2, B._AdjustSliderIntent__SliderAdjustmentType_1, B.SingleActivator_VNv3, B._AdjustSliderIntent__SliderAdjustmentType_0], type$.GeneralConstantMap_ShortcutActivator_Intent);
    B.LogicalKeyboardKey_8589935117 = new A.LogicalKeyboardKey(8589935117);
    B.SingleActivator_org = new A.SingleActivator(B.LogicalKeyboardKey_8589935117, false, false, false, false);
    B.SingleActivator_XaG = new A.SingleActivator(B.LogicalKeyboardKey_4294967323, false, false, false, false);
    B.LogicalKeyboardKey_4294967305 = new A.LogicalKeyboardKey(4294967305);
    B.SingleActivator_Xuu0 = new A.SingleActivator(B.LogicalKeyboardKey_4294967305, false, false, false, false);
    B.SingleActivator_vyt = new A.SingleActivator(B.LogicalKeyboardKey_4294967305, false, true, false, false);
    B.C_PrioritizedIntents = new A.PrioritizedIntents();
    B.C_ButtonActivateIntent = new A.ButtonActivateIntent();
    B.C_DismissIntent = new A.DismissIntent();
    B.C_NextFocusIntent = new A.NextFocusIntent();
    B.C_PreviousFocusIntent = new A.PreviousFocusIntent();
    B.ScrollIncrementType_0 = new A.ScrollIncrementType(0, "line");
    B.ScrollIntent_RmG = new A.ScrollIntent(B.AxisDirection_0, B.ScrollIncrementType_0);
    B.ScrollIntent_PeK = new A.ScrollIntent(B.AxisDirection_2, B.ScrollIncrementType_0);
    B.ScrollIntent_ssu = new A.ScrollIntent(B.AxisDirection_3, B.ScrollIncrementType_0);
    B.ScrollIntent_dss = new A.ScrollIntent(B.AxisDirection_1, B.ScrollIncrementType_0);
    B.ScrollIntent_aFe = new A.ScrollIntent(B.AxisDirection_0, B.ScrollIncrementType_1);
    B.Map_D3MsM = new A.GeneralConstantMap([B.SingleActivator_Gxm, B.C_PrioritizedIntents, B.SingleActivator_Xuu, B.C_ButtonActivateIntent, B.SingleActivator_org, B.C_ButtonActivateIntent, B.SingleActivator_XaG, B.C_DismissIntent, B.SingleActivator_Xuu0, B.C_NextFocusIntent, B.SingleActivator_vyt, B.C_PreviousFocusIntent, B.SingleActivator_VNv4, B.ScrollIntent_RmG, B.SingleActivator_VNv5, B.ScrollIntent_PeK, B.SingleActivator_VNv2, B.ScrollIntent_ssu, B.SingleActivator_VNv3, B.ScrollIntent_dss, B.SingleActivator_IdB, B.ScrollIntent_aFe, B.SingleActivator_VNv, B.ScrollIntent_Lhi], type$.GeneralConstantMap_ShortcutActivator_Intent);
    B.Map_IMUVa = new A.GeneralConstantMap([0, "FontWeight.w100", 1, "FontWeight.w200", 2, "FontWeight.w300", 3, "FontWeight.w400", 4, "FontWeight.w500", 5, "FontWeight.w600", 6, "FontWeight.w700", 7, "FontWeight.w800", 8, "FontWeight.w900"], A.findType("GeneralConstantMap<int,String>"));
    B.Object_KPR = {AVRInput: 0, AVRPower: 1, Accel: 2, Accept: 3, Again: 4, AllCandidates: 5, Alphanumeric: 6, AltGraph: 7, AppSwitch: 8, ArrowDown: 9, ArrowLeft: 10, ArrowRight: 11, ArrowUp: 12, Attn: 13, AudioBalanceLeft: 14, AudioBalanceRight: 15, AudioBassBoostDown: 16, AudioBassBoostToggle: 17, AudioBassBoostUp: 18, AudioFaderFront: 19, AudioFaderRear: 20, AudioSurroundModeNext: 21, AudioTrebleDown: 22, AudioTrebleUp: 23, AudioVolumeDown: 24, AudioVolumeMute: 25, AudioVolumeUp: 26, Backspace: 27, BrightnessDown: 28, BrightnessUp: 29, BrowserBack: 30, BrowserFavorites: 31, BrowserForward: 32, BrowserHome: 33, BrowserRefresh: 34, BrowserSearch: 35, BrowserStop: 36, Call: 37, Camera: 38, CameraFocus: 39, Cancel: 40, CapsLock: 41, ChannelDown: 42, ChannelUp: 43, Clear: 44, Close: 45, ClosedCaptionToggle: 46, CodeInput: 47, ColorF0Red: 48, ColorF1Green: 49, ColorF2Yellow: 50, ColorF3Blue: 51, ColorF4Grey: 52, ColorF5Brown: 53, Compose: 54, ContextMenu: 55, Convert: 56, Copy: 57, CrSel: 58, Cut: 59, DVR: 60, Delete: 61, Dimmer: 62, DisplaySwap: 63, Eisu: 64, Eject: 65, End: 66, EndCall: 67, Enter: 68, EraseEof: 69, Esc: 70, Escape: 71, ExSel: 72, Execute: 73, Exit: 74, F1: 75, F10: 76, F11: 77, F12: 78, F13: 79, F14: 80, F15: 81, F16: 82, F17: 83, F18: 84, F19: 85, F2: 86, F20: 87, F21: 88, F22: 89, F23: 90, F24: 91, F3: 92, F4: 93, F5: 94, F6: 95, F7: 96, F8: 97, F9: 98, FavoriteClear0: 99, FavoriteClear1: 100, FavoriteClear2: 101, FavoriteClear3: 102, FavoriteRecall0: 103, FavoriteRecall1: 104, FavoriteRecall2: 105, FavoriteRecall3: 106, FavoriteStore0: 107, FavoriteStore1: 108, FavoriteStore2: 109, FavoriteStore3: 110, FinalMode: 111, Find: 112, Fn: 113, FnLock: 114, GoBack: 115, GoHome: 116, GroupFirst: 117, GroupLast: 118, GroupNext: 119, GroupPrevious: 120, Guide: 121, GuideNextDay: 122, GuidePreviousDay: 123, HangulMode: 124, HanjaMode: 125, Hankaku: 126, HeadsetHook: 127, Help: 128, Hibernate: 129, Hiragana: 130, HiraganaKatakana: 131, Home: 132, Hyper: 133, Info: 134, Insert: 135, InstantReplay: 136, JunjaMode: 137, KanaMode: 138, KanjiMode: 139, Katakana: 140, Key11: 141, Key12: 142, LastNumberRedial: 143, LaunchApplication1: 144, LaunchApplication2: 145, LaunchAssistant: 146, LaunchCalendar: 147, LaunchContacts: 148, LaunchControlPanel: 149, LaunchMail: 150, LaunchMediaPlayer: 151, LaunchMusicPlayer: 152, LaunchPhone: 153, LaunchScreenSaver: 154, LaunchSpreadsheet: 155, LaunchWebBrowser: 156, LaunchWebCam: 157, LaunchWordProcessor: 158, Link: 159, ListProgram: 160, LiveContent: 161, Lock: 162, LogOff: 163, MailForward: 164, MailReply: 165, MailSend: 166, MannerMode: 167, MediaApps: 168, MediaAudioTrack: 169, MediaClose: 170, MediaFastForward: 171, MediaLast: 172, MediaPause: 173, MediaPlay: 174, MediaPlayPause: 175, MediaRecord: 176, MediaRewind: 177, MediaSkip: 178, MediaSkipBackward: 179, MediaSkipForward: 180, MediaStepBackward: 181, MediaStepForward: 182, MediaStop: 183, MediaTopMenu: 184, MediaTrackNext: 185, MediaTrackPrevious: 186, MicrophoneToggle: 187, MicrophoneVolumeDown: 188, MicrophoneVolumeMute: 189, MicrophoneVolumeUp: 190, ModeChange: 191, NavigateIn: 192, NavigateNext: 193, NavigateOut: 194, NavigatePrevious: 195, New: 196, NextCandidate: 197, NextFavoriteChannel: 198, NextUserProfile: 199, NonConvert: 200, Notification: 201, NumLock: 202, OnDemand: 203, Open: 204, PageDown: 205, PageUp: 206, Pairing: 207, Paste: 208, Pause: 209, PinPDown: 210, PinPMove: 211, PinPToggle: 212, PinPUp: 213, Play: 214, PlaySpeedDown: 215, PlaySpeedReset: 216, PlaySpeedUp: 217, Power: 218, PowerOff: 219, PreviousCandidate: 220, Print: 221, PrintScreen: 222, Process: 223, Props: 224, RandomToggle: 225, RcLowBattery: 226, RecordSpeedNext: 227, Redo: 228, RfBypass: 229, Romaji: 230, STBInput: 231, STBPower: 232, Save: 233, ScanChannelsToggle: 234, ScreenModeNext: 235, ScrollLock: 236, Select: 237, Settings: 238, ShiftLevel5: 239, SingleCandidate: 240, Soft1: 241, Soft2: 242, Soft3: 243, Soft4: 244, Soft5: 245, Soft6: 246, Soft7: 247, Soft8: 248, SpeechCorrectionList: 249, SpeechInputToggle: 250, SpellCheck: 251, SplitScreenToggle: 252, Standby: 253, Subtitle: 254, Super: 255, Symbol: 256, SymbolLock: 257, TV: 258, TV3DMode: 259, TVAntennaCable: 260, TVAudioDescription: 261, TVAudioDescriptionMixDown: 262, TVAudioDescriptionMixUp: 263, TVContentsMenu: 264, TVDataService: 265, TVInput: 266, TVInputComponent1: 267, TVInputComponent2: 268, TVInputComposite1: 269, TVInputComposite2: 270, TVInputHDMI1: 271, TVInputHDMI2: 272, TVInputHDMI3: 273, TVInputHDMI4: 274, TVInputVGA1: 275, TVMediaContext: 276, TVNetwork: 277, TVNumberEntry: 278, TVPower: 279, TVRadioService: 280, TVSatellite: 281, TVSatelliteBS: 282, TVSatelliteCS: 283, TVSatelliteToggle: 284, TVTerrestrialAnalog: 285, TVTerrestrialDigital: 286, TVTimer: 287, Tab: 288, Teletext: 289, Undo: 290, Unidentified: 291, VideoModeNext: 292, VoiceDial: 293, WakeUp: 294, Wink: 295, Zenkaku: 296, ZenkakuHankaku: 297, ZoomIn: 298, ZoomOut: 299, ZoomToggle: 300};
    B.LogicalKeyboardKey_4294970632 = new A.LogicalKeyboardKey(4294970632);
    B.LogicalKeyboardKey_4294970633 = new A.LogicalKeyboardKey(4294970633);
    B.LogicalKeyboardKey_4294967553 = new A.LogicalKeyboardKey(4294967553);
    B.LogicalKeyboardKey_4294968577 = new A.LogicalKeyboardKey(4294968577);
    B.LogicalKeyboardKey_4294968578 = new A.LogicalKeyboardKey(4294968578);
    B.LogicalKeyboardKey_4294969089 = new A.LogicalKeyboardKey(4294969089);
    B.LogicalKeyboardKey_4294969090 = new A.LogicalKeyboardKey(4294969090);
    B.LogicalKeyboardKey_4294967555 = new A.LogicalKeyboardKey(4294967555);
    B.LogicalKeyboardKey_4294971393 = new A.LogicalKeyboardKey(4294971393);
    B.LogicalKeyboardKey_4294968579 = new A.LogicalKeyboardKey(4294968579);
    B.LogicalKeyboardKey_4294970625 = new A.LogicalKeyboardKey(4294970625);
    B.LogicalKeyboardKey_4294970626 = new A.LogicalKeyboardKey(4294970626);
    B.LogicalKeyboardKey_4294970627 = new A.LogicalKeyboardKey(4294970627);
    B.LogicalKeyboardKey_4294970882 = new A.LogicalKeyboardKey(4294970882);
    B.LogicalKeyboardKey_4294970628 = new A.LogicalKeyboardKey(4294970628);
    B.LogicalKeyboardKey_4294970629 = new A.LogicalKeyboardKey(4294970629);
    B.LogicalKeyboardKey_4294970630 = new A.LogicalKeyboardKey(4294970630);
    B.LogicalKeyboardKey_4294970631 = new A.LogicalKeyboardKey(4294970631);
    B.LogicalKeyboardKey_4294970884 = new A.LogicalKeyboardKey(4294970884);
    B.LogicalKeyboardKey_4294970885 = new A.LogicalKeyboardKey(4294970885);
    B.LogicalKeyboardKey_4294969871 = new A.LogicalKeyboardKey(4294969871);
    B.LogicalKeyboardKey_4294969873 = new A.LogicalKeyboardKey(4294969873);
    B.LogicalKeyboardKey_4294969872 = new A.LogicalKeyboardKey(4294969872);
    B.LogicalKeyboardKey_4294968833 = new A.LogicalKeyboardKey(4294968833);
    B.LogicalKeyboardKey_4294968834 = new A.LogicalKeyboardKey(4294968834);
    B.LogicalKeyboardKey_4294970369 = new A.LogicalKeyboardKey(4294970369);
    B.LogicalKeyboardKey_4294970370 = new A.LogicalKeyboardKey(4294970370);
    B.LogicalKeyboardKey_4294970371 = new A.LogicalKeyboardKey(4294970371);
    B.LogicalKeyboardKey_4294970372 = new A.LogicalKeyboardKey(4294970372);
    B.LogicalKeyboardKey_4294970373 = new A.LogicalKeyboardKey(4294970373);
    B.LogicalKeyboardKey_4294970374 = new A.LogicalKeyboardKey(4294970374);
    B.LogicalKeyboardKey_4294970375 = new A.LogicalKeyboardKey(4294970375);
    B.LogicalKeyboardKey_4294971394 = new A.LogicalKeyboardKey(4294971394);
    B.LogicalKeyboardKey_4294968835 = new A.LogicalKeyboardKey(4294968835);
    B.LogicalKeyboardKey_4294971395 = new A.LogicalKeyboardKey(4294971395);
    B.LogicalKeyboardKey_4294968580 = new A.LogicalKeyboardKey(4294968580);
    B.LogicalKeyboardKey_4294970634 = new A.LogicalKeyboardKey(4294970634);
    B.LogicalKeyboardKey_4294970635 = new A.LogicalKeyboardKey(4294970635);
    B.LogicalKeyboardKey_4294968321 = new A.LogicalKeyboardKey(4294968321);
    B.LogicalKeyboardKey_4294969857 = new A.LogicalKeyboardKey(4294969857);
    B.LogicalKeyboardKey_4294970642 = new A.LogicalKeyboardKey(4294970642);
    B.LogicalKeyboardKey_4294969091 = new A.LogicalKeyboardKey(4294969091);
    B.LogicalKeyboardKey_4294970636 = new A.LogicalKeyboardKey(4294970636);
    B.LogicalKeyboardKey_4294970637 = new A.LogicalKeyboardKey(4294970637);
    B.LogicalKeyboardKey_4294970638 = new A.LogicalKeyboardKey(4294970638);
    B.LogicalKeyboardKey_4294970639 = new A.LogicalKeyboardKey(4294970639);
    B.LogicalKeyboardKey_4294970640 = new A.LogicalKeyboardKey(4294970640);
    B.LogicalKeyboardKey_4294970641 = new A.LogicalKeyboardKey(4294970641);
    B.LogicalKeyboardKey_4294969092 = new A.LogicalKeyboardKey(4294969092);
    B.LogicalKeyboardKey_4294968581 = new A.LogicalKeyboardKey(4294968581);
    B.LogicalKeyboardKey_4294969093 = new A.LogicalKeyboardKey(4294969093);
    B.LogicalKeyboardKey_4294968322 = new A.LogicalKeyboardKey(4294968322);
    B.LogicalKeyboardKey_4294968323 = new A.LogicalKeyboardKey(4294968323);
    B.LogicalKeyboardKey_4294968324 = new A.LogicalKeyboardKey(4294968324);
    B.LogicalKeyboardKey_4294970703 = new A.LogicalKeyboardKey(4294970703);
    B.LogicalKeyboardKey_4294970643 = new A.LogicalKeyboardKey(4294970643);
    B.LogicalKeyboardKey_4294970644 = new A.LogicalKeyboardKey(4294970644);
    B.LogicalKeyboardKey_4294969108 = new A.LogicalKeyboardKey(4294969108);
    B.LogicalKeyboardKey_4294968836 = new A.LogicalKeyboardKey(4294968836);
    B.LogicalKeyboardKey_4294971396 = new A.LogicalKeyboardKey(4294971396);
    B.LogicalKeyboardKey_4294968325 = new A.LogicalKeyboardKey(4294968325);
    B.LogicalKeyboardKey_4294968326 = new A.LogicalKeyboardKey(4294968326);
    B.LogicalKeyboardKey_4294968582 = new A.LogicalKeyboardKey(4294968582);
    B.LogicalKeyboardKey_4294970645 = new A.LogicalKeyboardKey(4294970645);
    B.LogicalKeyboardKey_4294969345 = new A.LogicalKeyboardKey(4294969345);
    B.LogicalKeyboardKey_4294969354 = new A.LogicalKeyboardKey(4294969354);
    B.LogicalKeyboardKey_4294969355 = new A.LogicalKeyboardKey(4294969355);
    B.LogicalKeyboardKey_4294969356 = new A.LogicalKeyboardKey(4294969356);
    B.LogicalKeyboardKey_4294969357 = new A.LogicalKeyboardKey(4294969357);
    B.LogicalKeyboardKey_4294969358 = new A.LogicalKeyboardKey(4294969358);
    B.LogicalKeyboardKey_4294969359 = new A.LogicalKeyboardKey(4294969359);
    B.LogicalKeyboardKey_4294969360 = new A.LogicalKeyboardKey(4294969360);
    B.LogicalKeyboardKey_4294969361 = new A.LogicalKeyboardKey(4294969361);
    B.LogicalKeyboardKey_4294969362 = new A.LogicalKeyboardKey(4294969362);
    B.LogicalKeyboardKey_4294969363 = new A.LogicalKeyboardKey(4294969363);
    B.LogicalKeyboardKey_4294969346 = new A.LogicalKeyboardKey(4294969346);
    B.LogicalKeyboardKey_4294969364 = new A.LogicalKeyboardKey(4294969364);
    B.LogicalKeyboardKey_4294969365 = new A.LogicalKeyboardKey(4294969365);
    B.LogicalKeyboardKey_4294969366 = new A.LogicalKeyboardKey(4294969366);
    B.LogicalKeyboardKey_4294969367 = new A.LogicalKeyboardKey(4294969367);
    B.LogicalKeyboardKey_4294969368 = new A.LogicalKeyboardKey(4294969368);
    B.LogicalKeyboardKey_4294969347 = new A.LogicalKeyboardKey(4294969347);
    B.LogicalKeyboardKey_4294969348 = new A.LogicalKeyboardKey(4294969348);
    B.LogicalKeyboardKey_4294969349 = new A.LogicalKeyboardKey(4294969349);
    B.LogicalKeyboardKey_4294969350 = new A.LogicalKeyboardKey(4294969350);
    B.LogicalKeyboardKey_4294969351 = new A.LogicalKeyboardKey(4294969351);
    B.LogicalKeyboardKey_4294969352 = new A.LogicalKeyboardKey(4294969352);
    B.LogicalKeyboardKey_4294969353 = new A.LogicalKeyboardKey(4294969353);
    B.LogicalKeyboardKey_4294970646 = new A.LogicalKeyboardKey(4294970646);
    B.LogicalKeyboardKey_4294970647 = new A.LogicalKeyboardKey(4294970647);
    B.LogicalKeyboardKey_4294970648 = new A.LogicalKeyboardKey(4294970648);
    B.LogicalKeyboardKey_4294970649 = new A.LogicalKeyboardKey(4294970649);
    B.LogicalKeyboardKey_4294970650 = new A.LogicalKeyboardKey(4294970650);
    B.LogicalKeyboardKey_4294970651 = new A.LogicalKeyboardKey(4294970651);
    B.LogicalKeyboardKey_4294970652 = new A.LogicalKeyboardKey(4294970652);
    B.LogicalKeyboardKey_4294970653 = new A.LogicalKeyboardKey(4294970653);
    B.LogicalKeyboardKey_4294970654 = new A.LogicalKeyboardKey(4294970654);
    B.LogicalKeyboardKey_4294970655 = new A.LogicalKeyboardKey(4294970655);
    B.LogicalKeyboardKey_4294970656 = new A.LogicalKeyboardKey(4294970656);
    B.LogicalKeyboardKey_4294970657 = new A.LogicalKeyboardKey(4294970657);
    B.LogicalKeyboardKey_4294969094 = new A.LogicalKeyboardKey(4294969094);
    B.LogicalKeyboardKey_4294968583 = new A.LogicalKeyboardKey(4294968583);
    B.LogicalKeyboardKey_4294967559 = new A.LogicalKeyboardKey(4294967559);
    B.LogicalKeyboardKey_4294971397 = new A.LogicalKeyboardKey(4294971397);
    B.LogicalKeyboardKey_4294971398 = new A.LogicalKeyboardKey(4294971398);
    B.LogicalKeyboardKey_4294969095 = new A.LogicalKeyboardKey(4294969095);
    B.LogicalKeyboardKey_4294969096 = new A.LogicalKeyboardKey(4294969096);
    B.LogicalKeyboardKey_4294969097 = new A.LogicalKeyboardKey(4294969097);
    B.LogicalKeyboardKey_4294969098 = new A.LogicalKeyboardKey(4294969098);
    B.LogicalKeyboardKey_4294970658 = new A.LogicalKeyboardKey(4294970658);
    B.LogicalKeyboardKey_4294970659 = new A.LogicalKeyboardKey(4294970659);
    B.LogicalKeyboardKey_4294970660 = new A.LogicalKeyboardKey(4294970660);
    B.LogicalKeyboardKey_4294969105 = new A.LogicalKeyboardKey(4294969105);
    B.LogicalKeyboardKey_4294969106 = new A.LogicalKeyboardKey(4294969106);
    B.LogicalKeyboardKey_4294969109 = new A.LogicalKeyboardKey(4294969109);
    B.LogicalKeyboardKey_4294971399 = new A.LogicalKeyboardKey(4294971399);
    B.LogicalKeyboardKey_4294968584 = new A.LogicalKeyboardKey(4294968584);
    B.LogicalKeyboardKey_4294968841 = new A.LogicalKeyboardKey(4294968841);
    B.LogicalKeyboardKey_4294969110 = new A.LogicalKeyboardKey(4294969110);
    B.LogicalKeyboardKey_4294969111 = new A.LogicalKeyboardKey(4294969111);
    B.LogicalKeyboardKey_4294967560 = new A.LogicalKeyboardKey(4294967560);
    B.LogicalKeyboardKey_4294970661 = new A.LogicalKeyboardKey(4294970661);
    B.LogicalKeyboardKey_4294968327 = new A.LogicalKeyboardKey(4294968327);
    B.LogicalKeyboardKey_4294970662 = new A.LogicalKeyboardKey(4294970662);
    B.LogicalKeyboardKey_4294969107 = new A.LogicalKeyboardKey(4294969107);
    B.LogicalKeyboardKey_4294969112 = new A.LogicalKeyboardKey(4294969112);
    B.LogicalKeyboardKey_4294969113 = new A.LogicalKeyboardKey(4294969113);
    B.LogicalKeyboardKey_4294969114 = new A.LogicalKeyboardKey(4294969114);
    B.LogicalKeyboardKey_4294971905 = new A.LogicalKeyboardKey(4294971905);
    B.LogicalKeyboardKey_4294971906 = new A.LogicalKeyboardKey(4294971906);
    B.LogicalKeyboardKey_4294971400 = new A.LogicalKeyboardKey(4294971400);
    B.LogicalKeyboardKey_4294970118 = new A.LogicalKeyboardKey(4294970118);
    B.LogicalKeyboardKey_4294970113 = new A.LogicalKeyboardKey(4294970113);
    B.LogicalKeyboardKey_4294970126 = new A.LogicalKeyboardKey(4294970126);
    B.LogicalKeyboardKey_4294970114 = new A.LogicalKeyboardKey(4294970114);
    B.LogicalKeyboardKey_4294970124 = new A.LogicalKeyboardKey(4294970124);
    B.LogicalKeyboardKey_4294970127 = new A.LogicalKeyboardKey(4294970127);
    B.LogicalKeyboardKey_4294970115 = new A.LogicalKeyboardKey(4294970115);
    B.LogicalKeyboardKey_4294970116 = new A.LogicalKeyboardKey(4294970116);
    B.LogicalKeyboardKey_4294970117 = new A.LogicalKeyboardKey(4294970117);
    B.LogicalKeyboardKey_4294970125 = new A.LogicalKeyboardKey(4294970125);
    B.LogicalKeyboardKey_4294970119 = new A.LogicalKeyboardKey(4294970119);
    B.LogicalKeyboardKey_4294970120 = new A.LogicalKeyboardKey(4294970120);
    B.LogicalKeyboardKey_4294970121 = new A.LogicalKeyboardKey(4294970121);
    B.LogicalKeyboardKey_4294970122 = new A.LogicalKeyboardKey(4294970122);
    B.LogicalKeyboardKey_4294970123 = new A.LogicalKeyboardKey(4294970123);
    B.LogicalKeyboardKey_4294970663 = new A.LogicalKeyboardKey(4294970663);
    B.LogicalKeyboardKey_4294970664 = new A.LogicalKeyboardKey(4294970664);
    B.LogicalKeyboardKey_4294970665 = new A.LogicalKeyboardKey(4294970665);
    B.LogicalKeyboardKey_4294970666 = new A.LogicalKeyboardKey(4294970666);
    B.LogicalKeyboardKey_4294968837 = new A.LogicalKeyboardKey(4294968837);
    B.LogicalKeyboardKey_4294969858 = new A.LogicalKeyboardKey(4294969858);
    B.LogicalKeyboardKey_4294969859 = new A.LogicalKeyboardKey(4294969859);
    B.LogicalKeyboardKey_4294969860 = new A.LogicalKeyboardKey(4294969860);
    B.LogicalKeyboardKey_4294971402 = new A.LogicalKeyboardKey(4294971402);
    B.LogicalKeyboardKey_4294970667 = new A.LogicalKeyboardKey(4294970667);
    B.LogicalKeyboardKey_4294970704 = new A.LogicalKeyboardKey(4294970704);
    B.LogicalKeyboardKey_4294970715 = new A.LogicalKeyboardKey(4294970715);
    B.LogicalKeyboardKey_4294970668 = new A.LogicalKeyboardKey(4294970668);
    B.LogicalKeyboardKey_4294970669 = new A.LogicalKeyboardKey(4294970669);
    B.LogicalKeyboardKey_4294970670 = new A.LogicalKeyboardKey(4294970670);
    B.LogicalKeyboardKey_4294970671 = new A.LogicalKeyboardKey(4294970671);
    B.LogicalKeyboardKey_4294969861 = new A.LogicalKeyboardKey(4294969861);
    B.LogicalKeyboardKey_4294970672 = new A.LogicalKeyboardKey(4294970672);
    B.LogicalKeyboardKey_4294970673 = new A.LogicalKeyboardKey(4294970673);
    B.LogicalKeyboardKey_4294970674 = new A.LogicalKeyboardKey(4294970674);
    B.LogicalKeyboardKey_4294970705 = new A.LogicalKeyboardKey(4294970705);
    B.LogicalKeyboardKey_4294970706 = new A.LogicalKeyboardKey(4294970706);
    B.LogicalKeyboardKey_4294970707 = new A.LogicalKeyboardKey(4294970707);
    B.LogicalKeyboardKey_4294970708 = new A.LogicalKeyboardKey(4294970708);
    B.LogicalKeyboardKey_4294969863 = new A.LogicalKeyboardKey(4294969863);
    B.LogicalKeyboardKey_4294970709 = new A.LogicalKeyboardKey(4294970709);
    B.LogicalKeyboardKey_4294969864 = new A.LogicalKeyboardKey(4294969864);
    B.LogicalKeyboardKey_4294969865 = new A.LogicalKeyboardKey(4294969865);
    B.LogicalKeyboardKey_4294970886 = new A.LogicalKeyboardKey(4294970886);
    B.LogicalKeyboardKey_4294970887 = new A.LogicalKeyboardKey(4294970887);
    B.LogicalKeyboardKey_4294970889 = new A.LogicalKeyboardKey(4294970889);
    B.LogicalKeyboardKey_4294970888 = new A.LogicalKeyboardKey(4294970888);
    B.LogicalKeyboardKey_4294969099 = new A.LogicalKeyboardKey(4294969099);
    B.LogicalKeyboardKey_4294970710 = new A.LogicalKeyboardKey(4294970710);
    B.LogicalKeyboardKey_4294970711 = new A.LogicalKeyboardKey(4294970711);
    B.LogicalKeyboardKey_4294970712 = new A.LogicalKeyboardKey(4294970712);
    B.LogicalKeyboardKey_4294970713 = new A.LogicalKeyboardKey(4294970713);
    B.LogicalKeyboardKey_4294969866 = new A.LogicalKeyboardKey(4294969866);
    B.LogicalKeyboardKey_4294969100 = new A.LogicalKeyboardKey(4294969100);
    B.LogicalKeyboardKey_4294970675 = new A.LogicalKeyboardKey(4294970675);
    B.LogicalKeyboardKey_4294970676 = new A.LogicalKeyboardKey(4294970676);
    B.LogicalKeyboardKey_4294969101 = new A.LogicalKeyboardKey(4294969101);
    B.LogicalKeyboardKey_4294971401 = new A.LogicalKeyboardKey(4294971401);
    B.LogicalKeyboardKey_4294970677 = new A.LogicalKeyboardKey(4294970677);
    B.LogicalKeyboardKey_4294969867 = new A.LogicalKeyboardKey(4294969867);
    B.LogicalKeyboardKey_4294970714 = new A.LogicalKeyboardKey(4294970714);
    B.LogicalKeyboardKey_4294968328 = new A.LogicalKeyboardKey(4294968328);
    B.LogicalKeyboardKey_4294968585 = new A.LogicalKeyboardKey(4294968585);
    B.LogicalKeyboardKey_4294970678 = new A.LogicalKeyboardKey(4294970678);
    B.LogicalKeyboardKey_4294970679 = new A.LogicalKeyboardKey(4294970679);
    B.LogicalKeyboardKey_4294970680 = new A.LogicalKeyboardKey(4294970680);
    B.LogicalKeyboardKey_4294970681 = new A.LogicalKeyboardKey(4294970681);
    B.LogicalKeyboardKey_4294968586 = new A.LogicalKeyboardKey(4294968586);
    B.LogicalKeyboardKey_4294970682 = new A.LogicalKeyboardKey(4294970682);
    B.LogicalKeyboardKey_4294970683 = new A.LogicalKeyboardKey(4294970683);
    B.LogicalKeyboardKey_4294970684 = new A.LogicalKeyboardKey(4294970684);
    B.LogicalKeyboardKey_4294968838 = new A.LogicalKeyboardKey(4294968838);
    B.LogicalKeyboardKey_4294968839 = new A.LogicalKeyboardKey(4294968839);
    B.LogicalKeyboardKey_4294969102 = new A.LogicalKeyboardKey(4294969102);
    B.LogicalKeyboardKey_4294969868 = new A.LogicalKeyboardKey(4294969868);
    B.LogicalKeyboardKey_4294968840 = new A.LogicalKeyboardKey(4294968840);
    B.LogicalKeyboardKey_4294969103 = new A.LogicalKeyboardKey(4294969103);
    B.LogicalKeyboardKey_4294968587 = new A.LogicalKeyboardKey(4294968587);
    B.LogicalKeyboardKey_4294970685 = new A.LogicalKeyboardKey(4294970685);
    B.LogicalKeyboardKey_4294970686 = new A.LogicalKeyboardKey(4294970686);
    B.LogicalKeyboardKey_4294970687 = new A.LogicalKeyboardKey(4294970687);
    B.LogicalKeyboardKey_4294968329 = new A.LogicalKeyboardKey(4294968329);
    B.LogicalKeyboardKey_4294970688 = new A.LogicalKeyboardKey(4294970688);
    B.LogicalKeyboardKey_4294969115 = new A.LogicalKeyboardKey(4294969115);
    B.LogicalKeyboardKey_4294970693 = new A.LogicalKeyboardKey(4294970693);
    B.LogicalKeyboardKey_4294970694 = new A.LogicalKeyboardKey(4294970694);
    B.LogicalKeyboardKey_4294969869 = new A.LogicalKeyboardKey(4294969869);
    B.LogicalKeyboardKey_4294970689 = new A.LogicalKeyboardKey(4294970689);
    B.LogicalKeyboardKey_4294970690 = new A.LogicalKeyboardKey(4294970690);
    B.LogicalKeyboardKey_4294968588 = new A.LogicalKeyboardKey(4294968588);
    B.LogicalKeyboardKey_4294970691 = new A.LogicalKeyboardKey(4294970691);
    B.LogicalKeyboardKey_4294967569 = new A.LogicalKeyboardKey(4294967569);
    B.LogicalKeyboardKey_4294969104 = new A.LogicalKeyboardKey(4294969104);
    B.LogicalKeyboardKey_4294969601 = new A.LogicalKeyboardKey(4294969601);
    B.LogicalKeyboardKey_4294969602 = new A.LogicalKeyboardKey(4294969602);
    B.LogicalKeyboardKey_4294969603 = new A.LogicalKeyboardKey(4294969603);
    B.LogicalKeyboardKey_4294969604 = new A.LogicalKeyboardKey(4294969604);
    B.LogicalKeyboardKey_4294969605 = new A.LogicalKeyboardKey(4294969605);
    B.LogicalKeyboardKey_4294969606 = new A.LogicalKeyboardKey(4294969606);
    B.LogicalKeyboardKey_4294969607 = new A.LogicalKeyboardKey(4294969607);
    B.LogicalKeyboardKey_4294969608 = new A.LogicalKeyboardKey(4294969608);
    B.LogicalKeyboardKey_4294971137 = new A.LogicalKeyboardKey(4294971137);
    B.LogicalKeyboardKey_4294971138 = new A.LogicalKeyboardKey(4294971138);
    B.LogicalKeyboardKey_4294969870 = new A.LogicalKeyboardKey(4294969870);
    B.LogicalKeyboardKey_4294970692 = new A.LogicalKeyboardKey(4294970692);
    B.LogicalKeyboardKey_4294968842 = new A.LogicalKeyboardKey(4294968842);
    B.LogicalKeyboardKey_4294970695 = new A.LogicalKeyboardKey(4294970695);
    B.LogicalKeyboardKey_4294967566 = new A.LogicalKeyboardKey(4294967566);
    B.LogicalKeyboardKey_4294967567 = new A.LogicalKeyboardKey(4294967567);
    B.LogicalKeyboardKey_4294967568 = new A.LogicalKeyboardKey(4294967568);
    B.LogicalKeyboardKey_4294970697 = new A.LogicalKeyboardKey(4294970697);
    B.LogicalKeyboardKey_4294971649 = new A.LogicalKeyboardKey(4294971649);
    B.LogicalKeyboardKey_4294971650 = new A.LogicalKeyboardKey(4294971650);
    B.LogicalKeyboardKey_4294971651 = new A.LogicalKeyboardKey(4294971651);
    B.LogicalKeyboardKey_4294971652 = new A.LogicalKeyboardKey(4294971652);
    B.LogicalKeyboardKey_4294971653 = new A.LogicalKeyboardKey(4294971653);
    B.LogicalKeyboardKey_4294971654 = new A.LogicalKeyboardKey(4294971654);
    B.LogicalKeyboardKey_4294971655 = new A.LogicalKeyboardKey(4294971655);
    B.LogicalKeyboardKey_4294970698 = new A.LogicalKeyboardKey(4294970698);
    B.LogicalKeyboardKey_4294971656 = new A.LogicalKeyboardKey(4294971656);
    B.LogicalKeyboardKey_4294971657 = new A.LogicalKeyboardKey(4294971657);
    B.LogicalKeyboardKey_4294971658 = new A.LogicalKeyboardKey(4294971658);
    B.LogicalKeyboardKey_4294971659 = new A.LogicalKeyboardKey(4294971659);
    B.LogicalKeyboardKey_4294971660 = new A.LogicalKeyboardKey(4294971660);
    B.LogicalKeyboardKey_4294971661 = new A.LogicalKeyboardKey(4294971661);
    B.LogicalKeyboardKey_4294971662 = new A.LogicalKeyboardKey(4294971662);
    B.LogicalKeyboardKey_4294971663 = new A.LogicalKeyboardKey(4294971663);
    B.LogicalKeyboardKey_4294971664 = new A.LogicalKeyboardKey(4294971664);
    B.LogicalKeyboardKey_4294971665 = new A.LogicalKeyboardKey(4294971665);
    B.LogicalKeyboardKey_4294971666 = new A.LogicalKeyboardKey(4294971666);
    B.LogicalKeyboardKey_4294971667 = new A.LogicalKeyboardKey(4294971667);
    B.LogicalKeyboardKey_4294970699 = new A.LogicalKeyboardKey(4294970699);
    B.LogicalKeyboardKey_4294971668 = new A.LogicalKeyboardKey(4294971668);
    B.LogicalKeyboardKey_4294971669 = new A.LogicalKeyboardKey(4294971669);
    B.LogicalKeyboardKey_4294971670 = new A.LogicalKeyboardKey(4294971670);
    B.LogicalKeyboardKey_4294971671 = new A.LogicalKeyboardKey(4294971671);
    B.LogicalKeyboardKey_4294971672 = new A.LogicalKeyboardKey(4294971672);
    B.LogicalKeyboardKey_4294971673 = new A.LogicalKeyboardKey(4294971673);
    B.LogicalKeyboardKey_4294971674 = new A.LogicalKeyboardKey(4294971674);
    B.LogicalKeyboardKey_4294971675 = new A.LogicalKeyboardKey(4294971675);
    B.LogicalKeyboardKey_4294970696 = new A.LogicalKeyboardKey(4294970696);
    B.LogicalKeyboardKey_4294968330 = new A.LogicalKeyboardKey(4294968330);
    B.LogicalKeyboardKey_4294967297 = new A.LogicalKeyboardKey(4294967297);
    B.LogicalKeyboardKey_4294970700 = new A.LogicalKeyboardKey(4294970700);
    B.LogicalKeyboardKey_4294971403 = new A.LogicalKeyboardKey(4294971403);
    B.LogicalKeyboardKey_4294968843 = new A.LogicalKeyboardKey(4294968843);
    B.LogicalKeyboardKey_4294970701 = new A.LogicalKeyboardKey(4294970701);
    B.LogicalKeyboardKey_4294969116 = new A.LogicalKeyboardKey(4294969116);
    B.LogicalKeyboardKey_4294969117 = new A.LogicalKeyboardKey(4294969117);
    B.LogicalKeyboardKey_4294968589 = new A.LogicalKeyboardKey(4294968589);
    B.LogicalKeyboardKey_4294968590 = new A.LogicalKeyboardKey(4294968590);
    B.LogicalKeyboardKey_4294970702 = new A.LogicalKeyboardKey(4294970702);
    B.Map_Ig9Xq = new A.ConstantStringMap(B.Object_KPR, [B.LogicalKeyboardKey_4294970632, B.LogicalKeyboardKey_4294970633, B.LogicalKeyboardKey_4294967553, B.LogicalKeyboardKey_4294968577, B.LogicalKeyboardKey_4294968578, B.LogicalKeyboardKey_4294969089, B.LogicalKeyboardKey_4294969090, B.LogicalKeyboardKey_4294967555, B.LogicalKeyboardKey_4294971393, B.LogicalKeyboardKey_4294968065, B.LogicalKeyboardKey_4294968066, B.LogicalKeyboardKey_4294968067, B.LogicalKeyboardKey_4294968068, B.LogicalKeyboardKey_4294968579, B.LogicalKeyboardKey_4294970625, B.LogicalKeyboardKey_4294970626, B.LogicalKeyboardKey_4294970627, B.LogicalKeyboardKey_4294970882, B.LogicalKeyboardKey_4294970628, B.LogicalKeyboardKey_4294970629, B.LogicalKeyboardKey_4294970630, B.LogicalKeyboardKey_4294970631, B.LogicalKeyboardKey_4294970884, B.LogicalKeyboardKey_4294970885, B.LogicalKeyboardKey_4294969871, B.LogicalKeyboardKey_4294969873, B.LogicalKeyboardKey_4294969872, B.LogicalKeyboardKey_4294967304, B.LogicalKeyboardKey_4294968833, B.LogicalKeyboardKey_4294968834, B.LogicalKeyboardKey_4294970369, B.LogicalKeyboardKey_4294970370, B.LogicalKeyboardKey_4294970371, B.LogicalKeyboardKey_4294970372, B.LogicalKeyboardKey_4294970373, B.LogicalKeyboardKey_4294970374, B.LogicalKeyboardKey_4294970375, B.LogicalKeyboardKey_4294971394, B.LogicalKeyboardKey_4294968835, B.LogicalKeyboardKey_4294971395, B.LogicalKeyboardKey_4294968580, B.LogicalKeyboardKey_4294967556, B.LogicalKeyboardKey_4294970634, B.LogicalKeyboardKey_4294970635, B.LogicalKeyboardKey_4294968321, B.LogicalKeyboardKey_4294969857, B.LogicalKeyboardKey_4294970642, B.LogicalKeyboardKey_4294969091, B.LogicalKeyboardKey_4294970636, B.LogicalKeyboardKey_4294970637, B.LogicalKeyboardKey_4294970638, B.LogicalKeyboardKey_4294970639, B.LogicalKeyboardKey_4294970640, B.LogicalKeyboardKey_4294970641, B.LogicalKeyboardKey_4294969092, B.LogicalKeyboardKey_4294968581, B.LogicalKeyboardKey_4294969093, B.LogicalKeyboardKey_4294968322, B.LogicalKeyboardKey_4294968323, B.LogicalKeyboardKey_4294968324, B.LogicalKeyboardKey_4294970703, B.LogicalKeyboardKey_4294967423, B.LogicalKeyboardKey_4294970643, B.LogicalKeyboardKey_4294970644, B.LogicalKeyboardKey_4294969108, B.LogicalKeyboardKey_4294968836, B.LogicalKeyboardKey_4294968069, B.LogicalKeyboardKey_4294971396, B.LogicalKeyboardKey_4294967309, B.LogicalKeyboardKey_4294968325, B.LogicalKeyboardKey_4294967323, B.LogicalKeyboardKey_4294967323, B.LogicalKeyboardKey_4294968326, B.LogicalKeyboardKey_4294968582, B.LogicalKeyboardKey_4294970645, B.LogicalKeyboardKey_4294969345, B.LogicalKeyboardKey_4294969354, B.LogicalKeyboardKey_4294969355, B.LogicalKeyboardKey_4294969356, B.LogicalKeyboardKey_4294969357, B.LogicalKeyboardKey_4294969358, B.LogicalKeyboardKey_4294969359, B.LogicalKeyboardKey_4294969360, B.LogicalKeyboardKey_4294969361, B.LogicalKeyboardKey_4294969362, B.LogicalKeyboardKey_4294969363, B.LogicalKeyboardKey_4294969346, B.LogicalKeyboardKey_4294969364, B.LogicalKeyboardKey_4294969365, B.LogicalKeyboardKey_4294969366, B.LogicalKeyboardKey_4294969367, B.LogicalKeyboardKey_4294969368, B.LogicalKeyboardKey_4294969347, B.LogicalKeyboardKey_4294969348, B.LogicalKeyboardKey_4294969349, B.LogicalKeyboardKey_4294969350, B.LogicalKeyboardKey_4294969351, B.LogicalKeyboardKey_4294969352, B.LogicalKeyboardKey_4294969353, B.LogicalKeyboardKey_4294970646, B.LogicalKeyboardKey_4294970647, B.LogicalKeyboardKey_4294970648, B.LogicalKeyboardKey_4294970649, B.LogicalKeyboardKey_4294970650, B.LogicalKeyboardKey_4294970651, B.LogicalKeyboardKey_4294970652, B.LogicalKeyboardKey_4294970653, B.LogicalKeyboardKey_4294970654, B.LogicalKeyboardKey_4294970655, B.LogicalKeyboardKey_4294970656, B.LogicalKeyboardKey_4294970657, B.LogicalKeyboardKey_4294969094, B.LogicalKeyboardKey_4294968583, B.LogicalKeyboardKey_4294967558, B.LogicalKeyboardKey_4294967559, B.LogicalKeyboardKey_4294971397, B.LogicalKeyboardKey_4294971398, B.LogicalKeyboardKey_4294969095, B.LogicalKeyboardKey_4294969096, B.LogicalKeyboardKey_4294969097, B.LogicalKeyboardKey_4294969098, B.LogicalKeyboardKey_4294970658, B.LogicalKeyboardKey_4294970659, B.LogicalKeyboardKey_4294970660, B.LogicalKeyboardKey_4294969105, B.LogicalKeyboardKey_4294969106, B.LogicalKeyboardKey_4294969109, B.LogicalKeyboardKey_4294971399, B.LogicalKeyboardKey_4294968584, B.LogicalKeyboardKey_4294968841, B.LogicalKeyboardKey_4294969110, B.LogicalKeyboardKey_4294969111, B.LogicalKeyboardKey_4294968070, B.LogicalKeyboardKey_4294967560, B.LogicalKeyboardKey_4294970661, B.LogicalKeyboardKey_4294968327, B.LogicalKeyboardKey_4294970662, B.LogicalKeyboardKey_4294969107, B.LogicalKeyboardKey_4294969112, B.LogicalKeyboardKey_4294969113, B.LogicalKeyboardKey_4294969114, B.LogicalKeyboardKey_4294971905, B.LogicalKeyboardKey_4294971906, B.LogicalKeyboardKey_4294971400, B.LogicalKeyboardKey_4294970118, B.LogicalKeyboardKey_4294970113, B.LogicalKeyboardKey_4294970126, B.LogicalKeyboardKey_4294970114, B.LogicalKeyboardKey_4294970124, B.LogicalKeyboardKey_4294970127, B.LogicalKeyboardKey_4294970115, B.LogicalKeyboardKey_4294970116, B.LogicalKeyboardKey_4294970117, B.LogicalKeyboardKey_4294970125, B.LogicalKeyboardKey_4294970119, B.LogicalKeyboardKey_4294970120, B.LogicalKeyboardKey_4294970121, B.LogicalKeyboardKey_4294970122, B.LogicalKeyboardKey_4294970123, B.LogicalKeyboardKey_4294970663, B.LogicalKeyboardKey_4294970664, B.LogicalKeyboardKey_4294970665, B.LogicalKeyboardKey_4294970666, B.LogicalKeyboardKey_4294968837, B.LogicalKeyboardKey_4294969858, B.LogicalKeyboardKey_4294969859, B.LogicalKeyboardKey_4294969860, B.LogicalKeyboardKey_4294971402, B.LogicalKeyboardKey_4294970667, B.LogicalKeyboardKey_4294970704, B.LogicalKeyboardKey_4294970715, B.LogicalKeyboardKey_4294970668, B.LogicalKeyboardKey_4294970669, B.LogicalKeyboardKey_4294970670, B.LogicalKeyboardKey_4294970671, B.LogicalKeyboardKey_4294969861, B.LogicalKeyboardKey_4294970672, B.LogicalKeyboardKey_4294970673, B.LogicalKeyboardKey_4294970674, B.LogicalKeyboardKey_4294970705, B.LogicalKeyboardKey_4294970706, B.LogicalKeyboardKey_4294970707, B.LogicalKeyboardKey_4294970708, B.LogicalKeyboardKey_4294969863, B.LogicalKeyboardKey_4294970709, B.LogicalKeyboardKey_4294969864, B.LogicalKeyboardKey_4294969865, B.LogicalKeyboardKey_4294970886, B.LogicalKeyboardKey_4294970887, B.LogicalKeyboardKey_4294970889, B.LogicalKeyboardKey_4294970888, B.LogicalKeyboardKey_4294969099, B.LogicalKeyboardKey_4294970710, B.LogicalKeyboardKey_4294970711, B.LogicalKeyboardKey_4294970712, B.LogicalKeyboardKey_4294970713, B.LogicalKeyboardKey_4294969866, B.LogicalKeyboardKey_4294969100, B.LogicalKeyboardKey_4294970675, B.LogicalKeyboardKey_4294970676, B.LogicalKeyboardKey_4294969101, B.LogicalKeyboardKey_4294971401, B.LogicalKeyboardKey_4294967562, B.LogicalKeyboardKey_4294970677, B.LogicalKeyboardKey_4294969867, B.LogicalKeyboardKey_4294968071, B.LogicalKeyboardKey_4294968072, B.LogicalKeyboardKey_4294970714, B.LogicalKeyboardKey_4294968328, B.LogicalKeyboardKey_4294968585, B.LogicalKeyboardKey_4294970678, B.LogicalKeyboardKey_4294970679, B.LogicalKeyboardKey_4294970680, B.LogicalKeyboardKey_4294970681, B.LogicalKeyboardKey_4294968586, B.LogicalKeyboardKey_4294970682, B.LogicalKeyboardKey_4294970683, B.LogicalKeyboardKey_4294970684, B.LogicalKeyboardKey_4294968838, B.LogicalKeyboardKey_4294968839, B.LogicalKeyboardKey_4294969102, B.LogicalKeyboardKey_4294969868, B.LogicalKeyboardKey_4294968840, B.LogicalKeyboardKey_4294969103, B.LogicalKeyboardKey_4294968587, B.LogicalKeyboardKey_4294970685, B.LogicalKeyboardKey_4294970686, B.LogicalKeyboardKey_4294970687, B.LogicalKeyboardKey_4294968329, B.LogicalKeyboardKey_4294970688, B.LogicalKeyboardKey_4294969115, B.LogicalKeyboardKey_4294970693, B.LogicalKeyboardKey_4294970694, B.LogicalKeyboardKey_4294969869, B.LogicalKeyboardKey_4294970689, B.LogicalKeyboardKey_4294970690, B.LogicalKeyboardKey_4294967564, B.LogicalKeyboardKey_4294968588, B.LogicalKeyboardKey_4294970691, B.LogicalKeyboardKey_4294967569, B.LogicalKeyboardKey_4294969104, B.LogicalKeyboardKey_4294969601, B.LogicalKeyboardKey_4294969602, B.LogicalKeyboardKey_4294969603, B.LogicalKeyboardKey_4294969604, B.LogicalKeyboardKey_4294969605, B.LogicalKeyboardKey_4294969606, B.LogicalKeyboardKey_4294969607, B.LogicalKeyboardKey_4294969608, B.LogicalKeyboardKey_4294971137, B.LogicalKeyboardKey_4294971138, B.LogicalKeyboardKey_4294969870, B.LogicalKeyboardKey_4294970692, B.LogicalKeyboardKey_4294968842, B.LogicalKeyboardKey_4294970695, B.LogicalKeyboardKey_4294967566, B.LogicalKeyboardKey_4294967567, B.LogicalKeyboardKey_4294967568, B.LogicalKeyboardKey_4294970697, B.LogicalKeyboardKey_4294971649, B.LogicalKeyboardKey_4294971650, B.LogicalKeyboardKey_4294971651, B.LogicalKeyboardKey_4294971652, B.LogicalKeyboardKey_4294971653, B.LogicalKeyboardKey_4294971654, B.LogicalKeyboardKey_4294971655, B.LogicalKeyboardKey_4294970698, B.LogicalKeyboardKey_4294971656, B.LogicalKeyboardKey_4294971657, B.LogicalKeyboardKey_4294971658, B.LogicalKeyboardKey_4294971659, B.LogicalKeyboardKey_4294971660, B.LogicalKeyboardKey_4294971661, B.LogicalKeyboardKey_4294971662, B.LogicalKeyboardKey_4294971663, B.LogicalKeyboardKey_4294971664, B.LogicalKeyboardKey_4294971665, B.LogicalKeyboardKey_4294971666, B.LogicalKeyboardKey_4294971667, B.LogicalKeyboardKey_4294970699, B.LogicalKeyboardKey_4294971668, B.LogicalKeyboardKey_4294971669, B.LogicalKeyboardKey_4294971670, B.LogicalKeyboardKey_4294971671, B.LogicalKeyboardKey_4294971672, B.LogicalKeyboardKey_4294971673, B.LogicalKeyboardKey_4294971674, B.LogicalKeyboardKey_4294971675, B.LogicalKeyboardKey_4294967305, B.LogicalKeyboardKey_4294970696, B.LogicalKeyboardKey_4294968330, B.LogicalKeyboardKey_4294967297, B.LogicalKeyboardKey_4294970700, B.LogicalKeyboardKey_4294971403, B.LogicalKeyboardKey_4294968843, B.LogicalKeyboardKey_4294970701, B.LogicalKeyboardKey_4294969116, B.LogicalKeyboardKey_4294969117, B.LogicalKeyboardKey_4294968589, B.LogicalKeyboardKey_4294968590, B.LogicalKeyboardKey_4294970702], A.findType("ConstantStringMap<String,LogicalKeyboardKey>"));
    B.MaterialType_0 = new A.MaterialType(0, "canvas");
    B.MaterialType_1 = new A.MaterialType(1, "card");
    B.MaterialType_2 = new A.MaterialType(2, "circle");
    B.MaterialType_3 = new A.MaterialType(3, "button");
    B.MaterialType_4 = new A.MaterialType(4, "transparency");
    B.Radius_2_2 = new A.Radius(2, 2);
    B.BorderRadius_X2o = new A.BorderRadius(B.Radius_2_2, B.Radius_2_2, B.Radius_2_2, B.Radius_2_2);
    B.Map_Y8ZcI = new A.GeneralConstantMap([B.MaterialType_0, null, B.MaterialType_1, B.BorderRadius_X2o, B.MaterialType_2, null, B.MaterialType_3, B.BorderRadius_X2o, B.MaterialType_4, null], A.findType("GeneralConstantMap<MaterialType,BorderRadius?>"));
    B.Object_empty = {};
    B.Map_empty4 = new A.ConstantStringMap(B.Object_empty, [], A.findType("ConstantStringMap<Object,_HeroState>"));
    B.Map_empty0 = new A.ConstantStringMap(B.Object_empty, [], A.findType("ConstantStringMap<ShortcutActivator,Intent>"));
    B.Map_empty3 = new A.ConstantStringMap(B.Object_empty, [], A.findType("ConstantStringMap<String,Widget(BuildContext)>"));
    B.Map_empty2 = new A.ConstantStringMap(B.Object_empty, [], A.findType("ConstantStringMap<String,@>"));
    B.Map_empty5 = new A.ConstantStringMap(B.Object_empty, [], A.findType("ConstantStringMap<Symbol0,@>"));
    B.Map_empty = new A.ConstantStringMap(B.Object_empty, [], A.findType("ConstantStringMap<Type,GestureRecognizer>"));
    B.Map_empty1 = new A.ConstantStringMap(B.Object_empty, [], A.findType("ConstantStringMap<Type,GestureRecognizerFactory<GestureRecognizer>>"));
    B.LogicalKeyboardKey_42 = new A.LogicalKeyboardKey(42);
    B.LogicalKeyboardKey_8589935146 = new A.LogicalKeyboardKey(8589935146);
    B.List_576 = makeConstList([B.LogicalKeyboardKey_42, null, null, B.LogicalKeyboardKey_8589935146], type$.JSArray_nullable_LogicalKeyboardKey);
    B.LogicalKeyboardKey_43 = new A.LogicalKeyboardKey(43);
    B.LogicalKeyboardKey_8589935147 = new A.LogicalKeyboardKey(8589935147);
    B.List_gec = makeConstList([B.LogicalKeyboardKey_43, null, null, B.LogicalKeyboardKey_8589935147], type$.JSArray_nullable_LogicalKeyboardKey);
    B.LogicalKeyboardKey_45 = new A.LogicalKeyboardKey(45);
    B.LogicalKeyboardKey_8589935149 = new A.LogicalKeyboardKey(8589935149);
    B.List_I1c = makeConstList([B.LogicalKeyboardKey_45, null, null, B.LogicalKeyboardKey_8589935149], type$.JSArray_nullable_LogicalKeyboardKey);
    B.LogicalKeyboardKey_46 = new A.LogicalKeyboardKey(46);
    B.LogicalKeyboardKey_8589935150 = new A.LogicalKeyboardKey(8589935150);
    B.List_VQn = makeConstList([B.LogicalKeyboardKey_46, null, null, B.LogicalKeyboardKey_8589935150], type$.JSArray_nullable_LogicalKeyboardKey);
    B.LogicalKeyboardKey_47 = new A.LogicalKeyboardKey(47);
    B.LogicalKeyboardKey_8589935151 = new A.LogicalKeyboardKey(8589935151);
    B.List_05Q = makeConstList([B.LogicalKeyboardKey_47, null, null, B.LogicalKeyboardKey_8589935151], type$.JSArray_nullable_LogicalKeyboardKey);
    B.LogicalKeyboardKey_48 = new A.LogicalKeyboardKey(48);
    B.LogicalKeyboardKey_8589935152 = new A.LogicalKeyboardKey(8589935152);
    B.List_qWX = makeConstList([B.LogicalKeyboardKey_48, null, null, B.LogicalKeyboardKey_8589935152], type$.JSArray_nullable_LogicalKeyboardKey);
    B.LogicalKeyboardKey_49 = new A.LogicalKeyboardKey(49);
    B.LogicalKeyboardKey_8589935153 = new A.LogicalKeyboardKey(8589935153);
    B.List_lQ6 = makeConstList([B.LogicalKeyboardKey_49, null, null, B.LogicalKeyboardKey_8589935153], type$.JSArray_nullable_LogicalKeyboardKey);
    B.LogicalKeyboardKey_50 = new A.LogicalKeyboardKey(50);
    B.LogicalKeyboardKey_8589935154 = new A.LogicalKeyboardKey(8589935154);
    B.List_6MY = makeConstList([B.LogicalKeyboardKey_50, null, null, B.LogicalKeyboardKey_8589935154], type$.JSArray_nullable_LogicalKeyboardKey);
    B.LogicalKeyboardKey_51 = new A.LogicalKeyboardKey(51);
    B.LogicalKeyboardKey_8589935155 = new A.LogicalKeyboardKey(8589935155);
    B.List_u6O = makeConstList([B.LogicalKeyboardKey_51, null, null, B.LogicalKeyboardKey_8589935155], type$.JSArray_nullable_LogicalKeyboardKey);
    B.LogicalKeyboardKey_52 = new A.LogicalKeyboardKey(52);
    B.LogicalKeyboardKey_8589935156 = new A.LogicalKeyboardKey(8589935156);
    B.List_lEH = makeConstList([B.LogicalKeyboardKey_52, null, null, B.LogicalKeyboardKey_8589935156], type$.JSArray_nullable_LogicalKeyboardKey);
    B.LogicalKeyboardKey_53 = new A.LogicalKeyboardKey(53);
    B.LogicalKeyboardKey_8589935157 = new A.LogicalKeyboardKey(8589935157);
    B.List_5xA = makeConstList([B.LogicalKeyboardKey_53, null, null, B.LogicalKeyboardKey_8589935157], type$.JSArray_nullable_LogicalKeyboardKey);
    B.LogicalKeyboardKey_54 = new A.LogicalKeyboardKey(54);
    B.LogicalKeyboardKey_8589935158 = new A.LogicalKeyboardKey(8589935158);
    B.List_2Ma = makeConstList([B.LogicalKeyboardKey_54, null, null, B.LogicalKeyboardKey_8589935158], type$.JSArray_nullable_LogicalKeyboardKey);
    B.LogicalKeyboardKey_55 = new A.LogicalKeyboardKey(55);
    B.LogicalKeyboardKey_8589935159 = new A.LogicalKeyboardKey(8589935159);
    B.List_ANd = makeConstList([B.LogicalKeyboardKey_55, null, null, B.LogicalKeyboardKey_8589935159], type$.JSArray_nullable_LogicalKeyboardKey);
    B.LogicalKeyboardKey_56 = new A.LogicalKeyboardKey(56);
    B.LogicalKeyboardKey_8589935160 = new A.LogicalKeyboardKey(8589935160);
    B.List_h2L = makeConstList([B.LogicalKeyboardKey_56, null, null, B.LogicalKeyboardKey_8589935160], type$.JSArray_nullable_LogicalKeyboardKey);
    B.LogicalKeyboardKey_57 = new A.LogicalKeyboardKey(57);
    B.LogicalKeyboardKey_8589935161 = new A.LogicalKeyboardKey(8589935161);
    B.List_iMW = makeConstList([B.LogicalKeyboardKey_57, null, null, B.LogicalKeyboardKey_8589935161], type$.JSArray_nullable_LogicalKeyboardKey);
    B.List_7yk = makeConstList([B.LogicalKeyboardKey_8589934852, B.LogicalKeyboardKey_8589934852, B.LogicalKeyboardKey_8589934853, null], type$.JSArray_nullable_LogicalKeyboardKey);
    B.List_qZx = makeConstList([B.LogicalKeyboardKey_4294967555, null, B.LogicalKeyboardKey_4294967555, null], type$.JSArray_nullable_LogicalKeyboardKey);
    B.List_Nhv = makeConstList([B.LogicalKeyboardKey_4294968065, null, null, B.LogicalKeyboardKey_8589935154], type$.JSArray_nullable_LogicalKeyboardKey);
    B.List_Nhv0 = makeConstList([B.LogicalKeyboardKey_4294968066, null, null, B.LogicalKeyboardKey_8589935156], type$.JSArray_nullable_LogicalKeyboardKey);
    B.List_Nhv1 = makeConstList([B.LogicalKeyboardKey_4294968067, null, null, B.LogicalKeyboardKey_8589935158], type$.JSArray_nullable_LogicalKeyboardKey);
    B.List_sRQ = makeConstList([B.LogicalKeyboardKey_4294968068, null, null, B.LogicalKeyboardKey_8589935160], type$.JSArray_nullable_LogicalKeyboardKey);
    B.List_khJ = makeConstList([B.LogicalKeyboardKey_4294968321, null, null, B.LogicalKeyboardKey_8589935157], type$.JSArray_nullable_LogicalKeyboardKey);
    B.List_7yk0 = makeConstList([B.LogicalKeyboardKey_8589934848, B.LogicalKeyboardKey_8589934848, B.LogicalKeyboardKey_8589934849, null], type$.JSArray_nullable_LogicalKeyboardKey);
    B.List_bX6 = makeConstList([B.LogicalKeyboardKey_4294967423, null, null, B.LogicalKeyboardKey_8589935150], type$.JSArray_nullable_LogicalKeyboardKey);
    B.List_Nhv2 = makeConstList([B.LogicalKeyboardKey_4294968069, null, null, B.LogicalKeyboardKey_8589935153], type$.JSArray_nullable_LogicalKeyboardKey);
    B.List_5Vy = makeConstList([B.LogicalKeyboardKey_4294967309, null, null, B.LogicalKeyboardKey_8589935117], type$.JSArray_nullable_LogicalKeyboardKey);
    B.List_Nhv3 = makeConstList([B.LogicalKeyboardKey_4294968070, null, null, B.LogicalKeyboardKey_8589935159], type$.JSArray_nullable_LogicalKeyboardKey);
    B.List_khJ0 = makeConstList([B.LogicalKeyboardKey_4294968327, null, null, B.LogicalKeyboardKey_8589935152], type$.JSArray_nullable_LogicalKeyboardKey);
    B.List_7yk1 = makeConstList([B.LogicalKeyboardKey_8589934854, B.LogicalKeyboardKey_8589934854, B.LogicalKeyboardKey_8589934855, null], type$.JSArray_nullable_LogicalKeyboardKey);
    B.List_Nhv4 = makeConstList([B.LogicalKeyboardKey_4294968071, null, null, B.LogicalKeyboardKey_8589935155], type$.JSArray_nullable_LogicalKeyboardKey);
    B.List_em8 = makeConstList([B.LogicalKeyboardKey_4294968072, null, null, B.LogicalKeyboardKey_8589935161], type$.JSArray_nullable_LogicalKeyboardKey);
    B.List_7yk2 = makeConstList([B.LogicalKeyboardKey_8589934850, B.LogicalKeyboardKey_8589934850, B.LogicalKeyboardKey_8589934851, null], type$.JSArray_nullable_LogicalKeyboardKey);
    B.Map_f9wiw = new A.GeneralConstantMap(["*", B.List_576, "+", B.List_gec, "-", B.List_I1c, ".", B.List_VQn, "/", B.List_05Q, "0", B.List_qWX, "1", B.List_lQ6, "2", B.List_6MY, "3", B.List_u6O, "4", B.List_lEH, "5", B.List_5xA, "6", B.List_2Ma, "7", B.List_ANd, "8", B.List_h2L, "9", B.List_iMW, "Alt", B.List_7yk, "AltGraph", B.List_qZx, "ArrowDown", B.List_Nhv, "ArrowLeft", B.List_Nhv0, "ArrowRight", B.List_Nhv1, "ArrowUp", B.List_sRQ, "Clear", B.List_khJ, "Control", B.List_7yk0, "Delete", B.List_bX6, "End", B.List_Nhv2, "Enter", B.List_5Vy, "Home", B.List_Nhv3, "Insert", B.List_khJ0, "Meta", B.List_7yk1, "PageDown", B.List_Nhv4, "PageUp", B.List_em8, "Shift", B.List_7yk2], A.findType("GeneralConstantMap<String,List<LogicalKeyboardKey?>>"));
    B.Object_Kvp = {Abort: 0, Again: 1, AltLeft: 2, AltRight: 3, ArrowDown: 4, ArrowLeft: 5, ArrowRight: 6, ArrowUp: 7, AudioVolumeDown: 8, AudioVolumeMute: 9, AudioVolumeUp: 10, Backquote: 11, Backslash: 12, Backspace: 13, BracketLeft: 14, BracketRight: 15, BrightnessDown: 16, BrightnessUp: 17, BrowserBack: 18, BrowserFavorites: 19, BrowserForward: 20, BrowserHome: 21, BrowserRefresh: 22, BrowserSearch: 23, BrowserStop: 24, CapsLock: 25, Comma: 26, ContextMenu: 27, ControlLeft: 28, ControlRight: 29, Convert: 30, Copy: 31, Cut: 32, Delete: 33, Digit0: 34, Digit1: 35, Digit2: 36, Digit3: 37, Digit4: 38, Digit5: 39, Digit6: 40, Digit7: 41, Digit8: 42, Digit9: 43, DisplayToggleIntExt: 44, Eject: 45, End: 46, Enter: 47, Equal: 48, Escape: 49, Esc: 50, F1: 51, F10: 52, F11: 53, F12: 54, F13: 55, F14: 56, F15: 57, F16: 58, F17: 59, F18: 60, F19: 61, F2: 62, F20: 63, F21: 64, F22: 65, F23: 66, F24: 67, F3: 68, F4: 69, F5: 70, F6: 71, F7: 72, F8: 73, F9: 74, Find: 75, Fn: 76, FnLock: 77, GameButton1: 78, GameButton10: 79, GameButton11: 80, GameButton12: 81, GameButton13: 82, GameButton14: 83, GameButton15: 84, GameButton16: 85, GameButton2: 86, GameButton3: 87, GameButton4: 88, GameButton5: 89, GameButton6: 90, GameButton7: 91, GameButton8: 92, GameButton9: 93, GameButtonA: 94, GameButtonB: 95, GameButtonC: 96, GameButtonLeft1: 97, GameButtonLeft2: 98, GameButtonMode: 99, GameButtonRight1: 100, GameButtonRight2: 101, GameButtonSelect: 102, GameButtonStart: 103, GameButtonThumbLeft: 104, GameButtonThumbRight: 105, GameButtonX: 106, GameButtonY: 107, GameButtonZ: 108, Help: 109, Home: 110, Hyper: 111, Insert: 112, IntlBackslash: 113, IntlRo: 114, IntlYen: 115, KanaMode: 116, KeyA: 117, KeyB: 118, KeyC: 119, KeyD: 120, KeyE: 121, KeyF: 122, KeyG: 123, KeyH: 124, KeyI: 125, KeyJ: 126, KeyK: 127, KeyL: 128, KeyM: 129, KeyN: 130, KeyO: 131, KeyP: 132, KeyQ: 133, KeyR: 134, KeyS: 135, KeyT: 136, KeyU: 137, KeyV: 138, KeyW: 139, KeyX: 140, KeyY: 141, KeyZ: 142, KeyboardLayoutSelect: 143, Lang1: 144, Lang2: 145, Lang3: 146, Lang4: 147, Lang5: 148, LaunchApp1: 149, LaunchApp2: 150, LaunchAssistant: 151, LaunchControlPanel: 152, LaunchMail: 153, LaunchScreenSaver: 154, MailForward: 155, MailReply: 156, MailSend: 157, MediaFastForward: 158, MediaPause: 159, MediaPlay: 160, MediaPlayPause: 161, MediaRecord: 162, MediaRewind: 163, MediaSelect: 164, MediaStop: 165, MediaTrackNext: 166, MediaTrackPrevious: 167, MetaLeft: 168, MetaRight: 169, MicrophoneMuteToggle: 170, Minus: 171, NonConvert: 172, NumLock: 173, Numpad0: 174, Numpad1: 175, Numpad2: 176, Numpad3: 177, Numpad4: 178, Numpad5: 179, Numpad6: 180, Numpad7: 181, Numpad8: 182, Numpad9: 183, NumpadAdd: 184, NumpadBackspace: 185, NumpadClear: 186, NumpadClearEntry: 187, NumpadComma: 188, NumpadDecimal: 189, NumpadDivide: 190, NumpadEnter: 191, NumpadEqual: 192, NumpadMemoryAdd: 193, NumpadMemoryClear: 194, NumpadMemoryRecall: 195, NumpadMemoryStore: 196, NumpadMemorySubtract: 197, NumpadMultiply: 198, NumpadParenLeft: 199, NumpadParenRight: 200, NumpadSubtract: 201, Open: 202, PageDown: 203, PageUp: 204, Paste: 205, Pause: 206, Period: 207, Power: 208, PrintScreen: 209, PrivacyScreenToggle: 210, Props: 211, Quote: 212, Resume: 213, ScrollLock: 214, Select: 215, SelectTask: 216, Semicolon: 217, ShiftLeft: 218, ShiftRight: 219, ShowAllWindows: 220, Slash: 221, Sleep: 222, Space: 223, Super: 224, Suspend: 225, Tab: 226, Turbo: 227, Undo: 228, WakeUp: 229, ZoomToggle: 230};
    B.PhysicalKeyboardKey_458907 = new A.PhysicalKeyboardKey(458907);
    B.PhysicalKeyboardKey_458873 = new A.PhysicalKeyboardKey(458873);
    B.PhysicalKeyboardKey_458978 = new A.PhysicalKeyboardKey(458978);
    B.PhysicalKeyboardKey_458982 = new A.PhysicalKeyboardKey(458982);
    B.PhysicalKeyboardKey_458833 = new A.PhysicalKeyboardKey(458833);
    B.PhysicalKeyboardKey_458832 = new A.PhysicalKeyboardKey(458832);
    B.PhysicalKeyboardKey_458831 = new A.PhysicalKeyboardKey(458831);
    B.PhysicalKeyboardKey_458834 = new A.PhysicalKeyboardKey(458834);
    B.PhysicalKeyboardKey_458881 = new A.PhysicalKeyboardKey(458881);
    B.PhysicalKeyboardKey_458879 = new A.PhysicalKeyboardKey(458879);
    B.PhysicalKeyboardKey_458880 = new A.PhysicalKeyboardKey(458880);
    B.PhysicalKeyboardKey_458805 = new A.PhysicalKeyboardKey(458805);
    B.PhysicalKeyboardKey_458801 = new A.PhysicalKeyboardKey(458801);
    B.PhysicalKeyboardKey_458794 = new A.PhysicalKeyboardKey(458794);
    B.PhysicalKeyboardKey_458799 = new A.PhysicalKeyboardKey(458799);
    B.PhysicalKeyboardKey_458800 = new A.PhysicalKeyboardKey(458800);
    B.PhysicalKeyboardKey_786544 = new A.PhysicalKeyboardKey(786544);
    B.PhysicalKeyboardKey_786543 = new A.PhysicalKeyboardKey(786543);
    B.PhysicalKeyboardKey_786980 = new A.PhysicalKeyboardKey(786980);
    B.PhysicalKeyboardKey_786986 = new A.PhysicalKeyboardKey(786986);
    B.PhysicalKeyboardKey_786981 = new A.PhysicalKeyboardKey(786981);
    B.PhysicalKeyboardKey_786979 = new A.PhysicalKeyboardKey(786979);
    B.PhysicalKeyboardKey_786983 = new A.PhysicalKeyboardKey(786983);
    B.PhysicalKeyboardKey_786977 = new A.PhysicalKeyboardKey(786977);
    B.PhysicalKeyboardKey_786982 = new A.PhysicalKeyboardKey(786982);
    B.PhysicalKeyboardKey_458809 = new A.PhysicalKeyboardKey(458809);
    B.PhysicalKeyboardKey_458806 = new A.PhysicalKeyboardKey(458806);
    B.PhysicalKeyboardKey_458853 = new A.PhysicalKeyboardKey(458853);
    B.PhysicalKeyboardKey_458976 = new A.PhysicalKeyboardKey(458976);
    B.PhysicalKeyboardKey_458980 = new A.PhysicalKeyboardKey(458980);
    B.PhysicalKeyboardKey_458890 = new A.PhysicalKeyboardKey(458890);
    B.PhysicalKeyboardKey_458876 = new A.PhysicalKeyboardKey(458876);
    B.PhysicalKeyboardKey_458875 = new A.PhysicalKeyboardKey(458875);
    B.PhysicalKeyboardKey_458828 = new A.PhysicalKeyboardKey(458828);
    B.PhysicalKeyboardKey_458791 = new A.PhysicalKeyboardKey(458791);
    B.PhysicalKeyboardKey_458782 = new A.PhysicalKeyboardKey(458782);
    B.PhysicalKeyboardKey_458783 = new A.PhysicalKeyboardKey(458783);
    B.PhysicalKeyboardKey_458784 = new A.PhysicalKeyboardKey(458784);
    B.PhysicalKeyboardKey_458785 = new A.PhysicalKeyboardKey(458785);
    B.PhysicalKeyboardKey_458786 = new A.PhysicalKeyboardKey(458786);
    B.PhysicalKeyboardKey_458787 = new A.PhysicalKeyboardKey(458787);
    B.PhysicalKeyboardKey_458788 = new A.PhysicalKeyboardKey(458788);
    B.PhysicalKeyboardKey_458789 = new A.PhysicalKeyboardKey(458789);
    B.PhysicalKeyboardKey_458790 = new A.PhysicalKeyboardKey(458790);
    B.PhysicalKeyboardKey_65717 = new A.PhysicalKeyboardKey(65717);
    B.PhysicalKeyboardKey_786616 = new A.PhysicalKeyboardKey(786616);
    B.PhysicalKeyboardKey_458829 = new A.PhysicalKeyboardKey(458829);
    B.PhysicalKeyboardKey_458792 = new A.PhysicalKeyboardKey(458792);
    B.PhysicalKeyboardKey_458798 = new A.PhysicalKeyboardKey(458798);
    B.PhysicalKeyboardKey_458793 = new A.PhysicalKeyboardKey(458793);
    B.PhysicalKeyboardKey_458810 = new A.PhysicalKeyboardKey(458810);
    B.PhysicalKeyboardKey_458819 = new A.PhysicalKeyboardKey(458819);
    B.PhysicalKeyboardKey_458820 = new A.PhysicalKeyboardKey(458820);
    B.PhysicalKeyboardKey_458821 = new A.PhysicalKeyboardKey(458821);
    B.PhysicalKeyboardKey_458856 = new A.PhysicalKeyboardKey(458856);
    B.PhysicalKeyboardKey_458857 = new A.PhysicalKeyboardKey(458857);
    B.PhysicalKeyboardKey_458858 = new A.PhysicalKeyboardKey(458858);
    B.PhysicalKeyboardKey_458859 = new A.PhysicalKeyboardKey(458859);
    B.PhysicalKeyboardKey_458860 = new A.PhysicalKeyboardKey(458860);
    B.PhysicalKeyboardKey_458861 = new A.PhysicalKeyboardKey(458861);
    B.PhysicalKeyboardKey_458862 = new A.PhysicalKeyboardKey(458862);
    B.PhysicalKeyboardKey_458811 = new A.PhysicalKeyboardKey(458811);
    B.PhysicalKeyboardKey_458863 = new A.PhysicalKeyboardKey(458863);
    B.PhysicalKeyboardKey_458864 = new A.PhysicalKeyboardKey(458864);
    B.PhysicalKeyboardKey_458865 = new A.PhysicalKeyboardKey(458865);
    B.PhysicalKeyboardKey_458866 = new A.PhysicalKeyboardKey(458866);
    B.PhysicalKeyboardKey_458867 = new A.PhysicalKeyboardKey(458867);
    B.PhysicalKeyboardKey_458812 = new A.PhysicalKeyboardKey(458812);
    B.PhysicalKeyboardKey_458813 = new A.PhysicalKeyboardKey(458813);
    B.PhysicalKeyboardKey_458814 = new A.PhysicalKeyboardKey(458814);
    B.PhysicalKeyboardKey_458815 = new A.PhysicalKeyboardKey(458815);
    B.PhysicalKeyboardKey_458816 = new A.PhysicalKeyboardKey(458816);
    B.PhysicalKeyboardKey_458817 = new A.PhysicalKeyboardKey(458817);
    B.PhysicalKeyboardKey_458818 = new A.PhysicalKeyboardKey(458818);
    B.PhysicalKeyboardKey_458878 = new A.PhysicalKeyboardKey(458878);
    B.PhysicalKeyboardKey_18 = new A.PhysicalKeyboardKey(18);
    B.PhysicalKeyboardKey_19 = new A.PhysicalKeyboardKey(19);
    B.PhysicalKeyboardKey_392961 = new A.PhysicalKeyboardKey(392961);
    B.PhysicalKeyboardKey_392970 = new A.PhysicalKeyboardKey(392970);
    B.PhysicalKeyboardKey_392971 = new A.PhysicalKeyboardKey(392971);
    B.PhysicalKeyboardKey_392972 = new A.PhysicalKeyboardKey(392972);
    B.PhysicalKeyboardKey_392973 = new A.PhysicalKeyboardKey(392973);
    B.PhysicalKeyboardKey_392974 = new A.PhysicalKeyboardKey(392974);
    B.PhysicalKeyboardKey_392975 = new A.PhysicalKeyboardKey(392975);
    B.PhysicalKeyboardKey_392976 = new A.PhysicalKeyboardKey(392976);
    B.PhysicalKeyboardKey_392962 = new A.PhysicalKeyboardKey(392962);
    B.PhysicalKeyboardKey_392963 = new A.PhysicalKeyboardKey(392963);
    B.PhysicalKeyboardKey_392964 = new A.PhysicalKeyboardKey(392964);
    B.PhysicalKeyboardKey_392965 = new A.PhysicalKeyboardKey(392965);
    B.PhysicalKeyboardKey_392966 = new A.PhysicalKeyboardKey(392966);
    B.PhysicalKeyboardKey_392967 = new A.PhysicalKeyboardKey(392967);
    B.PhysicalKeyboardKey_392968 = new A.PhysicalKeyboardKey(392968);
    B.PhysicalKeyboardKey_392969 = new A.PhysicalKeyboardKey(392969);
    B.PhysicalKeyboardKey_392977 = new A.PhysicalKeyboardKey(392977);
    B.PhysicalKeyboardKey_392978 = new A.PhysicalKeyboardKey(392978);
    B.PhysicalKeyboardKey_392979 = new A.PhysicalKeyboardKey(392979);
    B.PhysicalKeyboardKey_392980 = new A.PhysicalKeyboardKey(392980);
    B.PhysicalKeyboardKey_392981 = new A.PhysicalKeyboardKey(392981);
    B.PhysicalKeyboardKey_392982 = new A.PhysicalKeyboardKey(392982);
    B.PhysicalKeyboardKey_392983 = new A.PhysicalKeyboardKey(392983);
    B.PhysicalKeyboardKey_392984 = new A.PhysicalKeyboardKey(392984);
    B.PhysicalKeyboardKey_392985 = new A.PhysicalKeyboardKey(392985);
    B.PhysicalKeyboardKey_392986 = new A.PhysicalKeyboardKey(392986);
    B.PhysicalKeyboardKey_392987 = new A.PhysicalKeyboardKey(392987);
    B.PhysicalKeyboardKey_392988 = new A.PhysicalKeyboardKey(392988);
    B.PhysicalKeyboardKey_392989 = new A.PhysicalKeyboardKey(392989);
    B.PhysicalKeyboardKey_392990 = new A.PhysicalKeyboardKey(392990);
    B.PhysicalKeyboardKey_392991 = new A.PhysicalKeyboardKey(392991);
    B.PhysicalKeyboardKey_458869 = new A.PhysicalKeyboardKey(458869);
    B.PhysicalKeyboardKey_458826 = new A.PhysicalKeyboardKey(458826);
    B.PhysicalKeyboardKey_16 = new A.PhysicalKeyboardKey(16);
    B.PhysicalKeyboardKey_458825 = new A.PhysicalKeyboardKey(458825);
    B.PhysicalKeyboardKey_458852 = new A.PhysicalKeyboardKey(458852);
    B.PhysicalKeyboardKey_458887 = new A.PhysicalKeyboardKey(458887);
    B.PhysicalKeyboardKey_458889 = new A.PhysicalKeyboardKey(458889);
    B.PhysicalKeyboardKey_458888 = new A.PhysicalKeyboardKey(458888);
    B.PhysicalKeyboardKey_458756 = new A.PhysicalKeyboardKey(458756);
    B.PhysicalKeyboardKey_458757 = new A.PhysicalKeyboardKey(458757);
    B.PhysicalKeyboardKey_458758 = new A.PhysicalKeyboardKey(458758);
    B.PhysicalKeyboardKey_458759 = new A.PhysicalKeyboardKey(458759);
    B.PhysicalKeyboardKey_458760 = new A.PhysicalKeyboardKey(458760);
    B.PhysicalKeyboardKey_458761 = new A.PhysicalKeyboardKey(458761);
    B.PhysicalKeyboardKey_458762 = new A.PhysicalKeyboardKey(458762);
    B.PhysicalKeyboardKey_458763 = new A.PhysicalKeyboardKey(458763);
    B.PhysicalKeyboardKey_458764 = new A.PhysicalKeyboardKey(458764);
    B.PhysicalKeyboardKey_458765 = new A.PhysicalKeyboardKey(458765);
    B.PhysicalKeyboardKey_458766 = new A.PhysicalKeyboardKey(458766);
    B.PhysicalKeyboardKey_458767 = new A.PhysicalKeyboardKey(458767);
    B.PhysicalKeyboardKey_458768 = new A.PhysicalKeyboardKey(458768);
    B.PhysicalKeyboardKey_458769 = new A.PhysicalKeyboardKey(458769);
    B.PhysicalKeyboardKey_458770 = new A.PhysicalKeyboardKey(458770);
    B.PhysicalKeyboardKey_458771 = new A.PhysicalKeyboardKey(458771);
    B.PhysicalKeyboardKey_458772 = new A.PhysicalKeyboardKey(458772);
    B.PhysicalKeyboardKey_458773 = new A.PhysicalKeyboardKey(458773);
    B.PhysicalKeyboardKey_458774 = new A.PhysicalKeyboardKey(458774);
    B.PhysicalKeyboardKey_458775 = new A.PhysicalKeyboardKey(458775);
    B.PhysicalKeyboardKey_458776 = new A.PhysicalKeyboardKey(458776);
    B.PhysicalKeyboardKey_458777 = new A.PhysicalKeyboardKey(458777);
    B.PhysicalKeyboardKey_458778 = new A.PhysicalKeyboardKey(458778);
    B.PhysicalKeyboardKey_458779 = new A.PhysicalKeyboardKey(458779);
    B.PhysicalKeyboardKey_458780 = new A.PhysicalKeyboardKey(458780);
    B.PhysicalKeyboardKey_458781 = new A.PhysicalKeyboardKey(458781);
    B.PhysicalKeyboardKey_787101 = new A.PhysicalKeyboardKey(787101);
    B.PhysicalKeyboardKey_458896 = new A.PhysicalKeyboardKey(458896);
    B.PhysicalKeyboardKey_458897 = new A.PhysicalKeyboardKey(458897);
    B.PhysicalKeyboardKey_458898 = new A.PhysicalKeyboardKey(458898);
    B.PhysicalKeyboardKey_458899 = new A.PhysicalKeyboardKey(458899);
    B.PhysicalKeyboardKey_458900 = new A.PhysicalKeyboardKey(458900);
    B.PhysicalKeyboardKey_786836 = new A.PhysicalKeyboardKey(786836);
    B.PhysicalKeyboardKey_786834 = new A.PhysicalKeyboardKey(786834);
    B.PhysicalKeyboardKey_786891 = new A.PhysicalKeyboardKey(786891);
    B.PhysicalKeyboardKey_786847 = new A.PhysicalKeyboardKey(786847);
    B.PhysicalKeyboardKey_786826 = new A.PhysicalKeyboardKey(786826);
    B.PhysicalKeyboardKey_786865 = new A.PhysicalKeyboardKey(786865);
    B.PhysicalKeyboardKey_787083 = new A.PhysicalKeyboardKey(787083);
    B.PhysicalKeyboardKey_787081 = new A.PhysicalKeyboardKey(787081);
    B.PhysicalKeyboardKey_787084 = new A.PhysicalKeyboardKey(787084);
    B.PhysicalKeyboardKey_786611 = new A.PhysicalKeyboardKey(786611);
    B.PhysicalKeyboardKey_786609 = new A.PhysicalKeyboardKey(786609);
    B.PhysicalKeyboardKey_786608 = new A.PhysicalKeyboardKey(786608);
    B.PhysicalKeyboardKey_786637 = new A.PhysicalKeyboardKey(786637);
    B.PhysicalKeyboardKey_786610 = new A.PhysicalKeyboardKey(786610);
    B.PhysicalKeyboardKey_786612 = new A.PhysicalKeyboardKey(786612);
    B.PhysicalKeyboardKey_786819 = new A.PhysicalKeyboardKey(786819);
    B.PhysicalKeyboardKey_786615 = new A.PhysicalKeyboardKey(786615);
    B.PhysicalKeyboardKey_786613 = new A.PhysicalKeyboardKey(786613);
    B.PhysicalKeyboardKey_786614 = new A.PhysicalKeyboardKey(786614);
    B.PhysicalKeyboardKey_458979 = new A.PhysicalKeyboardKey(458979);
    B.PhysicalKeyboardKey_458983 = new A.PhysicalKeyboardKey(458983);
    B.PhysicalKeyboardKey_24 = new A.PhysicalKeyboardKey(24);
    B.PhysicalKeyboardKey_458797 = new A.PhysicalKeyboardKey(458797);
    B.PhysicalKeyboardKey_458891 = new A.PhysicalKeyboardKey(458891);
    B.PhysicalKeyboardKey_458835 = new A.PhysicalKeyboardKey(458835);
    B.PhysicalKeyboardKey_458850 = new A.PhysicalKeyboardKey(458850);
    B.PhysicalKeyboardKey_458841 = new A.PhysicalKeyboardKey(458841);
    B.PhysicalKeyboardKey_458842 = new A.PhysicalKeyboardKey(458842);
    B.PhysicalKeyboardKey_458843 = new A.PhysicalKeyboardKey(458843);
    B.PhysicalKeyboardKey_458844 = new A.PhysicalKeyboardKey(458844);
    B.PhysicalKeyboardKey_458845 = new A.PhysicalKeyboardKey(458845);
    B.PhysicalKeyboardKey_458846 = new A.PhysicalKeyboardKey(458846);
    B.PhysicalKeyboardKey_458847 = new A.PhysicalKeyboardKey(458847);
    B.PhysicalKeyboardKey_458848 = new A.PhysicalKeyboardKey(458848);
    B.PhysicalKeyboardKey_458849 = new A.PhysicalKeyboardKey(458849);
    B.PhysicalKeyboardKey_458839 = new A.PhysicalKeyboardKey(458839);
    B.PhysicalKeyboardKey_458939 = new A.PhysicalKeyboardKey(458939);
    B.PhysicalKeyboardKey_458968 = new A.PhysicalKeyboardKey(458968);
    B.PhysicalKeyboardKey_458969 = new A.PhysicalKeyboardKey(458969);
    B.PhysicalKeyboardKey_458885 = new A.PhysicalKeyboardKey(458885);
    B.PhysicalKeyboardKey_458851 = new A.PhysicalKeyboardKey(458851);
    B.PhysicalKeyboardKey_458836 = new A.PhysicalKeyboardKey(458836);
    B.PhysicalKeyboardKey_458840 = new A.PhysicalKeyboardKey(458840);
    B.PhysicalKeyboardKey_458855 = new A.PhysicalKeyboardKey(458855);
    B.PhysicalKeyboardKey_458963 = new A.PhysicalKeyboardKey(458963);
    B.PhysicalKeyboardKey_458962 = new A.PhysicalKeyboardKey(458962);
    B.PhysicalKeyboardKey_458961 = new A.PhysicalKeyboardKey(458961);
    B.PhysicalKeyboardKey_458960 = new A.PhysicalKeyboardKey(458960);
    B.PhysicalKeyboardKey_458964 = new A.PhysicalKeyboardKey(458964);
    B.PhysicalKeyboardKey_458837 = new A.PhysicalKeyboardKey(458837);
    B.PhysicalKeyboardKey_458934 = new A.PhysicalKeyboardKey(458934);
    B.PhysicalKeyboardKey_458935 = new A.PhysicalKeyboardKey(458935);
    B.PhysicalKeyboardKey_458838 = new A.PhysicalKeyboardKey(458838);
    B.PhysicalKeyboardKey_458868 = new A.PhysicalKeyboardKey(458868);
    B.PhysicalKeyboardKey_458830 = new A.PhysicalKeyboardKey(458830);
    B.PhysicalKeyboardKey_458827 = new A.PhysicalKeyboardKey(458827);
    B.PhysicalKeyboardKey_458877 = new A.PhysicalKeyboardKey(458877);
    B.PhysicalKeyboardKey_458824 = new A.PhysicalKeyboardKey(458824);
    B.PhysicalKeyboardKey_458807 = new A.PhysicalKeyboardKey(458807);
    B.PhysicalKeyboardKey_458854 = new A.PhysicalKeyboardKey(458854);
    B.PhysicalKeyboardKey_458822 = new A.PhysicalKeyboardKey(458822);
    B.PhysicalKeyboardKey_23 = new A.PhysicalKeyboardKey(23);
    B.PhysicalKeyboardKey_458915 = new A.PhysicalKeyboardKey(458915);
    B.PhysicalKeyboardKey_458804 = new A.PhysicalKeyboardKey(458804);
    B.PhysicalKeyboardKey_21 = new A.PhysicalKeyboardKey(21);
    B.PhysicalKeyboardKey_458823 = new A.PhysicalKeyboardKey(458823);
    B.PhysicalKeyboardKey_458871 = new A.PhysicalKeyboardKey(458871);
    B.PhysicalKeyboardKey_786850 = new A.PhysicalKeyboardKey(786850);
    B.PhysicalKeyboardKey_458803 = new A.PhysicalKeyboardKey(458803);
    B.PhysicalKeyboardKey_458977 = new A.PhysicalKeyboardKey(458977);
    B.PhysicalKeyboardKey_458981 = new A.PhysicalKeyboardKey(458981);
    B.PhysicalKeyboardKey_787103 = new A.PhysicalKeyboardKey(787103);
    B.PhysicalKeyboardKey_458808 = new A.PhysicalKeyboardKey(458808);
    B.PhysicalKeyboardKey_65666 = new A.PhysicalKeyboardKey(65666);
    B.PhysicalKeyboardKey_458796 = new A.PhysicalKeyboardKey(458796);
    B.PhysicalKeyboardKey_17 = new A.PhysicalKeyboardKey(17);
    B.PhysicalKeyboardKey_20 = new A.PhysicalKeyboardKey(20);
    B.PhysicalKeyboardKey_458795 = new A.PhysicalKeyboardKey(458795);
    B.PhysicalKeyboardKey_22 = new A.PhysicalKeyboardKey(22);
    B.PhysicalKeyboardKey_458874 = new A.PhysicalKeyboardKey(458874);
    B.PhysicalKeyboardKey_65667 = new A.PhysicalKeyboardKey(65667);
    B.PhysicalKeyboardKey_786994 = new A.PhysicalKeyboardKey(786994);
    B.Map_udsmM = new A.ConstantStringMap(B.Object_Kvp, [B.PhysicalKeyboardKey_458907, B.PhysicalKeyboardKey_458873, B.PhysicalKeyboardKey_458978, B.PhysicalKeyboardKey_458982, B.PhysicalKeyboardKey_458833, B.PhysicalKeyboardKey_458832, B.PhysicalKeyboardKey_458831, B.PhysicalKeyboardKey_458834, B.PhysicalKeyboardKey_458881, B.PhysicalKeyboardKey_458879, B.PhysicalKeyboardKey_458880, B.PhysicalKeyboardKey_458805, B.PhysicalKeyboardKey_458801, B.PhysicalKeyboardKey_458794, B.PhysicalKeyboardKey_458799, B.PhysicalKeyboardKey_458800, B.PhysicalKeyboardKey_786544, B.PhysicalKeyboardKey_786543, B.PhysicalKeyboardKey_786980, B.PhysicalKeyboardKey_786986, B.PhysicalKeyboardKey_786981, B.PhysicalKeyboardKey_786979, B.PhysicalKeyboardKey_786983, B.PhysicalKeyboardKey_786977, B.PhysicalKeyboardKey_786982, B.PhysicalKeyboardKey_458809, B.PhysicalKeyboardKey_458806, B.PhysicalKeyboardKey_458853, B.PhysicalKeyboardKey_458976, B.PhysicalKeyboardKey_458980, B.PhysicalKeyboardKey_458890, B.PhysicalKeyboardKey_458876, B.PhysicalKeyboardKey_458875, B.PhysicalKeyboardKey_458828, B.PhysicalKeyboardKey_458791, B.PhysicalKeyboardKey_458782, B.PhysicalKeyboardKey_458783, B.PhysicalKeyboardKey_458784, B.PhysicalKeyboardKey_458785, B.PhysicalKeyboardKey_458786, B.PhysicalKeyboardKey_458787, B.PhysicalKeyboardKey_458788, B.PhysicalKeyboardKey_458789, B.PhysicalKeyboardKey_458790, B.PhysicalKeyboardKey_65717, B.PhysicalKeyboardKey_786616, B.PhysicalKeyboardKey_458829, B.PhysicalKeyboardKey_458792, B.PhysicalKeyboardKey_458798, B.PhysicalKeyboardKey_458793, B.PhysicalKeyboardKey_458793, B.PhysicalKeyboardKey_458810, B.PhysicalKeyboardKey_458819, B.PhysicalKeyboardKey_458820, B.PhysicalKeyboardKey_458821, B.PhysicalKeyboardKey_458856, B.PhysicalKeyboardKey_458857, B.PhysicalKeyboardKey_458858, B.PhysicalKeyboardKey_458859, B.PhysicalKeyboardKey_458860, B.PhysicalKeyboardKey_458861, B.PhysicalKeyboardKey_458862, B.PhysicalKeyboardKey_458811, B.PhysicalKeyboardKey_458863, B.PhysicalKeyboardKey_458864, B.PhysicalKeyboardKey_458865, B.PhysicalKeyboardKey_458866, B.PhysicalKeyboardKey_458867, B.PhysicalKeyboardKey_458812, B.PhysicalKeyboardKey_458813, B.PhysicalKeyboardKey_458814, B.PhysicalKeyboardKey_458815, B.PhysicalKeyboardKey_458816, B.PhysicalKeyboardKey_458817, B.PhysicalKeyboardKey_458818, B.PhysicalKeyboardKey_458878, B.PhysicalKeyboardKey_18, B.PhysicalKeyboardKey_19, B.PhysicalKeyboardKey_392961, B.PhysicalKeyboardKey_392970, B.PhysicalKeyboardKey_392971, B.PhysicalKeyboardKey_392972, B.PhysicalKeyboardKey_392973, B.PhysicalKeyboardKey_392974, B.PhysicalKeyboardKey_392975, B.PhysicalKeyboardKey_392976, B.PhysicalKeyboardKey_392962, B.PhysicalKeyboardKey_392963, B.PhysicalKeyboardKey_392964, B.PhysicalKeyboardKey_392965, B.PhysicalKeyboardKey_392966, B.PhysicalKeyboardKey_392967, B.PhysicalKeyboardKey_392968, B.PhysicalKeyboardKey_392969, B.PhysicalKeyboardKey_392977, B.PhysicalKeyboardKey_392978, B.PhysicalKeyboardKey_392979, B.PhysicalKeyboardKey_392980, B.PhysicalKeyboardKey_392981, B.PhysicalKeyboardKey_392982, B.PhysicalKeyboardKey_392983, B.PhysicalKeyboardKey_392984, B.PhysicalKeyboardKey_392985, B.PhysicalKeyboardKey_392986, B.PhysicalKeyboardKey_392987, B.PhysicalKeyboardKey_392988, B.PhysicalKeyboardKey_392989, B.PhysicalKeyboardKey_392990, B.PhysicalKeyboardKey_392991, B.PhysicalKeyboardKey_458869, B.PhysicalKeyboardKey_458826, B.PhysicalKeyboardKey_16, B.PhysicalKeyboardKey_458825, B.PhysicalKeyboardKey_458852, B.PhysicalKeyboardKey_458887, B.PhysicalKeyboardKey_458889, B.PhysicalKeyboardKey_458888, B.PhysicalKeyboardKey_458756, B.PhysicalKeyboardKey_458757, B.PhysicalKeyboardKey_458758, B.PhysicalKeyboardKey_458759, B.PhysicalKeyboardKey_458760, B.PhysicalKeyboardKey_458761, B.PhysicalKeyboardKey_458762, B.PhysicalKeyboardKey_458763, B.PhysicalKeyboardKey_458764, B.PhysicalKeyboardKey_458765, B.PhysicalKeyboardKey_458766, B.PhysicalKeyboardKey_458767, B.PhysicalKeyboardKey_458768, B.PhysicalKeyboardKey_458769, B.PhysicalKeyboardKey_458770, B.PhysicalKeyboardKey_458771, B.PhysicalKeyboardKey_458772, B.PhysicalKeyboardKey_458773, B.PhysicalKeyboardKey_458774, B.PhysicalKeyboardKey_458775, B.PhysicalKeyboardKey_458776, B.PhysicalKeyboardKey_458777, B.PhysicalKeyboardKey_458778, B.PhysicalKeyboardKey_458779, B.PhysicalKeyboardKey_458780, B.PhysicalKeyboardKey_458781, B.PhysicalKeyboardKey_787101, B.PhysicalKeyboardKey_458896, B.PhysicalKeyboardKey_458897, B.PhysicalKeyboardKey_458898, B.PhysicalKeyboardKey_458899, B.PhysicalKeyboardKey_458900, B.PhysicalKeyboardKey_786836, B.PhysicalKeyboardKey_786834, B.PhysicalKeyboardKey_786891, B.PhysicalKeyboardKey_786847, B.PhysicalKeyboardKey_786826, B.PhysicalKeyboardKey_786865, B.PhysicalKeyboardKey_787083, B.PhysicalKeyboardKey_787081, B.PhysicalKeyboardKey_787084, B.PhysicalKeyboardKey_786611, B.PhysicalKeyboardKey_786609, B.PhysicalKeyboardKey_786608, B.PhysicalKeyboardKey_786637, B.PhysicalKeyboardKey_786610, B.PhysicalKeyboardKey_786612, B.PhysicalKeyboardKey_786819, B.PhysicalKeyboardKey_786615, B.PhysicalKeyboardKey_786613, B.PhysicalKeyboardKey_786614, B.PhysicalKeyboardKey_458979, B.PhysicalKeyboardKey_458983, B.PhysicalKeyboardKey_24, B.PhysicalKeyboardKey_458797, B.PhysicalKeyboardKey_458891, B.PhysicalKeyboardKey_458835, B.PhysicalKeyboardKey_458850, B.PhysicalKeyboardKey_458841, B.PhysicalKeyboardKey_458842, B.PhysicalKeyboardKey_458843, B.PhysicalKeyboardKey_458844, B.PhysicalKeyboardKey_458845, B.PhysicalKeyboardKey_458846, B.PhysicalKeyboardKey_458847, B.PhysicalKeyboardKey_458848, B.PhysicalKeyboardKey_458849, B.PhysicalKeyboardKey_458839, B.PhysicalKeyboardKey_458939, B.PhysicalKeyboardKey_458968, B.PhysicalKeyboardKey_458969, B.PhysicalKeyboardKey_458885, B.PhysicalKeyboardKey_458851, B.PhysicalKeyboardKey_458836, B.PhysicalKeyboardKey_458840, B.PhysicalKeyboardKey_458855, B.PhysicalKeyboardKey_458963, B.PhysicalKeyboardKey_458962, B.PhysicalKeyboardKey_458961, B.PhysicalKeyboardKey_458960, B.PhysicalKeyboardKey_458964, B.PhysicalKeyboardKey_458837, B.PhysicalKeyboardKey_458934, B.PhysicalKeyboardKey_458935, B.PhysicalKeyboardKey_458838, B.PhysicalKeyboardKey_458868, B.PhysicalKeyboardKey_458830, B.PhysicalKeyboardKey_458827, B.PhysicalKeyboardKey_458877, B.PhysicalKeyboardKey_458824, B.PhysicalKeyboardKey_458807, B.PhysicalKeyboardKey_458854, B.PhysicalKeyboardKey_458822, B.PhysicalKeyboardKey_23, B.PhysicalKeyboardKey_458915, B.PhysicalKeyboardKey_458804, B.PhysicalKeyboardKey_21, B.PhysicalKeyboardKey_458823, B.PhysicalKeyboardKey_458871, B.PhysicalKeyboardKey_786850, B.PhysicalKeyboardKey_458803, B.PhysicalKeyboardKey_458977, B.PhysicalKeyboardKey_458981, B.PhysicalKeyboardKey_787103, B.PhysicalKeyboardKey_458808, B.PhysicalKeyboardKey_65666, B.PhysicalKeyboardKey_458796, B.PhysicalKeyboardKey_17, B.PhysicalKeyboardKey_20, B.PhysicalKeyboardKey_458795, B.PhysicalKeyboardKey_22, B.PhysicalKeyboardKey_458874, B.PhysicalKeyboardKey_65667, B.PhysicalKeyboardKey_786994], A.findType("ConstantStringMap<String,PhysicalKeyboardKey>"));
    B.MaterialBannerThemeData_G75 = new A.MaterialBannerThemeData(null, null, null, null, null, null, null, null);
    B.Color_4293128957 = new A.Color(4293128957);
    B.Color_4290502395 = new A.Color(4290502395);
    B.Color_4287679225 = new A.Color(4287679225);
    B.Color_4284790262 = new A.Color(4284790262);
    B.Color_4282557941 = new A.Color(4282557941);
    B.Color_4280391411 = new A.Color(4280391411);
    B.Color_4280191205 = new A.Color(4280191205);
    B.Color_4279858898 = new A.Color(4279858898);
    B.Color_4279592384 = new A.Color(4279592384);
    B.Color_4279060385 = new A.Color(4279060385);
    B.Map_tF9to = new A.GeneralConstantMap([50, B.Color_4293128957, 100, B.Color_4290502395, 200, B.Color_4287679225, 300, B.Color_4284790262, 400, B.Color_4282557941, 500, B.Color_4280391411, 600, B.Color_4280191205, 700, B.Color_4279858898, 800, B.Color_4279592384, 900, B.Color_4279060385], A.findType("GeneralConstantMap<int,Color>"));
    B.MaterialColor_Map_tF9to_4280391411 = new A.MaterialColor(B.Map_tF9to, 4280391411);
    B.MaterialState_0 = new A.MaterialState(0, "hovered");
    B.MaterialState_1 = new A.MaterialState(1, "focused");
    B.MaterialState_2 = new A.MaterialState(2, "pressed");
    B.MaterialState_3 = new A.MaterialState(3, "dragged");
    B.MaterialState_4 = new A.MaterialState(4, "selected");
    B.MaterialState_5 = new A.MaterialState(5, "scrolledUnder");
    B.MaterialState_6 = new A.MaterialState(6, "disabled");
    B.MaterialState_7 = new A.MaterialState(7, "error");
    B.MaterialTapTargetSize_0 = new A.MaterialTapTargetSize(0, "padded");
    B.MaterialTapTargetSize_1 = new A.MaterialTapTargetSize(1, "shrinkWrap");
    B.MenuBarThemeData_null = new A.MenuBarThemeData(null);
    B.MenuButtonThemeData_null = new A.MenuButtonThemeData(null);
    B.MenuThemeData_null = new A.MenuThemeData(null);
    B.C_StandardMethodCodec = new A.StandardMethodCodec();
    B.MethodChannel_mfT = new A.MethodChannel("flutter/service_worker", B.C_StandardMethodCodec);
    B.MyHomePage_null = new A.MyHomePage(null);
    B.NavigationBarThemeData_N2P = new A.NavigationBarThemeData(null, null, null, null, null, null, null, null, null, null);
    B.NavigationDrawerThemeData_iQs = new A.NavigationDrawerThemeData(null, null, null, null, null, null, null, null, null, null);
    B.NavigationMode_0 = new A.NavigationMode(0, "traditional");
    B.NavigationRailThemeData_LDF = new A.NavigationRailThemeData(null, null, null, null, null, null, null, null, null, null, null, null, null);
    B.OffsetPair_dhP = new A.OffsetPair(B.Offset_0_0, B.Offset_0_0);
    B.Offset_5ck = new A.Offset(2.6999999999999997, 8.1);
    B.Offset_5tR = new A.Offset(3.6, 9);
    B.Offset_9_9 = new A.Offset(9, 9);
    B.Offset_ATs = new A.Offset(14.4, 9);
    B.Offset_FK3 = new A.Offset(7.2, 12.6);
    B.Offset_NuK = new A.Offset(-0.3333333333333333, 0);
    B.Offset_R50 = new A.Offset(15.299999999999999, 4.5);
    B.Offset_sFH = new A.Offset(0, -0.005);
    B.Offset_xfs = new A.Offset(1 / 0, 1 / 0);
    B.OptionalMethodChannel_02D = new A.OptionalMethodChannel("flutter/restoration", B.C_StandardMethodCodec);
    B.C_JSONMethodCodec = new A.JSONMethodCodec();
    B.OptionalMethodChannel_5XR = new A.OptionalMethodChannel("flutter/textinput", B.C_JSONMethodCodec);
    B.OptionalMethodChannel_D3N = new A.OptionalMethodChannel("flutter/menu", B.C_StandardMethodCodec);
    B.OptionalMethodChannel_OvF = new A.OptionalMethodChannel("flutter/mousecursor", B.C_StandardMethodCodec);
    B.OptionalMethodChannel_ZFR = new A.OptionalMethodChannel("flutter/platform", B.C_JSONMethodCodec);
    B.OptionalMethodChannel_sjf = new A.OptionalMethodChannel("flutter/navigation", B.C_JSONMethodCodec);
    B.OrdinalSortKey_0_null = new A.OrdinalSortKey(0, null);
    B.Orientation_0 = new A.Orientation(0, "portrait");
    B.Orientation_1 = new A.Orientation(1, "landscape");
    B.OutlinedButtonThemeData_null = new A.OutlinedButtonThemeData(null);
    B.ParagraphConstraints_t5V = new A.ParagraphConstraints(1 / 0);
    B.PathFillType_0 = new A.PathFillType(0, "nonZero");
    B.PathFillType_1 = new A.PathFillType(1, "evenOdd");
    B.PersistentHashMap_null = new A.PersistentHashMap(null);
    B.PlaceholderAlignment_0 = new A.PlaceholderAlignment(0, "baseline");
    B.PlaceholderAlignment_1 = new A.PlaceholderAlignment(1, "aboveBaseline");
    B.PlaceholderAlignment_2 = new A.PlaceholderAlignment(2, "belowBaseline");
    B.PlaceholderAlignment_3 = new A.PlaceholderAlignment(3, "top");
    B.PlaceholderAlignment_4 = new A.PlaceholderAlignment(4, "bottom");
    B.PlaceholderAlignment_5 = new A.PlaceholderAlignment(5, "middle");
    B.Size_0_0 = new A.Size(0, 0);
    B.PlaceholderDimensions_9am = new A.PlaceholderDimensions(B.Size_0_0, B.PlaceholderAlignment_4, null, null);
    B.PointerDeviceKind_0 = new A.PointerDeviceKind(0, "touch");
    B.PointerDeviceKind_1 = new A.PointerDeviceKind(1, "mouse");
    B.PointerDeviceKind_4 = new A.PointerDeviceKind(4, "trackpad");
    B.PopupMenuThemeData_r1B = new A.PopupMenuThemeData(null, null, null, null, null, null, null, null, null, null);
    B.ProgressIndicatorThemeData_X75 = new A.ProgressIndicatorThemeData(null, null, null, null, null);
    B.RadioThemeData_ajE = new A.RadioThemeData(null, null, null, null, null, null);
    B.Radius_8_8 = new A.Radius(8, 8);
    B.Radius_rid = new A.Radius(1.5, 1.5);
    B.Rect_0_0_0_0 = new A.Rect(0, 0, 0, 0);
    B.Rect_895 = new A.Rect(-1 / 0, -1 / 0, 1 / 0, 1 / 0);
    B.RenderComparison_0 = new A.RenderComparison(0, "identical");
    B.RenderComparison_2 = new A.RenderComparison(2, "paint");
    B.RenderComparison_3 = new A.RenderComparison(3, "layout");
    B.RoundedRectangleBorder_DBK = new A.RoundedRectangleBorder(B.BorderRadius_X2o, B.BorderSide_5Di);
    B.Radius_1_1 = new A.Radius(1, 1);
    B.BorderRadius_vT4 = new A.BorderRadius(B.Radius_1_1, B.Radius_1_1, B.Radius_1_1, B.Radius_1_1);
    B.RoundedRectangleBorder_Zfj = new A.RoundedRectangleBorder(B.BorderRadius_vT4, B.BorderSide_5Di);
    B.RoundedRectangleBorder_dBW = new A.RoundedRectangleBorder(B.BorderRadius_nnp, B.BorderSide_5Di);
    B.RoundedRectangleBorder_v5s = new A.RoundedRectangleBorder(B.BorderRadius_tUf, B.BorderSide_5Di);
    B.RouteInformationReportingType_0 = new A.RouteInformationReportingType(0, "none");
    B.RouteInformationReportingType_1 = new A.RouteInformationReportingType(1, "neglect");
    B.RoutePopDisposition_0 = new A.RoutePopDisposition(0, "pop");
    B.RoutePopDisposition_1 = new A.RoutePopDisposition(1, "doNotPop");
    B.RoutePopDisposition_2 = new A.RoutePopDisposition(2, "bubble");
    B.RouteSettings_null_null = new A.RouteSettings(null, null);
    B.SawTooth_1333 = new A.SawTooth(1333);
    B.SawTooth_2222 = new A.SawTooth(2222);
    B.ScaffoldGeometry_null_null = new A.ScaffoldGeometry(null, null);
    B.SchedulerPhase_0 = new A.SchedulerPhase(0, "idle");
    B.SchedulerPhase_1 = new A.SchedulerPhase(1, "transientCallbacks");
    B.SchedulerPhase_2 = new A.SchedulerPhase(2, "midFrameMicrotasks");
    B.SchedulerPhase_3 = new A.SchedulerPhase(3, "persistentCallbacks");
    B.SchedulerPhase_4 = new A.SchedulerPhase(4, "postFrameCallbacks");
    B.ScriptCategory_0 = new A.ScriptCategory(0, "englishLike");
    B.ScrollDirection_0 = new A.ScrollDirection(0, "idle");
    B.ScrollDirection_1 = new A.ScrollDirection(1, "forward");
    B.ScrollDirection_2 = new A.ScrollDirection(2, "reverse");
    B.ScrollPositionAlignmentPolicy_0 = new A.ScrollPositionAlignmentPolicy(0, "explicit");
    B.ScrollPositionAlignmentPolicy_1 = new A.ScrollPositionAlignmentPolicy(1, "keepVisibleAtEnd");
    B.ScrollPositionAlignmentPolicy_2 = new A.ScrollPositionAlignmentPolicy(2, "keepVisibleAtStart");
    B.ScrollbarOrientation_0 = new A.ScrollbarOrientation(0, "left");
    B.ScrollbarOrientation_1 = new A.ScrollbarOrientation(1, "right");
    B.ScrollbarOrientation_3 = new A.ScrollbarOrientation(3, "bottom");
    B.ScrollbarThemeData_WUa = new A.ScrollbarThemeData(null, null, null, null, null, null, null, null, null, null, null, null, null);
    B.SegmentedButtonThemeData_null_null = new A.SegmentedButtonThemeData(null, null);
    B.SelectionEventType_0 = new A.SelectionEventType(0, "startEdgeUpdate");
    B.SelectionEventType_1 = new A.SelectionEventType(1, "endEdgeUpdate");
    B.SelectionExtendDirection_0 = new A.SelectionExtendDirection(0, "previousLine");
    B.SelectionExtendDirection_1 = new A.SelectionExtendDirection(1, "nextLine");
    B.SelectionExtendDirection_2 = new A.SelectionExtendDirection(2, "forward");
    B.SelectionExtendDirection_3 = new A.SelectionExtendDirection(3, "backward");
    B.SelectionStatus_2 = new A.SelectionStatus(2, "none");
    B.SelectionGeometry_Egn = new A.SelectionGeometry(null, null, B.SelectionStatus_2, true);
    B.SelectionGeometry_lFP = new A.SelectionGeometry(null, null, B.SelectionStatus_2, false);
    B.SelectionResult_0 = new A.SelectionResult(0, "next");
    B.SelectionResult_1 = new A.SelectionResult(1, "previous");
    B.SelectionResult_2 = new A.SelectionResult(2, "end");
    B.SelectionResult_3 = new A.SelectionResult(3, "pending");
    B.SelectionResult_4 = new A.SelectionResult(4, "none");
    B.SelectionStatus_0 = new A.SelectionStatus(0, "uncollapsed");
    B.SelectionStatus_1 = new A.SelectionStatus(1, "collapsed");
    B.SemanticsAction_1 = new A.SemanticsAction(1);
    B.SemanticsAction_1024 = new A.SemanticsAction(1024);
    B.SemanticsAction_1048576 = new A.SemanticsAction(1048576);
    B.SemanticsAction_128 = new A.SemanticsAction(128);
    B.SemanticsAction_16 = new A.SemanticsAction(16);
    B.SemanticsAction_16384 = new A.SemanticsAction(16384);
    B.SemanticsAction_2 = new A.SemanticsAction(2);
    B.SemanticsAction_2048 = new A.SemanticsAction(2048);
    B.SemanticsAction_2097152 = new A.SemanticsAction(2097152);
    B.SemanticsAction_262144 = new A.SemanticsAction(262144);
    B.SemanticsAction_32 = new A.SemanticsAction(32);
    B.SemanticsAction_32768 = new A.SemanticsAction(32768);
    B.SemanticsAction_4 = new A.SemanticsAction(4);
    B.SemanticsAction_4096 = new A.SemanticsAction(4096);
    B.SemanticsAction_512 = new A.SemanticsAction(512);
    B.SemanticsAction_524288 = new A.SemanticsAction(524288);
    B.SemanticsAction_64 = new A.SemanticsAction(64);
    B.SemanticsAction_65536 = new A.SemanticsAction(65536);
    B.SemanticsAction_8 = new A.SemanticsAction(8);
    B.SemanticsAction_8192 = new A.SemanticsAction(8192);
    B.SemanticsFlag_1 = new A.SemanticsFlag(1);
    B.SemanticsFlag_1024 = new A.SemanticsFlag(1024);
    B.SemanticsFlag_1048576 = new A.SemanticsFlag(1048576);
    B.SemanticsFlag_128 = new A.SemanticsFlag(128);
    B.SemanticsFlag_131072 = new A.SemanticsFlag(131072);
    B.SemanticsFlag_16 = new A.SemanticsFlag(16);
    B.SemanticsFlag_16384 = new A.SemanticsFlag(16384);
    B.SemanticsFlag_16777216 = new A.SemanticsFlag(16777216);
    B.SemanticsFlag_2 = new A.SemanticsFlag(2);
    B.SemanticsFlag_2048 = new A.SemanticsFlag(2048);
    B.SemanticsFlag_2097152 = new A.SemanticsFlag(2097152);
    B.SemanticsFlag_256 = new A.SemanticsFlag(256);
    B.SemanticsFlag_262144 = new A.SemanticsFlag(262144);
    B.SemanticsFlag_32 = new A.SemanticsFlag(32);
    B.SemanticsFlag_32768 = new A.SemanticsFlag(32768);
    B.SemanticsFlag_33554432 = new A.SemanticsFlag(33554432);
    B.SemanticsFlag_4 = new A.SemanticsFlag(4);
    B.SemanticsFlag_4096 = new A.SemanticsFlag(4096);
    B.SemanticsFlag_4194304 = new A.SemanticsFlag(4194304);
    B.SemanticsFlag_512 = new A.SemanticsFlag(512);
    B.SemanticsFlag_524288 = new A.SemanticsFlag(524288);
    B.SemanticsFlag_64 = new A.SemanticsFlag(64);
    B.SemanticsFlag_65536 = new A.SemanticsFlag(65536);
    B.SemanticsFlag_8 = new A.SemanticsFlag(8);
    B.SemanticsFlag_8192 = new A.SemanticsFlag(8192);
    B.SemanticsFlag_8388608 = new A.SemanticsFlag(8388608);
    B.SemanticsTag_C6p = new A.SemanticsTag("RenderViewport.twoPane");
    B.SemanticsTag_W8h = new A.SemanticsTag("RenderViewport.excludeFromScrolling");
    B.Set_5pnzk = new A.GeneralConstantSet([B.MaterialState_0], type$.GeneralConstantSet_MaterialState);
    B.Set_YUm3m = new A.GeneralConstantSet([B.MaterialState_1], type$.GeneralConstantSet_MaterialState);
    B.PointerDeviceKind_2 = new A.PointerDeviceKind(2, "stylus");
    B.PointerDeviceKind_3 = new A.PointerDeviceKind(3, "invertedStylus");
    B.PointerDeviceKind_5 = new A.PointerDeviceKind(5, "unknown");
    B.Set_rHjQa = new A.GeneralConstantSet([B.PointerDeviceKind_0, B.PointerDeviceKind_2, B.PointerDeviceKind_3, B.PointerDeviceKind_4, B.PointerDeviceKind_5], A.findType("GeneralConstantSet<PointerDeviceKind>"));
    B.Set_tKVu2 = new A.GeneralConstantSet([B.MaterialState_2], type$.GeneralConstantSet_MaterialState);
    B.ShowValueIndicator_0 = new A.ShowValueIndicator(0, "onlyForDiscrete");
    B.LogicalKeyboardKey_98 = new A.LogicalKeyboardKey(98);
    B.SingleActivator_0ap = new A.SingleActivator(B.LogicalKeyboardKey_98, true, false, false, false);
    B.LogicalKeyboardKey_99 = new A.LogicalKeyboardKey(99);
    B.SingleActivator_1p3 = new A.SingleActivator(B.LogicalKeyboardKey_99, false, false, false, true);
    B.LogicalKeyboardKey_122 = new A.LogicalKeyboardKey(122);
    B.SingleActivator_5iO = new A.SingleActivator(B.LogicalKeyboardKey_122, true, false, false, false);
    B.LogicalKeyboardKey_120 = new A.LogicalKeyboardKey(120);
    B.SingleActivator_8aV = new A.SingleActivator(B.LogicalKeyboardKey_120, true, false, false, false);
    B.SingleActivator_FII4 = new A.SingleActivator(B.LogicalKeyboardKey_4294968065, true, true, false, false);
    B.SingleActivator_FII3 = new A.SingleActivator(B.LogicalKeyboardKey_4294968068, true, true, false, false);
    B.SingleActivator_FII0 = new A.SingleActivator(B.LogicalKeyboardKey_4294968069, true, true, false, false);
    B.SingleActivator_FII = new A.SingleActivator(B.LogicalKeyboardKey_4294968070, true, true, false, false);
    B.LogicalKeyboardKey_97 = new A.LogicalKeyboardKey(97);
    B.SingleActivator_G6H = new A.SingleActivator(B.LogicalKeyboardKey_97, true, false, false, false);
    B.LogicalKeyboardKey_112 = new A.LogicalKeyboardKey(112);
    B.SingleActivator_GkS = new A.SingleActivator(B.LogicalKeyboardKey_112, true, false, false, false);
    B.LogicalKeyboardKey_116 = new A.LogicalKeyboardKey(116);
    B.SingleActivator_I2d = new A.SingleActivator(B.LogicalKeyboardKey_116, true, false, false, false);
    B.SingleActivator_JVg = new A.SingleActivator(B.LogicalKeyboardKey_97, false, false, false, true);
    B.SingleActivator_QVR = new A.SingleActivator(B.LogicalKeyboardKey_122, false, true, false, true);
    B.LogicalKeyboardKey_101 = new A.LogicalKeyboardKey(101);
    B.SingleActivator_TUk = new A.SingleActivator(B.LogicalKeyboardKey_101, true, false, false, false);
    B.LogicalKeyboardKey_118 = new A.LogicalKeyboardKey(118);
    B.SingleActivator_UE5 = new A.SingleActivator(B.LogicalKeyboardKey_118, true, false, false, false);
    B.LogicalKeyboardKey_102 = new A.LogicalKeyboardKey(102);
    B.SingleActivator_Y3d = new A.SingleActivator(B.LogicalKeyboardKey_102, true, false, false, false);
    B.SingleActivator_YPg = new A.SingleActivator(B.LogicalKeyboardKey_118, false, false, false, true);
    B.SingleActivator_bWD = new A.SingleActivator(B.LogicalKeyboardKey_120, false, false, false, true);
    B.SingleActivator_eXP = new A.SingleActivator(B.LogicalKeyboardKey_122, false, false, false, true);
    B.SingleActivator_fhn4 = new A.SingleActivator(B.LogicalKeyboardKey_4294968065, false, true, false, false);
    B.SingleActivator_fhn1 = new A.SingleActivator(B.LogicalKeyboardKey_4294968066, false, true, false, false);
    B.SingleActivator_fhn2 = new A.SingleActivator(B.LogicalKeyboardKey_4294968067, false, true, false, false);
    B.SingleActivator_fhn3 = new A.SingleActivator(B.LogicalKeyboardKey_4294968068, false, true, false, false);
    B.SingleActivator_hFv = new A.SingleActivator(B.LogicalKeyboardKey_122, true, true, false, false);
    B.SingleActivator_hy52 = new A.SingleActivator(B.LogicalKeyboardKey_4294968065, false, true, true, false);
    B.SingleActivator_hy5 = new A.SingleActivator(B.LogicalKeyboardKey_4294968066, false, true, true, false);
    B.SingleActivator_hy50 = new A.SingleActivator(B.LogicalKeyboardKey_4294968067, false, true, true, false);
    B.SingleActivator_hy51 = new A.SingleActivator(B.LogicalKeyboardKey_4294968068, false, true, true, false);
    B.LogicalKeyboardKey_110 = new A.LogicalKeyboardKey(110);
    B.SingleActivator_iWm = new A.SingleActivator(B.LogicalKeyboardKey_110, true, false, false, false);
    B.SingleActivator_mB42 = new A.SingleActivator(B.LogicalKeyboardKey_4294968065, false, true, false, true);
    B.SingleActivator_mB4 = new A.SingleActivator(B.LogicalKeyboardKey_4294968066, false, true, false, true);
    B.SingleActivator_mB40 = new A.SingleActivator(B.LogicalKeyboardKey_4294968067, false, true, false, true);
    B.SingleActivator_mB41 = new A.SingleActivator(B.LogicalKeyboardKey_4294968068, false, true, false, true);
    B.SingleActivator_pEC = new A.SingleActivator(B.LogicalKeyboardKey_99, true, false, false, false);
    B.Size_100000_100000 = new A.Size(100000, 100000);
    B.Size_18_18 = new A.Size(18, 18);
    B.Size_3840_2160 = new A.Size(3840, 2160);
    B.Size_40_40 = new A.Size(40, 40);
    B.Size_48_48 = new A.Size(48, 48);
    B.Size_64_36 = new A.Size(64, 36);
    B.Size_t5z = new A.Size(1 / 0, 1 / 0);
    B.SizedBox_0_0_null_null = new A.SizedBox(0, 0, null, null);
    B.SliderThemeData_vuK = new A.SliderThemeData(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
    B.SnackBarClosedReason_3 = new A.SnackBarClosedReason(3, "hide");
    B.SnackBarClosedReason_5 = new A.SnackBarClosedReason(5, "timeout");
    B.SnackBarThemeData_aPG = new A.SnackBarThemeData(null, null, null, null, null, null, null, null, null, null, null);
    B.SnapshotMode_0 = new A.SnapshotMode(0, "permissive");
    B.SnapshotMode_1 = new A.SnapshotMode(1, "normal");
    B.SpringType_0 = new A.SpringType(0, "criticallyDamped");
    B.SpringType_1 = new A.SpringType(1, "underDamped");
    B.SpringType_2 = new A.SpringType(2, "overDamped");
    B.StackFit_0 = new A.StackFit(0, "loose");
    B.StackFit_2 = new A.StackFit(2, "passthrough");
    B.StackFrame_Bjm = new A.StackFrame("<asynchronous suspension>", -1, "", "", "", -1, -1, "", "asynchronous suspension");
    B.StackFrame_fqN = new A.StackFrame("...", -1, "", "", "", -1, -1, "", "...");
    B.SwitchThemeData_k3d = new A.SwitchThemeData(null, null, null, null, null, null, null, null);
    B.Symbol_14L = new A.Symbol("_count=");
    B.Symbol_QKO = new A.Symbol("_reentrantlyRemovedListeners=");
    B.Symbol_Uql = new A.Symbol("_notificationCallStackDepth=");
    B.Symbol__count = new A.Symbol("_count");
    B.Symbol__listeners = new A.Symbol("_listeners");
    B.Symbol__notificationCallStackDepth = new A.Symbol("_notificationCallStackDepth");
    B.Symbol__reentrantlyRemovedListeners = new A.Symbol("_reentrantlyRemovedListeners");
    B.Symbol__removeAt = new A.Symbol("_removeAt");
    B.Symbol_wUb = new A.Symbol("_listeners=");
    B.SystemMouseCursor_text = new A.SystemMouseCursor("text");
    B.SystemSoundType_0 = new A.SystemSoundType(0, "click");
    B.SystemSoundType_1 = new A.SystemSoundType(1, "alert");
    B.SystemUiOverlayStyle_JlO = new A.SystemUiOverlayStyle(B.Color_4278190080, null, B.Brightness_1, null, null, B.Brightness_1, B.Brightness_0, null);
    B.SystemUiOverlayStyle_qyr = new A.SystemUiOverlayStyle(B.Color_4278190080, null, B.Brightness_1, null, null, B.Brightness_0, B.Brightness_1, null);
    B.TabBarTheme_Y43 = new A.TabBarTheme(null, null, null, null, null, null, null, null, null, null, null, null);
    B.TapSemanticEvent_tap = new A.TapSemanticEvent("tap");
    B.TextAffinity_0 = new A.TextAffinity(0, "upstream");
    B.TextAffinity_1 = new A.TextAffinity(1, "downstream");
    B.TextButtonThemeData_null = new A.TextButtonThemeData(null);
    B.TextGranularity_0 = new A.TextGranularity(0, "character");
    B.TextGranularity_1 = new A.TextGranularity(1, "word");
    B.TextGranularity_2 = new A.TextGranularity(2, "line");
    B.TextGranularity_3 = new A.TextGranularity(3, "document");
    B.TextLeadingDistribution_0 = new A.TextLeadingDistribution(0, "proportional");
    B.TextOverflow_2 = new A.TextOverflow(2, "ellipsis");
    B.TextOverflow_3 = new A.TextOverflow(3, "visible");
    B.TextPosition_0_TextAffinity_1 = new A.TextPosition(0, B.TextAffinity_1);
    B.TextSelectionHandleType_0 = new A.TextSelectionHandleType(0, "left");
    B.TextSelectionHandleType_1 = new A.TextSelectionHandleType(1, "right");
    B.TextSelectionThemeData_null_null_null = new A.TextSelectionThemeData(null, null, null);
    B.TextStyle_KXJ = new A.TextStyle0(true, null, null, null, null, null, null, B.FontWeight_6, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
    B.TextStyle_Vwu = new A.TextStyle0(true, null, null, null, null, null, 17, B.FontWeight_5, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
    B.TextStyle_YIF = new A.TextStyle0(false, B.CupertinoDynamicColor_ezo, null, ".SF Pro Display", null, null, 21, B.FontWeight_3, null, -0.6, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
    B.Color_3506372608 = new A.Color(3506372608);
    B.TextDecoration_1 = new A.TextDecoration(1);
    B.Color_4294967040 = new A.Color(4294967040);
    B.TextStyle_txm = new A.TextStyle0(true, B.Color_3506372608, null, "monospace", null, null, 48, B.FontWeight_8, null, null, null, null, null, null, null, null, null, B.TextDecoration_1, B.Color_4294967040, B.TextDecorationStyle_1, null, "fallback style; consider putting your text in a Material", null, null, null, null);
    B.TextStyle_6XK = new A.TextStyle0(false, null, null, null, null, null, 112, B.FontWeight_0, null, null, null, B.TextBaseline_1, null, null, null, null, null, null, null, null, null, "dense displayLarge 2014", null, null, null, null);
    B.TextStyle_gJ3 = new A.TextStyle0(false, null, null, null, null, null, 56, B.FontWeight_3, null, null, null, B.TextBaseline_1, null, null, null, null, null, null, null, null, null, "dense displayMedium 2014", null, null, null, null);
    B.TextStyle_0hW = new A.TextStyle0(false, null, null, null, null, null, 45, B.FontWeight_3, null, null, null, B.TextBaseline_1, null, null, null, null, null, null, null, null, null, "dense displaySmall 2014", null, null, null, null);
    B.TextStyle_Ao2 = new A.TextStyle0(false, null, null, null, null, null, 40, B.FontWeight_3, null, null, null, B.TextBaseline_1, null, null, null, null, null, null, null, null, null, "dense headlineLarge 2014", null, null, null, null);
    B.TextStyle_phu = new A.TextStyle0(false, null, null, null, null, null, 34, B.FontWeight_3, null, null, null, B.TextBaseline_1, null, null, null, null, null, null, null, null, null, "dense headlineMedium 2014", null, null, null, null);
    B.TextStyle_bVA = new A.TextStyle0(false, null, null, null, null, null, 24, B.FontWeight_3, null, null, null, B.TextBaseline_1, null, null, null, null, null, null, null, null, null, "dense headlineSmall 2014", null, null, null, null);
    B.TextStyle_4dE = new A.TextStyle0(false, null, null, null, null, null, 21, B.FontWeight_4, null, null, null, B.TextBaseline_1, null, null, null, null, null, null, null, null, null, "dense titleLarge 2014", null, null, null, null);
    B.TextStyle_bb5 = new A.TextStyle0(false, null, null, null, null, null, 17, B.FontWeight_3, null, null, null, B.TextBaseline_1, null, null, null, null, null, null, null, null, null, "dense titleMedium 2014", null, null, null, null);
    B.TextStyle_Fqp = new A.TextStyle0(false, null, null, null, null, null, 15, B.FontWeight_4, null, null, null, B.TextBaseline_1, null, null, null, null, null, null, null, null, null, "dense titleSmall 2014", null, null, null, null);
    B.TextStyle_kp9 = new A.TextStyle0(false, null, null, null, null, null, 15, B.FontWeight_4, null, null, null, B.TextBaseline_1, null, null, null, null, null, null, null, null, null, "dense bodyLarge 2014", null, null, null, null);
    B.TextStyle_b5v = new A.TextStyle0(false, null, null, null, null, null, 15, B.FontWeight_3, null, null, null, B.TextBaseline_1, null, null, null, null, null, null, null, null, null, "dense bodyMedium 2014", null, null, null, null);
    B.TextStyle_WMy = new A.TextStyle0(false, null, null, null, null, null, 13, B.FontWeight_3, null, null, null, B.TextBaseline_1, null, null, null, null, null, null, null, null, null, "dense bodySmall 2014", null, null, null, null);
    B.TextStyle_GBp = new A.TextStyle0(false, null, null, null, null, null, 15, B.FontWeight_4, null, null, null, B.TextBaseline_1, null, null, null, null, null, null, null, null, null, "dense labelLarge 2014", null, null, null, null);
    B.TextStyle_LEc = new A.TextStyle0(false, null, null, null, null, null, 12, B.FontWeight_3, null, null, null, B.TextBaseline_1, null, null, null, null, null, null, null, null, null, "dense labelMedium 2014", null, null, null, null);
    B.TextStyle_Nce = new A.TextStyle0(false, null, null, null, null, null, 11, B.FontWeight_3, null, null, null, B.TextBaseline_1, null, null, null, null, null, null, null, null, null, "dense labelSmall 2014", null, null, null, null);
    B.TextTheme_65B = new A.TextTheme(B.TextStyle_6XK, B.TextStyle_gJ3, B.TextStyle_0hW, B.TextStyle_Ao2, B.TextStyle_phu, B.TextStyle_bVA, B.TextStyle_4dE, B.TextStyle_bb5, B.TextStyle_Fqp, B.TextStyle_kp9, B.TextStyle_b5v, B.TextStyle_WMy, B.TextStyle_GBp, B.TextStyle_LEc, B.TextStyle_Nce);
    B.TextDecoration_0 = new A.TextDecoration(0);
    B.TextStyle_6WW = new A.TextStyle0(true, B.Color_2315255808, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackRedwoodCity displayLarge", null, null, null, null);
    B.TextStyle_c6u = new A.TextStyle0(true, B.Color_2315255808, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackRedwoodCity displayMedium", null, null, null, null);
    B.TextStyle_6WW0 = new A.TextStyle0(true, B.Color_2315255808, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackRedwoodCity displaySmall", null, null, null, null);
    B.TextStyle_ZDf = new A.TextStyle0(true, B.Color_2315255808, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackRedwoodCity headlineLarge", null, null, null, null);
    B.TextStyle_ICz = new A.TextStyle0(true, B.Color_2315255808, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackRedwoodCity headlineMedium", null, null, null, null);
    B.TextStyle_qtn = new A.TextStyle0(true, B.Color_3707764736, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackRedwoodCity headlineSmall", null, null, null, null);
    B.TextStyle_bIe = new A.TextStyle0(true, B.Color_3707764736, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackRedwoodCity titleLarge", null, null, null, null);
    B.TextStyle_82H = new A.TextStyle0(true, B.Color_3707764736, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackRedwoodCity titleMedium", null, null, null, null);
    B.TextStyle_97u = new A.TextStyle0(true, B.Color_4278190080, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackRedwoodCity titleSmall", null, null, null, null);
    B.TextStyle_JwX = new A.TextStyle0(true, B.Color_3707764736, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackRedwoodCity bodyLarge", null, null, null, null);
    B.TextStyle_3Qk = new A.TextStyle0(true, B.Color_3707764736, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackRedwoodCity bodyMedium", null, null, null, null);
    B.TextStyle_l0Q = new A.TextStyle0(true, B.Color_2315255808, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackRedwoodCity bodySmall", null, null, null, null);
    B.TextStyle_BWd = new A.TextStyle0(true, B.Color_3707764736, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackRedwoodCity labelLarge", null, null, null, null);
    B.TextStyle_lvT = new A.TextStyle0(true, B.Color_4278190080, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackRedwoodCity labelMedium", null, null, null, null);
    B.TextStyle_9QK = new A.TextStyle0(true, B.Color_4278190080, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackRedwoodCity labelSmall", null, null, null, null);
    B.TextTheme_9Bw = new A.TextTheme(B.TextStyle_6WW, B.TextStyle_c6u, B.TextStyle_6WW0, B.TextStyle_ZDf, B.TextStyle_ICz, B.TextStyle_qtn, B.TextStyle_bIe, B.TextStyle_82H, B.TextStyle_97u, B.TextStyle_JwX, B.TextStyle_3Qk, B.TextStyle_l0Q, B.TextStyle_BWd, B.TextStyle_lvT, B.TextStyle_9QK);
    B.TextStyle_eDF = new A.TextStyle0(false, null, null, null, null, null, 112, B.FontWeight_0, null, null, null, B.TextBaseline_0, null, null, null, null, null, null, null, null, null, "englishLike displayLarge 2014", null, null, null, null);
    B.TextStyle_h8Q = new A.TextStyle0(false, null, null, null, null, null, 56, B.FontWeight_3, null, null, null, B.TextBaseline_0, null, null, null, null, null, null, null, null, null, "englishLike displayMedium 2014", null, null, null, null);
    B.TextStyle_bMu = new A.TextStyle0(false, null, null, null, null, null, 45, B.FontWeight_3, null, null, null, B.TextBaseline_0, null, null, null, null, null, null, null, null, null, "englishLike displaySmall 2014", null, null, null, null);
    B.TextStyle_eJL = new A.TextStyle0(false, null, null, null, null, null, 40, B.FontWeight_3, null, null, null, B.TextBaseline_0, null, null, null, null, null, null, null, null, null, "englishLike headlineLarge 2014", null, null, null, null);
    B.TextStyle_KnJ = new A.TextStyle0(false, null, null, null, null, null, 34, B.FontWeight_3, null, null, null, B.TextBaseline_0, null, null, null, null, null, null, null, null, null, "englishLike headlineMedium 2014", null, null, null, null);
    B.TextStyle_4Bt = new A.TextStyle0(false, null, null, null, null, null, 24, B.FontWeight_3, null, null, null, B.TextBaseline_0, null, null, null, null, null, null, null, null, null, "englishLike headlineSmall 2014", null, null, null, null);
    B.TextStyle_Hc6 = new A.TextStyle0(false, null, null, null, null, null, 20, B.FontWeight_4, null, null, null, B.TextBaseline_0, null, null, null, null, null, null, null, null, null, "englishLike titleLarge 2014", null, null, null, null);
    B.TextStyle_UdF = new A.TextStyle0(false, null, null, null, null, null, 16, B.FontWeight_3, null, null, null, B.TextBaseline_0, null, null, null, null, null, null, null, null, null, "englishLike titleMedium 2014", null, null, null, null);
    B.TextStyle_2hw = new A.TextStyle0(false, null, null, null, null, null, 14, B.FontWeight_4, null, 0.1, null, B.TextBaseline_0, null, null, null, null, null, null, null, null, null, "englishLike titleSmall 2014", null, null, null, null);
    B.TextStyle_0RP = new A.TextStyle0(false, null, null, null, null, null, 14, B.FontWeight_4, null, null, null, B.TextBaseline_0, null, null, null, null, null, null, null, null, null, "englishLike bodyLarge 2014", null, null, null, null);
    B.TextStyle_0Xx = new A.TextStyle0(false, null, null, null, null, null, 14, B.FontWeight_3, null, null, null, B.TextBaseline_0, null, null, null, null, null, null, null, null, null, "englishLike bodyMedium 2014", null, null, null, null);
    B.TextStyle_4UW = new A.TextStyle0(false, null, null, null, null, null, 12, B.FontWeight_3, null, null, null, B.TextBaseline_0, null, null, null, null, null, null, null, null, null, "englishLike bodySmall 2014", null, null, null, null);
    B.TextStyle_d2u = new A.TextStyle0(false, null, null, null, null, null, 14, B.FontWeight_4, null, null, null, B.TextBaseline_0, null, null, null, null, null, null, null, null, null, "englishLike labelLarge 2014", null, null, null, null);
    B.TextStyle_M3f = new A.TextStyle0(false, null, null, null, null, null, 12, B.FontWeight_3, null, null, null, B.TextBaseline_0, null, null, null, null, null, null, null, null, null, "englishLike labelMedium 2014", null, null, null, null);
    B.TextStyle_lsp = new A.TextStyle0(false, null, null, null, null, null, 10, B.FontWeight_3, null, 1.5, null, B.TextBaseline_0, null, null, null, null, null, null, null, null, null, "englishLike labelSmall 2014", null, null, null, null);
    B.TextTheme_Kqs = new A.TextTheme(B.TextStyle_eDF, B.TextStyle_h8Q, B.TextStyle_bMu, B.TextStyle_eJL, B.TextStyle_KnJ, B.TextStyle_4Bt, B.TextStyle_Hc6, B.TextStyle_UdF, B.TextStyle_2hw, B.TextStyle_0RP, B.TextStyle_0Xx, B.TextStyle_4UW, B.TextStyle_d2u, B.TextStyle_M3f, B.TextStyle_lsp);
    B.List_C5n = makeConstList(["Ubuntu", "Cantarell", "DejaVu Sans", "Liberation Sans", "Arial"], type$.JSArray_String);
    B.TextStyle_Dzh = new A.TextStyle0(true, B.Color_3019898879, null, "Roboto", B.List_C5n, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteHelsinki displayLarge", null, null, null, null);
    B.TextStyle_Wit = new A.TextStyle0(true, B.Color_3019898879, null, "Roboto", B.List_C5n, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteHelsinki displayMedium", null, null, null, null);
    B.TextStyle_zhO = new A.TextStyle0(true, B.Color_3019898879, null, "Roboto", B.List_C5n, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteHelsinki displaySmall", null, null, null, null);
    B.TextStyle_KMh = new A.TextStyle0(true, B.Color_3019898879, null, "Roboto", B.List_C5n, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteHelsinki headlineLarge", null, null, null, null);
    B.TextStyle_Xqs = new A.TextStyle0(true, B.Color_3019898879, null, "Roboto", B.List_C5n, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteHelsinki headlineMedium", null, null, null, null);
    B.TextStyle_BPR = new A.TextStyle0(true, B.Color_4294967295, null, "Roboto", B.List_C5n, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteHelsinki headlineSmall", null, null, null, null);
    B.TextStyle_45q = new A.TextStyle0(true, B.Color_4294967295, null, "Roboto", B.List_C5n, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteHelsinki titleLarge", null, null, null, null);
    B.TextStyle_svI = new A.TextStyle0(true, B.Color_4294967295, null, "Roboto", B.List_C5n, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteHelsinki titleMedium", null, null, null, null);
    B.TextStyle_e8f = new A.TextStyle0(true, B.Color_4294967295, null, "Roboto", B.List_C5n, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteHelsinki titleSmall", null, null, null, null);
    B.TextStyle_yF0 = new A.TextStyle0(true, B.Color_4294967295, null, "Roboto", B.List_C5n, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteHelsinki bodyLarge", null, null, null, null);
    B.TextStyle_jGU = new A.TextStyle0(true, B.Color_4294967295, null, "Roboto", B.List_C5n, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteHelsinki bodyMedium", null, null, null, null);
    B.TextStyle_o4W = new A.TextStyle0(true, B.Color_3019898879, null, "Roboto", B.List_C5n, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteHelsinki bodySmall", null, null, null, null);
    B.TextStyle_kCx = new A.TextStyle0(true, B.Color_4294967295, null, "Roboto", B.List_C5n, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteHelsinki labelLarge", null, null, null, null);
    B.TextStyle_rML = new A.TextStyle0(true, B.Color_4294967295, null, "Roboto", B.List_C5n, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteHelsinki labelMedium", null, null, null, null);
    B.TextStyle_tBD = new A.TextStyle0(true, B.Color_4294967295, null, "Roboto", B.List_C5n, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteHelsinki labelSmall", null, null, null, null);
    B.TextTheme_Ktk = new A.TextTheme(B.TextStyle_Dzh, B.TextStyle_Wit, B.TextStyle_zhO, B.TextStyle_KMh, B.TextStyle_Xqs, B.TextStyle_BPR, B.TextStyle_45q, B.TextStyle_svI, B.TextStyle_e8f, B.TextStyle_yF0, B.TextStyle_jGU, B.TextStyle_o4W, B.TextStyle_kCx, B.TextStyle_rML, B.TextStyle_tBD);
    B.TextStyle_fvP = new A.TextStyle0(false, null, null, null, null, null, 112, B.FontWeight_3, null, null, null, B.TextBaseline_0, null, null, null, null, null, null, null, null, null, "tall displayLarge 2014", null, null, null, null);
    B.TextStyle_vYs = new A.TextStyle0(false, null, null, null, null, null, 56, B.FontWeight_3, null, null, null, B.TextBaseline_0, null, null, null, null, null, null, null, null, null, "tall displayMedium 2014", null, null, null, null);
    B.TextStyle_Aae = new A.TextStyle0(false, null, null, null, null, null, 45, B.FontWeight_3, null, null, null, B.TextBaseline_0, null, null, null, null, null, null, null, null, null, "tall displaySmall 2014", null, null, null, null);
    B.TextStyle_lEH = new A.TextStyle0(false, null, null, null, null, null, 40, B.FontWeight_3, null, null, null, B.TextBaseline_0, null, null, null, null, null, null, null, null, null, "tall headlineLarge 2014", null, null, null, null);
    B.TextStyle_KX8 = new A.TextStyle0(false, null, null, null, null, null, 34, B.FontWeight_3, null, null, null, B.TextBaseline_0, null, null, null, null, null, null, null, null, null, "tall headlineMedium 2014", null, null, null, null);
    B.TextStyle_4kK = new A.TextStyle0(false, null, null, null, null, null, 24, B.FontWeight_3, null, null, null, B.TextBaseline_0, null, null, null, null, null, null, null, null, null, "tall headlineSmall 2014", null, null, null, null);
    B.TextStyle_BjF = new A.TextStyle0(false, null, null, null, null, null, 21, B.FontWeight_6, null, null, null, B.TextBaseline_0, null, null, null, null, null, null, null, null, null, "tall titleLarge 2014", null, null, null, null);
    B.TextStyle_K7s = new A.TextStyle0(false, null, null, null, null, null, 17, B.FontWeight_3, null, null, null, B.TextBaseline_0, null, null, null, null, null, null, null, null, null, "tall titleMedium 2014", null, null, null, null);
    B.TextStyle_pzf = new A.TextStyle0(false, null, null, null, null, null, 15, B.FontWeight_4, null, null, null, B.TextBaseline_0, null, null, null, null, null, null, null, null, null, "tall titleSmall 2014", null, null, null, null);
    B.TextStyle_beL = new A.TextStyle0(false, null, null, null, null, null, 15, B.FontWeight_6, null, null, null, B.TextBaseline_0, null, null, null, null, null, null, null, null, null, "tall bodyLarge 2014", null, null, null, null);
    B.TextStyle_zdJ = new A.TextStyle0(false, null, null, null, null, null, 15, B.FontWeight_3, null, null, null, B.TextBaseline_0, null, null, null, null, null, null, null, null, null, "tall bodyMedium 2014", null, null, null, null);
    B.TextStyle_WFH = new A.TextStyle0(false, null, null, null, null, null, 13, B.FontWeight_3, null, null, null, B.TextBaseline_0, null, null, null, null, null, null, null, null, null, "tall bodySmall 2014", null, null, null, null);
    B.TextStyle_QWI = new A.TextStyle0(false, null, null, null, null, null, 15, B.FontWeight_6, null, null, null, B.TextBaseline_0, null, null, null, null, null, null, null, null, null, "tall labelLarge 2014", null, null, null, null);
    B.TextStyle_zHF = new A.TextStyle0(false, null, null, null, null, null, 12, B.FontWeight_3, null, null, null, B.TextBaseline_0, null, null, null, null, null, null, null, null, null, "tall labelMedium 2014", null, null, null, null);
    B.TextStyle_h2S = new A.TextStyle0(false, null, null, null, null, null, 11, B.FontWeight_3, null, null, null, B.TextBaseline_0, null, null, null, null, null, null, null, null, null, "tall labelSmall 2014", null, null, null, null);
    B.TextTheme_Q2d = new A.TextTheme(B.TextStyle_fvP, B.TextStyle_vYs, B.TextStyle_Aae, B.TextStyle_lEH, B.TextStyle_KX8, B.TextStyle_4kK, B.TextStyle_BjF, B.TextStyle_K7s, B.TextStyle_pzf, B.TextStyle_beL, B.TextStyle_zdJ, B.TextStyle_WFH, B.TextStyle_QWI, B.TextStyle_zHF, B.TextStyle_h2S);
    B.TextStyle_so0 = new A.TextStyle0(true, B.Color_2315255808, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackMountainView displayLarge", null, null, null, null);
    B.TextStyle_RJx = new A.TextStyle0(true, B.Color_2315255808, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackMountainView displayMedium", null, null, null, null);
    B.TextStyle_t2H = new A.TextStyle0(true, B.Color_2315255808, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackMountainView displaySmall", null, null, null, null);
    B.TextStyle_14b = new A.TextStyle0(true, B.Color_2315255808, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackMountainView headlineLarge", null, null, null, null);
    B.TextStyle_7H5 = new A.TextStyle0(true, B.Color_2315255808, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackMountainView headlineMedium", null, null, null, null);
    B.TextStyle_7Sv = new A.TextStyle0(true, B.Color_3707764736, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackMountainView headlineSmall", null, null, null, null);
    B.TextStyle_X22 = new A.TextStyle0(true, B.Color_3707764736, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackMountainView titleLarge", null, null, null, null);
    B.TextStyle_k2M = new A.TextStyle0(true, B.Color_3707764736, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackMountainView titleMedium", null, null, null, null);
    B.TextStyle_JAm = new A.TextStyle0(true, B.Color_4278190080, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackMountainView titleSmall", null, null, null, null);
    B.TextStyle_APy = new A.TextStyle0(true, B.Color_3707764736, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackMountainView bodyLarge", null, null, null, null);
    B.TextStyle_Nhn = new A.TextStyle0(true, B.Color_3707764736, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackMountainView bodyMedium", null, null, null, null);
    B.TextStyle_chw = new A.TextStyle0(true, B.Color_2315255808, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackMountainView bodySmall", null, null, null, null);
    B.TextStyle_DW6 = new A.TextStyle0(true, B.Color_3707764736, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackMountainView labelLarge", null, null, null, null);
    B.TextStyle_v4X = new A.TextStyle0(true, B.Color_4278190080, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackMountainView labelMedium", null, null, null, null);
    B.TextStyle_O2E = new A.TextStyle0(true, B.Color_4278190080, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackMountainView labelSmall", null, null, null, null);
    B.TextTheme_Rhm = new A.TextTheme(B.TextStyle_so0, B.TextStyle_RJx, B.TextStyle_t2H, B.TextStyle_14b, B.TextStyle_7H5, B.TextStyle_7Sv, B.TextStyle_X22, B.TextStyle_k2M, B.TextStyle_JAm, B.TextStyle_APy, B.TextStyle_Nhn, B.TextStyle_chw, B.TextStyle_DW6, B.TextStyle_v4X, B.TextStyle_O2E);
    B.TextStyle_NkT = new A.TextStyle0(true, B.Color_2315255808, null, "Roboto", B.List_C5n, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackHelsinki displayLarge", null, null, null, null);
    B.TextStyle_YJp = new A.TextStyle0(true, B.Color_2315255808, null, "Roboto", B.List_C5n, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackHelsinki displayMedium", null, null, null, null);
    B.TextStyle_bv9 = new A.TextStyle0(true, B.Color_2315255808, null, "Roboto", B.List_C5n, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackHelsinki displaySmall", null, null, null, null);
    B.TextStyle_kyd = new A.TextStyle0(true, B.Color_2315255808, null, "Roboto", B.List_C5n, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackHelsinki headlineLarge", null, null, null, null);
    B.TextStyle_2fJ = new A.TextStyle0(true, B.Color_2315255808, null, "Roboto", B.List_C5n, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackHelsinki headlineMedium", null, null, null, null);
    B.TextStyle_cSi = new A.TextStyle0(true, B.Color_3707764736, null, "Roboto", B.List_C5n, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackHelsinki headlineSmall", null, null, null, null);
    B.TextStyle_zlr = new A.TextStyle0(true, B.Color_3707764736, null, "Roboto", B.List_C5n, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackHelsinki titleLarge", null, null, null, null);
    B.TextStyle_hbg = new A.TextStyle0(true, B.Color_3707764736, null, "Roboto", B.List_C5n, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackHelsinki titleMedium", null, null, null, null);
    B.TextStyle_20O = new A.TextStyle0(true, B.Color_4278190080, null, "Roboto", B.List_C5n, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackHelsinki titleSmall", null, null, null, null);
    B.TextStyle_wRA = new A.TextStyle0(true, B.Color_3707764736, null, "Roboto", B.List_C5n, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackHelsinki bodyLarge", null, null, null, null);
    B.TextStyle_GkO = new A.TextStyle0(true, B.Color_3707764736, null, "Roboto", B.List_C5n, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackHelsinki bodyMedium", null, null, null, null);
    B.TextStyle_Amu = new A.TextStyle0(true, B.Color_2315255808, null, "Roboto", B.List_C5n, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackHelsinki bodySmall", null, null, null, null);
    B.TextStyle_y3w = new A.TextStyle0(true, B.Color_3707764736, null, "Roboto", B.List_C5n, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackHelsinki labelLarge", null, null, null, null);
    B.TextStyle_UZk = new A.TextStyle0(true, B.Color_4278190080, null, "Roboto", B.List_C5n, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackHelsinki labelMedium", null, null, null, null);
    B.TextStyle_yGc = new A.TextStyle0(true, B.Color_4278190080, null, "Roboto", B.List_C5n, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackHelsinki labelSmall", null, null, null, null);
    B.TextTheme_XUI = new A.TextTheme(B.TextStyle_NkT, B.TextStyle_YJp, B.TextStyle_bv9, B.TextStyle_kyd, B.TextStyle_2fJ, B.TextStyle_cSi, B.TextStyle_zlr, B.TextStyle_hbg, B.TextStyle_20O, B.TextStyle_wRA, B.TextStyle_GkO, B.TextStyle_Amu, B.TextStyle_y3w, B.TextStyle_UZk, B.TextStyle_yGc);
    B.TextStyle_GXD = new A.TextStyle0(true, B.Color_3019898879, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteRedmond displayLarge", null, null, null, null);
    B.TextStyle_Sud = new A.TextStyle0(true, B.Color_3019898879, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteRedmond displayMedium", null, null, null, null);
    B.TextStyle_ew6 = new A.TextStyle0(true, B.Color_3019898879, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteRedmond displaySmall", null, null, null, null);
    B.TextStyle_oYW = new A.TextStyle0(true, B.Color_3019898879, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteRedmond headlineLarge", null, null, null, null);
    B.TextStyle_Pq8 = new A.TextStyle0(true, B.Color_3019898879, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteRedmond headlineMedium", null, null, null, null);
    B.TextStyle_QmM = new A.TextStyle0(true, B.Color_4294967295, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteRedmond headlineSmall", null, null, null, null);
    B.TextStyle_i9R = new A.TextStyle0(true, B.Color_4294967295, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteRedmond titleLarge", null, null, null, null);
    B.TextStyle_wUI = new A.TextStyle0(true, B.Color_4294967295, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteRedmond titleMedium", null, null, null, null);
    B.TextStyle_wBF = new A.TextStyle0(true, B.Color_4294967295, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteRedmond titleSmall", null, null, null, null);
    B.TextStyle_sr3 = new A.TextStyle0(true, B.Color_4294967295, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteRedmond bodyLarge", null, null, null, null);
    B.TextStyle_lw1 = new A.TextStyle0(true, B.Color_4294967295, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteRedmond bodyMedium", null, null, null, null);
    B.TextStyle_hnD = new A.TextStyle0(true, B.Color_3019898879, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteRedmond bodySmall", null, null, null, null);
    B.TextStyle_CNR = new A.TextStyle0(true, B.Color_4294967295, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteRedmond labelLarge", null, null, null, null);
    B.TextStyle_QeA = new A.TextStyle0(true, B.Color_4294967295, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteRedmond labelMedium", null, null, null, null);
    B.TextStyle_Fs9 = new A.TextStyle0(true, B.Color_4294967295, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteRedmond labelSmall", null, null, null, null);
    B.TextTheme_Zge = new A.TextTheme(B.TextStyle_GXD, B.TextStyle_Sud, B.TextStyle_ew6, B.TextStyle_oYW, B.TextStyle_Pq8, B.TextStyle_QmM, B.TextStyle_i9R, B.TextStyle_wUI, B.TextStyle_wBF, B.TextStyle_sr3, B.TextStyle_lw1, B.TextStyle_hnD, B.TextStyle_CNR, B.TextStyle_QeA, B.TextStyle_Fs9);
    B.TextStyle_jD4 = new A.TextStyle0(true, B.Color_3019898879, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteMountainView displayLarge", null, null, null, null);
    B.TextStyle_6OP = new A.TextStyle0(true, B.Color_3019898879, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteMountainView displayMedium", null, null, null, null);
    B.TextStyle_1fg = new A.TextStyle0(true, B.Color_3019898879, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteMountainView displaySmall", null, null, null, null);
    B.TextStyle_MEv = new A.TextStyle0(true, B.Color_3019898879, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteMountainView headlineLarge", null, null, null, null);
    B.TextStyle_pE5 = new A.TextStyle0(true, B.Color_3019898879, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteMountainView headlineMedium", null, null, null, null);
    B.TextStyle_U6t = new A.TextStyle0(true, B.Color_4294967295, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteMountainView headlineSmall", null, null, null, null);
    B.TextStyle_7KU = new A.TextStyle0(true, B.Color_4294967295, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteMountainView titleLarge", null, null, null, null);
    B.TextStyle_zpB = new A.TextStyle0(true, B.Color_4294967295, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteMountainView titleMedium", null, null, null, null);
    B.TextStyle_vBu = new A.TextStyle0(true, B.Color_4294967295, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteMountainView titleSmall", null, null, null, null);
    B.TextStyle_yrg = new A.TextStyle0(true, B.Color_4294967295, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteMountainView bodyLarge", null, null, null, null);
    B.TextStyle_OX6 = new A.TextStyle0(true, B.Color_4294967295, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteMountainView bodyMedium", null, null, null, null);
    B.TextStyle_Djg = new A.TextStyle0(true, B.Color_3019898879, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteMountainView bodySmall", null, null, null, null);
    B.TextStyle_dZr = new A.TextStyle0(true, B.Color_4294967295, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteMountainView labelLarge", null, null, null, null);
    B.TextStyle_N3F = new A.TextStyle0(true, B.Color_4294967295, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteMountainView labelMedium", null, null, null, null);
    B.TextStyle_UOd = new A.TextStyle0(true, B.Color_4294967295, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteMountainView labelSmall", null, null, null, null);
    B.TextTheme_bC7 = new A.TextTheme(B.TextStyle_jD4, B.TextStyle_6OP, B.TextStyle_1fg, B.TextStyle_MEv, B.TextStyle_pE5, B.TextStyle_U6t, B.TextStyle_7KU, B.TextStyle_zpB, B.TextStyle_vBu, B.TextStyle_yrg, B.TextStyle_OX6, B.TextStyle_Djg, B.TextStyle_dZr, B.TextStyle_N3F, B.TextStyle_UOd);
    B.TextStyle_TkX = new A.TextStyle0(true, B.Color_3019898879, null, ".SF UI Display", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteCupertino displayLarge", null, null, null, null);
    B.TextStyle_fv5 = new A.TextStyle0(true, B.Color_3019898879, null, ".SF UI Display", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteCupertino displayMedium", null, null, null, null);
    B.TextStyle_o5T = new A.TextStyle0(true, B.Color_3019898879, null, ".SF UI Display", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteCupertino displaySmall", null, null, null, null);
    B.TextStyle_GkM = new A.TextStyle0(true, B.Color_3019898879, null, ".SF UI Display", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteCupertino headlineLarge", null, null, null, null);
    B.TextStyle_15W = new A.TextStyle0(true, B.Color_3019898879, null, ".SF UI Display", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteCupertino headlineMedium", null, null, null, null);
    B.TextStyle_Buq = new A.TextStyle0(true, B.Color_4294967295, null, ".SF UI Display", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteCupertino headlineSmall", null, null, null, null);
    B.TextStyle_n1R = new A.TextStyle0(true, B.Color_4294967295, null, ".SF UI Display", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteCupertino titleLarge", null, null, null, null);
    B.TextStyle_aZH = new A.TextStyle0(true, B.Color_4294967295, null, ".SF UI Text", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteCupertino titleMedium", null, null, null, null);
    B.TextStyle_Zgg = new A.TextStyle0(true, B.Color_4294967295, null, ".SF UI Text", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteCupertino titleSmall", null, null, null, null);
    B.TextStyle_2k4 = new A.TextStyle0(true, B.Color_4294967295, null, ".SF UI Text", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteCupertino bodyLarge", null, null, null, null);
    B.TextStyle_R30 = new A.TextStyle0(true, B.Color_4294967295, null, ".SF UI Text", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteCupertino bodyMedium", null, null, null, null);
    B.TextStyle_H4l = new A.TextStyle0(true, B.Color_3019898879, null, ".SF UI Text", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteCupertino bodySmall", null, null, null, null);
    B.TextStyle_wxi = new A.TextStyle0(true, B.Color_4294967295, null, ".SF UI Text", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteCupertino labelLarge", null, null, null, null);
    B.TextStyle_K5G = new A.TextStyle0(true, B.Color_4294967295, null, ".SF UI Text", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteCupertino labelMedium", null, null, null, null);
    B.TextStyle_fBv = new A.TextStyle0(true, B.Color_4294967295, null, ".SF UI Text", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteCupertino labelSmall", null, null, null, null);
    B.TextTheme_hnv = new A.TextTheme(B.TextStyle_TkX, B.TextStyle_fv5, B.TextStyle_o5T, B.TextStyle_GkM, B.TextStyle_15W, B.TextStyle_Buq, B.TextStyle_n1R, B.TextStyle_aZH, B.TextStyle_Zgg, B.TextStyle_2k4, B.TextStyle_R30, B.TextStyle_H4l, B.TextStyle_wxi, B.TextStyle_K5G, B.TextStyle_fBv);
    B.TextStyle_0nu = new A.TextStyle0(true, B.Color_3019898879, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteRedwoodCity displayLarge", null, null, null, null);
    B.TextStyle_mmc = new A.TextStyle0(true, B.Color_3019898879, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteRedwoodCity displayMedium", null, null, null, null);
    B.TextStyle_0nu0 = new A.TextStyle0(true, B.Color_3019898879, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteRedwoodCity displaySmall", null, null, null, null);
    B.TextStyle_vTK = new A.TextStyle0(true, B.Color_3019898879, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteRedwoodCity headlineLarge", null, null, null, null);
    B.TextStyle_yFn = new A.TextStyle0(true, B.Color_3019898879, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteRedwoodCity headlineMedium", null, null, null, null);
    B.TextStyle_qMi = new A.TextStyle0(true, B.Color_4294967295, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteRedwoodCity headlineSmall", null, null, null, null);
    B.TextStyle_shA = new A.TextStyle0(true, B.Color_4294967295, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteRedwoodCity titleLarge", null, null, null, null);
    B.TextStyle_kSb = new A.TextStyle0(true, B.Color_4294967295, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteRedwoodCity titleMedium", null, null, null, null);
    B.TextStyle_dQr = new A.TextStyle0(true, B.Color_4294967295, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteRedwoodCity titleSmall", null, null, null, null);
    B.TextStyle_sHq = new A.TextStyle0(true, B.Color_4294967295, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteRedwoodCity bodyLarge", null, null, null, null);
    B.TextStyle_yf1 = new A.TextStyle0(true, B.Color_4294967295, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteRedwoodCity bodyMedium", null, null, null, null);
    B.TextStyle_BOb = new A.TextStyle0(true, B.Color_3019898879, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteRedwoodCity bodySmall", null, null, null, null);
    B.TextStyle_R2n = new A.TextStyle0(true, B.Color_4294967295, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteRedwoodCity labelLarge", null, null, null, null);
    B.TextStyle_U7K = new A.TextStyle0(true, B.Color_4294967295, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteRedwoodCity labelMedium", null, null, null, null);
    B.TextStyle_Njs = new A.TextStyle0(true, B.Color_4294967295, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "whiteRedwoodCity labelSmall", null, null, null, null);
    B.TextTheme_mwk = new A.TextTheme(B.TextStyle_0nu, B.TextStyle_mmc, B.TextStyle_0nu0, B.TextStyle_vTK, B.TextStyle_yFn, B.TextStyle_qMi, B.TextStyle_shA, B.TextStyle_kSb, B.TextStyle_dQr, B.TextStyle_sHq, B.TextStyle_yf1, B.TextStyle_BOb, B.TextStyle_R2n, B.TextStyle_U7K, B.TextStyle_Njs);
    B.TextStyle_twy = new A.TextStyle0(true, B.Color_2315255808, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackRedmond displayLarge", null, null, null, null);
    B.TextStyle_bHo = new A.TextStyle0(true, B.Color_2315255808, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackRedmond displayMedium", null, null, null, null);
    B.TextStyle_ynk = new A.TextStyle0(true, B.Color_2315255808, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackRedmond displaySmall", null, null, null, null);
    B.TextStyle_Uc1 = new A.TextStyle0(true, B.Color_2315255808, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackRedmond headlineLarge", null, null, null, null);
    B.TextStyle_X30 = new A.TextStyle0(true, B.Color_2315255808, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackRedmond headlineMedium", null, null, null, null);
    B.TextStyle_Ul8 = new A.TextStyle0(true, B.Color_3707764736, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackRedmond headlineSmall", null, null, null, null);
    B.TextStyle_wwR = new A.TextStyle0(true, B.Color_3707764736, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackRedmond titleLarge", null, null, null, null);
    B.TextStyle_xFT = new A.TextStyle0(true, B.Color_3707764736, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackRedmond titleMedium", null, null, null, null);
    B.TextStyle_j7g = new A.TextStyle0(true, B.Color_4278190080, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackRedmond titleSmall", null, null, null, null);
    B.TextStyle_f5j = new A.TextStyle0(true, B.Color_3707764736, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackRedmond bodyLarge", null, null, null, null);
    B.TextStyle_2YG = new A.TextStyle0(true, B.Color_3707764736, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackRedmond bodyMedium", null, null, null, null);
    B.TextStyle_sRH = new A.TextStyle0(true, B.Color_2315255808, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackRedmond bodySmall", null, null, null, null);
    B.TextStyle_2aY = new A.TextStyle0(true, B.Color_3707764736, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackRedmond labelLarge", null, null, null, null);
    B.TextStyle_8Ct = new A.TextStyle0(true, B.Color_4278190080, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackRedmond labelMedium", null, null, null, null);
    B.TextStyle_xFx = new A.TextStyle0(true, B.Color_4278190080, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackRedmond labelSmall", null, null, null, null);
    B.TextTheme_p9c = new A.TextTheme(B.TextStyle_twy, B.TextStyle_bHo, B.TextStyle_ynk, B.TextStyle_Uc1, B.TextStyle_X30, B.TextStyle_Ul8, B.TextStyle_wwR, B.TextStyle_xFT, B.TextStyle_j7g, B.TextStyle_f5j, B.TextStyle_2YG, B.TextStyle_sRH, B.TextStyle_2aY, B.TextStyle_8Ct, B.TextStyle_xFx);
    B.TextStyle_aZv = new A.TextStyle0(true, B.Color_2315255808, null, ".SF UI Display", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackCupertino displayLarge", null, null, null, null);
    B.TextStyle_Hda = new A.TextStyle0(true, B.Color_2315255808, null, ".SF UI Display", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackCupertino displayMedium", null, null, null, null);
    B.TextStyle_hPO = new A.TextStyle0(true, B.Color_2315255808, null, ".SF UI Display", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackCupertino displaySmall", null, null, null, null);
    B.TextStyle_JhO = new A.TextStyle0(true, B.Color_2315255808, null, ".SF UI Display", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackCupertino headlineLarge", null, null, null, null);
    B.TextStyle_RHO = new A.TextStyle0(true, B.Color_2315255808, null, ".SF UI Display", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackCupertino headlineMedium", null, null, null, null);
    B.TextStyle_TRE = new A.TextStyle0(true, B.Color_3707764736, null, ".SF UI Display", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackCupertino headlineSmall", null, null, null, null);
    B.TextStyle_Kqa = new A.TextStyle0(true, B.Color_3707764736, null, ".SF UI Display", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackCupertino titleLarge", null, null, null, null);
    B.TextStyle_rVo = new A.TextStyle0(true, B.Color_3707764736, null, ".SF UI Text", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackCupertino titleMedium", null, null, null, null);
    B.TextStyle_L0q = new A.TextStyle0(true, B.Color_4278190080, null, ".SF UI Text", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackCupertino titleSmall", null, null, null, null);
    B.TextStyle_yif = new A.TextStyle0(true, B.Color_3707764736, null, ".SF UI Text", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackCupertino bodyLarge", null, null, null, null);
    B.TextStyle_owY = new A.TextStyle0(true, B.Color_3707764736, null, ".SF UI Text", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackCupertino bodyMedium", null, null, null, null);
    B.TextStyle_nb3 = new A.TextStyle0(true, B.Color_2315255808, null, ".SF UI Text", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackCupertino bodySmall", null, null, null, null);
    B.TextStyle_oKI = new A.TextStyle0(true, B.Color_3707764736, null, ".SF UI Text", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackCupertino labelLarge", null, null, null, null);
    B.TextStyle_PqS = new A.TextStyle0(true, B.Color_4278190080, null, ".SF UI Text", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackCupertino labelMedium", null, null, null, null);
    B.TextStyle_3hE = new A.TextStyle0(true, B.Color_4278190080, null, ".SF UI Text", null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_0, null, null, null, "blackCupertino labelSmall", null, null, null, null);
    B.TextTheme_xwF = new A.TextTheme(B.TextStyle_aZv, B.TextStyle_Hda, B.TextStyle_hPO, B.TextStyle_JhO, B.TextStyle_RHO, B.TextStyle_TRE, B.TextStyle_Kqa, B.TextStyle_rVo, B.TextStyle_L0q, B.TextStyle_yif, B.TextStyle_owY, B.TextStyle_nb3, B.TextStyle_oKI, B.TextStyle_PqS, B.TextStyle_3hE);
    B.TextWidthBasis_1 = new A.TextWidthBasis(1, "longestLine");
    B.Text_0OR = new A.Text("ello", null, null, null, null, null, null, null);
    B.Text_4sR = new A.Text("o", null, null, null, null, null, null, null);
    B.Text_B8g = new A.Text("Hello World!", null, null, null, null, null, null, null);
    B.Text_FSA = new A.Text("d", null, null, null, null, null, null, null);
    B.Text_HqU = new A.Text("Button", null, null, null, null, null, null, null);
    B.Text_VXX = new A.Text("!", null, null, null, null, null, null, null);
    B.Text_c2P = new A.Text("H", null, null, null, null, null, null, null);
    B.Text_uKv = new A.Text("r", null, null, null, null, null, null, null);
    B.Text_yvw = new A.Text("W", null, null, null, null, null, null, null);
    B.Text_zSG = new A.Text("l", null, null, null, null, null, null, null);
    B.ThemeMode_0 = new A.ThemeMode(0, "system");
    B.TickerCanceled_null = new A.TickerCanceled(null);
    B.TileMode_0 = new A.TileMode(0, "clamp");
    B.TimePickerThemeData_94M = new A.TimePickerThemeData(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
    B.ToggleButtonsThemeData_F1A = new A.ToggleButtonsThemeData(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
    B.Tolerance_C3A = new A.Tolerance(0.01, 1 / 0);
    B.Tolerance_YtJ = new A.Tolerance(0.001, 0.001);
    B.TooltipThemeData_3xc = new A.TooltipThemeData(null, null, null, null, null, null, null, null, null);
    B.TooltipTriggerMode_1 = new A.TooltipTriggerMode(1, "longPress");
    B.TooltipTriggerMode_2 = new A.TooltipTriggerMode(2, "tap");
    B.TraversalDirection_0 = new A.TraversalDirection(0, "up");
    B.TraversalDirection_1 = new A.TraversalDirection(1, "right");
    B.TraversalDirection_2 = new A.TraversalDirection(2, "down");
    B.TraversalDirection_3 = new A.TraversalDirection(3, "left");
    B.TraversalEdgeBehavior_0 = new A.TraversalEdgeBehavior(0, "closedLoop");
    B.TraversalEdgeBehavior_1 = new A.TraversalEdgeBehavior(1, "leaveFlutterView");
    B.Type_18F = A.typeLiteral("DoNothingAndStopPropagationIntent");
    B.Type_ActivateIntent_2HG = A.typeLiteral("ActivateIntent");
    B.Type_ButtonActivateIntent_VTa = A.typeLiteral("ButtonActivateIntent");
    B.Type_ByteBuffer_rqD = A.typeLiteral("ByteBuffer");
    B.Type_ByteData_9dB = A.typeLiteral("ByteData");
    B.Type_CupertinoLocalizations_xhg = A.typeLiteral("CupertinoLocalizations");
    B.Type_DirectionalFocusIntent_oIa = A.typeLiteral("DirectionalFocusIntent");
    B.Type_DismissIntent_GEb = A.typeLiteral("DismissIntent");
    B.Type_DoNothingIntent_5gX = A.typeLiteral("DoNothingIntent");
    B.Type_DoubleTapGestureRecognizer_V92 = A.typeLiteral("DoubleTapGestureRecognizer");
    B.Type_Float32List_9Kz = A.typeLiteral("Float32List");
    B.Type_Float64List_9Kz = A.typeLiteral("Float64List");
    B.Type_Int16List_s5h = A.typeLiteral("Int16List");
    B.Type_Int32List_O8Z = A.typeLiteral("Int32List");
    B.Type_Int8List_rFV = A.typeLiteral("Int8List");
    B.Type_JSObject_ttY = A.typeLiteral("JSObject");
    B.Type_LabeledGlobalKey_78g = A.typeLiteral("LabeledGlobalKey<State<StatefulWidget>>");
    B.Type_LongPressGestureRecognizer_rMW = A.typeLiteral("LongPressGestureRecognizer");
    B.Type_LookupBoundary_YmL = A.typeLiteral("LookupBoundary");
    B.Type_MaterialLocalizations_nEU = A.typeLiteral("MaterialLocalizations");
    B.Type_NextFocusIntent_OLT = A.typeLiteral("NextFocusIntent");
    B.Type_Object_A4p = A.typeLiteral("Object");
    B.Type_PanGestureRecognizer_9Ie = A.typeLiteral("PanGestureRecognizer");
    B.Type_PreviousFocusIntent_HI0 = A.typeLiteral("PreviousFocusIntent");
    B.Type_PrioritizedIntents_VsX = A.typeLiteral("PrioritizedIntents");
    B.Type_RequestFocusIntent_IGS = A.typeLiteral("RequestFocusIntent");
    B.Type_ScrollIntent_Fx9 = A.typeLiteral("ScrollIntent");
    B.Type_ShapeBorderClipper_uKx = A.typeLiteral("ShapeBorderClipper");
    B.Type_Shortcuts_Qeb = A.typeLiteral("Shortcuts");
    B.Type_String_AXU = A.typeLiteral("String");
    B.Type_TapGestureRecognizer_mu4 = A.typeLiteral("TapGestureRecognizer");
    B.Type_Uint16List_kmP = A.typeLiteral("Uint16List");
    B.Type_Uint32List_kmP = A.typeLiteral("Uint32List");
    B.Type_Uint8ClampedList_04U = A.typeLiteral("Uint8ClampedList");
    B.Type_Uint8List_8Eb = A.typeLiteral("Uint8List");
    B.Type_VoidCallbackIntent_nRY = A.typeLiteral("VoidCallbackIntent");
    B.Type_WidgetsLocalizations_JUU = A.typeLiteral("WidgetsLocalizations");
    B.Type__AdjustSliderIntent_bIn = A.typeLiteral("_AdjustSliderIntent");
    B.Type__AnyTapGestureRecognizer_Cvf = A.typeLiteral("_AnyTapGestureRecognizer");
    B.Type__ModalScopeState_Tgz = A.typeLiteral("_ModalScopeState<@>");
    B.Type__ThumbPressGestureRecognizer_CiA = A.typeLiteral("_ThumbPressGestureRecognizer");
    B.Type__TrackTapGestureRecognizer_YkB = A.typeLiteral("_TrackTapGestureRecognizer");
    B.Type_btT = A.typeLiteral("HorizontalDragGestureRecognizer");
    B.Type_yGg = A.typeLiteral("VerticalDragGestureRecognizer");
    B.UnfocusDisposition_0 = new A.UnfocusDisposition(0, "scope");
    B.UnfocusDisposition_1 = new A.UnfocusDisposition(1, "previouslyFocusedChild");
    B.Utf8Decoder_false = new A.Utf8Decoder(false);
    B.ValueKey_1 = new A.ValueKey(1, type$.ValueKey_int);
    B.ValueKey_2 = new A.ValueKey(2, type$.ValueKey_int);
    B.ValueKey_root = new A.ValueKey("root", A.findType("ValueKey<String>"));
    B.VelocityEstimate_QFj = new A.VelocityEstimate(B.Offset_0_0, 0, B.Duration_0, B.Offset_0_0);
    B.VerticalDirection_0 = new A.VerticalDirection(0, "up");
    B.VerticalDirection_1 = new A.VerticalDirection(1, "down");
    B.ViewPadding_0_0_0_0 = new A.ViewPadding(0, 0, 0, 0);
    B.GestureSettings_null = new A.GestureSettings(null);
    B.List_empty13 = makeConstList([], type$.JSArray_DisplayFeature);
    B.ViewConfiguration_UWa = new A.ViewConfiguration0(null, 1, B.Rect_0_0_0_0, false, B.ViewPadding_0_0_0_0, B.ViewPadding_0_0_0_0, B.ViewPadding_0_0_0_0, B.ViewPadding_0_0_0_0, B.GestureSettings_null, B.List_empty13);
    B.VisualDensity_0_0 = new A.VisualDensity(0, 0);
    B.VisualDensity_m2_m2 = new A.VisualDensity(-2, -2);
    B._AnimationDirection_0 = new A._AnimationDirection(0, "forward");
    B._AnimationDirection_1 = new A._AnimationDirection(1, "reverse");
    B.Color_67108864 = new A.Color(67108864);
    B.List_Color_67108864_Color_0 = makeConstList([B.Color_67108864, B.Color_0], type$.JSArray_Color);
    B._CupertinoEdgeShadowDecoration_Ld8 = new A._CupertinoEdgeShadowDecoration(B.List_Color_67108864_Color_0);
    B._CupertinoEdgeShadowDecoration_null = new A._CupertinoEdgeShadowDecoration(null);
    B._DragState_0 = new A._DragState(0, "ready");
    B._DragState_1 = new A._DragState(1, "possible");
    B._DragState_2 = new A._DragState(2, "accepted");
    B._ElementLifecycle_0 = new A._ElementLifecycle(0, "initial");
    B._ElementLifecycle_1 = new A._ElementLifecycle(1, "active");
    B._ElementLifecycle_2 = new A._ElementLifecycle(2, "inactive");
    B._ElementLifecycle_3 = new A._ElementLifecycle(3, "defunct");
    B._GlowState_0 = new A._GlowState(0, "idle");
    B._GlowState_1 = new A._GlowState(1, "absorb");
    B._GlowState_2 = new A._GlowState(2, "pull");
    B._GlowState_3 = new A._GlowState(3, "recede");
    B._HighlightType_0 = new A._HighlightType(0, "pressed");
    B._HighlightType_1 = new A._HighlightType(1, "hover");
    B._HighlightType_2 = new A._HighlightType(2, "focus");
    B._IconButtonVariant_0 = new A._IconButtonVariant(0, "standard");
    B._MediaQueryAspect_0 = new A._MediaQueryAspect(0, "size");
    B._MediaQueryAspect_10 = new A._MediaQueryAspect(10, "accessibleNavigation");
    B._MediaQueryAspect_12 = new A._MediaQueryAspect(12, "highContrast");
    B._MediaQueryAspect_14 = new A._MediaQueryAspect(14, "boldText");
    B._MediaQueryAspect_15 = new A._MediaQueryAspect(15, "navigationMode");
    B._MediaQueryAspect_16 = new A._MediaQueryAspect(16, "gestureSettings");
    B._MediaQueryAspect_2 = new A._MediaQueryAspect(2, "devicePixelRatio");
    B._MediaQueryAspect_3 = new A._MediaQueryAspect(3, "textScaleFactor");
    B._MediaQueryAspect_4 = new A._MediaQueryAspect(4, "platformBrightness");
    B._MediaQueryAspect_5 = new A._MediaQueryAspect(5, "padding");
    B._MediaQueryAspect_6 = new A._MediaQueryAspect(6, "viewInsets");
    B._MediaQueryAspect_8 = new A._MediaQueryAspect(8, "viewPadding");
    B._MixedEdgeInsets_rAd = new A._MixedEdgeInsets(1 / 0, 1 / 0, 1 / 0, 1 / 0, 1 / 0, 1 / 0);
    B._ModifierSidePair_ModifierKey_0_KeyboardSide_0 = new A._ModifierSidePair(B.ModifierKey_0, B.KeyboardSide_0);
    B.KeyboardSide_1 = new A.KeyboardSide(1, "left");
    B._ModifierSidePair_ModifierKey_0_KeyboardSide_1 = new A._ModifierSidePair(B.ModifierKey_0, B.KeyboardSide_1);
    B.KeyboardSide_2 = new A.KeyboardSide(2, "right");
    B._ModifierSidePair_ModifierKey_0_KeyboardSide_2 = new A._ModifierSidePair(B.ModifierKey_0, B.KeyboardSide_2);
    B._ModifierSidePair_ModifierKey_0_KeyboardSide_3 = new A._ModifierSidePair(B.ModifierKey_0, B.KeyboardSide_3);
    B._ModifierSidePair_ModifierKey_1_KeyboardSide_0 = new A._ModifierSidePair(B.ModifierKey_1, B.KeyboardSide_0);
    B._ModifierSidePair_ModifierKey_1_KeyboardSide_1 = new A._ModifierSidePair(B.ModifierKey_1, B.KeyboardSide_1);
    B._ModifierSidePair_ModifierKey_1_KeyboardSide_2 = new A._ModifierSidePair(B.ModifierKey_1, B.KeyboardSide_2);
    B._ModifierSidePair_ModifierKey_1_KeyboardSide_3 = new A._ModifierSidePair(B.ModifierKey_1, B.KeyboardSide_3);
    B._ModifierSidePair_ModifierKey_2_KeyboardSide_0 = new A._ModifierSidePair(B.ModifierKey_2, B.KeyboardSide_0);
    B._ModifierSidePair_ModifierKey_2_KeyboardSide_1 = new A._ModifierSidePair(B.ModifierKey_2, B.KeyboardSide_1);
    B._ModifierSidePair_ModifierKey_2_KeyboardSide_2 = new A._ModifierSidePair(B.ModifierKey_2, B.KeyboardSide_2);
    B._ModifierSidePair_ModifierKey_2_KeyboardSide_3 = new A._ModifierSidePair(B.ModifierKey_2, B.KeyboardSide_3);
    B._ModifierSidePair_ModifierKey_3_KeyboardSide_0 = new A._ModifierSidePair(B.ModifierKey_3, B.KeyboardSide_0);
    B._ModifierSidePair_ModifierKey_3_KeyboardSide_1 = new A._ModifierSidePair(B.ModifierKey_3, B.KeyboardSide_1);
    B._ModifierSidePair_ModifierKey_3_KeyboardSide_2 = new A._ModifierSidePair(B.ModifierKey_3, B.KeyboardSide_2);
    B._ModifierSidePair_ModifierKey_3_KeyboardSide_3 = new A._ModifierSidePair(B.ModifierKey_3, B.KeyboardSide_3);
    B._ModifierSidePair_ModifierKey_4_KeyboardSide_3 = new A._ModifierSidePair(B.ModifierKey_4, B.KeyboardSide_3);
    B._ModifierSidePair_ModifierKey_5_KeyboardSide_3 = new A._ModifierSidePair(B.ModifierKey_5, B.KeyboardSide_3);
    B._ModifierSidePair_ModifierKey_6_KeyboardSide_3 = new A._ModifierSidePair(B.ModifierKey_6, B.KeyboardSide_3);
    B._ModifierSidePair_ModifierKey_7_KeyboardSide_3 = new A._ModifierSidePair(B.ModifierKey_7, B.KeyboardSide_3);
    B._NullWidget_null0 = new A._NullWidget(null);
    B._NullWidget_null = new A._NullWidget1(null);
    B._RouteLifecycle_1 = new A._RouteLifecycle(1, "add");
    B._RouteLifecycle_10 = new A._RouteLifecycle(10, "remove");
    B._RouteLifecycle_11 = new A._RouteLifecycle(11, "popping");
    B._RouteLifecycle_12 = new A._RouteLifecycle(12, "removing");
    B._RouteLifecycle_13 = new A._RouteLifecycle(13, "dispose");
    B._RouteLifecycle_14 = new A._RouteLifecycle(14, "disposed");
    B._RouteLifecycle_2 = new A._RouteLifecycle(2, "adding");
    B._RouteLifecycle_3 = new A._RouteLifecycle(3, "push");
    B._RouteLifecycle_4 = new A._RouteLifecycle(4, "pushReplace");
    B._RouteLifecycle_5 = new A._RouteLifecycle(5, "pushing");
    B._RouteLifecycle_6 = new A._RouteLifecycle(6, "replace");
    B._RouteLifecycle_7 = new A._RouteLifecycle(7, "idle");
    B._RouteLifecycle_8 = new A._RouteLifecycle(8, "pop");
    B._ScaffoldSlot_0 = new A._ScaffoldSlot(0, "body");
    B._ScaffoldSlot_1 = new A._ScaffoldSlot(1, "appBar");
    B._ScaffoldSlot_10 = new A._ScaffoldSlot(10, "endDrawer");
    B._ScaffoldSlot_11 = new A._ScaffoldSlot(11, "statusBar");
    B._ScaffoldSlot_2 = new A._ScaffoldSlot(2, "bodyScrim");
    B._ScaffoldSlot_3 = new A._ScaffoldSlot(3, "bottomSheet");
    B._ScaffoldSlot_4 = new A._ScaffoldSlot(4, "snackBar");
    B._ScaffoldSlot_5 = new A._ScaffoldSlot(5, "materialBanner");
    B._ScaffoldSlot_6 = new A._ScaffoldSlot(6, "persistentFooter");
    B._ScaffoldSlot_7 = new A._ScaffoldSlot(7, "bottomNavigationBar");
    B._ScaffoldSlot_8 = new A._ScaffoldSlot(8, "floatingActionButton");
    B._ScaffoldSlot_9 = new A._ScaffoldSlot(9, "drawer");
    B._SliderType_0 = new A._SliderType(0, "material");
    B._StretchDirection_0 = new A._StretchDirection(0, "trailing");
    B._StretchDirection_1 = new A._StretchDirection(1, "leading");
    B._StretchState_0 = new A._StretchState(0, "idle");
    B._StretchState_1 = new A._StretchState(1, "absorb");
    B._StretchState_2 = new A._StretchState(2, "pull");
    B._StretchState_3 = new A._StretchState(3, "recede");
    B._StringStackTrace_OdL = new A._StringStackTrace("");
    B._TextThemeDefaultsBuilder_j4P = new A._TextThemeDefaultsBuilder(B.CupertinoDynamicColor_ezo, B.CupertinoDynamicColor_JHz);
    B._ToolbarSlot_0 = new A._ToolbarSlot(0, "leading");
    B._ToolbarSlot_1 = new A._ToolbarSlot(1, "middle");
    B._ToolbarSlot_2 = new A._ToolbarSlot(2, "trailing");
    B._TrainHoppingMode_0 = new A._TrainHoppingMode(0, "minimize");
    B._TrainHoppingMode_1 = new A._TrainHoppingMode(1, "maximize");
  })();
  (function staticFields() {
    $._JS_INTEROP_INTERCEPTOR_TAG = null;
    $.toStringVisiting = A._setArrayType([], type$.JSArray_Object);
    $.Primitives__identityHashCodeProperty = null;
    $.Primitives_timerFrequency = 0;
    $.Primitives_timerTicks = A._js_helper_Primitives_dateNow$closure();
    $.BoundClosure__receiverFieldNameCache = null;
    $.BoundClosure__interceptorFieldNameCache = null;
    $.getTagFunction = null;
    $.alternateTagFunction = null;
    $.prototypeForTagFunction = null;
    $.dispatchRecordsForInstanceTags = null;
    $.interceptorsForUncacheableTags = null;
    $.initNativeDispatchFlag = null;
    $._nextCallback = null;
    $._lastCallback = null;
    $._lastPriorityCallback = null;
    $._isInCallbackLoop = false;
    $.Zone__current = B.C__RootZone;
    $.PlatformDispatcher__frameCount = 1;
    $.Locale__cachedLocale = null;
    $.Locale__cachedLocaleString = null;
    $.PluginUtilities__forwardCache = A.LinkedHashMap_LinkedHashMap$_empty(type$.Function, A.findType("CallbackHandle?"));
    $.PluginUtilities__backwardCache = A.LinkedHashMap_LinkedHashMap$_empty(A.findType("CallbackHandle"), A.findType("Function?"));
    $._screenWidth = 1024;
    $._screenHeight = 1024;
    $.FlutterError_onError = A.assertions_FlutterError_dumpErrorToConsole$closure();
    $.FlutterError__errorCount = 0;
    $.FlutterError__stackFilters = A._setArrayType([], A.findType("JSArray<StackFilter>"));
    $.LicenseRegistry__collectors = null;
    $._debugPrintedCharacters = 0;
    $._debugPrintCompleter = null;
    $._debugPrintScheduled = false;
    $.GestureBinding__instance = null;
    $.Tooltip__openedTooltips = A._setArrayType([], A.findType("JSArray<TooltipState>"));
    $.TooltipState__mouseIn = A.LinkedHashSet_LinkedHashSet$_empty(A.findType("TooltipState"));
    $.PaintingBinding__instance = null;
    $.RendererBinding__instance = null;
    $.SchedulerBinding__instance = null;
    $.SemanticsBinding__instance = null;
    $.SemanticsNode__lastIdentifier = 0;
    $.ServicesBinding__instance = null;
    $.SystemChrome__pendingStyle = null;
    $.SystemChrome__latestStyle = null;
    $.WidgetsBinding__instance = null;
  })();
  (function lazyInitializers() {
    var _lazyFinal = hunkHelpers.lazyFinal,
      _lazy = hunkHelpers.lazy;
    _lazyFinal($, "DART_CLOSURE_PROPERTY_NAME", "$get$DART_CLOSURE_PROPERTY_NAME", () => A.getIsolateAffinityTag("_$dart_dartClosure"));
    _lazyFinal($, "nullFuture", "$get$nullFuture", () => B.C__RootZone.run$1(new A.nullFuture_closure()));
    _lazyFinal($, "_safeToStringHooks", "$get$_safeToStringHooks", () => A._setArrayType([new J.JSArraySafeToStringHook()], A.findType("JSArray<SafeToStringHook>")));
    _lazyFinal($, "TypeErrorDecoder_noSuchMethodPattern", "$get$TypeErrorDecoder_noSuchMethodPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokeCallErrorOn({
      toString: function() {
        return "$receiver$";
      }
    })));
    _lazyFinal($, "TypeErrorDecoder_notClosurePattern", "$get$TypeErrorDecoder_notClosurePattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokeCallErrorOn({$method$: null,
      toString: function() {
        return "$receiver$";
      }
    })));
    _lazyFinal($, "TypeErrorDecoder_nullCallPattern", "$get$TypeErrorDecoder_nullCallPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokeCallErrorOn(null)));
    _lazyFinal($, "TypeErrorDecoder_nullLiteralCallPattern", "$get$TypeErrorDecoder_nullLiteralCallPattern", () => A.TypeErrorDecoder_extractPattern(function() {
      var $argumentsExpr$ = "$arguments$";
      try {
        null.$method$($argumentsExpr$);
      } catch (e) {
        return e.message;
      }
    }()));
    _lazyFinal($, "TypeErrorDecoder_undefinedCallPattern", "$get$TypeErrorDecoder_undefinedCallPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokeCallErrorOn(void 0)));
    _lazyFinal($, "TypeErrorDecoder_undefinedLiteralCallPattern", "$get$TypeErrorDecoder_undefinedLiteralCallPattern", () => A.TypeErrorDecoder_extractPattern(function() {
      var $argumentsExpr$ = "$arguments$";
      try {
        (void 0).$method$($argumentsExpr$);
      } catch (e) {
        return e.message;
      }
    }()));
    _lazyFinal($, "TypeErrorDecoder_nullPropertyPattern", "$get$TypeErrorDecoder_nullPropertyPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokePropertyErrorOn(null)));
    _lazyFinal($, "TypeErrorDecoder_nullLiteralPropertyPattern", "$get$TypeErrorDecoder_nullLiteralPropertyPattern", () => A.TypeErrorDecoder_extractPattern(function() {
      try {
        null.$method$;
      } catch (e) {
        return e.message;
      }
    }()));
    _lazyFinal($, "TypeErrorDecoder_undefinedPropertyPattern", "$get$TypeErrorDecoder_undefinedPropertyPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokePropertyErrorOn(void 0)));
    _lazyFinal($, "TypeErrorDecoder_undefinedLiteralPropertyPattern", "$get$TypeErrorDecoder_undefinedLiteralPropertyPattern", () => A.TypeErrorDecoder_extractPattern(function() {
      try {
        (void 0).$method$;
      } catch (e) {
        return e.message;
      }
    }()));
    _lazyFinal($, "_AsyncRun__scheduleImmediateClosure", "$get$_AsyncRun__scheduleImmediateClosure", () => A._AsyncRun__initializeScheduleImmediate());
    _lazyFinal($, "Future__nullFuture", "$get$Future__nullFuture", () => type$._Future_void._as($.$get$nullFuture()));
    _lazyFinal($, "_Utf8Decoder__reusableBuffer", "$get$_Utf8Decoder__reusableBuffer", () => A.NativeUint8List_NativeUint8List(4096));
    _lazyFinal($, "_Utf8Decoder__decoder", "$get$_Utf8Decoder__decoder", () => new A._Utf8Decoder__decoder_closure().call$0());
    _lazyFinal($, "_Utf8Decoder__decoderNonfatal", "$get$_Utf8Decoder__decoderNonfatal", () => new A._Utf8Decoder__decoderNonfatal_closure().call$0());
    _lazyFinal($, "_Base64Decoder__inverseAlphabet", "$get$_Base64Decoder__inverseAlphabet", () => A.NativeInt8List__create1(A._ensureNativeList(A._setArrayType([-2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, -2, -2, -2, -2, -2, 62, -2, 62, -2, 63, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -2, -2, -2, -1, -2, -2, -2, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -2, -2, -2, -2, 63, -2, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, -2, -2, -2, -2, -2], type$.JSArray_int))));
    _lazyFinal($, "_Uri__needsNoEncoding", "$get$_Uri__needsNoEncoding", () => A.RegExp_RegExp("^[\\-\\.0-9A-Z_a-z~]*$", false));
    _lazyFinal($, "_hashSeed", "$get$_hashSeed", () => A.objectHashCode(B.Type_Object_A4p));
    _lazyFinal($, "Stopwatch__frequency", "$get$Stopwatch__frequency", () => {
      A.Primitives_initTicker();
      return $.Primitives_timerFrequency;
    });
    _lazyFinal($, "_jsBoxedDartObjectProperty", "$get$_jsBoxedDartObjectProperty", () => Symbol("jsBoxedDartObjectProperty"));
    _lazyFinal($, "Endian_host", "$get$Endian_host", () => A.ByteData_ByteData$view(B.NativeUint16List_methods.get$buffer(A.NativeUint16List__create1(A._ensureNativeList(A._setArrayType([1], type$.JSArray_int)))), 0, null).getInt8(0) === 1 ? B.C_Endian : B.C_Endian0);
    _lazyFinal($, "channelBuffers", "$get$channelBuffers", () => new A.ChannelBuffers(A.LinkedHashMap_LinkedHashMap$_empty(type$.String, A.findType("_Channel"))));
    _lazyFinal($, "Paint__kBlendModeDefault", "$get$Paint__kBlendModeDefault", () => 3);
    _lazyFinal($, "PlatformDispatcher__instance", "$get$PlatformDispatcher__instance", () => {
      var t1 = type$.Object;
      t1 = new A.PlatformDispatcher(A.LinkedHashMap_LinkedHashMap$_empty(t1, A.findType("FlutterView")), A.LinkedHashMap_LinkedHashMap$_empty(t1, A.findType("ViewConfiguration0")), B.C__RootZone, B.C__RootZone, B.C__RootZone, B.Duration_0);
      t1.__PlatformDispatcher__setNeedsReportTimings_A = t1.get$_nativeSetNeedsReportTimings();
      return t1;
    });
    _lazy($, "PlatformDispatcher_frameCallback", "$get$PlatformDispatcher_frameCallback", () => new A.PlatformDispatcher_frameCallback_closure());
    _lazyFinal($, "ParagraphBuilder__whitespace", "$get$ParagraphBuilder__whitespace", () => A.RegExp_RegExp("\\s+", false));
    _lazyFinal($, "window", "$get$window", () => {
      var t2, t3, t4, previousConfiguration, t5, t6, t7, t8, t9,
        t1 = $.$get$PlatformDispatcher__instance();
      if (!t1._initialLifecycleStateAccessed)
        t1.__PlatformDispatcher__initialLifecycleState_AI = "resumed";
      t2 = $._screenWidth;
      t3 = $._screenHeight;
      t4 = t1._windowConfigurations;
      previousConfiguration = t4.$index(0, 0);
      if (previousConfiguration == null)
        previousConfiguration = B.ViewConfiguration_UWa;
      t5 = t1.viewData;
      if (!t5.containsKey$1(0))
        t5.$indexSet(0, 0, A.FlutterView$_(0, t1));
      t5 = t5.$index(0, 0);
      t3 = A.Rect$fromLTWH(0, 0, t2, t3);
      t2 = A.ViewPadding$_(0, 0, 0, 0);
      t6 = A.ViewPadding$_(0, 0, 0, 0);
      t7 = A.max(0, 0);
      t8 = A.max(0, 0);
      t7 = A.ViewPadding$_(A.max(0, 0), A.max(0, 0), t8, t7);
      t8 = A.max(0, 0);
      t9 = A.max(0, 0);
      t8 = A.ViewPadding$_(A.max(0, 0), A.max(0, 0), t9, t8);
      t9 = t1._decodeDisplayFeatures$4$bounds$devicePixelRatio$state$type(B.List_empty10, 1, B.List_empty11, B.List_empty11);
      if (t5 == null)
        t5 = previousConfiguration.window;
      t4.$indexSet(0, 0, new A.ViewConfiguration0(t5, 1, t3, false, t6, t2, t8, t7, new A.GestureSettings(0), t9));
      return new A.SingletonFlutterWindow(0, t1);
    });
    _lazyFinal($, "_kFlingSpringDescription", "$get$_kFlingSpringDescription", () => A.SpringDescription$withDampingRatio(1, 1, 500));
    _lazyFinal($, "_kRightMiddleTween", "$get$_kRightMiddleTween", () => A.Tween$(B.Offset_1_0, B.Offset_0_0, type$.Offset));
    _lazyFinal($, "_kMiddleLeftTween", "$get$_kMiddleLeftTween", () => A.Tween$(B.Offset_0_0, B.Offset_NuK, type$.Offset));
    _lazy($, "_CupertinoEdgeShadowDecoration_kTween", "$get$_CupertinoEdgeShadowDecoration_kTween", () => new A.DecorationTween(B._CupertinoEdgeShadowDecoration_null, B._CupertinoEdgeShadowDecoration_Ld8));
    _lazyFinal($, "_testPlatform", "$get$_testPlatform", () => new A._testPlatform_closure().call$0());
    _lazyFinal($, "_browserPlatform", "$get$_browserPlatform", () => new A._browserPlatform_closure().call$0());
    _lazyFinal($, "ChangeNotifier__emptyListeners", "$get$ChangeNotifier__emptyListeners", () => A.List_List$filled(0, null, false, type$.nullable_void_Function));
    _lazyFinal($, "_CompressedNode_empty", "$get$_CompressedNode_empty", () => new A._CompressedNode(0, $.$get$_CompressedNode__emptyArray()));
    _lazyFinal($, "_CompressedNode__emptyArray", "$get$_CompressedNode__emptyArray", () => A._makeArray(0));
    _lazyFinal($, "_debugPrintBuffer", "$get$_debugPrintBuffer", () => A.ListQueue$(null, type$.String));
    _lazyFinal($, "_debugPrintStopwatch", "$get$_debugPrintStopwatch", () => A.Stopwatch$());
    _lazyFinal($, "WriteBuffer__zeroBuffer", "$get$WriteBuffer__zeroBuffer", () => A.NativeUint8List_NativeUint8List(8));
    _lazyFinal($, "StackFrame__webNonDebugFramePattern", "$get$StackFrame__webNonDebugFramePattern", () => A.RegExp_RegExp("^\\s*at ([^\\s]+).*$", false));
    _lazyFinal($, "_ScalingFabMotionAnimator__rotationTween", "$get$_ScalingFabMotionAnimator__rotationTween", () => A.Tween$(0.75, 1, type$.double));
    _lazyFinal($, "_ScalingFabMotionAnimator__thresholdCenterTween", "$get$_ScalingFabMotionAnimator__thresholdCenterTween", () => A.CurveTween$(B.C_Threshold));
    _lazyFinal($, "InkRipple__easeCurveTween", "$get$InkRipple__easeCurveTween", () => A.CurveTween$(B.Cubic_glB));
    _lazyFinal($, "InkRipple__fadeOutIntervalTween", "$get$InkRipple__fadeOutIntervalTween", () => A.CurveTween$(B.Interval_Lo0));
    _lazyFinal($, "_ZoomPageTransition_fastOutExtraSlowInTweenSequenceItems", "$get$_ZoomPageTransition_fastOutExtraSlowInTweenSequenceItems", () => {
      var t1 = type$.double;
      return A._setArrayType([A.TweenSequenceItem$(A.Tween$(0, 0.4, t1).chain$1(A.CurveTween$(B.Cubic_Df6)), 0.166666, t1), A.TweenSequenceItem$(A.Tween$(0.4, 1, t1).chain$1(A.CurveTween$(B.Cubic_eOY)), 0.833334, t1)], A.findType("JSArray<TweenSequenceItem<double>>"));
    });
    _lazyFinal($, "_ZoomPageTransition__scaleCurveSequence", "$get$_ZoomPageTransition__scaleCurveSequence", () => A.TweenSequence$($.$get$_ZoomPageTransition_fastOutExtraSlowInTweenSequenceItems(), type$.double));
    _lazyFinal($, "_ZoomEnterTransitionState__fadeInTransition", "$get$_ZoomEnterTransitionState__fadeInTransition", () => A.Tween$(0, 1, type$.double).chain$1(A.CurveTween$(B.Interval_f2e)));
    _lazyFinal($, "_ZoomEnterTransitionState__scaleDownTransition", "$get$_ZoomEnterTransitionState__scaleDownTransition", () => A.Tween$(1.1, 1, type$.double).chain$1($.$get$_ZoomPageTransition__scaleCurveSequence()));
    _lazyFinal($, "_ZoomEnterTransitionState__scaleUpTransition", "$get$_ZoomEnterTransitionState__scaleUpTransition", () => A.Tween$(0.85, 1, type$.double).chain$1($.$get$_ZoomPageTransition__scaleCurveSequence()));
    _lazyFinal($, "_ZoomEnterTransitionState__scrimOpacityTween", "$get$_ZoomEnterTransitionState__scrimOpacityTween", () => A.Tween$(0, 0.6, type$.nullable_double).chain$1(A.CurveTween$(B.Interval_QKl)));
    _lazyFinal($, "_ZoomExitTransitionState__fadeOutTransition", "$get$_ZoomExitTransitionState__fadeOutTransition", () => A.Tween$(1, 0, type$.double).chain$1(A.CurveTween$(B.Interval_ZAo)));
    _lazyFinal($, "_ZoomExitTransitionState__scaleUpTransition", "$get$_ZoomExitTransitionState__scaleUpTransition", () => A.Tween$(1, 1.05, type$.double).chain$1($.$get$_ZoomPageTransition__scaleCurveSequence()));
    _lazyFinal($, "_ZoomExitTransitionState__scaleDownTransition", "$get$_ZoomExitTransitionState__scaleDownTransition", () => A.Tween$(1, 0.9, type$.double).chain$1($.$get$_ZoomPageTransition__scaleCurveSequence()));
    _lazyFinal($, "_CircularProgressIndicatorState__strokeHeadTween", "$get$_CircularProgressIndicatorState__strokeHeadTween", () => A.CurveTween$(B.Interval_owy).chain$1(A.CurveTween$(B.SawTooth_2222)));
    _lazyFinal($, "_CircularProgressIndicatorState__strokeTailTween", "$get$_CircularProgressIndicatorState__strokeTailTween", () => A.CurveTween$(B.Interval_kwb).chain$1(A.CurveTween$(B.SawTooth_2222)));
    _lazyFinal($, "_CircularProgressIndicatorState__offsetTween", "$get$_CircularProgressIndicatorState__offsetTween", () => A.CurveTween$(B.SawTooth_2222));
    _lazyFinal($, "_CircularProgressIndicatorState__rotationTween", "$get$_CircularProgressIndicatorState__rotationTween", () => A.CurveTween$(B.SawTooth_1333));
    _lazyFinal($, "_FloatingActionButtonTransitionState__entranceTurnTween", "$get$_FloatingActionButtonTransitionState__entranceTurnTween", () => A.Tween$(0.875, 1, type$.double).chain$1(A.CurveTween$(B.Cubic_Pa6)));
    _lazyFinal($, "Theme__kFallbackTheme", "$get$Theme__kFallbackTheme", () => A.ThemeData_ThemeData$fallback());
    _lazyFinal($, "ThemeData__localizedThemeDataCache", "$get$ThemeData__localizedThemeDataCache", () => new A._FifoCache(A.LinkedHashMap_LinkedHashMap$_empty(A.findType("_IdentityThemeDataCacheKey"), type$.ThemeData), 5, A.findType("_FifoCache<_IdentityThemeDataCacheKey,ThemeData>")));
    _lazyFinal($, "MatrixUtils__minMax", "$get$MatrixUtils__minMax", () => A.NativeFloat64List_NativeFloat64List(4));
    _lazy($, "RenderErrorBox_backgroundColor", "$get$RenderErrorBox_backgroundColor", () => B.Color_4039164096);
    _lazy($, "RenderErrorBox_textStyle", "$get$RenderErrorBox_textStyle", () => {
      var _null = null;
      return A.TextStyle$(_null, B.Color_4281348144, _null, _null, _null, _null, "sans-serif", _null, _null, 18, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
    });
    _lazy($, "RenderErrorBox_paragraphStyle", "$get$RenderErrorBox_paragraphStyle", () => {
      var _null = null;
      return A.ParagraphStyle$(_null, _null, _null, _null, _null, _null, _null, _null, _null, B.TextAlign_0, B.TextDirection_1, _null);
    });
    _lazyFinal($, "_SemanticsGeometry__temporaryTransformHolder", "$get$_SemanticsGeometry__temporaryTransformHolder", () => A.Matrix4$zero());
    _lazyFinal($, "RenderParagraph__placeholderCharacter", "$get$RenderParagraph__placeholderCharacter", () => A.String_String$fromCharCode(65532));
    _lazyFinal($, "_transparentPaint", "$get$_transparentPaint", () => {
      var t1 = A.Paint$();
      t1.set$color(B.Color_0);
      return t1;
    });
    _lazyFinal($, "SemanticsNode__kEmptyConfig", "$get$SemanticsNode__kEmptyConfig", () => A.SemanticsConfiguration$());
    _lazyFinal($, "rootBundle", "$get$rootBundle", () => {
      var t1 = type$.String,
        t2 = type$.Future_dynamic;
      return new A.PlatformAssetBundle(A.LinkedHashMap_LinkedHashMap$_empty(t1, A.findType("Future<String>")), A.LinkedHashMap_LinkedHashMap$_empty(t1, t2), A.LinkedHashMap_LinkedHashMap$_empty(t1, t2));
    });
    _lazyFinal($, "KeyboardLockMode__knownLockModes", "$get$KeyboardLockMode__knownLockModes", () => A.LinkedHashMap_LinkedHashMap$_literal([4294967562, B.KeyboardLockMode_s4x, 4294967564, B.KeyboardLockMode_6kv, 4294967556, B.KeyboardLockMode_KMH], type$.int, type$.KeyboardLockMode));
    _lazyFinal($, "RawKeyboard_instance", "$get$RawKeyboard_instance", () => new A.RawKeyboard(A._setArrayType([], A.findType("JSArray<~(RawKeyEvent)>")), A.LinkedHashMap_LinkedHashMap$_empty(type$.PhysicalKeyboardKey, type$.LogicalKeyboardKey)));
    _lazyFinal($, "RawKeyboard__modifierKeyMap", "$get$RawKeyboard__modifierKeyMap", () => {
      var t1 = type$.PhysicalKeyboardKey;
      return A.LinkedHashMap_LinkedHashMap$_literal([B._ModifierSidePair_ModifierKey_2_KeyboardSide_1, A.LinkedHashSet_LinkedHashSet$_literal([B.PhysicalKeyboardKey_458978], t1), B._ModifierSidePair_ModifierKey_2_KeyboardSide_2, A.LinkedHashSet_LinkedHashSet$_literal([B.PhysicalKeyboardKey_458982], t1), B._ModifierSidePair_ModifierKey_2_KeyboardSide_3, A.LinkedHashSet_LinkedHashSet$_literal([B.PhysicalKeyboardKey_458978, B.PhysicalKeyboardKey_458982], t1), B._ModifierSidePair_ModifierKey_2_KeyboardSide_0, A.LinkedHashSet_LinkedHashSet$_literal([B.PhysicalKeyboardKey_458978], t1), B._ModifierSidePair_ModifierKey_1_KeyboardSide_1, A.LinkedHashSet_LinkedHashSet$_literal([B.PhysicalKeyboardKey_458977], t1), B._ModifierSidePair_ModifierKey_1_KeyboardSide_2, A.LinkedHashSet_LinkedHashSet$_literal([B.PhysicalKeyboardKey_458981], t1), B._ModifierSidePair_ModifierKey_1_KeyboardSide_3, A.LinkedHashSet_LinkedHashSet$_literal([B.PhysicalKeyboardKey_458977, B.PhysicalKeyboardKey_458981], t1), B._ModifierSidePair_ModifierKey_1_KeyboardSide_0, A.LinkedHashSet_LinkedHashSet$_literal([B.PhysicalKeyboardKey_458977], t1), B._ModifierSidePair_ModifierKey_0_KeyboardSide_1, A.LinkedHashSet_LinkedHashSet$_literal([B.PhysicalKeyboardKey_458976], t1), B._ModifierSidePair_ModifierKey_0_KeyboardSide_2, A.LinkedHashSet_LinkedHashSet$_literal([B.PhysicalKeyboardKey_458980], t1), B._ModifierSidePair_ModifierKey_0_KeyboardSide_3, A.LinkedHashSet_LinkedHashSet$_literal([B.PhysicalKeyboardKey_458976, B.PhysicalKeyboardKey_458980], t1), B._ModifierSidePair_ModifierKey_0_KeyboardSide_0, A.LinkedHashSet_LinkedHashSet$_literal([B.PhysicalKeyboardKey_458976], t1), B._ModifierSidePair_ModifierKey_3_KeyboardSide_1, A.LinkedHashSet_LinkedHashSet$_literal([B.PhysicalKeyboardKey_458979], t1), B._ModifierSidePair_ModifierKey_3_KeyboardSide_2, A.LinkedHashSet_LinkedHashSet$_literal([B.PhysicalKeyboardKey_458983], t1), B._ModifierSidePair_ModifierKey_3_KeyboardSide_3, A.LinkedHashSet_LinkedHashSet$_literal([B.PhysicalKeyboardKey_458979, B.PhysicalKeyboardKey_458983], t1), B._ModifierSidePair_ModifierKey_3_KeyboardSide_0, A.LinkedHashSet_LinkedHashSet$_literal([B.PhysicalKeyboardKey_458979], t1), B._ModifierSidePair_ModifierKey_4_KeyboardSide_3, A.LinkedHashSet_LinkedHashSet$_literal([B.PhysicalKeyboardKey_458809], t1), B._ModifierSidePair_ModifierKey_5_KeyboardSide_3, A.LinkedHashSet_LinkedHashSet$_literal([B.PhysicalKeyboardKey_458835], t1), B._ModifierSidePair_ModifierKey_6_KeyboardSide_3, A.LinkedHashSet_LinkedHashSet$_literal([B.PhysicalKeyboardKey_458823], t1), B._ModifierSidePair_ModifierKey_7_KeyboardSide_3, A.LinkedHashSet_LinkedHashSet$_literal([B.PhysicalKeyboardKey_18], t1)], A.findType("_ModifierSidePair"), A.findType("Set<PhysicalKeyboardKey>"));
    });
    _lazyFinal($, "RawKeyboard__allModifiersExceptFn", "$get$RawKeyboard__allModifiersExceptFn", () => A.LinkedHashMap_LinkedHashMap$_literal([B.PhysicalKeyboardKey_458978, B.LogicalKeyboardKey_8589934852, B.PhysicalKeyboardKey_458982, B.LogicalKeyboardKey_8589934853, B.PhysicalKeyboardKey_458977, B.LogicalKeyboardKey_8589934850, B.PhysicalKeyboardKey_458981, B.LogicalKeyboardKey_8589934851, B.PhysicalKeyboardKey_458976, B.LogicalKeyboardKey_8589934848, B.PhysicalKeyboardKey_458980, B.LogicalKeyboardKey_8589934849, B.PhysicalKeyboardKey_458979, B.LogicalKeyboardKey_8589934854, B.PhysicalKeyboardKey_458983, B.LogicalKeyboardKey_8589934855, B.PhysicalKeyboardKey_458809, B.LogicalKeyboardKey_4294967556, B.PhysicalKeyboardKey_458835, B.LogicalKeyboardKey_4294967562, B.PhysicalKeyboardKey_458823, B.LogicalKeyboardKey_4294967564], type$.PhysicalKeyboardKey, type$.LogicalKeyboardKey));
    _lazyFinal($, "RawKeyboard__allModifiers", "$get$RawKeyboard__allModifiers", () => {
      var t1 = A.LinkedHashMap_LinkedHashMap$_empty(type$.PhysicalKeyboardKey, type$.LogicalKeyboardKey);
      t1.$indexSet(0, B.PhysicalKeyboardKey_18, B.LogicalKeyboardKey_4294967558);
      t1.addAll$1(0, $.$get$RawKeyboard__allModifiersExceptFn());
      return t1;
    });
    _lazyFinal($, "TextInput__instance", "$get$TextInput__instance", () => {
      var t1 = $.$get$_PlatformTextInputControl_instance();
      t1 = new A.TextInput(t1, A.LinkedHashSet_LinkedHashSet$_literal([t1], A.findType("TextInputControl")), A.LinkedHashMap_LinkedHashMap$_empty(type$.String, A.findType("ScribbleClient")));
      t1.__TextInput__channel_A = B.OptionalMethodChannel_5XR;
      t1.get$_channel().setMethodCallHandler$1(t1.get$_loudlyHandleTextInputInvocation());
      return t1;
    });
    _lazyFinal($, "_PlatformTextInputControl_instance", "$get$_PlatformTextInputControl_instance", () => new A._PlatformTextInputControl());
    _lazy($, "WidgetsApp_defaultActions", "$get$WidgetsApp_defaultActions", () => {
      var t1 = A.findType("~(Action<Intent>)");
      return A.LinkedHashMap_LinkedHashMap$_literal([B.Type_DoNothingIntent_5gX, A.DoNothingAction$(true), B.Type_18F, A.DoNothingAction$(false), B.Type_RequestFocusIntent_IGS, new A.RequestFocusAction(A.ObserverList$(t1)), B.Type_NextFocusIntent_OLT, new A.NextFocusAction(A.ObserverList$(t1)), B.Type_PreviousFocusIntent_HI0, new A.PreviousFocusAction(A.ObserverList$(t1)), B.Type_DirectionalFocusIntent_oIa, new A.DirectionalFocusAction(A.ObserverList$(t1)), B.Type_ScrollIntent_Fx9, A.ScrollAction$(), B.Type_PrioritizedIntents_VsX, new A.PrioritizedAction(A.ObserverList$(t1)), B.Type_VoidCallbackIntent_nRY, new A.VoidCallbackAction(A.ObserverList$(t1))], type$.Type, type$.Action_Intent);
    });
    _lazyFinal($, "DefaultTextEditingShortcuts__commonShortcuts", "$get$DefaultTextEditingShortcuts__commonShortcuts", () => {
      var t3, _i, pressShift,
        t1 = type$.Intent,
        t2 = A.LinkedHashMap_LinkedHashMap$_empty(type$.ShortcutActivator, t1);
      for (t3 = A.findType("SingleActivator"), _i = 0; _i < 2; ++_i) {
        pressShift = B.List_true_false[_i];
        t2.addAll$1(0, A.LinkedHashMap_LinkedHashMap$_literal([A.SingleActivator$(B.LogicalKeyboardKey_4294967304, false, false, false, pressShift), B.C_DeleteCharacterIntent, A.SingleActivator$(B.LogicalKeyboardKey_4294967304, false, true, false, pressShift), B.C_DeleteToNextWordBoundaryIntent, A.SingleActivator$(B.LogicalKeyboardKey_4294967304, true, false, false, pressShift), B.C_DeleteToLineBreakIntent, A.SingleActivator$(B.LogicalKeyboardKey_4294967423, false, false, false, pressShift), B.C_DeleteCharacterIntent0, A.SingleActivator$(B.LogicalKeyboardKey_4294967423, false, true, false, pressShift), B.C_DeleteToNextWordBoundaryIntent0, A.SingleActivator$(B.LogicalKeyboardKey_4294967423, true, false, false, pressShift), B.C_DeleteToLineBreakIntent0], t3, t1));
      }
      t2.$indexSet(0, B.SingleActivator_VNv2, B.C_ExtendSelectionByCharacterIntent);
      t2.$indexSet(0, B.SingleActivator_VNv3, B.C_ExtendSelectionByCharacterIntent0);
      t2.$indexSet(0, B.SingleActivator_VNv4, B.C_ExtendSelectionVerticallyToAdjacentLineIntent);
      t2.$indexSet(0, B.SingleActivator_VNv5, B.C_ExtendSelectionVerticallyToAdjacentLineIntent0);
      t2.$indexSet(0, B.SingleActivator_fhn1, B.C_ExtendSelectionByCharacterIntent1);
      t2.$indexSet(0, B.SingleActivator_fhn2, B.C_ExtendSelectionByCharacterIntent2);
      t2.$indexSet(0, B.SingleActivator_fhn3, B.C_ExtendSelectionVerticallyToAdjacentLineIntent1);
      t2.$indexSet(0, B.SingleActivator_fhn4, B.C_ExtendSelectionVerticallyToAdjacentLineIntent2);
      t2.$indexSet(0, B.SingleActivator_qU4, B.C_ExtendSelectionToLineBreakIntent3);
      t2.$indexSet(0, B.SingleActivator_qU40, B.C_ExtendSelectionToLineBreakIntent4);
      t2.$indexSet(0, B.SingleActivator_qU41, B.C_ExtendSelectionToDocumentBoundaryIntent);
      t2.$indexSet(0, B.SingleActivator_qU42, B.C_ExtendSelectionToDocumentBoundaryIntent0);
      t2.$indexSet(0, B.SingleActivator_hy5, B.C_ExtendSelectionToLineBreakIntent5);
      t2.$indexSet(0, B.SingleActivator_hy50, B.C_ExtendSelectionToLineBreakIntent6);
      t2.$indexSet(0, B.SingleActivator_hy51, B.C_ExtendSelectionToDocumentBoundaryIntent1);
      t2.$indexSet(0, B.SingleActivator_hy52, B.C_ExtendSelectionToDocumentBoundaryIntent2);
      t2.$indexSet(0, B.SingleActivator_iT51, B.C_ExtendSelectionToNextWordBoundaryIntent);
      t2.$indexSet(0, B.SingleActivator_iT52, B.C_ExtendSelectionToNextWordBoundaryIntent0);
      t2.$indexSet(0, B.SingleActivator_FII1, B.C_ExtendSelectionToNextWordBoundaryIntent1);
      t2.$indexSet(0, B.SingleActivator_FII2, B.C_ExtendSelectionToNextWordBoundaryIntent2);
      t2.$indexSet(0, B.SingleActivator_FII3, B.C_ExtendSelectionToNextParagraphBoundaryIntent);
      t2.$indexSet(0, B.SingleActivator_FII4, B.C_ExtendSelectionToNextParagraphBoundaryIntent0);
      t2.$indexSet(0, B.SingleActivator_IdB, B.C_ExtendSelectionVerticallyToAdjacentPageIntent);
      t2.$indexSet(0, B.SingleActivator_VNv, B.C_ExtendSelectionVerticallyToAdjacentPageIntent0);
      t2.$indexSet(0, B.SingleActivator_Ss8, B.C_ExtendSelectionVerticallyToAdjacentPageIntent1);
      t2.$indexSet(0, B.SingleActivator_fhn5, B.C_ExtendSelectionVerticallyToAdjacentPageIntent2);
      t2.$indexSet(0, B.SingleActivator_8aV, B.C_CopySelectionTextIntent);
      t2.$indexSet(0, B.SingleActivator_pEC, B.C_CopySelectionTextIntent0);
      t2.$indexSet(0, B.SingleActivator_UE5, B.C_PasteTextIntent);
      t2.$indexSet(0, B.SingleActivator_G6H, B.C_SelectAllTextIntent);
      t2.$indexSet(0, B.SingleActivator_5iO, B.C_UndoTextIntent);
      t2.$indexSet(0, B.SingleActivator_hFv, B.C_RedoTextIntent);
      t2.$indexSet(0, B.SingleActivator_Gxm, B.C_DoNothingAndStopPropagationTextIntent);
      t2.$indexSet(0, B.SingleActivator_Xuu, B.C_DoNothingAndStopPropagationTextIntent);
      return t2;
    });
    _lazyFinal($, "DefaultTextEditingShortcuts__androidShortcuts", "$get$DefaultTextEditingShortcuts__androidShortcuts", () => $.$get$DefaultTextEditingShortcuts__commonShortcuts());
    _lazyFinal($, "DefaultTextEditingShortcuts__fuchsiaShortcuts", "$get$DefaultTextEditingShortcuts__fuchsiaShortcuts", () => $.$get$DefaultTextEditingShortcuts__androidShortcuts());
    _lazyFinal($, "DefaultTextEditingShortcuts__linuxShortcuts", "$get$DefaultTextEditingShortcuts__linuxShortcuts", () => {
      var t1 = A.LinkedHashMap_LinkedHashMap$of($.$get$DefaultTextEditingShortcuts__commonShortcuts(), type$.ShortcutActivator, type$.Intent);
      t1.$indexSet(0, B.SingleActivator_VNv0, B.C_ExtendSelectionToLineBreakIntent3);
      t1.$indexSet(0, B.SingleActivator_VNv1, B.C_ExtendSelectionToLineBreakIntent4);
      t1.$indexSet(0, B.SingleActivator_fhn, B.C_ExtendSelectionToLineBreakIntent5);
      t1.$indexSet(0, B.SingleActivator_fhn0, B.C_ExtendSelectionToLineBreakIntent6);
      return t1;
    });
    _lazyFinal($, "DefaultTextEditingShortcuts__macShortcuts", "$get$DefaultTextEditingShortcuts__macShortcuts", () => {
      var t3, _i, pressShift,
        t1 = type$.Intent,
        t2 = A.LinkedHashMap_LinkedHashMap$_empty(type$.ShortcutActivator, t1);
      for (t3 = A.findType("SingleActivator"), _i = 0; _i < 2; ++_i) {
        pressShift = B.List_true_false[_i];
        t2.addAll$1(0, A.LinkedHashMap_LinkedHashMap$_literal([A.SingleActivator$(B.LogicalKeyboardKey_4294967304, false, false, false, pressShift), B.C_DeleteCharacterIntent, A.SingleActivator$(B.LogicalKeyboardKey_4294967304, true, false, false, pressShift), B.C_DeleteToNextWordBoundaryIntent, A.SingleActivator$(B.LogicalKeyboardKey_4294967304, false, false, true, pressShift), B.C_DeleteToLineBreakIntent, A.SingleActivator$(B.LogicalKeyboardKey_4294967423, false, false, false, pressShift), B.C_DeleteCharacterIntent0, A.SingleActivator$(B.LogicalKeyboardKey_4294967423, true, false, false, pressShift), B.C_DeleteToNextWordBoundaryIntent0, A.SingleActivator$(B.LogicalKeyboardKey_4294967423, false, false, true, pressShift), B.C_DeleteToLineBreakIntent0], t3, t1));
      }
      t2.$indexSet(0, B.SingleActivator_VNv2, B.C_ExtendSelectionByCharacterIntent);
      t2.$indexSet(0, B.SingleActivator_VNv3, B.C_ExtendSelectionByCharacterIntent0);
      t2.$indexSet(0, B.SingleActivator_VNv4, B.C_ExtendSelectionVerticallyToAdjacentLineIntent);
      t2.$indexSet(0, B.SingleActivator_VNv5, B.C_ExtendSelectionVerticallyToAdjacentLineIntent0);
      t2.$indexSet(0, B.SingleActivator_fhn1, B.C_ExtendSelectionByCharacterIntent1);
      t2.$indexSet(0, B.SingleActivator_fhn2, B.C_ExtendSelectionByCharacterIntent2);
      t2.$indexSet(0, B.SingleActivator_fhn3, B.C_ExtendSelectionVerticallyToAdjacentLineIntent1);
      t2.$indexSet(0, B.SingleActivator_fhn4, B.C_ExtendSelectionVerticallyToAdjacentLineIntent2);
      t2.$indexSet(0, B.SingleActivator_qU4, B.C_ExtendSelectionToNextWordBoundaryIntent);
      t2.$indexSet(0, B.SingleActivator_qU40, B.C_ExtendSelectionToNextWordBoundaryIntent0);
      t2.$indexSet(0, B.SingleActivator_qU41, B.C_ExtendSelectionToLineBreakIntent3);
      t2.$indexSet(0, B.SingleActivator_qU42, B.C_ExtendSelectionToLineBreakIntent4);
      t2.$indexSet(0, B.SingleActivator_hy5, B.C_ExtendSelectionToNextWordBoundaryOrCaretLocationIntent);
      t2.$indexSet(0, B.SingleActivator_hy50, B.C_ExtendSelectionToNextWordBoundaryOrCaretLocationIntent0);
      t2.$indexSet(0, B.SingleActivator_hy51, B.C_ExtendSelectionToNextParagraphBoundaryOrCaretLocationIntent);
      t2.$indexSet(0, B.SingleActivator_hy52, B.C_ExtendSelectionToNextParagraphBoundaryOrCaretLocationIntent0);
      t2.$indexSet(0, B.SingleActivator_nQG, B.C_ExtendSelectionToLineBreakIntent3);
      t2.$indexSet(0, B.SingleActivator_nQG0, B.C_ExtendSelectionToLineBreakIntent4);
      t2.$indexSet(0, B.SingleActivator_nQG1, B.C_ExtendSelectionToDocumentBoundaryIntent);
      t2.$indexSet(0, B.SingleActivator_nQG2, B.C_ExtendSelectionToDocumentBoundaryIntent0);
      t2.$indexSet(0, B.SingleActivator_mB4, B.C_ExpandSelectionToLineBreakIntent);
      t2.$indexSet(0, B.SingleActivator_mB40, B.C_ExpandSelectionToLineBreakIntent0);
      t2.$indexSet(0, B.SingleActivator_mB41, B.C_ExpandSelectionToDocumentBoundaryIntent);
      t2.$indexSet(0, B.SingleActivator_mB42, B.C_ExpandSelectionToDocumentBoundaryIntent0);
      t2.$indexSet(0, B.SingleActivator_I2d, B.C_TransposeCharactersIntent);
      t2.$indexSet(0, B.SingleActivator_VNv0, B.C_ScrollToDocumentBoundaryIntent);
      t2.$indexSet(0, B.SingleActivator_VNv1, B.C_ScrollToDocumentBoundaryIntent0);
      t2.$indexSet(0, B.SingleActivator_fhn, B.C_ExpandSelectionToDocumentBoundaryIntent);
      t2.$indexSet(0, B.SingleActivator_fhn0, B.C_ExpandSelectionToDocumentBoundaryIntent0);
      t2.$indexSet(0, B.SingleActivator_IdB, B.ScrollIntent_aFe);
      t2.$indexSet(0, B.SingleActivator_VNv, B.ScrollIntent_Lhi);
      t2.$indexSet(0, B.SingleActivator_Ss8, B.C_ExtendSelectionVerticallyToAdjacentPageIntent1);
      t2.$indexSet(0, B.SingleActivator_fhn5, B.C_ExtendSelectionVerticallyToAdjacentPageIntent2);
      t2.$indexSet(0, B.SingleActivator_bWD, B.C_CopySelectionTextIntent);
      t2.$indexSet(0, B.SingleActivator_1p3, B.C_CopySelectionTextIntent0);
      t2.$indexSet(0, B.SingleActivator_YPg, B.C_PasteTextIntent);
      t2.$indexSet(0, B.SingleActivator_JVg, B.C_SelectAllTextIntent);
      t2.$indexSet(0, B.SingleActivator_eXP, B.C_UndoTextIntent);
      t2.$indexSet(0, B.SingleActivator_QVR, B.C_RedoTextIntent);
      t2.$indexSet(0, B.SingleActivator_TUk, B.C_ExtendSelectionToLineBreakIntent4);
      t2.$indexSet(0, B.SingleActivator_G6H, B.C_ExtendSelectionToLineBreakIntent3);
      t2.$indexSet(0, B.SingleActivator_Y3d, B.C_ExtendSelectionByCharacterIntent0);
      t2.$indexSet(0, B.SingleActivator_0ap, B.C_ExtendSelectionByCharacterIntent);
      t2.$indexSet(0, B.SingleActivator_iWm, B.C_ExtendSelectionVerticallyToAdjacentLineIntent0);
      t2.$indexSet(0, B.SingleActivator_GkS, B.C_ExtendSelectionVerticallyToAdjacentLineIntent);
      t2.$indexSet(0, B.SingleActivator_Gxm, B.C_DoNothingAndStopPropagationTextIntent);
      t2.$indexSet(0, B.SingleActivator_Xuu, B.C_DoNothingAndStopPropagationTextIntent);
      return t2;
    });
    _lazyFinal($, "DefaultTextEditingShortcuts__iOSShortcuts", "$get$DefaultTextEditingShortcuts__iOSShortcuts", () => $.$get$DefaultTextEditingShortcuts__macShortcuts());
    _lazyFinal($, "DefaultTextEditingShortcuts__windowsShortcuts", "$get$DefaultTextEditingShortcuts__windowsShortcuts", () => {
      var t1 = A.LinkedHashMap_LinkedHashMap$of($.$get$DefaultTextEditingShortcuts__commonShortcuts(), type$.ShortcutActivator, type$.Intent);
      t1.$indexSet(0, B.SingleActivator_IdB, B.C_ExtendSelectionVerticallyToAdjacentPageIntent);
      t1.$indexSet(0, B.SingleActivator_VNv, B.C_ExtendSelectionVerticallyToAdjacentPageIntent0);
      t1.$indexSet(0, B.SingleActivator_VNv0, B.C_ExtendSelectionToLineBreakIntent);
      t1.$indexSet(0, B.SingleActivator_VNv1, B.C_ExtendSelectionToLineBreakIntent0);
      t1.$indexSet(0, B.SingleActivator_fhn, B.C_ExtendSelectionToLineBreakIntent1);
      t1.$indexSet(0, B.SingleActivator_fhn0, B.C_ExtendSelectionToLineBreakIntent2);
      t1.$indexSet(0, B.SingleActivator_iT5, B.C_ExtendSelectionToDocumentBoundaryIntent);
      t1.$indexSet(0, B.SingleActivator_iT50, B.C_ExtendSelectionToDocumentBoundaryIntent0);
      t1.$indexSet(0, B.SingleActivator_FII, B.C_ExtendSelectionToDocumentBoundaryIntent1);
      t1.$indexSet(0, B.SingleActivator_FII0, B.C_ExtendSelectionToDocumentBoundaryIntent2);
      return t1;
    });
    _lazyFinal($, "DefaultTextEditingShortcuts__webDisablingTextShortcuts", "$get$DefaultTextEditingShortcuts__webDisablingTextShortcuts", () => {
      var t3, _i, pressShift,
        t1 = type$.Intent,
        t2 = A.LinkedHashMap_LinkedHashMap$_empty(type$.ShortcutActivator, t1);
      for (t3 = A.findType("SingleActivator"), _i = 0; _i < 2; ++_i) {
        pressShift = B.List_true_false[_i];
        t2.addAll$1(0, A.LinkedHashMap_LinkedHashMap$_literal([A.SingleActivator$(B.LogicalKeyboardKey_4294967304, false, false, false, pressShift), B.C_DoNothingAndStopPropagationTextIntent, A.SingleActivator$(B.LogicalKeyboardKey_4294967423, false, false, false, pressShift), B.C_DoNothingAndStopPropagationTextIntent, A.SingleActivator$(B.LogicalKeyboardKey_4294967304, true, false, false, pressShift), B.C_DoNothingAndStopPropagationTextIntent, A.SingleActivator$(B.LogicalKeyboardKey_4294967423, true, false, false, pressShift), B.C_DoNothingAndStopPropagationTextIntent, A.SingleActivator$(B.LogicalKeyboardKey_4294967304, false, true, false, pressShift), B.C_DoNothingAndStopPropagationTextIntent, A.SingleActivator$(B.LogicalKeyboardKey_4294967423, false, true, false, pressShift), B.C_DoNothingAndStopPropagationTextIntent, A.SingleActivator$(B.LogicalKeyboardKey_4294967304, false, false, true, pressShift), B.C_DoNothingAndStopPropagationTextIntent, A.SingleActivator$(B.LogicalKeyboardKey_4294967423, false, false, true, pressShift), B.C_DoNothingAndStopPropagationTextIntent], t3, t1));
      }
      t2.addAll$1(0, B.Map_2KpG4);
      t2.$indexSet(0, B.SingleActivator_8aV, B.C_DoNothingAndStopPropagationTextIntent);
      t2.$indexSet(0, B.SingleActivator_bWD, B.C_DoNothingAndStopPropagationTextIntent);
      t2.$indexSet(0, B.SingleActivator_pEC, B.C_DoNothingAndStopPropagationTextIntent);
      t2.$indexSet(0, B.SingleActivator_1p3, B.C_DoNothingAndStopPropagationTextIntent);
      t2.$indexSet(0, B.SingleActivator_UE5, B.C_DoNothingAndStopPropagationTextIntent);
      t2.$indexSet(0, B.SingleActivator_YPg, B.C_DoNothingAndStopPropagationTextIntent);
      t2.$indexSet(0, B.SingleActivator_G6H, B.C_DoNothingAndStopPropagationTextIntent);
      t2.$indexSet(0, B.SingleActivator_JVg, B.C_DoNothingAndStopPropagationTextIntent);
      return t2;
    });
    _lazy($, "_NullElement_instance", "$get$_NullElement_instance", () => new A._NullElement(B._NullWidget_null, B._ElementLifecycle_0));
    _lazyFinal($, "_HeroFlight__reverseTween", "$get$_HeroFlight__reverseTween", () => A.Tween$(1, 0, type$.double));
    _lazyFinal($, "NavigatorObserver__navigators", "$get$NavigatorObserver__navigators", () => A.Expando$());
    _lazy($, "_RouteEntry_notAnnounced", "$get$_RouteEntry_notAnnounced", () => {
      var t1 = A.ValueNotifier$(null),
        t2 = A.Completer_Completer(type$.void);
      return new A._NotAnnounced(B.RouteSettings_null_null, t1, t2);
    });
    _lazyFinal($, "_GlowController__crossAxisHalfTime", "$get$_GlowController__crossAxisHalfTime", () => A.Duration$(0, 16667, 0, 0, 0));
    _lazyFinal($, "ScrollPhysics__kDefaultSpring", "$get$ScrollPhysics__kDefaultSpring", () => A.SpringDescription$withDampingRatio(0.5, 1.1, 100));
    _lazyFinal($, "ClampingScrollSimulation__kDecelerationRate", "$get$ClampingScrollSimulation__kDecelerationRate", () => A.log(0.78) / A.log(0.9));
    _lazyFinal($, "random", "$get$random", () => A.Random_Random(0));
  })();
  (function nativeSupport() {
    !function() {
      var intern = function(s) {
        var o = {};
        o[s] = 1;
        return Object.keys(hunkHelpers.convertToFastObject(o))[0];
      };
      init.getIsolateTag = function(name) {
        return intern("___dart_" + name + init.isolateTag);
      };
      var tableProperty = "___dart_isolate_tags_";
      var usedProperties = Object[tableProperty] || (Object[tableProperty] = Object.create(null));
      var rootProperty = "_ZxYxX";
      for (var i = 0;; i++) {
        var property = intern(rootProperty + "_" + i + "_");
        if (!(property in usedProperties)) {
          usedProperties[property] = 1;
          init.isolateTag = property;
          break;
        }
      }
      init.dispatchPropertyName = init.getIsolateTag("dispatch_record");
    }();
    hunkHelpers.setOrUpdateInterceptorsByTag({ArrayBuffer: A.NativeByteBuffer, SharedArrayBuffer: A.NativeByteBuffer, ArrayBufferView: A.NativeTypedData, DataView: A.NativeByteData, Float32Array: A.NativeFloat32List, Float64Array: A.NativeFloat64List, Int16Array: A.NativeInt16List, Int32Array: A.NativeInt32List, Int8Array: A.NativeInt8List, Uint16Array: A.NativeUint16List, Uint32Array: A.NativeUint32List, Uint8ClampedArray: A.NativeUint8ClampedList, CanvasPixelArray: A.NativeUint8ClampedList, Uint8Array: A.NativeUint8List});
    hunkHelpers.setOrUpdateLeafTags({ArrayBuffer: true, SharedArrayBuffer: true, ArrayBufferView: false, DataView: true, Float32Array: true, Float64Array: true, Int16Array: true, Int32Array: true, Int8Array: true, Uint16Array: true, Uint32Array: true, Uint8ClampedArray: true, CanvasPixelArray: true, Uint8Array: false});
    A.NativeTypedArray.$nativeSuperclassTag = "ArrayBufferView";
    A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin.$nativeSuperclassTag = "ArrayBufferView";
    A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin.$nativeSuperclassTag = "ArrayBufferView";
    A.NativeTypedArrayOfDouble.$nativeSuperclassTag = "ArrayBufferView";
    A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin.$nativeSuperclassTag = "ArrayBufferView";
    A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin.$nativeSuperclassTag = "ArrayBufferView";
    A.NativeTypedArrayOfInt.$nativeSuperclassTag = "ArrayBufferView";
  })();
  Function.prototype.call$1 = function(a) {
    return this(a);
  };
  Function.prototype.call$0 = function() {
    return this();
  };
  Function.prototype.call$2 = function(a, b) {
    return this(a, b);
  };
  Function.prototype.call$3 = function(a, b, c) {
    return this(a, b, c);
  };
  Function.prototype.call$4 = function(a, b, c, d) {
    return this(a, b, c, d);
  };
  Function.prototype.call$1$1 = function(a) {
    return this(a);
  };
  Function.prototype.call$1$0 = function() {
    return this();
  };
  Function.prototype.call$2$1 = function(a) {
    return this(a);
  };
  Function.prototype.call$5 = function(a, b, c, d, e) {
    return this(a, b, c, d, e);
  };
  Function.prototype.call$1$2 = function(a, b) {
    return this(a, b);
  };
  Function.prototype.call$1$5 = function(a, b, c, d, e) {
    return this(a, b, c, d, e);
  };
  Function.prototype.call$2$0 = function() {
    return this();
  };
  convertAllToFastObject(holders);
  convertToFastObject($);
  (function(callback) {
    if (typeof document === "undefined") {
      callback(null);
      return;
    }
    if (typeof document.currentScript != "undefined") {
      callback(document.currentScript);
      return;
    }
    var scripts = document.scripts;
    function onLoad(event) {
      for (var i = 0; i < scripts.length; ++i) {
        scripts[i].removeEventListener("load", onLoad, false);
      }
      callback(event.target);
    }
    for (var i = 0; i < scripts.length; ++i) {
      scripts[i].addEventListener("load", onLoad, false);
    }
  })(function(currentScript) {
    init.currentScript = currentScript;
    var callMain = function(args) {
      return A.main(A.convertMainArgumentList(args));
    };
    if (typeof dartMainRunner === "function") {
      dartMainRunner(callMain, []);
    } else {
      callMain([]);
    }
  });
})();

//# sourceMappingURL=flute.complex.dart2js.js.map
